
Gateway.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000055e  00800100  0000697a  00006a0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000697a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013d  0080065e  0080065e  00006f6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00006f6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006f9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005d8  00000000  00000000  00006fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000d517  00000000  00000000  000075b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000024d6  00000000  00000000  00014acb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003f09  00000000  00000000  00016fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001b94  00000000  00000000  0001aeac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bfa  00000000  00000000  0001ca40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00009f5d  00000000  00000000  0001e63a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000620  00000000  00000000  00028597  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	39 c2       	rjmp	.+1138   	; 0x474 <__ctors_end>
       2:	00 00       	nop
       4:	56 c2       	rjmp	.+1196   	; 0x4b2 <__bad_interrupt>
       6:	00 00       	nop
       8:	54 c2       	rjmp	.+1192   	; 0x4b2 <__bad_interrupt>
       a:	00 00       	nop
       c:	52 c2       	rjmp	.+1188   	; 0x4b2 <__bad_interrupt>
       e:	00 00       	nop
      10:	50 c2       	rjmp	.+1184   	; 0x4b2 <__bad_interrupt>
      12:	00 00       	nop
      14:	4e c2       	rjmp	.+1180   	; 0x4b2 <__bad_interrupt>
      16:	00 00       	nop
      18:	4c c2       	rjmp	.+1176   	; 0x4b2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4a c2       	rjmp	.+1172   	; 0x4b2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	48 c2       	rjmp	.+1168   	; 0x4b2 <__bad_interrupt>
      22:	00 00       	nop
      24:	46 c2       	rjmp	.+1164   	; 0x4b2 <__bad_interrupt>
      26:	00 00       	nop
      28:	44 c2       	rjmp	.+1160   	; 0x4b2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	42 c2       	rjmp	.+1156   	; 0x4b2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	40 c2       	rjmp	.+1152   	; 0x4b2 <__bad_interrupt>
      32:	00 00       	nop
      34:	3e c2       	rjmp	.+1148   	; 0x4b2 <__bad_interrupt>
      36:	00 00       	nop
      38:	3c c2       	rjmp	.+1144   	; 0x4b2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3a c2       	rjmp	.+1140   	; 0x4b2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a7 c4       	rjmp	.+2382   	; 0x990 <__vector_16>
      42:	00 00       	nop
      44:	36 c2       	rjmp	.+1132   	; 0x4b2 <__bad_interrupt>
      46:	00 00       	nop
      48:	34 c2       	rjmp	.+1128   	; 0x4b2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	32 c2       	rjmp	.+1124   	; 0x4b2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	30 c2       	rjmp	.+1120   	; 0x4b2 <__bad_interrupt>
      52:	00 00       	nop
      54:	2e c2       	rjmp	.+1116   	; 0x4b2 <__bad_interrupt>
      56:	00 00       	nop
      58:	2c c2       	rjmp	.+1112   	; 0x4b2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2a c2       	rjmp	.+1108   	; 0x4b2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	28 c2       	rjmp	.+1104   	; 0x4b2 <__bad_interrupt>
      62:	00 00       	nop
      64:	26 c2       	rjmp	.+1100   	; 0x4b2 <__bad_interrupt>
      66:	00 00       	nop
      68:	24 c2       	rjmp	.+1096   	; 0x4b2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	22 c2       	rjmp	.+1092   	; 0x4b2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	20 c2       	rjmp	.+1088   	; 0x4b2 <__bad_interrupt>
      72:	00 00       	nop
      74:	1e c2       	rjmp	.+1084   	; 0x4b2 <__bad_interrupt>
      76:	00 00       	nop
      78:	1c c2       	rjmp	.+1080   	; 0x4b2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1a c2       	rjmp	.+1076   	; 0x4b2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	18 c2       	rjmp	.+1072   	; 0x4b2 <__bad_interrupt>
      82:	00 00       	nop
      84:	16 c2       	rjmp	.+1068   	; 0x4b2 <__bad_interrupt>
      86:	00 00       	nop
      88:	14 c2       	rjmp	.+1064   	; 0x4b2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	12 c2       	rjmp	.+1060   	; 0x4b2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	10 c2       	rjmp	.+1056   	; 0x4b2 <__bad_interrupt>
	...

00000094 <__trampolines_end>:
      94:	67 e6       	ldi	r22, 0x67	; 103
      96:	09 6a       	ori	r16, 0xA9	; 169
      98:	85 ae       	std	Z+61, r8	; 0x3d
      9a:	67 bb       	out	0x17, r22	; 23
      9c:	72 f3       	brmi	.-36     	; 0x7a <__SREG__+0x3b>
      9e:	6e 3c       	cpi	r22, 0xCE	; 206
      a0:	3a f5       	brpl	.+78     	; 0xf0 <sha2_large_common_const+0x3c>
      a2:	4f a5       	ldd	r20, Y+47	; 0x2f
      a4:	7f 52       	subi	r23, 0x2F	; 47
      a6:	0e 51       	subi	r16, 0x1E	; 30
      a8:	8c 68       	ori	r24, 0x8C	; 140
      aa:	05 9b       	sbis	0x00, 5	; 0
      ac:	ab d9       	rcall	.-3242   	; 0xfffff404 <__eeprom_end+0xff7ef404>
      ae:	83 1f       	adc	r24, r19
      b0:	19 cd       	rjmp	.-1486   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
      b2:	e0 5b       	subi	r30, 0xB0	; 176

000000b4 <sha2_large_common_const>:
      b4:	22 ae 28 d7 98 2f 8a 42 cd 65 ef 23 91 44 37 71     ".(../.B.e.#.D7q
      c4:	2f 3b 4d ec cf fb c0 b5 bc db 89 81 a5 db b5 e9     /;M.............
      d4:	38 b5 48 f3 5b c2 56 39 19 d0 05 b6 f1 11 f1 59     8.H.[.V9.......Y
      e4:	9b 4f 19 af a4 82 3f 92 18 81 6d da d5 5e 1c ab     .O....?...m..^..
      f4:	42 02 03 a3 98 aa 07 d8 be 6f 70 45 01 5b 83 12     B........opE.[..
     104:	8c b2 e4 4e be 85 31 24 e2 b4 ff d5 c3 7d 0c 55     ...N..1$.....}.U
     114:	6f 89 7b f2 74 5d be 72 b1 96 16 3b fe b1 de 80     o.{.t].r...;....
     124:	35 12 c7 25 a7 06 dc 9b 94 26 69 cf 74 f1 9b c1     5..%.....&i.t...
     134:	d2 4a f1 9e c1 69 9b e4 e3 25 4f 38 86 47 be ef     .J...i...%O8.G..
     144:	b5 d5 8c 8b c6 9d c1 0f 65 9c ac 77 cc a1 0c 24     ........e..w...$
     154:	75 02 2b 59 6f 2c e9 2d 83 e4 a6 6e aa 84 74 4a     u.+Yo,.-...n..tJ
     164:	d4 fb 41 bd dc a9 b0 5c b5 53 11 83 da 88 f9 76     ..A....\.S.....v
     174:	ab df 66 ee 52 51 3e 98 10 32 b4 2d 6d c6 31 a8     ..f.RQ>..2.-m.1.
     184:	3f 21 fb 98 c8 27 03 b0 e4 0e ef be c7 7f 59 bf     ?!...'........Y.
     194:	c2 8f a8 3d f3 0b e0 c6 25 a7 0a 93 47 91 a7 d5     ...=....%...G...
     1a4:	6f 82 03 e0 51 63 ca 06 70 6e 0e 0a 67 29 29 14     o...Qc..pn..g)).
     1b4:	fc 2f d2 46 85 0a b7 27 26 c9 26 5c 38 21 1b 2e     ./.F...'&.&\8!..
     1c4:	ed 2a c4 5a fc 6d 2c 4d df b3 95 9d 13 0d 38 53     .*.Z.m,M......8S
     1d4:	de 63 af 8b 54 73 0a 65 a8 b2 77 3c bb 0a 6a 76     .c..Ts.e..w<..jv
     1e4:	e6 ae ed 47 2e c9 c2 81 3b 35 82 14 85 2c 72 92     ...G....;5...,r.
     1f4:	64 03 f1 4c a1 e8 bf a2 01 30 42 bc 4b 66 1a a8     d..L.....0B.Kf..
     204:	91 97 f8 d0 70 8b 4b c2 30 be 54 06 a3 51 6c c7     ....p.K.0.T..Ql.
     214:	18 52 ef d6 19 e8 92 d1 10 a9 65 55 24 06 99 d6     .R........eU$...
     224:	2a 20 71 57 85 35 0e f4 b8 d1 bb 32 70 a0 6a 10     * qW.5.....2p.j.
     234:	c8 d0 d2 b8 16 c1 a4 19 53 ab 41 51 08 6c 37 1e     ........S.AQ.l7.
     244:	99 eb 8e df 4c 77 48 27 a8 48 9b e1 b5 bc b0 34     ....LwH'.H.....4
     254:	63 5a c9 c5 b3 0c 1c 39 cb 8a 41 e3 4a aa d8 4e     cZ.....9..A.J..N
     264:	73 e3 63 77 4f ca 9c 5b a3 b8 b2 d6 f3 6f 2e 68     s.cwO..[.....o.h
     274:	fc b2 ef 5d ee 82 8f 74 60 2f 17 43 6f 63 a5 78     ...]...t`/.Coc.x
     284:	72 ab f0 a1 14 78 c8 84 ec 39 64 1a 08 02 c7 8c     r....x...9d.....
     294:	28 1e 63 23 fa ff be 90 e9 bd 82 de eb 6c 50 a4     (.c#.........lP.
     2a4:	15 79 c6 b2 f7 a3 f9 be 2b 53 72 e3 f2 78 71 c6     .y......+Sr..xq.
     2b4:	9c 61 26 ea ce 3e 27 ca 07 c2 c0 21 c7 b8 86 d1     .a&..>'....!....
     2c4:	1e eb e0 cd d6 7d da ea 78 d1 6e ee 7f 4f 7d f5     .....}..x.n..O}.
     2d4:	ba 6f 17 72 aa 67 f0 06 a6 98 c8 a2 c5 7d 63 0a     .o.r.g.......}c.
     2e4:	ae 0d f9 be 04 98 3f 11 1b 47 1c 13 35 0b 71 1b     ......?..G..5.q.
     2f4:	84 7d 04 23 f5 77 db 28 93 24 c7 40 7b ab ca 32     .}.#.w.(.$.@{..2
     304:	bc be c9 15 0a be 9e 3c 4c 0d 10 9c c4 67 1d 43     .......<L....g.C
     314:	b6 42 3e cb be d4 c5 4c 2a 7e 65 fc 9c 29 7f 59     .B>....L*~e..).Y
     324:	ec fa d6 3a ab 6f cb 5f 17 58 47 4a 8c 19 44 6c     ...:.o._.XGJ..Dl

00000334 <k>:
     334:	98 2f 8a 42 91 44 37 71 cf fb c0 b5 a5 db b5 e9     ./.B.D7q........
     344:	5b c2 56 39 f1 11 f1 59 a4 82 3f 92 d5 5e 1c ab     [.V9...Y..?..^..
     354:	98 aa 07 d8 01 5b 83 12 be 85 31 24 c3 7d 0c 55     .....[....1$.}.U
     364:	74 5d be 72 fe b1 de 80 a7 06 dc 9b 74 f1 9b c1     t].r........t...
     374:	c1 69 9b e4 86 47 be ef c6 9d c1 0f cc a1 0c 24     .i...G.........$
     384:	6f 2c e9 2d aa 84 74 4a dc a9 b0 5c da 88 f9 76     o,.-..tJ...\...v
     394:	52 51 3e 98 6d c6 31 a8 c8 27 03 b0 c7 7f 59 bf     RQ>.m.1..'....Y.
     3a4:	f3 0b e0 c6 47 91 a7 d5 51 63 ca 06 67 29 29 14     ....G...Qc..g)).
     3b4:	85 0a b7 27 38 21 1b 2e fc 6d 2c 4d 13 0d 38 53     ...'8!...m,M..8S
     3c4:	54 73 0a 65 bb 0a 6a 76 2e c9 c2 81 85 2c 72 92     Ts.e..jv.....,r.
     3d4:	a1 e8 bf a2 4b 66 1a a8 70 8b 4b c2 a3 51 6c c7     ....Kf..p.K..Ql.
     3e4:	19 e8 92 d1 24 06 99 d6 85 35 0e f4 70 a0 6a 10     ....$....5..p.j.
     3f4:	16 c1 a4 19 08 6c 37 1e 4c 77 48 27 b5 bc b0 34     .....l7.LwH'...4
     404:	b3 0c 1c 39 4a aa d8 4e 4f ca 9c 5b f3 6f 2e 68     ...9J..NO..[.o.h
     414:	ee 82 8f 74 6f 63 a5 78 14 78 c8 84 08 02 c7 8c     ...toc.x.x......
     424:	fa ff be 90 eb 6c 50 a4 f7 a3 f9 be f2 78 71 c6     .....lP......xq.

00000434 <sha512_init_values>:
     434:	08 c9 bc f3 67 e6 09 6a 3b a7 ca 84 85 ae 67 bb     ....g..j;.....g.
     444:	2b f8 94 fe 72 f3 6e 3c f1 36 1d 5f 3a f5 4f a5     +...r.n<.6._:.O.
     454:	d1 82 e6 ad 7f 52 0e 51 1f 6c 3e 2b 8c 68 05 9b     .....R.Q.l>+.h..
     464:	6b bd 41 fb ab d9 83 1f 79 21 7e 13 19 cd e0 5b     k.A.....y!~....[

00000474 <__ctors_end>:
     474:	11 24       	eor	r1, r1
     476:	1f be       	out	0x3f, r1	; 63
     478:	cf ef       	ldi	r28, 0xFF	; 255
     47a:	d0 e1       	ldi	r29, 0x10	; 16
     47c:	de bf       	out	0x3e, r29	; 62
     47e:	cd bf       	out	0x3d, r28	; 61

00000480 <__do_copy_data>:
     480:	16 e0       	ldi	r17, 0x06	; 6
     482:	a0 e0       	ldi	r26, 0x00	; 0
     484:	b1 e0       	ldi	r27, 0x01	; 1
     486:	ea e7       	ldi	r30, 0x7A	; 122
     488:	f9 e6       	ldi	r31, 0x69	; 105
     48a:	00 e0       	ldi	r16, 0x00	; 0
     48c:	0b bf       	out	0x3b, r16	; 59
     48e:	02 c0       	rjmp	.+4      	; 0x494 <__do_copy_data+0x14>
     490:	07 90       	elpm	r0, Z+
     492:	0d 92       	st	X+, r0
     494:	ae 35       	cpi	r26, 0x5E	; 94
     496:	b1 07       	cpc	r27, r17
     498:	d9 f7       	brne	.-10     	; 0x490 <__do_copy_data+0x10>

0000049a <__do_clear_bss>:
     49a:	27 e0       	ldi	r18, 0x07	; 7
     49c:	ae e5       	ldi	r26, 0x5E	; 94
     49e:	b6 e0       	ldi	r27, 0x06	; 6
     4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <.do_clear_bss_start>

000004a2 <.do_clear_bss_loop>:
     4a2:	1d 92       	st	X+, r1

000004a4 <.do_clear_bss_start>:
     4a4:	ab 39       	cpi	r26, 0x9B	; 155
     4a6:	b2 07       	cpc	r27, r18
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <.do_clear_bss_loop>
     4aa:	0e 94 59 20 	call	0x40b2	; 0x40b2 <main>
     4ae:	0c 94 bb 34 	jmp	0x6976	; 0x6976 <_exit>

000004b2 <__bad_interrupt>:
     4b2:	a6 cd       	rjmp	.-1204   	; 0x0 <__vectors>

000004b4 <set_page>:
		can_id_t id = {j , 0x00};
		can_send_message(j,id,message,8);
		message = message + 8;
	}
	return 0;
}
     4b4:	20 e1       	ldi	r18, 0x10	; 16
     4b6:	82 9f       	mul	r24, r18
     4b8:	c0 01       	movw	r24, r0
     4ba:	11 24       	eor	r1, r1
     4bc:	88 60       	ori	r24, 0x08	; 8
     4be:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4c2:	08 95       	ret

000004c4 <can_init>:
     4c4:	cf 93       	push	r28
     4c6:	df 93       	push	r29
     4c8:	f8 94       	cli
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     4d0:	84 e3       	ldi	r24, 0x34	; 52
     4d2:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     4d6:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	4d ee       	ldi	r20, 0xED	; 237
     4de:	50 e0       	ldi	r21, 0x00	; 0
     4e0:	cf ee       	ldi	r28, 0xEF	; 239
     4e2:	d0 e0       	ldi	r29, 0x00	; 0
     4e4:	6e ee       	ldi	r22, 0xEE	; 238
     4e6:	70 e0       	ldi	r23, 0x00	; 0
     4e8:	ea ef       	ldi	r30, 0xFA	; 250
     4ea:	f0 e0       	ldi	r31, 0x00	; 0
     4ec:	82 2f       	mov	r24, r18
     4ee:	82 95       	swap	r24
     4f0:	80 7f       	andi	r24, 0xF0	; 240
     4f2:	da 01       	movw	r26, r20
     4f4:	8c 93       	st	X, r24
     4f6:	18 82       	st	Y, r1
     4f8:	db 01       	movw	r26, r22
     4fa:	1c 92       	st	X, r1
     4fc:	88 e0       	ldi	r24, 0x08	; 8
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	10 82       	st	Z, r1
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	e9 f7       	brne	.-6      	; 0x500 <can_init+0x3c>
     506:	2f 5f       	subi	r18, 0xFF	; 255
     508:	2f 30       	cpi	r18, 0x0F	; 15
     50a:	81 f7       	brne	.-32     	; 0x4ec <can_init+0x28>
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     512:	86 e0       	ldi	r24, 0x06	; 6
     514:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     518:	8c e0       	ldi	r24, 0x0C	; 12
     51a:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     51e:	87 e3       	ldi	r24, 0x37	; 55
     520:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     524:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     52e:	78 94       	sei
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	08 95       	ret

00000536 <can_get_message>:
     536:	1f 93       	push	r17
     538:	cf 93       	push	r28
     53a:	df 93       	push	r29
     53c:	18 2f       	mov	r17, r24
     53e:	eb 01       	movw	r28, r22
     540:	b9 df       	rcall	.-142    	; 0x4b4 <set_page>
     542:	20 e1       	ldi	r18, 0x10	; 16
     544:	12 9f       	mul	r17, r18
     546:	c0 01       	movw	r24, r0
     548:	11 24       	eor	r1, r1
     54a:	88 60       	ori	r24, 0x08	; 8
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	ad ee       	ldi	r26, 0xED	; 237
     550:	b0 e0       	ldi	r27, 0x00	; 0
     552:	ea ef       	ldi	r30, 0xFA	; 250
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	29 2f       	mov	r18, r25
     558:	28 2b       	or	r18, r24
     55a:	2c 93       	st	X, r18
     55c:	20 81       	ld	r18, Z
     55e:	29 93       	st	Y+, r18
     560:	9f 5f       	subi	r25, 0xFF	; 255
     562:	98 30       	cpi	r25, 0x08	; 8
     564:	c1 f7       	brne	.-16     	; 0x556 <can_get_message+0x20>
     566:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     56a:	df 91       	pop	r29
     56c:	cf 91       	pop	r28
     56e:	1f 91       	pop	r17
     570:	08 95       	ret

00000572 <can_get_frame_buffer>:
     572:	0f 93       	push	r16
     574:	1f 93       	push	r17
     576:	cf 93       	push	r28
     578:	8c 01       	movw	r16, r24
     57a:	c0 e0       	ldi	r28, 0x00	; 0
     57c:	b8 01       	movw	r22, r16
     57e:	8c 2f       	mov	r24, r28
     580:	da df       	rcall	.-76     	; 0x536 <can_get_message>
     582:	08 5f       	subi	r16, 0xF8	; 248
     584:	1f 4f       	sbci	r17, 0xFF	; 255
     586:	cf 5f       	subi	r28, 0xFF	; 255
     588:	c8 30       	cpi	r28, 0x08	; 8
     58a:	c1 f7       	brne	.-16     	; 0x57c <can_get_frame_buffer+0xa>
     58c:	cf 91       	pop	r28
     58e:	1f 91       	pop	r17
     590:	0f 91       	pop	r16
     592:	08 95       	ret

00000594 <can_get_id>:
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	eb 01       	movw	r28, r22
     59a:	8c df       	rcall	.-232    	; 0x4b4 <set_page>
     59c:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     5a0:	e3 ef       	ldi	r30, 0xF3	; 243
     5a2:	f0 e0       	ldi	r31, 0x00	; 0
     5a4:	80 81       	ld	r24, Z
     5a6:	92 95       	swap	r25
     5a8:	96 95       	lsr	r25
     5aa:	97 70       	andi	r25, 0x07	; 7
     5ac:	88 0f       	add	r24, r24
     5ae:	88 0f       	add	r24, r24
     5b0:	88 0f       	add	r24, r24
     5b2:	89 2b       	or	r24, r25
     5b4:	88 83       	st	Y, r24
     5b6:	80 81       	ld	r24, Z
     5b8:	82 95       	swap	r24
     5ba:	86 95       	lsr	r24
     5bc:	87 70       	andi	r24, 0x07	; 7
     5be:	89 83       	std	Y+1, r24	; 0x01
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	08 95       	ret

000005c6 <can_init_id>:
     5c6:	fc 01       	movw	r30, r24
     5c8:	80 81       	ld	r24, Z
     5ca:	82 95       	swap	r24
     5cc:	88 0f       	add	r24, r24
     5ce:	80 7e       	andi	r24, 0xE0	; 224
     5d0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     5d4:	20 81       	ld	r18, Z
     5d6:	26 95       	lsr	r18
     5d8:	26 95       	lsr	r18
     5da:	26 95       	lsr	r18
     5dc:	91 81       	ldd	r25, Z+1	; 0x01
     5de:	30 e2       	ldi	r19, 0x20	; 32
     5e0:	93 9f       	mul	r25, r19
     5e2:	c0 01       	movw	r24, r0
     5e4:	11 24       	eor	r1, r1
     5e6:	82 2b       	or	r24, r18
     5e8:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     5ec:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     5f0:	08 95       	ret

000005f2 <can_init_mask>:
     5f2:	fc 01       	movw	r30, r24
     5f4:	80 81       	ld	r24, Z
     5f6:	82 95       	swap	r24
     5f8:	88 0f       	add	r24, r24
     5fa:	80 7e       	andi	r24, 0xE0	; 224
     5fc:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     600:	20 81       	ld	r18, Z
     602:	26 95       	lsr	r18
     604:	26 95       	lsr	r18
     606:	26 95       	lsr	r18
     608:	91 81       	ldd	r25, Z+1	; 0x01
     60a:	30 e2       	ldi	r19, 0x20	; 32
     60c:	93 9f       	mul	r25, r19
     60e:	c0 01       	movw	r24, r0
     610:	11 24       	eor	r1, r1
     612:	82 2b       	or	r24, r18
     614:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     618:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
     61c:	08 95       	ret

0000061e <can_get_size>:
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	eb 01       	movw	r28, r22
     624:	47 df       	rcall	.-370    	; 0x4b4 <set_page>
     626:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     62a:	8f 70       	andi	r24, 0x0F	; 15
     62c:	88 83       	st	Y, r24
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	08 95       	ret

00000634 <can_init_message>:
     634:	0f 93       	push	r16
     636:	1f 93       	push	r17
     638:	cf 93       	push	r28
     63a:	df 93       	push	r29
     63c:	ec 01       	movw	r28, r24
     63e:	06 2f       	mov	r16, r22
     640:	14 2f       	mov	r17, r20
     642:	49 30       	cpi	r20, 0x09	; 9
     644:	08 f0       	brcs	.+2      	; 0x648 <can_init_message+0x14>
     646:	18 e0       	ldi	r17, 0x08	; 8
     648:	80 2f       	mov	r24, r16
     64a:	34 df       	rcall	.-408    	; 0x4b4 <set_page>
     64c:	11 23       	and	r17, r17
     64e:	99 f0       	breq	.+38     	; 0x676 <can_init_message+0x42>
     650:	20 e1       	ldi	r18, 0x10	; 16
     652:	02 9f       	mul	r16, r18
     654:	c0 01       	movw	r24, r0
     656:	11 24       	eor	r1, r1
     658:	28 2f       	mov	r18, r24
     65a:	28 60       	ori	r18, 0x08	; 8
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	ad ee       	ldi	r26, 0xED	; 237
     660:	b0 e0       	ldi	r27, 0x00	; 0
     662:	ea ef       	ldi	r30, 0xFA	; 250
     664:	f0 e0       	ldi	r31, 0x00	; 0
     666:	92 2f       	mov	r25, r18
     668:	98 2b       	or	r25, r24
     66a:	9c 93       	st	X, r25
     66c:	99 91       	ld	r25, Y+
     66e:	90 83       	st	Z, r25
     670:	8f 5f       	subi	r24, 0xFF	; 255
     672:	81 13       	cpse	r24, r17
     674:	f8 cf       	rjmp	.-16     	; 0x666 <can_init_message+0x32>
     676:	80 e1       	ldi	r24, 0x10	; 16
     678:	08 9f       	mul	r16, r24
     67a:	b0 01       	movw	r22, r0
     67c:	11 24       	eor	r1, r1
     67e:	68 60       	ori	r22, 0x08	; 8
     680:	60 93 ed 00 	sts	0x00ED, r22	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     684:	ef ee       	ldi	r30, 0xEF	; 239
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	80 81       	ld	r24, Z
     68a:	18 2b       	or	r17, r24
     68c:	10 83       	st	Z, r17
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	1f 91       	pop	r17
     694:	0f 91       	pop	r16
     696:	08 95       	ret

00000698 <can_send_message>:
     698:	ef 92       	push	r14
     69a:	ff 92       	push	r15
     69c:	0f 93       	push	r16
     69e:	1f 93       	push	r17
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	c8 2f       	mov	r28, r24
     6a6:	7b 01       	movw	r14, r22
     6a8:	8a 01       	movw	r16, r20
     6aa:	d2 2f       	mov	r29, r18
     6ac:	03 df       	rcall	.-506    	; 0x4b4 <set_page>
     6ae:	c7 01       	movw	r24, r14
     6b0:	8a df       	rcall	.-236    	; 0x5c6 <can_init_id>
     6b2:	4d 2f       	mov	r20, r29
     6b4:	6c 2f       	mov	r22, r28
     6b6:	c8 01       	movw	r24, r16
     6b8:	bd df       	rcall	.-134    	; 0x634 <can_init_message>
     6ba:	ef ee       	ldi	r30, 0xEF	; 239
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	80 81       	ld	r24, Z
     6c0:	80 64       	ori	r24, 0x40	; 64
     6c2:	80 83       	st	Z, r24
     6c4:	ee ee       	ldi	r30, 0xEE	; 238
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	80 81       	ld	r24, Z
     6ca:	80 34       	cpi	r24, 0x40	; 64
     6cc:	e9 f7       	brne	.-6      	; 0x6c8 <can_send_message+0x30>
     6ce:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     6d2:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	1f 91       	pop	r17
     6e0:	0f 91       	pop	r16
     6e2:	ff 90       	pop	r15
     6e4:	ef 90       	pop	r14
     6e6:	08 95       	ret

000006e8 <can_enable_mob_interrupt>:
     6e8:	88 30       	cpi	r24, 0x08	; 8
     6ea:	80 f0       	brcs	.+32     	; 0x70c <can_enable_mob_interrupt+0x24>
     6ec:	ef ed       	ldi	r30, 0xDF	; 223
     6ee:	f0 e0       	ldi	r31, 0x00	; 0
     6f0:	40 81       	ld	r20, Z
     6f2:	88 50       	subi	r24, 0x08	; 8
     6f4:	21 e0       	ldi	r18, 0x01	; 1
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	b9 01       	movw	r22, r18
     6fa:	02 c0       	rjmp	.+4      	; 0x700 <can_enable_mob_interrupt+0x18>
     6fc:	66 0f       	add	r22, r22
     6fe:	77 1f       	adc	r23, r23
     700:	8a 95       	dec	r24
     702:	e2 f7       	brpl	.-8      	; 0x6fc <can_enable_mob_interrupt+0x14>
     704:	cb 01       	movw	r24, r22
     706:	84 2b       	or	r24, r20
     708:	80 83       	st	Z, r24
     70a:	08 95       	ret
     70c:	ee ed       	ldi	r30, 0xDE	; 222
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	40 81       	ld	r20, Z
     712:	21 e0       	ldi	r18, 0x01	; 1
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	b9 01       	movw	r22, r18
     718:	02 c0       	rjmp	.+4      	; 0x71e <can_enable_mob_interrupt+0x36>
     71a:	66 0f       	add	r22, r22
     71c:	77 1f       	adc	r23, r23
     71e:	8a 95       	dec	r24
     720:	e2 f7       	brpl	.-8      	; 0x71a <can_enable_mob_interrupt+0x32>
     722:	cb 01       	movw	r24, r22
     724:	84 2b       	or	r24, r20
     726:	80 83       	st	Z, r24
     728:	08 95       	ret

0000072a <disable_mob_interrupt>:
     72a:	88 30       	cpi	r24, 0x08	; 8
     72c:	88 f0       	brcs	.+34     	; 0x750 <disable_mob_interrupt+0x26>
     72e:	ef ed       	ldi	r30, 0xDF	; 223
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	40 81       	ld	r20, Z
     734:	88 50       	subi	r24, 0x08	; 8
     736:	21 e0       	ldi	r18, 0x01	; 1
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	b9 01       	movw	r22, r18
     73c:	02 c0       	rjmp	.+4      	; 0x742 <disable_mob_interrupt+0x18>
     73e:	66 0f       	add	r22, r22
     740:	77 1f       	adc	r23, r23
     742:	8a 95       	dec	r24
     744:	e2 f7       	brpl	.-8      	; 0x73e <disable_mob_interrupt+0x14>
     746:	cb 01       	movw	r24, r22
     748:	80 95       	com	r24
     74a:	84 23       	and	r24, r20
     74c:	80 83       	st	Z, r24
     74e:	08 95       	ret
     750:	ee ed       	ldi	r30, 0xDE	; 222
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	40 81       	ld	r20, Z
     756:	21 e0       	ldi	r18, 0x01	; 1
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	b9 01       	movw	r22, r18
     75c:	02 c0       	rjmp	.+4      	; 0x762 <disable_mob_interrupt+0x38>
     75e:	66 0f       	add	r22, r22
     760:	77 1f       	adc	r23, r23
     762:	8a 95       	dec	r24
     764:	e2 f7       	brpl	.-8      	; 0x75e <disable_mob_interrupt+0x34>
     766:	cb 01       	movw	r24, r22
     768:	80 95       	com	r24
     76a:	84 23       	and	r24, r20
     76c:	80 83       	st	Z, r24
     76e:	08 95       	ret

00000770 <can_enable_receive>:
     770:	0f 93       	push	r16
     772:	1f 93       	push	r17
     774:	cf 93       	push	r28
     776:	c8 2f       	mov	r28, r24
     778:	8b 01       	movw	r16, r22
     77a:	b6 df       	rcall	.-148    	; 0x6e8 <can_enable_mob_interrupt>
     77c:	8c 2f       	mov	r24, r28
     77e:	9a de       	rcall	.-716    	; 0x4b4 <set_page>
     780:	c8 01       	movw	r24, r16
     782:	37 df       	rcall	.-402    	; 0x5f2 <can_init_mask>
     784:	ef ee       	ldi	r30, 0xEF	; 239
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	80 81       	ld	r24, Z
     78a:	88 68       	ori	r24, 0x88	; 136
     78c:	80 83       	st	Z, r24
     78e:	cf 91       	pop	r28
     790:	1f 91       	pop	r17
     792:	0f 91       	pop	r16
     794:	08 95       	ret

00000796 <can_free_mob>:
     796:	cf 93       	push	r28
     798:	c8 2f       	mov	r28, r24
     79a:	8c de       	rcall	.-744    	; 0x4b4 <set_page>
     79c:	8c 2f       	mov	r24, r28
     79e:	c5 df       	rcall	.-118    	; 0x72a <disable_mob_interrupt>
     7a0:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     7a4:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     7a8:	cf 91       	pop	r28
     7aa:	08 95       	ret

000007ac <can_wait_for_receive>:
     7ac:	ea ed       	ldi	r30, 0xDA	; 218
     7ae:	f0 e0       	ldi	r31, 0x00	; 0
     7b0:	80 81       	ld	r24, Z
     7b2:	88 23       	and	r24, r24
     7b4:	ec f7       	brge	.-6      	; 0x7b0 <can_wait_for_receive+0x4>
     7b6:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     7ba:	82 95       	swap	r24
     7bc:	8f 70       	andi	r24, 0x0F	; 15
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	08 95       	ret

000007c2 <can_receive_message2>:
     7c2:	cf 92       	push	r12
     7c4:	df 92       	push	r13
     7c6:	ef 92       	push	r14
     7c8:	ff 92       	push	r15
     7ca:	0f 93       	push	r16
     7cc:	1f 93       	push	r17
     7ce:	cf 93       	push	r28
     7d0:	c8 2f       	mov	r28, r24
     7d2:	8b 01       	movw	r16, r22
     7d4:	6a 01       	movw	r12, r20
     7d6:	79 01       	movw	r14, r18
     7d8:	6d de       	rcall	.-806    	; 0x4b4 <set_page>
     7da:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     7de:	88 23       	and	r24, r24
     7e0:	94 f4       	brge	.+36     	; 0x806 <can_receive_message2+0x44>
     7e2:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     7e6:	85 ff       	sbrs	r24, 5
     7e8:	11 c0       	rjmp	.+34     	; 0x80c <can_receive_message2+0x4a>
     7ea:	b6 01       	movw	r22, r12
     7ec:	8c 2f       	mov	r24, r28
     7ee:	a3 de       	rcall	.-698    	; 0x536 <can_get_message>
     7f0:	b7 01       	movw	r22, r14
     7f2:	8c 2f       	mov	r24, r28
     7f4:	14 df       	rcall	.-472    	; 0x61e <can_get_size>
     7f6:	b8 01       	movw	r22, r16
     7f8:	8c 2f       	mov	r24, r28
     7fa:	cc de       	rcall	.-616    	; 0x594 <can_get_id>
     7fc:	8c 2f       	mov	r24, r28
     7fe:	cb df       	rcall	.-106    	; 0x796 <can_free_mob>
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	05 c0       	rjmp	.+10     	; 0x810 <can_receive_message2+0x4e>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	02 c0       	rjmp	.+4      	; 0x810 <can_receive_message2+0x4e>
     80c:	82 e0       	ldi	r24, 0x02	; 2
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	cf 91       	pop	r28
     812:	1f 91       	pop	r17
     814:	0f 91       	pop	r16
     816:	ff 90       	pop	r15
     818:	ef 90       	pop	r14
     81a:	df 90       	pop	r13
     81c:	cf 90       	pop	r12
     81e:	08 95       	ret

00000820 <can_receive_message>:
     820:	bf 92       	push	r11
     822:	cf 92       	push	r12
     824:	df 92       	push	r13
     826:	ef 92       	push	r14
     828:	ff 92       	push	r15
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	b8 2e       	mov	r11, r24
     834:	6b 01       	movw	r12, r22
     836:	ea 01       	movw	r28, r20
     838:	79 01       	movw	r14, r18
     83a:	3c de       	rcall	.-904    	; 0x4b4 <set_page>
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0b 2c       	mov	r0, r11
     842:	02 c0       	rjmp	.+4      	; 0x848 <can_receive_message+0x28>
     844:	88 0f       	add	r24, r24
     846:	99 1f       	adc	r25, r25
     848:	0a 94       	dec	r0
     84a:	e2 f7       	brpl	.-8      	; 0x844 <can_receive_message+0x24>
     84c:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
     850:	c6 01       	movw	r24, r12
     852:	b9 de       	rcall	.-654    	; 0x5c6 <can_init_id>
     854:	ce 01       	movw	r24, r28
     856:	cd de       	rcall	.-614    	; 0x5f2 <can_init_mask>
     858:	88 e8       	ldi	r24, 0x88	; 136
     85a:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     85e:	ea ed       	ldi	r30, 0xDA	; 218
     860:	f0 e0       	ldi	r31, 0x00	; 0
     862:	80 81       	ld	r24, Z
     864:	88 23       	and	r24, r24
     866:	ec f7       	brge	.-6      	; 0x862 <can_receive_message+0x42>
     868:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     86c:	85 ff       	sbrs	r24, 5
     86e:	13 c0       	rjmp	.+38     	; 0x896 <can_receive_message+0x76>
     870:	b7 01       	movw	r22, r14
     872:	8b 2d       	mov	r24, r11
     874:	60 de       	rcall	.-832    	; 0x536 <can_get_message>
     876:	b8 01       	movw	r22, r16
     878:	8b 2d       	mov	r24, r11
     87a:	d1 de       	rcall	.-606    	; 0x61e <can_get_size>
     87c:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     880:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     884:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
     888:	ea ed       	ldi	r30, 0xDA	; 218
     88a:	f0 e0       	ldi	r31, 0x00	; 0
     88c:	80 81       	ld	r24, Z
     88e:	80 83       	st	Z, r24
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	02 c0       	rjmp	.+4      	; 0x89a <can_receive_message+0x7a>
     896:	81 e0       	ldi	r24, 0x01	; 1
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	1f 91       	pop	r17
     8a0:	0f 91       	pop	r16
     8a2:	ff 90       	pop	r15
     8a4:	ef 90       	pop	r14
     8a6:	df 90       	pop	r13
     8a8:	cf 90       	pop	r12
     8aa:	bf 90       	pop	r11
     8ac:	08 95       	ret

000008ae <can_receive_frame_buffer>:

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
     8ae:	8f 92       	push	r8
     8b0:	9f 92       	push	r9
     8b2:	af 92       	push	r10
     8b4:	bf 92       	push	r11
     8b6:	cf 92       	push	r12
     8b8:	df 92       	push	r13
     8ba:	ef 92       	push	r14
     8bc:	ff 92       	push	r15
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	00 d0       	rcall	.+0      	; 0x8c8 <can_receive_frame_buffer+0x1a>
     8c8:	00 d0       	rcall	.+0      	; 0x8ca <can_receive_frame_buffer+0x1c>
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62
     8ce:	6c 01       	movw	r12, r24
     8d0:	f6 2e       	mov	r15, r22
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
     8d2:	eb ed       	ldi	r30, 0xDB	; 219
     8d4:	f0 e0       	ldi	r31, 0x00	; 0
     8d6:	80 81       	ld	r24, Z
     8d8:	84 60       	ori	r24, 0x04	; 4
     8da:	80 83       	st	Z, r24
	uint8_t j;
	for(j=0; j<buff_len; j++){
     8dc:	66 23       	and	r22, r22
     8de:	e1 f0       	breq	.+56     	; 0x918 <can_receive_frame_buffer+0x6a>
     8e0:	10 e0       	ldi	r17, 0x00	; 0
		set_page(j);
		can_id_t id = { j , 0};
		can_init_id(id);
		// Mask = 255
		can_mask_t mask = { 255, 255 };
     8e2:	0f ef       	ldi	r16, 0xFF	; 255
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     8e4:	0f 2e       	mov	r0, r31
     8e6:	ff ee       	ldi	r31, 0xEF	; 239
     8e8:	af 2e       	mov	r10, r31
     8ea:	b1 2c       	mov	r11, r1
     8ec:	f0 2d       	mov	r31, r0
     8ee:	0f 2e       	mov	r0, r31
     8f0:	f8 ec       	ldi	r31, 0xC8	; 200
     8f2:	ef 2e       	mov	r14, r31
     8f4:	f0 2d       	mov	r31, r0
int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
	uint8_t j;
	for(j=0; j<buff_len; j++){
		set_page(j);
     8f6:	81 2f       	mov	r24, r17
     8f8:	dd dd       	rcall	.-1094   	; 0x4b4 <set_page>
		can_id_t id = { j , 0};
     8fa:	1b 83       	std	Y+3, r17	; 0x03
     8fc:	1c 82       	std	Y+4, r1	; 0x04
		can_init_id(id);
     8fe:	ce 01       	movw	r24, r28
     900:	03 96       	adiw	r24, 0x03	; 3
     902:	61 de       	rcall	.-830    	; 0x5c6 <can_init_id>
		// Mask = 255
		can_mask_t mask = { 255, 255 };
     904:	09 83       	std	Y+1, r16	; 0x01
     906:	0a 83       	std	Y+2, r16	; 0x02
		can_init_mask(mask);
     908:	ce 01       	movw	r24, r28
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	72 de       	rcall	.-796    	; 0x5f2 <can_init_mask>
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     90e:	f5 01       	movw	r30, r10
     910:	e0 82       	st	Z, r14

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
	uint8_t j;
	for(j=0; j<buff_len; j++){
     912:	1f 5f       	subi	r17, 0xFF	; 255
     914:	f1 12       	cpse	r15, r17
     916:	ef cf       	rjmp	.-34     	; 0x8f6 <can_receive_frame_buffer+0x48>
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     918:	ea ed       	ldi	r30, 0xDA	; 218
     91a:	f0 e0       	ldi	r31, 0x00	; 0
     91c:	80 81       	ld	r24, Z
     91e:	88 23       	and	r24, r24
     920:	ec f7       	brge	.-6      	; 0x91c <can_receive_frame_buffer+0x6e>
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     922:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     926:	84 ff       	sbrs	r24, 4
     928:	20 c0       	rjmp	.+64     	; 0x96a <can_receive_frame_buffer+0xbc>
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
     92a:	ff 20       	and	r15, r15
     92c:	a1 f0       	breq	.+40     	; 0x956 <can_receive_frame_buffer+0xa8>
     92e:	10 e0       	ldi	r17, 0x00	; 0
		set_page(j);
		CANCDMOB = 0x00;
     930:	0f 2e       	mov	r0, r31
     932:	ff ee       	ldi	r31, 0xEF	; 239
     934:	8f 2e       	mov	r8, r31
     936:	91 2c       	mov	r9, r1
     938:	f0 2d       	mov	r31, r0
		CANSTMOB = 0x00;
     93a:	0f 2e       	mov	r0, r31
     93c:	fe ee       	ldi	r31, 0xEE	; 238
     93e:	af 2e       	mov	r10, r31
     940:	b1 2c       	mov	r11, r1
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
		set_page(j);
     942:	f0 2d       	mov	r31, r0
     944:	81 2f       	mov	r24, r17
     946:	b6 dd       	rcall	.-1172   	; 0x4b4 <set_page>
		CANCDMOB = 0x00;
     948:	f4 01       	movw	r30, r8
     94a:	10 82       	st	Z, r1
		CANSTMOB = 0x00;
     94c:	f5 01       	movw	r30, r10
     94e:	10 82       	st	Z, r1
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
     950:	1f 5f       	subi	r17, 0xFF	; 255
     952:	f1 12       	cpse	r15, r17
     954:	f7 cf       	rjmp	.-18     	; 0x944 <can_receive_frame_buffer+0x96>
		set_page(j);
		CANCDMOB = 0x00;
		CANSTMOB = 0x00;
	}
	//Reset interrupt register.
	CANGIT = CANGIT;
     956:	ea ed       	ldi	r30, 0xDA	; 218
     958:	f0 e0       	ldi	r31, 0x00	; 0
     95a:	80 81       	ld	r24, Z
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
     95c:	80 83       	st	Z, r24
     95e:	6f 2d       	mov	r22, r15
     960:	c6 01       	movw	r24, r12
     962:	07 de       	rcall	.-1010   	; 0x572 <can_get_frame_buffer>
	return 0;
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	02 c0       	rjmp	.+4      	; 0x96e <can_receive_frame_buffer+0xc0>
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	90 e0       	ldi	r25, 0x00	; 0
	//Reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
	return 0;
}
     96e:	0f 90       	pop	r0
     970:	0f 90       	pop	r0
     972:	0f 90       	pop	r0
     974:	0f 90       	pop	r0
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	ff 90       	pop	r15
     980:	ef 90       	pop	r14
     982:	df 90       	pop	r13
     984:	cf 90       	pop	r12
     986:	bf 90       	pop	r11
     988:	af 90       	pop	r10
     98a:	9f 90       	pop	r9
     98c:	8f 90       	pop	r8
     98e:	08 95       	ret

00000990 <__vector_16>:
#include <avr/interrupt.h>

volatile uint32_t ms = 0;

ISR(TIMER0_COMP_vect)
{
     990:	1f 92       	push	r1
     992:	0f 92       	push	r0
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	0f 92       	push	r0
     998:	11 24       	eor	r1, r1
     99a:	8f 93       	push	r24
     99c:	9f 93       	push	r25
     99e:	af 93       	push	r26
     9a0:	bf 93       	push	r27
	ms = ms+1;
     9a2:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <__data_end>
     9a6:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <__data_end+0x1>
     9aa:	a0 91 60 06 	lds	r26, 0x0660	; 0x800660 <__data_end+0x2>
     9ae:	b0 91 61 06 	lds	r27, 0x0661	; 0x800661 <__data_end+0x3>
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	a1 1d       	adc	r26, r1
     9b6:	b1 1d       	adc	r27, r1
     9b8:	80 93 5e 06 	sts	0x065E, r24	; 0x80065e <__data_end>
     9bc:	90 93 5f 06 	sts	0x065F, r25	; 0x80065f <__data_end+0x1>
     9c0:	a0 93 60 06 	sts	0x0660, r26	; 0x800660 <__data_end+0x2>
     9c4:	b0 93 61 06 	sts	0x0661, r27	; 0x800661 <__data_end+0x3>
}
     9c8:	bf 91       	pop	r27
     9ca:	af 91       	pop	r26
     9cc:	9f 91       	pop	r25
     9ce:	8f 91       	pop	r24
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti

000009da <millis>:

unsigned long int millis(void)
{
	return ms;
     9da:	60 91 5e 06 	lds	r22, 0x065E	; 0x80065e <__data_end>
     9de:	70 91 5f 06 	lds	r23, 0x065F	; 0x80065f <__data_end+0x1>
     9e2:	80 91 60 06 	lds	r24, 0x0660	; 0x800660 <__data_end+0x2>
     9e6:	90 91 61 06 	lds	r25, 0x0661	; 0x800661 <__data_end+0x3>
}
     9ea:	08 95       	ret

000009ec <clock_Init>:

void clock_Init(void)
{
	OCR0A = 61;
     9ec:	8d e3       	ldi	r24, 0x3D	; 61
     9ee:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = 1 << OCIE0A;
     9f0:	82 e0       	ldi	r24, 0x02	; 2
     9f2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TCCR0A = 1 << WGM00 | 1 << WGM01 | 1 << CS01 | 1 << CS00;
     9f6:	8b e4       	ldi	r24, 0x4B	; 75
     9f8:	84 bd       	out	0x24, r24	; 36
     9fa:	08 95       	ret

000009fc <uECC_vli_clear>:
     9fc:	dc 01       	movw	r26, r24
     9fe:	e4 e2       	ldi	r30, 0x24	; 36
     a00:	f5 e0       	ldi	r31, 0x05	; 5
     a02:	e6 1b       	sub	r30, r22
     a04:	f1 09       	sbc	r31, r1
     a06:	09 94       	ijmp
     a08:	1d 92       	st	X+, r1
     a0a:	1d 92       	st	X+, r1
     a0c:	1d 92       	st	X+, r1
     a0e:	1d 92       	st	X+, r1
     a10:	1d 92       	st	X+, r1
     a12:	1d 92       	st	X+, r1
     a14:	1d 92       	st	X+, r1
     a16:	1d 92       	st	X+, r1
     a18:	1d 92       	st	X+, r1
     a1a:	1d 92       	st	X+, r1
     a1c:	1d 92       	st	X+, r1
     a1e:	1d 92       	st	X+, r1
     a20:	1d 92       	st	X+, r1
     a22:	1d 92       	st	X+, r1
     a24:	1d 92       	st	X+, r1
     a26:	1d 92       	st	X+, r1
     a28:	1d 92       	st	X+, r1
     a2a:	1d 92       	st	X+, r1
     a2c:	1d 92       	st	X+, r1
     a2e:	1d 92       	st	X+, r1
     a30:	1d 92       	st	X+, r1
     a32:	1d 92       	st	X+, r1
     a34:	1d 92       	st	X+, r1
     a36:	1d 92       	st	X+, r1
     a38:	1d 92       	st	X+, r1
     a3a:	1d 92       	st	X+, r1
     a3c:	1d 92       	st	X+, r1
     a3e:	1d 92       	st	X+, r1
     a40:	1d 92       	st	X+, r1
     a42:	1d 92       	st	X+, r1
     a44:	1d 92       	st	X+, r1
     a46:	1d 92       	st	X+, r1
     a48:	08 95       	ret

00000a4a <uECC_vli_set>:
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	44 0f       	add	r20, r20
     a50:	eb 01       	movw	r28, r22
     a52:	dc 01       	movw	r26, r24
     a54:	ef e6       	ldi	r30, 0x6F	; 111
     a56:	f5 e0       	ldi	r31, 0x05	; 5
     a58:	e4 1b       	sub	r30, r20
     a5a:	f1 09       	sbc	r31, r1
     a5c:	09 94       	ijmp
     a5e:	09 90       	ld	r0, Y+
     a60:	0d 92       	st	X+, r0
     a62:	09 90       	ld	r0, Y+
     a64:	0d 92       	st	X+, r0
     a66:	09 90       	ld	r0, Y+
     a68:	0d 92       	st	X+, r0
     a6a:	09 90       	ld	r0, Y+
     a6c:	0d 92       	st	X+, r0
     a6e:	09 90       	ld	r0, Y+
     a70:	0d 92       	st	X+, r0
     a72:	09 90       	ld	r0, Y+
     a74:	0d 92       	st	X+, r0
     a76:	09 90       	ld	r0, Y+
     a78:	0d 92       	st	X+, r0
     a7a:	09 90       	ld	r0, Y+
     a7c:	0d 92       	st	X+, r0
     a7e:	09 90       	ld	r0, Y+
     a80:	0d 92       	st	X+, r0
     a82:	09 90       	ld	r0, Y+
     a84:	0d 92       	st	X+, r0
     a86:	09 90       	ld	r0, Y+
     a88:	0d 92       	st	X+, r0
     a8a:	09 90       	ld	r0, Y+
     a8c:	0d 92       	st	X+, r0
     a8e:	09 90       	ld	r0, Y+
     a90:	0d 92       	st	X+, r0
     a92:	09 90       	ld	r0, Y+
     a94:	0d 92       	st	X+, r0
     a96:	09 90       	ld	r0, Y+
     a98:	0d 92       	st	X+, r0
     a9a:	09 90       	ld	r0, Y+
     a9c:	0d 92       	st	X+, r0
     a9e:	09 90       	ld	r0, Y+
     aa0:	0d 92       	st	X+, r0
     aa2:	09 90       	ld	r0, Y+
     aa4:	0d 92       	st	X+, r0
     aa6:	09 90       	ld	r0, Y+
     aa8:	0d 92       	st	X+, r0
     aaa:	09 90       	ld	r0, Y+
     aac:	0d 92       	st	X+, r0
     aae:	09 90       	ld	r0, Y+
     ab0:	0d 92       	st	X+, r0
     ab2:	09 90       	ld	r0, Y+
     ab4:	0d 92       	st	X+, r0
     ab6:	09 90       	ld	r0, Y+
     ab8:	0d 92       	st	X+, r0
     aba:	09 90       	ld	r0, Y+
     abc:	0d 92       	st	X+, r0
     abe:	09 90       	ld	r0, Y+
     ac0:	0d 92       	st	X+, r0
     ac2:	09 90       	ld	r0, Y+
     ac4:	0d 92       	st	X+, r0
     ac6:	09 90       	ld	r0, Y+
     ac8:	0d 92       	st	X+, r0
     aca:	09 90       	ld	r0, Y+
     acc:	0d 92       	st	X+, r0
     ace:	09 90       	ld	r0, Y+
     ad0:	0d 92       	st	X+, r0
     ad2:	09 90       	ld	r0, Y+
     ad4:	0d 92       	st	X+, r0
     ad6:	09 90       	ld	r0, Y+
     ad8:	0d 92       	st	X+, r0
     ada:	09 90       	ld	r0, Y+
     adc:	0d 92       	st	X+, r0
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	08 95       	ret

00000ae4 <uECC_vli_rshift1>:
     ae4:	26 2f       	mov	r18, r22
     ae6:	06 2e       	mov	r0, r22
     ae8:	00 0c       	add	r0, r0
     aea:	33 0b       	sbc	r19, r19
     aec:	21 50       	subi	r18, 0x01	; 1
     aee:	31 09       	sbc	r19, r1
     af0:	32 2f       	mov	r19, r18
     af2:	33 0f       	add	r19, r19
     af4:	23 0f       	add	r18, r19
     af6:	dc 01       	movw	r26, r24
     af8:	e3 ee       	ldi	r30, 0xE3	; 227
     afa:	f5 e0       	ldi	r31, 0x05	; 5
     afc:	e2 1b       	sub	r30, r18
     afe:	f1 09       	sbc	r31, r1
     b00:	a6 0f       	add	r26, r22
     b02:	b1 1d       	adc	r27, r1
     b04:	0e 90       	ld	r0, -X
     b06:	06 94       	lsr	r0
     b08:	0c 92       	st	X, r0
     b0a:	09 94       	ijmp
     b0c:	0e 90       	ld	r0, -X
     b0e:	07 94       	ror	r0
     b10:	0c 92       	st	X, r0
     b12:	0e 90       	ld	r0, -X
     b14:	07 94       	ror	r0
     b16:	0c 92       	st	X, r0
     b18:	0e 90       	ld	r0, -X
     b1a:	07 94       	ror	r0
     b1c:	0c 92       	st	X, r0
     b1e:	0e 90       	ld	r0, -X
     b20:	07 94       	ror	r0
     b22:	0c 92       	st	X, r0
     b24:	0e 90       	ld	r0, -X
     b26:	07 94       	ror	r0
     b28:	0c 92       	st	X, r0
     b2a:	0e 90       	ld	r0, -X
     b2c:	07 94       	ror	r0
     b2e:	0c 92       	st	X, r0
     b30:	0e 90       	ld	r0, -X
     b32:	07 94       	ror	r0
     b34:	0c 92       	st	X, r0
     b36:	0e 90       	ld	r0, -X
     b38:	07 94       	ror	r0
     b3a:	0c 92       	st	X, r0
     b3c:	0e 90       	ld	r0, -X
     b3e:	07 94       	ror	r0
     b40:	0c 92       	st	X, r0
     b42:	0e 90       	ld	r0, -X
     b44:	07 94       	ror	r0
     b46:	0c 92       	st	X, r0
     b48:	0e 90       	ld	r0, -X
     b4a:	07 94       	ror	r0
     b4c:	0c 92       	st	X, r0
     b4e:	0e 90       	ld	r0, -X
     b50:	07 94       	ror	r0
     b52:	0c 92       	st	X, r0
     b54:	0e 90       	ld	r0, -X
     b56:	07 94       	ror	r0
     b58:	0c 92       	st	X, r0
     b5a:	0e 90       	ld	r0, -X
     b5c:	07 94       	ror	r0
     b5e:	0c 92       	st	X, r0
     b60:	0e 90       	ld	r0, -X
     b62:	07 94       	ror	r0
     b64:	0c 92       	st	X, r0
     b66:	0e 90       	ld	r0, -X
     b68:	07 94       	ror	r0
     b6a:	0c 92       	st	X, r0
     b6c:	0e 90       	ld	r0, -X
     b6e:	07 94       	ror	r0
     b70:	0c 92       	st	X, r0
     b72:	0e 90       	ld	r0, -X
     b74:	07 94       	ror	r0
     b76:	0c 92       	st	X, r0
     b78:	0e 90       	ld	r0, -X
     b7a:	07 94       	ror	r0
     b7c:	0c 92       	st	X, r0
     b7e:	0e 90       	ld	r0, -X
     b80:	07 94       	ror	r0
     b82:	0c 92       	st	X, r0
     b84:	0e 90       	ld	r0, -X
     b86:	07 94       	ror	r0
     b88:	0c 92       	st	X, r0
     b8a:	0e 90       	ld	r0, -X
     b8c:	07 94       	ror	r0
     b8e:	0c 92       	st	X, r0
     b90:	0e 90       	ld	r0, -X
     b92:	07 94       	ror	r0
     b94:	0c 92       	st	X, r0
     b96:	0e 90       	ld	r0, -X
     b98:	07 94       	ror	r0
     b9a:	0c 92       	st	X, r0
     b9c:	0e 90       	ld	r0, -X
     b9e:	07 94       	ror	r0
     ba0:	0c 92       	st	X, r0
     ba2:	0e 90       	ld	r0, -X
     ba4:	07 94       	ror	r0
     ba6:	0c 92       	st	X, r0
     ba8:	0e 90       	ld	r0, -X
     baa:	07 94       	ror	r0
     bac:	0c 92       	st	X, r0
     bae:	0e 90       	ld	r0, -X
     bb0:	07 94       	ror	r0
     bb2:	0c 92       	st	X, r0
     bb4:	0e 90       	ld	r0, -X
     bb6:	07 94       	ror	r0
     bb8:	0c 92       	st	X, r0
     bba:	0e 90       	ld	r0, -X
     bbc:	07 94       	ror	r0
     bbe:	0c 92       	st	X, r0
     bc0:	0e 90       	ld	r0, -X
     bc2:	07 94       	ror	r0
     bc4:	0c 92       	st	X, r0
     bc6:	08 95       	ret

00000bc8 <uECC_vli_add>:
     bc8:	cf 93       	push	r28
     bca:	df 93       	push	r29
     bcc:	22 0f       	add	r18, r18
     bce:	db 01       	movw	r26, r22
     bd0:	ea 01       	movw	r28, r20
     bd2:	ac 01       	movw	r20, r24
     bd4:	e0 e3       	ldi	r30, 0x30	; 48
     bd6:	f6 e0       	ldi	r31, 0x06	; 6
     bd8:	e2 1b       	sub	r30, r18
     bda:	f1 09       	sbc	r31, r1
     bdc:	88 94       	clc
     bde:	09 94       	ijmp
     be0:	fa 01       	movw	r30, r20
     be2:	3e c0       	rjmp	.+124    	; 0xc60 <add_89_32>
     be4:	fa 01       	movw	r30, r20
     be6:	40 c0       	rjmp	.+128    	; 0xc68 <add_89_31>
     be8:	fa 01       	movw	r30, r20
     bea:	42 c0       	rjmp	.+132    	; 0xc70 <add_89_30>
     bec:	fa 01       	movw	r30, r20
     bee:	44 c0       	rjmp	.+136    	; 0xc78 <add_89_29>
     bf0:	fa 01       	movw	r30, r20
     bf2:	46 c0       	rjmp	.+140    	; 0xc80 <add_89_28>
     bf4:	fa 01       	movw	r30, r20
     bf6:	48 c0       	rjmp	.+144    	; 0xc88 <add_89_27>
     bf8:	fa 01       	movw	r30, r20
     bfa:	4a c0       	rjmp	.+148    	; 0xc90 <add_89_26>
     bfc:	fa 01       	movw	r30, r20
     bfe:	4c c0       	rjmp	.+152    	; 0xc98 <add_89_25>
     c00:	fa 01       	movw	r30, r20
     c02:	4e c0       	rjmp	.+156    	; 0xca0 <add_89_24>
     c04:	fa 01       	movw	r30, r20
     c06:	50 c0       	rjmp	.+160    	; 0xca8 <add_89_23>
     c08:	fa 01       	movw	r30, r20
     c0a:	52 c0       	rjmp	.+164    	; 0xcb0 <add_89_22>
     c0c:	fa 01       	movw	r30, r20
     c0e:	54 c0       	rjmp	.+168    	; 0xcb8 <add_89_21>
     c10:	fa 01       	movw	r30, r20
     c12:	56 c0       	rjmp	.+172    	; 0xcc0 <add_89_20>
     c14:	fa 01       	movw	r30, r20
     c16:	58 c0       	rjmp	.+176    	; 0xcc8 <add_89_19>
     c18:	fa 01       	movw	r30, r20
     c1a:	5a c0       	rjmp	.+180    	; 0xcd0 <add_89_18>
     c1c:	fa 01       	movw	r30, r20
     c1e:	5c c0       	rjmp	.+184    	; 0xcd8 <add_89_17>
     c20:	fa 01       	movw	r30, r20
     c22:	5e c0       	rjmp	.+188    	; 0xce0 <add_89_16>
     c24:	fa 01       	movw	r30, r20
     c26:	60 c0       	rjmp	.+192    	; 0xce8 <add_89_15>
     c28:	fa 01       	movw	r30, r20
     c2a:	62 c0       	rjmp	.+196    	; 0xcf0 <add_89_14>
     c2c:	fa 01       	movw	r30, r20
     c2e:	64 c0       	rjmp	.+200    	; 0xcf8 <add_89_13>
     c30:	fa 01       	movw	r30, r20
     c32:	66 c0       	rjmp	.+204    	; 0xd00 <add_89_12>
     c34:	fa 01       	movw	r30, r20
     c36:	68 c0       	rjmp	.+208    	; 0xd08 <add_89_11>
     c38:	fa 01       	movw	r30, r20
     c3a:	6a c0       	rjmp	.+212    	; 0xd10 <add_89_10>
     c3c:	fa 01       	movw	r30, r20
     c3e:	6c c0       	rjmp	.+216    	; 0xd18 <add_89_9>
     c40:	fa 01       	movw	r30, r20
     c42:	6e c0       	rjmp	.+220    	; 0xd20 <add_89_8>
     c44:	fa 01       	movw	r30, r20
     c46:	70 c0       	rjmp	.+224    	; 0xd28 <add_89_7>
     c48:	fa 01       	movw	r30, r20
     c4a:	72 c0       	rjmp	.+228    	; 0xd30 <add_89_6>
     c4c:	fa 01       	movw	r30, r20
     c4e:	74 c0       	rjmp	.+232    	; 0xd38 <add_89_5>
     c50:	fa 01       	movw	r30, r20
     c52:	76 c0       	rjmp	.+236    	; 0xd40 <add_89_4>
     c54:	fa 01       	movw	r30, r20
     c56:	78 c0       	rjmp	.+240    	; 0xd48 <add_89_3>
     c58:	fa 01       	movw	r30, r20
     c5a:	7a c0       	rjmp	.+244    	; 0xd50 <add_89_2>
     c5c:	fa 01       	movw	r30, r20
     c5e:	7c c0       	rjmp	.+248    	; 0xd58 <add_89_1>

00000c60 <add_89_32>:
     c60:	8d 91       	ld	r24, X+
     c62:	99 91       	ld	r25, Y+
     c64:	89 1f       	adc	r24, r25
     c66:	81 93       	st	Z+, r24

00000c68 <add_89_31>:
     c68:	8d 91       	ld	r24, X+
     c6a:	99 91       	ld	r25, Y+
     c6c:	89 1f       	adc	r24, r25
     c6e:	81 93       	st	Z+, r24

00000c70 <add_89_30>:
     c70:	8d 91       	ld	r24, X+
     c72:	99 91       	ld	r25, Y+
     c74:	89 1f       	adc	r24, r25
     c76:	81 93       	st	Z+, r24

00000c78 <add_89_29>:
     c78:	8d 91       	ld	r24, X+
     c7a:	99 91       	ld	r25, Y+
     c7c:	89 1f       	adc	r24, r25
     c7e:	81 93       	st	Z+, r24

00000c80 <add_89_28>:
     c80:	8d 91       	ld	r24, X+
     c82:	99 91       	ld	r25, Y+
     c84:	89 1f       	adc	r24, r25
     c86:	81 93       	st	Z+, r24

00000c88 <add_89_27>:
     c88:	8d 91       	ld	r24, X+
     c8a:	99 91       	ld	r25, Y+
     c8c:	89 1f       	adc	r24, r25
     c8e:	81 93       	st	Z+, r24

00000c90 <add_89_26>:
     c90:	8d 91       	ld	r24, X+
     c92:	99 91       	ld	r25, Y+
     c94:	89 1f       	adc	r24, r25
     c96:	81 93       	st	Z+, r24

00000c98 <add_89_25>:
     c98:	8d 91       	ld	r24, X+
     c9a:	99 91       	ld	r25, Y+
     c9c:	89 1f       	adc	r24, r25
     c9e:	81 93       	st	Z+, r24

00000ca0 <add_89_24>:
     ca0:	8d 91       	ld	r24, X+
     ca2:	99 91       	ld	r25, Y+
     ca4:	89 1f       	adc	r24, r25
     ca6:	81 93       	st	Z+, r24

00000ca8 <add_89_23>:
     ca8:	8d 91       	ld	r24, X+
     caa:	99 91       	ld	r25, Y+
     cac:	89 1f       	adc	r24, r25
     cae:	81 93       	st	Z+, r24

00000cb0 <add_89_22>:
     cb0:	8d 91       	ld	r24, X+
     cb2:	99 91       	ld	r25, Y+
     cb4:	89 1f       	adc	r24, r25
     cb6:	81 93       	st	Z+, r24

00000cb8 <add_89_21>:
     cb8:	8d 91       	ld	r24, X+
     cba:	99 91       	ld	r25, Y+
     cbc:	89 1f       	adc	r24, r25
     cbe:	81 93       	st	Z+, r24

00000cc0 <add_89_20>:
     cc0:	8d 91       	ld	r24, X+
     cc2:	99 91       	ld	r25, Y+
     cc4:	89 1f       	adc	r24, r25
     cc6:	81 93       	st	Z+, r24

00000cc8 <add_89_19>:
     cc8:	8d 91       	ld	r24, X+
     cca:	99 91       	ld	r25, Y+
     ccc:	89 1f       	adc	r24, r25
     cce:	81 93       	st	Z+, r24

00000cd0 <add_89_18>:
     cd0:	8d 91       	ld	r24, X+
     cd2:	99 91       	ld	r25, Y+
     cd4:	89 1f       	adc	r24, r25
     cd6:	81 93       	st	Z+, r24

00000cd8 <add_89_17>:
     cd8:	8d 91       	ld	r24, X+
     cda:	99 91       	ld	r25, Y+
     cdc:	89 1f       	adc	r24, r25
     cde:	81 93       	st	Z+, r24

00000ce0 <add_89_16>:
     ce0:	8d 91       	ld	r24, X+
     ce2:	99 91       	ld	r25, Y+
     ce4:	89 1f       	adc	r24, r25
     ce6:	81 93       	st	Z+, r24

00000ce8 <add_89_15>:
     ce8:	8d 91       	ld	r24, X+
     cea:	99 91       	ld	r25, Y+
     cec:	89 1f       	adc	r24, r25
     cee:	81 93       	st	Z+, r24

00000cf0 <add_89_14>:
     cf0:	8d 91       	ld	r24, X+
     cf2:	99 91       	ld	r25, Y+
     cf4:	89 1f       	adc	r24, r25
     cf6:	81 93       	st	Z+, r24

00000cf8 <add_89_13>:
     cf8:	8d 91       	ld	r24, X+
     cfa:	99 91       	ld	r25, Y+
     cfc:	89 1f       	adc	r24, r25
     cfe:	81 93       	st	Z+, r24

00000d00 <add_89_12>:
     d00:	8d 91       	ld	r24, X+
     d02:	99 91       	ld	r25, Y+
     d04:	89 1f       	adc	r24, r25
     d06:	81 93       	st	Z+, r24

00000d08 <add_89_11>:
     d08:	8d 91       	ld	r24, X+
     d0a:	99 91       	ld	r25, Y+
     d0c:	89 1f       	adc	r24, r25
     d0e:	81 93       	st	Z+, r24

00000d10 <add_89_10>:
     d10:	8d 91       	ld	r24, X+
     d12:	99 91       	ld	r25, Y+
     d14:	89 1f       	adc	r24, r25
     d16:	81 93       	st	Z+, r24

00000d18 <add_89_9>:
     d18:	8d 91       	ld	r24, X+
     d1a:	99 91       	ld	r25, Y+
     d1c:	89 1f       	adc	r24, r25
     d1e:	81 93       	st	Z+, r24

00000d20 <add_89_8>:
     d20:	8d 91       	ld	r24, X+
     d22:	99 91       	ld	r25, Y+
     d24:	89 1f       	adc	r24, r25
     d26:	81 93       	st	Z+, r24

00000d28 <add_89_7>:
     d28:	8d 91       	ld	r24, X+
     d2a:	99 91       	ld	r25, Y+
     d2c:	89 1f       	adc	r24, r25
     d2e:	81 93       	st	Z+, r24

00000d30 <add_89_6>:
     d30:	8d 91       	ld	r24, X+
     d32:	99 91       	ld	r25, Y+
     d34:	89 1f       	adc	r24, r25
     d36:	81 93       	st	Z+, r24

00000d38 <add_89_5>:
     d38:	8d 91       	ld	r24, X+
     d3a:	99 91       	ld	r25, Y+
     d3c:	89 1f       	adc	r24, r25
     d3e:	81 93       	st	Z+, r24

00000d40 <add_89_4>:
     d40:	8d 91       	ld	r24, X+
     d42:	99 91       	ld	r25, Y+
     d44:	89 1f       	adc	r24, r25
     d46:	81 93       	st	Z+, r24

00000d48 <add_89_3>:
     d48:	8d 91       	ld	r24, X+
     d4a:	99 91       	ld	r25, Y+
     d4c:	89 1f       	adc	r24, r25
     d4e:	81 93       	st	Z+, r24

00000d50 <add_89_2>:
     d50:	8d 91       	ld	r24, X+
     d52:	99 91       	ld	r25, Y+
     d54:	89 1f       	adc	r24, r25
     d56:	81 93       	st	Z+, r24

00000d58 <add_89_1>:
     d58:	8d 91       	ld	r24, X+
     d5a:	99 91       	ld	r25, Y+
     d5c:	89 1f       	adc	r24, r25
     d5e:	81 93       	st	Z+, r24
     d60:	81 2d       	mov	r24, r1
     d62:	88 1f       	adc	r24, r24
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	08 95       	ret

00000d6a <uECC_vli_sub>:
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	22 0f       	add	r18, r18
     d70:	db 01       	movw	r26, r22
     d72:	ea 01       	movw	r28, r20
     d74:	ac 01       	movw	r20, r24
     d76:	e1 e0       	ldi	r30, 0x01	; 1
     d78:	f7 e0       	ldi	r31, 0x07	; 7
     d7a:	e2 1b       	sub	r30, r18
     d7c:	f1 09       	sbc	r31, r1
     d7e:	88 94       	clc
     d80:	09 94       	ijmp
     d82:	fa 01       	movw	r30, r20
     d84:	3e c0       	rjmp	.+124    	; 0xe02 <sub_129_32>
     d86:	fa 01       	movw	r30, r20
     d88:	40 c0       	rjmp	.+128    	; 0xe0a <sub_129_31>
     d8a:	fa 01       	movw	r30, r20
     d8c:	42 c0       	rjmp	.+132    	; 0xe12 <sub_129_30>
     d8e:	fa 01       	movw	r30, r20
     d90:	44 c0       	rjmp	.+136    	; 0xe1a <sub_129_29>
     d92:	fa 01       	movw	r30, r20
     d94:	46 c0       	rjmp	.+140    	; 0xe22 <sub_129_28>
     d96:	fa 01       	movw	r30, r20
     d98:	48 c0       	rjmp	.+144    	; 0xe2a <sub_129_27>
     d9a:	fa 01       	movw	r30, r20
     d9c:	4a c0       	rjmp	.+148    	; 0xe32 <sub_129_26>
     d9e:	fa 01       	movw	r30, r20
     da0:	4c c0       	rjmp	.+152    	; 0xe3a <sub_129_25>
     da2:	fa 01       	movw	r30, r20
     da4:	4e c0       	rjmp	.+156    	; 0xe42 <sub_129_24>
     da6:	fa 01       	movw	r30, r20
     da8:	50 c0       	rjmp	.+160    	; 0xe4a <sub_129_23>
     daa:	fa 01       	movw	r30, r20
     dac:	52 c0       	rjmp	.+164    	; 0xe52 <sub_129_22>
     dae:	fa 01       	movw	r30, r20
     db0:	54 c0       	rjmp	.+168    	; 0xe5a <sub_129_21>
     db2:	fa 01       	movw	r30, r20
     db4:	56 c0       	rjmp	.+172    	; 0xe62 <sub_129_20>
     db6:	fa 01       	movw	r30, r20
     db8:	58 c0       	rjmp	.+176    	; 0xe6a <sub_129_19>
     dba:	fa 01       	movw	r30, r20
     dbc:	5a c0       	rjmp	.+180    	; 0xe72 <sub_129_18>
     dbe:	fa 01       	movw	r30, r20
     dc0:	5c c0       	rjmp	.+184    	; 0xe7a <sub_129_17>
     dc2:	fa 01       	movw	r30, r20
     dc4:	5e c0       	rjmp	.+188    	; 0xe82 <sub_129_16>
     dc6:	fa 01       	movw	r30, r20
     dc8:	60 c0       	rjmp	.+192    	; 0xe8a <sub_129_15>
     dca:	fa 01       	movw	r30, r20
     dcc:	62 c0       	rjmp	.+196    	; 0xe92 <sub_129_14>
     dce:	fa 01       	movw	r30, r20
     dd0:	64 c0       	rjmp	.+200    	; 0xe9a <sub_129_13>
     dd2:	fa 01       	movw	r30, r20
     dd4:	66 c0       	rjmp	.+204    	; 0xea2 <sub_129_12>
     dd6:	fa 01       	movw	r30, r20
     dd8:	68 c0       	rjmp	.+208    	; 0xeaa <sub_129_11>
     dda:	fa 01       	movw	r30, r20
     ddc:	6a c0       	rjmp	.+212    	; 0xeb2 <sub_129_10>
     dde:	fa 01       	movw	r30, r20
     de0:	6c c0       	rjmp	.+216    	; 0xeba <sub_129_9>
     de2:	fa 01       	movw	r30, r20
     de4:	6e c0       	rjmp	.+220    	; 0xec2 <sub_129_8>
     de6:	fa 01       	movw	r30, r20
     de8:	70 c0       	rjmp	.+224    	; 0xeca <sub_129_7>
     dea:	fa 01       	movw	r30, r20
     dec:	72 c0       	rjmp	.+228    	; 0xed2 <sub_129_6>
     dee:	fa 01       	movw	r30, r20
     df0:	74 c0       	rjmp	.+232    	; 0xeda <sub_129_5>
     df2:	fa 01       	movw	r30, r20
     df4:	76 c0       	rjmp	.+236    	; 0xee2 <sub_129_4>
     df6:	fa 01       	movw	r30, r20
     df8:	78 c0       	rjmp	.+240    	; 0xeea <sub_129_3>
     dfa:	fa 01       	movw	r30, r20
     dfc:	7a c0       	rjmp	.+244    	; 0xef2 <sub_129_2>
     dfe:	fa 01       	movw	r30, r20
     e00:	7c c0       	rjmp	.+248    	; 0xefa <sub_129_1>

00000e02 <sub_129_32>:
     e02:	8d 91       	ld	r24, X+
     e04:	99 91       	ld	r25, Y+
     e06:	89 0b       	sbc	r24, r25
     e08:	81 93       	st	Z+, r24

00000e0a <sub_129_31>:
     e0a:	8d 91       	ld	r24, X+
     e0c:	99 91       	ld	r25, Y+
     e0e:	89 0b       	sbc	r24, r25
     e10:	81 93       	st	Z+, r24

00000e12 <sub_129_30>:
     e12:	8d 91       	ld	r24, X+
     e14:	99 91       	ld	r25, Y+
     e16:	89 0b       	sbc	r24, r25
     e18:	81 93       	st	Z+, r24

00000e1a <sub_129_29>:
     e1a:	8d 91       	ld	r24, X+
     e1c:	99 91       	ld	r25, Y+
     e1e:	89 0b       	sbc	r24, r25
     e20:	81 93       	st	Z+, r24

00000e22 <sub_129_28>:
     e22:	8d 91       	ld	r24, X+
     e24:	99 91       	ld	r25, Y+
     e26:	89 0b       	sbc	r24, r25
     e28:	81 93       	st	Z+, r24

00000e2a <sub_129_27>:
     e2a:	8d 91       	ld	r24, X+
     e2c:	99 91       	ld	r25, Y+
     e2e:	89 0b       	sbc	r24, r25
     e30:	81 93       	st	Z+, r24

00000e32 <sub_129_26>:
     e32:	8d 91       	ld	r24, X+
     e34:	99 91       	ld	r25, Y+
     e36:	89 0b       	sbc	r24, r25
     e38:	81 93       	st	Z+, r24

00000e3a <sub_129_25>:
     e3a:	8d 91       	ld	r24, X+
     e3c:	99 91       	ld	r25, Y+
     e3e:	89 0b       	sbc	r24, r25
     e40:	81 93       	st	Z+, r24

00000e42 <sub_129_24>:
     e42:	8d 91       	ld	r24, X+
     e44:	99 91       	ld	r25, Y+
     e46:	89 0b       	sbc	r24, r25
     e48:	81 93       	st	Z+, r24

00000e4a <sub_129_23>:
     e4a:	8d 91       	ld	r24, X+
     e4c:	99 91       	ld	r25, Y+
     e4e:	89 0b       	sbc	r24, r25
     e50:	81 93       	st	Z+, r24

00000e52 <sub_129_22>:
     e52:	8d 91       	ld	r24, X+
     e54:	99 91       	ld	r25, Y+
     e56:	89 0b       	sbc	r24, r25
     e58:	81 93       	st	Z+, r24

00000e5a <sub_129_21>:
     e5a:	8d 91       	ld	r24, X+
     e5c:	99 91       	ld	r25, Y+
     e5e:	89 0b       	sbc	r24, r25
     e60:	81 93       	st	Z+, r24

00000e62 <sub_129_20>:
     e62:	8d 91       	ld	r24, X+
     e64:	99 91       	ld	r25, Y+
     e66:	89 0b       	sbc	r24, r25
     e68:	81 93       	st	Z+, r24

00000e6a <sub_129_19>:
     e6a:	8d 91       	ld	r24, X+
     e6c:	99 91       	ld	r25, Y+
     e6e:	89 0b       	sbc	r24, r25
     e70:	81 93       	st	Z+, r24

00000e72 <sub_129_18>:
     e72:	8d 91       	ld	r24, X+
     e74:	99 91       	ld	r25, Y+
     e76:	89 0b       	sbc	r24, r25
     e78:	81 93       	st	Z+, r24

00000e7a <sub_129_17>:
     e7a:	8d 91       	ld	r24, X+
     e7c:	99 91       	ld	r25, Y+
     e7e:	89 0b       	sbc	r24, r25
     e80:	81 93       	st	Z+, r24

00000e82 <sub_129_16>:
     e82:	8d 91       	ld	r24, X+
     e84:	99 91       	ld	r25, Y+
     e86:	89 0b       	sbc	r24, r25
     e88:	81 93       	st	Z+, r24

00000e8a <sub_129_15>:
     e8a:	8d 91       	ld	r24, X+
     e8c:	99 91       	ld	r25, Y+
     e8e:	89 0b       	sbc	r24, r25
     e90:	81 93       	st	Z+, r24

00000e92 <sub_129_14>:
     e92:	8d 91       	ld	r24, X+
     e94:	99 91       	ld	r25, Y+
     e96:	89 0b       	sbc	r24, r25
     e98:	81 93       	st	Z+, r24

00000e9a <sub_129_13>:
     e9a:	8d 91       	ld	r24, X+
     e9c:	99 91       	ld	r25, Y+
     e9e:	89 0b       	sbc	r24, r25
     ea0:	81 93       	st	Z+, r24

00000ea2 <sub_129_12>:
     ea2:	8d 91       	ld	r24, X+
     ea4:	99 91       	ld	r25, Y+
     ea6:	89 0b       	sbc	r24, r25
     ea8:	81 93       	st	Z+, r24

00000eaa <sub_129_11>:
     eaa:	8d 91       	ld	r24, X+
     eac:	99 91       	ld	r25, Y+
     eae:	89 0b       	sbc	r24, r25
     eb0:	81 93       	st	Z+, r24

00000eb2 <sub_129_10>:
     eb2:	8d 91       	ld	r24, X+
     eb4:	99 91       	ld	r25, Y+
     eb6:	89 0b       	sbc	r24, r25
     eb8:	81 93       	st	Z+, r24

00000eba <sub_129_9>:
     eba:	8d 91       	ld	r24, X+
     ebc:	99 91       	ld	r25, Y+
     ebe:	89 0b       	sbc	r24, r25
     ec0:	81 93       	st	Z+, r24

00000ec2 <sub_129_8>:
     ec2:	8d 91       	ld	r24, X+
     ec4:	99 91       	ld	r25, Y+
     ec6:	89 0b       	sbc	r24, r25
     ec8:	81 93       	st	Z+, r24

00000eca <sub_129_7>:
     eca:	8d 91       	ld	r24, X+
     ecc:	99 91       	ld	r25, Y+
     ece:	89 0b       	sbc	r24, r25
     ed0:	81 93       	st	Z+, r24

00000ed2 <sub_129_6>:
     ed2:	8d 91       	ld	r24, X+
     ed4:	99 91       	ld	r25, Y+
     ed6:	89 0b       	sbc	r24, r25
     ed8:	81 93       	st	Z+, r24

00000eda <sub_129_5>:
     eda:	8d 91       	ld	r24, X+
     edc:	99 91       	ld	r25, Y+
     ede:	89 0b       	sbc	r24, r25
     ee0:	81 93       	st	Z+, r24

00000ee2 <sub_129_4>:
     ee2:	8d 91       	ld	r24, X+
     ee4:	99 91       	ld	r25, Y+
     ee6:	89 0b       	sbc	r24, r25
     ee8:	81 93       	st	Z+, r24

00000eea <sub_129_3>:
     eea:	8d 91       	ld	r24, X+
     eec:	99 91       	ld	r25, Y+
     eee:	89 0b       	sbc	r24, r25
     ef0:	81 93       	st	Z+, r24

00000ef2 <sub_129_2>:
     ef2:	8d 91       	ld	r24, X+
     ef4:	99 91       	ld	r25, Y+
     ef6:	89 0b       	sbc	r24, r25
     ef8:	81 93       	st	Z+, r24

00000efa <sub_129_1>:
     efa:	8d 91       	ld	r24, X+
     efc:	99 91       	ld	r25, Y+
     efe:	89 0b       	sbc	r24, r25
     f00:	81 93       	st	Z+, r24
     f02:	81 2d       	mov	r24, r1
     f04:	88 1f       	adc	r24, r24
     f06:	df 91       	pop	r29
     f08:	cf 91       	pop	r28
     f0a:	08 95       	ret

00000f0c <uECC_vli_mult>:
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
     f10:	fc 01       	movw	r30, r24
     f12:	db 01       	movw	r26, r22
     f14:	ea 01       	movw	r28, r20
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	89 2f       	mov	r24, r25
     f1a:	39 2f       	mov	r19, r25
     f1c:	49 2f       	mov	r20, r25
     f1e:	51 e0       	ldi	r21, 0x01	; 1
     f20:	60 e0       	ldi	r22, 0x00	; 0
     f22:	c5 0f       	add	r28, r21
     f24:	d4 1f       	adc	r29, r20
     f26:	0d 90       	ld	r0, X+
     f28:	1a 90       	ld	r1, -Y
     f2a:	01 9c       	mul	r0, r1
     f2c:	90 0d       	add	r25, r0
     f2e:	81 1d       	adc	r24, r1
     f30:	34 1f       	adc	r19, r20
     f32:	63 95       	inc	r22
     f34:	65 17       	cp	r22, r21
     f36:	b8 f3       	brcs	.-18     	; 0xf26 <uECC_vli_mult+0x1a>
     f38:	a5 1b       	sub	r26, r21
     f3a:	b4 0b       	sbc	r27, r20
     f3c:	91 93       	st	Z+, r25
     f3e:	98 2f       	mov	r25, r24
     f40:	83 2f       	mov	r24, r19
     f42:	34 2f       	mov	r19, r20
     f44:	53 95       	inc	r21
     f46:	52 17       	cp	r21, r18
     f48:	58 f3       	brcs	.-42     	; 0xf20 <uECC_vli_mult+0x14>
     f4a:	52 2f       	mov	r21, r18
     f4c:	c2 0f       	add	r28, r18
     f4e:	d4 1f       	adc	r29, r20
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	0d 90       	ld	r0, X+
     f54:	1a 90       	ld	r1, -Y
     f56:	01 9c       	mul	r0, r1
     f58:	90 0d       	add	r25, r0
     f5a:	81 1d       	adc	r24, r1
     f5c:	34 1f       	adc	r19, r20
     f5e:	63 95       	inc	r22
     f60:	65 17       	cp	r22, r21
     f62:	b8 f3       	brcs	.-18     	; 0xf52 <uECC_vli_mult+0x46>
     f64:	c5 0f       	add	r28, r21
     f66:	d4 1f       	adc	r29, r20
     f68:	91 93       	st	Z+, r25
     f6a:	98 2f       	mov	r25, r24
     f6c:	83 2f       	mov	r24, r19
     f6e:	34 2f       	mov	r19, r20
     f70:	5a 95       	dec	r21
     f72:	a5 1b       	sub	r26, r21
     f74:	b4 0b       	sbc	r27, r20
     f76:	54 17       	cp	r21, r20
     f78:	59 f7       	brne	.-42     	; 0xf50 <uECC_vli_mult+0x44>
     f7a:	91 93       	st	Z+, r25
     f7c:	11 24       	eor	r1, r1
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	08 95       	ret

00000f84 <uECC_vli_isZero>:
     f84:	16 16       	cp	r1, r22
     f86:	7c f4       	brge	.+30     	; 0xfa6 <uECC_vli_isZero+0x22>
     f88:	fc 01       	movw	r30, r24
     f8a:	61 50       	subi	r22, 0x01	; 1
     f8c:	46 2f       	mov	r20, r22
     f8e:	50 e0       	ldi	r21, 0x00	; 0
     f90:	4f 5f       	subi	r20, 0xFF	; 255
     f92:	5f 4f       	sbci	r21, 0xFF	; 255
     f94:	48 0f       	add	r20, r24
     f96:	59 1f       	adc	r21, r25
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	21 91       	ld	r18, Z+
     f9c:	92 2b       	or	r25, r18
     f9e:	e4 17       	cp	r30, r20
     fa0:	f5 07       	cpc	r31, r21
     fa2:	d9 f7       	brne	.-10     	; 0xf9a <uECC_vli_isZero+0x16>
     fa4:	01 c0       	rjmp	.+2      	; 0xfa8 <uECC_vli_isZero+0x24>
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	91 11       	cpse	r25, r1
     fac:	80 e0       	ldi	r24, 0x00	; 0
     fae:	08 95       	ret

00000fb0 <uECC_vli_testBit>:
     fb0:	9b 01       	movw	r18, r22
     fb2:	35 95       	asr	r19
     fb4:	27 95       	ror	r18
     fb6:	35 95       	asr	r19
     fb8:	27 95       	ror	r18
     fba:	35 95       	asr	r19
     fbc:	27 95       	ror	r18
     fbe:	82 0f       	add	r24, r18
     fc0:	93 1f       	adc	r25, r19
     fc2:	67 70       	andi	r22, 0x07	; 7
     fc4:	77 27       	eor	r23, r23
     fc6:	21 e0       	ldi	r18, 0x01	; 1
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	02 c0       	rjmp	.+4      	; 0xfd0 <uECC_vli_testBit+0x20>
     fcc:	22 0f       	add	r18, r18
     fce:	33 1f       	adc	r19, r19
     fd0:	6a 95       	dec	r22
     fd2:	e2 f7       	brpl	.-8      	; 0xfcc <uECC_vli_testBit+0x1c>
     fd4:	fc 01       	movw	r30, r24
     fd6:	80 81       	ld	r24, Z
     fd8:	82 23       	and	r24, r18
     fda:	08 95       	ret

00000fdc <uECC_vli_numBits>:
     fdc:	9c 01       	movw	r18, r24
     fde:	61 50       	subi	r22, 0x01	; 1
     fe0:	92 f0       	brmi	.+36     	; 0x1006 <uECC_vli_numBits+0x2a>
     fe2:	fc 01       	movw	r30, r24
     fe4:	e6 0f       	add	r30, r22
     fe6:	f1 1d       	adc	r31, r1
     fe8:	67 fd       	sbrc	r22, 7
     fea:	fa 95       	dec	r31
     fec:	80 81       	ld	r24, Z
     fee:	81 11       	cpse	r24, r1
     ff0:	0a c0       	rjmp	.+20     	; 0x1006 <uECC_vli_numBits+0x2a>
     ff2:	61 50       	subi	r22, 0x01	; 1
     ff4:	42 f0       	brmi	.+16     	; 0x1006 <uECC_vli_numBits+0x2a>
     ff6:	f9 01       	movw	r30, r18
     ff8:	e6 0f       	add	r30, r22
     ffa:	f1 1d       	adc	r31, r1
     ffc:	67 fd       	sbrc	r22, 7
     ffe:	fa 95       	dec	r31
    1000:	90 81       	ld	r25, Z
    1002:	99 23       	and	r25, r25
    1004:	b1 f3       	breq	.-20     	; 0xff2 <uECC_vli_numBits+0x16>
    1006:	6f 5f       	subi	r22, 0xFF	; 255
    1008:	e9 f0       	breq	.+58     	; 0x1044 <uECC_vli_numBits+0x68>
    100a:	26 0f       	add	r18, r22
    100c:	31 1d       	adc	r19, r1
    100e:	67 fd       	sbrc	r22, 7
    1010:	3a 95       	dec	r19
    1012:	f9 01       	movw	r30, r18
    1014:	31 97       	sbiw	r30, 0x01	; 1
    1016:	80 81       	ld	r24, Z
    1018:	88 23       	and	r24, r24
    101a:	31 f0       	breq	.+12     	; 0x1028 <uECC_vli_numBits+0x4c>
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	86 95       	lsr	r24
    1020:	2f 5f       	subi	r18, 0xFF	; 255
    1022:	81 11       	cpse	r24, r1
    1024:	fc cf       	rjmp	.-8      	; 0x101e <uECC_vli_numBits+0x42>
    1026:	01 c0       	rjmp	.+2      	; 0x102a <uECC_vli_numBits+0x4e>
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	86 2f       	mov	r24, r22
    102c:	66 0f       	add	r22, r22
    102e:	99 0b       	sbc	r25, r25
    1030:	01 97       	sbiw	r24, 0x01	; 1
    1032:	88 0f       	add	r24, r24
    1034:	99 1f       	adc	r25, r25
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	82 0f       	add	r24, r18
    1040:	91 1d       	adc	r25, r1
    1042:	08 95       	ret
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	08 95       	ret

0000104a <uECC_vli_cmp_unsafe>:
    104a:	dc 01       	movw	r26, r24
    104c:	41 50       	subi	r20, 0x01	; 1
    104e:	2a f1       	brmi	.+74     	; 0x109a <uECC_vli_cmp_unsafe+0x50>
    1050:	84 2f       	mov	r24, r20
    1052:	04 2e       	mov	r0, r20
    1054:	00 0c       	add	r0, r0
    1056:	99 0b       	sbc	r25, r25
    1058:	fd 01       	movw	r30, r26
    105a:	e8 0f       	add	r30, r24
    105c:	f9 1f       	adc	r31, r25
    105e:	20 81       	ld	r18, Z
    1060:	fb 01       	movw	r30, r22
    1062:	e8 0f       	add	r30, r24
    1064:	f9 1f       	adc	r31, r25
    1066:	80 81       	ld	r24, Z
    1068:	82 17       	cp	r24, r18
    106a:	c8 f0       	brcs	.+50     	; 0x109e <uECC_vli_cmp_unsafe+0x54>
    106c:	28 17       	cp	r18, r24
    106e:	88 f4       	brcc	.+34     	; 0x1092 <uECC_vli_cmp_unsafe+0x48>
    1070:	18 c0       	rjmp	.+48     	; 0x10a2 <uECC_vli_cmp_unsafe+0x58>
    1072:	24 2f       	mov	r18, r20
    1074:	04 2e       	mov	r0, r20
    1076:	00 0c       	add	r0, r0
    1078:	33 0b       	sbc	r19, r19
    107a:	fd 01       	movw	r30, r26
    107c:	e2 0f       	add	r30, r18
    107e:	f3 1f       	adc	r31, r19
    1080:	50 81       	ld	r21, Z
    1082:	fb 01       	movw	r30, r22
    1084:	e2 0f       	add	r30, r18
    1086:	f3 1f       	adc	r31, r19
    1088:	90 81       	ld	r25, Z
    108a:	95 17       	cp	r25, r21
    108c:	60 f0       	brcs	.+24     	; 0x10a6 <uECC_vli_cmp_unsafe+0x5c>
    108e:	59 17       	cp	r21, r25
    1090:	60 f0       	brcs	.+24     	; 0x10aa <uECC_vli_cmp_unsafe+0x60>
    1092:	41 50       	subi	r20, 0x01	; 1
    1094:	72 f7       	brpl	.-36     	; 0x1072 <uECC_vli_cmp_unsafe+0x28>
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	08 95       	ret
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	08 95       	ret
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	08 95       	ret
    10a2:	8f ef       	ldi	r24, 0xFF	; 255
    10a4:	08 95       	ret
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	08 95       	ret
    10aa:	8f ef       	ldi	r24, 0xFF	; 255
    10ac:	08 95       	ret

000010ae <uECC_vli_cmp>:
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	cd b7       	in	r28, 0x3d	; 61
    10b8:	de b7       	in	r29, 0x3e	; 62
    10ba:	a0 97       	sbiw	r28, 0x20	; 32
    10bc:	0f b6       	in	r0, 0x3f	; 63
    10be:	f8 94       	cli
    10c0:	de bf       	out	0x3e, r29	; 62
    10c2:	0f be       	out	0x3f, r0	; 63
    10c4:	cd bf       	out	0x3d, r28	; 61
    10c6:	14 2f       	mov	r17, r20
    10c8:	24 2f       	mov	r18, r20
    10ca:	ab 01       	movw	r20, r22
    10cc:	bc 01       	movw	r22, r24
    10ce:	ce 01       	movw	r24, r28
    10d0:	01 96       	adiw	r24, 0x01	; 1
    10d2:	4b de       	rcall	.-874    	; 0xd6a <uECC_vli_sub>
    10d4:	08 2f       	mov	r16, r24
    10d6:	61 2f       	mov	r22, r17
    10d8:	ce 01       	movw	r24, r28
    10da:	01 96       	adiw	r24, 0x01	; 1
    10dc:	53 df       	rcall	.-346    	; 0xf84 <uECC_vli_isZero>
    10de:	91 e0       	ldi	r25, 0x01	; 1
    10e0:	81 11       	cpse	r24, r1
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	01 11       	cpse	r16, r1
    10e8:	01 c0       	rjmp	.+2      	; 0x10ec <uECC_vli_cmp+0x3e>
    10ea:	80 e0       	ldi	r24, 0x00	; 0
    10ec:	88 0f       	add	r24, r24
    10ee:	98 1b       	sub	r25, r24
    10f0:	89 2f       	mov	r24, r25
    10f2:	a0 96       	adiw	r28, 0x20	; 32
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	df 91       	pop	r29
    1100:	cf 91       	pop	r28
    1102:	1f 91       	pop	r17
    1104:	0f 91       	pop	r16
    1106:	08 95       	ret

00001108 <uECC_vli_modAdd>:
    1108:	ef 92       	push	r14
    110a:	ff 92       	push	r15
    110c:	0f 93       	push	r16
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	ec 01       	movw	r28, r24
    1114:	79 01       	movw	r14, r18
    1116:	20 2f       	mov	r18, r16
    1118:	57 dd       	rcall	.-1362   	; 0xbc8 <uECC_vli_add>
    111a:	81 11       	cpse	r24, r1
    111c:	06 c0       	rjmp	.+12     	; 0x112a <uECC_vli_modAdd+0x22>
    111e:	40 2f       	mov	r20, r16
    1120:	be 01       	movw	r22, r28
    1122:	c7 01       	movw	r24, r14
    1124:	92 df       	rcall	.-220    	; 0x104a <uECC_vli_cmp_unsafe>
    1126:	81 30       	cpi	r24, 0x01	; 1
    1128:	29 f0       	breq	.+10     	; 0x1134 <uECC_vli_modAdd+0x2c>
    112a:	20 2f       	mov	r18, r16
    112c:	a7 01       	movw	r20, r14
    112e:	be 01       	movw	r22, r28
    1130:	ce 01       	movw	r24, r28
    1132:	1b de       	rcall	.-970    	; 0xd6a <uECC_vli_sub>
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	0f 91       	pop	r16
    113a:	ff 90       	pop	r15
    113c:	ef 90       	pop	r14
    113e:	08 95       	ret

00001140 <uECC_vli_modSub>:
    1140:	ef 92       	push	r14
    1142:	ff 92       	push	r15
    1144:	0f 93       	push	r16
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	ec 01       	movw	r28, r24
    114c:	79 01       	movw	r14, r18
    114e:	20 2f       	mov	r18, r16
    1150:	0c de       	rcall	.-1000   	; 0xd6a <uECC_vli_sub>
    1152:	88 23       	and	r24, r24
    1154:	29 f0       	breq	.+10     	; 0x1160 <uECC_vli_modSub+0x20>
    1156:	20 2f       	mov	r18, r16
    1158:	a7 01       	movw	r20, r14
    115a:	be 01       	movw	r22, r28
    115c:	ce 01       	movw	r24, r28
    115e:	34 dd       	rcall	.-1432   	; 0xbc8 <uECC_vli_add>
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	0f 91       	pop	r16
    1166:	ff 90       	pop	r15
    1168:	ef 90       	pop	r14
    116a:	08 95       	ret

0000116c <uECC_vli_modMult>:
    116c:	2f 92       	push	r2
    116e:	3f 92       	push	r3
    1170:	4f 92       	push	r4
    1172:	5f 92       	push	r5
    1174:	6f 92       	push	r6
    1176:	7f 92       	push	r7
    1178:	8f 92       	push	r8
    117a:	9f 92       	push	r9
    117c:	af 92       	push	r10
    117e:	bf 92       	push	r11
    1180:	cf 92       	push	r12
    1182:	df 92       	push	r13
    1184:	ef 92       	push	r14
    1186:	ff 92       	push	r15
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	cf 93       	push	r28
    118e:	df 93       	push	r29
    1190:	cd b7       	in	r28, 0x3d	; 61
    1192:	de b7       	in	r29, 0x3e	; 62
    1194:	cc 5c       	subi	r28, 0xCC	; 204
    1196:	d1 09       	sbc	r29, r1
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	de bf       	out	0x3e, r29	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	cd bf       	out	0x3d, r28	; 61
    11a2:	c7 53       	subi	r28, 0x37	; 55
    11a4:	df 4f       	sbci	r29, 0xFF	; 255
    11a6:	99 83       	std	Y+1, r25	; 0x01
    11a8:	88 83       	st	Y, r24
    11aa:	c9 5c       	subi	r28, 0xC9	; 201
    11ac:	d0 40       	sbci	r29, 0x00	; 0
    11ae:	c2 2e       	mov	r12, r18
    11b0:	d3 2e       	mov	r13, r19
    11b2:	a0 2e       	mov	r10, r16
    11b4:	20 2f       	mov	r18, r16
    11b6:	8e 01       	movw	r16, r28
    11b8:	0f 5f       	subi	r16, 0xFF	; 255
    11ba:	1f 4f       	sbci	r17, 0xFF	; 255
    11bc:	c8 01       	movw	r24, r16
    11be:	a6 de       	rcall	.-692    	; 0xf0c <uECC_vli_mult>
    11c0:	ce 01       	movw	r24, r28
    11c2:	8f 5b       	subi	r24, 0xBF	; 191
    11c4:	9f 4f       	sbci	r25, 0xFF	; 255
    11c6:	cf 53       	subi	r28, 0x3F	; 63
    11c8:	df 4f       	sbci	r29, 0xFF	; 255
    11ca:	99 83       	std	Y+1, r25	; 0x01
    11cc:	88 83       	st	Y, r24
    11ce:	c1 5c       	subi	r28, 0xC1	; 193
    11d0:	d0 40       	sbci	r29, 0x00	; 0
    11d2:	cd 53       	subi	r28, 0x3D	; 61
    11d4:	df 4f       	sbci	r29, 0xFF	; 255
    11d6:	19 83       	std	Y+1, r17	; 0x01
    11d8:	08 83       	st	Y, r16
    11da:	c3 5c       	subi	r28, 0xC3	; 195
    11dc:	d0 40       	sbci	r29, 0x00	; 0
    11de:	8a 2c       	mov	r8, r10
    11e0:	0a 2c       	mov	r0, r10
    11e2:	00 0c       	add	r0, r0
    11e4:	99 08       	sbc	r9, r9
    11e6:	6a 2d       	mov	r22, r10
    11e8:	8c 2d       	mov	r24, r12
    11ea:	9d 2d       	mov	r25, r13
    11ec:	f7 de       	rcall	.-530    	; 0xfdc <uECC_vli_numBits>
    11ee:	34 01       	movw	r6, r8
    11f0:	66 0c       	add	r6, r6
    11f2:	77 1c       	adc	r7, r7
    11f4:	66 0c       	add	r6, r6
    11f6:	77 1c       	adc	r7, r7
    11f8:	66 0c       	add	r6, r6
    11fa:	77 1c       	adc	r7, r7
    11fc:	66 0c       	add	r6, r6
    11fe:	77 1c       	adc	r7, r7
    1200:	68 1a       	sub	r6, r24
    1202:	79 0a       	sbc	r7, r25
    1204:	73 01       	movw	r14, r6
    1206:	1a f4       	brpl	.+6      	; 0x120e <uECC_vli_modMult+0xa2>
    1208:	27 e0       	ldi	r18, 0x07	; 7
    120a:	e2 0e       	add	r14, r18
    120c:	f1 1c       	adc	r15, r1
    120e:	f5 94       	asr	r15
    1210:	e7 94       	ror	r14
    1212:	f5 94       	asr	r15
    1214:	e7 94       	ror	r14
    1216:	f5 94       	asr	r15
    1218:	e7 94       	ror	r14
    121a:	c3 01       	movw	r24, r6
    121c:	87 70       	andi	r24, 0x07	; 7
    121e:	90 78       	andi	r25, 0x80	; 128
    1220:	99 23       	and	r25, r25
    1222:	24 f4       	brge	.+8      	; 0x122c <uECC_vli_modMult+0xc0>
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	88 6f       	ori	r24, 0xF8	; 248
    1228:	9f 6f       	ori	r25, 0xFF	; 255
    122a:	01 96       	adiw	r24, 0x01	; 1
    122c:	18 2f       	mov	r17, r24
    122e:	6e 2d       	mov	r22, r14
    1230:	ce 01       	movw	r24, r28
    1232:	8f 57       	subi	r24, 0x7F	; 127
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	e2 db       	rcall	.-2108   	; 0x9fc <uECC_vli_clear>
    1238:	11 16       	cp	r1, r17
    123a:	c4 f5       	brge	.+112    	; 0x12ac <uECC_vli_modMult+0x140>
    123c:	aa 20       	and	r10, r10
    123e:	09 f4       	brne	.+2      	; 0x1242 <uECC_vli_modMult+0xd6>
    1240:	41 c0       	rjmp	.+130    	; 0x12c4 <uECC_vli_modMult+0x158>
    1242:	ac 2d       	mov	r26, r12
    1244:	bd 2d       	mov	r27, r13
    1246:	0e 2c       	mov	r0, r14
    1248:	00 0c       	add	r0, r0
    124a:	ff 08       	sbc	r15, r15
    124c:	e1 e8       	ldi	r30, 0x81	; 129
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	ec 0f       	add	r30, r28
    1252:	fd 1f       	adc	r31, r29
    1254:	ee 0d       	add	r30, r14
    1256:	ff 1d       	adc	r31, r15
    1258:	8f ef       	ldi	r24, 0xFF	; 255
    125a:	8a 0d       	add	r24, r10
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	01 96       	adiw	r24, 0x01	; 1
    1260:	e8 0e       	add	r14, r24
    1262:	f9 1e       	adc	r15, r25
    1264:	41 e8       	ldi	r20, 0x81	; 129
    1266:	50 e0       	ldi	r21, 0x00	; 0
    1268:	4c 0f       	add	r20, r28
    126a:	5d 1f       	adc	r21, r29
    126c:	4e 0d       	add	r20, r14
    126e:	5f 1d       	adc	r21, r15
    1270:	00 e0       	ldi	r16, 0x00	; 0
    1272:	68 e0       	ldi	r22, 0x08	; 8
    1274:	70 e0       	ldi	r23, 0x00	; 0
    1276:	61 1b       	sub	r22, r17
    1278:	71 09       	sbc	r23, r1
    127a:	17 fd       	sbrc	r17, 7
    127c:	73 95       	inc	r23
    127e:	9d 91       	ld	r25, X+
    1280:	89 2f       	mov	r24, r25
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	9c 01       	movw	r18, r24
    1286:	01 2e       	mov	r0, r17
    1288:	02 c0       	rjmp	.+4      	; 0x128e <uECC_vli_modMult+0x122>
    128a:	22 0f       	add	r18, r18
    128c:	33 1f       	adc	r19, r19
    128e:	0a 94       	dec	r0
    1290:	e2 f7       	brpl	.-8      	; 0x128a <uECC_vli_modMult+0x11e>
    1292:	20 2b       	or	r18, r16
    1294:	21 93       	st	Z+, r18
    1296:	06 2e       	mov	r0, r22
    1298:	02 c0       	rjmp	.+4      	; 0x129e <uECC_vli_modMult+0x132>
    129a:	95 95       	asr	r25
    129c:	87 95       	ror	r24
    129e:	0a 94       	dec	r0
    12a0:	e2 f7       	brpl	.-8      	; 0x129a <uECC_vli_modMult+0x12e>
    12a2:	08 2f       	mov	r16, r24
    12a4:	e4 17       	cp	r30, r20
    12a6:	f5 07       	cpc	r31, r21
    12a8:	51 f7       	brne	.-44     	; 0x127e <uECC_vli_modMult+0x112>
    12aa:	0c c0       	rjmp	.+24     	; 0x12c4 <uECC_vli_modMult+0x158>
    12ac:	4a 2d       	mov	r20, r10
    12ae:	6c 2d       	mov	r22, r12
    12b0:	7d 2d       	mov	r23, r13
    12b2:	81 e8       	ldi	r24, 0x81	; 129
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	8c 0f       	add	r24, r28
    12b8:	9d 1f       	adc	r25, r29
    12ba:	8e 0d       	add	r24, r14
    12bc:	91 1d       	adc	r25, r1
    12be:	e7 fc       	sbrc	r14, 7
    12c0:	9a 95       	dec	r25
    12c2:	c3 db       	rcall	.-2170   	; 0xa4a <uECC_vli_set>
    12c4:	77 20       	and	r7, r7
    12c6:	0c f4       	brge	.+2      	; 0x12ca <uECC_vli_modMult+0x15e>
    12c8:	a6 c0       	rjmp	.+332    	; 0x1416 <uECC_vli_modMult+0x2aa>
    12ca:	84 01       	movw	r16, r8
    12cc:	00 0f       	add	r16, r16
    12ce:	11 1f       	adc	r17, r17
    12d0:	bb 24       	eor	r11, r11
    12d2:	b3 94       	inc	r11
    12d4:	44 24       	eor	r4, r4
    12d6:	43 94       	inc	r4
    12d8:	51 2c       	mov	r5, r1
    12da:	7e 01       	movw	r14, r28
    12dc:	31 e8       	ldi	r19, 0x81	; 129
    12de:	e3 0e       	add	r14, r19
    12e0:	f1 1c       	adc	r15, r1
    12e2:	c9 53       	subi	r28, 0x39	; 57
    12e4:	df 4f       	sbci	r29, 0xFF	; 255
    12e6:	e8 82       	st	Y, r14
    12e8:	c7 5c       	subi	r28, 0xC7	; 199
    12ea:	d0 40       	sbci	r29, 0x00	; 0
    12ec:	c8 53       	subi	r28, 0x38	; 56
    12ee:	df 4f       	sbci	r29, 0xFF	; 255
    12f0:	f8 82       	st	Y, r15
    12f2:	c8 5c       	subi	r28, 0xC8	; 200
    12f4:	d0 40       	sbci	r29, 0x00	; 0
    12f6:	dd 24       	eor	r13, r13
    12f8:	d3 94       	inc	r13
    12fa:	c1 2c       	mov	r12, r1
    12fc:	c4 01       	movw	r24, r8
    12fe:	01 97       	sbiw	r24, 0x01	; 1
    1300:	17 01       	movw	r2, r14
    1302:	28 0e       	add	r2, r24
    1304:	39 1e       	adc	r3, r25
    1306:	8e 0c       	add	r8, r14
    1308:	9f 1c       	adc	r9, r15
    130a:	c7 01       	movw	r24, r14
    130c:	8a 0d       	add	r24, r10
    130e:	91 1d       	adc	r25, r1
    1310:	a7 fc       	sbrc	r10, 7
    1312:	9a 95       	dec	r25
    1314:	cb 53       	subi	r28, 0x3B	; 59
    1316:	df 4f       	sbci	r29, 0xFF	; 255
    1318:	99 83       	std	Y+1, r25	; 0x01
    131a:	88 83       	st	Y, r24
    131c:	c5 5c       	subi	r28, 0xC5	; 197
    131e:	d0 40       	sbci	r29, 0x00	; 0
    1320:	57 c0       	rjmp	.+174    	; 0x13d0 <uECC_vli_modMult+0x264>
    1322:	e6 2f       	mov	r30, r22
    1324:	06 2e       	mov	r0, r22
    1326:	00 0c       	add	r0, r0
    1328:	ff 0b       	sbc	r31, r31
    132a:	da 01       	movw	r26, r20
    132c:	ae 0f       	add	r26, r30
    132e:	bf 1f       	adc	r27, r31
    1330:	bc 90       	ld	r11, X
    1332:	c5 53       	subi	r28, 0x35	; 53
    1334:	df 4f       	sbci	r29, 0xFF	; 255
    1336:	b8 82       	st	Y, r11
    1338:	cb 5c       	subi	r28, 0xCB	; 203
    133a:	d0 40       	sbci	r29, 0x00	; 0
    133c:	8e 0d       	add	r24, r14
    133e:	9f 1d       	adc	r25, r15
    1340:	dc 01       	movw	r26, r24
    1342:	8c 91       	ld	r24, X
    1344:	b8 1a       	sub	r11, r24
    1346:	8b 2d       	mov	r24, r11
    1348:	87 1b       	sub	r24, r23
    134a:	c5 53       	subi	r28, 0x35	; 53
    134c:	df 4f       	sbci	r29, 0xFF	; 255
    134e:	b8 81       	ld	r27, Y
    1350:	cb 5c       	subi	r28, 0xCB	; 203
    1352:	d0 40       	sbci	r29, 0x00	; 0
    1354:	b8 17       	cp	r27, r24
    1356:	21 f0       	breq	.+8      	; 0x1360 <uECC_vli_modMult+0x1f4>
    1358:	7d 2d       	mov	r23, r13
    135a:	b8 17       	cp	r27, r24
    135c:	08 f0       	brcs	.+2      	; 0x1360 <uECC_vli_modMult+0x1f4>
    135e:	7c 2d       	mov	r23, r12
    1360:	e2 0f       	add	r30, r18
    1362:	f3 1f       	adc	r31, r19
    1364:	80 83       	st	Z, r24
    1366:	6f 5f       	subi	r22, 0xFF	; 255
    1368:	86 2f       	mov	r24, r22
    136a:	06 2e       	mov	r0, r22
    136c:	00 0c       	add	r0, r0
    136e:	99 0b       	sbc	r25, r25
    1370:	80 17       	cp	r24, r16
    1372:	91 07       	cpc	r25, r17
    1374:	b4 f2       	brlt	.-84     	; 0x1322 <uECC_vli_modMult+0x1b6>
    1376:	c4 53       	subi	r28, 0x34	; 52
    1378:	df 4f       	sbci	r29, 0xFF	; 255
    137a:	b8 80       	ld	r11, Y
    137c:	cc 5c       	subi	r28, 0xCC	; 204
    137e:	d0 40       	sbci	r29, 0x00	; 0
    1380:	01 c0       	rjmp	.+2      	; 0x1384 <uECC_vli_modMult+0x218>
    1382:	70 e0       	ldi	r23, 0x00	; 0
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	b7 12       	cpse	r11, r23
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	b8 2e       	mov	r11, r24
    138c:	6a 2d       	mov	r22, r10
    138e:	c9 53       	subi	r28, 0x39	; 57
    1390:	df 4f       	sbci	r29, 0xFF	; 255
    1392:	88 81       	ld	r24, Y
    1394:	c7 5c       	subi	r28, 0xC7	; 199
    1396:	d0 40       	sbci	r29, 0x00	; 0
    1398:	c8 53       	subi	r28, 0x38	; 56
    139a:	df 4f       	sbci	r29, 0xFF	; 255
    139c:	98 81       	ld	r25, Y
    139e:	c8 5c       	subi	r28, 0xC8	; 200
    13a0:	d0 40       	sbci	r29, 0x00	; 0
    13a2:	a0 db       	rcall	.-2240   	; 0xae4 <uECC_vli_rshift1>
    13a4:	f4 01       	movw	r30, r8
    13a6:	80 81       	ld	r24, Z
    13a8:	f0 e8       	ldi	r31, 0x80	; 128
    13aa:	8f 9f       	mul	r24, r31
    13ac:	c0 01       	movw	r24, r0
    13ae:	11 24       	eor	r1, r1
    13b0:	d1 01       	movw	r26, r2
    13b2:	9c 91       	ld	r25, X
    13b4:	89 2b       	or	r24, r25
    13b6:	8c 93       	st	X, r24
    13b8:	6a 2d       	mov	r22, r10
    13ba:	cb 53       	subi	r28, 0x3B	; 59
    13bc:	df 4f       	sbci	r29, 0xFF	; 255
    13be:	88 81       	ld	r24, Y
    13c0:	99 81       	ldd	r25, Y+1	; 0x01
    13c2:	c5 5c       	subi	r28, 0xC5	; 197
    13c4:	d0 40       	sbci	r29, 0x00	; 0
    13c6:	8e db       	rcall	.-2276   	; 0xae4 <uECC_vli_rshift1>
    13c8:	b1 e0       	ldi	r27, 0x01	; 1
    13ca:	6b 1a       	sub	r6, r27
    13cc:	71 08       	sbc	r7, r1
    13ce:	28 f1       	brcs	.+74     	; 0x141a <uECC_vli_modMult+0x2ae>
    13d0:	10 16       	cp	r1, r16
    13d2:	11 06       	cpc	r1, r17
    13d4:	b4 f6       	brge	.-84     	; 0x1382 <uECC_vli_modMult+0x216>
    13d6:	8b 2d       	mov	r24, r11
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	fc 01       	movw	r30, r24
    13dc:	ee 0f       	add	r30, r30
    13de:	ff 1f       	adc	r31, r31
    13e0:	21 ec       	ldi	r18, 0xC1	; 193
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	2c 0f       	add	r18, r28
    13e6:	3d 1f       	adc	r19, r29
    13e8:	e2 0f       	add	r30, r18
    13ea:	f3 1f       	adc	r31, r19
    13ec:	40 81       	ld	r20, Z
    13ee:	51 81       	ldd	r21, Z+1	; 0x01
    13f0:	f2 01       	movw	r30, r4
    13f2:	e8 1b       	sub	r30, r24
    13f4:	f9 0b       	sbc	r31, r25
    13f6:	ee 0f       	add	r30, r30
    13f8:	ff 1f       	adc	r31, r31
    13fa:	e2 0f       	add	r30, r18
    13fc:	f3 1f       	adc	r31, r19
    13fe:	20 81       	ld	r18, Z
    1400:	31 81       	ldd	r19, Z+1	; 0x01
    1402:	70 e0       	ldi	r23, 0x00	; 0
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	60 e0       	ldi	r22, 0x00	; 0
    140a:	c4 53       	subi	r28, 0x34	; 52
    140c:	df 4f       	sbci	r29, 0xFF	; 255
    140e:	b8 82       	st	Y, r11
    1410:	cc 5c       	subi	r28, 0xCC	; 204
    1412:	d0 40       	sbci	r29, 0x00	; 0
    1414:	86 cf       	rjmp	.-244    	; 0x1322 <uECC_vli_modMult+0x1b6>
    1416:	bb 24       	eor	r11, r11
    1418:	b3 94       	inc	r11
    141a:	eb 2d       	mov	r30, r11
    141c:	f0 e0       	ldi	r31, 0x00	; 0
    141e:	ee 0f       	add	r30, r30
    1420:	ff 1f       	adc	r31, r31
    1422:	81 ec       	ldi	r24, 0xC1	; 193
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	8c 0f       	add	r24, r28
    1428:	9d 1f       	adc	r25, r29
    142a:	e8 0f       	add	r30, r24
    142c:	f9 1f       	adc	r31, r25
    142e:	60 81       	ld	r22, Z
    1430:	71 81       	ldd	r23, Z+1	; 0x01
    1432:	4a 2d       	mov	r20, r10
    1434:	c7 53       	subi	r28, 0x37	; 55
    1436:	df 4f       	sbci	r29, 0xFF	; 255
    1438:	88 81       	ld	r24, Y
    143a:	99 81       	ldd	r25, Y+1	; 0x01
    143c:	c9 5c       	subi	r28, 0xC9	; 201
    143e:	d0 40       	sbci	r29, 0x00	; 0
    1440:	04 db       	rcall	.-2552   	; 0xa4a <uECC_vli_set>
    1442:	c4 53       	subi	r28, 0x34	; 52
    1444:	df 4f       	sbci	r29, 0xFF	; 255
    1446:	0f b6       	in	r0, 0x3f	; 63
    1448:	f8 94       	cli
    144a:	de bf       	out	0x3e, r29	; 62
    144c:	0f be       	out	0x3f, r0	; 63
    144e:	cd bf       	out	0x3d, r28	; 61
    1450:	df 91       	pop	r29
    1452:	cf 91       	pop	r28
    1454:	1f 91       	pop	r17
    1456:	0f 91       	pop	r16
    1458:	ff 90       	pop	r15
    145a:	ef 90       	pop	r14
    145c:	df 90       	pop	r13
    145e:	cf 90       	pop	r12
    1460:	bf 90       	pop	r11
    1462:	af 90       	pop	r10
    1464:	9f 90       	pop	r9
    1466:	8f 90       	pop	r8
    1468:	7f 90       	pop	r7
    146a:	6f 90       	pop	r6
    146c:	5f 90       	pop	r5
    146e:	4f 90       	pop	r4
    1470:	3f 90       	pop	r3
    1472:	2f 90       	pop	r2
    1474:	08 95       	ret

00001476 <uECC_vli_modMult_fast>:
    1476:	ef 92       	push	r14
    1478:	ff 92       	push	r15
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	cd b7       	in	r28, 0x3d	; 61
    1484:	de b7       	in	r29, 0x3e	; 62
    1486:	c0 54       	subi	r28, 0x40	; 64
    1488:	d1 09       	sbc	r29, r1
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	f8 94       	cli
    148e:	de bf       	out	0x3e, r29	; 62
    1490:	0f be       	out	0x3f, r0	; 63
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	7c 01       	movw	r14, r24
    1496:	89 01       	movw	r16, r18
    1498:	f9 01       	movw	r30, r18
    149a:	20 81       	ld	r18, Z
    149c:	ce 01       	movw	r24, r28
    149e:	01 96       	adiw	r24, 0x01	; 1
    14a0:	35 dd       	rcall	.-1430   	; 0xf0c <uECC_vli_mult>
    14a2:	f8 01       	movw	r30, r16
    14a4:	e6 55       	subi	r30, 0x56	; 86
    14a6:	ff 4f       	sbci	r31, 0xFF	; 255
    14a8:	01 90       	ld	r0, Z+
    14aa:	f0 81       	ld	r31, Z
    14ac:	e0 2d       	mov	r30, r0
    14ae:	be 01       	movw	r22, r28
    14b0:	6f 5f       	subi	r22, 0xFF	; 255
    14b2:	7f 4f       	sbci	r23, 0xFF	; 255
    14b4:	c7 01       	movw	r24, r14
    14b6:	09 95       	icall
    14b8:	c0 5c       	subi	r28, 0xC0	; 192
    14ba:	df 4f       	sbci	r29, 0xFF	; 255
    14bc:	0f b6       	in	r0, 0x3f	; 63
    14be:	f8 94       	cli
    14c0:	de bf       	out	0x3e, r29	; 62
    14c2:	0f be       	out	0x3f, r0	; 63
    14c4:	cd bf       	out	0x3d, r28	; 61
    14c6:	df 91       	pop	r29
    14c8:	cf 91       	pop	r28
    14ca:	1f 91       	pop	r17
    14cc:	0f 91       	pop	r16
    14ce:	ff 90       	pop	r15
    14d0:	ef 90       	pop	r14
    14d2:	08 95       	ret

000014d4 <uECC_vli_modSquare_fast>:
    14d4:	9a 01       	movw	r18, r20
    14d6:	ab 01       	movw	r20, r22
    14d8:	ce cf       	rjmp	.-100    	; 0x1476 <uECC_vli_modMult_fast>
    14da:	08 95       	ret

000014dc <vli_modInv_update>:
    14dc:	0f 93       	push	r16
    14de:	1f 93       	push	r17
    14e0:	cf 93       	push	r28
    14e2:	df 93       	push	r29
    14e4:	8c 01       	movw	r16, r24
    14e6:	c4 2f       	mov	r28, r20
    14e8:	fc 01       	movw	r30, r24
    14ea:	80 81       	ld	r24, Z
    14ec:	80 ff       	sbrs	r24, 0
    14ee:	15 c0       	rjmp	.+42     	; 0x151a <vli_modInv_update+0x3e>
    14f0:	24 2f       	mov	r18, r20
    14f2:	ab 01       	movw	r20, r22
    14f4:	b8 01       	movw	r22, r16
    14f6:	c8 01       	movw	r24, r16
    14f8:	67 db       	rcall	.-2354   	; 0xbc8 <uECC_vli_add>
    14fa:	d8 2f       	mov	r29, r24
    14fc:	6c 2f       	mov	r22, r28
    14fe:	c8 01       	movw	r24, r16
    1500:	f1 da       	rcall	.-2590   	; 0xae4 <uECC_vli_rshift1>
    1502:	dd 23       	and	r29, r29
    1504:	69 f0       	breq	.+26     	; 0x1520 <vli_modInv_update+0x44>
    1506:	ec 2f       	mov	r30, r28
    1508:	cc 0f       	add	r28, r28
    150a:	ff 0b       	sbc	r31, r31
    150c:	31 97       	sbiw	r30, 0x01	; 1
    150e:	e0 0f       	add	r30, r16
    1510:	f1 1f       	adc	r31, r17
    1512:	80 81       	ld	r24, Z
    1514:	80 68       	ori	r24, 0x80	; 128
    1516:	80 83       	st	Z, r24
    1518:	03 c0       	rjmp	.+6      	; 0x1520 <vli_modInv_update+0x44>
    151a:	64 2f       	mov	r22, r20
    151c:	c8 01       	movw	r24, r16
    151e:	e2 da       	rcall	.-2620   	; 0xae4 <uECC_vli_rshift1>
    1520:	df 91       	pop	r29
    1522:	cf 91       	pop	r28
    1524:	1f 91       	pop	r17
    1526:	0f 91       	pop	r16
    1528:	08 95       	ret

0000152a <uECC_vli_modInv>:
    152a:	af 92       	push	r10
    152c:	bf 92       	push	r11
    152e:	cf 92       	push	r12
    1530:	df 92       	push	r13
    1532:	ef 92       	push	r14
    1534:	ff 92       	push	r15
    1536:	1f 93       	push	r17
    1538:	cf 93       	push	r28
    153a:	df 93       	push	r29
    153c:	cd b7       	in	r28, 0x3d	; 61
    153e:	de b7       	in	r29, 0x3e	; 62
    1540:	c0 58       	subi	r28, 0x80	; 128
    1542:	d1 09       	sbc	r29, r1
    1544:	0f b6       	in	r0, 0x3f	; 63
    1546:	f8 94       	cli
    1548:	de bf       	out	0x3e, r29	; 62
    154a:	0f be       	out	0x3f, r0	; 63
    154c:	cd bf       	out	0x3d, r28	; 61
    154e:	5c 01       	movw	r10, r24
    1550:	6b 01       	movw	r12, r22
    1552:	7a 01       	movw	r14, r20
    1554:	12 2f       	mov	r17, r18
    1556:	62 2f       	mov	r22, r18
    1558:	c6 01       	movw	r24, r12
    155a:	14 dd       	rcall	.-1496   	; 0xf84 <uECC_vli_isZero>
    155c:	88 23       	and	r24, r24
    155e:	21 f0       	breq	.+8      	; 0x1568 <uECC_vli_modInv+0x3e>
    1560:	61 2f       	mov	r22, r17
    1562:	c5 01       	movw	r24, r10
    1564:	4b da       	rcall	.-2922   	; 0x9fc <uECC_vli_clear>
    1566:	a1 c0       	rjmp	.+322    	; 0x16aa <uECC_vli_modInv+0x180>
    1568:	41 2f       	mov	r20, r17
    156a:	b6 01       	movw	r22, r12
    156c:	ce 01       	movw	r24, r28
    156e:	01 96       	adiw	r24, 0x01	; 1
    1570:	6c da       	rcall	.-2856   	; 0xa4a <uECC_vli_set>
    1572:	41 2f       	mov	r20, r17
    1574:	b7 01       	movw	r22, r14
    1576:	ce 01       	movw	r24, r28
    1578:	81 96       	adiw	r24, 0x21	; 33
    157a:	67 da       	rcall	.-2866   	; 0xa4a <uECC_vli_set>
    157c:	61 2f       	mov	r22, r17
    157e:	ce 01       	movw	r24, r28
    1580:	8f 5b       	subi	r24, 0xBF	; 191
    1582:	9f 4f       	sbci	r25, 0xFF	; 255
    1584:	3b da       	rcall	.-2954   	; 0x9fc <uECC_vli_clear>
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	22 96       	adiw	r28, 0x02	; 2
    158a:	8f af       	std	Y+63, r24	; 0x3f
    158c:	22 97       	sbiw	r28, 0x02	; 2
    158e:	61 2f       	mov	r22, r17
    1590:	ce 01       	movw	r24, r28
    1592:	8f 59       	subi	r24, 0x9F	; 159
    1594:	9f 4f       	sbci	r25, 0xFF	; 255
    1596:	32 da       	rcall	.-2972   	; 0x9fc <uECC_vli_clear>
    1598:	79 c0       	rjmp	.+242    	; 0x168c <uECC_vli_modInv+0x162>
    159a:	99 81       	ldd	r25, Y+1	; 0x01
    159c:	90 fd       	sbrc	r25, 0
    159e:	0b c0       	rjmp	.+22     	; 0x15b6 <uECC_vli_modInv+0x8c>
    15a0:	61 2f       	mov	r22, r17
    15a2:	ce 01       	movw	r24, r28
    15a4:	01 96       	adiw	r24, 0x01	; 1
    15a6:	9e da       	rcall	.-2756   	; 0xae4 <uECC_vli_rshift1>
    15a8:	41 2f       	mov	r20, r17
    15aa:	b7 01       	movw	r22, r14
    15ac:	ce 01       	movw	r24, r28
    15ae:	8f 5b       	subi	r24, 0xBF	; 191
    15b0:	9f 4f       	sbci	r25, 0xFF	; 255
    15b2:	94 df       	rcall	.-216    	; 0x14dc <vli_modInv_update>
    15b4:	6b c0       	rjmp	.+214    	; 0x168c <uECC_vli_modInv+0x162>
    15b6:	99 a1       	ldd	r25, Y+33	; 0x21
    15b8:	90 fd       	sbrc	r25, 0
    15ba:	0b c0       	rjmp	.+22     	; 0x15d2 <uECC_vli_modInv+0xa8>
    15bc:	61 2f       	mov	r22, r17
    15be:	ce 01       	movw	r24, r28
    15c0:	81 96       	adiw	r24, 0x21	; 33
    15c2:	90 da       	rcall	.-2784   	; 0xae4 <uECC_vli_rshift1>
    15c4:	41 2f       	mov	r20, r17
    15c6:	b7 01       	movw	r22, r14
    15c8:	ce 01       	movw	r24, r28
    15ca:	8f 59       	subi	r24, 0x9F	; 159
    15cc:	9f 4f       	sbci	r25, 0xFF	; 255
    15ce:	86 df       	rcall	.-244    	; 0x14dc <vli_modInv_update>
    15d0:	5d c0       	rjmp	.+186    	; 0x168c <uECC_vli_modInv+0x162>
    15d2:	18 16       	cp	r1, r24
    15d4:	74 f5       	brge	.+92     	; 0x1632 <uECC_vli_modInv+0x108>
    15d6:	21 2f       	mov	r18, r17
    15d8:	ae 01       	movw	r20, r28
    15da:	4f 5d       	subi	r20, 0xDF	; 223
    15dc:	5f 4f       	sbci	r21, 0xFF	; 255
    15de:	be 01       	movw	r22, r28
    15e0:	6f 5f       	subi	r22, 0xFF	; 255
    15e2:	7f 4f       	sbci	r23, 0xFF	; 255
    15e4:	cb 01       	movw	r24, r22
    15e6:	c1 db       	rcall	.-2174   	; 0xd6a <uECC_vli_sub>
    15e8:	61 2f       	mov	r22, r17
    15ea:	ce 01       	movw	r24, r28
    15ec:	01 96       	adiw	r24, 0x01	; 1
    15ee:	7a da       	rcall	.-2828   	; 0xae4 <uECC_vli_rshift1>
    15f0:	41 2f       	mov	r20, r17
    15f2:	be 01       	movw	r22, r28
    15f4:	6f 59       	subi	r22, 0x9F	; 159
    15f6:	7f 4f       	sbci	r23, 0xFF	; 255
    15f8:	ce 01       	movw	r24, r28
    15fa:	8f 5b       	subi	r24, 0xBF	; 191
    15fc:	9f 4f       	sbci	r25, 0xFF	; 255
    15fe:	25 dd       	rcall	.-1462   	; 0x104a <uECC_vli_cmp_unsafe>
    1600:	88 23       	and	r24, r24
    1602:	3c f4       	brge	.+14     	; 0x1612 <uECC_vli_modInv+0xe8>
    1604:	21 2f       	mov	r18, r17
    1606:	a7 01       	movw	r20, r14
    1608:	be 01       	movw	r22, r28
    160a:	6f 5b       	subi	r22, 0xBF	; 191
    160c:	7f 4f       	sbci	r23, 0xFF	; 255
    160e:	cb 01       	movw	r24, r22
    1610:	db da       	rcall	.-2634   	; 0xbc8 <uECC_vli_add>
    1612:	21 2f       	mov	r18, r17
    1614:	ae 01       	movw	r20, r28
    1616:	4f 59       	subi	r20, 0x9F	; 159
    1618:	5f 4f       	sbci	r21, 0xFF	; 255
    161a:	be 01       	movw	r22, r28
    161c:	6f 5b       	subi	r22, 0xBF	; 191
    161e:	7f 4f       	sbci	r23, 0xFF	; 255
    1620:	cb 01       	movw	r24, r22
    1622:	a3 db       	rcall	.-2234   	; 0xd6a <uECC_vli_sub>
    1624:	41 2f       	mov	r20, r17
    1626:	b7 01       	movw	r22, r14
    1628:	ce 01       	movw	r24, r28
    162a:	8f 5b       	subi	r24, 0xBF	; 191
    162c:	9f 4f       	sbci	r25, 0xFF	; 255
    162e:	56 df       	rcall	.-340    	; 0x14dc <vli_modInv_update>
    1630:	2d c0       	rjmp	.+90     	; 0x168c <uECC_vli_modInv+0x162>
    1632:	21 2f       	mov	r18, r17
    1634:	ae 01       	movw	r20, r28
    1636:	4f 5f       	subi	r20, 0xFF	; 255
    1638:	5f 4f       	sbci	r21, 0xFF	; 255
    163a:	be 01       	movw	r22, r28
    163c:	6f 5d       	subi	r22, 0xDF	; 223
    163e:	7f 4f       	sbci	r23, 0xFF	; 255
    1640:	cb 01       	movw	r24, r22
    1642:	93 db       	rcall	.-2266   	; 0xd6a <uECC_vli_sub>
    1644:	61 2f       	mov	r22, r17
    1646:	ce 01       	movw	r24, r28
    1648:	81 96       	adiw	r24, 0x21	; 33
    164a:	4c da       	rcall	.-2920   	; 0xae4 <uECC_vli_rshift1>
    164c:	41 2f       	mov	r20, r17
    164e:	be 01       	movw	r22, r28
    1650:	6f 5b       	subi	r22, 0xBF	; 191
    1652:	7f 4f       	sbci	r23, 0xFF	; 255
    1654:	ce 01       	movw	r24, r28
    1656:	8f 59       	subi	r24, 0x9F	; 159
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	f7 dc       	rcall	.-1554   	; 0x104a <uECC_vli_cmp_unsafe>
    165c:	88 23       	and	r24, r24
    165e:	3c f4       	brge	.+14     	; 0x166e <uECC_vli_modInv+0x144>
    1660:	21 2f       	mov	r18, r17
    1662:	a7 01       	movw	r20, r14
    1664:	be 01       	movw	r22, r28
    1666:	6f 59       	subi	r22, 0x9F	; 159
    1668:	7f 4f       	sbci	r23, 0xFF	; 255
    166a:	cb 01       	movw	r24, r22
    166c:	ad da       	rcall	.-2726   	; 0xbc8 <uECC_vli_add>
    166e:	21 2f       	mov	r18, r17
    1670:	ae 01       	movw	r20, r28
    1672:	4f 5b       	subi	r20, 0xBF	; 191
    1674:	5f 4f       	sbci	r21, 0xFF	; 255
    1676:	be 01       	movw	r22, r28
    1678:	6f 59       	subi	r22, 0x9F	; 159
    167a:	7f 4f       	sbci	r23, 0xFF	; 255
    167c:	cb 01       	movw	r24, r22
    167e:	75 db       	rcall	.-2326   	; 0xd6a <uECC_vli_sub>
    1680:	41 2f       	mov	r20, r17
    1682:	b7 01       	movw	r22, r14
    1684:	ce 01       	movw	r24, r28
    1686:	8f 59       	subi	r24, 0x9F	; 159
    1688:	9f 4f       	sbci	r25, 0xFF	; 255
    168a:	28 df       	rcall	.-432    	; 0x14dc <vli_modInv_update>
    168c:	41 2f       	mov	r20, r17
    168e:	be 01       	movw	r22, r28
    1690:	6f 5d       	subi	r22, 0xDF	; 223
    1692:	7f 4f       	sbci	r23, 0xFF	; 255
    1694:	ce 01       	movw	r24, r28
    1696:	01 96       	adiw	r24, 0x01	; 1
    1698:	d8 dc       	rcall	.-1616   	; 0x104a <uECC_vli_cmp_unsafe>
    169a:	81 11       	cpse	r24, r1
    169c:	7e cf       	rjmp	.-260    	; 0x159a <uECC_vli_modInv+0x70>
    169e:	41 2f       	mov	r20, r17
    16a0:	be 01       	movw	r22, r28
    16a2:	6f 5b       	subi	r22, 0xBF	; 191
    16a4:	7f 4f       	sbci	r23, 0xFF	; 255
    16a6:	c5 01       	movw	r24, r10
    16a8:	d0 d9       	rcall	.-3168   	; 0xa4a <uECC_vli_set>
    16aa:	c0 58       	subi	r28, 0x80	; 128
    16ac:	df 4f       	sbci	r29, 0xFF	; 255
    16ae:	0f b6       	in	r0, 0x3f	; 63
    16b0:	f8 94       	cli
    16b2:	de bf       	out	0x3e, r29	; 62
    16b4:	0f be       	out	0x3f, r0	; 63
    16b6:	cd bf       	out	0x3d, r28	; 61
    16b8:	df 91       	pop	r29
    16ba:	cf 91       	pop	r28
    16bc:	1f 91       	pop	r17
    16be:	ff 90       	pop	r15
    16c0:	ef 90       	pop	r14
    16c2:	df 90       	pop	r13
    16c4:	cf 90       	pop	r12
    16c6:	bf 90       	pop	r11
    16c8:	af 90       	pop	r10
    16ca:	08 95       	ret

000016cc <double_jacobian_default>:
    16cc:	6f 92       	push	r6
    16ce:	7f 92       	push	r7
    16d0:	8f 92       	push	r8
    16d2:	9f 92       	push	r9
    16d4:	af 92       	push	r10
    16d6:	bf 92       	push	r11
    16d8:	cf 92       	push	r12
    16da:	df 92       	push	r13
    16dc:	ef 92       	push	r14
    16de:	ff 92       	push	r15
    16e0:	0f 93       	push	r16
    16e2:	1f 93       	push	r17
    16e4:	cf 93       	push	r28
    16e6:	df 93       	push	r29
    16e8:	cd b7       	in	r28, 0x3d	; 61
    16ea:	de b7       	in	r29, 0x3e	; 62
    16ec:	c0 54       	subi	r28, 0x40	; 64
    16ee:	d1 09       	sbc	r29, r1
    16f0:	0f b6       	in	r0, 0x3f	; 63
    16f2:	f8 94       	cli
    16f4:	de bf       	out	0x3e, r29	; 62
    16f6:	0f be       	out	0x3f, r0	; 63
    16f8:	cd bf       	out	0x3d, r28	; 61
    16fa:	6c 01       	movw	r12, r24
    16fc:	3b 01       	movw	r6, r22
    16fe:	7a 01       	movw	r14, r20
    1700:	59 01       	movw	r10, r18
    1702:	f9 01       	movw	r30, r18
    1704:	10 81       	ld	r17, Z
    1706:	61 2f       	mov	r22, r17
    1708:	ca 01       	movw	r24, r20
    170a:	3c dc       	rcall	.-1928   	; 0xf84 <uECC_vli_isZero>
    170c:	81 11       	cpse	r24, r1
    170e:	96 c0       	rjmp	.+300    	; 0x183c <double_jacobian_default+0x170>
    1710:	a5 01       	movw	r20, r10
    1712:	b3 01       	movw	r22, r6
    1714:	ce 01       	movw	r24, r28
    1716:	01 96       	adiw	r24, 0x01	; 1
    1718:	dd de       	rcall	.-582    	; 0x14d4 <uECC_vli_modSquare_fast>
    171a:	95 01       	movw	r18, r10
    171c:	ae 01       	movw	r20, r28
    171e:	4f 5f       	subi	r20, 0xFF	; 255
    1720:	5f 4f       	sbci	r21, 0xFF	; 255
    1722:	b6 01       	movw	r22, r12
    1724:	ce 01       	movw	r24, r28
    1726:	81 96       	adiw	r24, 0x21	; 33
    1728:	a6 de       	rcall	.-692    	; 0x1476 <uECC_vli_modMult_fast>
    172a:	a5 01       	movw	r20, r10
    172c:	be 01       	movw	r22, r28
    172e:	6f 5f       	subi	r22, 0xFF	; 255
    1730:	7f 4f       	sbci	r23, 0xFF	; 255
    1732:	cb 01       	movw	r24, r22
    1734:	cf de       	rcall	.-610    	; 0x14d4 <uECC_vli_modSquare_fast>
    1736:	95 01       	movw	r18, r10
    1738:	a7 01       	movw	r20, r14
    173a:	b3 01       	movw	r22, r6
    173c:	c3 01       	movw	r24, r6
    173e:	9b de       	rcall	.-714    	; 0x1476 <uECC_vli_modMult_fast>
    1740:	a5 01       	movw	r20, r10
    1742:	b7 01       	movw	r22, r14
    1744:	c7 01       	movw	r24, r14
    1746:	c6 de       	rcall	.-628    	; 0x14d4 <uECC_vli_modSquare_fast>
    1748:	45 01       	movw	r8, r10
    174a:	f4 e0       	ldi	r31, 0x04	; 4
    174c:	8f 0e       	add	r8, r31
    174e:	91 1c       	adc	r9, r1
    1750:	01 2f       	mov	r16, r17
    1752:	94 01       	movw	r18, r8
    1754:	a7 01       	movw	r20, r14
    1756:	b6 01       	movw	r22, r12
    1758:	c6 01       	movw	r24, r12
    175a:	d6 dc       	rcall	.-1620   	; 0x1108 <uECC_vli_modAdd>
    175c:	94 01       	movw	r18, r8
    175e:	a7 01       	movw	r20, r14
    1760:	b7 01       	movw	r22, r14
    1762:	c7 01       	movw	r24, r14
    1764:	d1 dc       	rcall	.-1630   	; 0x1108 <uECC_vli_modAdd>
    1766:	94 01       	movw	r18, r8
    1768:	a7 01       	movw	r20, r14
    176a:	b6 01       	movw	r22, r12
    176c:	c7 01       	movw	r24, r14
    176e:	e8 dc       	rcall	.-1584   	; 0x1140 <uECC_vli_modSub>
    1770:	95 01       	movw	r18, r10
    1772:	a7 01       	movw	r20, r14
    1774:	b6 01       	movw	r22, r12
    1776:	c6 01       	movw	r24, r12
    1778:	7e de       	rcall	.-772    	; 0x1476 <uECC_vli_modMult_fast>
    177a:	94 01       	movw	r18, r8
    177c:	a6 01       	movw	r20, r12
    177e:	b6 01       	movw	r22, r12
    1780:	c7 01       	movw	r24, r14
    1782:	c2 dc       	rcall	.-1660   	; 0x1108 <uECC_vli_modAdd>
    1784:	94 01       	movw	r18, r8
    1786:	a7 01       	movw	r20, r14
    1788:	b6 01       	movw	r22, r12
    178a:	c6 01       	movw	r24, r12
    178c:	bd dc       	rcall	.-1670   	; 0x1108 <uECC_vli_modAdd>
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	c6 01       	movw	r24, r12
    1794:	0d dc       	rcall	.-2022   	; 0xfb0 <uECC_vli_testBit>
    1796:	88 23       	and	r24, r24
    1798:	c1 f0       	breq	.+48     	; 0x17ca <double_jacobian_default+0xfe>
    179a:	21 2f       	mov	r18, r17
    179c:	a4 01       	movw	r20, r8
    179e:	b6 01       	movw	r22, r12
    17a0:	c6 01       	movw	r24, r12
    17a2:	12 da       	rcall	.-3036   	; 0xbc8 <uECC_vli_add>
    17a4:	08 2f       	mov	r16, r24
    17a6:	61 2f       	mov	r22, r17
    17a8:	c6 01       	movw	r24, r12
    17aa:	9c d9       	rcall	.-3272   	; 0xae4 <uECC_vli_rshift1>
    17ac:	e1 2f       	mov	r30, r17
    17ae:	01 2e       	mov	r0, r17
    17b0:	00 0c       	add	r0, r0
    17b2:	ff 0b       	sbc	r31, r31
    17b4:	31 97       	sbiw	r30, 0x01	; 1
    17b6:	ec 0d       	add	r30, r12
    17b8:	fd 1d       	adc	r31, r13
    17ba:	20 e8       	ldi	r18, 0x80	; 128
    17bc:	02 9f       	mul	r16, r18
    17be:	c0 01       	movw	r24, r0
    17c0:	11 24       	eor	r1, r1
    17c2:	00 81       	ld	r16, Z
    17c4:	08 2b       	or	r16, r24
    17c6:	00 83       	st	Z, r16
    17c8:	03 c0       	rjmp	.+6      	; 0x17d0 <double_jacobian_default+0x104>
    17ca:	61 2f       	mov	r22, r17
    17cc:	c6 01       	movw	r24, r12
    17ce:	8a d9       	rcall	.-3308   	; 0xae4 <uECC_vli_rshift1>
    17d0:	a5 01       	movw	r20, r10
    17d2:	b6 01       	movw	r22, r12
    17d4:	c7 01       	movw	r24, r14
    17d6:	7e de       	rcall	.-772    	; 0x14d4 <uECC_vli_modSquare_fast>
    17d8:	01 2f       	mov	r16, r17
    17da:	94 01       	movw	r18, r8
    17dc:	ae 01       	movw	r20, r28
    17de:	4f 5d       	subi	r20, 0xDF	; 223
    17e0:	5f 4f       	sbci	r21, 0xFF	; 255
    17e2:	b7 01       	movw	r22, r14
    17e4:	c7 01       	movw	r24, r14
    17e6:	ac dc       	rcall	.-1704   	; 0x1140 <uECC_vli_modSub>
    17e8:	94 01       	movw	r18, r8
    17ea:	ae 01       	movw	r20, r28
    17ec:	4f 5d       	subi	r20, 0xDF	; 223
    17ee:	5f 4f       	sbci	r21, 0xFF	; 255
    17f0:	b7 01       	movw	r22, r14
    17f2:	c7 01       	movw	r24, r14
    17f4:	a5 dc       	rcall	.-1718   	; 0x1140 <uECC_vli_modSub>
    17f6:	94 01       	movw	r18, r8
    17f8:	a7 01       	movw	r20, r14
    17fa:	be 01       	movw	r22, r28
    17fc:	6f 5d       	subi	r22, 0xDF	; 223
    17fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1800:	cb 01       	movw	r24, r22
    1802:	9e dc       	rcall	.-1732   	; 0x1140 <uECC_vli_modSub>
    1804:	95 01       	movw	r18, r10
    1806:	ae 01       	movw	r20, r28
    1808:	4f 5d       	subi	r20, 0xDF	; 223
    180a:	5f 4f       	sbci	r21, 0xFF	; 255
    180c:	b6 01       	movw	r22, r12
    180e:	c6 01       	movw	r24, r12
    1810:	32 de       	rcall	.-924    	; 0x1476 <uECC_vli_modMult_fast>
    1812:	94 01       	movw	r18, r8
    1814:	ae 01       	movw	r20, r28
    1816:	4f 5f       	subi	r20, 0xFF	; 255
    1818:	5f 4f       	sbci	r21, 0xFF	; 255
    181a:	b6 01       	movw	r22, r12
    181c:	ca 01       	movw	r24, r20
    181e:	90 dc       	rcall	.-1760   	; 0x1140 <uECC_vli_modSub>
    1820:	41 2f       	mov	r20, r17
    1822:	b7 01       	movw	r22, r14
    1824:	c6 01       	movw	r24, r12
    1826:	11 d9       	rcall	.-3550   	; 0xa4a <uECC_vli_set>
    1828:	41 2f       	mov	r20, r17
    182a:	b3 01       	movw	r22, r6
    182c:	c7 01       	movw	r24, r14
    182e:	0d d9       	rcall	.-3558   	; 0xa4a <uECC_vli_set>
    1830:	41 2f       	mov	r20, r17
    1832:	be 01       	movw	r22, r28
    1834:	6f 5f       	subi	r22, 0xFF	; 255
    1836:	7f 4f       	sbci	r23, 0xFF	; 255
    1838:	c3 01       	movw	r24, r6
    183a:	07 d9       	rcall	.-3570   	; 0xa4a <uECC_vli_set>
    183c:	c0 5c       	subi	r28, 0xC0	; 192
    183e:	df 4f       	sbci	r29, 0xFF	; 255
    1840:	0f b6       	in	r0, 0x3f	; 63
    1842:	f8 94       	cli
    1844:	de bf       	out	0x3e, r29	; 62
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	cd bf       	out	0x3d, r28	; 61
    184a:	df 91       	pop	r29
    184c:	cf 91       	pop	r28
    184e:	1f 91       	pop	r17
    1850:	0f 91       	pop	r16
    1852:	ff 90       	pop	r15
    1854:	ef 90       	pop	r14
    1856:	df 90       	pop	r13
    1858:	cf 90       	pop	r12
    185a:	bf 90       	pop	r11
    185c:	af 90       	pop	r10
    185e:	9f 90       	pop	r9
    1860:	8f 90       	pop	r8
    1862:	7f 90       	pop	r7
    1864:	6f 90       	pop	r6
    1866:	08 95       	ret

00001868 <x_side_default>:
    1868:	6f 92       	push	r6
    186a:	7f 92       	push	r7
    186c:	8f 92       	push	r8
    186e:	9f 92       	push	r9
    1870:	af 92       	push	r10
    1872:	bf 92       	push	r11
    1874:	cf 92       	push	r12
    1876:	df 92       	push	r13
    1878:	ef 92       	push	r14
    187a:	ff 92       	push	r15
    187c:	0f 93       	push	r16
    187e:	1f 93       	push	r17
    1880:	cf 93       	push	r28
    1882:	df 93       	push	r29
    1884:	cd b7       	in	r28, 0x3d	; 61
    1886:	de b7       	in	r29, 0x3e	; 62
    1888:	a0 97       	sbiw	r28, 0x20	; 32
    188a:	0f b6       	in	r0, 0x3f	; 63
    188c:	f8 94       	cli
    188e:	de bf       	out	0x3e, r29	; 62
    1890:	0f be       	out	0x3f, r0	; 63
    1892:	cd bf       	out	0x3d, r28	; 61
    1894:	7c 01       	movw	r14, r24
    1896:	4b 01       	movw	r8, r22
    1898:	6a 01       	movw	r12, r20
    189a:	ce 01       	movw	r24, r28
    189c:	01 96       	adiw	r24, 0x01	; 1
    189e:	3c 01       	movw	r6, r24
    18a0:	80 e2       	ldi	r24, 0x20	; 32
    18a2:	f3 01       	movw	r30, r6
    18a4:	11 92       	st	Z+, r1
    18a6:	8a 95       	dec	r24
    18a8:	e9 f7       	brne	.-6      	; 0x18a4 <x_side_default+0x3c>
    18aa:	83 e0       	ldi	r24, 0x03	; 3
    18ac:	89 83       	std	Y+1, r24	; 0x01
    18ae:	fa 01       	movw	r30, r20
    18b0:	10 81       	ld	r17, Z
    18b2:	c7 01       	movw	r24, r14
    18b4:	0f de       	rcall	.-994    	; 0x14d4 <uECC_vli_modSquare_fast>
    18b6:	56 01       	movw	r10, r12
    18b8:	f4 e0       	ldi	r31, 0x04	; 4
    18ba:	af 0e       	add	r10, r31
    18bc:	b1 1c       	adc	r11, r1
    18be:	01 2f       	mov	r16, r17
    18c0:	95 01       	movw	r18, r10
    18c2:	a3 01       	movw	r20, r6
    18c4:	b7 01       	movw	r22, r14
    18c6:	c7 01       	movw	r24, r14
    18c8:	3b dc       	rcall	.-1930   	; 0x1140 <uECC_vli_modSub>
    18ca:	96 01       	movw	r18, r12
    18cc:	a4 01       	movw	r20, r8
    18ce:	b7 01       	movw	r22, r14
    18d0:	c7 01       	movw	r24, r14
    18d2:	d1 dd       	rcall	.-1118   	; 0x1476 <uECC_vli_modMult_fast>
    18d4:	a6 01       	movw	r20, r12
    18d6:	4c 57       	subi	r20, 0x7C	; 124
    18d8:	5f 4f       	sbci	r21, 0xFF	; 255
    18da:	95 01       	movw	r18, r10
    18dc:	b7 01       	movw	r22, r14
    18de:	c7 01       	movw	r24, r14
    18e0:	13 dc       	rcall	.-2010   	; 0x1108 <uECC_vli_modAdd>
    18e2:	a0 96       	adiw	r28, 0x20	; 32
    18e4:	0f b6       	in	r0, 0x3f	; 63
    18e6:	f8 94       	cli
    18e8:	de bf       	out	0x3e, r29	; 62
    18ea:	0f be       	out	0x3f, r0	; 63
    18ec:	cd bf       	out	0x3d, r28	; 61
    18ee:	df 91       	pop	r29
    18f0:	cf 91       	pop	r28
    18f2:	1f 91       	pop	r17
    18f4:	0f 91       	pop	r16
    18f6:	ff 90       	pop	r15
    18f8:	ef 90       	pop	r14
    18fa:	df 90       	pop	r13
    18fc:	cf 90       	pop	r12
    18fe:	bf 90       	pop	r11
    1900:	af 90       	pop	r10
    1902:	9f 90       	pop	r9
    1904:	8f 90       	pop	r8
    1906:	7f 90       	pop	r7
    1908:	6f 90       	pop	r6
    190a:	08 95       	ret

0000190c <mod_sqrt_default>:
    190c:	bf 92       	push	r11
    190e:	cf 92       	push	r12
    1910:	df 92       	push	r13
    1912:	ef 92       	push	r14
    1914:	ff 92       	push	r15
    1916:	0f 93       	push	r16
    1918:	1f 93       	push	r17
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	cd b7       	in	r28, 0x3d	; 61
    1920:	de b7       	in	r29, 0x3e	; 62
    1922:	c0 54       	subi	r28, 0x40	; 64
    1924:	d1 09       	sbc	r29, r1
    1926:	0f b6       	in	r0, 0x3f	; 63
    1928:	f8 94       	cli
    192a:	de bf       	out	0x3e, r29	; 62
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	cd bf       	out	0x3d, r28	; 61
    1930:	6c 01       	movw	r12, r24
    1932:	7b 01       	movw	r14, r22
    1934:	90 e2       	ldi	r25, 0x20	; 32
    1936:	8e 01       	movw	r16, r28
    1938:	0f 5f       	subi	r16, 0xFF	; 255
    193a:	1f 4f       	sbci	r17, 0xFF	; 255
    193c:	d8 01       	movw	r26, r16
    193e:	e9 2f       	mov	r30, r25
    1940:	1d 92       	st	X+, r1
    1942:	ea 95       	dec	r30
    1944:	e9 f7       	brne	.-6      	; 0x1940 <mod_sqrt_default+0x34>
    1946:	81 e0       	ldi	r24, 0x01	; 1
    1948:	89 83       	std	Y+1, r24	; 0x01
    194a:	fe 01       	movw	r30, r28
    194c:	b1 96       	adiw	r30, 0x21	; 33
    194e:	df 01       	movw	r26, r30
    1950:	1d 92       	st	X+, r1
    1952:	9a 95       	dec	r25
    1954:	e9 f7       	brne	.-6      	; 0x1950 <mod_sqrt_default+0x44>
    1956:	89 a3       	std	Y+33, r24	; 0x21
    1958:	fb 01       	movw	r30, r22
    195a:	b0 80       	ld	r11, Z
    195c:	6c 5f       	subi	r22, 0xFC	; 252
    195e:	7f 4f       	sbci	r23, 0xFF	; 255
    1960:	2b 2d       	mov	r18, r11
    1962:	a8 01       	movw	r20, r16
    1964:	c8 01       	movw	r24, r16
    1966:	30 d9       	rcall	.-3488   	; 0xbc8 <uECC_vli_add>
    1968:	6b 2d       	mov	r22, r11
    196a:	c8 01       	movw	r24, r16
    196c:	37 db       	rcall	.-2450   	; 0xfdc <uECC_vli_numBits>
    196e:	8c 01       	movw	r16, r24
    1970:	01 50       	subi	r16, 0x01	; 1
    1972:	11 09       	sbc	r17, r1
    1974:	02 30       	cpi	r16, 0x02	; 2
    1976:	11 05       	cpc	r17, r1
    1978:	c4 f0       	brlt	.+48     	; 0x19aa <mod_sqrt_default+0x9e>
    197a:	a7 01       	movw	r20, r14
    197c:	be 01       	movw	r22, r28
    197e:	6f 5d       	subi	r22, 0xDF	; 223
    1980:	7f 4f       	sbci	r23, 0xFF	; 255
    1982:	cb 01       	movw	r24, r22
    1984:	a7 dd       	rcall	.-1202   	; 0x14d4 <uECC_vli_modSquare_fast>
    1986:	b8 01       	movw	r22, r16
    1988:	ce 01       	movw	r24, r28
    198a:	01 96       	adiw	r24, 0x01	; 1
    198c:	11 db       	rcall	.-2526   	; 0xfb0 <uECC_vli_testBit>
    198e:	88 23       	and	r24, r24
    1990:	39 f0       	breq	.+14     	; 0x19a0 <mod_sqrt_default+0x94>
    1992:	97 01       	movw	r18, r14
    1994:	a6 01       	movw	r20, r12
    1996:	be 01       	movw	r22, r28
    1998:	6f 5d       	subi	r22, 0xDF	; 223
    199a:	7f 4f       	sbci	r23, 0xFF	; 255
    199c:	cb 01       	movw	r24, r22
    199e:	6b dd       	rcall	.-1322   	; 0x1476 <uECC_vli_modMult_fast>
    19a0:	01 50       	subi	r16, 0x01	; 1
    19a2:	11 09       	sbc	r17, r1
    19a4:	01 30       	cpi	r16, 0x01	; 1
    19a6:	11 05       	cpc	r17, r1
    19a8:	41 f7       	brne	.-48     	; 0x197a <mod_sqrt_default+0x6e>
    19aa:	4b 2d       	mov	r20, r11
    19ac:	be 01       	movw	r22, r28
    19ae:	6f 5d       	subi	r22, 0xDF	; 223
    19b0:	7f 4f       	sbci	r23, 0xFF	; 255
    19b2:	c6 01       	movw	r24, r12
    19b4:	4a d8       	rcall	.-3948   	; 0xa4a <uECC_vli_set>
    19b6:	c0 5c       	subi	r28, 0xC0	; 192
    19b8:	df 4f       	sbci	r29, 0xFF	; 255
    19ba:	0f b6       	in	r0, 0x3f	; 63
    19bc:	f8 94       	cli
    19be:	de bf       	out	0x3e, r29	; 62
    19c0:	0f be       	out	0x3f, r0	; 63
    19c2:	cd bf       	out	0x3d, r28	; 61
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	1f 91       	pop	r17
    19ca:	0f 91       	pop	r16
    19cc:	ff 90       	pop	r15
    19ce:	ef 90       	pop	r14
    19d0:	df 90       	pop	r13
    19d2:	cf 90       	pop	r12
    19d4:	bf 90       	pop	r11
    19d6:	08 95       	ret

000019d8 <vli_mmod_fast_secp256r1>:
    19d8:	cf 92       	push	r12
    19da:	df 92       	push	r13
    19dc:	ff 92       	push	r15
    19de:	0f 93       	push	r16
    19e0:	1f 93       	push	r17
    19e2:	cf 93       	push	r28
    19e4:	df 93       	push	r29
    19e6:	cd b7       	in	r28, 0x3d	; 61
    19e8:	de b7       	in	r29, 0x3e	; 62
    19ea:	a0 97       	sbiw	r28, 0x20	; 32
    19ec:	0f b6       	in	r0, 0x3f	; 63
    19ee:	f8 94       	cli
    19f0:	de bf       	out	0x3e, r29	; 62
    19f2:	0f be       	out	0x3f, r0	; 63
    19f4:	cd bf       	out	0x3d, r28	; 61
    19f6:	6c 01       	movw	r12, r24
    19f8:	8b 01       	movw	r16, r22
    19fa:	40 e2       	ldi	r20, 0x20	; 32
    19fc:	26 d8       	rcall	.-4020   	; 0xa4a <uECC_vli_set>
    19fe:	1c 82       	std	Y+4, r1	; 0x04
    1a00:	1b 82       	std	Y+3, r1	; 0x03
    1a02:	1a 82       	std	Y+2, r1	; 0x02
    1a04:	19 82       	std	Y+1, r1	; 0x01
    1a06:	18 86       	std	Y+8, r1	; 0x08
    1a08:	1f 82       	std	Y+7, r1	; 0x07
    1a0a:	1e 82       	std	Y+6, r1	; 0x06
    1a0c:	1d 82       	std	Y+5, r1	; 0x05
    1a0e:	1c 86       	std	Y+12, r1	; 0x0c
    1a10:	1b 86       	std	Y+11, r1	; 0x0b
    1a12:	1a 86       	std	Y+10, r1	; 0x0a
    1a14:	19 86       	std	Y+9, r1	; 0x09
    1a16:	f8 01       	movw	r30, r16
    1a18:	84 a5       	ldd	r24, Z+44	; 0x2c
    1a1a:	8d 87       	std	Y+13, r24	; 0x0d
    1a1c:	85 a5       	ldd	r24, Z+45	; 0x2d
    1a1e:	8e 87       	std	Y+14, r24	; 0x0e
    1a20:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a22:	8f 87       	std	Y+15, r24	; 0x0f
    1a24:	87 a5       	ldd	r24, Z+47	; 0x2f
    1a26:	88 8b       	std	Y+16, r24	; 0x10
    1a28:	80 a9       	ldd	r24, Z+48	; 0x30
    1a2a:	89 8b       	std	Y+17, r24	; 0x11
    1a2c:	81 a9       	ldd	r24, Z+49	; 0x31
    1a2e:	8a 8b       	std	Y+18, r24	; 0x12
    1a30:	82 a9       	ldd	r24, Z+50	; 0x32
    1a32:	8b 8b       	std	Y+19, r24	; 0x13
    1a34:	83 a9       	ldd	r24, Z+51	; 0x33
    1a36:	8c 8b       	std	Y+20, r24	; 0x14
    1a38:	84 a9       	ldd	r24, Z+52	; 0x34
    1a3a:	8d 8b       	std	Y+21, r24	; 0x15
    1a3c:	85 a9       	ldd	r24, Z+53	; 0x35
    1a3e:	8e 8b       	std	Y+22, r24	; 0x16
    1a40:	86 a9       	ldd	r24, Z+54	; 0x36
    1a42:	8f 8b       	std	Y+23, r24	; 0x17
    1a44:	87 a9       	ldd	r24, Z+55	; 0x37
    1a46:	88 8f       	std	Y+24, r24	; 0x18
    1a48:	80 ad       	ldd	r24, Z+56	; 0x38
    1a4a:	89 8f       	std	Y+25, r24	; 0x19
    1a4c:	81 ad       	ldd	r24, Z+57	; 0x39
    1a4e:	8a 8f       	std	Y+26, r24	; 0x1a
    1a50:	82 ad       	ldd	r24, Z+58	; 0x3a
    1a52:	8b 8f       	std	Y+27, r24	; 0x1b
    1a54:	83 ad       	ldd	r24, Z+59	; 0x3b
    1a56:	8c 8f       	std	Y+28, r24	; 0x1c
    1a58:	84 ad       	ldd	r24, Z+60	; 0x3c
    1a5a:	8d 8f       	std	Y+29, r24	; 0x1d
    1a5c:	85 ad       	ldd	r24, Z+61	; 0x3d
    1a5e:	8e 8f       	std	Y+30, r24	; 0x1e
    1a60:	86 ad       	ldd	r24, Z+62	; 0x3e
    1a62:	8f 8f       	std	Y+31, r24	; 0x1f
    1a64:	87 ad       	ldd	r24, Z+63	; 0x3f
    1a66:	88 a3       	std	Y+32, r24	; 0x20
    1a68:	20 e2       	ldi	r18, 0x20	; 32
    1a6a:	ae 01       	movw	r20, r28
    1a6c:	4f 5f       	subi	r20, 0xFF	; 255
    1a6e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a70:	ba 01       	movw	r22, r20
    1a72:	ca 01       	movw	r24, r20
    1a74:	a9 d8       	rcall	.-3758   	; 0xbc8 <uECC_vli_add>
    1a76:	f8 2e       	mov	r15, r24
    1a78:	20 e2       	ldi	r18, 0x20	; 32
    1a7a:	ae 01       	movw	r20, r28
    1a7c:	4f 5f       	subi	r20, 0xFF	; 255
    1a7e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a80:	b6 01       	movw	r22, r12
    1a82:	c6 01       	movw	r24, r12
    1a84:	a1 d8       	rcall	.-3774   	; 0xbc8 <uECC_vli_add>
    1a86:	f8 0e       	add	r15, r24
    1a88:	f8 01       	movw	r30, r16
    1a8a:	80 a9       	ldd	r24, Z+48	; 0x30
    1a8c:	8d 87       	std	Y+13, r24	; 0x0d
    1a8e:	81 a9       	ldd	r24, Z+49	; 0x31
    1a90:	8e 87       	std	Y+14, r24	; 0x0e
    1a92:	82 a9       	ldd	r24, Z+50	; 0x32
    1a94:	8f 87       	std	Y+15, r24	; 0x0f
    1a96:	83 a9       	ldd	r24, Z+51	; 0x33
    1a98:	88 8b       	std	Y+16, r24	; 0x10
    1a9a:	84 a9       	ldd	r24, Z+52	; 0x34
    1a9c:	89 8b       	std	Y+17, r24	; 0x11
    1a9e:	85 a9       	ldd	r24, Z+53	; 0x35
    1aa0:	8a 8b       	std	Y+18, r24	; 0x12
    1aa2:	86 a9       	ldd	r24, Z+54	; 0x36
    1aa4:	8b 8b       	std	Y+19, r24	; 0x13
    1aa6:	87 a9       	ldd	r24, Z+55	; 0x37
    1aa8:	8c 8b       	std	Y+20, r24	; 0x14
    1aaa:	80 ad       	ldd	r24, Z+56	; 0x38
    1aac:	8d 8b       	std	Y+21, r24	; 0x15
    1aae:	81 ad       	ldd	r24, Z+57	; 0x39
    1ab0:	8e 8b       	std	Y+22, r24	; 0x16
    1ab2:	82 ad       	ldd	r24, Z+58	; 0x3a
    1ab4:	8f 8b       	std	Y+23, r24	; 0x17
    1ab6:	83 ad       	ldd	r24, Z+59	; 0x3b
    1ab8:	88 8f       	std	Y+24, r24	; 0x18
    1aba:	84 ad       	ldd	r24, Z+60	; 0x3c
    1abc:	89 8f       	std	Y+25, r24	; 0x19
    1abe:	85 ad       	ldd	r24, Z+61	; 0x3d
    1ac0:	8a 8f       	std	Y+26, r24	; 0x1a
    1ac2:	86 ad       	ldd	r24, Z+62	; 0x3e
    1ac4:	8b 8f       	std	Y+27, r24	; 0x1b
    1ac6:	87 ad       	ldd	r24, Z+63	; 0x3f
    1ac8:	8c 8f       	std	Y+28, r24	; 0x1c
    1aca:	18 a2       	std	Y+32, r1	; 0x20
    1acc:	1f 8e       	std	Y+31, r1	; 0x1f
    1ace:	1e 8e       	std	Y+30, r1	; 0x1e
    1ad0:	1d 8e       	std	Y+29, r1	; 0x1d
    1ad2:	20 e2       	ldi	r18, 0x20	; 32
    1ad4:	ae 01       	movw	r20, r28
    1ad6:	4f 5f       	subi	r20, 0xFF	; 255
    1ad8:	5f 4f       	sbci	r21, 0xFF	; 255
    1ada:	ba 01       	movw	r22, r20
    1adc:	ca 01       	movw	r24, r20
    1ade:	74 d8       	rcall	.-3864   	; 0xbc8 <uECC_vli_add>
    1ae0:	f8 0e       	add	r15, r24
    1ae2:	20 e2       	ldi	r18, 0x20	; 32
    1ae4:	ae 01       	movw	r20, r28
    1ae6:	4f 5f       	subi	r20, 0xFF	; 255
    1ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aea:	b6 01       	movw	r22, r12
    1aec:	c6 01       	movw	r24, r12
    1aee:	6c d8       	rcall	.-3880   	; 0xbc8 <uECC_vli_add>
    1af0:	f8 0e       	add	r15, r24
    1af2:	f8 01       	movw	r30, r16
    1af4:	80 a1       	ldd	r24, Z+32	; 0x20
    1af6:	89 83       	std	Y+1, r24	; 0x01
    1af8:	81 a1       	ldd	r24, Z+33	; 0x21
    1afa:	8a 83       	std	Y+2, r24	; 0x02
    1afc:	82 a1       	ldd	r24, Z+34	; 0x22
    1afe:	8b 83       	std	Y+3, r24	; 0x03
    1b00:	83 a1       	ldd	r24, Z+35	; 0x23
    1b02:	8c 83       	std	Y+4, r24	; 0x04
    1b04:	84 a1       	ldd	r24, Z+36	; 0x24
    1b06:	8d 83       	std	Y+5, r24	; 0x05
    1b08:	85 a1       	ldd	r24, Z+37	; 0x25
    1b0a:	8e 83       	std	Y+6, r24	; 0x06
    1b0c:	86 a1       	ldd	r24, Z+38	; 0x26
    1b0e:	8f 83       	std	Y+7, r24	; 0x07
    1b10:	87 a1       	ldd	r24, Z+39	; 0x27
    1b12:	88 87       	std	Y+8, r24	; 0x08
    1b14:	80 a5       	ldd	r24, Z+40	; 0x28
    1b16:	89 87       	std	Y+9, r24	; 0x09
    1b18:	81 a5       	ldd	r24, Z+41	; 0x29
    1b1a:	8a 87       	std	Y+10, r24	; 0x0a
    1b1c:	82 a5       	ldd	r24, Z+42	; 0x2a
    1b1e:	8b 87       	std	Y+11, r24	; 0x0b
    1b20:	83 a5       	ldd	r24, Z+43	; 0x2b
    1b22:	8c 87       	std	Y+12, r24	; 0x0c
    1b24:	18 8a       	std	Y+16, r1	; 0x10
    1b26:	1f 86       	std	Y+15, r1	; 0x0f
    1b28:	1e 86       	std	Y+14, r1	; 0x0e
    1b2a:	1d 86       	std	Y+13, r1	; 0x0d
    1b2c:	1c 8a       	std	Y+20, r1	; 0x14
    1b2e:	1b 8a       	std	Y+19, r1	; 0x13
    1b30:	1a 8a       	std	Y+18, r1	; 0x12
    1b32:	19 8a       	std	Y+17, r1	; 0x11
    1b34:	18 8e       	std	Y+24, r1	; 0x18
    1b36:	1f 8a       	std	Y+23, r1	; 0x17
    1b38:	1e 8a       	std	Y+22, r1	; 0x16
    1b3a:	1d 8a       	std	Y+21, r1	; 0x15
    1b3c:	80 ad       	ldd	r24, Z+56	; 0x38
    1b3e:	89 8f       	std	Y+25, r24	; 0x19
    1b40:	81 ad       	ldd	r24, Z+57	; 0x39
    1b42:	8a 8f       	std	Y+26, r24	; 0x1a
    1b44:	82 ad       	ldd	r24, Z+58	; 0x3a
    1b46:	8b 8f       	std	Y+27, r24	; 0x1b
    1b48:	83 ad       	ldd	r24, Z+59	; 0x3b
    1b4a:	8c 8f       	std	Y+28, r24	; 0x1c
    1b4c:	84 ad       	ldd	r24, Z+60	; 0x3c
    1b4e:	8d 8f       	std	Y+29, r24	; 0x1d
    1b50:	85 ad       	ldd	r24, Z+61	; 0x3d
    1b52:	8e 8f       	std	Y+30, r24	; 0x1e
    1b54:	86 ad       	ldd	r24, Z+62	; 0x3e
    1b56:	8f 8f       	std	Y+31, r24	; 0x1f
    1b58:	87 ad       	ldd	r24, Z+63	; 0x3f
    1b5a:	88 a3       	std	Y+32, r24	; 0x20
    1b5c:	20 e2       	ldi	r18, 0x20	; 32
    1b5e:	ae 01       	movw	r20, r28
    1b60:	4f 5f       	subi	r20, 0xFF	; 255
    1b62:	5f 4f       	sbci	r21, 0xFF	; 255
    1b64:	b6 01       	movw	r22, r12
    1b66:	c6 01       	movw	r24, r12
    1b68:	2f d8       	rcall	.-4002   	; 0xbc8 <uECC_vli_add>
    1b6a:	f8 0e       	add	r15, r24
    1b6c:	f8 01       	movw	r30, r16
    1b6e:	84 a1       	ldd	r24, Z+36	; 0x24
    1b70:	89 83       	std	Y+1, r24	; 0x01
    1b72:	85 a1       	ldd	r24, Z+37	; 0x25
    1b74:	8a 83       	std	Y+2, r24	; 0x02
    1b76:	86 a1       	ldd	r24, Z+38	; 0x26
    1b78:	8b 83       	std	Y+3, r24	; 0x03
    1b7a:	87 a1       	ldd	r24, Z+39	; 0x27
    1b7c:	8c 83       	std	Y+4, r24	; 0x04
    1b7e:	80 a5       	ldd	r24, Z+40	; 0x28
    1b80:	8d 83       	std	Y+5, r24	; 0x05
    1b82:	81 a5       	ldd	r24, Z+41	; 0x29
    1b84:	8e 83       	std	Y+6, r24	; 0x06
    1b86:	82 a5       	ldd	r24, Z+42	; 0x2a
    1b88:	8f 83       	std	Y+7, r24	; 0x07
    1b8a:	83 a5       	ldd	r24, Z+43	; 0x2b
    1b8c:	88 87       	std	Y+8, r24	; 0x08
    1b8e:	84 a5       	ldd	r24, Z+44	; 0x2c
    1b90:	89 87       	std	Y+9, r24	; 0x09
    1b92:	85 a5       	ldd	r24, Z+45	; 0x2d
    1b94:	8a 87       	std	Y+10, r24	; 0x0a
    1b96:	86 a5       	ldd	r24, Z+46	; 0x2e
    1b98:	8b 87       	std	Y+11, r24	; 0x0b
    1b9a:	87 a5       	ldd	r24, Z+47	; 0x2f
    1b9c:	8c 87       	std	Y+12, r24	; 0x0c
    1b9e:	34 a9       	ldd	r19, Z+52	; 0x34
    1ba0:	3d 87       	std	Y+13, r19	; 0x0d
    1ba2:	25 a9       	ldd	r18, Z+53	; 0x35
    1ba4:	2e 87       	std	Y+14, r18	; 0x0e
    1ba6:	96 a9       	ldd	r25, Z+54	; 0x36
    1ba8:	9f 87       	std	Y+15, r25	; 0x0f
    1baa:	87 a9       	ldd	r24, Z+55	; 0x37
    1bac:	88 8b       	std	Y+16, r24	; 0x10
    1bae:	40 ad       	ldd	r20, Z+56	; 0x38
    1bb0:	49 8b       	std	Y+17, r20	; 0x11
    1bb2:	41 ad       	ldd	r20, Z+57	; 0x39
    1bb4:	4a 8b       	std	Y+18, r20	; 0x12
    1bb6:	42 ad       	ldd	r20, Z+58	; 0x3a
    1bb8:	4b 8b       	std	Y+19, r20	; 0x13
    1bba:	43 ad       	ldd	r20, Z+59	; 0x3b
    1bbc:	4c 8b       	std	Y+20, r20	; 0x14
    1bbe:	44 ad       	ldd	r20, Z+60	; 0x3c
    1bc0:	4d 8b       	std	Y+21, r20	; 0x15
    1bc2:	45 ad       	ldd	r20, Z+61	; 0x3d
    1bc4:	4e 8b       	std	Y+22, r20	; 0x16
    1bc6:	46 ad       	ldd	r20, Z+62	; 0x3e
    1bc8:	4f 8b       	std	Y+23, r20	; 0x17
    1bca:	47 ad       	ldd	r20, Z+63	; 0x3f
    1bcc:	48 8f       	std	Y+24, r20	; 0x18
    1bce:	39 8f       	std	Y+25, r19	; 0x19
    1bd0:	2a 8f       	std	Y+26, r18	; 0x1a
    1bd2:	9b 8f       	std	Y+27, r25	; 0x1b
    1bd4:	8c 8f       	std	Y+28, r24	; 0x1c
    1bd6:	80 a1       	ldd	r24, Z+32	; 0x20
    1bd8:	8d 8f       	std	Y+29, r24	; 0x1d
    1bda:	81 a1       	ldd	r24, Z+33	; 0x21
    1bdc:	8e 8f       	std	Y+30, r24	; 0x1e
    1bde:	82 a1       	ldd	r24, Z+34	; 0x22
    1be0:	8f 8f       	std	Y+31, r24	; 0x1f
    1be2:	83 a1       	ldd	r24, Z+35	; 0x23
    1be4:	88 a3       	std	Y+32, r24	; 0x20
    1be6:	20 e2       	ldi	r18, 0x20	; 32
    1be8:	ae 01       	movw	r20, r28
    1bea:	4f 5f       	subi	r20, 0xFF	; 255
    1bec:	5f 4f       	sbci	r21, 0xFF	; 255
    1bee:	b6 01       	movw	r22, r12
    1bf0:	c6 01       	movw	r24, r12
    1bf2:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <uECC_vli_add>
    1bf6:	f8 0e       	add	r15, r24
    1bf8:	f8 01       	movw	r30, r16
    1bfa:	84 a5       	ldd	r24, Z+44	; 0x2c
    1bfc:	89 83       	std	Y+1, r24	; 0x01
    1bfe:	85 a5       	ldd	r24, Z+45	; 0x2d
    1c00:	8a 83       	std	Y+2, r24	; 0x02
    1c02:	86 a5       	ldd	r24, Z+46	; 0x2e
    1c04:	8b 83       	std	Y+3, r24	; 0x03
    1c06:	87 a5       	ldd	r24, Z+47	; 0x2f
    1c08:	8c 83       	std	Y+4, r24	; 0x04
    1c0a:	80 a9       	ldd	r24, Z+48	; 0x30
    1c0c:	8d 83       	std	Y+5, r24	; 0x05
    1c0e:	81 a9       	ldd	r24, Z+49	; 0x31
    1c10:	8e 83       	std	Y+6, r24	; 0x06
    1c12:	82 a9       	ldd	r24, Z+50	; 0x32
    1c14:	8f 83       	std	Y+7, r24	; 0x07
    1c16:	83 a9       	ldd	r24, Z+51	; 0x33
    1c18:	88 87       	std	Y+8, r24	; 0x08
    1c1a:	84 a9       	ldd	r24, Z+52	; 0x34
    1c1c:	89 87       	std	Y+9, r24	; 0x09
    1c1e:	85 a9       	ldd	r24, Z+53	; 0x35
    1c20:	8a 87       	std	Y+10, r24	; 0x0a
    1c22:	86 a9       	ldd	r24, Z+54	; 0x36
    1c24:	8b 87       	std	Y+11, r24	; 0x0b
    1c26:	87 a9       	ldd	r24, Z+55	; 0x37
    1c28:	8c 87       	std	Y+12, r24	; 0x0c
    1c2a:	18 8a       	std	Y+16, r1	; 0x10
    1c2c:	1f 86       	std	Y+15, r1	; 0x0f
    1c2e:	1e 86       	std	Y+14, r1	; 0x0e
    1c30:	1d 86       	std	Y+13, r1	; 0x0d
    1c32:	1c 8a       	std	Y+20, r1	; 0x14
    1c34:	1b 8a       	std	Y+19, r1	; 0x13
    1c36:	1a 8a       	std	Y+18, r1	; 0x12
    1c38:	19 8a       	std	Y+17, r1	; 0x11
    1c3a:	18 8e       	std	Y+24, r1	; 0x18
    1c3c:	1f 8a       	std	Y+23, r1	; 0x17
    1c3e:	1e 8a       	std	Y+22, r1	; 0x16
    1c40:	1d 8a       	std	Y+21, r1	; 0x15
    1c42:	80 a1       	ldd	r24, Z+32	; 0x20
    1c44:	89 8f       	std	Y+25, r24	; 0x19
    1c46:	81 a1       	ldd	r24, Z+33	; 0x21
    1c48:	8a 8f       	std	Y+26, r24	; 0x1a
    1c4a:	82 a1       	ldd	r24, Z+34	; 0x22
    1c4c:	8b 8f       	std	Y+27, r24	; 0x1b
    1c4e:	83 a1       	ldd	r24, Z+35	; 0x23
    1c50:	8c 8f       	std	Y+28, r24	; 0x1c
    1c52:	80 a5       	ldd	r24, Z+40	; 0x28
    1c54:	8d 8f       	std	Y+29, r24	; 0x1d
    1c56:	81 a5       	ldd	r24, Z+41	; 0x29
    1c58:	8e 8f       	std	Y+30, r24	; 0x1e
    1c5a:	82 a5       	ldd	r24, Z+42	; 0x2a
    1c5c:	8f 8f       	std	Y+31, r24	; 0x1f
    1c5e:	83 a5       	ldd	r24, Z+43	; 0x2b
    1c60:	88 a3       	std	Y+32, r24	; 0x20
    1c62:	20 e2       	ldi	r18, 0x20	; 32
    1c64:	ae 01       	movw	r20, r28
    1c66:	4f 5f       	subi	r20, 0xFF	; 255
    1c68:	5f 4f       	sbci	r21, 0xFF	; 255
    1c6a:	b6 01       	movw	r22, r12
    1c6c:	c6 01       	movw	r24, r12
    1c6e:	7d d8       	rcall	.-3846   	; 0xd6a <uECC_vli_sub>
    1c70:	f8 1a       	sub	r15, r24
    1c72:	f8 01       	movw	r30, r16
    1c74:	80 a9       	ldd	r24, Z+48	; 0x30
    1c76:	89 83       	std	Y+1, r24	; 0x01
    1c78:	81 a9       	ldd	r24, Z+49	; 0x31
    1c7a:	8a 83       	std	Y+2, r24	; 0x02
    1c7c:	82 a9       	ldd	r24, Z+50	; 0x32
    1c7e:	8b 83       	std	Y+3, r24	; 0x03
    1c80:	83 a9       	ldd	r24, Z+51	; 0x33
    1c82:	8c 83       	std	Y+4, r24	; 0x04
    1c84:	84 a9       	ldd	r24, Z+52	; 0x34
    1c86:	8d 83       	std	Y+5, r24	; 0x05
    1c88:	85 a9       	ldd	r24, Z+53	; 0x35
    1c8a:	8e 83       	std	Y+6, r24	; 0x06
    1c8c:	86 a9       	ldd	r24, Z+54	; 0x36
    1c8e:	8f 83       	std	Y+7, r24	; 0x07
    1c90:	87 a9       	ldd	r24, Z+55	; 0x37
    1c92:	88 87       	std	Y+8, r24	; 0x08
    1c94:	80 ad       	ldd	r24, Z+56	; 0x38
    1c96:	89 87       	std	Y+9, r24	; 0x09
    1c98:	81 ad       	ldd	r24, Z+57	; 0x39
    1c9a:	8a 87       	std	Y+10, r24	; 0x0a
    1c9c:	82 ad       	ldd	r24, Z+58	; 0x3a
    1c9e:	8b 87       	std	Y+11, r24	; 0x0b
    1ca0:	83 ad       	ldd	r24, Z+59	; 0x3b
    1ca2:	8c 87       	std	Y+12, r24	; 0x0c
    1ca4:	84 ad       	ldd	r24, Z+60	; 0x3c
    1ca6:	8d 87       	std	Y+13, r24	; 0x0d
    1ca8:	85 ad       	ldd	r24, Z+61	; 0x3d
    1caa:	8e 87       	std	Y+14, r24	; 0x0e
    1cac:	86 ad       	ldd	r24, Z+62	; 0x3e
    1cae:	8f 87       	std	Y+15, r24	; 0x0f
    1cb0:	87 ad       	ldd	r24, Z+63	; 0x3f
    1cb2:	88 8b       	std	Y+16, r24	; 0x10
    1cb4:	1c 8a       	std	Y+20, r1	; 0x14
    1cb6:	1b 8a       	std	Y+19, r1	; 0x13
    1cb8:	1a 8a       	std	Y+18, r1	; 0x12
    1cba:	19 8a       	std	Y+17, r1	; 0x11
    1cbc:	18 8e       	std	Y+24, r1	; 0x18
    1cbe:	1f 8a       	std	Y+23, r1	; 0x17
    1cc0:	1e 8a       	std	Y+22, r1	; 0x16
    1cc2:	1d 8a       	std	Y+21, r1	; 0x15
    1cc4:	84 a1       	ldd	r24, Z+36	; 0x24
    1cc6:	89 8f       	std	Y+25, r24	; 0x19
    1cc8:	85 a1       	ldd	r24, Z+37	; 0x25
    1cca:	8a 8f       	std	Y+26, r24	; 0x1a
    1ccc:	86 a1       	ldd	r24, Z+38	; 0x26
    1cce:	8b 8f       	std	Y+27, r24	; 0x1b
    1cd0:	87 a1       	ldd	r24, Z+39	; 0x27
    1cd2:	8c 8f       	std	Y+28, r24	; 0x1c
    1cd4:	84 a5       	ldd	r24, Z+44	; 0x2c
    1cd6:	8d 8f       	std	Y+29, r24	; 0x1d
    1cd8:	85 a5       	ldd	r24, Z+45	; 0x2d
    1cda:	8e 8f       	std	Y+30, r24	; 0x1e
    1cdc:	86 a5       	ldd	r24, Z+46	; 0x2e
    1cde:	8f 8f       	std	Y+31, r24	; 0x1f
    1ce0:	87 a5       	ldd	r24, Z+47	; 0x2f
    1ce2:	88 a3       	std	Y+32, r24	; 0x20
    1ce4:	20 e2       	ldi	r18, 0x20	; 32
    1ce6:	ae 01       	movw	r20, r28
    1ce8:	4f 5f       	subi	r20, 0xFF	; 255
    1cea:	5f 4f       	sbci	r21, 0xFF	; 255
    1cec:	b6 01       	movw	r22, r12
    1cee:	c6 01       	movw	r24, r12
    1cf0:	3c d8       	rcall	.-3976   	; 0xd6a <uECC_vli_sub>
    1cf2:	f8 1a       	sub	r15, r24
    1cf4:	f8 01       	movw	r30, r16
    1cf6:	84 a9       	ldd	r24, Z+52	; 0x34
    1cf8:	89 83       	std	Y+1, r24	; 0x01
    1cfa:	85 a9       	ldd	r24, Z+53	; 0x35
    1cfc:	8a 83       	std	Y+2, r24	; 0x02
    1cfe:	86 a9       	ldd	r24, Z+54	; 0x36
    1d00:	8b 83       	std	Y+3, r24	; 0x03
    1d02:	87 a9       	ldd	r24, Z+55	; 0x37
    1d04:	8c 83       	std	Y+4, r24	; 0x04
    1d06:	80 ad       	ldd	r24, Z+56	; 0x38
    1d08:	8d 83       	std	Y+5, r24	; 0x05
    1d0a:	81 ad       	ldd	r24, Z+57	; 0x39
    1d0c:	8e 83       	std	Y+6, r24	; 0x06
    1d0e:	82 ad       	ldd	r24, Z+58	; 0x3a
    1d10:	8f 83       	std	Y+7, r24	; 0x07
    1d12:	83 ad       	ldd	r24, Z+59	; 0x3b
    1d14:	88 87       	std	Y+8, r24	; 0x08
    1d16:	84 ad       	ldd	r24, Z+60	; 0x3c
    1d18:	89 87       	std	Y+9, r24	; 0x09
    1d1a:	85 ad       	ldd	r24, Z+61	; 0x3d
    1d1c:	8a 87       	std	Y+10, r24	; 0x0a
    1d1e:	86 ad       	ldd	r24, Z+62	; 0x3e
    1d20:	8b 87       	std	Y+11, r24	; 0x0b
    1d22:	87 ad       	ldd	r24, Z+63	; 0x3f
    1d24:	8c 87       	std	Y+12, r24	; 0x0c
    1d26:	80 a1       	ldd	r24, Z+32	; 0x20
    1d28:	8d 87       	std	Y+13, r24	; 0x0d
    1d2a:	81 a1       	ldd	r24, Z+33	; 0x21
    1d2c:	8e 87       	std	Y+14, r24	; 0x0e
    1d2e:	82 a1       	ldd	r24, Z+34	; 0x22
    1d30:	8f 87       	std	Y+15, r24	; 0x0f
    1d32:	83 a1       	ldd	r24, Z+35	; 0x23
    1d34:	88 8b       	std	Y+16, r24	; 0x10
    1d36:	84 a1       	ldd	r24, Z+36	; 0x24
    1d38:	89 8b       	std	Y+17, r24	; 0x11
    1d3a:	85 a1       	ldd	r24, Z+37	; 0x25
    1d3c:	8a 8b       	std	Y+18, r24	; 0x12
    1d3e:	86 a1       	ldd	r24, Z+38	; 0x26
    1d40:	8b 8b       	std	Y+19, r24	; 0x13
    1d42:	87 a1       	ldd	r24, Z+39	; 0x27
    1d44:	8c 8b       	std	Y+20, r24	; 0x14
    1d46:	80 a5       	ldd	r24, Z+40	; 0x28
    1d48:	8d 8b       	std	Y+21, r24	; 0x15
    1d4a:	81 a5       	ldd	r24, Z+41	; 0x29
    1d4c:	8e 8b       	std	Y+22, r24	; 0x16
    1d4e:	82 a5       	ldd	r24, Z+42	; 0x2a
    1d50:	8f 8b       	std	Y+23, r24	; 0x17
    1d52:	83 a5       	ldd	r24, Z+43	; 0x2b
    1d54:	88 8f       	std	Y+24, r24	; 0x18
    1d56:	1c 8e       	std	Y+28, r1	; 0x1c
    1d58:	1b 8e       	std	Y+27, r1	; 0x1b
    1d5a:	1a 8e       	std	Y+26, r1	; 0x1a
    1d5c:	19 8e       	std	Y+25, r1	; 0x19
    1d5e:	80 a9       	ldd	r24, Z+48	; 0x30
    1d60:	8d 8f       	std	Y+29, r24	; 0x1d
    1d62:	81 a9       	ldd	r24, Z+49	; 0x31
    1d64:	8e 8f       	std	Y+30, r24	; 0x1e
    1d66:	82 a9       	ldd	r24, Z+50	; 0x32
    1d68:	8f 8f       	std	Y+31, r24	; 0x1f
    1d6a:	83 a9       	ldd	r24, Z+51	; 0x33
    1d6c:	88 a3       	std	Y+32, r24	; 0x20
    1d6e:	20 e2       	ldi	r18, 0x20	; 32
    1d70:	ae 01       	movw	r20, r28
    1d72:	4f 5f       	subi	r20, 0xFF	; 255
    1d74:	5f 4f       	sbci	r21, 0xFF	; 255
    1d76:	b6 01       	movw	r22, r12
    1d78:	c6 01       	movw	r24, r12
    1d7a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <uECC_vli_sub>
    1d7e:	f8 1a       	sub	r15, r24
    1d80:	f8 01       	movw	r30, r16
    1d82:	80 ad       	ldd	r24, Z+56	; 0x38
    1d84:	89 83       	std	Y+1, r24	; 0x01
    1d86:	81 ad       	ldd	r24, Z+57	; 0x39
    1d88:	8a 83       	std	Y+2, r24	; 0x02
    1d8a:	82 ad       	ldd	r24, Z+58	; 0x3a
    1d8c:	8b 83       	std	Y+3, r24	; 0x03
    1d8e:	83 ad       	ldd	r24, Z+59	; 0x3b
    1d90:	8c 83       	std	Y+4, r24	; 0x04
    1d92:	84 ad       	ldd	r24, Z+60	; 0x3c
    1d94:	8d 83       	std	Y+5, r24	; 0x05
    1d96:	85 ad       	ldd	r24, Z+61	; 0x3d
    1d98:	8e 83       	std	Y+6, r24	; 0x06
    1d9a:	86 ad       	ldd	r24, Z+62	; 0x3e
    1d9c:	8f 83       	std	Y+7, r24	; 0x07
    1d9e:	87 ad       	ldd	r24, Z+63	; 0x3f
    1da0:	88 87       	std	Y+8, r24	; 0x08
    1da2:	1c 86       	std	Y+12, r1	; 0x0c
    1da4:	1b 86       	std	Y+11, r1	; 0x0b
    1da6:	1a 86       	std	Y+10, r1	; 0x0a
    1da8:	19 86       	std	Y+9, r1	; 0x09
    1daa:	84 a1       	ldd	r24, Z+36	; 0x24
    1dac:	8d 87       	std	Y+13, r24	; 0x0d
    1dae:	85 a1       	ldd	r24, Z+37	; 0x25
    1db0:	8e 87       	std	Y+14, r24	; 0x0e
    1db2:	86 a1       	ldd	r24, Z+38	; 0x26
    1db4:	8f 87       	std	Y+15, r24	; 0x0f
    1db6:	87 a1       	ldd	r24, Z+39	; 0x27
    1db8:	88 8b       	std	Y+16, r24	; 0x10
    1dba:	80 a5       	ldd	r24, Z+40	; 0x28
    1dbc:	89 8b       	std	Y+17, r24	; 0x11
    1dbe:	81 a5       	ldd	r24, Z+41	; 0x29
    1dc0:	8a 8b       	std	Y+18, r24	; 0x12
    1dc2:	82 a5       	ldd	r24, Z+42	; 0x2a
    1dc4:	8b 8b       	std	Y+19, r24	; 0x13
    1dc6:	83 a5       	ldd	r24, Z+43	; 0x2b
    1dc8:	8c 8b       	std	Y+20, r24	; 0x14
    1dca:	84 a5       	ldd	r24, Z+44	; 0x2c
    1dcc:	8d 8b       	std	Y+21, r24	; 0x15
    1dce:	85 a5       	ldd	r24, Z+45	; 0x2d
    1dd0:	8e 8b       	std	Y+22, r24	; 0x16
    1dd2:	86 a5       	ldd	r24, Z+46	; 0x2e
    1dd4:	8f 8b       	std	Y+23, r24	; 0x17
    1dd6:	87 a5       	ldd	r24, Z+47	; 0x2f
    1dd8:	88 8f       	std	Y+24, r24	; 0x18
    1dda:	1c 8e       	std	Y+28, r1	; 0x1c
    1ddc:	1b 8e       	std	Y+27, r1	; 0x1b
    1dde:	1a 8e       	std	Y+26, r1	; 0x1a
    1de0:	19 8e       	std	Y+25, r1	; 0x19
    1de2:	84 a9       	ldd	r24, Z+52	; 0x34
    1de4:	8d 8f       	std	Y+29, r24	; 0x1d
    1de6:	85 a9       	ldd	r24, Z+53	; 0x35
    1de8:	8e 8f       	std	Y+30, r24	; 0x1e
    1dea:	86 a9       	ldd	r24, Z+54	; 0x36
    1dec:	8f 8f       	std	Y+31, r24	; 0x1f
    1dee:	87 a9       	ldd	r24, Z+55	; 0x37
    1df0:	88 a3       	std	Y+32, r24	; 0x20
    1df2:	20 e2       	ldi	r18, 0x20	; 32
    1df4:	ae 01       	movw	r20, r28
    1df6:	4f 5f       	subi	r20, 0xFF	; 255
    1df8:	5f 4f       	sbci	r21, 0xFF	; 255
    1dfa:	b6 01       	movw	r22, r12
    1dfc:	c6 01       	movw	r24, r12
    1dfe:	0e 94 b5 06 	call	0xd6a	; 0xd6a <uECC_vli_sub>
    1e02:	1f 2d       	mov	r17, r15
    1e04:	18 1b       	sub	r17, r24
    1e06:	92 f4       	brpl	.+36     	; 0x1e2c <vli_mmod_fast_secp256r1+0x454>
    1e08:	20 e2       	ldi	r18, 0x20	; 32
    1e0a:	4e e0       	ldi	r20, 0x0E	; 14
    1e0c:	51 e0       	ldi	r21, 0x01	; 1
    1e0e:	b6 01       	movw	r22, r12
    1e10:	c6 01       	movw	r24, r12
    1e12:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <uECC_vli_add>
    1e16:	18 0f       	add	r17, r24
    1e18:	ba f3       	brmi	.-18     	; 0x1e08 <vli_mmod_fast_secp256r1+0x430>
    1e1a:	11 c0       	rjmp	.+34     	; 0x1e3e <vli_mmod_fast_secp256r1+0x466>
    1e1c:	20 e2       	ldi	r18, 0x20	; 32
    1e1e:	4e e0       	ldi	r20, 0x0E	; 14
    1e20:	51 e0       	ldi	r21, 0x01	; 1
    1e22:	b6 01       	movw	r22, r12
    1e24:	c6 01       	movw	r24, r12
    1e26:	0e 94 b5 06 	call	0xd6a	; 0xd6a <uECC_vli_sub>
    1e2a:	18 1b       	sub	r17, r24
    1e2c:	11 11       	cpse	r17, r1
    1e2e:	f6 cf       	rjmp	.-20     	; 0x1e1c <vli_mmod_fast_secp256r1+0x444>
    1e30:	40 e2       	ldi	r20, 0x20	; 32
    1e32:	b6 01       	movw	r22, r12
    1e34:	8e e0       	ldi	r24, 0x0E	; 14
    1e36:	91 e0       	ldi	r25, 0x01	; 1
    1e38:	08 d9       	rcall	.-3568   	; 0x104a <uECC_vli_cmp_unsafe>
    1e3a:	81 30       	cpi	r24, 0x01	; 1
    1e3c:	79 f7       	brne	.-34     	; 0x1e1c <vli_mmod_fast_secp256r1+0x444>
    1e3e:	a0 96       	adiw	r28, 0x20	; 32
    1e40:	0f b6       	in	r0, 0x3f	; 63
    1e42:	f8 94       	cli
    1e44:	de bf       	out	0x3e, r29	; 62
    1e46:	0f be       	out	0x3f, r0	; 63
    1e48:	cd bf       	out	0x3d, r28	; 61
    1e4a:	df 91       	pop	r29
    1e4c:	cf 91       	pop	r28
    1e4e:	1f 91       	pop	r17
    1e50:	0f 91       	pop	r16
    1e52:	ff 90       	pop	r15
    1e54:	df 90       	pop	r13
    1e56:	cf 90       	pop	r12
    1e58:	08 95       	ret

00001e5a <apply_z>:
    1e5a:	af 92       	push	r10
    1e5c:	bf 92       	push	r11
    1e5e:	cf 92       	push	r12
    1e60:	df 92       	push	r13
    1e62:	ef 92       	push	r14
    1e64:	ff 92       	push	r15
    1e66:	0f 93       	push	r16
    1e68:	1f 93       	push	r17
    1e6a:	cf 93       	push	r28
    1e6c:	df 93       	push	r29
    1e6e:	cd b7       	in	r28, 0x3d	; 61
    1e70:	de b7       	in	r29, 0x3e	; 62
    1e72:	a0 97       	sbiw	r28, 0x20	; 32
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	f8 94       	cli
    1e78:	de bf       	out	0x3e, r29	; 62
    1e7a:	0f be       	out	0x3f, r0	; 63
    1e7c:	cd bf       	out	0x3d, r28	; 61
    1e7e:	5c 01       	movw	r10, r24
    1e80:	7b 01       	movw	r14, r22
    1e82:	6a 01       	movw	r12, r20
    1e84:	89 01       	movw	r16, r18
    1e86:	a9 01       	movw	r20, r18
    1e88:	b6 01       	movw	r22, r12
    1e8a:	ce 01       	movw	r24, r28
    1e8c:	01 96       	adiw	r24, 0x01	; 1
    1e8e:	22 db       	rcall	.-2492   	; 0x14d4 <uECC_vli_modSquare_fast>
    1e90:	98 01       	movw	r18, r16
    1e92:	ae 01       	movw	r20, r28
    1e94:	4f 5f       	subi	r20, 0xFF	; 255
    1e96:	5f 4f       	sbci	r21, 0xFF	; 255
    1e98:	b5 01       	movw	r22, r10
    1e9a:	c5 01       	movw	r24, r10
    1e9c:	ec da       	rcall	.-2600   	; 0x1476 <uECC_vli_modMult_fast>
    1e9e:	98 01       	movw	r18, r16
    1ea0:	a6 01       	movw	r20, r12
    1ea2:	be 01       	movw	r22, r28
    1ea4:	6f 5f       	subi	r22, 0xFF	; 255
    1ea6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ea8:	cb 01       	movw	r24, r22
    1eaa:	e5 da       	rcall	.-2614   	; 0x1476 <uECC_vli_modMult_fast>
    1eac:	98 01       	movw	r18, r16
    1eae:	ae 01       	movw	r20, r28
    1eb0:	4f 5f       	subi	r20, 0xFF	; 255
    1eb2:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb4:	b7 01       	movw	r22, r14
    1eb6:	c7 01       	movw	r24, r14
    1eb8:	de da       	rcall	.-2628   	; 0x1476 <uECC_vli_modMult_fast>
    1eba:	a0 96       	adiw	r28, 0x20	; 32
    1ebc:	0f b6       	in	r0, 0x3f	; 63
    1ebe:	f8 94       	cli
    1ec0:	de bf       	out	0x3e, r29	; 62
    1ec2:	0f be       	out	0x3f, r0	; 63
    1ec4:	cd bf       	out	0x3d, r28	; 61
    1ec6:	df 91       	pop	r29
    1ec8:	cf 91       	pop	r28
    1eca:	1f 91       	pop	r17
    1ecc:	0f 91       	pop	r16
    1ece:	ff 90       	pop	r15
    1ed0:	ef 90       	pop	r14
    1ed2:	df 90       	pop	r13
    1ed4:	cf 90       	pop	r12
    1ed6:	bf 90       	pop	r11
    1ed8:	af 90       	pop	r10
    1eda:	08 95       	ret

00001edc <XYcZ_add>:
    1edc:	4f 92       	push	r4
    1ede:	5f 92       	push	r5
    1ee0:	6f 92       	push	r6
    1ee2:	7f 92       	push	r7
    1ee4:	8f 92       	push	r8
    1ee6:	9f 92       	push	r9
    1ee8:	af 92       	push	r10
    1eea:	bf 92       	push	r11
    1eec:	cf 92       	push	r12
    1eee:	df 92       	push	r13
    1ef0:	ef 92       	push	r14
    1ef2:	ff 92       	push	r15
    1ef4:	0f 93       	push	r16
    1ef6:	1f 93       	push	r17
    1ef8:	cf 93       	push	r28
    1efa:	df 93       	push	r29
    1efc:	cd b7       	in	r28, 0x3d	; 61
    1efe:	de b7       	in	r29, 0x3e	; 62
    1f00:	a0 97       	sbiw	r28, 0x20	; 32
    1f02:	0f b6       	in	r0, 0x3f	; 63
    1f04:	f8 94       	cli
    1f06:	de bf       	out	0x3e, r29	; 62
    1f08:	0f be       	out	0x3f, r0	; 63
    1f0a:	cd bf       	out	0x3d, r28	; 61
    1f0c:	3c 01       	movw	r6, r24
    1f0e:	2b 01       	movw	r4, r22
    1f10:	7a 01       	movw	r14, r20
    1f12:	59 01       	movw	r10, r18
    1f14:	68 01       	movw	r12, r16
    1f16:	f8 01       	movw	r30, r16
    1f18:	10 81       	ld	r17, Z
    1f1a:	46 01       	movw	r8, r12
    1f1c:	f4 e0       	ldi	r31, 0x04	; 4
    1f1e:	8f 0e       	add	r8, r31
    1f20:	91 1c       	adc	r9, r1
    1f22:	01 2f       	mov	r16, r17
    1f24:	94 01       	movw	r18, r8
    1f26:	ac 01       	movw	r20, r24
    1f28:	b7 01       	movw	r22, r14
    1f2a:	ce 01       	movw	r24, r28
    1f2c:	01 96       	adiw	r24, 0x01	; 1
    1f2e:	08 d9       	rcall	.-3568   	; 0x1140 <uECC_vli_modSub>
    1f30:	a6 01       	movw	r20, r12
    1f32:	be 01       	movw	r22, r28
    1f34:	6f 5f       	subi	r22, 0xFF	; 255
    1f36:	7f 4f       	sbci	r23, 0xFF	; 255
    1f38:	cb 01       	movw	r24, r22
    1f3a:	cc da       	rcall	.-2664   	; 0x14d4 <uECC_vli_modSquare_fast>
    1f3c:	96 01       	movw	r18, r12
    1f3e:	ae 01       	movw	r20, r28
    1f40:	4f 5f       	subi	r20, 0xFF	; 255
    1f42:	5f 4f       	sbci	r21, 0xFF	; 255
    1f44:	b3 01       	movw	r22, r6
    1f46:	c3 01       	movw	r24, r6
    1f48:	96 da       	rcall	.-2772   	; 0x1476 <uECC_vli_modMult_fast>
    1f4a:	96 01       	movw	r18, r12
    1f4c:	ae 01       	movw	r20, r28
    1f4e:	4f 5f       	subi	r20, 0xFF	; 255
    1f50:	5f 4f       	sbci	r21, 0xFF	; 255
    1f52:	b7 01       	movw	r22, r14
    1f54:	c7 01       	movw	r24, r14
    1f56:	8f da       	rcall	.-2786   	; 0x1476 <uECC_vli_modMult_fast>
    1f58:	94 01       	movw	r18, r8
    1f5a:	a2 01       	movw	r20, r4
    1f5c:	b5 01       	movw	r22, r10
    1f5e:	c5 01       	movw	r24, r10
    1f60:	ef d8       	rcall	.-3618   	; 0x1140 <uECC_vli_modSub>
    1f62:	a6 01       	movw	r20, r12
    1f64:	b5 01       	movw	r22, r10
    1f66:	ce 01       	movw	r24, r28
    1f68:	01 96       	adiw	r24, 0x01	; 1
    1f6a:	b4 da       	rcall	.-2712   	; 0x14d4 <uECC_vli_modSquare_fast>
    1f6c:	94 01       	movw	r18, r8
    1f6e:	a3 01       	movw	r20, r6
    1f70:	be 01       	movw	r22, r28
    1f72:	6f 5f       	subi	r22, 0xFF	; 255
    1f74:	7f 4f       	sbci	r23, 0xFF	; 255
    1f76:	cb 01       	movw	r24, r22
    1f78:	e3 d8       	rcall	.-3642   	; 0x1140 <uECC_vli_modSub>
    1f7a:	94 01       	movw	r18, r8
    1f7c:	a7 01       	movw	r20, r14
    1f7e:	be 01       	movw	r22, r28
    1f80:	6f 5f       	subi	r22, 0xFF	; 255
    1f82:	7f 4f       	sbci	r23, 0xFF	; 255
    1f84:	cb 01       	movw	r24, r22
    1f86:	dc d8       	rcall	.-3656   	; 0x1140 <uECC_vli_modSub>
    1f88:	94 01       	movw	r18, r8
    1f8a:	a3 01       	movw	r20, r6
    1f8c:	b7 01       	movw	r22, r14
    1f8e:	c7 01       	movw	r24, r14
    1f90:	d7 d8       	rcall	.-3666   	; 0x1140 <uECC_vli_modSub>
    1f92:	96 01       	movw	r18, r12
    1f94:	a7 01       	movw	r20, r14
    1f96:	b2 01       	movw	r22, r4
    1f98:	c2 01       	movw	r24, r4
    1f9a:	6d da       	rcall	.-2854   	; 0x1476 <uECC_vli_modMult_fast>
    1f9c:	94 01       	movw	r18, r8
    1f9e:	ae 01       	movw	r20, r28
    1fa0:	4f 5f       	subi	r20, 0xFF	; 255
    1fa2:	5f 4f       	sbci	r21, 0xFF	; 255
    1fa4:	b3 01       	movw	r22, r6
    1fa6:	c7 01       	movw	r24, r14
    1fa8:	cb d8       	rcall	.-3690   	; 0x1140 <uECC_vli_modSub>
    1faa:	96 01       	movw	r18, r12
    1fac:	a7 01       	movw	r20, r14
    1fae:	b5 01       	movw	r22, r10
    1fb0:	c5 01       	movw	r24, r10
    1fb2:	61 da       	rcall	.-2878   	; 0x1476 <uECC_vli_modMult_fast>
    1fb4:	94 01       	movw	r18, r8
    1fb6:	a2 01       	movw	r20, r4
    1fb8:	b5 01       	movw	r22, r10
    1fba:	c5 01       	movw	r24, r10
    1fbc:	c1 d8       	rcall	.-3710   	; 0x1140 <uECC_vli_modSub>
    1fbe:	41 2f       	mov	r20, r17
    1fc0:	be 01       	movw	r22, r28
    1fc2:	6f 5f       	subi	r22, 0xFF	; 255
    1fc4:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc6:	c7 01       	movw	r24, r14
    1fc8:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    1fcc:	a0 96       	adiw	r28, 0x20	; 32
    1fce:	0f b6       	in	r0, 0x3f	; 63
    1fd0:	f8 94       	cli
    1fd2:	de bf       	out	0x3e, r29	; 62
    1fd4:	0f be       	out	0x3f, r0	; 63
    1fd6:	cd bf       	out	0x3d, r28	; 61
    1fd8:	df 91       	pop	r29
    1fda:	cf 91       	pop	r28
    1fdc:	1f 91       	pop	r17
    1fde:	0f 91       	pop	r16
    1fe0:	ff 90       	pop	r15
    1fe2:	ef 90       	pop	r14
    1fe4:	df 90       	pop	r13
    1fe6:	cf 90       	pop	r12
    1fe8:	bf 90       	pop	r11
    1fea:	af 90       	pop	r10
    1fec:	9f 90       	pop	r9
    1fee:	8f 90       	pop	r8
    1ff0:	7f 90       	pop	r7
    1ff2:	6f 90       	pop	r6
    1ff4:	5f 90       	pop	r5
    1ff6:	4f 90       	pop	r4
    1ff8:	08 95       	ret

00001ffa <XYcZ_addC>:
    1ffa:	4f 92       	push	r4
    1ffc:	5f 92       	push	r5
    1ffe:	6f 92       	push	r6
    2000:	7f 92       	push	r7
    2002:	8f 92       	push	r8
    2004:	9f 92       	push	r9
    2006:	af 92       	push	r10
    2008:	bf 92       	push	r11
    200a:	cf 92       	push	r12
    200c:	df 92       	push	r13
    200e:	ef 92       	push	r14
    2010:	ff 92       	push	r15
    2012:	0f 93       	push	r16
    2014:	1f 93       	push	r17
    2016:	cf 93       	push	r28
    2018:	df 93       	push	r29
    201a:	cd b7       	in	r28, 0x3d	; 61
    201c:	de b7       	in	r29, 0x3e	; 62
    201e:	c0 56       	subi	r28, 0x60	; 96
    2020:	d1 09       	sbc	r29, r1
    2022:	0f b6       	in	r0, 0x3f	; 63
    2024:	f8 94       	cli
    2026:	de bf       	out	0x3e, r29	; 62
    2028:	0f be       	out	0x3f, r0	; 63
    202a:	cd bf       	out	0x3d, r28	; 61
    202c:	4c 01       	movw	r8, r24
    202e:	2b 01       	movw	r4, r22
    2030:	5a 01       	movw	r10, r20
    2032:	39 01       	movw	r6, r18
    2034:	68 01       	movw	r12, r16
    2036:	f8 01       	movw	r30, r16
    2038:	10 81       	ld	r17, Z
    203a:	76 01       	movw	r14, r12
    203c:	f4 e0       	ldi	r31, 0x04	; 4
    203e:	ef 0e       	add	r14, r31
    2040:	f1 1c       	adc	r15, r1
    2042:	01 2f       	mov	r16, r17
    2044:	97 01       	movw	r18, r14
    2046:	ac 01       	movw	r20, r24
    2048:	b5 01       	movw	r22, r10
    204a:	ce 01       	movw	r24, r28
    204c:	01 96       	adiw	r24, 0x01	; 1
    204e:	78 d8       	rcall	.-3856   	; 0x1140 <uECC_vli_modSub>
    2050:	a6 01       	movw	r20, r12
    2052:	be 01       	movw	r22, r28
    2054:	6f 5f       	subi	r22, 0xFF	; 255
    2056:	7f 4f       	sbci	r23, 0xFF	; 255
    2058:	cb 01       	movw	r24, r22
    205a:	3c da       	rcall	.-2952   	; 0x14d4 <uECC_vli_modSquare_fast>
    205c:	96 01       	movw	r18, r12
    205e:	ae 01       	movw	r20, r28
    2060:	4f 5f       	subi	r20, 0xFF	; 255
    2062:	5f 4f       	sbci	r21, 0xFF	; 255
    2064:	b4 01       	movw	r22, r8
    2066:	c4 01       	movw	r24, r8
    2068:	06 da       	rcall	.-3060   	; 0x1476 <uECC_vli_modMult_fast>
    206a:	96 01       	movw	r18, r12
    206c:	ae 01       	movw	r20, r28
    206e:	4f 5f       	subi	r20, 0xFF	; 255
    2070:	5f 4f       	sbci	r21, 0xFF	; 255
    2072:	b5 01       	movw	r22, r10
    2074:	c5 01       	movw	r24, r10
    2076:	ff d9       	rcall	.-3074   	; 0x1476 <uECC_vli_modMult_fast>
    2078:	97 01       	movw	r18, r14
    207a:	a2 01       	movw	r20, r4
    207c:	b3 01       	movw	r22, r6
    207e:	ce 01       	movw	r24, r28
    2080:	01 96       	adiw	r24, 0x01	; 1
    2082:	42 d8       	rcall	.-3964   	; 0x1108 <uECC_vli_modAdd>
    2084:	97 01       	movw	r18, r14
    2086:	a2 01       	movw	r20, r4
    2088:	b3 01       	movw	r22, r6
    208a:	c3 01       	movw	r24, r6
    208c:	59 d8       	rcall	.-3918   	; 0x1140 <uECC_vli_modSub>
    208e:	97 01       	movw	r18, r14
    2090:	a4 01       	movw	r20, r8
    2092:	b5 01       	movw	r22, r10
    2094:	ce 01       	movw	r24, r28
    2096:	81 96       	adiw	r24, 0x21	; 33
    2098:	53 d8       	rcall	.-3930   	; 0x1140 <uECC_vli_modSub>
    209a:	96 01       	movw	r18, r12
    209c:	ae 01       	movw	r20, r28
    209e:	4f 5d       	subi	r20, 0xDF	; 223
    20a0:	5f 4f       	sbci	r21, 0xFF	; 255
    20a2:	b2 01       	movw	r22, r4
    20a4:	c2 01       	movw	r24, r4
    20a6:	e7 d9       	rcall	.-3122   	; 0x1476 <uECC_vli_modMult_fast>
    20a8:	97 01       	movw	r18, r14
    20aa:	a5 01       	movw	r20, r10
    20ac:	b4 01       	movw	r22, r8
    20ae:	ce 01       	movw	r24, r28
    20b0:	81 96       	adiw	r24, 0x21	; 33
    20b2:	2a d8       	rcall	.-4012   	; 0x1108 <uECC_vli_modAdd>
    20b4:	a6 01       	movw	r20, r12
    20b6:	b3 01       	movw	r22, r6
    20b8:	c5 01       	movw	r24, r10
    20ba:	0c da       	rcall	.-3048   	; 0x14d4 <uECC_vli_modSquare_fast>
    20bc:	97 01       	movw	r18, r14
    20be:	ae 01       	movw	r20, r28
    20c0:	4f 5d       	subi	r20, 0xDF	; 223
    20c2:	5f 4f       	sbci	r21, 0xFF	; 255
    20c4:	b5 01       	movw	r22, r10
    20c6:	c5 01       	movw	r24, r10
    20c8:	3b d8       	rcall	.-3978   	; 0x1140 <uECC_vli_modSub>
    20ca:	97 01       	movw	r18, r14
    20cc:	a5 01       	movw	r20, r10
    20ce:	b4 01       	movw	r22, r8
    20d0:	ce 01       	movw	r24, r28
    20d2:	8f 5b       	subi	r24, 0xBF	; 191
    20d4:	9f 4f       	sbci	r25, 0xFF	; 255
    20d6:	34 d8       	rcall	.-3992   	; 0x1140 <uECC_vli_modSub>
    20d8:	96 01       	movw	r18, r12
    20da:	ae 01       	movw	r20, r28
    20dc:	4f 5b       	subi	r20, 0xBF	; 191
    20de:	5f 4f       	sbci	r21, 0xFF	; 255
    20e0:	b3 01       	movw	r22, r6
    20e2:	c3 01       	movw	r24, r6
    20e4:	c8 d9       	rcall	.-3184   	; 0x1476 <uECC_vli_modMult_fast>
    20e6:	97 01       	movw	r18, r14
    20e8:	a2 01       	movw	r20, r4
    20ea:	b3 01       	movw	r22, r6
    20ec:	c3 01       	movw	r24, r6
    20ee:	28 d8       	rcall	.-4016   	; 0x1140 <uECC_vli_modSub>
    20f0:	a6 01       	movw	r20, r12
    20f2:	be 01       	movw	r22, r28
    20f4:	6f 5f       	subi	r22, 0xFF	; 255
    20f6:	7f 4f       	sbci	r23, 0xFF	; 255
    20f8:	ce 01       	movw	r24, r28
    20fa:	8f 5b       	subi	r24, 0xBF	; 191
    20fc:	9f 4f       	sbci	r25, 0xFF	; 255
    20fe:	ea d9       	rcall	.-3116   	; 0x14d4 <uECC_vli_modSquare_fast>
    2100:	97 01       	movw	r18, r14
    2102:	ae 01       	movw	r20, r28
    2104:	4f 5d       	subi	r20, 0xDF	; 223
    2106:	5f 4f       	sbci	r21, 0xFF	; 255
    2108:	be 01       	movw	r22, r28
    210a:	6f 5b       	subi	r22, 0xBF	; 191
    210c:	7f 4f       	sbci	r23, 0xFF	; 255
    210e:	cb 01       	movw	r24, r22
    2110:	17 d8       	rcall	.-4050   	; 0x1140 <uECC_vli_modSub>
    2112:	97 01       	movw	r18, r14
    2114:	a4 01       	movw	r20, r8
    2116:	be 01       	movw	r22, r28
    2118:	6f 5b       	subi	r22, 0xBF	; 191
    211a:	7f 4f       	sbci	r23, 0xFF	; 255
    211c:	ce 01       	movw	r24, r28
    211e:	81 96       	adiw	r24, 0x21	; 33
    2120:	0f d8       	rcall	.-4066   	; 0x1140 <uECC_vli_modSub>
    2122:	96 01       	movw	r18, r12
    2124:	ae 01       	movw	r20, r28
    2126:	4f 5f       	subi	r20, 0xFF	; 255
    2128:	5f 4f       	sbci	r21, 0xFF	; 255
    212a:	be 01       	movw	r22, r28
    212c:	6f 5d       	subi	r22, 0xDF	; 223
    212e:	7f 4f       	sbci	r23, 0xFF	; 255
    2130:	cb 01       	movw	r24, r22
    2132:	a1 d9       	rcall	.-3262   	; 0x1476 <uECC_vli_modMult_fast>
    2134:	97 01       	movw	r18, r14
    2136:	a2 01       	movw	r20, r4
    2138:	be 01       	movw	r22, r28
    213a:	6f 5d       	subi	r22, 0xDF	; 223
    213c:	7f 4f       	sbci	r23, 0xFF	; 255
    213e:	c2 01       	movw	r24, r4
    2140:	0e 94 a0 08 	call	0x1140	; 0x1140 <uECC_vli_modSub>
    2144:	41 2f       	mov	r20, r17
    2146:	be 01       	movw	r22, r28
    2148:	6f 5b       	subi	r22, 0xBF	; 191
    214a:	7f 4f       	sbci	r23, 0xFF	; 255
    214c:	c4 01       	movw	r24, r8
    214e:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2152:	c0 5a       	subi	r28, 0xA0	; 160
    2154:	df 4f       	sbci	r29, 0xFF	; 255
    2156:	0f b6       	in	r0, 0x3f	; 63
    2158:	f8 94       	cli
    215a:	de bf       	out	0x3e, r29	; 62
    215c:	0f be       	out	0x3f, r0	; 63
    215e:	cd bf       	out	0x3d, r28	; 61
    2160:	df 91       	pop	r29
    2162:	cf 91       	pop	r28
    2164:	1f 91       	pop	r17
    2166:	0f 91       	pop	r16
    2168:	ff 90       	pop	r15
    216a:	ef 90       	pop	r14
    216c:	df 90       	pop	r13
    216e:	cf 90       	pop	r12
    2170:	bf 90       	pop	r11
    2172:	af 90       	pop	r10
    2174:	9f 90       	pop	r9
    2176:	8f 90       	pop	r8
    2178:	7f 90       	pop	r7
    217a:	6f 90       	pop	r6
    217c:	5f 90       	pop	r5
    217e:	4f 90       	pop	r4
    2180:	08 95       	ret

00002182 <EccPoint_mult>:
    2182:	2f 92       	push	r2
    2184:	3f 92       	push	r3
    2186:	4f 92       	push	r4
    2188:	5f 92       	push	r5
    218a:	6f 92       	push	r6
    218c:	7f 92       	push	r7
    218e:	8f 92       	push	r8
    2190:	9f 92       	push	r9
    2192:	af 92       	push	r10
    2194:	bf 92       	push	r11
    2196:	cf 92       	push	r12
    2198:	df 92       	push	r13
    219a:	ef 92       	push	r14
    219c:	ff 92       	push	r15
    219e:	0f 93       	push	r16
    21a0:	1f 93       	push	r17
    21a2:	cf 93       	push	r28
    21a4:	df 93       	push	r29
    21a6:	cd b7       	in	r28, 0x3d	; 61
    21a8:	de b7       	in	r29, 0x3e	; 62
    21aa:	cb 5c       	subi	r28, 0xCB	; 203
    21ac:	d1 09       	sbc	r29, r1
    21ae:	0f b6       	in	r0, 0x3f	; 63
    21b0:	f8 94       	cli
    21b2:	de bf       	out	0x3e, r29	; 62
    21b4:	0f be       	out	0x3f, r0	; 63
    21b6:	cd bf       	out	0x3d, r28	; 61
    21b8:	c6 53       	subi	r28, 0x36	; 54
    21ba:	df 4f       	sbci	r29, 0xFF	; 255
    21bc:	99 83       	std	Y+1, r25	; 0x01
    21be:	88 83       	st	Y, r24
    21c0:	ca 5c       	subi	r28, 0xCA	; 202
    21c2:	d0 40       	sbci	r29, 0x00	; 0
    21c4:	cc 53       	subi	r28, 0x3C	; 60
    21c6:	df 4f       	sbci	r29, 0xFF	; 255
    21c8:	79 83       	std	Y+1, r23	; 0x01
    21ca:	68 83       	st	Y, r22
    21cc:	c4 5c       	subi	r28, 0xC4	; 196
    21ce:	d0 40       	sbci	r29, 0x00	; 0
    21d0:	cf 53       	subi	r28, 0x3F	; 63
    21d2:	df 4f       	sbci	r29, 0xFF	; 255
    21d4:	59 83       	std	Y+1, r21	; 0x01
    21d6:	48 83       	st	Y, r20
    21d8:	c1 5c       	subi	r28, 0xC1	; 193
    21da:	d0 40       	sbci	r29, 0x00	; 0
    21dc:	69 01       	movw	r12, r18
    21de:	17 01       	movw	r2, r14
    21e0:	f7 01       	movw	r30, r14
    21e2:	f0 81       	ld	r31, Z
    21e4:	cd 53       	subi	r28, 0x3D	; 61
    21e6:	df 4f       	sbci	r29, 0xFF	; 255
    21e8:	f8 83       	st	Y, r31
    21ea:	c3 5c       	subi	r28, 0xC3	; 195
    21ec:	d0 40       	sbci	r29, 0x00	; 0
    21ee:	4f 2f       	mov	r20, r31
    21f0:	ce 01       	movw	r24, r28
    21f2:	81 96       	adiw	r24, 0x21	; 33
    21f4:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    21f8:	cd 53       	subi	r28, 0x3D	; 61
    21fa:	df 4f       	sbci	r29, 0xFF	; 255
    21fc:	28 81       	ld	r18, Y
    21fe:	c3 5c       	subi	r28, 0xC3	; 195
    2200:	d0 40       	sbci	r29, 0x00	; 0
    2202:	02 2e       	mov	r0, r18
    2204:	00 0c       	add	r0, r0
    2206:	33 0b       	sbc	r19, r19
    2208:	ca 53       	subi	r28, 0x3A	; 58
    220a:	df 4f       	sbci	r29, 0xFF	; 255
    220c:	39 83       	std	Y+1, r19	; 0x01
    220e:	28 83       	st	Y, r18
    2210:	c6 5c       	subi	r28, 0xC6	; 198
    2212:	d0 40       	sbci	r29, 0x00	; 0
    2214:	cc 53       	subi	r28, 0x3C	; 60
    2216:	df 4f       	sbci	r29, 0xFF	; 255
    2218:	88 81       	ld	r24, Y
    221a:	99 81       	ldd	r25, Y+1	; 0x01
    221c:	c4 5c       	subi	r28, 0xC4	; 196
    221e:	d0 40       	sbci	r29, 0x00	; 0
    2220:	82 0f       	add	r24, r18
    2222:	93 1f       	adc	r25, r19
    2224:	c8 53       	subi	r28, 0x38	; 56
    2226:	df 4f       	sbci	r29, 0xFF	; 255
    2228:	99 83       	std	Y+1, r25	; 0x01
    222a:	88 83       	st	Y, r24
    222c:	c8 5c       	subi	r28, 0xC8	; 200
    222e:	d0 40       	sbci	r29, 0x00	; 0
    2230:	cd 53       	subi	r28, 0x3D	; 61
    2232:	df 4f       	sbci	r29, 0xFF	; 255
    2234:	48 81       	ld	r20, Y
    2236:	c3 5c       	subi	r28, 0xC3	; 195
    2238:	d0 40       	sbci	r29, 0x00	; 0
    223a:	bc 01       	movw	r22, r24
    223c:	ce 01       	movw	r24, r28
    223e:	8f 59       	subi	r24, 0x9F	; 159
    2240:	9f 4f       	sbci	r25, 0xFF	; 255
    2242:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2246:	f7 01       	movw	r30, r14
    2248:	b0 80       	ld	r11, Z
    224a:	c1 14       	cp	r12, r1
    224c:	d1 04       	cpc	r13, r1
    224e:	41 f0       	breq	.+16     	; 0x2260 <EccPoint_mult+0xde>
    2250:	4b 2d       	mov	r20, r11
    2252:	b6 01       	movw	r22, r12
    2254:	ce 01       	movw	r24, r28
    2256:	8f 55       	subi	r24, 0x5F	; 95
    2258:	9f 4f       	sbci	r25, 0xFF	; 255
    225a:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    225e:	0c c0       	rjmp	.+24     	; 0x2278 <EccPoint_mult+0xf6>
    2260:	6b 2d       	mov	r22, r11
    2262:	ce 01       	movw	r24, r28
    2264:	8f 55       	subi	r24, 0x5F	; 95
    2266:	9f 4f       	sbci	r25, 0xFF	; 255
    2268:	0e 94 fe 04 	call	0x9fc	; 0x9fc <uECC_vli_clear>
    226c:	81 e0       	ldi	r24, 0x01	; 1
    226e:	cf 55       	subi	r28, 0x5F	; 95
    2270:	df 4f       	sbci	r29, 0xFF	; 255
    2272:	88 83       	st	Y, r24
    2274:	c1 5a       	subi	r28, 0xA1	; 161
    2276:	d0 40       	sbci	r29, 0x00	; 0
    2278:	4b 2d       	mov	r20, r11
    227a:	be 01       	movw	r22, r28
    227c:	6f 5d       	subi	r22, 0xDF	; 223
    227e:	7f 4f       	sbci	r23, 0xFF	; 255
    2280:	ce 01       	movw	r24, r28
    2282:	01 96       	adiw	r24, 0x01	; 1
    2284:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2288:	0f 2e       	mov	r0, r31
    228a:	f1 e4       	ldi	r31, 0x41	; 65
    228c:	ef 2e       	mov	r14, r31
    228e:	f1 2c       	mov	r15, r1
    2290:	f0 2d       	mov	r31, r0
    2292:	ec 0e       	add	r14, r28
    2294:	fd 1e       	adc	r15, r29
    2296:	f0 e2       	ldi	r31, 0x20	; 32
    2298:	ef 0e       	add	r14, r31
    229a:	f1 1c       	adc	r15, r1
    229c:	4b 2d       	mov	r20, r11
    229e:	b7 01       	movw	r22, r14
    22a0:	ce 01       	movw	r24, r28
    22a2:	8f 5b       	subi	r24, 0xBF	; 191
    22a4:	9f 4f       	sbci	r25, 0xFF	; 255
    22a6:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    22aa:	91 01       	movw	r18, r2
    22ac:	ae 01       	movw	r20, r28
    22ae:	4f 55       	subi	r20, 0x5F	; 95
    22b0:	5f 4f       	sbci	r21, 0xFF	; 255
    22b2:	b7 01       	movw	r22, r14
    22b4:	ce 01       	movw	r24, r28
    22b6:	81 96       	adiw	r24, 0x21	; 33
    22b8:	d0 dd       	rcall	.-1120   	; 0x1e5a <apply_z>
    22ba:	f1 01       	movw	r30, r2
    22bc:	ec 55       	subi	r30, 0x5C	; 92
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	01 90       	ld	r0, Z+
    22c2:	f0 81       	ld	r31, Z
    22c4:	e0 2d       	mov	r30, r0
    22c6:	91 01       	movw	r18, r2
    22c8:	ae 01       	movw	r20, r28
    22ca:	4f 55       	subi	r20, 0x5F	; 95
    22cc:	5f 4f       	sbci	r21, 0xFF	; 255
    22ce:	b7 01       	movw	r22, r14
    22d0:	ce 01       	movw	r24, r28
    22d2:	81 96       	adiw	r24, 0x21	; 33
    22d4:	09 95       	icall
    22d6:	91 01       	movw	r18, r2
    22d8:	ae 01       	movw	r20, r28
    22da:	4f 55       	subi	r20, 0x5F	; 95
    22dc:	5f 4f       	sbci	r21, 0xFF	; 255
    22de:	be 01       	movw	r22, r28
    22e0:	6f 5b       	subi	r22, 0xBF	; 191
    22e2:	7f 4f       	sbci	r23, 0xFF	; 255
    22e4:	ce 01       	movw	r24, r28
    22e6:	01 96       	adiw	r24, 0x01	; 1
    22e8:	b8 dd       	rcall	.-1168   	; 0x1e5a <apply_z>
    22ea:	58 01       	movw	r10, r16
    22ec:	22 e0       	ldi	r18, 0x02	; 2
    22ee:	a2 1a       	sub	r10, r18
    22f0:	b1 08       	sbc	r11, r1
    22f2:	1a 14       	cp	r1, r10
    22f4:	1b 04       	cpc	r1, r11
    22f6:	0c f0       	brlt	.+2      	; 0x22fa <EccPoint_mult+0x178>
    22f8:	53 c0       	rjmp	.+166    	; 0x23a0 <EccPoint_mult+0x21e>
    22fa:	44 24       	eor	r4, r4
    22fc:	43 94       	inc	r4
    22fe:	51 2c       	mov	r5, r1
    2300:	b5 01       	movw	r22, r10
    2302:	cf 53       	subi	r28, 0x3F	; 63
    2304:	df 4f       	sbci	r29, 0xFF	; 255
    2306:	88 81       	ld	r24, Y
    2308:	99 81       	ldd	r25, Y+1	; 0x01
    230a:	c1 5c       	subi	r28, 0xC1	; 193
    230c:	d0 40       	sbci	r29, 0x00	; 0
    230e:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    2312:	92 01       	movw	r18, r4
    2314:	88 23       	and	r24, r24
    2316:	11 f0       	breq	.+4      	; 0x231c <EccPoint_mult+0x19a>
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	39 01       	movw	r6, r18
    231e:	66 0c       	add	r6, r6
    2320:	77 1c       	adc	r7, r7
    2322:	66 0c       	add	r6, r6
    2324:	77 1c       	adc	r7, r7
    2326:	66 0c       	add	r6, r6
    2328:	77 1c       	adc	r7, r7
    232a:	66 0c       	add	r6, r6
    232c:	77 1c       	adc	r7, r7
    232e:	66 0c       	add	r6, r6
    2330:	77 1c       	adc	r7, r7
    2332:	0f 2e       	mov	r0, r31
    2334:	f1 e4       	ldi	r31, 0x41	; 65
    2336:	cf 2e       	mov	r12, r31
    2338:	d1 2c       	mov	r13, r1
    233a:	f0 2d       	mov	r31, r0
    233c:	cc 0e       	add	r12, r28
    233e:	dd 1e       	adc	r13, r29
    2340:	c6 0c       	add	r12, r6
    2342:	d7 1c       	adc	r13, r7
    2344:	81 e0       	ldi	r24, 0x01	; 1
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	8c 0f       	add	r24, r28
    234a:	9d 1f       	adc	r25, r29
    234c:	68 0e       	add	r6, r24
    234e:	79 1e       	adc	r7, r25
    2350:	72 01       	movw	r14, r4
    2352:	e2 1a       	sub	r14, r18
    2354:	f3 0a       	sbc	r15, r19
    2356:	ee 0c       	add	r14, r14
    2358:	ff 1c       	adc	r15, r15
    235a:	ee 0c       	add	r14, r14
    235c:	ff 1c       	adc	r15, r15
    235e:	ee 0c       	add	r14, r14
    2360:	ff 1c       	adc	r15, r15
    2362:	ee 0c       	add	r14, r14
    2364:	ff 1c       	adc	r15, r15
    2366:	ee 0c       	add	r14, r14
    2368:	ff 1c       	adc	r15, r15
    236a:	0f 2e       	mov	r0, r31
    236c:	f1 e4       	ldi	r31, 0x41	; 65
    236e:	8f 2e       	mov	r8, r31
    2370:	91 2c       	mov	r9, r1
    2372:	f0 2d       	mov	r31, r0
    2374:	8c 0e       	add	r8, r28
    2376:	9d 1e       	adc	r9, r29
    2378:	8e 0c       	add	r8, r14
    237a:	9f 1c       	adc	r9, r15
    237c:	e8 0e       	add	r14, r24
    237e:	f9 1e       	adc	r15, r25
    2380:	81 01       	movw	r16, r2
    2382:	96 01       	movw	r18, r12
    2384:	a3 01       	movw	r20, r6
    2386:	b4 01       	movw	r22, r8
    2388:	c7 01       	movw	r24, r14
    238a:	37 de       	rcall	.-914    	; 0x1ffa <XYcZ_addC>
    238c:	94 01       	movw	r18, r8
    238e:	a7 01       	movw	r20, r14
    2390:	b6 01       	movw	r22, r12
    2392:	c3 01       	movw	r24, r6
    2394:	a3 dd       	rcall	.-1210   	; 0x1edc <XYcZ_add>
    2396:	91 e0       	ldi	r25, 0x01	; 1
    2398:	a9 1a       	sub	r10, r25
    239a:	b1 08       	sbc	r11, r1
    239c:	09 f0       	breq	.+2      	; 0x23a0 <EccPoint_mult+0x21e>
    239e:	b0 cf       	rjmp	.-160    	; 0x2300 <EccPoint_mult+0x17e>
    23a0:	60 e0       	ldi	r22, 0x00	; 0
    23a2:	70 e0       	ldi	r23, 0x00	; 0
    23a4:	cf 53       	subi	r28, 0x3F	; 63
    23a6:	df 4f       	sbci	r29, 0xFF	; 255
    23a8:	88 81       	ld	r24, Y
    23aa:	99 81       	ldd	r25, Y+1	; 0x01
    23ac:	c1 5c       	subi	r28, 0xC1	; 193
    23ae:	d0 40       	sbci	r29, 0x00	; 0
    23b0:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    23b4:	21 e0       	ldi	r18, 0x01	; 1
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	88 23       	and	r24, r24
    23ba:	11 f0       	breq	.+4      	; 0x23c0 <EccPoint_mult+0x23e>
    23bc:	20 e0       	ldi	r18, 0x00	; 0
    23be:	30 e0       	ldi	r19, 0x00	; 0
    23c0:	69 01       	movw	r12, r18
    23c2:	cc 0c       	add	r12, r12
    23c4:	dd 1c       	adc	r13, r13
    23c6:	cc 0c       	add	r12, r12
    23c8:	dd 1c       	adc	r13, r13
    23ca:	cc 0c       	add	r12, r12
    23cc:	dd 1c       	adc	r13, r13
    23ce:	cc 0c       	add	r12, r12
    23d0:	dd 1c       	adc	r13, r13
    23d2:	cc 0c       	add	r12, r12
    23d4:	dd 1c       	adc	r13, r13
    23d6:	0f 2e       	mov	r0, r31
    23d8:	f1 e4       	ldi	r31, 0x41	; 65
    23da:	8f 2e       	mov	r8, r31
    23dc:	91 2c       	mov	r9, r1
    23de:	f0 2d       	mov	r31, r0
    23e0:	8c 0e       	add	r8, r28
    23e2:	9d 1e       	adc	r9, r29
    23e4:	8c 0c       	add	r8, r12
    23e6:	9d 1c       	adc	r9, r13
    23e8:	e1 e0       	ldi	r30, 0x01	; 1
    23ea:	f0 e0       	ldi	r31, 0x00	; 0
    23ec:	ec 0f       	add	r30, r28
    23ee:	fd 1f       	adc	r31, r29
    23f0:	ce 0e       	add	r12, r30
    23f2:	df 1e       	adc	r13, r31
    23f4:	81 e0       	ldi	r24, 0x01	; 1
    23f6:	90 e0       	ldi	r25, 0x00	; 0
    23f8:	7c 01       	movw	r14, r24
    23fa:	e2 1a       	sub	r14, r18
    23fc:	f3 0a       	sbc	r15, r19
    23fe:	ee 0c       	add	r14, r14
    2400:	ff 1c       	adc	r15, r15
    2402:	ee 0c       	add	r14, r14
    2404:	ff 1c       	adc	r15, r15
    2406:	ee 0c       	add	r14, r14
    2408:	ff 1c       	adc	r15, r15
    240a:	ee 0c       	add	r14, r14
    240c:	ff 1c       	adc	r15, r15
    240e:	ee 0c       	add	r14, r14
    2410:	ff 1c       	adc	r15, r15
    2412:	0f 2e       	mov	r0, r31
    2414:	f1 e4       	ldi	r31, 0x41	; 65
    2416:	af 2e       	mov	r10, r31
    2418:	b1 2c       	mov	r11, r1
    241a:	f0 2d       	mov	r31, r0
    241c:	ac 0e       	add	r10, r28
    241e:	bd 1e       	adc	r11, r29
    2420:	ae 0c       	add	r10, r14
    2422:	bf 1c       	adc	r11, r15
    2424:	ee 0e       	add	r14, r30
    2426:	ff 1e       	adc	r15, r31
    2428:	81 01       	movw	r16, r2
    242a:	94 01       	movw	r18, r8
    242c:	a6 01       	movw	r20, r12
    242e:	b5 01       	movw	r22, r10
    2430:	c7 01       	movw	r24, r14
    2432:	e3 dd       	rcall	.-1082   	; 0x1ffa <XYcZ_addC>
    2434:	31 01       	movw	r6, r2
    2436:	f4 e0       	ldi	r31, 0x04	; 4
    2438:	6f 0e       	add	r6, r31
    243a:	71 1c       	adc	r7, r1
    243c:	cd 53       	subi	r28, 0x3D	; 61
    243e:	df 4f       	sbci	r29, 0xFF	; 255
    2440:	08 81       	ld	r16, Y
    2442:	c3 5c       	subi	r28, 0xC3	; 195
    2444:	d0 40       	sbci	r29, 0x00	; 0
    2446:	93 01       	movw	r18, r6
    2448:	ae 01       	movw	r20, r28
    244a:	4f 5f       	subi	r20, 0xFF	; 255
    244c:	5f 4f       	sbci	r21, 0xFF	; 255
    244e:	be 01       	movw	r22, r28
    2450:	6f 5d       	subi	r22, 0xDF	; 223
    2452:	7f 4f       	sbci	r23, 0xFF	; 255
    2454:	ce 01       	movw	r24, r28
    2456:	8f 57       	subi	r24, 0x7F	; 127
    2458:	9f 4f       	sbci	r25, 0xFF	; 255
    245a:	0e 94 a0 08 	call	0x1140	; 0x1140 <uECC_vli_modSub>
    245e:	91 01       	movw	r18, r2
    2460:	a5 01       	movw	r20, r10
    2462:	be 01       	movw	r22, r28
    2464:	6f 57       	subi	r22, 0x7F	; 127
    2466:	7f 4f       	sbci	r23, 0xFF	; 255
    2468:	cb 01       	movw	r24, r22
    246a:	05 d8       	rcall	.-4086   	; 0x1476 <uECC_vli_modMult_fast>
    246c:	91 01       	movw	r18, r2
    246e:	cc 53       	subi	r28, 0x3C	; 60
    2470:	df 4f       	sbci	r29, 0xFF	; 255
    2472:	48 81       	ld	r20, Y
    2474:	59 81       	ldd	r21, Y+1	; 0x01
    2476:	c4 5c       	subi	r28, 0xC4	; 196
    2478:	d0 40       	sbci	r29, 0x00	; 0
    247a:	be 01       	movw	r22, r28
    247c:	6f 57       	subi	r22, 0x7F	; 127
    247e:	7f 4f       	sbci	r23, 0xFF	; 255
    2480:	cb 01       	movw	r24, r22
    2482:	0e 94 3b 0a 	call	0x1476	; 0x1476 <uECC_vli_modMult_fast>
    2486:	cd 53       	subi	r28, 0x3D	; 61
    2488:	df 4f       	sbci	r29, 0xFF	; 255
    248a:	28 81       	ld	r18, Y
    248c:	c3 5c       	subi	r28, 0xC3	; 195
    248e:	d0 40       	sbci	r29, 0x00	; 0
    2490:	a3 01       	movw	r20, r6
    2492:	be 01       	movw	r22, r28
    2494:	6f 57       	subi	r22, 0x7F	; 127
    2496:	7f 4f       	sbci	r23, 0xFF	; 255
    2498:	cb 01       	movw	r24, r22
    249a:	47 d8       	rcall	.-3954   	; 0x152a <uECC_vli_modInv>
    249c:	91 01       	movw	r18, r2
    249e:	c8 53       	subi	r28, 0x38	; 56
    24a0:	df 4f       	sbci	r29, 0xFF	; 255
    24a2:	48 81       	ld	r20, Y
    24a4:	59 81       	ldd	r21, Y+1	; 0x01
    24a6:	c8 5c       	subi	r28, 0xC8	; 200
    24a8:	d0 40       	sbci	r29, 0x00	; 0
    24aa:	be 01       	movw	r22, r28
    24ac:	6f 57       	subi	r22, 0x7F	; 127
    24ae:	7f 4f       	sbci	r23, 0xFF	; 255
    24b0:	cb 01       	movw	r24, r22
    24b2:	0e 94 3b 0a 	call	0x1476	; 0x1476 <uECC_vli_modMult_fast>
    24b6:	91 01       	movw	r18, r2
    24b8:	a7 01       	movw	r20, r14
    24ba:	be 01       	movw	r22, r28
    24bc:	6f 57       	subi	r22, 0x7F	; 127
    24be:	7f 4f       	sbci	r23, 0xFF	; 255
    24c0:	cb 01       	movw	r24, r22
    24c2:	0e 94 3b 0a 	call	0x1476	; 0x1476 <uECC_vli_modMult_fast>
    24c6:	81 01       	movw	r16, r2
    24c8:	95 01       	movw	r18, r10
    24ca:	a7 01       	movw	r20, r14
    24cc:	b4 01       	movw	r22, r8
    24ce:	c6 01       	movw	r24, r12
    24d0:	05 dd       	rcall	.-1526   	; 0x1edc <XYcZ_add>
    24d2:	91 01       	movw	r18, r2
    24d4:	ae 01       	movw	r20, r28
    24d6:	4f 57       	subi	r20, 0x7F	; 127
    24d8:	5f 4f       	sbci	r21, 0xFF	; 255
    24da:	be 01       	movw	r22, r28
    24dc:	6f 5b       	subi	r22, 0xBF	; 191
    24de:	7f 4f       	sbci	r23, 0xFF	; 255
    24e0:	ce 01       	movw	r24, r28
    24e2:	01 96       	adiw	r24, 0x01	; 1
    24e4:	ba dc       	rcall	.-1676   	; 0x1e5a <apply_z>
    24e6:	cd 53       	subi	r28, 0x3D	; 61
    24e8:	df 4f       	sbci	r29, 0xFF	; 255
    24ea:	48 81       	ld	r20, Y
    24ec:	c3 5c       	subi	r28, 0xC3	; 195
    24ee:	d0 40       	sbci	r29, 0x00	; 0
    24f0:	be 01       	movw	r22, r28
    24f2:	6f 5f       	subi	r22, 0xFF	; 255
    24f4:	7f 4f       	sbci	r23, 0xFF	; 255
    24f6:	c6 53       	subi	r28, 0x36	; 54
    24f8:	df 4f       	sbci	r29, 0xFF	; 255
    24fa:	88 81       	ld	r24, Y
    24fc:	99 81       	ldd	r25, Y+1	; 0x01
    24fe:	ca 5c       	subi	r28, 0xCA	; 202
    2500:	d0 40       	sbci	r29, 0x00	; 0
    2502:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2506:	cd 53       	subi	r28, 0x3D	; 61
    2508:	df 4f       	sbci	r29, 0xFF	; 255
    250a:	48 81       	ld	r20, Y
    250c:	c3 5c       	subi	r28, 0xC3	; 195
    250e:	d0 40       	sbci	r29, 0x00	; 0
    2510:	be 01       	movw	r22, r28
    2512:	6f 5b       	subi	r22, 0xBF	; 191
    2514:	7f 4f       	sbci	r23, 0xFF	; 255
    2516:	c6 53       	subi	r28, 0x36	; 54
    2518:	df 4f       	sbci	r29, 0xFF	; 255
    251a:	88 81       	ld	r24, Y
    251c:	99 81       	ldd	r25, Y+1	; 0x01
    251e:	ca 5c       	subi	r28, 0xCA	; 202
    2520:	d0 40       	sbci	r29, 0x00	; 0
    2522:	ca 53       	subi	r28, 0x3A	; 58
    2524:	df 4f       	sbci	r29, 0xFF	; 255
    2526:	28 81       	ld	r18, Y
    2528:	39 81       	ldd	r19, Y+1	; 0x01
    252a:	c6 5c       	subi	r28, 0xC6	; 198
    252c:	d0 40       	sbci	r29, 0x00	; 0
    252e:	82 0f       	add	r24, r18
    2530:	93 1f       	adc	r25, r19
    2532:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2536:	c5 53       	subi	r28, 0x35	; 53
    2538:	df 4f       	sbci	r29, 0xFF	; 255
    253a:	0f b6       	in	r0, 0x3f	; 63
    253c:	f8 94       	cli
    253e:	de bf       	out	0x3e, r29	; 62
    2540:	0f be       	out	0x3f, r0	; 63
    2542:	cd bf       	out	0x3d, r28	; 61
    2544:	df 91       	pop	r29
    2546:	cf 91       	pop	r28
    2548:	1f 91       	pop	r17
    254a:	0f 91       	pop	r16
    254c:	ff 90       	pop	r15
    254e:	ef 90       	pop	r14
    2550:	df 90       	pop	r13
    2552:	cf 90       	pop	r12
    2554:	bf 90       	pop	r11
    2556:	af 90       	pop	r10
    2558:	9f 90       	pop	r9
    255a:	8f 90       	pop	r8
    255c:	7f 90       	pop	r7
    255e:	6f 90       	pop	r6
    2560:	5f 90       	pop	r5
    2562:	4f 90       	pop	r4
    2564:	3f 90       	pop	r3
    2566:	2f 90       	pop	r2
    2568:	08 95       	ret

0000256a <regularize_k>:
    256a:	af 92       	push	r10
    256c:	bf 92       	push	r11
    256e:	cf 92       	push	r12
    2570:	df 92       	push	r13
    2572:	ef 92       	push	r14
    2574:	ff 92       	push	r15
    2576:	0f 93       	push	r16
    2578:	1f 93       	push	r17
    257a:	cf 93       	push	r28
    257c:	df 93       	push	r29
    257e:	7b 01       	movw	r14, r22
    2580:	5a 01       	movw	r10, r20
    2582:	f9 01       	movw	r30, r18
    2584:	c2 80       	ldd	r12, Z+2	; 0x02
    2586:	d3 80       	ldd	r13, Z+3	; 0x03
    2588:	a6 01       	movw	r20, r12
    258a:	49 5f       	subi	r20, 0xF9	; 249
    258c:	5f 4f       	sbci	r21, 0xFF	; 255
    258e:	ea 01       	movw	r28, r20
    2590:	dd 23       	and	r29, r29
    2592:	0c f4       	brge	.+2      	; 0x2596 <regularize_k+0x2c>
    2594:	27 96       	adiw	r28, 0x07	; 7
    2596:	d5 95       	asr	r29
    2598:	c7 95       	ror	r28
    259a:	d5 95       	asr	r29
    259c:	c7 95       	ror	r28
    259e:	d5 95       	asr	r29
    25a0:	c7 95       	ror	r28
    25a2:	89 01       	movw	r16, r18
    25a4:	0c 5d       	subi	r16, 0xDC	; 220
    25a6:	1f 4f       	sbci	r17, 0xFF	; 255
    25a8:	2c 2f       	mov	r18, r28
    25aa:	a8 01       	movw	r20, r16
    25ac:	bc 01       	movw	r22, r24
    25ae:	c7 01       	movw	r24, r14
    25b0:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <uECC_vli_add>
    25b4:	81 11       	cpse	r24, r1
    25b6:	11 c0       	rjmp	.+34     	; 0x25da <regularize_k+0x70>
    25b8:	28 e0       	ldi	r18, 0x08	; 8
    25ba:	c2 02       	muls	r28, r18
    25bc:	c0 01       	movw	r24, r0
    25be:	11 24       	eor	r1, r1
    25c0:	c8 16       	cp	r12, r24
    25c2:	d9 06       	cpc	r13, r25
    25c4:	6c f4       	brge	.+26     	; 0x25e0 <regularize_k+0x76>
    25c6:	b6 01       	movw	r22, r12
    25c8:	c7 01       	movw	r24, r14
    25ca:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    25ce:	91 e0       	ldi	r25, 0x01	; 1
    25d0:	81 11       	cpse	r24, r1
    25d2:	01 c0       	rjmp	.+2      	; 0x25d6 <regularize_k+0x6c>
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	d9 2e       	mov	r13, r25
    25d8:	04 c0       	rjmp	.+8      	; 0x25e2 <regularize_k+0x78>
    25da:	dd 24       	eor	r13, r13
    25dc:	d3 94       	inc	r13
    25de:	01 c0       	rjmp	.+2      	; 0x25e2 <regularize_k+0x78>
    25e0:	d1 2c       	mov	r13, r1
    25e2:	2c 2f       	mov	r18, r28
    25e4:	a8 01       	movw	r20, r16
    25e6:	b7 01       	movw	r22, r14
    25e8:	c5 01       	movw	r24, r10
    25ea:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <uECC_vli_add>
    25ee:	8d 2d       	mov	r24, r13
    25f0:	df 91       	pop	r29
    25f2:	cf 91       	pop	r28
    25f4:	1f 91       	pop	r17
    25f6:	0f 91       	pop	r16
    25f8:	ff 90       	pop	r15
    25fa:	ef 90       	pop	r14
    25fc:	df 90       	pop	r13
    25fe:	cf 90       	pop	r12
    2600:	bf 90       	pop	r11
    2602:	af 90       	pop	r10
    2604:	08 95       	ret

00002606 <EccPoint_compute_public_key>:
    2606:	af 92       	push	r10
    2608:	bf 92       	push	r11
    260a:	cf 92       	push	r12
    260c:	df 92       	push	r13
    260e:	ef 92       	push	r14
    2610:	ff 92       	push	r15
    2612:	0f 93       	push	r16
    2614:	1f 93       	push	r17
    2616:	cf 93       	push	r28
    2618:	df 93       	push	r29
    261a:	cd b7       	in	r28, 0x3d	; 61
    261c:	de b7       	in	r29, 0x3e	; 62
    261e:	c4 54       	subi	r28, 0x44	; 68
    2620:	d1 09       	sbc	r29, r1
    2622:	0f b6       	in	r0, 0x3f	; 63
    2624:	f8 94       	cli
    2626:	de bf       	out	0x3e, r29	; 62
    2628:	0f be       	out	0x3f, r0	; 63
    262a:	cd bf       	out	0x3d, r28	; 61
    262c:	5c 01       	movw	r10, r24
    262e:	cb 01       	movw	r24, r22
    2630:	6a 01       	movw	r12, r20
    2632:	7e 01       	movw	r14, r28
    2634:	21 e4       	ldi	r18, 0x41	; 65
    2636:	e2 0e       	add	r14, r18
    2638:	f1 1c       	adc	r15, r1
    263a:	be 01       	movw	r22, r28
    263c:	6f 5f       	subi	r22, 0xFF	; 255
    263e:	7f 4f       	sbci	r23, 0xFF	; 255
    2640:	f7 01       	movw	r30, r14
    2642:	71 83       	std	Z+1, r23	; 0x01
    2644:	60 83       	st	Z, r22
    2646:	ae 01       	movw	r20, r28
    2648:	4f 5d       	subi	r20, 0xDF	; 223
    264a:	5f 4f       	sbci	r21, 0xFF	; 255
    264c:	53 83       	std	Z+3, r21	; 0x03
    264e:	42 83       	std	Z+2, r20	; 0x02
    2650:	96 01       	movw	r18, r12
    2652:	8b df       	rcall	.-234    	; 0x256a <regularize_k>
    2654:	f6 01       	movw	r30, r12
    2656:	02 81       	ldd	r16, Z+2	; 0x02
    2658:	13 81       	ldd	r17, Z+3	; 0x03
    265a:	0f 5f       	subi	r16, 0xFF	; 255
    265c:	1f 4f       	sbci	r17, 0xFF	; 255
    265e:	f7 01       	movw	r30, r14
    2660:	21 e0       	ldi	r18, 0x01	; 1
    2662:	30 e0       	ldi	r19, 0x00	; 0
    2664:	88 23       	and	r24, r24
    2666:	11 f0       	breq	.+4      	; 0x266c <EccPoint_compute_public_key+0x66>
    2668:	20 e0       	ldi	r18, 0x00	; 0
    266a:	30 e0       	ldi	r19, 0x00	; 0
    266c:	22 0f       	add	r18, r18
    266e:	33 1f       	adc	r19, r19
    2670:	e2 0f       	add	r30, r18
    2672:	f3 1f       	adc	r31, r19
    2674:	40 81       	ld	r20, Z
    2676:	51 81       	ldd	r21, Z+1	; 0x01
    2678:	b6 01       	movw	r22, r12
    267a:	6c 5b       	subi	r22, 0xBC	; 188
    267c:	7f 4f       	sbci	r23, 0xFF	; 255
    267e:	76 01       	movw	r14, r12
    2680:	20 e0       	ldi	r18, 0x00	; 0
    2682:	30 e0       	ldi	r19, 0x00	; 0
    2684:	c5 01       	movw	r24, r10
    2686:	7d dd       	rcall	.-1286   	; 0x2182 <EccPoint_mult>
    2688:	f6 01       	movw	r30, r12
    268a:	60 81       	ld	r22, Z
    268c:	66 0f       	add	r22, r22
    268e:	c5 01       	movw	r24, r10
    2690:	0e 94 c2 07 	call	0xf84	; 0xf84 <uECC_vli_isZero>
    2694:	91 e0       	ldi	r25, 0x01	; 1
    2696:	81 11       	cpse	r24, r1
    2698:	90 e0       	ldi	r25, 0x00	; 0
    269a:	89 2f       	mov	r24, r25
    269c:	cc 5b       	subi	r28, 0xBC	; 188
    269e:	df 4f       	sbci	r29, 0xFF	; 255
    26a0:	0f b6       	in	r0, 0x3f	; 63
    26a2:	f8 94       	cli
    26a4:	de bf       	out	0x3e, r29	; 62
    26a6:	0f be       	out	0x3f, r0	; 63
    26a8:	cd bf       	out	0x3d, r28	; 61
    26aa:	df 91       	pop	r29
    26ac:	cf 91       	pop	r28
    26ae:	1f 91       	pop	r17
    26b0:	0f 91       	pop	r16
    26b2:	ff 90       	pop	r15
    26b4:	ef 90       	pop	r14
    26b6:	df 90       	pop	r13
    26b8:	cf 90       	pop	r12
    26ba:	bf 90       	pop	r11
    26bc:	af 90       	pop	r10
    26be:	08 95       	ret

000026c0 <uECC_vli_nativeToBytes>:
    26c0:	cf 93       	push	r28
    26c2:	df 93       	push	r29
    26c4:	dc 01       	movw	r26, r24
    26c6:	16 16       	cp	r1, r22
    26c8:	17 06       	cpc	r1, r23
    26ca:	cc f4       	brge	.+50     	; 0x26fe <uECC_vli_nativeToBytes+0x3e>
    26cc:	20 e0       	ldi	r18, 0x00	; 0
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	eb 01       	movw	r28, r22
    26d4:	21 97       	sbiw	r28, 0x01	; 1
    26d6:	fe 01       	movw	r30, r28
    26d8:	e2 1b       	sub	r30, r18
    26da:	f3 0b       	sbc	r31, r19
    26dc:	e4 0f       	add	r30, r20
    26de:	f5 1f       	adc	r31, r21
    26e0:	20 81       	ld	r18, Z
    26e2:	fd 01       	movw	r30, r26
    26e4:	e9 0f       	add	r30, r25
    26e6:	f1 1d       	adc	r31, r1
    26e8:	97 fd       	sbrc	r25, 7
    26ea:	fa 95       	dec	r31
    26ec:	20 83       	st	Z, r18
    26ee:	9f 5f       	subi	r25, 0xFF	; 255
    26f0:	29 2f       	mov	r18, r25
    26f2:	09 2e       	mov	r0, r25
    26f4:	00 0c       	add	r0, r0
    26f6:	33 0b       	sbc	r19, r19
    26f8:	26 17       	cp	r18, r22
    26fa:	37 07       	cpc	r19, r23
    26fc:	64 f3       	brlt	.-40     	; 0x26d6 <uECC_vli_nativeToBytes+0x16>
    26fe:	df 91       	pop	r29
    2700:	cf 91       	pop	r28
    2702:	08 95       	ret

00002704 <uECC_generate_random_int>:
    2704:	9f 92       	push	r9
    2706:	af 92       	push	r10
    2708:	bf 92       	push	r11
    270a:	cf 92       	push	r12
    270c:	df 92       	push	r13
    270e:	ef 92       	push	r14
    2710:	ff 92       	push	r15
    2712:	0f 93       	push	r16
    2714:	1f 93       	push	r17
    2716:	cf 93       	push	r28
    2718:	df 93       	push	r29
    271a:	8c 01       	movw	r16, r24
    271c:	5b 01       	movw	r10, r22
    271e:	d4 2f       	mov	r29, r20
    2720:	64 2f       	mov	r22, r20
    2722:	c5 01       	movw	r24, r10
    2724:	0e 94 ee 07 	call	0xfdc	; 0xfdc <uECC_vli_numBits>
    2728:	20 91 62 06 	lds	r18, 0x0662	; 0x800662 <g_rng_function>
    272c:	30 91 63 06 	lds	r19, 0x0663	; 0x800663 <g_rng_function+0x1>
    2730:	23 2b       	or	r18, r19
    2732:	c1 f1       	breq	.+112    	; 0x27a4 <uECC_generate_random_int+0xa0>
    2734:	48 e0       	ldi	r20, 0x08	; 8
    2736:	d4 02       	muls	r29, r20
    2738:	90 01       	movw	r18, r0
    273a:	11 24       	eor	r1, r1
    273c:	28 1b       	sub	r18, r24
    273e:	39 0b       	sbc	r19, r25
    2740:	8f ef       	ldi	r24, 0xFF	; 255
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	02 c0       	rjmp	.+4      	; 0x274a <uECC_generate_random_int+0x46>
    2746:	95 95       	asr	r25
    2748:	87 95       	ror	r24
    274a:	2a 95       	dec	r18
    274c:	e2 f7       	brpl	.-8      	; 0x2746 <uECC_generate_random_int+0x42>
    274e:	98 2e       	mov	r9, r24
    2750:	c0 e4       	ldi	r28, 0x40	; 64
    2752:	cd 2e       	mov	r12, r29
    2754:	0d 2e       	mov	r0, r29
    2756:	00 0c       	add	r0, r0
    2758:	dd 08       	sbc	r13, r13
    275a:	76 01       	movw	r14, r12
    275c:	81 e0       	ldi	r24, 0x01	; 1
    275e:	e8 1a       	sub	r14, r24
    2760:	f1 08       	sbc	r15, r1
    2762:	e0 0e       	add	r14, r16
    2764:	f1 1e       	adc	r15, r17
    2766:	e0 91 62 06 	lds	r30, 0x0662	; 0x800662 <g_rng_function>
    276a:	f0 91 63 06 	lds	r31, 0x0663	; 0x800663 <g_rng_function+0x1>
    276e:	b6 01       	movw	r22, r12
    2770:	c8 01       	movw	r24, r16
    2772:	09 95       	icall
    2774:	00 97       	sbiw	r24, 0x00	; 0
    2776:	d9 f0       	breq	.+54     	; 0x27ae <uECC_generate_random_int+0xaa>
    2778:	f7 01       	movw	r30, r14
    277a:	80 81       	ld	r24, Z
    277c:	89 21       	and	r24, r9
    277e:	80 83       	st	Z, r24
    2780:	6d 2f       	mov	r22, r29
    2782:	c8 01       	movw	r24, r16
    2784:	0e 94 c2 07 	call	0xf84	; 0xf84 <uECC_vli_isZero>
    2788:	81 11       	cpse	r24, r1
    278a:	07 c0       	rjmp	.+14     	; 0x279a <uECC_generate_random_int+0x96>
    278c:	4d 2f       	mov	r20, r29
    278e:	b8 01       	movw	r22, r16
    2790:	c5 01       	movw	r24, r10
    2792:	0e 94 57 08 	call	0x10ae	; 0x10ae <uECC_vli_cmp>
    2796:	81 30       	cpi	r24, 0x01	; 1
    2798:	41 f0       	breq	.+16     	; 0x27aa <uECC_generate_random_int+0xa6>
    279a:	c1 50       	subi	r28, 0x01	; 1
    279c:	21 f7       	brne	.-56     	; 0x2766 <uECC_generate_random_int+0x62>
    279e:	80 e0       	ldi	r24, 0x00	; 0
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	05 c0       	rjmp	.+10     	; 0x27ae <uECC_generate_random_int+0xaa>
    27a4:	80 e0       	ldi	r24, 0x00	; 0
    27a6:	90 e0       	ldi	r25, 0x00	; 0
    27a8:	02 c0       	rjmp	.+4      	; 0x27ae <uECC_generate_random_int+0xaa>
    27aa:	81 e0       	ldi	r24, 0x01	; 1
    27ac:	90 e0       	ldi	r25, 0x00	; 0
    27ae:	df 91       	pop	r29
    27b0:	cf 91       	pop	r28
    27b2:	1f 91       	pop	r17
    27b4:	0f 91       	pop	r16
    27b6:	ff 90       	pop	r15
    27b8:	ef 90       	pop	r14
    27ba:	df 90       	pop	r13
    27bc:	cf 90       	pop	r12
    27be:	bf 90       	pop	r11
    27c0:	af 90       	pop	r10
    27c2:	9f 90       	pop	r9
    27c4:	08 95       	ret

000027c6 <bits2int>:
    27c6:	8f 92       	push	r8
    27c8:	9f 92       	push	r9
    27ca:	af 92       	push	r10
    27cc:	bf 92       	push	r11
    27ce:	cf 92       	push	r12
    27d0:	df 92       	push	r13
    27d2:	ef 92       	push	r14
    27d4:	ff 92       	push	r15
    27d6:	0f 93       	push	r16
    27d8:	1f 93       	push	r17
    27da:	cf 93       	push	r28
    27dc:	df 93       	push	r29
    27de:	8c 01       	movw	r16, r24
    27e0:	4b 01       	movw	r8, r22
    27e2:	79 01       	movw	r14, r18
    27e4:	f9 01       	movw	r30, r18
    27e6:	82 81       	ldd	r24, Z+2	; 0x02
    27e8:	93 81       	ldd	r25, Z+3	; 0x03
    27ea:	07 96       	adiw	r24, 0x07	; 7
    27ec:	ec 01       	movw	r28, r24
    27ee:	0a f4       	brpl	.+2      	; 0x27f2 <bits2int+0x2c>
    27f0:	27 96       	adiw	r28, 0x07	; 7
    27f2:	d5 95       	asr	r29
    27f4:	c7 95       	ror	r28
    27f6:	d5 95       	asr	r29
    27f8:	c7 95       	ror	r28
    27fa:	d5 95       	asr	r29
    27fc:	c7 95       	ror	r28
    27fe:	cc 2e       	mov	r12, r28
    2800:	dd 2e       	mov	r13, r29
    2802:	56 01       	movw	r10, r12
    2804:	4c 15       	cp	r20, r12
    2806:	5d 05       	cpc	r21, r13
    2808:	08 f4       	brcc	.+2      	; 0x280c <bits2int+0x46>
    280a:	5a 01       	movw	r10, r20
    280c:	6c 2f       	mov	r22, r28
    280e:	c8 01       	movw	r24, r16
    2810:	0e 94 fe 04 	call	0x9fc	; 0x9fc <uECC_vli_clear>
    2814:	a4 01       	movw	r20, r8
    2816:	b5 01       	movw	r22, r10
    2818:	c8 01       	movw	r24, r16
    281a:	52 df       	rcall	.-348    	; 0x26c0 <uECC_vli_nativeToBytes>
    281c:	aa 0c       	add	r10, r10
    281e:	bb 1c       	adc	r11, r11
    2820:	aa 0c       	add	r10, r10
    2822:	bb 1c       	adc	r11, r11
    2824:	aa 0c       	add	r10, r10
    2826:	bb 1c       	adc	r11, r11
    2828:	f7 01       	movw	r30, r14
    282a:	82 81       	ldd	r24, Z+2	; 0x02
    282c:	93 81       	ldd	r25, Z+3	; 0x03
    282e:	8a 15       	cp	r24, r10
    2830:	9b 05       	cpc	r25, r11
    2832:	a0 f5       	brcc	.+104    	; 0x289c <bits2int+0xd6>
    2834:	b5 01       	movw	r22, r10
    2836:	68 1b       	sub	r22, r24
    2838:	79 0b       	sbc	r23, r25
    283a:	f8 01       	movw	r30, r16
    283c:	ec 0d       	add	r30, r12
    283e:	fd 1d       	adc	r31, r13
    2840:	0e 17       	cp	r16, r30
    2842:	1f 07       	cpc	r17, r31
    2844:	d8 f4       	brcc	.+54     	; 0x287c <bits2int+0xb6>
    2846:	d8 01       	movw	r26, r16
    2848:	d1 2c       	mov	r13, r1
    284a:	48 e0       	ldi	r20, 0x08	; 8
    284c:	50 e0       	ldi	r21, 0x00	; 0
    284e:	46 1b       	sub	r20, r22
    2850:	57 0b       	sbc	r21, r23
    2852:	92 91       	ld	r25, -Z
    2854:	29 2f       	mov	r18, r25
    2856:	30 e0       	ldi	r19, 0x00	; 0
    2858:	c9 01       	movw	r24, r18
    285a:	06 2e       	mov	r0, r22
    285c:	02 c0       	rjmp	.+4      	; 0x2862 <bits2int+0x9c>
    285e:	95 95       	asr	r25
    2860:	87 95       	ror	r24
    2862:	0a 94       	dec	r0
    2864:	e2 f7       	brpl	.-8      	; 0x285e <bits2int+0x98>
    2866:	8d 29       	or	r24, r13
    2868:	80 83       	st	Z, r24
    286a:	04 2e       	mov	r0, r20
    286c:	01 c0       	rjmp	.+2      	; 0x2870 <bits2int+0xaa>
    286e:	22 0f       	add	r18, r18
    2870:	0a 94       	dec	r0
    2872:	ea f7       	brpl	.-6      	; 0x286e <bits2int+0xa8>
    2874:	d2 2e       	mov	r13, r18
    2876:	ae 17       	cp	r26, r30
    2878:	bf 07       	cpc	r27, r31
    287a:	59 f7       	brne	.-42     	; 0x2852 <bits2int+0x8c>
    287c:	f4 e2       	ldi	r31, 0x24	; 36
    287e:	ef 0e       	add	r14, r31
    2880:	f1 1c       	adc	r15, r1
    2882:	4c 2f       	mov	r20, r28
    2884:	b8 01       	movw	r22, r16
    2886:	c7 01       	movw	r24, r14
    2888:	0e 94 25 08 	call	0x104a	; 0x104a <uECC_vli_cmp_unsafe>
    288c:	81 30       	cpi	r24, 0x01	; 1
    288e:	31 f0       	breq	.+12     	; 0x289c <bits2int+0xd6>
    2890:	2c 2f       	mov	r18, r28
    2892:	a7 01       	movw	r20, r14
    2894:	b8 01       	movw	r22, r16
    2896:	c8 01       	movw	r24, r16
    2898:	0e 94 b5 06 	call	0xd6a	; 0xd6a <uECC_vli_sub>
    289c:	df 91       	pop	r29
    289e:	cf 91       	pop	r28
    28a0:	1f 91       	pop	r17
    28a2:	0f 91       	pop	r16
    28a4:	ff 90       	pop	r15
    28a6:	ef 90       	pop	r14
    28a8:	df 90       	pop	r13
    28aa:	cf 90       	pop	r12
    28ac:	bf 90       	pop	r11
    28ae:	af 90       	pop	r10
    28b0:	9f 90       	pop	r9
    28b2:	8f 90       	pop	r8
    28b4:	08 95       	ret

000028b6 <uECC_set_rng>:
    28b6:	90 93 63 06 	sts	0x0663, r25	; 0x800663 <g_rng_function+0x1>
    28ba:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <g_rng_function>
    28be:	08 95       	ret

000028c0 <uECC_secp256r1>:
    28c0:	8a e0       	ldi	r24, 0x0A	; 10
    28c2:	91 e0       	ldi	r25, 0x01	; 1
    28c4:	08 95       	ret

000028c6 <uECC_make_key>:
    28c6:	9f 92       	push	r9
    28c8:	af 92       	push	r10
    28ca:	bf 92       	push	r11
    28cc:	cf 92       	push	r12
    28ce:	df 92       	push	r13
    28d0:	ef 92       	push	r14
    28d2:	ff 92       	push	r15
    28d4:	0f 93       	push	r16
    28d6:	1f 93       	push	r17
    28d8:	cf 93       	push	r28
    28da:	df 93       	push	r29
    28dc:	cd b7       	in	r28, 0x3d	; 61
    28de:	de b7       	in	r29, 0x3e	; 62
    28e0:	c0 56       	subi	r28, 0x60	; 96
    28e2:	d1 09       	sbc	r29, r1
    28e4:	0f b6       	in	r0, 0x3f	; 63
    28e6:	f8 94       	cli
    28e8:	de bf       	out	0x3e, r29	; 62
    28ea:	0f be       	out	0x3f, r0	; 63
    28ec:	cd bf       	out	0x3d, r28	; 61
    28ee:	6c 01       	movw	r12, r24
    28f0:	5b 01       	movw	r10, r22
    28f2:	8a 01       	movw	r16, r20
    28f4:	68 94       	set
    28f6:	99 24       	eor	r9, r9
    28f8:	96 f8       	bld	r9, 6
    28fa:	7a 01       	movw	r14, r20
    28fc:	84 e2       	ldi	r24, 0x24	; 36
    28fe:	e8 0e       	add	r14, r24
    2900:	f1 1c       	adc	r15, r1
    2902:	f8 01       	movw	r30, r16
    2904:	82 81       	ldd	r24, Z+2	; 0x02
    2906:	93 81       	ldd	r25, Z+3	; 0x03
    2908:	07 96       	adiw	r24, 0x07	; 7
    290a:	ac 01       	movw	r20, r24
    290c:	12 f4       	brpl	.+4      	; 0x2912 <uECC_make_key+0x4c>
    290e:	49 5f       	subi	r20, 0xF9	; 249
    2910:	5f 4f       	sbci	r21, 0xFF	; 255
    2912:	55 95       	asr	r21
    2914:	47 95       	ror	r20
    2916:	55 95       	asr	r21
    2918:	47 95       	ror	r20
    291a:	55 95       	asr	r21
    291c:	47 95       	ror	r20
    291e:	b7 01       	movw	r22, r14
    2920:	ce 01       	movw	r24, r28
    2922:	01 96       	adiw	r24, 0x01	; 1
    2924:	ef de       	rcall	.-546    	; 0x2704 <uECC_generate_random_int>
    2926:	00 97       	sbiw	r24, 0x00	; 0
    2928:	09 f4       	brne	.+2      	; 0x292c <uECC_make_key+0x66>
    292a:	40 c0       	rjmp	.+128    	; 0x29ac <uECC_make_key+0xe6>
    292c:	a8 01       	movw	r20, r16
    292e:	be 01       	movw	r22, r28
    2930:	6f 5f       	subi	r22, 0xFF	; 255
    2932:	7f 4f       	sbci	r23, 0xFF	; 255
    2934:	ce 01       	movw	r24, r28
    2936:	81 96       	adiw	r24, 0x21	; 33
    2938:	66 de       	rcall	.-820    	; 0x2606 <EccPoint_compute_public_key>
    293a:	88 23       	and	r24, r24
    293c:	91 f1       	breq	.+100    	; 0x29a2 <uECC_make_key+0xdc>
    293e:	f8 01       	movw	r30, r16
    2940:	82 81       	ldd	r24, Z+2	; 0x02
    2942:	93 81       	ldd	r25, Z+3	; 0x03
    2944:	07 96       	adiw	r24, 0x07	; 7
    2946:	bc 01       	movw	r22, r24
    2948:	12 f4       	brpl	.+4      	; 0x294e <uECC_make_key+0x88>
    294a:	69 5f       	subi	r22, 0xF9	; 249
    294c:	7f 4f       	sbci	r23, 0xFF	; 255
    294e:	75 95       	asr	r23
    2950:	67 95       	ror	r22
    2952:	75 95       	asr	r23
    2954:	67 95       	ror	r22
    2956:	75 95       	asr	r23
    2958:	67 95       	ror	r22
    295a:	ae 01       	movw	r20, r28
    295c:	4f 5f       	subi	r20, 0xFF	; 255
    295e:	5f 4f       	sbci	r21, 0xFF	; 255
    2960:	c5 01       	movw	r24, r10
    2962:	ae de       	rcall	.-676    	; 0x26c0 <uECC_vli_nativeToBytes>
    2964:	f8 01       	movw	r30, r16
    2966:	61 81       	ldd	r22, Z+1	; 0x01
    2968:	06 2e       	mov	r0, r22
    296a:	00 0c       	add	r0, r0
    296c:	77 0b       	sbc	r23, r23
    296e:	ae 01       	movw	r20, r28
    2970:	4f 5d       	subi	r20, 0xDF	; 223
    2972:	5f 4f       	sbci	r21, 0xFF	; 255
    2974:	c6 01       	movw	r24, r12
    2976:	a4 de       	rcall	.-696    	; 0x26c0 <uECC_vli_nativeToBytes>
    2978:	f8 01       	movw	r30, r16
    297a:	81 81       	ldd	r24, Z+1	; 0x01
    297c:	90 81       	ld	r25, Z
    297e:	41 e2       	ldi	r20, 0x21	; 33
    2980:	50 e0       	ldi	r21, 0x00	; 0
    2982:	4c 0f       	add	r20, r28
    2984:	5d 1f       	adc	r21, r29
    2986:	49 0f       	add	r20, r25
    2988:	51 1d       	adc	r21, r1
    298a:	97 fd       	sbrc	r25, 7
    298c:	5a 95       	dec	r21
    298e:	08 2e       	mov	r0, r24
    2990:	00 0c       	add	r0, r0
    2992:	99 0b       	sbc	r25, r25
    2994:	bc 01       	movw	r22, r24
    2996:	8c 0d       	add	r24, r12
    2998:	9d 1d       	adc	r25, r13
    299a:	92 de       	rcall	.-732    	; 0x26c0 <uECC_vli_nativeToBytes>
    299c:	81 e0       	ldi	r24, 0x01	; 1
    299e:	90 e0       	ldi	r25, 0x00	; 0
    29a0:	05 c0       	rjmp	.+10     	; 0x29ac <uECC_make_key+0xe6>
    29a2:	9a 94       	dec	r9
    29a4:	91 10       	cpse	r9, r1
    29a6:	ad cf       	rjmp	.-166    	; 0x2902 <uECC_make_key+0x3c>
    29a8:	80 e0       	ldi	r24, 0x00	; 0
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	c0 5a       	subi	r28, 0xA0	; 160
    29ae:	df 4f       	sbci	r29, 0xFF	; 255
    29b0:	0f b6       	in	r0, 0x3f	; 63
    29b2:	f8 94       	cli
    29b4:	de bf       	out	0x3e, r29	; 62
    29b6:	0f be       	out	0x3f, r0	; 63
    29b8:	cd bf       	out	0x3d, r28	; 61
    29ba:	df 91       	pop	r29
    29bc:	cf 91       	pop	r28
    29be:	1f 91       	pop	r17
    29c0:	0f 91       	pop	r16
    29c2:	ff 90       	pop	r15
    29c4:	ef 90       	pop	r14
    29c6:	df 90       	pop	r13
    29c8:	cf 90       	pop	r12
    29ca:	bf 90       	pop	r11
    29cc:	af 90       	pop	r10
    29ce:	9f 90       	pop	r9
    29d0:	08 95       	ret

000029d2 <uECC_shared_secret>:
    29d2:	6f 92       	push	r6
    29d4:	7f 92       	push	r7
    29d6:	8f 92       	push	r8
    29d8:	9f 92       	push	r9
    29da:	af 92       	push	r10
    29dc:	bf 92       	push	r11
    29de:	cf 92       	push	r12
    29e0:	df 92       	push	r13
    29e2:	ef 92       	push	r14
    29e4:	ff 92       	push	r15
    29e6:	0f 93       	push	r16
    29e8:	1f 93       	push	r17
    29ea:	cf 93       	push	r28
    29ec:	df 93       	push	r29
    29ee:	cd b7       	in	r28, 0x3d	; 61
    29f0:	de b7       	in	r29, 0x3e	; 62
    29f2:	c4 58       	subi	r28, 0x84	; 132
    29f4:	d1 09       	sbc	r29, r1
    29f6:	0f b6       	in	r0, 0x3f	; 63
    29f8:	f8 94       	cli
    29fa:	de bf       	out	0x3e, r29	; 62
    29fc:	0f be       	out	0x3f, r0	; 63
    29fe:	cd bf       	out	0x3d, r28	; 61
    2a00:	8c 01       	movw	r16, r24
    2a02:	4a 01       	movw	r8, r20
    2a04:	69 01       	movw	r12, r18
    2a06:	ce 01       	movw	r24, r28
    2a08:	8f 5b       	subi	r24, 0xBF	; 191
    2a0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a0c:	cf 57       	subi	r28, 0x7F	; 127
    2a0e:	df 4f       	sbci	r29, 0xFF	; 255
    2a10:	99 83       	std	Y+1, r25	; 0x01
    2a12:	88 83       	st	Y, r24
    2a14:	c1 58       	subi	r28, 0x81	; 129
    2a16:	d0 40       	sbci	r29, 0x00	; 0
    2a18:	80 96       	adiw	r24, 0x20	; 32
    2a1a:	cd 57       	subi	r28, 0x7D	; 125
    2a1c:	df 4f       	sbci	r29, 0xFF	; 255
    2a1e:	99 83       	std	Y+1, r25	; 0x01
    2a20:	88 83       	st	Y, r24
    2a22:	c3 58       	subi	r28, 0x83	; 131
    2a24:	d0 40       	sbci	r29, 0x00	; 0
    2a26:	f9 01       	movw	r30, r18
    2a28:	f0 80       	ld	r15, Z
    2a2a:	a1 80       	ldd	r10, Z+1	; 0x01
    2a2c:	22 81       	ldd	r18, Z+2	; 0x02
    2a2e:	33 81       	ldd	r19, Z+3	; 0x03
    2a30:	29 5f       	subi	r18, 0xF9	; 249
    2a32:	3f 4f       	sbci	r19, 0xFF	; 255
    2a34:	c9 01       	movw	r24, r18
    2a36:	99 23       	and	r25, r25
    2a38:	0c f4       	brge	.+2      	; 0x2a3c <uECC_shared_secret+0x6a>
    2a3a:	07 96       	adiw	r24, 0x07	; 7
    2a3c:	95 95       	asr	r25
    2a3e:	87 95       	ror	r24
    2a40:	95 95       	asr	r25
    2a42:	87 95       	ror	r24
    2a44:	95 95       	asr	r25
    2a46:	87 95       	ror	r24
    2a48:	ab 01       	movw	r20, r22
    2a4a:	bc 01       	movw	r22, r24
    2a4c:	ce 01       	movw	r24, r28
    2a4e:	8f 5b       	subi	r24, 0xBF	; 191
    2a50:	9f 4f       	sbci	r25, 0xFF	; 255
    2a52:	36 de       	rcall	.-916    	; 0x26c0 <uECC_vli_nativeToBytes>
    2a54:	0a 2c       	mov	r0, r10
    2a56:	00 0c       	add	r0, r0
    2a58:	bb 08       	sbc	r11, r11
    2a5a:	a8 01       	movw	r20, r16
    2a5c:	b5 01       	movw	r22, r10
    2a5e:	ce 01       	movw	r24, r28
    2a60:	01 96       	adiw	r24, 0x01	; 1
    2a62:	2e de       	rcall	.-932    	; 0x26c0 <uECC_vli_nativeToBytes>
    2a64:	a8 01       	movw	r20, r16
    2a66:	4a 0d       	add	r20, r10
    2a68:	5b 1d       	adc	r21, r11
    2a6a:	b5 01       	movw	r22, r10
    2a6c:	81 e0       	ldi	r24, 0x01	; 1
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	8c 0f       	add	r24, r28
    2a72:	9d 1f       	adc	r25, r29
    2a74:	8f 0d       	add	r24, r15
    2a76:	91 1d       	adc	r25, r1
    2a78:	f7 fc       	sbrc	r15, 7
    2a7a:	9a 95       	dec	r25
    2a7c:	21 de       	rcall	.-958    	; 0x26c0 <uECC_vli_nativeToBytes>
    2a7e:	96 01       	movw	r18, r12
    2a80:	ae 01       	movw	r20, r28
    2a82:	4f 59       	subi	r20, 0x9F	; 159
    2a84:	5f 4f       	sbci	r21, 0xFF	; 255
    2a86:	be 01       	movw	r22, r28
    2a88:	6f 5b       	subi	r22, 0xBF	; 191
    2a8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a8c:	cb 01       	movw	r24, r22
    2a8e:	6d dd       	rcall	.-1318   	; 0x256a <regularize_k>
    2a90:	18 2f       	mov	r17, r24
    2a92:	80 91 62 06 	lds	r24, 0x0662	; 0x800662 <g_rng_function>
    2a96:	90 91 63 06 	lds	r25, 0x0663	; 0x800663 <g_rng_function+0x1>
    2a9a:	89 2b       	or	r24, r25
    2a9c:	a9 f0       	breq	.+42     	; 0x2ac8 <uECC_shared_secret+0xf6>
    2a9e:	e1 2f       	mov	r30, r17
    2aa0:	f0 e0       	ldi	r31, 0x00	; 0
    2aa2:	ee 0f       	add	r30, r30
    2aa4:	ff 1f       	adc	r31, r31
    2aa6:	81 e8       	ldi	r24, 0x81	; 129
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	8c 0f       	add	r24, r28
    2aac:	9d 1f       	adc	r25, r29
    2aae:	e8 0f       	add	r30, r24
    2ab0:	f9 1f       	adc	r31, r25
    2ab2:	60 80       	ld	r6, Z
    2ab4:	71 80       	ldd	r7, Z+1	; 0x01
    2ab6:	4f 2d       	mov	r20, r15
    2ab8:	b6 01       	movw	r22, r12
    2aba:	6c 5f       	subi	r22, 0xFC	; 252
    2abc:	7f 4f       	sbci	r23, 0xFF	; 255
    2abe:	c3 01       	movw	r24, r6
    2ac0:	21 de       	rcall	.-958    	; 0x2704 <uECC_generate_random_int>
    2ac2:	00 97       	sbiw	r24, 0x00	; 0
    2ac4:	19 f4       	brne	.+6      	; 0x2acc <uECC_shared_secret+0xfa>
    2ac6:	32 c0       	rjmp	.+100    	; 0x2b2c <uECC_shared_secret+0x15a>
    2ac8:	61 2c       	mov	r6, r1
    2aca:	71 2c       	mov	r7, r1
    2acc:	f6 01       	movw	r30, r12
    2ace:	22 81       	ldd	r18, Z+2	; 0x02
    2ad0:	33 81       	ldd	r19, Z+3	; 0x03
    2ad2:	2f 5f       	subi	r18, 0xFF	; 255
    2ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    2ad6:	81 e0       	ldi	r24, 0x01	; 1
    2ad8:	90 e0       	ldi	r25, 0x00	; 0
    2ada:	11 23       	and	r17, r17
    2adc:	11 f0       	breq	.+4      	; 0x2ae2 <uECC_shared_secret+0x110>
    2ade:	80 e0       	ldi	r24, 0x00	; 0
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	88 0f       	add	r24, r24
    2ae4:	99 1f       	adc	r25, r25
    2ae6:	e1 e8       	ldi	r30, 0x81	; 129
    2ae8:	f0 e0       	ldi	r31, 0x00	; 0
    2aea:	ec 0f       	add	r30, r28
    2aec:	fd 1f       	adc	r31, r29
    2aee:	e8 0f       	add	r30, r24
    2af0:	f9 1f       	adc	r31, r25
    2af2:	40 81       	ld	r20, Z
    2af4:	51 81       	ldd	r21, Z+1	; 0x01
    2af6:	76 01       	movw	r14, r12
    2af8:	89 01       	movw	r16, r18
    2afa:	93 01       	movw	r18, r6
    2afc:	be 01       	movw	r22, r28
    2afe:	6f 5f       	subi	r22, 0xFF	; 255
    2b00:	7f 4f       	sbci	r23, 0xFF	; 255
    2b02:	cb 01       	movw	r24, r22
    2b04:	3e db       	rcall	.-2436   	; 0x2182 <EccPoint_mult>
    2b06:	ae 01       	movw	r20, r28
    2b08:	4f 5f       	subi	r20, 0xFF	; 255
    2b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b0c:	b5 01       	movw	r22, r10
    2b0e:	c4 01       	movw	r24, r8
    2b10:	d7 dd       	rcall	.-1106   	; 0x26c0 <uECC_vli_nativeToBytes>
    2b12:	f6 01       	movw	r30, r12
    2b14:	60 81       	ld	r22, Z
    2b16:	66 0f       	add	r22, r22
    2b18:	ce 01       	movw	r24, r28
    2b1a:	01 96       	adiw	r24, 0x01	; 1
    2b1c:	0e 94 c2 07 	call	0xf84	; 0xf84 <uECC_vli_isZero>
    2b20:	31 e0       	ldi	r19, 0x01	; 1
    2b22:	20 e0       	ldi	r18, 0x00	; 0
    2b24:	81 11       	cpse	r24, r1
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	83 2f       	mov	r24, r19
    2b2a:	92 2f       	mov	r25, r18
    2b2c:	cc 57       	subi	r28, 0x7C	; 124
    2b2e:	df 4f       	sbci	r29, 0xFF	; 255
    2b30:	0f b6       	in	r0, 0x3f	; 63
    2b32:	f8 94       	cli
    2b34:	de bf       	out	0x3e, r29	; 62
    2b36:	0f be       	out	0x3f, r0	; 63
    2b38:	cd bf       	out	0x3d, r28	; 61
    2b3a:	df 91       	pop	r29
    2b3c:	cf 91       	pop	r28
    2b3e:	1f 91       	pop	r17
    2b40:	0f 91       	pop	r16
    2b42:	ff 90       	pop	r15
    2b44:	ef 90       	pop	r14
    2b46:	df 90       	pop	r13
    2b48:	cf 90       	pop	r12
    2b4a:	bf 90       	pop	r11
    2b4c:	af 90       	pop	r10
    2b4e:	9f 90       	pop	r9
    2b50:	8f 90       	pop	r8
    2b52:	7f 90       	pop	r7
    2b54:	6f 90       	pop	r6
    2b56:	08 95       	ret

00002b58 <uECC_verify>:
    2b58:	2f 92       	push	r2
    2b5a:	3f 92       	push	r3
    2b5c:	4f 92       	push	r4
    2b5e:	5f 92       	push	r5
    2b60:	6f 92       	push	r6
    2b62:	7f 92       	push	r7
    2b64:	8f 92       	push	r8
    2b66:	9f 92       	push	r9
    2b68:	af 92       	push	r10
    2b6a:	bf 92       	push	r11
    2b6c:	cf 92       	push	r12
    2b6e:	df 92       	push	r13
    2b70:	ef 92       	push	r14
    2b72:	ff 92       	push	r15
    2b74:	0f 93       	push	r16
    2b76:	1f 93       	push	r17
    2b78:	cf 93       	push	r28
    2b7a:	df 93       	push	r29
    2b7c:	cd b7       	in	r28, 0x3d	; 61
    2b7e:	de b7       	in	r29, 0x3e	; 62
    2b80:	cc 5c       	subi	r28, 0xCC	; 204
    2b82:	d1 40       	sbci	r29, 0x01	; 1
    2b84:	0f b6       	in	r0, 0x3f	; 63
    2b86:	f8 94       	cli
    2b88:	de bf       	out	0x3e, r29	; 62
    2b8a:	0f be       	out	0x3f, r0	; 63
    2b8c:	cd bf       	out	0x3d, r28	; 61
    2b8e:	4c 01       	movw	r8, r24
    2b90:	c7 53       	subi	r28, 0x37	; 55
    2b92:	de 4f       	sbci	r29, 0xFE	; 254
    2b94:	79 83       	std	Y+1, r23	; 0x01
    2b96:	68 83       	st	Y, r22
    2b98:	c9 5c       	subi	r28, 0xC9	; 201
    2b9a:	d1 40       	sbci	r29, 0x01	; 1
    2b9c:	c5 53       	subi	r28, 0x35	; 53
    2b9e:	de 4f       	sbci	r29, 0xFE	; 254
    2ba0:	59 83       	std	Y+1, r21	; 0x01
    2ba2:	48 83       	st	Y, r20
    2ba4:	cb 5c       	subi	r28, 0xCB	; 203
    2ba6:	d1 40       	sbci	r29, 0x01	; 1
    2ba8:	59 01       	movw	r10, r18
    2baa:	78 01       	movw	r14, r16
    2bac:	d8 01       	movw	r26, r16
    2bae:	3c 90       	ld	r3, X
    2bb0:	12 96       	adiw	r26, 0x02	; 2
    2bb2:	8d 91       	ld	r24, X+
    2bb4:	9c 91       	ld	r25, X
    2bb6:	13 97       	sbiw	r26, 0x03	; 3
    2bb8:	07 96       	adiw	r24, 0x07	; 7
    2bba:	6c 01       	movw	r12, r24
    2bbc:	1a f4       	brpl	.+6      	; 0x2bc4 <uECC_verify+0x6c>
    2bbe:	b7 e0       	ldi	r27, 0x07	; 7
    2bc0:	cb 0e       	add	r12, r27
    2bc2:	d1 1c       	adc	r13, r1
    2bc4:	d5 94       	asr	r13
    2bc6:	c7 94       	ror	r12
    2bc8:	d5 94       	asr	r13
    2bca:	c7 94       	ror	r12
    2bcc:	d5 94       	asr	r13
    2bce:	c7 94       	ror	r12
    2bd0:	0c 2d       	mov	r16, r12
    2bd2:	0c 2c       	mov	r0, r12
    2bd4:	00 0c       	add	r0, r0
    2bd6:	11 0b       	sbc	r17, r17
    2bd8:	01 50       	subi	r16, 0x01	; 1
    2bda:	11 09       	sbc	r17, r1
    2bdc:	e1 ea       	ldi	r30, 0xA1	; 161
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	ec 0f       	add	r30, r28
    2be2:	fd 1f       	adc	r31, r29
    2be4:	e0 0f       	add	r30, r16
    2be6:	f1 1f       	adc	r31, r17
    2be8:	10 82       	st	Z, r1
    2bea:	e9 e8       	ldi	r30, 0x89	; 137
    2bec:	f1 e0       	ldi	r31, 0x01	; 1
    2bee:	ec 0f       	add	r30, r28
    2bf0:	fd 1f       	adc	r31, r29
    2bf2:	e0 0f       	add	r30, r16
    2bf4:	f1 1f       	adc	r31, r17
    2bf6:	10 82       	st	Z, r1
    2bf8:	e9 ea       	ldi	r30, 0xA9	; 169
    2bfa:	f1 e0       	ldi	r31, 0x01	; 1
    2bfc:	ec 0f       	add	r30, r28
    2bfe:	fd 1f       	adc	r31, r29
    2c00:	e0 0f       	add	r30, r16
    2c02:	f1 1f       	adc	r31, r17
    2c04:	10 82       	st	Z, r1
    2c06:	f7 01       	movw	r30, r14
    2c08:	61 81       	ldd	r22, Z+1	; 0x01
    2c0a:	06 2e       	mov	r0, r22
    2c0c:	00 0c       	add	r0, r0
    2c0e:	77 0b       	sbc	r23, r23
    2c10:	a4 01       	movw	r20, r8
    2c12:	ce 01       	movw	r24, r28
    2c14:	87 5b       	subi	r24, 0xB7	; 183
    2c16:	9e 4f       	sbci	r25, 0xFE	; 254
    2c18:	53 dd       	rcall	.-1370   	; 0x26c0 <uECC_vli_nativeToBytes>
    2c1a:	d7 01       	movw	r26, r14
    2c1c:	11 96       	adiw	r26, 0x01	; 1
    2c1e:	6c 91       	ld	r22, X
    2c20:	63 2c       	mov	r6, r3
    2c22:	03 2c       	mov	r0, r3
    2c24:	00 0c       	add	r0, r0
    2c26:	77 08       	sbc	r7, r7
    2c28:	0f 2e       	mov	r0, r31
    2c2a:	f9 e4       	ldi	r31, 0x49	; 73
    2c2c:	4f 2e       	mov	r4, r31
    2c2e:	55 24       	eor	r5, r5
    2c30:	53 94       	inc	r5
    2c32:	f0 2d       	mov	r31, r0
    2c34:	4c 0e       	add	r4, r28
    2c36:	5d 1e       	adc	r5, r29
    2c38:	46 0c       	add	r4, r6
    2c3a:	57 1c       	adc	r5, r7
    2c3c:	06 2e       	mov	r0, r22
    2c3e:	00 0c       	add	r0, r0
    2c40:	77 0b       	sbc	r23, r23
    2c42:	a4 01       	movw	r20, r8
    2c44:	46 0f       	add	r20, r22
    2c46:	57 1f       	adc	r21, r23
    2c48:	c2 01       	movw	r24, r4
    2c4a:	3a dd       	rcall	.-1420   	; 0x26c0 <uECC_vli_nativeToBytes>
    2c4c:	f7 01       	movw	r30, r14
    2c4e:	61 81       	ldd	r22, Z+1	; 0x01
    2c50:	06 2e       	mov	r0, r22
    2c52:	00 0c       	add	r0, r0
    2c54:	77 0b       	sbc	r23, r23
    2c56:	a5 01       	movw	r20, r10
    2c58:	ce 01       	movw	r24, r28
    2c5a:	87 57       	subi	r24, 0x77	; 119
    2c5c:	9e 4f       	sbci	r25, 0xFE	; 254
    2c5e:	30 dd       	rcall	.-1440   	; 0x26c0 <uECC_vli_nativeToBytes>
    2c60:	d7 01       	movw	r26, r14
    2c62:	11 96       	adiw	r26, 0x01	; 1
    2c64:	6c 91       	ld	r22, X
    2c66:	06 2e       	mov	r0, r22
    2c68:	00 0c       	add	r0, r0
    2c6a:	77 0b       	sbc	r23, r23
    2c6c:	a5 01       	movw	r20, r10
    2c6e:	46 0f       	add	r20, r22
    2c70:	57 1f       	adc	r21, r23
    2c72:	ce 01       	movw	r24, r28
    2c74:	87 55       	subi	r24, 0x57	; 87
    2c76:	9e 4f       	sbci	r25, 0xFE	; 254
    2c78:	23 dd       	rcall	.-1466   	; 0x26c0 <uECC_vli_nativeToBytes>
    2c7a:	63 2d       	mov	r22, r3
    2c7c:	ce 01       	movw	r24, r28
    2c7e:	87 57       	subi	r24, 0x77	; 119
    2c80:	9e 4f       	sbci	r25, 0xFE	; 254
    2c82:	0e 94 c2 07 	call	0xf84	; 0xf84 <uECC_vli_isZero>
    2c86:	81 11       	cpse	r24, r1
    2c88:	02 c2       	rjmp	.+1028   	; 0x308e <uECC_verify+0x536>
    2c8a:	63 2d       	mov	r22, r3
    2c8c:	ce 01       	movw	r24, r28
    2c8e:	87 55       	subi	r24, 0x57	; 87
    2c90:	9e 4f       	sbci	r25, 0xFE	; 254
    2c92:	0e 94 c2 07 	call	0xf84	; 0xf84 <uECC_vli_isZero>
    2c96:	81 11       	cpse	r24, r1
    2c98:	fd c1       	rjmp	.+1018   	; 0x3094 <uECC_verify+0x53c>
    2c9a:	47 01       	movw	r8, r14
    2c9c:	b4 e2       	ldi	r27, 0x24	; 36
    2c9e:	8b 0e       	add	r8, r27
    2ca0:	91 1c       	adc	r9, r1
    2ca2:	4c 2d       	mov	r20, r12
    2ca4:	be 01       	movw	r22, r28
    2ca6:	67 57       	subi	r22, 0x77	; 119
    2ca8:	7e 4f       	sbci	r23, 0xFE	; 254
    2caa:	c4 01       	movw	r24, r8
    2cac:	0e 94 25 08 	call	0x104a	; 0x104a <uECC_vli_cmp_unsafe>
    2cb0:	81 30       	cpi	r24, 0x01	; 1
    2cb2:	09 f0       	breq	.+2      	; 0x2cb6 <uECC_verify+0x15e>
    2cb4:	f2 c1       	rjmp	.+996    	; 0x309a <uECC_verify+0x542>
    2cb6:	4c 2d       	mov	r20, r12
    2cb8:	be 01       	movw	r22, r28
    2cba:	67 55       	subi	r22, 0x57	; 87
    2cbc:	7e 4f       	sbci	r23, 0xFE	; 254
    2cbe:	c4 01       	movw	r24, r8
    2cc0:	0e 94 25 08 	call	0x104a	; 0x104a <uECC_vli_cmp_unsafe>
    2cc4:	81 30       	cpi	r24, 0x01	; 1
    2cc6:	09 f0       	breq	.+2      	; 0x2cca <uECC_verify+0x172>
    2cc8:	eb c1       	rjmp	.+982    	; 0x30a0 <uECC_verify+0x548>
    2cca:	2c 2d       	mov	r18, r12
    2ccc:	a4 01       	movw	r20, r8
    2cce:	be 01       	movw	r22, r28
    2cd0:	67 55       	subi	r22, 0x57	; 87
    2cd2:	7e 4f       	sbci	r23, 0xFE	; 254
    2cd4:	ce 01       	movw	r24, r28
    2cd6:	8f 5b       	subi	r24, 0xBF	; 191
    2cd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2cda:	0e 94 95 0a 	call	0x152a	; 0x152a <uECC_vli_modInv>
    2cde:	e1 e0       	ldi	r30, 0x01	; 1
    2ce0:	f0 e0       	ldi	r31, 0x00	; 0
    2ce2:	ec 0f       	add	r30, r28
    2ce4:	fd 1f       	adc	r31, r29
    2ce6:	e0 0f       	add	r30, r16
    2ce8:	f1 1f       	adc	r31, r17
    2cea:	10 82       	st	Z, r1
    2cec:	97 01       	movw	r18, r14
    2cee:	c5 53       	subi	r28, 0x35	; 53
    2cf0:	de 4f       	sbci	r29, 0xFE	; 254
    2cf2:	48 81       	ld	r20, Y
    2cf4:	59 81       	ldd	r21, Y+1	; 0x01
    2cf6:	cb 5c       	subi	r28, 0xCB	; 203
    2cf8:	d1 40       	sbci	r29, 0x01	; 1
    2cfa:	c7 53       	subi	r28, 0x37	; 55
    2cfc:	de 4f       	sbci	r29, 0xFE	; 254
    2cfe:	68 81       	ld	r22, Y
    2d00:	79 81       	ldd	r23, Y+1	; 0x01
    2d02:	c9 5c       	subi	r28, 0xC9	; 201
    2d04:	d1 40       	sbci	r29, 0x01	; 1
    2d06:	ce 01       	movw	r24, r28
    2d08:	01 96       	adiw	r24, 0x01	; 1
    2d0a:	5d dd       	rcall	.-1350   	; 0x27c6 <bits2int>
    2d0c:	0c 2d       	mov	r16, r12
    2d0e:	94 01       	movw	r18, r8
    2d10:	ae 01       	movw	r20, r28
    2d12:	4f 5b       	subi	r20, 0xBF	; 191
    2d14:	5f 4f       	sbci	r21, 0xFF	; 255
    2d16:	be 01       	movw	r22, r28
    2d18:	6f 5f       	subi	r22, 0xFF	; 255
    2d1a:	7f 4f       	sbci	r23, 0xFF	; 255
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	0e 94 b6 08 	call	0x116c	; 0x116c <uECC_vli_modMult>
    2d22:	94 01       	movw	r18, r8
    2d24:	ae 01       	movw	r20, r28
    2d26:	4f 5b       	subi	r20, 0xBF	; 191
    2d28:	5f 4f       	sbci	r21, 0xFF	; 255
    2d2a:	be 01       	movw	r22, r28
    2d2c:	67 57       	subi	r22, 0x77	; 119
    2d2e:	7e 4f       	sbci	r23, 0xFE	; 254
    2d30:	ce 01       	movw	r24, r28
    2d32:	81 96       	adiw	r24, 0x21	; 33
    2d34:	0e 94 b6 08 	call	0x116c	; 0x116c <uECC_vli_modMult>
    2d38:	5e 01       	movw	r10, r28
    2d3a:	e1 e6       	ldi	r30, 0x61	; 97
    2d3c:	ae 0e       	add	r10, r30
    2d3e:	b1 1c       	adc	r11, r1
    2d40:	43 2d       	mov	r20, r3
    2d42:	be 01       	movw	r22, r28
    2d44:	67 5b       	subi	r22, 0xB7	; 183
    2d46:	7e 4f       	sbci	r23, 0xFE	; 254
    2d48:	c5 01       	movw	r24, r10
    2d4a:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2d4e:	c5 01       	movw	r24, r10
    2d50:	86 0d       	add	r24, r6
    2d52:	97 1d       	adc	r25, r7
    2d54:	c5 53       	subi	r28, 0x35	; 53
    2d56:	de 4f       	sbci	r29, 0xFE	; 254
    2d58:	99 83       	std	Y+1, r25	; 0x01
    2d5a:	88 83       	st	Y, r24
    2d5c:	cb 5c       	subi	r28, 0xCB	; 203
    2d5e:	d1 40       	sbci	r29, 0x01	; 1
    2d60:	43 2d       	mov	r20, r3
    2d62:	b2 01       	movw	r22, r4
    2d64:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2d68:	43 2d       	mov	r20, r3
    2d6a:	27 01       	movw	r4, r14
    2d6c:	94 e4       	ldi	r25, 0x44	; 68
    2d6e:	49 0e       	add	r4, r25
    2d70:	51 1c       	adc	r5, r1
    2d72:	b2 01       	movw	r22, r4
    2d74:	ce 01       	movw	r24, r28
    2d76:	8f 51       	subi	r24, 0x1F	; 31
    2d78:	9f 4f       	sbci	r25, 0xFF	; 255
    2d7a:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2d7e:	b2 01       	movw	r22, r4
    2d80:	66 0d       	add	r22, r6
    2d82:	77 1d       	adc	r23, r7
    2d84:	43 2d       	mov	r20, r3
    2d86:	ce 01       	movw	r24, r28
    2d88:	8f 5f       	subi	r24, 0xFF	; 255
    2d8a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d8c:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2d90:	d7 01       	movw	r26, r14
    2d92:	14 96       	adiw	r26, 0x04	; 4
    2d94:	c7 53       	subi	r28, 0x37	; 55
    2d96:	de 4f       	sbci	r29, 0xFE	; 254
    2d98:	b9 83       	std	Y+1, r27	; 0x01
    2d9a:	a8 83       	st	Y, r26
    2d9c:	c9 5c       	subi	r28, 0xC9	; 201
    2d9e:	d1 40       	sbci	r29, 0x01	; 1
    2da0:	03 2d       	mov	r16, r3
    2da2:	9d 01       	movw	r18, r26
    2da4:	ae 01       	movw	r20, r28
    2da6:	4f 51       	subi	r20, 0x1F	; 31
    2da8:	5f 4f       	sbci	r21, 0xFF	; 255
    2daa:	b5 01       	movw	r22, r10
    2dac:	ce 01       	movw	r24, r28
    2dae:	8f 5b       	subi	r24, 0xBF	; 191
    2db0:	9f 4f       	sbci	r25, 0xFF	; 255
    2db2:	0e 94 a0 08 	call	0x1140	; 0x1140 <uECC_vli_modSub>
    2db6:	87 01       	movw	r16, r14
    2db8:	c5 53       	subi	r28, 0x35	; 53
    2dba:	de 4f       	sbci	r29, 0xFE	; 254
    2dbc:	28 81       	ld	r18, Y
    2dbe:	39 81       	ldd	r19, Y+1	; 0x01
    2dc0:	cb 5c       	subi	r28, 0xCB	; 203
    2dc2:	d1 40       	sbci	r29, 0x01	; 1
    2dc4:	a5 01       	movw	r20, r10
    2dc6:	be 01       	movw	r22, r28
    2dc8:	6f 5f       	subi	r22, 0xFF	; 255
    2dca:	7e 4f       	sbci	r23, 0xFE	; 254
    2dcc:	ce 01       	movw	r24, r28
    2dce:	8f 51       	subi	r24, 0x1F	; 31
    2dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2dd2:	84 d8       	rcall	.-3832   	; 0x1edc <XYcZ_add>
    2dd4:	23 2d       	mov	r18, r3
    2dd6:	c7 53       	subi	r28, 0x37	; 55
    2dd8:	de 4f       	sbci	r29, 0xFE	; 254
    2dda:	48 81       	ld	r20, Y
    2ddc:	59 81       	ldd	r21, Y+1	; 0x01
    2dde:	c9 5c       	subi	r28, 0xC9	; 201
    2de0:	d1 40       	sbci	r29, 0x01	; 1
    2de2:	be 01       	movw	r22, r28
    2de4:	6f 5b       	subi	r22, 0xBF	; 191
    2de6:	7f 4f       	sbci	r23, 0xFF	; 255
    2de8:	cb 01       	movw	r24, r22
    2dea:	0e 94 95 0a 	call	0x152a	; 0x152a <uECC_vli_modInv>
    2dee:	97 01       	movw	r18, r14
    2df0:	ae 01       	movw	r20, r28
    2df2:	4f 5b       	subi	r20, 0xBF	; 191
    2df4:	5f 4f       	sbci	r21, 0xFF	; 255
    2df6:	c5 53       	subi	r28, 0x35	; 53
    2df8:	de 4f       	sbci	r29, 0xFE	; 254
    2dfa:	68 81       	ld	r22, Y
    2dfc:	79 81       	ldd	r23, Y+1	; 0x01
    2dfe:	cb 5c       	subi	r28, 0xCB	; 203
    2e00:	d1 40       	sbci	r29, 0x01	; 1
    2e02:	c5 01       	movw	r24, r10
    2e04:	2a d8       	rcall	.-4012   	; 0x1e5a <apply_z>
    2e06:	cf 5b       	subi	r28, 0xBF	; 191
    2e08:	de 4f       	sbci	r29, 0xFE	; 254
    2e0a:	19 82       	std	Y+1, r1	; 0x01
    2e0c:	18 82       	st	Y, r1
    2e0e:	c1 54       	subi	r28, 0x41	; 65
    2e10:	d1 40       	sbci	r29, 0x01	; 1
    2e12:	cd 5b       	subi	r28, 0xBD	; 189
    2e14:	de 4f       	sbci	r29, 0xFE	; 254
    2e16:	59 82       	std	Y+1, r5	; 0x01
    2e18:	48 82       	st	Y, r4
    2e1a:	c3 54       	subi	r28, 0x43	; 67
    2e1c:	d1 40       	sbci	r29, 0x01	; 1
    2e1e:	e9 e4       	ldi	r30, 0x49	; 73
    2e20:	f1 e0       	ldi	r31, 0x01	; 1
    2e22:	ec 0f       	add	r30, r28
    2e24:	fd 1f       	adc	r31, r29
    2e26:	cb 5b       	subi	r28, 0xBB	; 187
    2e28:	de 4f       	sbci	r29, 0xFE	; 254
    2e2a:	f9 83       	std	Y+1, r31	; 0x01
    2e2c:	e8 83       	st	Y, r30
    2e2e:	c5 54       	subi	r28, 0x45	; 69
    2e30:	d1 40       	sbci	r29, 0x01	; 1
    2e32:	c9 5b       	subi	r28, 0xB9	; 185
    2e34:	de 4f       	sbci	r29, 0xFE	; 254
    2e36:	b9 82       	std	Y+1, r11	; 0x01
    2e38:	a8 82       	st	Y, r10
    2e3a:	c7 54       	subi	r28, 0x47	; 71
    2e3c:	d1 40       	sbci	r29, 0x01	; 1
    2e3e:	6c 2d       	mov	r22, r12
    2e40:	ce 01       	movw	r24, r28
    2e42:	81 96       	adiw	r24, 0x21	; 33
    2e44:	0e 94 ee 07 	call	0xfdc	; 0xfdc <uECC_vli_numBits>
    2e48:	08 2f       	mov	r16, r24
    2e4a:	19 2f       	mov	r17, r25
    2e4c:	6c 2d       	mov	r22, r12
    2e4e:	ce 01       	movw	r24, r28
    2e50:	01 96       	adiw	r24, 0x01	; 1
    2e52:	0e 94 ee 07 	call	0xfdc	; 0xfdc <uECC_vli_numBits>
    2e56:	a0 2e       	mov	r10, r16
    2e58:	b1 2e       	mov	r11, r17
    2e5a:	a8 16       	cp	r10, r24
    2e5c:	b9 06       	cpc	r11, r25
    2e5e:	0c f4       	brge	.+2      	; 0x2e62 <uECC_verify+0x30a>
    2e60:	5c 01       	movw	r10, r24
    2e62:	85 01       	movw	r16, r10
    2e64:	01 50       	subi	r16, 0x01	; 1
    2e66:	11 09       	sbc	r17, r1
    2e68:	b8 01       	movw	r22, r16
    2e6a:	ce 01       	movw	r24, r28
    2e6c:	01 96       	adiw	r24, 0x01	; 1
    2e6e:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    2e72:	21 e0       	ldi	r18, 0x01	; 1
    2e74:	90 e0       	ldi	r25, 0x00	; 0
    2e76:	81 11       	cpse	r24, r1
    2e78:	01 c0       	rjmp	.+2      	; 0x2e7c <uECC_verify+0x324>
    2e7a:	20 e0       	ldi	r18, 0x00	; 0
    2e7c:	42 2e       	mov	r4, r18
    2e7e:	59 2e       	mov	r5, r25
    2e80:	b8 01       	movw	r22, r16
    2e82:	ce 01       	movw	r24, r28
    2e84:	81 96       	adiw	r24, 0x21	; 33
    2e86:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    2e8a:	81 11       	cpse	r24, r1
    2e8c:	03 c0       	rjmp	.+6      	; 0x2e94 <uECC_verify+0x33c>
    2e8e:	e0 e0       	ldi	r30, 0x00	; 0
    2e90:	f0 e0       	ldi	r31, 0x00	; 0
    2e92:	02 c0       	rjmp	.+4      	; 0x2e98 <uECC_verify+0x340>
    2e94:	e2 e0       	ldi	r30, 0x02	; 2
    2e96:	f0 e0       	ldi	r31, 0x00	; 0
    2e98:	e4 29       	or	r30, r4
    2e9a:	f5 29       	or	r31, r5
    2e9c:	ee 0f       	add	r30, r30
    2e9e:	ff 1f       	adc	r31, r31
    2ea0:	81 e4       	ldi	r24, 0x41	; 65
    2ea2:	91 e0       	ldi	r25, 0x01	; 1
    2ea4:	8c 0f       	add	r24, r28
    2ea6:	9d 1f       	adc	r25, r29
    2ea8:	e8 0f       	add	r30, r24
    2eaa:	f9 1f       	adc	r31, r25
    2eac:	00 81       	ld	r16, Z
    2eae:	11 81       	ldd	r17, Z+1	; 0x01
    2eb0:	43 2d       	mov	r20, r3
    2eb2:	b8 01       	movw	r22, r16
    2eb4:	ce 01       	movw	r24, r28
    2eb6:	8f 55       	subi	r24, 0x5F	; 95
    2eb8:	9f 4f       	sbci	r25, 0xFF	; 255
    2eba:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2ebe:	b8 01       	movw	r22, r16
    2ec0:	66 0d       	add	r22, r6
    2ec2:	77 1d       	adc	r23, r7
    2ec4:	43 2d       	mov	r20, r3
    2ec6:	ce 01       	movw	r24, r28
    2ec8:	8f 53       	subi	r24, 0x3F	; 63
    2eca:	9f 4f       	sbci	r25, 0xFF	; 255
    2ecc:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2ed0:	63 2d       	mov	r22, r3
    2ed2:	ce 01       	movw	r24, r28
    2ed4:	8f 5b       	subi	r24, 0xBF	; 191
    2ed6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ed8:	0e 94 fe 04 	call	0x9fc	; 0x9fc <uECC_vli_clear>
    2edc:	81 e0       	ldi	r24, 0x01	; 1
    2ede:	22 96       	adiw	r28, 0x02	; 2
    2ee0:	8f af       	std	Y+63, r24	; 0x3f
    2ee2:	22 97       	sbiw	r28, 0x02	; 2
    2ee4:	92 e0       	ldi	r25, 0x02	; 2
    2ee6:	a9 1a       	sub	r10, r25
    2ee8:	b1 08       	sbc	r11, r1
    2eea:	0a f4       	brpl	.+2      	; 0x2eee <uECC_verify+0x396>
    2eec:	83 c0       	rjmp	.+262    	; 0x2ff4 <uECC_verify+0x49c>
    2eee:	27 01       	movw	r4, r14
    2ef0:	a4 ea       	ldi	r26, 0xA4	; 164
    2ef2:	4a 0e       	add	r4, r26
    2ef4:	51 1c       	adc	r5, r1
    2ef6:	21 2c       	mov	r2, r1
    2ef8:	d2 01       	movw	r26, r4
    2efa:	ed 91       	ld	r30, X+
    2efc:	fc 91       	ld	r31, X
    2efe:	97 01       	movw	r18, r14
    2f00:	ae 01       	movw	r20, r28
    2f02:	4f 5b       	subi	r20, 0xBF	; 191
    2f04:	5f 4f       	sbci	r21, 0xFF	; 255
    2f06:	be 01       	movw	r22, r28
    2f08:	6f 53       	subi	r22, 0x3F	; 63
    2f0a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f0c:	ce 01       	movw	r24, r28
    2f0e:	8f 55       	subi	r24, 0x5F	; 95
    2f10:	9f 4f       	sbci	r25, 0xFF	; 255
    2f12:	09 95       	icall
    2f14:	b5 01       	movw	r22, r10
    2f16:	ce 01       	movw	r24, r28
    2f18:	01 96       	adiw	r24, 0x01	; 1
    2f1a:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    2f1e:	11 e0       	ldi	r17, 0x01	; 1
    2f20:	81 11       	cpse	r24, r1
    2f22:	01 c0       	rjmp	.+2      	; 0x2f26 <uECC_verify+0x3ce>
    2f24:	12 2d       	mov	r17, r2
    2f26:	b5 01       	movw	r22, r10
    2f28:	ce 01       	movw	r24, r28
    2f2a:	81 96       	adiw	r24, 0x21	; 33
    2f2c:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <uECC_vli_testBit>
    2f30:	81 11       	cpse	r24, r1
    2f32:	02 c0       	rjmp	.+4      	; 0x2f38 <uECC_verify+0x3e0>
    2f34:	e2 2d       	mov	r30, r2
    2f36:	01 c0       	rjmp	.+2      	; 0x2f3a <uECC_verify+0x3e2>
    2f38:	e2 e0       	ldi	r30, 0x02	; 2
    2f3a:	1e 2b       	or	r17, r30
    2f3c:	e1 2f       	mov	r30, r17
    2f3e:	f0 e0       	ldi	r31, 0x00	; 0
    2f40:	ee 0f       	add	r30, r30
    2f42:	ff 1f       	adc	r31, r31
    2f44:	81 e4       	ldi	r24, 0x41	; 65
    2f46:	91 e0       	ldi	r25, 0x01	; 1
    2f48:	8c 0f       	add	r24, r28
    2f4a:	9d 1f       	adc	r25, r29
    2f4c:	e8 0f       	add	r30, r24
    2f4e:	f9 1f       	adc	r31, r25
    2f50:	00 81       	ld	r16, Z
    2f52:	11 81       	ldd	r17, Z+1	; 0x01
    2f54:	01 15       	cp	r16, r1
    2f56:	11 05       	cpc	r17, r1
    2f58:	09 f4       	brne	.+2      	; 0x2f5c <uECC_verify+0x404>
    2f5a:	47 c0       	rjmp	.+142    	; 0x2fea <uECC_verify+0x492>
    2f5c:	43 2d       	mov	r20, r3
    2f5e:	b8 01       	movw	r22, r16
    2f60:	ce 01       	movw	r24, r28
    2f62:	8f 51       	subi	r24, 0x1F	; 31
    2f64:	9f 4f       	sbci	r25, 0xFF	; 255
    2f66:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2f6a:	b8 01       	movw	r22, r16
    2f6c:	66 0d       	add	r22, r6
    2f6e:	77 1d       	adc	r23, r7
    2f70:	43 2d       	mov	r20, r3
    2f72:	ce 01       	movw	r24, r28
    2f74:	8f 5f       	subi	r24, 0xFF	; 255
    2f76:	9e 4f       	sbci	r25, 0xFE	; 254
    2f78:	0e 94 25 05 	call	0xa4a	; 0xa4a <uECC_vli_set>
    2f7c:	97 01       	movw	r18, r14
    2f7e:	ae 01       	movw	r20, r28
    2f80:	4f 5b       	subi	r20, 0xBF	; 191
    2f82:	5f 4f       	sbci	r21, 0xFF	; 255
    2f84:	be 01       	movw	r22, r28
    2f86:	6f 5f       	subi	r22, 0xFF	; 255
    2f88:	7e 4f       	sbci	r23, 0xFE	; 254
    2f8a:	ce 01       	movw	r24, r28
    2f8c:	8f 51       	subi	r24, 0x1F	; 31
    2f8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f90:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <apply_z>
    2f94:	03 2d       	mov	r16, r3
    2f96:	c7 53       	subi	r28, 0x37	; 55
    2f98:	de 4f       	sbci	r29, 0xFE	; 254
    2f9a:	28 81       	ld	r18, Y
    2f9c:	39 81       	ldd	r19, Y+1	; 0x01
    2f9e:	c9 5c       	subi	r28, 0xC9	; 201
    2fa0:	d1 40       	sbci	r29, 0x01	; 1
    2fa2:	ae 01       	movw	r20, r28
    2fa4:	4f 51       	subi	r20, 0x1F	; 31
    2fa6:	5f 4f       	sbci	r21, 0xFF	; 255
    2fa8:	be 01       	movw	r22, r28
    2faa:	6f 55       	subi	r22, 0x5F	; 95
    2fac:	7f 4f       	sbci	r23, 0xFF	; 255
    2fae:	ce 01       	movw	r24, r28
    2fb0:	8f 5d       	subi	r24, 0xDF	; 223
    2fb2:	9e 4f       	sbci	r25, 0xFE	; 254
    2fb4:	0e 94 a0 08 	call	0x1140	; 0x1140 <uECC_vli_modSub>
    2fb8:	87 01       	movw	r16, r14
    2fba:	9e 01       	movw	r18, r28
    2fbc:	2f 53       	subi	r18, 0x3F	; 63
    2fbe:	3f 4f       	sbci	r19, 0xFF	; 255
    2fc0:	ae 01       	movw	r20, r28
    2fc2:	4f 55       	subi	r20, 0x5F	; 95
    2fc4:	5f 4f       	sbci	r21, 0xFF	; 255
    2fc6:	be 01       	movw	r22, r28
    2fc8:	6f 5f       	subi	r22, 0xFF	; 255
    2fca:	7e 4f       	sbci	r23, 0xFE	; 254
    2fcc:	ce 01       	movw	r24, r28
    2fce:	8f 51       	subi	r24, 0x1F	; 31
    2fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd2:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <XYcZ_add>
    2fd6:	97 01       	movw	r18, r14
    2fd8:	ae 01       	movw	r20, r28
    2fda:	4f 5d       	subi	r20, 0xDF	; 223
    2fdc:	5e 4f       	sbci	r21, 0xFE	; 254
    2fde:	be 01       	movw	r22, r28
    2fe0:	6f 5b       	subi	r22, 0xBF	; 191
    2fe2:	7f 4f       	sbci	r23, 0xFF	; 255
    2fe4:	cb 01       	movw	r24, r22
    2fe6:	0e 94 3b 0a 	call	0x1476	; 0x1476 <uECC_vli_modMult_fast>
    2fea:	91 e0       	ldi	r25, 0x01	; 1
    2fec:	a9 1a       	sub	r10, r25
    2fee:	b1 08       	sbc	r11, r1
    2ff0:	08 f0       	brcs	.+2      	; 0x2ff4 <uECC_verify+0x49c>
    2ff2:	82 cf       	rjmp	.-252    	; 0x2ef8 <uECC_verify+0x3a0>
    2ff4:	23 2d       	mov	r18, r3
    2ff6:	c7 53       	subi	r28, 0x37	; 55
    2ff8:	de 4f       	sbci	r29, 0xFE	; 254
    2ffa:	48 81       	ld	r20, Y
    2ffc:	59 81       	ldd	r21, Y+1	; 0x01
    2ffe:	c9 5c       	subi	r28, 0xC9	; 201
    3000:	d1 40       	sbci	r29, 0x01	; 1
    3002:	be 01       	movw	r22, r28
    3004:	6f 5b       	subi	r22, 0xBF	; 191
    3006:	7f 4f       	sbci	r23, 0xFF	; 255
    3008:	cb 01       	movw	r24, r22
    300a:	0e 94 95 0a 	call	0x152a	; 0x152a <uECC_vli_modInv>
    300e:	97 01       	movw	r18, r14
    3010:	ae 01       	movw	r20, r28
    3012:	4f 5b       	subi	r20, 0xBF	; 191
    3014:	5f 4f       	sbci	r21, 0xFF	; 255
    3016:	be 01       	movw	r22, r28
    3018:	6f 53       	subi	r22, 0x3F	; 63
    301a:	7f 4f       	sbci	r23, 0xFF	; 255
    301c:	ce 01       	movw	r24, r28
    301e:	8f 55       	subi	r24, 0x5F	; 95
    3020:	9f 4f       	sbci	r25, 0xFF	; 255
    3022:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <apply_z>
    3026:	4c 2d       	mov	r20, r12
    3028:	be 01       	movw	r22, r28
    302a:	6f 55       	subi	r22, 0x5F	; 95
    302c:	7f 4f       	sbci	r23, 0xFF	; 255
    302e:	c4 01       	movw	r24, r8
    3030:	0e 94 25 08 	call	0x104a	; 0x104a <uECC_vli_cmp_unsafe>
    3034:	81 30       	cpi	r24, 0x01	; 1
    3036:	41 f0       	breq	.+16     	; 0x3048 <uECC_verify+0x4f0>
    3038:	2c 2d       	mov	r18, r12
    303a:	a4 01       	movw	r20, r8
    303c:	be 01       	movw	r22, r28
    303e:	6f 55       	subi	r22, 0x5F	; 95
    3040:	7f 4f       	sbci	r23, 0xFF	; 255
    3042:	cb 01       	movw	r24, r22
    3044:	0e 94 b5 06 	call	0xd6a	; 0xd6a <uECC_vli_sub>
    3048:	3a 94       	dec	r3
    304a:	33 20       	and	r3, r3
    304c:	cc f0       	brlt	.+50     	; 0x3080 <uECC_verify+0x528>
    304e:	20 e0       	ldi	r18, 0x00	; 0
    3050:	83 2d       	mov	r24, r3
    3052:	03 2c       	mov	r0, r3
    3054:	00 0c       	add	r0, r0
    3056:	99 0b       	sbc	r25, r25
    3058:	e1 ea       	ldi	r30, 0xA1	; 161
    305a:	f0 e0       	ldi	r31, 0x00	; 0
    305c:	ec 0f       	add	r30, r28
    305e:	fd 1f       	adc	r31, r29
    3060:	e8 0f       	add	r30, r24
    3062:	f9 1f       	adc	r31, r25
    3064:	a9 e8       	ldi	r26, 0x89	; 137
    3066:	b1 e0       	ldi	r27, 0x01	; 1
    3068:	ac 0f       	add	r26, r28
    306a:	bd 1f       	adc	r27, r29
    306c:	a8 0f       	add	r26, r24
    306e:	b9 1f       	adc	r27, r25
    3070:	30 81       	ld	r19, Z
    3072:	8c 91       	ld	r24, X
    3074:	83 27       	eor	r24, r19
    3076:	28 2b       	or	r18, r24
    3078:	3a 94       	dec	r3
    307a:	33 20       	and	r3, r3
    307c:	4c f7       	brge	.-46     	; 0x3050 <uECC_verify+0x4f8>
    307e:	01 c0       	rjmp	.+2      	; 0x3082 <uECC_verify+0x52a>
    3080:	20 e0       	ldi	r18, 0x00	; 0
    3082:	81 e0       	ldi	r24, 0x01	; 1
    3084:	90 e0       	ldi	r25, 0x00	; 0
    3086:	22 23       	and	r18, r18
    3088:	69 f0       	breq	.+26     	; 0x30a4 <uECC_verify+0x54c>
    308a:	80 e0       	ldi	r24, 0x00	; 0
    308c:	0b c0       	rjmp	.+22     	; 0x30a4 <uECC_verify+0x54c>
    308e:	80 e0       	ldi	r24, 0x00	; 0
    3090:	90 e0       	ldi	r25, 0x00	; 0
    3092:	08 c0       	rjmp	.+16     	; 0x30a4 <uECC_verify+0x54c>
    3094:	80 e0       	ldi	r24, 0x00	; 0
    3096:	90 e0       	ldi	r25, 0x00	; 0
    3098:	05 c0       	rjmp	.+10     	; 0x30a4 <uECC_verify+0x54c>
    309a:	80 e0       	ldi	r24, 0x00	; 0
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	02 c0       	rjmp	.+4      	; 0x30a4 <uECC_verify+0x54c>
    30a0:	80 e0       	ldi	r24, 0x00	; 0
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	c4 53       	subi	r28, 0x34	; 52
    30a6:	de 4f       	sbci	r29, 0xFE	; 254
    30a8:	0f b6       	in	r0, 0x3f	; 63
    30aa:	f8 94       	cli
    30ac:	de bf       	out	0x3e, r29	; 62
    30ae:	0f be       	out	0x3f, r0	; 63
    30b0:	cd bf       	out	0x3d, r28	; 61
    30b2:	df 91       	pop	r29
    30b4:	cf 91       	pop	r28
    30b6:	1f 91       	pop	r17
    30b8:	0f 91       	pop	r16
    30ba:	ff 90       	pop	r15
    30bc:	ef 90       	pop	r14
    30be:	df 90       	pop	r13
    30c0:	cf 90       	pop	r12
    30c2:	bf 90       	pop	r11
    30c4:	af 90       	pop	r10
    30c6:	9f 90       	pop	r9
    30c8:	8f 90       	pop	r8
    30ca:	7f 90       	pop	r7
    30cc:	6f 90       	pop	r6
    30ce:	5f 90       	pop	r5
    30d0:	4f 90       	pop	r4
    30d2:	3f 90       	pop	r3
    30d4:	2f 90       	pop	r2
    30d6:	08 95       	ret

000030d8 <bytes_to_hex>:

#include <avr/io.h>
#include "hexconv.h"

void bytes_to_hex(const uint8_t *src, uint8_t intlen, char dest[intlen*2])
{
    30d8:	cf 93       	push	r28
    30da:	df 93       	push	r29
	static const unsigned char table[] = "0123456789abcdef";

	for (; intlen > 0; intlen--)
    30dc:	66 23       	and	r22, r22
    30de:	c9 f0       	breq	.+50     	; 0x3112 <bytes_to_hex+0x3a>
    30e0:	c4 2f       	mov	r28, r20
    30e2:	d5 2f       	mov	r29, r21
    30e4:	28 2f       	mov	r18, r24
    30e6:	39 2f       	mov	r19, r25
	{
		unsigned char c = *src++;
    30e8:	d9 01       	movw	r26, r18
    30ea:	ed 91       	ld	r30, X+
    30ec:	9d 01       	movw	r18, r26
		*dest++ = table[c >> 4];
    30ee:	ae 2f       	mov	r26, r30
    30f0:	a2 95       	swap	r26
    30f2:	af 70       	andi	r26, 0x0F	; 15
    30f4:	b0 e0       	ldi	r27, 0x00	; 0
    30f6:	aa 54       	subi	r26, 0x4A	; 74
    30f8:	be 4f       	sbci	r27, 0xFE	; 254
    30fa:	8c 91       	ld	r24, X
    30fc:	88 83       	st	Y, r24
		*dest++ = table[c & 0x0f];
    30fe:	ef 70       	andi	r30, 0x0F	; 15
    3100:	f0 e0       	ldi	r31, 0x00	; 0
    3102:	ea 54       	subi	r30, 0x4A	; 74
    3104:	fe 4f       	sbci	r31, 0xFE	; 254
    3106:	80 81       	ld	r24, Z
    3108:	89 83       	std	Y+1, r24	; 0x01

void bytes_to_hex(const uint8_t *src, uint8_t intlen, char dest[intlen*2])
{
	static const unsigned char table[] = "0123456789abcdef";

	for (; intlen > 0; intlen--)
    310a:	61 50       	subi	r22, 0x01	; 1
    310c:	22 96       	adiw	r28, 0x02	; 2
    310e:	61 11       	cpse	r22, r1
    3110:	eb cf       	rjmp	.-42     	; 0x30e8 <bytes_to_hex+0x10>
	{
		unsigned char c = *src++;
		*dest++ = table[c >> 4];
		*dest++ = table[c & 0x0f];
	}
}
    3112:	df 91       	pop	r29
    3114:	cf 91       	pop	r28
    3116:	08 95       	ret

00003118 <hex_to_bytes>:

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
    3118:	ff 92       	push	r15
    311a:	0f 93       	push	r16
    311c:	1f 93       	push	r17
    311e:	cf 93       	push	r28
    3120:	df 93       	push	r29
    3122:	f8 2e       	mov	r15, r24
    3124:	09 2f       	mov	r16, r25
    3126:	16 2f       	mov	r17, r22
    3128:	ea 01       	movw	r28, r20
	memset(dest, 0, strlen/2);
    312a:	46 2f       	mov	r20, r22
    312c:	46 95       	lsr	r20
    312e:	50 e0       	ldi	r21, 0x00	; 0
    3130:	60 e0       	ldi	r22, 0x00	; 0
    3132:	70 e0       	ldi	r23, 0x00	; 0
    3134:	ce 01       	movw	r24, r28
    3136:	0e 94 57 34 	call	0x68ae	; 0x68ae <memset>
	uint8_t index = 0;
	while (index < strlen) {
    313a:	11 23       	and	r17, r17
    313c:	09 f4       	brne	.+2      	; 0x3140 <hex_to_bytes+0x28>
    313e:	3f c0       	rjmp	.+126    	; 0x31be <hex_to_bytes+0xa6>
    3140:	ef 2d       	mov	r30, r15
    3142:	f0 2f       	mov	r31, r16
    3144:	20 e0       	ldi	r18, 0x00	; 0
    3146:	30 e0       	ldi	r19, 0x00	; 0
		char c = src[index];
		int value = 0;
    3148:	70 e0       	ldi	r23, 0x00	; 0
    314a:	60 e0       	ldi	r22, 0x00	; 0
    314c:	42 2f       	mov	r20, r18

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
		char c = src[index];
    314e:	81 91       	ld	r24, Z+
    3150:	2f 5f       	subi	r18, 0xFF	; 255
    3152:	3f 4f       	sbci	r19, 0xFF	; 255
		int value = 0;
		if(c >= '0' && c <= '9')
    3154:	90 ed       	ldi	r25, 0xD0	; 208
    3156:	98 0f       	add	r25, r24
    3158:	9a 30       	cpi	r25, 0x0A	; 10
    315a:	18 f4       	brcc	.+6      	; 0x3162 <hex_to_bytes+0x4a>
		value = (c - '0');
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	c0 97       	sbiw	r24, 0x30	; 48
    3160:	11 c0       	rjmp	.+34     	; 0x3184 <hex_to_bytes+0x6c>
		else if (c >= 'A' && c <= 'F')
    3162:	9f eb       	ldi	r25, 0xBF	; 191
    3164:	98 0f       	add	r25, r24
    3166:	96 30       	cpi	r25, 0x06	; 6
    3168:	18 f4       	brcc	.+6      	; 0x3170 <hex_to_bytes+0x58>
		value = (10 + (c - 'A'));
    316a:	90 e0       	ldi	r25, 0x00	; 0
    316c:	c7 97       	sbiw	r24, 0x37	; 55
    316e:	0a c0       	rjmp	.+20     	; 0x3184 <hex_to_bytes+0x6c>
		else if (c >= 'a' && c <= 'f')
    3170:	9f e9       	ldi	r25, 0x9F	; 159
    3172:	98 0f       	add	r25, r24
    3174:	96 30       	cpi	r25, 0x06	; 6
    3176:	20 f4       	brcc	.+8      	; 0x3180 <hex_to_bytes+0x68>
		value = (10 + (c - 'a'));
    3178:	90 e0       	ldi	r25, 0x00	; 0
    317a:	87 55       	subi	r24, 0x57	; 87
    317c:	91 09       	sbc	r25, r1
    317e:	02 c0       	rjmp	.+4      	; 0x3184 <hex_to_bytes+0x6c>
void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
		char c = src[index];
		int value = 0;
    3180:	87 2f       	mov	r24, r23
    3182:	96 2f       	mov	r25, r22
		else if (c >= 'A' && c <= 'F')
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
		value = (10 + (c - 'a'));

		dest[(index/2)] += value << (((index + 1) % 2) * 4);
    3184:	46 95       	lsr	r20
    3186:	de 01       	movw	r26, r28
    3188:	a4 0f       	add	r26, r20
    318a:	b1 1d       	adc	r27, r1
    318c:	a9 01       	movw	r20, r18
    318e:	41 70       	andi	r20, 0x01	; 1
    3190:	50 78       	andi	r21, 0x80	; 128
    3192:	55 23       	and	r21, r21
    3194:	34 f4       	brge	.+12     	; 0x31a2 <hex_to_bytes+0x8a>
    3196:	41 50       	subi	r20, 0x01	; 1
    3198:	51 09       	sbc	r21, r1
    319a:	4e 6f       	ori	r20, 0xFE	; 254
    319c:	5f 6f       	ori	r21, 0xFF	; 255
    319e:	4f 5f       	subi	r20, 0xFF	; 255
    31a0:	5f 4f       	sbci	r21, 0xFF	; 255
    31a2:	44 0f       	add	r20, r20
    31a4:	55 1f       	adc	r21, r21
    31a6:	44 0f       	add	r20, r20
    31a8:	55 1f       	adc	r21, r21
    31aa:	02 c0       	rjmp	.+4      	; 0x31b0 <hex_to_bytes+0x98>
    31ac:	88 0f       	add	r24, r24
    31ae:	99 1f       	adc	r25, r25
    31b0:	4a 95       	dec	r20
    31b2:	e2 f7       	brpl	.-8      	; 0x31ac <hex_to_bytes+0x94>
    31b4:	9c 91       	ld	r25, X
    31b6:	89 0f       	add	r24, r25
    31b8:	8c 93       	st	X, r24
}

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
    31ba:	21 17       	cp	r18, r17
    31bc:	38 f2       	brcs	.-114    	; 0x314c <hex_to_bytes+0x34>

		dest[(index/2)] += value << (((index + 1) % 2) * 4);

		index++;
	}
}
    31be:	df 91       	pop	r29
    31c0:	cf 91       	pop	r28
    31c2:	1f 91       	pop	r17
    31c4:	0f 91       	pop	r16
    31c6:	ff 90       	pop	r15
    31c8:	08 95       	ret

000031ca <isotp_send_flow_control>:

    return ms;
}

static int isotp_send_flow_control(IsoTpLink* link, uint8_t flow_status, uint8_t block_size, uint8_t st_min_ms) 
{
    31ca:	cf 93       	push	r28
    31cc:	df 93       	push	r29
    31ce:	cd b7       	in	r28, 0x3d	; 61
    31d0:	de b7       	in	r29, 0x3e	; 62
    31d2:	28 97       	sbiw	r28, 0x08	; 8
    31d4:	0f b6       	in	r0, 0x3f	; 63
    31d6:	f8 94       	cli
    31d8:	de bf       	out	0x3e, r29	; 62
    31da:	0f be       	out	0x3f, r0	; 63
    31dc:	cd bf       	out	0x3d, r28	; 61
    IsoTpCanMessage message;
    int ret;

    /* setup message  */
    message.as.flow_control.type = ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME;
    message.as.flow_control.FS = flow_status;
    31de:	62 95       	swap	r22
    31e0:	60 7f       	andi	r22, 0xF0	; 240
    31e2:	63 60       	ori	r22, 0x03	; 3
    31e4:	69 83       	std	Y+1, r22	; 0x01
    message.as.flow_control.BS = block_size;
    31e6:	4a 83       	std	Y+2, r20	; 0x02
static uint8_t isotp_ms_to_st_min(uint8_t ms) 
{
    uint8_t st_min;

    st_min = ms;
    if (st_min > 0x7F){
    31e8:	22 23       	and	r18, r18
    31ea:	0c f4       	brge	.+2      	; 0x31ee <isotp_send_flow_control+0x24>
        st_min = 0x7F;
    31ec:	2f e7       	ldi	r18, 0x7F	; 127

    /* setup message  */
    message.as.flow_control.type = ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME;
    message.as.flow_control.FS = flow_status;
    message.as.flow_control.BS = block_size;
    message.as.flow_control.STmin = isotp_ms_to_st_min(st_min_ms);
    31ee:	2b 83       	std	Y+3, r18	; 0x03

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.flow_control.reserve, 0, sizeof(message.as.flow_control.reserve));
    31f0:	fe 01       	movw	r30, r28
    31f2:	34 96       	adiw	r30, 0x04	; 4
    31f4:	25 e0       	ldi	r18, 0x05	; 5
    31f6:	df 01       	movw	r26, r30
    31f8:	1d 92       	st	X+, r1
    31fa:	2a 95       	dec	r18
    31fc:	e9 f7       	brne	.-6      	; 0x31f8 <isotp_send_flow_control+0x2e>
    ret = isotp_user_send_can(link->send_arbitration_id,
    31fe:	fc 01       	movw	r30, r24
    3200:	60 81       	ld	r22, Z
    3202:	71 81       	ldd	r23, Z+1	; 0x01
    3204:	82 81       	ldd	r24, Z+2	; 0x02
    3206:	93 81       	ldd	r25, Z+3	; 0x03
    3208:	28 e0       	ldi	r18, 0x08	; 8
    320a:	ae 01       	movw	r20, r28
    320c:	4f 5f       	subi	r20, 0xFF	; 255
    320e:	5f 4f       	sbci	r21, 0xFF	; 255
    3210:	83 d3       	rcall	.+1798   	; 0x3918 <isotp_user_send_can>
                           message.as.data_array.ptr, 
                           3);
#endif

    return ret;
}
    3212:	28 96       	adiw	r28, 0x08	; 8
    3214:	0f b6       	in	r0, 0x3f	; 63
    3216:	f8 94       	cli
    3218:	de bf       	out	0x3e, r29	; 62
    321a:	0f be       	out	0x3f, r0	; 63
    321c:	cd bf       	out	0x3d, r28	; 61
    321e:	df 91       	pop	r29
    3220:	cf 91       	pop	r28
    3222:	08 95       	ret

00003224 <isotp_send_with_id>:
{
    return isotp_send_with_id(link, link->send_arbitration_id, payload, size);
}

int isotp_send_with_id(IsoTpLink *link, uint32_t id, const uint8_t payload[], uint16_t size)
{
    3224:	8f 92       	push	r8
    3226:	9f 92       	push	r9
    3228:	af 92       	push	r10
    322a:	bf 92       	push	r11
    322c:	ef 92       	push	r14
    322e:	ff 92       	push	r15
    3230:	0f 93       	push	r16
    3232:	1f 93       	push	r17
    3234:	cf 93       	push	r28
    3236:	df 93       	push	r29
    3238:	cd b7       	in	r28, 0x3d	; 61
    323a:	de b7       	in	r29, 0x3e	; 62
    323c:	28 97       	sbiw	r28, 0x08	; 8
    323e:	0f b6       	in	r0, 0x3f	; 63
    3240:	f8 94       	cli
    3242:	de bf       	out	0x3e, r29	; 62
    3244:	0f be       	out	0x3f, r0	; 63
    3246:	cd bf       	out	0x3d, r28	; 61
    3248:	7c 01       	movw	r14, r24
    324a:	4a 01       	movw	r8, r20
    324c:	5b 01       	movw	r10, r22
    int ret;
    
    if (size > link->send_buf_size){
    324e:	dc 01       	movw	r26, r24
    3250:	16 96       	adiw	r26, 0x06	; 6
    3252:	8d 91       	ld	r24, X+
    3254:	9c 91       	ld	r25, X
    3256:	17 97       	sbiw	r26, 0x07	; 7
    3258:	80 17       	cp	r24, r16
    325a:	91 07       	cpc	r25, r17
    325c:	50 f4       	brcc	.+20     	; 0x3272 <isotp_send_with_id+0x4e>
        isotp_user_debug("Message to big, increase ISO_TP_MAX_MESSAGE_SIZE to set a bigger buffer\n");
    325e:	87 ec       	ldi	r24, 0xC7	; 199
    3260:	91 e0       	ldi	r25, 0x01	; 1
    3262:	9f 93       	push	r25
    3264:	8f 93       	push	r24
    3266:	55 d3       	rcall	.+1706   	; 0x3912 <isotp_user_debug>
        return ISOTP_RET_OVERFLOW;
    3268:	0f 90       	pop	r0
    326a:	0f 90       	pop	r0
    326c:	8d ef       	ldi	r24, 0xFD	; 253
    326e:	9f ef       	ldi	r25, 0xFF	; 255
    3270:	7f c0       	rjmp	.+254    	; 0x3370 <isotp_send_with_id+0x14c>
    }

    if (ISOTP_SEND_STATUS_INPROGRESS == link->send_status){
    3272:	f7 01       	movw	r30, r14
    3274:	83 8d       	ldd	r24, Z+27	; 0x1b
    3276:	81 30       	cpi	r24, 0x01	; 1
    3278:	51 f4       	brne	.+20     	; 0x328e <isotp_send_with_id+0x6a>
        isotp_user_debug("Abord previous message, which is sending in pregress\n");
    327a:	80 e1       	ldi	r24, 0x10	; 16
    327c:	92 e0       	ldi	r25, 0x02	; 2
    327e:	9f 93       	push	r25
    3280:	8f 93       	push	r24
    3282:	47 d3       	rcall	.+1678   	; 0x3912 <isotp_user_debug>
        return ISOTP_RET_INPROGRESS;
    3284:	0f 90       	pop	r0
    3286:	0f 90       	pop	r0
    3288:	8e ef       	ldi	r24, 0xFE	; 254
    328a:	9f ef       	ldi	r25, 0xFF	; 255
    328c:	71 c0       	rjmp	.+226    	; 0x3370 <isotp_send_with_id+0x14c>
    }

    /* copy into local buffer */
    link->send_size = size;
    328e:	11 87       	std	Z+9, r17	; 0x09
    3290:	00 87       	std	Z+8, r16	; 0x08
    link->send_offset = 0;
    3292:	13 86       	std	Z+11, r1	; 0x0b
    3294:	12 86       	std	Z+10, r1	; 0x0a
    (void)memcpy(link->send_buffer, payload, size);
    3296:	a8 01       	movw	r20, r16
    3298:	b9 01       	movw	r22, r18
    329a:	84 81       	ldd	r24, Z+4	; 0x04
    329c:	95 81       	ldd	r25, Z+5	; 0x05
    329e:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>

    if(link->send_size < 8){
    32a2:	f7 01       	movw	r30, r14
    32a4:	00 85       	ldd	r16, Z+8	; 0x08
    32a6:	11 85       	ldd	r17, Z+9	; 0x09
    32a8:	08 30       	cpi	r16, 0x08	; 8
    32aa:	11 05       	cpc	r17, r1
    32ac:	08 f5       	brcc	.+66     	; 0x32f0 <isotp_send_with_id+0xcc>
    /* multi frame message length must greater than 7  */
    assert(link->send_size <= 7);

    /* setup message  */
    message.as.single_frame.type = ISOTP_PCI_TYPE_SINGLE;
    message.as.single_frame.SF_DL = (uint8_t)link->send_size;
    32ae:	80 2f       	mov	r24, r16
    32b0:	82 95       	swap	r24
    32b2:	80 7f       	andi	r24, 0xF0	; 240
    32b4:	89 83       	std	Y+1, r24	; 0x01
    (void)memcpy(message.as.single_frame.data, link->send_buffer, link->send_size);
    32b6:	64 81       	ldd	r22, Z+4	; 0x04
    32b8:	75 81       	ldd	r23, Z+5	; 0x05
    32ba:	a8 01       	movw	r20, r16
    32bc:	ce 01       	movw	r24, r28
    32be:	02 96       	adiw	r24, 0x02	; 2
    32c0:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.single_frame.data + link->send_size,
    32c4:	47 e0       	ldi	r20, 0x07	; 7
    32c6:	50 e0       	ldi	r21, 0x00	; 0
    32c8:	40 1b       	sub	r20, r16
    32ca:	51 0b       	sbc	r21, r17
    32cc:	60 e0       	ldi	r22, 0x00	; 0
    32ce:	70 e0       	ldi	r23, 0x00	; 0
    32d0:	82 e0       	ldi	r24, 0x02	; 2
    32d2:	90 e0       	ldi	r25, 0x00	; 0
    32d4:	8c 0f       	add	r24, r28
    32d6:	9d 1f       	adc	r25, r29
    32d8:	80 0f       	add	r24, r16
    32da:	91 1f       	adc	r25, r17
    32dc:	0e 94 57 34 	call	0x68ae	; 0x68ae <memset>
           0,
           sizeof(message.as.single_frame.data) - link->send_size);
    ret = isotp_user_send_can(id,
    32e0:	28 e0       	ldi	r18, 0x08	; 8
    32e2:	ae 01       	movw	r20, r28
    32e4:	4f 5f       	subi	r20, 0xFF	; 255
    32e6:	5f 4f       	sbci	r21, 0xFF	; 255
    32e8:	c5 01       	movw	r24, r10
    32ea:	b4 01       	movw	r22, r8
    32ec:	15 d3       	rcall	.+1578   	; 0x3918 <isotp_user_send_can>
    32ee:	40 c0       	rjmp	.+128    	; 0x3370 <isotp_send_with_id+0x14c>
    /* multi frame message length must greater than 7  */
    assert(link->send_size > 7);

    /* setup message  */
    message.as.first_frame.type = ISOTP_PCI_TYPE_FIRST_FRAME;
    message.as.first_frame.FF_DL_low  = (uint8_t)link->send_size;
    32f0:	0a 83       	std	Y+2, r16	; 0x02
    message.as.first_frame.FF_DL_high = (uint8_t)(0x0F & (link->send_size >> 8));
    32f2:	81 2f       	mov	r24, r17
    32f4:	82 95       	swap	r24
    32f6:	80 7f       	andi	r24, 0xF0	; 240
    32f8:	81 60       	ori	r24, 0x01	; 1
    32fa:	89 83       	std	Y+1, r24	; 0x01
    (void)memcpy(message.as.first_frame.data, 
    32fc:	04 80       	ldd	r0, Z+4	; 0x04
    32fe:	f5 81       	ldd	r31, Z+5	; 0x05
    3300:	e0 2d       	mov	r30, r0
    3302:	86 e0       	ldi	r24, 0x06	; 6
    3304:	de 01       	movw	r26, r28
    3306:	13 96       	adiw	r26, 0x03	; 3
    3308:	01 90       	ld	r0, Z+
    330a:	0d 92       	st	X+, r0
    330c:	8a 95       	dec	r24
    330e:	e1 f7       	brne	.-8      	; 0x3308 <isotp_send_with_id+0xe4>
           link->send_buffer, 
           sizeof(message.as.first_frame.data));

    /* send message */
    ret = isotp_user_send_can(id,
    3310:	28 e0       	ldi	r18, 0x08	; 8
    3312:	ae 01       	movw	r20, r28
    3314:	4f 5f       	subi	r20, 0xFF	; 255
    3316:	5f 4f       	sbci	r21, 0xFF	; 255
    3318:	c5 01       	movw	r24, r10
    331a:	b4 01       	movw	r22, r8
    331c:	fd d2       	rcall	.+1530   	; 0x3918 <isotp_user_send_can>
                           message.as.data_array.ptr, 
                           sizeof(message));
    if (ISOTP_RET_OK == ret){
    331e:	00 97       	sbiw	r24, 0x00	; 0
    3320:	39 f5       	brne	.+78     	; 0x3370 <isotp_send_with_id+0x14c>
        link->send_offset += sizeof(message.as.first_frame.data);
    3322:	f7 01       	movw	r30, r14
    3324:	82 85       	ldd	r24, Z+10	; 0x0a
    3326:	93 85       	ldd	r25, Z+11	; 0x0b
    3328:	06 96       	adiw	r24, 0x06	; 6
    332a:	93 87       	std	Z+11, r25	; 0x0b
    332c:	82 87       	std	Z+10, r24	; 0x0a
        link->send_sn = 1;
    332e:	11 e0       	ldi	r17, 0x01	; 1
    3330:	14 87       	std	Z+12, r17	; 0x0c
        /* send multi-frame */
        ret = isotp_send_first_frame(link, id); 
        
        /* init multi-frame control flags */
        if (ISOTP_RET_OK == ret){
            link->send_bs_remain = 5;
    3332:	85 e0       	ldi	r24, 0x05	; 5
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	96 87       	std	Z+14, r25	; 0x0e
            link->send_st_min = 0;
    3338:	85 87       	std	Z+13, r24	; 0x0d
            link->send_wtf_count = 0;
    333a:	17 86       	std	Z+15, r1	; 0x0f
            link->send_timer_st = isotp_user_get_ms();
    333c:	10 8a       	std	Z+16, r1	; 0x10
    333e:	0a d3       	rcall	.+1556   	; 0x3954 <isotp_user_get_ms>
    3340:	d7 01       	movw	r26, r14
    3342:	51 96       	adiw	r26, 0x11	; 17
    3344:	6d 93       	st	X+, r22
    3346:	7d 93       	st	X+, r23
    3348:	8d 93       	st	X+, r24
    334a:	9c 93       	st	X, r25
            link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    334c:	54 97       	sbiw	r26, 0x14	; 20
    334e:	02 d3       	rcall	.+1540   	; 0x3954 <isotp_user_get_ms>
    3350:	dc 01       	movw	r26, r24
    3352:	cb 01       	movw	r24, r22
    3354:	8c 59       	subi	r24, 0x9C	; 156
    3356:	9f 4f       	sbci	r25, 0xFF	; 255
    3358:	af 4f       	sbci	r26, 0xFF	; 255
    335a:	bf 4f       	sbci	r27, 0xFF	; 255
    335c:	f7 01       	movw	r30, r14
    335e:	85 8b       	std	Z+21, r24	; 0x15
    3360:	96 8b       	std	Z+22, r25	; 0x16
    3362:	a7 8b       	std	Z+23, r26	; 0x17
    3364:	b0 8f       	std	Z+24, r27	; 0x18
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    3366:	12 8e       	std	Z+26, r1	; 0x1a
    3368:	11 8e       	std	Z+25, r1	; 0x19
            link->send_status = ISOTP_SEND_STATUS_INPROGRESS;
    336a:	13 8f       	std	Z+27, r17	; 0x1b
    if(link->send_size < 8){
        /* send single frame */
        ret = isotp_send_single_frame(link, id);
    } else {
        /* send multi-frame */
        ret = isotp_send_first_frame(link, id); 
    336c:	80 e0       	ldi	r24, 0x00	; 0
    336e:	90 e0       	ldi	r25, 0x00	; 0
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
            link->send_status = ISOTP_SEND_STATUS_INPROGRESS;
        }
    }
    return ret;
}
    3370:	28 96       	adiw	r28, 0x08	; 8
    3372:	0f b6       	in	r0, 0x3f	; 63
    3374:	f8 94       	cli
    3376:	de bf       	out	0x3e, r29	; 62
    3378:	0f be       	out	0x3f, r0	; 63
    337a:	cd bf       	out	0x3d, r28	; 61
    337c:	df 91       	pop	r29
    337e:	cf 91       	pop	r28
    3380:	1f 91       	pop	r17
    3382:	0f 91       	pop	r16
    3384:	ff 90       	pop	r15
    3386:	ef 90       	pop	r14
    3388:	bf 90       	pop	r11
    338a:	af 90       	pop	r10
    338c:	9f 90       	pop	r9
    338e:	8f 90       	pop	r8
    3390:	08 95       	ret

00003392 <isotp_send>:
    
    return ret;
}

int isotp_send(IsoTpLink *link, const uint8_t payload[], uint16_t size)
{
    3392:	0f 93       	push	r16
    3394:	1f 93       	push	r17
    3396:	9b 01       	movw	r18, r22
    3398:	8a 01       	movw	r16, r20
    return isotp_send_with_id(link, link->send_arbitration_id, payload, size);
    339a:	fc 01       	movw	r30, r24
    339c:	40 81       	ld	r20, Z
    339e:	51 81       	ldd	r21, Z+1	; 0x01
    33a0:	62 81       	ldd	r22, Z+2	; 0x02
    33a2:	73 81       	ldd	r23, Z+3	; 0x03
    33a4:	3f df       	rcall	.-386    	; 0x3224 <isotp_send_with_id>
}
    33a6:	1f 91       	pop	r17
    33a8:	0f 91       	pop	r16
    33aa:	08 95       	ret

000033ac <isotp_on_can_message>:

    return ISOTP_RET_OK;
}

void isotp_on_can_message(IsoTpLink *link, uint8_t *data, uint8_t len)
{
    33ac:	cf 92       	push	r12
    33ae:	df 92       	push	r13
    33b0:	ef 92       	push	r14
    33b2:	ff 92       	push	r15
    33b4:	0f 93       	push	r16
    33b6:	1f 93       	push	r17
    33b8:	cf 93       	push	r28
    33ba:	df 93       	push	r29
    33bc:	cd b7       	in	r28, 0x3d	; 61
    33be:	de b7       	in	r29, 0x3e	; 62
    33c0:	2a 97       	sbiw	r28, 0x0a	; 10
    33c2:	0f b6       	in	r0, 0x3f	; 63
    33c4:	f8 94       	cli
    33c6:	de bf       	out	0x3e, r29	; 62
    33c8:	0f be       	out	0x3f, r0	; 63
    33ca:	cd bf       	out	0x3d, r28	; 61
    33cc:	7c 01       	movw	r14, r24
    IsoTpCanMessage message;
    int ret;
    
    if (len < 2 || len > 8){
    33ce:	9e ef       	ldi	r25, 0xFE	; 254
    33d0:	94 0f       	add	r25, r20
    33d2:	97 30       	cpi	r25, 0x07	; 7
    33d4:	08 f0       	brcs	.+2      	; 0x33d8 <isotp_on_can_message+0x2c>
    33d6:	67 c1       	rjmp	.+718    	; 0x36a6 <isotp_on_can_message+0x2fa>
    33d8:	14 2f       	mov	r17, r20
        return;
    }

    (void)memcpy(message.as.data_array.ptr, data, len);
    33da:	c4 2e       	mov	r12, r20
    33dc:	d1 2c       	mov	r13, r1
    33de:	a6 01       	movw	r20, r12
    33e0:	ce 01       	movw	r24, r28
    33e2:	01 96       	adiw	r24, 0x01	; 1
    33e4:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>
    (void)memset(message.as.data_array.ptr + len, 0, sizeof(message.as.data_array.ptr) - len);
    33e8:	48 e0       	ldi	r20, 0x08	; 8
    33ea:	50 e0       	ldi	r21, 0x00	; 0
    33ec:	4c 19       	sub	r20, r12
    33ee:	5d 09       	sbc	r21, r13
    33f0:	60 e0       	ldi	r22, 0x00	; 0
    33f2:	70 e0       	ldi	r23, 0x00	; 0
    33f4:	81 e0       	ldi	r24, 0x01	; 1
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	8c 0f       	add	r24, r28
    33fa:	9d 1f       	adc	r25, r29
    33fc:	8c 0d       	add	r24, r12
    33fe:	9d 1d       	adc	r25, r13
    3400:	0e 94 57 34 	call	0x68ae	; 0x68ae <memset>

    switch(message.as.common.type) {
    3404:	89 81       	ldd	r24, Y+1	; 0x01
    3406:	8f 70       	andi	r24, 0x0F	; 15
    3408:	81 30       	cpi	r24, 0x01	; 1
    340a:	09 f4       	brne	.+2      	; 0x340e <isotp_on_can_message+0x62>
    340c:	40 c0       	rjmp	.+128    	; 0x348e <isotp_on_can_message+0xe2>
    340e:	38 f0       	brcs	.+14     	; 0x341e <isotp_on_can_message+0x72>
    3410:	82 30       	cpi	r24, 0x02	; 2
    3412:	09 f4       	brne	.+2      	; 0x3416 <isotp_on_can_message+0x6a>
    3414:	8b c0       	rjmp	.+278    	; 0x352c <isotp_on_can_message+0x180>
    3416:	83 30       	cpi	r24, 0x03	; 3
    3418:	09 f4       	brne	.+2      	; 0x341c <isotp_on_can_message+0x70>
    341a:	cf c0       	rjmp	.+414    	; 0x35ba <isotp_on_can_message+0x20e>
    341c:	44 c1       	rjmp	.+648    	; 0x36a6 <isotp_on_can_message+0x2fa>
        case ISOTP_PCI_TYPE_SINGLE: {
            /* update protocol resault */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    341e:	f7 01       	movw	r30, r14
    3420:	80 a9       	ldd	r24, Z+48	; 0x30
    3422:	81 30       	cpi	r24, 0x01	; 1
    3424:	29 f4       	brne	.+10     	; 0x3430 <isotp_on_can_message+0x84>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3426:	8a ef       	ldi	r24, 0xFA	; 250
    3428:	9f ef       	ldi	r25, 0xFF	; 255
    342a:	97 a7       	std	Z+47, r25	; 0x2f
    342c:	86 a7       	std	Z+46, r24	; 0x2e
    342e:	03 c0       	rjmp	.+6      	; 0x3436 <isotp_on_can_message+0x8a>
            } else {
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    3430:	f7 01       	movw	r30, r14
    3432:	17 a6       	std	Z+47, r1	; 0x2f
    3434:	16 a6       	std	Z+46, r1	; 0x2e
}

static int isotp_receive_single_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{   
    /* check data length */
    if ((0 == message->as.single_frame.SF_DL) ||
    3436:	89 81       	ldd	r24, Y+1	; 0x01
    3438:	80 7f       	andi	r24, 0xF0	; 240
    343a:	69 f0       	breq	.+26     	; 0x3456 <isotp_on_can_message+0xaa>
        (message->as.single_frame.SF_DL > (len - 1))){
    343c:	49 81       	ldd	r20, Y+1	; 0x01
    343e:	84 2f       	mov	r24, r20
    3440:	82 95       	swap	r24
    3442:	8f 70       	andi	r24, 0x0F	; 15
}

static int isotp_receive_single_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{   
    /* check data length */
    if ((0 == message->as.single_frame.SF_DL) ||
    3444:	28 2f       	mov	r18, r24
    3446:	30 e0       	ldi	r19, 0x00	; 0
    3448:	41 2f       	mov	r20, r17
    344a:	50 e0       	ldi	r21, 0x00	; 0
    344c:	41 50       	subi	r20, 0x01	; 1
    344e:	51 09       	sbc	r21, r1
    3450:	42 17       	cp	r20, r18
    3452:	53 07       	cpc	r21, r19
    3454:	44 f4       	brge	.+16     	; 0x3466 <isotp_on_can_message+0xba>
        (message->as.single_frame.SF_DL > (len - 1))){
        isotp_user_debug("Single-frame length too small.");
    3456:	86 e4       	ldi	r24, 0x46	; 70
    3458:	92 e0       	ldi	r25, 0x02	; 2
    345a:	9f 93       	push	r25
    345c:	8f 93       	push	r24
    345e:	59 d2       	rcall	.+1202   	; 0x3912 <isotp_user_debug>
    3460:	0f 90       	pop	r0
    3462:	0f 90       	pop	r0
    3464:	20 c1       	rjmp	.+576    	; 0x36a6 <isotp_on_can_message+0x2fa>
        return ISOTP_RET_LENGTH;
    }

    /* copying data */
    (void)memcpy(link->receive_buffer, 
    3466:	48 2f       	mov	r20, r24
    3468:	50 e0       	ldi	r21, 0x00	; 0
    346a:	be 01       	movw	r22, r28
    346c:	6e 5f       	subi	r22, 0xFE	; 254
    346e:	7f 4f       	sbci	r23, 0xFF	; 255
    3470:	f7 01       	movw	r30, r14
    3472:	80 a1       	ldd	r24, Z+32	; 0x20
    3474:	91 a1       	ldd	r25, Z+33	; 0x21
    3476:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>
           message->as.single_frame.data, 
           message->as.single_frame.SF_DL);
    link->receive_size = message->as.single_frame.SF_DL;
    347a:	89 81       	ldd	r24, Y+1	; 0x01
    347c:	82 95       	swap	r24
    347e:	8f 70       	andi	r24, 0x0F	; 15
    3480:	90 e0       	ldi	r25, 0x00	; 0
    3482:	f7 01       	movw	r30, r14
    3484:	95 a3       	std	Z+37, r25	; 0x25
    3486:	84 a3       	std	Z+36, r24	; 0x24
            /* handle message */
            ret = isotp_receive_single_frame(link, &message, len);
            
            if (ISOTP_RET_OK == ret){
                /* change status */
                link->receive_status = ISOTP_RECEIVE_STATUS_FULL;
    3488:	82 e0       	ldi	r24, 0x02	; 2
    348a:	80 ab       	std	Z+48, r24	; 0x30
    348c:	0c c1       	rjmp	.+536    	; 0x36a6 <isotp_on_can_message+0x2fa>
            }
            break;
        }
        case ISOTP_PCI_TYPE_FIRST_FRAME: {
            /* update protocol resault */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    348e:	f7 01       	movw	r30, r14
    3490:	80 a9       	ldd	r24, Z+48	; 0x30
    3492:	81 30       	cpi	r24, 0x01	; 1
    3494:	29 f4       	brne	.+10     	; 0x34a0 <isotp_on_can_message+0xf4>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3496:	8a ef       	ldi	r24, 0xFA	; 250
    3498:	9f ef       	ldi	r25, 0xFF	; 255
    349a:	97 a7       	std	Z+47, r25	; 0x2f
    349c:	86 a7       	std	Z+46, r24	; 0x2e
    349e:	03 c0       	rjmp	.+6      	; 0x34a6 <isotp_on_can_message+0xfa>
            } else {
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    34a0:	f7 01       	movw	r30, r14
    34a2:	17 a6       	std	Z+47, r1	; 0x2f
    34a4:	16 a6       	std	Z+46, r1	; 0x2e

static int isotp_receive_first_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    volatile uint16_t payload_length;

    if (8 != len){
    34a6:	18 30       	cpi	r17, 0x08	; 8
    34a8:	41 f0       	breq	.+16     	; 0x34ba <isotp_on_can_message+0x10e>
        isotp_user_debug("First frame should be 8 byte lenght.");
    34aa:	85 e6       	ldi	r24, 0x65	; 101
    34ac:	92 e0       	ldi	r25, 0x02	; 2
    34ae:	9f 93       	push	r25
    34b0:	8f 93       	push	r24
    34b2:	2f d2       	rcall	.+1118   	; 0x3912 <isotp_user_debug>
    34b4:	0f 90       	pop	r0
    34b6:	0f 90       	pop	r0
    34b8:	f6 c0       	rjmp	.+492    	; 0x36a6 <isotp_on_can_message+0x2fa>
        return ISOTP_RET_LENGTH;
    }

    /* check data length */
	payload_length = message->as.first_frame.FF_DL_high;
    34ba:	89 81       	ldd	r24, Y+1	; 0x01
    34bc:	82 95       	swap	r24
    34be:	8f 70       	andi	r24, 0x0F	; 15
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	9a 87       	std	Y+10, r25	; 0x0a
    34c4:	89 87       	std	Y+9, r24	; 0x09
    payload_length = (payload_length << 8) + message->as.first_frame.FF_DL_low;
    34c6:	89 85       	ldd	r24, Y+9	; 0x09
    34c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    34ca:	98 2f       	mov	r25, r24
    34cc:	88 27       	eor	r24, r24
    34ce:	2a 81       	ldd	r18, Y+2	; 0x02
    34d0:	82 0f       	add	r24, r18
    34d2:	91 1d       	adc	r25, r1
    34d4:	9a 87       	std	Y+10, r25	; 0x0a
    34d6:	89 87       	std	Y+9, r24	; 0x09
        return ISOTP_RET_OVERFLOW;
    }
	*/
    
    /* copying data */
    (void)memcpy(link->receive_buffer, message->as.first_frame.data, sizeof(message->as.first_frame.data));
    34d8:	f7 01       	movw	r30, r14
    34da:	a0 a1       	ldd	r26, Z+32	; 0x20
    34dc:	b1 a1       	ldd	r27, Z+33	; 0x21
    34de:	86 e0       	ldi	r24, 0x06	; 6
    34e0:	fe 01       	movw	r30, r28
    34e2:	33 96       	adiw	r30, 0x03	; 3
    34e4:	01 90       	ld	r0, Z+
    34e6:	0d 92       	st	X+, r0
    34e8:	8a 95       	dec	r24
    34ea:	e1 f7       	brne	.-8      	; 0x34e4 <isotp_on_can_message+0x138>
    link->receive_size = payload_length;
    34ec:	89 85       	ldd	r24, Y+9	; 0x09
    34ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    34f0:	f7 01       	movw	r30, r14
    34f2:	95 a3       	std	Z+37, r25	; 0x25
    34f4:	84 a3       	std	Z+36, r24	; 0x24
    link->receive_offset = sizeof(message->as.first_frame.data);
    34f6:	86 e0       	ldi	r24, 0x06	; 6
    34f8:	90 e0       	ldi	r25, 0x00	; 0
    34fa:	97 a3       	std	Z+39, r25	; 0x27
    34fc:	86 a3       	std	Z+38, r24	; 0x26
    link->receive_sn = 1;
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	80 a7       	std	Z+40, r24	; 0x28
            }

            /* if receive successful */
            if (ISOTP_RET_OK == ret){
                /* change status */
                link->receive_status = ISOTP_RECEIVE_STATUS_INPROGRESS;
    3502:	80 ab       	std	Z+48, r24	; 0x30
                /* send fc frame */
                link->receive_bs_count = ISO_TP_DEFAULT_BLOCK_SIZE;					
    3504:	8e e0       	ldi	r24, 0x0E	; 14
    3506:	81 a7       	std	Z+41, r24	; 0x29
                isotp_send_flow_control(link, PCI_FLOW_STATUS_CONTINUE, link->receive_bs_count, ISO_TP_DEFAULT_ST_MIN);
    3508:	20 e0       	ldi	r18, 0x00	; 0
    350a:	4e e0       	ldi	r20, 0x0E	; 14
    350c:	60 e0       	ldi	r22, 0x00	; 0
    350e:	c7 01       	movw	r24, r14
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3510:	5c de       	rcall	.-840    	; 0x31ca <isotp_send_flow_control>
    3512:	20 d2       	rcall	.+1088   	; 0x3954 <isotp_user_get_ms>
    3514:	dc 01       	movw	r26, r24
    3516:	cb 01       	movw	r24, r22
    3518:	8c 59       	subi	r24, 0x9C	; 156
    351a:	9f 4f       	sbci	r25, 0xFF	; 255
    351c:	af 4f       	sbci	r26, 0xFF	; 255
    351e:	bf 4f       	sbci	r27, 0xFF	; 255
    3520:	f7 01       	movw	r30, r14
    3522:	82 a7       	std	Z+42, r24	; 0x2a
    3524:	93 a7       	std	Z+43, r25	; 0x2b
    3526:	a4 a7       	std	Z+44, r26	; 0x2c
    3528:	b5 a7       	std	Z+45, r27	; 0x2d
    352a:	bd c0       	rjmp	.+378    	; 0x36a6 <isotp_on_can_message+0x2fa>
            
            break;
        }
        case TSOTP_PCI_TYPE_CONSECUTIVE_FRAME: {
            /* check if in receiving status */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS != link->receive_status){
    352c:	f7 01       	movw	r30, r14
    352e:	80 a9       	ldd	r24, Z+48	; 0x30
    3530:	81 30       	cpi	r24, 0x01	; 1
    3532:	29 f0       	breq	.+10     	; 0x353e <isotp_on_can_message+0x192>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3534:	8a ef       	ldi	r24, 0xFA	; 250
    3536:	9f ef       	ldi	r25, 0xFF	; 255
    3538:	97 a7       	std	Z+47, r25	; 0x2f
    353a:	86 a7       	std	Z+46, r24	; 0x2e
                break;
    353c:	b4 c0       	rjmp	.+360    	; 0x36a6 <isotp_on_can_message+0x2fa>
static int isotp_receive_consecutive_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    uint16_t remaining_bytes;
    
    /* check sn */
    if (link->receive_sn != message->as.consecutive_frame.SN){
    353e:	89 81       	ldd	r24, Y+1	; 0x01
    3540:	82 95       	swap	r24
    3542:	8f 70       	andi	r24, 0x0F	; 15
    3544:	f7 01       	movw	r30, r14
    3546:	90 a5       	ldd	r25, Z+40	; 0x28
    3548:	98 13       	cpse	r25, r24
    354a:	94 c0       	rjmp	.+296    	; 0x3674 <isotp_on_can_message+0x2c8>
        return ISOTP_RET_WRONG_SN;
    }

    /* check data length */
    remaining_bytes = link->receive_size - link->receive_offset;
    354c:	86 a1       	ldd	r24, Z+38	; 0x26
    354e:	97 a1       	ldd	r25, Z+39	; 0x27
    3550:	04 a1       	ldd	r16, Z+36	; 0x24
    3552:	15 a1       	ldd	r17, Z+37	; 0x25
    3554:	08 1b       	sub	r16, r24
    3556:	19 0b       	sbc	r17, r25
    3558:	08 30       	cpi	r16, 0x08	; 8
    355a:	11 05       	cpc	r17, r1
    355c:	10 f0       	brcs	.+4      	; 0x3562 <isotp_on_can_message+0x1b6>
    355e:	07 e0       	ldi	r16, 0x07	; 7
    3560:	10 e0       	ldi	r17, 0x00	; 0
		return ISOTP_RET_LENGTH;
    }
	*/
	
    /* copying data */
    (void)memcpy(link->receive_buffer + link->receive_offset, 
    3562:	f7 01       	movw	r30, r14
    3564:	20 a1       	ldd	r18, Z+32	; 0x20
    3566:	31 a1       	ldd	r19, Z+33	; 0x21
    3568:	a8 01       	movw	r20, r16
    356a:	be 01       	movw	r22, r28
    356c:	6e 5f       	subi	r22, 0xFE	; 254
    356e:	7f 4f       	sbci	r23, 0xFF	; 255
    3570:	82 0f       	add	r24, r18
    3572:	93 1f       	adc	r25, r19
    3574:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>
           message->as.consecutive_frame.data,
           remaining_bytes);

    link->receive_offset += remaining_bytes;
    3578:	f7 01       	movw	r30, r14
    357a:	86 a1       	ldd	r24, Z+38	; 0x26
    357c:	97 a1       	ldd	r25, Z+39	; 0x27
    357e:	08 0f       	add	r16, r24
    3580:	19 1f       	adc	r17, r25
    3582:	17 a3       	std	Z+39, r17	; 0x27
    3584:	06 a3       	std	Z+38, r16	; 0x26
    if (++(link->receive_sn) > 0x0F){
    3586:	80 a5       	ldd	r24, Z+40	; 0x28
    3588:	8f 5f       	subi	r24, 0xFF	; 255
    358a:	80 31       	cpi	r24, 0x10	; 16
    358c:	08 f4       	brcc	.+2      	; 0x3590 <isotp_on_can_message+0x1e4>
    358e:	5b c0       	rjmp	.+182    	; 0x3646 <isotp_on_can_message+0x29a>
        link->receive_sn = 0;
    3590:	10 a6       	std	Z+40, r1	; 0x28
    3592:	5b c0       	rjmp	.+182    	; 0x364a <isotp_on_can_message+0x29e>
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
                
                /* receive finished */
                if (link->receive_offset >= link->receive_size){
                    link->receive_status = ISOTP_RECEIVE_STATUS_FULL;
    3594:	82 e0       	ldi	r24, 0x02	; 2
    3596:	f7 01       	movw	r30, r14
    3598:	80 ab       	std	Z+48, r24	; 0x30
    359a:	85 c0       	rjmp	.+266    	; 0x36a6 <isotp_on_can_message+0x2fa>
                } else {
                    /* send fc when bs reaches limit */
                    if (0 == --link->receive_bs_count){
    359c:	f7 01       	movw	r30, r14
    359e:	81 a5       	ldd	r24, Z+41	; 0x29
    35a0:	81 50       	subi	r24, 0x01	; 1
    35a2:	11 f0       	breq	.+4      	; 0x35a8 <isotp_on_can_message+0x1fc>
    35a4:	81 a7       	std	Z+41, r24	; 0x29
    35a6:	7f c0       	rjmp	.+254    	; 0x36a6 <isotp_on_can_message+0x2fa>
                        link->receive_bs_count = ISO_TP_DEFAULT_BLOCK_SIZE;											
    35a8:	8e e0       	ldi	r24, 0x0E	; 14
    35aa:	f7 01       	movw	r30, r14
    35ac:	81 a7       	std	Z+41, r24	; 0x29
                        isotp_send_flow_control(link, PCI_FLOW_STATUS_CONTINUE, link->receive_bs_count, ISO_TP_DEFAULT_ST_MIN);
    35ae:	20 e0       	ldi	r18, 0x00	; 0
    35b0:	4e e0       	ldi	r20, 0x0E	; 14
    35b2:	60 e0       	ldi	r22, 0x00	; 0
    35b4:	c7 01       	movw	r24, r14
    35b6:	09 de       	rcall	.-1006   	; 0x31ca <isotp_send_flow_control>
    35b8:	76 c0       	rjmp	.+236    	; 0x36a6 <isotp_on_can_message+0x2fa>
            
            break;
        }
        case ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME:
            /* handle fc frame only when sending in progress  */
            if (ISOTP_SEND_STATUS_INPROGRESS != link->send_status){
    35ba:	f7 01       	movw	r30, r14
    35bc:	83 8d       	ldd	r24, Z+27	; 0x1b
    35be:	81 30       	cpi	r24, 0x01	; 1
    35c0:	09 f0       	breq	.+2      	; 0x35c4 <isotp_on_can_message+0x218>
    35c2:	71 c0       	rjmp	.+226    	; 0x36a6 <isotp_on_can_message+0x2fa>
}

static int isotp_receive_flow_conrtrol_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    /* check message length */
    if (len < 3){
    35c4:	13 30       	cpi	r17, 0x03	; 3
    35c6:	08 f0       	brcs	.+2      	; 0x35ca <isotp_on_can_message+0x21e>
        isotp_user_debug("Flow control frame too short.");
    35c8:	5c c0       	rjmp	.+184    	; 0x3682 <isotp_on_can_message+0x2d6>
    35ca:	8a e8       	ldi	r24, 0x8A	; 138
    35cc:	92 e0       	ldi	r25, 0x02	; 2
    35ce:	9f 93       	push	r25
    35d0:	8f 93       	push	r24
    35d2:	9f d1       	rcall	.+830    	; 0x3912 <isotp_user_debug>
    35d4:	0f 90       	pop	r0
    35d6:	0f 90       	pop	r0
    35d8:	66 c0       	rjmp	.+204    	; 0x36a6 <isotp_on_can_message+0x2fa>
                /* refresh bs timer */
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;

                /* overflow */
                if (PCI_FLOW_STATUS_OVERFLOW == message.as.flow_control.FS) {
                    link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_BUFFER_OVFLW;
    35da:	88 ef       	ldi	r24, 0xF8	; 248
    35dc:	9f ef       	ldi	r25, 0xFF	; 255
    35de:	f7 01       	movw	r30, r14
    35e0:	92 8f       	std	Z+26, r25	; 0x1a
    35e2:	81 8f       	std	Z+25, r24	; 0x19
                    link->send_status = ISOTP_SEND_STATUS_ERROR;
    35e4:	82 e0       	ldi	r24, 0x02	; 2
    35e6:	83 8f       	std	Z+27, r24	; 0x1b
    35e8:	5e c0       	rjmp	.+188    	; 0x36a6 <isotp_on_can_message+0x2fa>
                } 
                /* wait */
                else if (PCI_FLOW_STATUS_WAIT == message.as.flow_control.FS) {
    35ea:	80 31       	cpi	r24, 0x10	; 16
    35ec:	71 f4       	brne	.+28     	; 0x360a <isotp_on_can_message+0x25e>
                    link->send_wtf_count += 1;
    35ee:	f7 01       	movw	r30, r14
    35f0:	80 89       	ldd	r24, Z+16	; 0x10
    35f2:	8f 5f       	subi	r24, 0xFF	; 255
    35f4:	80 8b       	std	Z+16, r24	; 0x10
                    /* wati exceed allowed count */
                    if (link->send_wtf_count > ISO_TP_MAX_WFT_NUMBER){
    35f6:	82 30       	cpi	r24, 0x02	; 2
    35f8:	08 f4       	brcc	.+2      	; 0x35fc <isotp_on_can_message+0x250>
    35fa:	55 c0       	rjmp	.+170    	; 0x36a6 <isotp_on_can_message+0x2fa>
                        link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_WFT_OVRN;
    35fc:	89 ef       	ldi	r24, 0xF9	; 249
    35fe:	9f ef       	ldi	r25, 0xFF	; 255
    3600:	92 8f       	std	Z+26, r25	; 0x1a
    3602:	81 8f       	std	Z+25, r24	; 0x19
                        link->send_status = ISOTP_SEND_STATUS_ERROR;
    3604:	82 e0       	ldi	r24, 0x02	; 2
    3606:	83 8f       	std	Z+27, r24	; 0x1b
    3608:	4e c0       	rjmp	.+156    	; 0x36a6 <isotp_on_can_message+0x2fa>
                    }
                } 
                /* permit send */
                else if (PCI_FLOW_STATUS_CONTINUE == message.as.flow_control.FS){
    360a:	81 11       	cpse	r24, r1
    360c:	4c c0       	rjmp	.+152    	; 0x36a6 <isotp_on_can_message+0x2fa>
                    if (0 == message.as.flow_control.BS){
    360e:	8a 81       	ldd	r24, Y+2	; 0x02
    3610:	81 11       	cpse	r24, r1
    3612:	06 c0       	rjmp	.+12     	; 0x3620 <isotp_on_can_message+0x274>
                        link->send_bs_remain = ISOTP_INVALID_BS;
    3614:	8f ef       	ldi	r24, 0xFF	; 255
    3616:	9f ef       	ldi	r25, 0xFF	; 255
    3618:	f7 01       	movw	r30, r14
    361a:	96 87       	std	Z+14, r25	; 0x0e
    361c:	85 87       	std	Z+13, r24	; 0x0d
    361e:	04 c0       	rjmp	.+8      	; 0x3628 <isotp_on_can_message+0x27c>
                    } else {
                        link->send_bs_remain = message.as.flow_control.BS;
    3620:	90 e0       	ldi	r25, 0x00	; 0
    3622:	f7 01       	movw	r30, r14
    3624:	96 87       	std	Z+14, r25	; 0x0e
    3626:	85 87       	std	Z+13, r24	; 0x0d
                    }
                    link->send_st_min = isotp_st_min_to_ms(message.as.flow_control.STmin);
    3628:	8b 81       	ldd	r24, Y+3	; 0x03
/* st_min to msec  */
static uint8_t isotp_st_min_to_ms(uint8_t st_min) 
{
    uint8_t ms;
    
    if (st_min >= 0xF1 && st_min <= 0xF9){
    362a:	9f e0       	ldi	r25, 0x0F	; 15
    362c:	98 0f       	add	r25, r24
    362e:	99 30       	cpi	r25, 0x09	; 9
    3630:	18 f0       	brcs	.+6      	; 0x3638 <isotp_on_can_message+0x28c>
        ms = 1;
    } else if (st_min <= 0x7F) {
    3632:	88 23       	and	r24, r24
    3634:	24 f4       	brge	.+8      	; 0x363e <isotp_on_can_message+0x292>
    3636:	02 c0       	rjmp	.+4      	; 0x363c <isotp_on_can_message+0x290>
static uint8_t isotp_st_min_to_ms(uint8_t st_min) 
{
    uint8_t ms;
    
    if (st_min >= 0xF1 && st_min <= 0xF9){
        ms = 1;
    3638:	81 e0       	ldi	r24, 0x01	; 1
    363a:	01 c0       	rjmp	.+2      	; 0x363e <isotp_on_can_message+0x292>
    } else if (st_min <= 0x7F) {
        ms = st_min;
    } else {
        ms = 0;
    363c:	80 e0       	ldi	r24, 0x00	; 0
                    if (0 == message.as.flow_control.BS){
                        link->send_bs_remain = ISOTP_INVALID_BS;
                    } else {
                        link->send_bs_remain = message.as.flow_control.BS;
                    }
                    link->send_st_min = isotp_st_min_to_ms(message.as.flow_control.STmin);
    363e:	f7 01       	movw	r30, r14
                    link->send_wtf_count = 0;
    3640:	87 87       	std	Z+15, r24	; 0x0f
    3642:	10 8a       	std	Z+16, r1	; 0x10
    (void)memcpy(link->receive_buffer + link->receive_offset, 
           message->as.consecutive_frame.data,
           remaining_bytes);

    link->receive_offset += remaining_bytes;
    if (++(link->receive_sn) > 0x0F){
    3644:	30 c0       	rjmp	.+96     	; 0x36a6 <isotp_on_can_message+0x2fa>
    3646:	f7 01       	movw	r30, r14
            }

            /* if success */
            if (ISOTP_RET_OK == ret){
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3648:	80 a7       	std	Z+40, r24	; 0x28
    364a:	84 d1       	rcall	.+776    	; 0x3954 <isotp_user_get_ms>
    364c:	dc 01       	movw	r26, r24
    364e:	cb 01       	movw	r24, r22
    3650:	8c 59       	subi	r24, 0x9C	; 156
    3652:	9f 4f       	sbci	r25, 0xFF	; 255
    3654:	af 4f       	sbci	r26, 0xFF	; 255
    3656:	bf 4f       	sbci	r27, 0xFF	; 255
    3658:	f7 01       	movw	r30, r14
    365a:	82 a7       	std	Z+42, r24	; 0x2a
    365c:	93 a7       	std	Z+43, r25	; 0x2b
    365e:	a4 a7       	std	Z+44, r26	; 0x2c
    3660:	b5 a7       	std	Z+45, r27	; 0x2d
                
                /* receive finished */
                if (link->receive_offset >= link->receive_size){
    3662:	26 a1       	ldd	r18, Z+38	; 0x26
    3664:	37 a1       	ldd	r19, Z+39	; 0x27
    3666:	84 a1       	ldd	r24, Z+36	; 0x24
    3668:	95 a1       	ldd	r25, Z+37	; 0x25
    366a:	28 17       	cp	r18, r24
    366c:	39 07       	cpc	r19, r25
    366e:	08 f4       	brcc	.+2      	; 0x3672 <isotp_on_can_message+0x2c6>
    3670:	95 cf       	rjmp	.-214    	; 0x359c <isotp_on_can_message+0x1f0>
    3672:	90 cf       	rjmp	.-224    	; 0x3594 <isotp_on_can_message+0x1e8>
            /* handle message */
            ret = isotp_receive_consecutive_frame(link, &message, len);

            /* if wrong sn */
            if (ISOTP_RET_WRONG_SN == ret){
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_WRONG_SN;
    3674:	8c ef       	ldi	r24, 0xFC	; 252
    3676:	9f ef       	ldi	r25, 0xFF	; 255
    3678:	f7 01       	movw	r30, r14
    367a:	97 a7       	std	Z+47, r25	; 0x2f
                link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    367c:	86 a7       	std	Z+46, r24	; 0x2e
                break;
    367e:	10 aa       	std	Z+48, r1	; 0x30
            /* handle message */
            ret = isotp_receive_flow_conrtrol_frame(link, &message, len);
            
            if (ISOTP_RET_OK == ret){
                /* refresh bs timer */
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3680:	12 c0       	rjmp	.+36     	; 0x36a6 <isotp_on_can_message+0x2fa>
    3682:	68 d1       	rcall	.+720    	; 0x3954 <isotp_user_get_ms>
    3684:	dc 01       	movw	r26, r24
    3686:	cb 01       	movw	r24, r22
    3688:	8c 59       	subi	r24, 0x9C	; 156
    368a:	9f 4f       	sbci	r25, 0xFF	; 255
    368c:	af 4f       	sbci	r26, 0xFF	; 255
    368e:	bf 4f       	sbci	r27, 0xFF	; 255
    3690:	f7 01       	movw	r30, r14
    3692:	85 8b       	std	Z+21, r24	; 0x15
    3694:	96 8b       	std	Z+22, r25	; 0x16
    3696:	a7 8b       	std	Z+23, r26	; 0x17
    3698:	b0 8f       	std	Z+24, r27	; 0x18

                /* overflow */
                if (PCI_FLOW_STATUS_OVERFLOW == message.as.flow_control.FS) {
    369a:	89 81       	ldd	r24, Y+1	; 0x01
    369c:	80 7f       	andi	r24, 0xF0	; 240
    369e:	80 32       	cpi	r24, 0x20	; 32
    36a0:	09 f0       	breq	.+2      	; 0x36a4 <isotp_on_can_message+0x2f8>
    36a2:	a3 cf       	rjmp	.-186    	; 0x35ea <isotp_on_can_message+0x23e>
    36a4:	9a cf       	rjmp	.-204    	; 0x35da <isotp_on_can_message+0x22e>
        default:
            break;
    };
    
    return;
}
    36a6:	2a 96       	adiw	r28, 0x0a	; 10
    36a8:	0f b6       	in	r0, 0x3f	; 63
    36aa:	f8 94       	cli
    36ac:	de bf       	out	0x3e, r29	; 62
    36ae:	0f be       	out	0x3f, r0	; 63
    36b0:	cd bf       	out	0x3d, r28	; 61
    36b2:	df 91       	pop	r29
    36b4:	cf 91       	pop	r28
    36b6:	1f 91       	pop	r17
    36b8:	0f 91       	pop	r16
    36ba:	ff 90       	pop	r15
    36bc:	ef 90       	pop	r14
    36be:	df 90       	pop	r13
    36c0:	cf 90       	pop	r12
    36c2:	08 95       	ret

000036c4 <isotp_receive>:

int isotp_receive(IsoTpLink *link, uint8_t *payload, const uint16_t payload_size, uint16_t *out_size)
{
    36c4:	ef 92       	push	r14
    36c6:	ff 92       	push	r15
    36c8:	0f 93       	push	r16
    36ca:	1f 93       	push	r17
    36cc:	cf 93       	push	r28
    36ce:	df 93       	push	r29
    36d0:	fc 01       	movw	r30, r24
    uint16_t copylen;
    
    if (ISOTP_RECEIVE_STATUS_FULL != link->receive_status){
    36d2:	80 a9       	ldd	r24, Z+48	; 0x30
    36d4:	82 30       	cpi	r24, 0x02	; 2
    36d6:	a9 f4       	brne	.+42     	; 0x3702 <isotp_receive+0x3e>
        return ISOTP_RET_NO_DATA;
    }

    copylen = link->receive_size;
    36d8:	04 a1       	ldd	r16, Z+36	; 0x24
    36da:	15 a1       	ldd	r17, Z+37	; 0x25
    36dc:	40 17       	cp	r20, r16
    36de:	51 07       	cpc	r21, r17
    36e0:	08 f4       	brcc	.+2      	; 0x36e4 <isotp_receive+0x20>
    36e2:	8a 01       	movw	r16, r20
    36e4:	79 01       	movw	r14, r18
    36e6:	cb 01       	movw	r24, r22
    36e8:	ef 01       	movw	r28, r30
    if (copylen > payload_size){
        copylen = payload_size;
    }

    memcpy(payload, link->receive_buffer, copylen);
    36ea:	60 a1       	ldd	r22, Z+32	; 0x20
    36ec:	71 a1       	ldd	r23, Z+33	; 0x21
    36ee:	a8 01       	movw	r20, r16
    36f0:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>
    *out_size = copylen;
    36f4:	f7 01       	movw	r30, r14
    36f6:	11 83       	std	Z+1, r17	; 0x01
    36f8:	00 83       	st	Z, r16

    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    36fa:	18 aa       	std	Y+48, r1	; 0x30

    return ISOTP_RET_OK;
    36fc:	80 e0       	ldi	r24, 0x00	; 0
    36fe:	90 e0       	ldi	r25, 0x00	; 0
    3700:	02 c0       	rjmp	.+4      	; 0x3706 <isotp_receive+0x42>
int isotp_receive(IsoTpLink *link, uint8_t *payload, const uint16_t payload_size, uint16_t *out_size)
{
    uint16_t copylen;
    
    if (ISOTP_RECEIVE_STATUS_FULL != link->receive_status){
        return ISOTP_RET_NO_DATA;
    3702:	8b ef       	ldi	r24, 0xFB	; 251
    3704:	9f ef       	ldi	r25, 0xFF	; 255
    *out_size = copylen;

    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;

    return ISOTP_RET_OK;
}
    3706:	df 91       	pop	r29
    3708:	cf 91       	pop	r28
    370a:	1f 91       	pop	r17
    370c:	0f 91       	pop	r16
    370e:	ff 90       	pop	r15
    3710:	ef 90       	pop	r14
    3712:	08 95       	ret

00003714 <isotp_init_link>:

void isotp_init_link(IsoTpLink *link, uint32_t sendid, 
                     uint8_t *sendbuf, uint16_t sendbufsize,
                     uint8_t *recvbuf, uint16_t recvbufsize)
{
    3714:	cf 92       	push	r12
    3716:	df 92       	push	r13
    3718:	ef 92       	push	r14
    371a:	ff 92       	push	r15
    371c:	0f 93       	push	r16
    371e:	1f 93       	push	r17
    3720:	fc 01       	movw	r30, r24
    memset(link, 0, sizeof(*link));
    3722:	81 e3       	ldi	r24, 0x31	; 49
    3724:	df 01       	movw	r26, r30
    3726:	1d 92       	st	X+, r1
    3728:	8a 95       	dec	r24
    372a:	e9 f7       	brne	.-6      	; 0x3726 <isotp_init_link+0x12>
    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    372c:	10 aa       	std	Z+48, r1	; 0x30
    link->send_status = ISOTP_SEND_STATUS_IDLE;
    372e:	13 8e       	std	Z+27, r1	; 0x1b
    link->send_arbitration_id = sendid;
    3730:	40 83       	st	Z, r20
    3732:	51 83       	std	Z+1, r21	; 0x01
    3734:	62 83       	std	Z+2, r22	; 0x02
    3736:	73 83       	std	Z+3, r23	; 0x03
    link->send_buffer = sendbuf;
    3738:	35 83       	std	Z+5, r19	; 0x05
    373a:	24 83       	std	Z+4, r18	; 0x04
    link->send_buf_size = sendbufsize;
    373c:	17 83       	std	Z+7, r17	; 0x07
    373e:	06 83       	std	Z+6, r16	; 0x06
    link->receive_buffer = recvbuf;
    3740:	f1 a2       	std	Z+33, r15	; 0x21
    3742:	e0 a2       	std	Z+32, r14	; 0x20
    link->recevie_buf_size = recvbufsize;
    3744:	d3 a2       	std	Z+35, r13	; 0x23
    3746:	c2 a2       	std	Z+34, r12	; 0x22
    
    return;
}
    3748:	1f 91       	pop	r17
    374a:	0f 91       	pop	r16
    374c:	ff 90       	pop	r15
    374e:	ef 90       	pop	r14
    3750:	df 90       	pop	r13
    3752:	cf 90       	pop	r12
    3754:	08 95       	ret

00003756 <isotp_poll>:

void isotp_poll(IsoTpLink *link)
{
    3756:	cf 92       	push	r12
    3758:	df 92       	push	r13
    375a:	ef 92       	push	r14
    375c:	ff 92       	push	r15
    375e:	0f 93       	push	r16
    3760:	1f 93       	push	r17
    3762:	cf 93       	push	r28
    3764:	df 93       	push	r29
    3766:	cd b7       	in	r28, 0x3d	; 61
    3768:	de b7       	in	r29, 0x3e	; 62
    376a:	28 97       	sbiw	r28, 0x08	; 8
    376c:	0f b6       	in	r0, 0x3f	; 63
    376e:	f8 94       	cli
    3770:	de bf       	out	0x3e, r29	; 62
    3772:	0f be       	out	0x3f, r0	; 63
    3774:	cd bf       	out	0x3d, r28	; 61
    3776:	8c 01       	movw	r16, r24
    int ret;

    /* only polling when operation in progress */
    if (ISOTP_SEND_STATUS_INPROGRESS == link->send_status){
    3778:	fc 01       	movw	r30, r24
    377a:	83 8d       	ldd	r24, Z+27	; 0x1b
    377c:	81 30       	cpi	r24, 0x01	; 1
    377e:	09 f0       	breq	.+2      	; 0x3782 <isotp_poll+0x2c>
    3780:	95 c0       	rjmp	.+298    	; 0x38ac <isotp_poll+0x156>

        /* continue send data */
        if (/* send data if bs_remain is invalid or bs_remain large than zero */
    3782:	85 85       	ldd	r24, Z+13	; 0x0d
    3784:	96 85       	ldd	r25, Z+14	; 0x0e
    3786:	89 2b       	or	r24, r25
    3788:	09 f4       	brne	.+2      	; 0x378c <isotp_poll+0x36>
    378a:	7e c0       	rjmp	.+252    	; 0x3888 <isotp_poll+0x132>
            (ISOTP_INVALID_BS == link->send_bs_remain || link->send_bs_remain > 0) &&
    378c:	87 85       	ldd	r24, Z+15	; 0x0f
    378e:	88 23       	and	r24, r24
    3790:	59 f0       	breq	.+22     	; 0x37a8 <isotp_poll+0x52>
            /* and if st_min is zero or go beyond interval time */
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
    3792:	c1 88       	ldd	r12, Z+17	; 0x11
    3794:	d2 88       	ldd	r13, Z+18	; 0x12
    3796:	e3 88       	ldd	r14, Z+19	; 0x13
    3798:	f4 88       	ldd	r15, Z+20	; 0x14
    379a:	dc d0       	rcall	.+440    	; 0x3954 <isotp_user_get_ms>
    379c:	c6 1a       	sub	r12, r22
    379e:	d7 0a       	sbc	r13, r23
    37a0:	e8 0a       	sbc	r14, r24
    37a2:	f9 0a       	sbc	r15, r25
    37a4:	0a f0       	brmi	.+2      	; 0x37a8 <isotp_poll+0x52>
    37a6:	70 c0       	rjmp	.+224    	; 0x3888 <isotp_poll+0x132>
	IsoTpCanMessage message;
    uint8_t data_length;
    int ret;

    /* multi frame message length must greater than 7  */
    assert(link->send_size > 7);
    37a8:	f8 01       	movw	r30, r16
    37aa:	e0 84       	ldd	r14, Z+8	; 0x08
    37ac:	f1 84       	ldd	r15, Z+9	; 0x09
    37ae:	f8 e0       	ldi	r31, 0x08	; 8
    37b0:	ef 16       	cp	r14, r31
    37b2:	f1 04       	cpc	r15, r1
    37b4:	10 f4       	brcc	.+4      	; 0x37ba <isotp_poll+0x64>
    37b6:	0e 94 23 34 	call	0x6846	; 0x6846 <abort>

    /* setup message  */
    message.as.consecutive_frame.type = TSOTP_PCI_TYPE_CONSECUTIVE_FRAME;
    message.as.consecutive_frame.SN = link->send_sn;
    37ba:	f8 01       	movw	r30, r16
    37bc:	84 85       	ldd	r24, Z+12	; 0x0c
    37be:	82 95       	swap	r24
    37c0:	80 7f       	andi	r24, 0xF0	; 240
    37c2:	82 60       	ori	r24, 0x02	; 2
    37c4:	89 83       	std	Y+1, r24	; 0x01
    data_length = link->send_size - link->send_offset;
    37c6:	22 85       	ldd	r18, Z+10	; 0x0a
    37c8:	33 85       	ldd	r19, Z+11	; 0x0b
    37ca:	8e 2d       	mov	r24, r14
    37cc:	82 1b       	sub	r24, r18
    if (data_length > sizeof(message.as.consecutive_frame.data)){
        data_length = sizeof(message.as.consecutive_frame.data);
    }
    (void)memcpy(message.as.consecutive_frame.data, link->send_buffer + link->send_offset, data_length);
    37ce:	88 30       	cpi	r24, 0x08	; 8
    37d0:	08 f0       	brcs	.+2      	; 0x37d4 <isotp_poll+0x7e>
    37d2:	87 e0       	ldi	r24, 0x07	; 7
    37d4:	e8 2e       	mov	r14, r24
    37d6:	f1 2c       	mov	r15, r1
    37d8:	f8 01       	movw	r30, r16
    37da:	64 81       	ldd	r22, Z+4	; 0x04
    37dc:	75 81       	ldd	r23, Z+5	; 0x05
    37de:	62 0f       	add	r22, r18
    37e0:	73 1f       	adc	r23, r19
    37e2:	a7 01       	movw	r20, r14
    37e4:	ce 01       	movw	r24, r28
    37e6:	02 96       	adiw	r24, 0x02	; 2
    37e8:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.consecutive_frame.data + data_length,
    37ec:	47 e0       	ldi	r20, 0x07	; 7
    37ee:	50 e0       	ldi	r21, 0x00	; 0
    37f0:	4e 19       	sub	r20, r14
    37f2:	5f 09       	sbc	r21, r15
    37f4:	60 e0       	ldi	r22, 0x00	; 0
    37f6:	70 e0       	ldi	r23, 0x00	; 0
    37f8:	82 e0       	ldi	r24, 0x02	; 2
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	8c 0f       	add	r24, r28
    37fe:	9d 1f       	adc	r25, r29
    3800:	8e 0d       	add	r24, r14
    3802:	9f 1d       	adc	r25, r15
    3804:	0e 94 57 34 	call	0x68ae	; 0x68ae <memset>
           0,
           sizeof(message.as.consecutive_frame.data) - data_length);
    ret = isotp_user_send_can(link->send_arbitration_id,
    3808:	f8 01       	movw	r30, r16
    380a:	60 81       	ld	r22, Z
    380c:	71 81       	ldd	r23, Z+1	; 0x01
    380e:	82 81       	ldd	r24, Z+2	; 0x02
    3810:	93 81       	ldd	r25, Z+3	; 0x03
    3812:	28 e0       	ldi	r18, 0x08	; 8
    3814:	ae 01       	movw	r20, r28
    3816:	4f 5f       	subi	r20, 0xFF	; 255
    3818:	5f 4f       	sbci	r21, 0xFF	; 255
    381a:	7e d0       	rcall	.+252    	; 0x3918 <isotp_user_send_can>
#else
    ret = isotp_user_send_can(link->send_arbitration_id,
                           message.as.data_array.ptr,
                           data_length + 1);
#endif
    if (ISOTP_RET_OK == ret){
    381c:	89 2b       	or	r24, r25
    381e:	09 f0       	breq	.+2      	; 0x3822 <isotp_poll+0xcc>
    3820:	5a c0       	rjmp	.+180    	; 0x38d6 <isotp_poll+0x180>
        link->send_offset += data_length;
    3822:	f8 01       	movw	r30, r16
    3824:	82 85       	ldd	r24, Z+10	; 0x0a
    3826:	93 85       	ldd	r25, Z+11	; 0x0b
    3828:	e8 0e       	add	r14, r24
    382a:	f9 1e       	adc	r15, r25
    382c:	f3 86       	std	Z+11, r15	; 0x0b
    382e:	e2 86       	std	Z+10, r14	; 0x0a
        if (++(link->send_sn) > 0x0F){
    3830:	84 85       	ldd	r24, Z+12	; 0x0c
    3832:	8f 5f       	subi	r24, 0xFF	; 255
    3834:	80 31       	cpi	r24, 0x10	; 16
    3836:	08 f4       	brcc	.+2      	; 0x383a <isotp_poll+0xe4>
    3838:	52 c0       	rjmp	.+164    	; 0x38de <isotp_poll+0x188>
            link->send_sn = 0;
    383a:	14 86       	std	Z+12, r1	; 0x0c
    383c:	52 c0       	rjmp	.+164    	; 0x38e2 <isotp_poll+0x18c>
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
            
            ret = isotp_send_consecutive_frame(link);
            if (ISOTP_RET_OK == ret){
                if (ISOTP_INVALID_BS != link->send_bs_remain){
                    link->send_bs_remain -= 1;
    383e:	01 97       	sbiw	r24, 0x01	; 1
    3840:	f8 01       	movw	r30, r16
    3842:	96 87       	std	Z+14, r25	; 0x0e
                }
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3844:	85 87       	std	Z+13, r24	; 0x0d
    3846:	86 d0       	rcall	.+268    	; 0x3954 <isotp_user_get_ms>
    3848:	dc 01       	movw	r26, r24
    384a:	cb 01       	movw	r24, r22
    384c:	8c 59       	subi	r24, 0x9C	; 156
    384e:	9f 4f       	sbci	r25, 0xFF	; 255
    3850:	af 4f       	sbci	r26, 0xFF	; 255
    3852:	bf 4f       	sbci	r27, 0xFF	; 255
    3854:	f8 01       	movw	r30, r16
    3856:	85 8b       	std	Z+21, r24	; 0x15
    3858:	96 8b       	std	Z+22, r25	; 0x16
    385a:	a7 8b       	std	Z+23, r26	; 0x17
                link->send_timer_st = isotp_user_get_ms() + link->send_st_min;
    385c:	b0 8f       	std	Z+24, r27	; 0x18
    385e:	7a d0       	rcall	.+244    	; 0x3954 <isotp_user_get_ms>
    3860:	f8 01       	movw	r30, r16
    3862:	27 85       	ldd	r18, Z+15	; 0x0f
    3864:	dc 01       	movw	r26, r24
    3866:	cb 01       	movw	r24, r22
    3868:	82 0f       	add	r24, r18
    386a:	91 1d       	adc	r25, r1
    386c:	a1 1d       	adc	r26, r1
    386e:	b1 1d       	adc	r27, r1
    3870:	81 8b       	std	Z+17, r24	; 0x11
    3872:	92 8b       	std	Z+18, r25	; 0x12
    3874:	a3 8b       	std	Z+19, r26	; 0x13
    3876:	b4 8b       	std	Z+20, r27	; 0x14

                /* check if send finish */
                if (link->send_offset >= link->send_size){
    3878:	22 85       	ldd	r18, Z+10	; 0x0a
    387a:	33 85       	ldd	r19, Z+11	; 0x0b
    387c:	80 85       	ldd	r24, Z+8	; 0x08
    387e:	91 85       	ldd	r25, Z+9	; 0x09
    3880:	28 17       	cp	r18, r24
    3882:	39 07       	cpc	r19, r25
    3884:	08 f0       	brcs	.+2      	; 0x3888 <isotp_poll+0x132>
                    link->send_status = ISOTP_SEND_STATUS_IDLE;
    3886:	13 8e       	std	Z+27, r1	; 0x1b
                link->send_status = ISOTP_SEND_STATUS_ERROR;
            }
        }

        /* check timeout */
        if (IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_bs)){
    3888:	f8 01       	movw	r30, r16
    388a:	c5 88       	ldd	r12, Z+21	; 0x15
    388c:	d6 88       	ldd	r13, Z+22	; 0x16
    388e:	e7 88       	ldd	r14, Z+23	; 0x17
    3890:	f0 8c       	ldd	r15, Z+24	; 0x18
    3892:	60 d0       	rcall	.+192    	; 0x3954 <isotp_user_get_ms>
    3894:	c6 1a       	sub	r12, r22
    3896:	d7 0a       	sbc	r13, r23
    3898:	e8 0a       	sbc	r14, r24
    389a:	f9 0a       	sbc	r15, r25
    389c:	3a f4       	brpl	.+14     	; 0x38ac <isotp_poll+0x156>
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_TIMEOUT_BS;
    389e:	8e ef       	ldi	r24, 0xFE	; 254
    38a0:	9f ef       	ldi	r25, 0xFF	; 255
    38a2:	f8 01       	movw	r30, r16
    38a4:	92 8f       	std	Z+26, r25	; 0x1a
    38a6:	81 8f       	std	Z+25, r24	; 0x19
            link->send_status = ISOTP_SEND_STATUS_ERROR;
    38a8:	82 e0       	ldi	r24, 0x02	; 2
    38aa:	83 8f       	std	Z+27, r24	; 0x1b
        }
    }

    /* only polling when operation in progress */
    if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    38ac:	f8 01       	movw	r30, r16
    38ae:	80 a9       	ldd	r24, Z+48	; 0x30
    38b0:	81 30       	cpi	r24, 0x01	; 1
        
        /* check timeout */
        if (IsoTpTimeAfter(isotp_user_get_ms(), link->receive_timer_cr)){
    38b2:	01 f5       	brne	.+64     	; 0x38f4 <isotp_poll+0x19e>
    38b4:	c2 a4       	ldd	r12, Z+42	; 0x2a
    38b6:	d3 a4       	ldd	r13, Z+43	; 0x2b
    38b8:	e4 a4       	ldd	r14, Z+44	; 0x2c
    38ba:	f5 a4       	ldd	r15, Z+45	; 0x2d
    38bc:	4b d0       	rcall	.+150    	; 0x3954 <isotp_user_get_ms>
    38be:	c6 1a       	sub	r12, r22
    38c0:	d7 0a       	sbc	r13, r23
    38c2:	e8 0a       	sbc	r14, r24
    38c4:	f9 0a       	sbc	r15, r25
    38c6:	b2 f4       	brpl	.+44     	; 0x38f4 <isotp_poll+0x19e>
            link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_TIMEOUT_CR;
    38c8:	8d ef       	ldi	r24, 0xFD	; 253
    38ca:	9f ef       	ldi	r25, 0xFF	; 255
    38cc:	f8 01       	movw	r30, r16
    38ce:	97 a7       	std	Z+47, r25	; 0x2f
    38d0:	86 a7       	std	Z+46, r24	; 0x2e
            link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    38d2:	10 aa       	std	Z+48, r1	; 0x30
        }
    }

    return;
    38d4:	0f c0       	rjmp	.+30     	; 0x38f4 <isotp_poll+0x19e>
                /* check if send finish */
                if (link->send_offset >= link->send_size){
                    link->send_status = ISOTP_SEND_STATUS_IDLE;
                }
            } else {
                link->send_status = ISOTP_SEND_STATUS_ERROR;
    38d6:	82 e0       	ldi	r24, 0x02	; 2
    38d8:	f8 01       	movw	r30, r16
    38da:	83 8f       	std	Z+27, r24	; 0x1b
    38dc:	d5 cf       	rjmp	.-86     	; 0x3888 <isotp_poll+0x132>
                           message.as.data_array.ptr,
                           data_length + 1);
#endif
    if (ISOTP_RET_OK == ret){
        link->send_offset += data_length;
        if (++(link->send_sn) > 0x0F){
    38de:	f8 01       	movw	r30, r16
    38e0:	84 87       	std	Z+12, r24	; 0x0c
            /* and if st_min is zero or go beyond interval time */
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
            
            ret = isotp_send_consecutive_frame(link);
            if (ISOTP_RET_OK == ret){
                if (ISOTP_INVALID_BS != link->send_bs_remain){
    38e2:	f8 01       	movw	r30, r16
    38e4:	85 85       	ldd	r24, Z+13	; 0x0d
    38e6:	96 85       	ldd	r25, Z+14	; 0x0e
    38e8:	8f 3f       	cpi	r24, 0xFF	; 255
    38ea:	ff ef       	ldi	r31, 0xFF	; 255
    38ec:	9f 07       	cpc	r25, r31
    38ee:	09 f0       	breq	.+2      	; 0x38f2 <isotp_poll+0x19c>
    38f0:	a6 cf       	rjmp	.-180    	; 0x383e <isotp_poll+0xe8>
    38f2:	a9 cf       	rjmp	.-174    	; 0x3846 <isotp_poll+0xf0>
            link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
        }
    }

    return;
}
    38f4:	28 96       	adiw	r28, 0x08	; 8
    38f6:	0f b6       	in	r0, 0x3f	; 63
    38f8:	f8 94       	cli
    38fa:	de bf       	out	0x3e, r29	; 62
    38fc:	0f be       	out	0x3f, r0	; 63
    38fe:	cd bf       	out	0x3d, r28	; 61
    3900:	df 91       	pop	r29
    3902:	cf 91       	pop	r28
    3904:	1f 91       	pop	r17
    3906:	0f 91       	pop	r16
    3908:	ff 90       	pop	r15
    390a:	ef 90       	pop	r14
    390c:	df 90       	pop	r13
    390e:	cf 90       	pop	r12
    3910:	08 95       	ret

00003912 <isotp_user_debug>:
#include "../uart_f.h"
#include "../can.h"

/* user implemented, print debug message */
void isotp_user_debug(const char* message){
	uart_puts(message);
    3912:	0c 94 e9 31 	jmp	0x63d2	; 0x63d2 <uart_puts>
    3916:	08 95       	ret

00003918 <isotp_user_send_can>:
}

/* user implemented, send can message */
int  isotp_user_send_can(const uint32_t arbitration_id, const uint8_t* data, const uint8_t size){
    3918:	cf 93       	push	r28
    391a:	df 93       	push	r29
    391c:	00 d0       	rcall	.+0      	; 0x391e <isotp_user_send_can+0x6>
    391e:	00 d0       	rcall	.+0      	; 0x3920 <isotp_user_send_can+0x8>
    3920:	00 d0       	rcall	.+0      	; 0x3922 <isotp_user_send_can+0xa>
    3922:	cd b7       	in	r28, 0x3d	; 61
    3924:	de b7       	in	r29, 0x3e	; 62
    3926:	6b 83       	std	Y+3, r22	; 0x03
    3928:	7c 83       	std	Y+4, r23	; 0x04
    392a:	8d 83       	std	Y+5, r24	; 0x05
    392c:	9e 83       	std	Y+6, r25	; 0x06
	can_msg_t message;
	can_id_t id;
	memcpy(id,&arbitration_id,2);
    392e:	7a 83       	std	Y+2, r23	; 0x02
    3930:	69 83       	std	Y+1, r22	; 0x01
	can_send_message(0, id, data, size);
    3932:	be 01       	movw	r22, r28
    3934:	6f 5f       	subi	r22, 0xFF	; 255
    3936:	7f 4f       	sbci	r23, 0xFF	; 255
    3938:	80 e0       	ldi	r24, 0x00	; 0
    393a:	0e 94 4c 03 	call	0x698	; 0x698 <can_send_message>
	return 0;
}
    393e:	80 e0       	ldi	r24, 0x00	; 0
    3940:	90 e0       	ldi	r25, 0x00	; 0
    3942:	26 96       	adiw	r28, 0x06	; 6
    3944:	0f b6       	in	r0, 0x3f	; 63
    3946:	f8 94       	cli
    3948:	de bf       	out	0x3e, r29	; 62
    394a:	0f be       	out	0x3f, r0	; 63
    394c:	cd bf       	out	0x3d, r28	; 61
    394e:	df 91       	pop	r29
    3950:	cf 91       	pop	r28
    3952:	08 95       	ret

00003954 <isotp_user_get_ms>:

/* user implemented, get millisecond */
uint32_t isotp_user_get_ms(void){
	return millis();
    3954:	0c 94 ed 04 	jmp	0x9da	; 0x9da <millis>
}
    3958:	08 95       	ret

0000395a <isotpi_send>:
static uint8_t g_isotpRecvBuf[128];
static uint8_t g_isotpSendBuf[128];



int isotpi_send(can_id_t id, uint8_t payload_size , uint8_t payload[payload_size]){
    395a:	8f 92       	push	r8
    395c:	9f 92       	push	r9
    395e:	bf 92       	push	r11
    3960:	cf 92       	push	r12
    3962:	df 92       	push	r13
    3964:	ef 92       	push	r14
    3966:	ff 92       	push	r15
    3968:	0f 93       	push	r16
    396a:	1f 93       	push	r17
    396c:	cf 93       	push	r28
    396e:	df 93       	push	r29
    3970:	00 d0       	rcall	.+0      	; 0x3972 <isotpi_send+0x18>
    3972:	00 d0       	rcall	.+0      	; 0x3974 <isotpi_send+0x1a>
    3974:	cd b7       	in	r28, 0x3d	; 61
    3976:	de b7       	in	r29, 0x3e	; 62
    3978:	b6 2e       	mov	r11, r22
    397a:	4a 01       	movw	r8, r20
	uint32_t arbitration_id = 0;
    397c:	19 82       	std	Y+1, r1	; 0x01
    397e:	1a 82       	std	Y+2, r1	; 0x02
    3980:	1b 82       	std	Y+3, r1	; 0x03
    3982:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    3984:	fc 01       	movw	r30, r24
    3986:	80 81       	ld	r24, Z
    3988:	91 81       	ldd	r25, Z+1	; 0x01
    398a:	9a 83       	std	Y+2, r25	; 0x02
    398c:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    398e:	49 81       	ldd	r20, Y+1	; 0x01
    3990:	5a 81       	ldd	r21, Y+2	; 0x02
    3992:	6b 81       	ldd	r22, Y+3	; 0x03
    3994:	7c 81       	ldd	r23, Y+4	; 0x04
    3996:	68 94       	set
    3998:	cc 24       	eor	r12, r12
    399a:	c7 f8       	bld	r12, 7
    399c:	d1 2c       	mov	r13, r1
    399e:	0f 2e       	mov	r0, r31
    39a0:	f4 ee       	ldi	r31, 0xE4	; 228
    39a2:	ef 2e       	mov	r14, r31
    39a4:	f6 e0       	ldi	r31, 0x06	; 6
    39a6:	ff 2e       	mov	r15, r31
    39a8:	f0 2d       	mov	r31, r0
    39aa:	00 e8       	ldi	r16, 0x80	; 128
    39ac:	10 e0       	ldi	r17, 0x00	; 0
    39ae:	24 e6       	ldi	r18, 0x64	; 100
    39b0:	36 e0       	ldi	r19, 0x06	; 6
    39b2:	84 e6       	ldi	r24, 0x64	; 100
    39b4:	97 e0       	ldi	r25, 0x07	; 7
    39b6:	ae de       	rcall	.-676    	; 0x3714 <isotp_init_link>
	return isotp_send(&g_link, payload, payload_size);
    39b8:	4b 2d       	mov	r20, r11
    39ba:	50 e0       	ldi	r21, 0x00	; 0
    39bc:	b4 01       	movw	r22, r8
    39be:	84 e6       	ldi	r24, 0x64	; 100
    39c0:	97 e0       	ldi	r25, 0x07	; 7
    39c2:	e7 dc       	rcall	.-1586   	; 0x3392 <isotp_send>
}
    39c4:	0f 90       	pop	r0
    39c6:	0f 90       	pop	r0
    39c8:	0f 90       	pop	r0
    39ca:	0f 90       	pop	r0
    39cc:	df 91       	pop	r29
    39ce:	cf 91       	pop	r28
    39d0:	1f 91       	pop	r17
    39d2:	0f 91       	pop	r16
    39d4:	ff 90       	pop	r15
    39d6:	ef 90       	pop	r14
    39d8:	df 90       	pop	r13
    39da:	cf 90       	pop	r12
    39dc:	bf 90       	pop	r11
    39de:	9f 90       	pop	r9
    39e0:	8f 90       	pop	r8
    39e2:	08 95       	ret

000039e4 <isotpi_receive>:

int isotpi_receive(can_id_t id, uint8_t payload_size , uint8_t payload[payload_size]){
    39e4:	6f 92       	push	r6
    39e6:	7f 92       	push	r7
    39e8:	8f 92       	push	r8
    39ea:	9f 92       	push	r9
    39ec:	bf 92       	push	r11
    39ee:	cf 92       	push	r12
    39f0:	df 92       	push	r13
    39f2:	ef 92       	push	r14
    39f4:	ff 92       	push	r15
    39f6:	0f 93       	push	r16
    39f8:	1f 93       	push	r17
    39fa:	cf 93       	push	r28
    39fc:	df 93       	push	r29
    39fe:	cd b7       	in	r28, 0x3d	; 61
    3a00:	de b7       	in	r29, 0x3e	; 62
    3a02:	2e 97       	sbiw	r28, 0x0e	; 14
    3a04:	0f b6       	in	r0, 0x3f	; 63
    3a06:	f8 94       	cli
    3a08:	de bf       	out	0x3e, r29	; 62
    3a0a:	0f be       	out	0x3f, r0	; 63
    3a0c:	cd bf       	out	0x3d, r28	; 61
    3a0e:	4c 01       	movw	r8, r24
    3a10:	b6 2e       	mov	r11, r22
    3a12:	3a 01       	movw	r6, r20
	uint32_t arbitration_id = 0;
    3a14:	19 82       	std	Y+1, r1	; 0x01
    3a16:	1a 82       	std	Y+2, r1	; 0x02
    3a18:	1b 82       	std	Y+3, r1	; 0x03
    3a1a:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    3a1c:	fc 01       	movw	r30, r24
    3a1e:	80 81       	ld	r24, Z
    3a20:	91 81       	ldd	r25, Z+1	; 0x01
    3a22:	9a 83       	std	Y+2, r25	; 0x02
    3a24:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    3a26:	49 81       	ldd	r20, Y+1	; 0x01
    3a28:	5a 81       	ldd	r21, Y+2	; 0x02
    3a2a:	6b 81       	ldd	r22, Y+3	; 0x03
    3a2c:	7c 81       	ldd	r23, Y+4	; 0x04
    3a2e:	68 94       	set
    3a30:	cc 24       	eor	r12, r12
    3a32:	c7 f8       	bld	r12, 7
    3a34:	d1 2c       	mov	r13, r1
    3a36:	0f 2e       	mov	r0, r31
    3a38:	f4 ee       	ldi	r31, 0xE4	; 228
    3a3a:	ef 2e       	mov	r14, r31
    3a3c:	f6 e0       	ldi	r31, 0x06	; 6
    3a3e:	ff 2e       	mov	r15, r31
    3a40:	f0 2d       	mov	r31, r0
    3a42:	00 e8       	ldi	r16, 0x80	; 128
    3a44:	10 e0       	ldi	r17, 0x00	; 0
    3a46:	24 e6       	ldi	r18, 0x64	; 100
    3a48:	36 e0       	ldi	r19, 0x06	; 6
    3a4a:	84 e6       	ldi	r24, 0x64	; 100
    3a4c:	97 e0       	ldi	r25, 0x07	; 7
    3a4e:	62 de       	rcall	.-828    	; 0x3714 <isotp_init_link>
	can_msg_t message;
	can_receive_message(0,id,zero_mask,message,8);
    3a50:	08 e0       	ldi	r16, 0x08	; 8
    3a52:	10 e0       	ldi	r17, 0x00	; 0
    3a54:	9e 01       	movw	r18, r28
    3a56:	2b 5f       	subi	r18, 0xFB	; 251
    3a58:	3f 4f       	sbci	r19, 0xFF	; 255
    3a5a:	4d ea       	ldi	r20, 0xAD	; 173
    3a5c:	52 e0       	ldi	r21, 0x02	; 2
    3a5e:	b4 01       	movw	r22, r8
    3a60:	80 e0       	ldi	r24, 0x00	; 0
    3a62:	0e 94 10 04 	call	0x820	; 0x820 <can_receive_message>
	isotp_on_can_message(&g_link, message, 8);
    3a66:	48 e0       	ldi	r20, 0x08	; 8
    3a68:	be 01       	movw	r22, r28
    3a6a:	6b 5f       	subi	r22, 0xFB	; 251
    3a6c:	7f 4f       	sbci	r23, 0xFF	; 255
    3a6e:	84 e6       	ldi	r24, 0x64	; 100
    3a70:	97 e0       	ldi	r25, 0x07	; 7
    3a72:	9c dc       	rcall	.-1736   	; 0x33ac <isotp_on_can_message>
	uint16_t out_size;
	return isotp_receive(&g_link, payload, payload_size, &out_size);
    3a74:	4b 2d       	mov	r20, r11
    3a76:	50 e0       	ldi	r21, 0x00	; 0
    3a78:	9e 01       	movw	r18, r28
    3a7a:	23 5f       	subi	r18, 0xF3	; 243
    3a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    3a7e:	b3 01       	movw	r22, r6
    3a80:	84 e6       	ldi	r24, 0x64	; 100
    3a82:	97 e0       	ldi	r25, 0x07	; 7
    3a84:	1f de       	rcall	.-962    	; 0x36c4 <isotp_receive>
}
    3a86:	2e 96       	adiw	r28, 0x0e	; 14
    3a88:	0f b6       	in	r0, 0x3f	; 63
    3a8a:	f8 94       	cli
    3a8c:	de bf       	out	0x3e, r29	; 62
    3a8e:	0f be       	out	0x3f, r0	; 63
    3a90:	cd bf       	out	0x3d, r28	; 61
    3a92:	df 91       	pop	r29
    3a94:	cf 91       	pop	r28
    3a96:	1f 91       	pop	r17
    3a98:	0f 91       	pop	r16
    3a9a:	ff 90       	pop	r15
    3a9c:	ef 90       	pop	r14
    3a9e:	df 90       	pop	r13
    3aa0:	cf 90       	pop	r12
    3aa2:	bf 90       	pop	r11
    3aa4:	9f 90       	pop	r9
    3aa6:	8f 90       	pop	r8
    3aa8:	7f 90       	pop	r7
    3aaa:	6f 90       	pop	r6
    3aac:	08 95       	ret

00003aae <isotpi_send_multi>:

int isotpi_send_multi(can_id_t id, uint8_t payload_size ,uint8_t payload[payload_size]){
    3aae:	8f 92       	push	r8
    3ab0:	9f 92       	push	r9
    3ab2:	bf 92       	push	r11
    3ab4:	cf 92       	push	r12
    3ab6:	df 92       	push	r13
    3ab8:	ef 92       	push	r14
    3aba:	ff 92       	push	r15
    3abc:	0f 93       	push	r16
    3abe:	1f 93       	push	r17
    3ac0:	cf 93       	push	r28
    3ac2:	df 93       	push	r29
    3ac4:	cd b7       	in	r28, 0x3d	; 61
    3ac6:	de b7       	in	r29, 0x3e	; 62
    3ac8:	2f 97       	sbiw	r28, 0x0f	; 15
    3aca:	0f b6       	in	r0, 0x3f	; 63
    3acc:	f8 94       	cli
    3ace:	de bf       	out	0x3e, r29	; 62
    3ad0:	0f be       	out	0x3f, r0	; 63
    3ad2:	cd bf       	out	0x3d, r28	; 61
    3ad4:	b6 2e       	mov	r11, r22
    3ad6:	4a 01       	movw	r8, r20
	uint32_t arbitration_id = 0;
    3ad8:	19 82       	std	Y+1, r1	; 0x01
    3ada:	1a 82       	std	Y+2, r1	; 0x02
    3adc:	1b 82       	std	Y+3, r1	; 0x03
    3ade:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    3ae0:	fc 01       	movw	r30, r24
    3ae2:	80 81       	ld	r24, Z
    3ae4:	91 81       	ldd	r25, Z+1	; 0x01
    3ae6:	9a 83       	std	Y+2, r25	; 0x02
    3ae8:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    3aea:	49 81       	ldd	r20, Y+1	; 0x01
    3aec:	5a 81       	ldd	r21, Y+2	; 0x02
    3aee:	6b 81       	ldd	r22, Y+3	; 0x03
    3af0:	7c 81       	ldd	r23, Y+4	; 0x04
    3af2:	68 94       	set
    3af4:	cc 24       	eor	r12, r12
    3af6:	c7 f8       	bld	r12, 7
    3af8:	d1 2c       	mov	r13, r1
    3afa:	0f 2e       	mov	r0, r31
    3afc:	f4 ee       	ldi	r31, 0xE4	; 228
    3afe:	ef 2e       	mov	r14, r31
    3b00:	f6 e0       	ldi	r31, 0x06	; 6
    3b02:	ff 2e       	mov	r15, r31
    3b04:	f0 2d       	mov	r31, r0
    3b06:	00 e8       	ldi	r16, 0x80	; 128
    3b08:	10 e0       	ldi	r17, 0x00	; 0
    3b0a:	24 e6       	ldi	r18, 0x64	; 100
    3b0c:	36 e0       	ldi	r19, 0x06	; 6
    3b0e:	84 e6       	ldi	r24, 0x64	; 100
    3b10:	97 e0       	ldi	r25, 0x07	; 7
    3b12:	00 de       	rcall	.-1024   	; 0x3714 <isotp_init_link>

	can_enable_receive(1,zero_mask);
    3b14:	6d ea       	ldi	r22, 0xAD	; 173
    3b16:	72 e0       	ldi	r23, 0x02	; 2
    3b18:	81 e0       	ldi	r24, 0x01	; 1
    3b1a:	0e 94 b8 03 	call	0x770	; 0x770 <can_enable_receive>
	/* And send message with isotp_send */
	isotp_send(&g_link, payload, payload_size);
    3b1e:	4b 2d       	mov	r20, r11
    3b20:	50 e0       	ldi	r21, 0x00	; 0
    3b22:	b4 01       	movw	r22, r8
    3b24:	84 e6       	ldi	r24, 0x64	; 100
    3b26:	97 e0       	ldi	r25, 0x07	; 7
    3b28:	34 dc       	rcall	.-1944   	; 0x3392 <isotp_send>
	can_msg_t message;
	can_id_t message_id;
	uint8_t len;
	uint8_t mobnr;
	
	mobnr = can_wait_for_receive();
    3b2a:	0e 94 d6 03 	call	0x7ac	; 0x7ac <can_wait_for_receive>
	
	can_receive_message2(mobnr, message_id, message, &len);
    3b2e:	9e 01       	movw	r18, r28
    3b30:	21 5f       	subi	r18, 0xF1	; 241
    3b32:	3f 4f       	sbci	r19, 0xFF	; 255
    3b34:	ae 01       	movw	r20, r28
    3b36:	4b 5f       	subi	r20, 0xFB	; 251
    3b38:	5f 4f       	sbci	r21, 0xFF	; 255
    3b3a:	be 01       	movw	r22, r28
    3b3c:	63 5f       	subi	r22, 0xF3	; 243
    3b3e:	7f 4f       	sbci	r23, 0xFF	; 255
    3b40:	90 e0       	ldi	r25, 0x00	; 0
    3b42:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <can_receive_message2>
	isotp_on_can_message(&g_link,message,len);
    3b46:	4f 85       	ldd	r20, Y+15	; 0x0f
    3b48:	be 01       	movw	r22, r28
    3b4a:	6b 5f       	subi	r22, 0xFB	; 251
    3b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    3b4e:	84 e6       	ldi	r24, 0x64	; 100
    3b50:	97 e0       	ldi	r25, 0x07	; 7
    3b52:	2c dc       	rcall	.-1960   	; 0x33ac <isotp_on_can_message>
	
	while(1){
		
		isotp_poll(&g_link);
    3b54:	84 e6       	ldi	r24, 0x64	; 100
    3b56:	97 e0       	ldi	r25, 0x07	; 7
    3b58:	fe dd       	rcall	.-1028   	; 0x3756 <isotp_poll>
    3b5a:	80 91 7f 07 	lds	r24, 0x077F	; 0x80077f <g_link+0x1b>
		
		if(g_link.send_status == ISOTP_SEND_STATUS_IDLE){
    3b5e:	81 11       	cpse	r24, r1
    3b60:	06 c0       	rjmp	.+12     	; 0x3b6e <isotpi_send_multi+0xc0>
    3b62:	81 e0       	ldi	r24, 0x01	; 1
			can_free_mob(1);
    3b64:	0e 94 cb 03 	call	0x796	; 0x796 <can_free_mob>
    3b68:	80 e0       	ldi	r24, 0x00	; 0
			return 0;
    3b6a:	90 e0       	ldi	r25, 0x00	; 0
    3b6c:	07 c0       	rjmp	.+14     	; 0x3b7c <isotpi_send_multi+0xce>
    3b6e:	82 30       	cpi	r24, 0x02	; 2
		}
		
		if(g_link.send_status == ISOTP_SEND_STATUS_ERROR){
    3b70:	89 f7       	brne	.-30     	; 0x3b54 <isotpi_send_multi+0xa6>
    3b72:	81 e0       	ldi	r24, 0x01	; 1
			can_free_mob(1);
    3b74:	0e 94 cb 03 	call	0x796	; 0x796 <can_free_mob>
    3b78:	81 e0       	ldi	r24, 0x01	; 1
			return 1;
    3b7a:	90 e0       	ldi	r25, 0x00	; 0
    3b7c:	2f 96       	adiw	r28, 0x0f	; 15
		}
		
	}
	
}
    3b7e:	0f b6       	in	r0, 0x3f	; 63
    3b80:	f8 94       	cli
    3b82:	de bf       	out	0x3e, r29	; 62
    3b84:	0f be       	out	0x3f, r0	; 63
    3b86:	cd bf       	out	0x3d, r28	; 61
    3b88:	df 91       	pop	r29
    3b8a:	cf 91       	pop	r28
    3b8c:	1f 91       	pop	r17
    3b8e:	0f 91       	pop	r16
    3b90:	ff 90       	pop	r15
    3b92:	ef 90       	pop	r14
    3b94:	df 90       	pop	r13
    3b96:	cf 90       	pop	r12
    3b98:	bf 90       	pop	r11
    3b9a:	9f 90       	pop	r9
    3b9c:	8f 90       	pop	r8
    3b9e:	08 95       	ret

00003ba0 <isotpi_receive_multi>:
    3ba0:	7f 92       	push	r7

int isotpi_receive_multi(can_id_t id_send, can_id_t id_rec, uint8_t payload_size, uint8_t payload[payload_size]){
    3ba2:	8f 92       	push	r8
    3ba4:	9f 92       	push	r9
    3ba6:	af 92       	push	r10
    3ba8:	bf 92       	push	r11
    3baa:	cf 92       	push	r12
    3bac:	df 92       	push	r13
    3bae:	ef 92       	push	r14
    3bb0:	ff 92       	push	r15
    3bb2:	0f 93       	push	r16
    3bb4:	1f 93       	push	r17
    3bb6:	cf 93       	push	r28
    3bb8:	df 93       	push	r29
    3bba:	cd b7       	in	r28, 0x3d	; 61
    3bbc:	de b7       	in	r29, 0x3e	; 62
    3bbe:	2f 97       	sbiw	r28, 0x0f	; 15
    3bc0:	0f b6       	in	r0, 0x3f	; 63
    3bc2:	f8 94       	cli
    3bc4:	de bf       	out	0x3e, r29	; 62
    3bc6:	0f be       	out	0x3f, r0	; 63
    3bc8:	cd bf       	out	0x3d, r28	; 61
    3bca:	4b 01       	movw	r8, r22
    3bcc:	74 2e       	mov	r7, r20
    3bce:	59 01       	movw	r10, r18
	uint32_t arbitration_id = 0;
    3bd0:	19 82       	std	Y+1, r1	; 0x01
    3bd2:	1a 82       	std	Y+2, r1	; 0x02
    3bd4:	1b 82       	std	Y+3, r1	; 0x03
    3bd6:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id_send,2);
    3bd8:	fc 01       	movw	r30, r24
    3bda:	80 81       	ld	r24, Z
    3bdc:	91 81       	ldd	r25, Z+1	; 0x01
    3bde:	9a 83       	std	Y+2, r25	; 0x02
    3be0:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link, arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf), g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    3be2:	49 81       	ldd	r20, Y+1	; 0x01
    3be4:	5a 81       	ldd	r21, Y+2	; 0x02
    3be6:	6b 81       	ldd	r22, Y+3	; 0x03
    3be8:	7c 81       	ldd	r23, Y+4	; 0x04
    3bea:	68 94       	set
    3bec:	cc 24       	eor	r12, r12
    3bee:	c7 f8       	bld	r12, 7
    3bf0:	d1 2c       	mov	r13, r1
    3bf2:	0f 2e       	mov	r0, r31
    3bf4:	f4 ee       	ldi	r31, 0xE4	; 228
    3bf6:	ef 2e       	mov	r14, r31
    3bf8:	f6 e0       	ldi	r31, 0x06	; 6
    3bfa:	ff 2e       	mov	r15, r31
    3bfc:	f0 2d       	mov	r31, r0
    3bfe:	00 e8       	ldi	r16, 0x80	; 128
    3c00:	10 e0       	ldi	r17, 0x00	; 0
    3c02:	24 e6       	ldi	r18, 0x64	; 100
    3c04:	36 e0       	ldi	r19, 0x06	; 6
    3c06:	84 e6       	ldi	r24, 0x64	; 100
    3c08:	97 e0       	ldi	r25, 0x07	; 7
    3c0a:	84 dd       	rcall	.-1272   	; 0x3714 <isotp_init_link>
  
    while(1){
		uint8_t j;
		for(j=0; j<14; j++){
    3c0c:	10 e0       	ldi	r17, 0x00	; 0
			can_enable_receive(j,zero_mask);
    3c0e:	6d ea       	ldi	r22, 0xAD	; 173
    3c10:	72 e0       	ldi	r23, 0x02	; 2
    3c12:	81 2f       	mov	r24, r17
    3c14:	0e 94 b8 03 	call	0x770	; 0x770 <can_enable_receive>
	memcpy(&arbitration_id,id_send,2);
	isotp_init_link(&g_link, arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf), g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
  
    while(1){
		uint8_t j;
		for(j=0; j<14; j++){
    3c18:	1f 5f       	subi	r17, 0xFF	; 255
    3c1a:	1e 30       	cpi	r17, 0x0E	; 14
    3c1c:	c1 f7       	brne	.-16     	; 0x3c0e <isotpi_receive_multi+0x6e>
		can_msg_t message;
		uint8_t size;
		
		while(1){
			
			uart_puts("test");
    3c1e:	88 ea       	ldi	r24, 0xA8	; 168
    3c20:	92 e0       	ldi	r25, 0x02	; 2
    3c22:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
			mobnr = can_wait_for_receive();
    3c26:	0e 94 d6 03 	call	0x7ac	; 0x7ac <can_wait_for_receive>
			can_receive_message2(mobnr, id_rec, message, &size);
    3c2a:	9e 01       	movw	r18, r28
    3c2c:	21 5f       	subi	r18, 0xF1	; 241
    3c2e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c30:	ae 01       	movw	r20, r28
    3c32:	4b 5f       	subi	r20, 0xFB	; 251
    3c34:	5f 4f       	sbci	r21, 0xFF	; 255
    3c36:	b4 01       	movw	r22, r8
    3c38:	90 e0       	ldi	r25, 0x00	; 0
    3c3a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <can_receive_message2>
			isotp_on_can_message(&g_link, message, size);
    3c3e:	4f 85       	ldd	r20, Y+15	; 0x0f
    3c40:	be 01       	movw	r22, r28
    3c42:	6b 5f       	subi	r22, 0xFB	; 251
    3c44:	7f 4f       	sbci	r23, 0xFF	; 255
    3c46:	84 e6       	ldi	r24, 0x64	; 100
    3c48:	97 e0       	ldi	r25, 0x07	; 7
    3c4a:	b0 db       	rcall	.-2208   	; 0x33ac <isotp_on_can_message>
        
			switch(g_link.receive_status){
    3c4c:	80 91 94 07 	lds	r24, 0x0794	; 0x800794 <g_link+0x30>
    3c50:	81 30       	cpi	r24, 0x01	; 1
    3c52:	29 f3       	breq	.-54     	; 0x3c1e <isotpi_receive_multi+0x7e>
    3c54:	82 30       	cpi	r24, 0x02	; 2
    3c56:	19 f7       	brne	.-58     	; 0x3c1e <isotpi_receive_multi+0x7e>
    3c58:	10 e0       	ldi	r17, 0x00	; 0
				case ISOTP_RECEIVE_STATUS_INPROGRESS :
				break;
				case ISOTP_RECEIVE_STATUS_FULL :
				for(j=0; j<14; j++){
					can_free_mob(j);
    3c5a:	81 2f       	mov	r24, r17
    3c5c:	0e 94 cb 03 	call	0x796	; 0x796 <can_free_mob>
        
			switch(g_link.receive_status){
				case ISOTP_RECEIVE_STATUS_INPROGRESS :
				break;
				case ISOTP_RECEIVE_STATUS_FULL :
				for(j=0; j<14; j++){
    3c60:	1f 5f       	subi	r17, 0xFF	; 255
    3c62:	1e 30       	cpi	r17, 0x0E	; 14
    3c64:	d1 f7       	brne	.-12     	; 0x3c5a <isotpi_receive_multi+0xba>
					can_free_mob(j);
				}
				uint16_t out_size;
				uint8_t ret;
				return isotp_receive(&g_link, payload, payload_size, &out_size);
    3c66:	47 2d       	mov	r20, r7
    3c68:	50 e0       	ldi	r21, 0x00	; 0
    3c6a:	9e 01       	movw	r18, r28
    3c6c:	23 5f       	subi	r18, 0xF3	; 243
    3c6e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c70:	b5 01       	movw	r22, r10
    3c72:	84 e6       	ldi	r24, 0x64	; 100
    3c74:	97 e0       	ldi	r25, 0x07	; 7
    3c76:	26 dd       	rcall	.-1460   	; 0x36c4 <isotp_receive>
			}
		} 
	}
	
}
    3c78:	2f 96       	adiw	r28, 0x0f	; 15
    3c7a:	0f b6       	in	r0, 0x3f	; 63
    3c7c:	f8 94       	cli
    3c7e:	de bf       	out	0x3e, r29	; 62
    3c80:	0f be       	out	0x3f, r0	; 63
    3c82:	cd bf       	out	0x3d, r28	; 61
    3c84:	df 91       	pop	r29
    3c86:	cf 91       	pop	r28
    3c88:	1f 91       	pop	r17
    3c8a:	0f 91       	pop	r16
    3c8c:	ff 90       	pop	r15
    3c8e:	ef 90       	pop	r14
    3c90:	df 90       	pop	r13
    3c92:	cf 90       	pop	r12
    3c94:	bf 90       	pop	r11
    3c96:	af 90       	pop	r10
    3c98:	9f 90       	pop	r9
    3c9a:	8f 90       	pop	r8
    3c9c:	7f 90       	pop	r7
    3c9e:	08 95       	ret

00003ca0 <get_public_key>:
	}
	return 1;
}

static void get_public_key(uint8_t role, uint8_t public[64]){
	switch (role)
    3ca0:	82 30       	cpi	r24, 0x02	; 2
    3ca2:	b9 f0       	breq	.+46     	; 0x3cd2 <get_public_key+0x32>
    3ca4:	28 f4       	brcc	.+10     	; 0x3cb0 <get_public_key+0x10>
    3ca6:	88 23       	and	r24, r24
    3ca8:	41 f0       	breq	.+16     	; 0x3cba <get_public_key+0x1a>
    3caa:	81 30       	cpi	r24, 0x01	; 1
    3cac:	61 f0       	breq	.+24     	; 0x3cc6 <get_public_key+0x26>
    3cae:	08 95       	ret
    3cb0:	83 30       	cpi	r24, 0x03	; 3
    3cb2:	a9 f0       	breq	.+42     	; 0x3cde <get_public_key+0x3e>
    3cb4:	84 30       	cpi	r24, 0x04	; 4
    3cb6:	c9 f0       	breq	.+50     	; 0x3cea <get_public_key+0x4a>
    3cb8:	08 95       	ret
	{
		case ADMIN_ROLE :
		hex_to_bytes(public_key1_hex, 128, public);
    3cba:	ab 01       	movw	r20, r22
    3cbc:	60 e8       	ldi	r22, 0x80	; 128
    3cbe:	8f ec       	ldi	r24, 0xCF	; 207
    3cc0:	95 e0       	ldi	r25, 0x05	; 5
    3cc2:	2a ca       	rjmp	.-2988   	; 0x3118 <hex_to_bytes>
		break;
    3cc4:	08 95       	ret
		case OEM_ROLE :
		hex_to_bytes(public_key2_hex, 128, public);
    3cc6:	ab 01       	movw	r20, r22
    3cc8:	60 e8       	ldi	r22, 0x80	; 128
    3cca:	8f e4       	ldi	r24, 0x4F	; 79
    3ccc:	95 e0       	ldi	r25, 0x05	; 5
    3cce:	24 ca       	rjmp	.-3000   	; 0x3118 <hex_to_bytes>
		break;
    3cd0:	08 95       	ret
		case POLICEMAN_ROLE :
		hex_to_bytes(public_key3_hex, 128, public);
    3cd2:	ab 01       	movw	r20, r22
    3cd4:	60 e8       	ldi	r22, 0x80	; 128
    3cd6:	8f ec       	ldi	r24, 0xCF	; 207
    3cd8:	94 e0       	ldi	r25, 0x04	; 4
    3cda:	1e ca       	rjmp	.-3012   	; 0x3118 <hex_to_bytes>
		break;
    3cdc:	08 95       	ret
		case REPAIRMAN_ROLE :
		hex_to_bytes(public_key4_hex, 128, public);
    3cde:	ab 01       	movw	r20, r22
    3ce0:	60 e8       	ldi	r22, 0x80	; 128
    3ce2:	8f e4       	ldi	r24, 0x4F	; 79
    3ce4:	94 e0       	ldi	r25, 0x04	; 4
    3ce6:	18 ca       	rjmp	.-3024   	; 0x3118 <hex_to_bytes>
		break;
    3ce8:	08 95       	ret
		case OWNER_ROLE :
		hex_to_bytes(public_key5_hex, 128, public);
    3cea:	ab 01       	movw	r20, r22
    3cec:	60 e8       	ldi	r22, 0x80	; 128
    3cee:	8f ec       	ldi	r24, 0xCF	; 207
    3cf0:	93 e0       	ldi	r25, 0x03	; 3
    3cf2:	12 ca       	rjmp	.-3036   	; 0x3118 <hex_to_bytes>
    3cf4:	08 95       	ret

00003cf6 <RNG>:
	PORTE = 1 << PE4 | 1 << PE5 | 1 << PE6 | 1 << PE7;
	EICRB = 0x00;
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
}

static int RNG(uint8_t *dest, unsigned size) {
    3cf6:	ff 92       	push	r15
    3cf8:	0f 93       	push	r16
    3cfa:	1f 93       	push	r17
    3cfc:	cf 93       	push	r28
    3cfe:	df 93       	push	r29
    3d00:	ec 01       	movw	r28, r24
    3d02:	8b 01       	movw	r16, r22
	while(size){
    3d04:	67 2b       	or	r22, r23
    3d06:	51 f0       	breq	.+20     	; 0x3d1c <RNG+0x26>
		uint8_t val = (uint8_t) rand() + rand();
    3d08:	0e 94 15 34 	call	0x682a	; 0x682a <rand>
    3d0c:	f8 2e       	mov	r15, r24
    3d0e:	0e 94 15 34 	call	0x682a	; 0x682a <rand>
		*dest = val;
    3d12:	8f 0d       	add	r24, r15
    3d14:	89 93       	st	Y+, r24
		++dest;
		--size;
    3d16:	01 50       	subi	r16, 0x01	; 1
    3d18:	11 09       	sbc	r17, r1
	EICRB = 0x00;
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
}

static int RNG(uint8_t *dest, unsigned size) {
	while(size){
    3d1a:	b1 f7       	brne	.-20     	; 0x3d08 <RNG+0x12>
		*dest = val;
		++dest;
		--size;
	}
	return 1;
}
    3d1c:	81 e0       	ldi	r24, 0x01	; 1
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	df 91       	pop	r29
    3d22:	cf 91       	pop	r28
    3d24:	1f 91       	pop	r17
    3d26:	0f 91       	pop	r16
    3d28:	ff 90       	pop	r15
    3d2a:	08 95       	ret

00003d2c <buttons_init>:

volatile state_t state = IDLE_S;
volatile event_t event = NULL_E;

void buttons_init(){
	DDRE = 0x00;
    3d2c:	1d b8       	out	0x0d, r1	; 13
	PORTE = 1 << PE4 | 1 << PE5 | 1 << PE6 | 1 << PE7;
    3d2e:	80 ef       	ldi	r24, 0xF0	; 240
    3d30:	8e b9       	out	0x0e, r24	; 14
	EICRB = 0x00;
    3d32:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
    3d36:	8d bb       	out	0x1d, r24	; 29
    3d38:	08 95       	ret

00003d3a <verify_signature>:
		hex_to_bytes(public_key5_hex, 128, public);
		break;
	}
}

int verify_signature(uint8_t challenge[64], uint8_t signature[64], role_t role){
    3d3a:	af 92       	push	r10
    3d3c:	bf 92       	push	r11
    3d3e:	df 92       	push	r13
    3d40:	ef 92       	push	r14
    3d42:	ff 92       	push	r15
    3d44:	0f 93       	push	r16
    3d46:	1f 93       	push	r17
    3d48:	cf 93       	push	r28
    3d4a:	df 93       	push	r29
    3d4c:	cd b7       	in	r28, 0x3d	; 61
    3d4e:	de b7       	in	r29, 0x3e	; 62
    3d50:	c0 58       	subi	r28, 0x80	; 128
    3d52:	d1 09       	sbc	r29, r1
    3d54:	0f b6       	in	r0, 0x3f	; 63
    3d56:	f8 94       	cli
    3d58:	de bf       	out	0x3e, r29	; 62
    3d5a:	0f be       	out	0x3f, r0	; 63
    3d5c:	cd bf       	out	0x3d, r28	; 61
    3d5e:	5c 01       	movw	r10, r24
    3d60:	7b 01       	movw	r14, r22
    3d62:	d4 2e       	mov	r13, r20
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    3d64:	0e 94 60 14 	call	0x28c0	; 0x28c0 <uECC_secp256r1>
    3d68:	8c 01       	movw	r16, r24
	int result;
	uint8_t hash[64];
	sha512(hash, challenge,512);
    3d6a:	20 e0       	ldi	r18, 0x00	; 0
    3d6c:	32 e0       	ldi	r19, 0x02	; 2
    3d6e:	40 e0       	ldi	r20, 0x00	; 0
    3d70:	50 e0       	ldi	r21, 0x00	; 0
    3d72:	b5 01       	movw	r22, r10
    3d74:	ce 01       	movw	r24, r28
    3d76:	01 96       	adiw	r24, 0x01	; 1
    3d78:	0e 94 67 31 	call	0x62ce	; 0x62ce <sha512>
	uint8_t public[64];
	get_public_key(role, public);
    3d7c:	be 01       	movw	r22, r28
    3d7e:	6f 5b       	subi	r22, 0xBF	; 191
    3d80:	7f 4f       	sbci	r23, 0xFF	; 255
    3d82:	8d 2d       	mov	r24, r13
    3d84:	8d df       	rcall	.-230    	; 0x3ca0 <get_public_key>
	result = uECC_verify(public, hash, 64, signature, curve);
    3d86:	97 01       	movw	r18, r14
    3d88:	40 e4       	ldi	r20, 0x40	; 64
    3d8a:	50 e0       	ldi	r21, 0x00	; 0
    3d8c:	be 01       	movw	r22, r28
    3d8e:	6f 5f       	subi	r22, 0xFF	; 255
    3d90:	7f 4f       	sbci	r23, 0xFF	; 255
    3d92:	ce 01       	movw	r24, r28
    3d94:	8f 5b       	subi	r24, 0xBF	; 191
    3d96:	9f 4f       	sbci	r25, 0xFF	; 255
    3d98:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <uECC_verify>
	return result;
}
    3d9c:	c0 58       	subi	r28, 0x80	; 128
    3d9e:	df 4f       	sbci	r29, 0xFF	; 255
    3da0:	0f b6       	in	r0, 0x3f	; 63
    3da2:	f8 94       	cli
    3da4:	de bf       	out	0x3e, r29	; 62
    3da6:	0f be       	out	0x3f, r0	; 63
    3da8:	cd bf       	out	0x3d, r28	; 61
    3daa:	df 91       	pop	r29
    3dac:	cf 91       	pop	r28
    3dae:	1f 91       	pop	r17
    3db0:	0f 91       	pop	r16
    3db2:	ff 90       	pop	r15
    3db4:	ef 90       	pop	r14
    3db6:	df 90       	pop	r13
    3db8:	bf 90       	pop	r11
    3dba:	af 90       	pop	r10
    3dbc:	08 95       	ret

00003dbe <authenticated_key_agreement>:


int authenticated_key_agreement(role_t role, uint8_t *dest){
    3dbe:	cf 92       	push	r12
    3dc0:	df 92       	push	r13
    3dc2:	ef 92       	push	r14
    3dc4:	ff 92       	push	r15
    3dc6:	0f 93       	push	r16
    3dc8:	1f 93       	push	r17
    3dca:	cf 93       	push	r28
    3dcc:	df 93       	push	r29
    3dce:	cd b7       	in	r28, 0x3d	; 61
    3dd0:	de b7       	in	r29, 0x3e	; 62
    3dd2:	c3 52       	subi	r28, 0x23	; 35
    3dd4:	d1 40       	sbci	r29, 0x01	; 1
    3dd6:	0f b6       	in	r0, 0x3f	; 63
    3dd8:	f8 94       	cli
    3dda:	de bf       	out	0x3e, r29	; 62
    3ddc:	0f be       	out	0x3f, r0	; 63
    3dde:	cd bf       	out	0x3d, r28	; 61
    3de0:	18 2f       	mov	r17, r24
    3de2:	6b 01       	movw	r12, r22
	PORTB = _BV(PB2);
    3de4:	04 e0       	ldi	r16, 0x04	; 4
    3de6:	05 b9       	out	0x05, r16	; 5
	
	//Start protocol by calculating new private/public key pair for shared secret establishment.
	volatile uint8_t result;
	uart_puts("authentication started");
    3de8:	8f ea       	ldi	r24, 0xAF	; 175
    3dea:	92 e0       	ldi	r25, 0x02	; 2
    3dec:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	uECC_set_rng(RNG);
    3df0:	8b e7       	ldi	r24, 0x7B	; 123
    3df2:	9e e1       	ldi	r25, 0x1E	; 30
    3df4:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <uECC_set_rng>
	volatile uint8_t private2[32];
	volatile uint8_t public2[64];
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    3df8:	0e 94 60 14 	call	0x28c0	; 0x28c0 <uECC_secp256r1>
    3dfc:	7c 01       	movw	r14, r24
	result = uECC_make_key(public2, private2, curve);
    3dfe:	ac 01       	movw	r20, r24
    3e00:	be 01       	movw	r22, r28
    3e02:	6e 5f       	subi	r22, 0xFE	; 254
    3e04:	7f 4f       	sbci	r23, 0xFF	; 255
    3e06:	ce 01       	movw	r24, r28
    3e08:	82 96       	adiw	r24, 0x22	; 34
    3e0a:	0e 94 63 14 	call	0x28c6	; 0x28c6 <uECC_make_key>
    3e0e:	89 83       	std	Y+1, r24	; 0x01
	uint8_t secret_unhashed[32];
	uint8_t public[64];
	get_public_key(role, public);
    3e10:	be 01       	movw	r22, r28
    3e12:	6e 57       	subi	r22, 0x7E	; 126
    3e14:	7f 4f       	sbci	r23, 0xFF	; 255
    3e16:	81 2f       	mov	r24, r17
    3e18:	43 df       	rcall	.-378    	; 0x3ca0 <get_public_key>
	
	//Send new public key.
	isotpi_send_multi(default_id, 64, public2);
    3e1a:	ae 01       	movw	r20, r28
    3e1c:	4e 5d       	subi	r20, 0xDE	; 222
    3e1e:	5f 4f       	sbci	r21, 0xFF	; 255
    3e20:	60 e4       	ldi	r22, 0x40	; 64
    3e22:	70 e0       	ldi	r23, 0x00	; 0
    3e24:	8d ec       	ldi	r24, 0xCD	; 205
    3e26:	93 e0       	ldi	r25, 0x03	; 3
    3e28:	42 de       	rcall	.-892    	; 0x3aae <isotpi_send_multi>
	uart_puts("public key sent");
    3e2a:	86 ec       	ldi	r24, 0xC6	; 198
    3e2c:	92 e0       	ldi	r25, 0x02	; 2
    3e2e:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	
	PORTB = 0x00;  
    3e32:	15 b8       	out	0x05, r1	; 5
	//PORTB = _BV(PB3);
	
	//Wait for Signature.
	uint8_t signature[64];
	can_id_t idtmp;
	isotpi_receive_multi(default_id, idtmp, 64, signature);
    3e34:	9e 01       	movw	r18, r28
    3e36:	2e 53       	subi	r18, 0x3E	; 62
    3e38:	3f 4f       	sbci	r19, 0xFF	; 255
    3e3a:	40 e4       	ldi	r20, 0x40	; 64
    3e3c:	be 01       	movw	r22, r28
    3e3e:	6e 5f       	subi	r22, 0xFE	; 254
    3e40:	7e 4f       	sbci	r23, 0xFE	; 254
    3e42:	8d ec       	ldi	r24, 0xCD	; 205
    3e44:	93 e0       	ldi	r25, 0x03	; 3
    3e46:	ac de       	rcall	.-680    	; 0x3ba0 <isotpi_receive_multi>
	uart_puts("signature_received");
    3e48:	86 ed       	ldi	r24, 0xD6	; 214
    3e4a:	92 e0       	ldi	r25, 0x02	; 2
    3e4c:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	
	//PORTB = 0x00;
	PORTB = _BV(PB2);
    3e50:	05 b9       	out	0x05, r16	; 5
	
	uint8_t secret[32];
	
	//Verify Signature.
	result = verify_signature(public2, signature, role);
    3e52:	41 2f       	mov	r20, r17
    3e54:	be 01       	movw	r22, r28
    3e56:	6e 53       	subi	r22, 0x3E	; 62
    3e58:	7f 4f       	sbci	r23, 0xFF	; 255
    3e5a:	ce 01       	movw	r24, r28
    3e5c:	82 96       	adiw	r24, 0x22	; 34
    3e5e:	6d df       	rcall	.-294    	; 0x3d3a <verify_signature>
    3e60:	89 83       	std	Y+1, r24	; 0x01
	
	PORTB = 0x00;
    3e62:	15 b8       	out	0x05, r1	; 5
	can_msg_t ack;
	if(result==1) {
    3e64:	89 81       	ldd	r24, Y+1	; 0x01
    3e66:	81 30       	cpi	r24, 0x01	; 1
    3e68:	81 f5       	brne	.+96     	; 0x3eca <authenticated_key_agreement+0x10c>
		uart_puts("signature is valid!");
    3e6a:	89 ee       	ldi	r24, 0xE9	; 233
    3e6c:	92 e0       	ldi	r25, 0x02	; 2
    3e6e:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
		
		PORTB = _BV(PB2);
    3e72:	84 e0       	ldi	r24, 0x04	; 4
    3e74:	85 b9       	out	0x05, r24	; 5
		
		//calculate shared secret.
		result = uECC_shared_secret(public, private2, secret_unhashed, curve);
    3e76:	97 01       	movw	r18, r14
    3e78:	ae 01       	movw	r20, r28
    3e7a:	4e 59       	subi	r20, 0x9E	; 158
    3e7c:	5f 4f       	sbci	r21, 0xFF	; 255
    3e7e:	be 01       	movw	r22, r28
    3e80:	6e 5f       	subi	r22, 0xFE	; 254
    3e82:	7f 4f       	sbci	r23, 0xFF	; 255
    3e84:	ce 01       	movw	r24, r28
    3e86:	8e 57       	subi	r24, 0x7E	; 126
    3e88:	9f 4f       	sbci	r25, 0xFF	; 255
    3e8a:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <uECC_shared_secret>
    3e8e:	89 83       	std	Y+1, r24	; 0x01
		uint32_t len = 256;
		sha256(secret, secret_unhashed, len);
    3e90:	20 e0       	ldi	r18, 0x00	; 0
    3e92:	31 e0       	ldi	r19, 0x01	; 1
    3e94:	40 e0       	ldi	r20, 0x00	; 0
    3e96:	50 e0       	ldi	r21, 0x00	; 0
    3e98:	be 01       	movw	r22, r28
    3e9a:	6e 59       	subi	r22, 0x9E	; 158
    3e9c:	7f 4f       	sbci	r23, 0xFF	; 255
    3e9e:	ce 01       	movw	r24, r28
    3ea0:	8c 5f       	subi	r24, 0xFC	; 252
    3ea2:	9e 4f       	sbci	r25, 0xFE	; 254
    3ea4:	c6 d3       	rcall	.+1932   	; 0x4632 <sha256>
		
		isotpi_send(default_id, 7, ack_pos);
    3ea6:	43 ec       	ldi	r20, 0xC3	; 195
    3ea8:	53 e0       	ldi	r21, 0x03	; 3
    3eaa:	67 e0       	ldi	r22, 0x07	; 7
    3eac:	8d ec       	ldi	r24, 0xCD	; 205
    3eae:	93 e0       	ldi	r25, 0x03	; 3
    3eb0:	54 dd       	rcall	.-1368   	; 0x395a <isotpi_send>
		uart_puts("signature is false!");
		
		isotpi_send(default_id, 7, ack_neg);
		return 1;
	}
	memcpy(dest,secret,32); 
    3eb2:	80 e2       	ldi	r24, 0x20	; 32
    3eb4:	fe 01       	movw	r30, r28
    3eb6:	ec 5f       	subi	r30, 0xFC	; 252
    3eb8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eba:	d6 01       	movw	r26, r12
    3ebc:	01 90       	ld	r0, Z+
    3ebe:	0d 92       	st	X+, r0
    3ec0:	8a 95       	dec	r24
    3ec2:	e1 f7       	brne	.-8      	; 0x3ebc <authenticated_key_agreement+0xfe>
	return 0;
    3ec4:	80 e0       	ldi	r24, 0x00	; 0
    3ec6:	90 e0       	ldi	r25, 0x00	; 0
    3ec8:	0c c0       	rjmp	.+24     	; 0x3ee2 <authenticated_key_agreement+0x124>
		uint32_t len = 256;
		sha256(secret, secret_unhashed, len);
		
		isotpi_send(default_id, 7, ack_pos);
	}else{
		uart_puts("signature is false!");
    3eca:	8d ef       	ldi	r24, 0xFD	; 253
    3ecc:	92 e0       	ldi	r25, 0x02	; 2
    3ece:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
		
		isotpi_send(default_id, 7, ack_neg);
    3ed2:	4b eb       	ldi	r20, 0xBB	; 187
    3ed4:	53 e0       	ldi	r21, 0x03	; 3
    3ed6:	67 e0       	ldi	r22, 0x07	; 7
    3ed8:	8d ec       	ldi	r24, 0xCD	; 205
    3eda:	93 e0       	ldi	r25, 0x03	; 3
    3edc:	3e dd       	rcall	.-1412   	; 0x395a <isotpi_send>
		return 1;
    3ede:	81 e0       	ldi	r24, 0x01	; 1
    3ee0:	90 e0       	ldi	r25, 0x00	; 0
	}
	memcpy(dest,secret,32); 
	return 0;
}
    3ee2:	cd 5d       	subi	r28, 0xDD	; 221
    3ee4:	de 4f       	sbci	r29, 0xFE	; 254
    3ee6:	0f b6       	in	r0, 0x3f	; 63
    3ee8:	f8 94       	cli
    3eea:	de bf       	out	0x3e, r29	; 62
    3eec:	0f be       	out	0x3f, r0	; 63
    3eee:	cd bf       	out	0x3d, r28	; 61
    3ef0:	df 91       	pop	r29
    3ef2:	cf 91       	pop	r28
    3ef4:	1f 91       	pop	r17
    3ef6:	0f 91       	pop	r16
    3ef8:	ff 90       	pop	r15
    3efa:	ef 90       	pop	r14
    3efc:	df 90       	pop	r13
    3efe:	cf 90       	pop	r12
    3f00:	08 95       	ret

00003f02 <forward_message>:
	}
	return 0;
	
}

void forward_message(can_msg_t msg, can_id_t id){
    3f02:	ef 92       	push	r14
    3f04:	ff 92       	push	r15
    3f06:	0f 93       	push	r16
    3f08:	1f 93       	push	r17
    3f0a:	cf 93       	push	r28
    3f0c:	df 93       	push	r29
    3f0e:	cd b7       	in	r28, 0x3d	; 61
    3f10:	de b7       	in	r29, 0x3e	; 62
    3f12:	64 97       	sbiw	r28, 0x14	; 20
    3f14:	0f b6       	in	r0, 0x3f	; 63
    3f16:	f8 94       	cli
    3f18:	de bf       	out	0x3e, r29	; 62
    3f1a:	0f be       	out	0x3f, r0	; 63
    3f1c:	cd bf       	out	0x3d, r28	; 61
    3f1e:	7c 01       	movw	r14, r24
    3f20:	8b 01       	movw	r16, r22
	char idl[2];
	char idh[2];
	bytes_to_hex(id, 1, idl);
    3f22:	ae 01       	movw	r20, r28
    3f24:	4f 5f       	subi	r20, 0xFF	; 255
    3f26:	5f 4f       	sbci	r21, 0xFF	; 255
    3f28:	61 e0       	ldi	r22, 0x01	; 1
    3f2a:	c8 01       	movw	r24, r16
    3f2c:	d5 d8       	rcall	.-3670   	; 0x30d8 <bytes_to_hex>
	id++;
	bytes_to_hex(id, 1, idh);
    3f2e:	ae 01       	movw	r20, r28
    3f30:	4d 5f       	subi	r20, 0xFD	; 253
    3f32:	5f 4f       	sbci	r21, 0xFF	; 255
    3f34:	61 e0       	ldi	r22, 0x01	; 1
    3f36:	c8 01       	movw	r24, r16
    3f38:	01 96       	adiw	r24, 0x01	; 1
    3f3a:	ce d8       	rcall	.-3684   	; 0x30d8 <bytes_to_hex>
	uart_puts("---MESSAGE FORWARDED ONTO NETWORK---");
    3f3c:	81 e1       	ldi	r24, 0x11	; 17
    3f3e:	93 e0       	ldi	r25, 0x03	; 3
    3f40:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	uart_puts("IDL:");
    3f44:	86 e3       	ldi	r24, 0x36	; 54
    3f46:	93 e0       	ldi	r25, 0x03	; 3
    3f48:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	uart_putd(idl,2);
    3f4c:	62 e0       	ldi	r22, 0x02	; 2
    3f4e:	ce 01       	movw	r24, r28
    3f50:	01 96       	adiw	r24, 0x01	; 1
    3f52:	0e 94 2b 32 	call	0x6456	; 0x6456 <uart_putd>
	uart_puts("IDH:");
    3f56:	8b e3       	ldi	r24, 0x3B	; 59
    3f58:	93 e0       	ldi	r25, 0x03	; 3
    3f5a:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	uart_putd(idh,2);
    3f5e:	62 e0       	ldi	r22, 0x02	; 2
    3f60:	ce 01       	movw	r24, r28
    3f62:	03 96       	adiw	r24, 0x03	; 3
    3f64:	0e 94 2b 32 	call	0x6456	; 0x6456 <uart_putd>
	char msghex[16];
	bytes_to_hex(msg, 8, msghex);
    3f68:	ae 01       	movw	r20, r28
    3f6a:	4b 5f       	subi	r20, 0xFB	; 251
    3f6c:	5f 4f       	sbci	r21, 0xFF	; 255
    3f6e:	68 e0       	ldi	r22, 0x08	; 8
    3f70:	c7 01       	movw	r24, r14
    3f72:	b2 d8       	rcall	.-3740   	; 0x30d8 <bytes_to_hex>
	uart_puts("MESSAGE:");
    3f74:	80 e4       	ldi	r24, 0x40	; 64
    3f76:	93 e0       	ldi	r25, 0x03	; 3
    3f78:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	uart_putd(msghex, 16);
    3f7c:	60 e1       	ldi	r22, 0x10	; 16
    3f7e:	ce 01       	movw	r24, r28
    3f80:	05 96       	adiw	r24, 0x05	; 5
    3f82:	0e 94 2b 32 	call	0x6456	; 0x6456 <uart_putd>
	uart_puts("------------------------------------");
    3f86:	89 e4       	ldi	r24, 0x49	; 73
    3f88:	93 e0       	ldi	r25, 0x03	; 3
    3f8a:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
}
    3f8e:	64 96       	adiw	r28, 0x14	; 20
    3f90:	0f b6       	in	r0, 0x3f	; 63
    3f92:	f8 94       	cli
    3f94:	de bf       	out	0x3e, r29	; 62
    3f96:	0f be       	out	0x3f, r0	; 63
    3f98:	cd bf       	out	0x3d, r28	; 61
    3f9a:	df 91       	pop	r29
    3f9c:	cf 91       	pop	r28
    3f9e:	1f 91       	pop	r17
    3fa0:	0f 91       	pop	r16
    3fa2:	ff 90       	pop	r15
    3fa4:	ef 90       	pop	r14
    3fa6:	08 95       	ret

00003fa8 <message_authentication>:
	}
	memcpy(dest,secret,32); 
	return 0;
}

int message_authentication(role_t role, uint8_t	secret[32]){
    3fa8:	cf 93       	push	r28
    3faa:	df 93       	push	r29
    3fac:	cd b7       	in	r28, 0x3d	; 61
    3fae:	de b7       	in	r29, 0x3e	; 62
    3fb0:	eb 97       	sbiw	r28, 0x3b	; 59
    3fb2:	0f b6       	in	r0, 0x3f	; 63
    3fb4:	f8 94       	cli
    3fb6:	de bf       	out	0x3e, r29	; 62
    3fb8:	0f be       	out	0x3f, r0	; 63
    3fba:	cd bf       	out	0x3d, r28	; 61
    3fbc:	c8 2e       	mov	r12, r24
    3fbe:	5b 01       	movw	r10, r22
		uint8_t len;
		// Receive the message that the tester wants to send to the network.
		can_receive_message(0, default_id, zero_mask, message, &len);
		can_get_id(0, id);
		
		PORTB = _BV(PB2);
    3fc0:	68 94       	set
    3fc2:	dd 24       	eor	r13, r13
    3fc4:	d2 f8       	bld	r13, 2
	//---Every iteration of this loop equals 1 message being authenticated using the shared secret---.
	while(1){
		can_id_t id;
		can_msg_t message;
		
		PORTB = 0x00;
    3fc6:	15 b8       	out	0x05, r1	; 5
		
		uint8_t len;
		// Receive the message that the tester wants to send to the network.
		can_receive_message(0, default_id, zero_mask, message, &len);
    3fc8:	8e 01       	movw	r16, r28
    3fca:	05 5c       	subi	r16, 0xC5	; 197
    3fcc:	1f 4f       	sbci	r17, 0xFF	; 255
    3fce:	9e 01       	movw	r18, r28
    3fd0:	2f 5c       	subi	r18, 0xCF	; 207
    3fd2:	3f 4f       	sbci	r19, 0xFF	; 255
    3fd4:	4b ec       	ldi	r20, 0xCB	; 203
    3fd6:	53 e0       	ldi	r21, 0x03	; 3
    3fd8:	6d ec       	ldi	r22, 0xCD	; 205
    3fda:	73 e0       	ldi	r23, 0x03	; 3
    3fdc:	80 e0       	ldi	r24, 0x00	; 0
    3fde:	0e 94 10 04 	call	0x820	; 0x820 <can_receive_message>
		can_get_id(0, id);
    3fe2:	be 01       	movw	r22, r28
    3fe4:	67 5c       	subi	r22, 0xC7	; 199
    3fe6:	7f 4f       	sbci	r23, 0xFF	; 255
    3fe8:	80 e0       	ldi	r24, 0x00	; 0
    3fea:	0e 94 ca 02 	call	0x594	; 0x594 <can_get_id>
		
		PORTB = _BV(PB2);
    3fee:	d5 b8       	out	0x05, r13	; 5
		
		//Check the Permission.
		if(check_permission(id, role) == 0){
    3ff0:	6c 2d       	mov	r22, r12
    3ff2:	ce 01       	movw	r24, r28
    3ff4:	c9 96       	adiw	r24, 0x39	; 57
    3ff6:	a8 d1       	rcall	.+848    	; 0x4348 <check_permission>
    3ff8:	89 2b       	or	r24, r25
    3ffa:	69 f5       	brne	.+90     	; 0x4056 <message_authentication+0xae>
			uart_puts("Permission Ok");
    3ffc:	8e e6       	ldi	r24, 0x6E	; 110
    3ffe:	93 e0       	ldi	r25, 0x03	; 3
    4000:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
			can_send_message(0, default_id, ack_pos, 8);
    4004:	28 e0       	ldi	r18, 0x08	; 8
    4006:	43 ec       	ldi	r20, 0xC3	; 195
    4008:	53 e0       	ldi	r21, 0x03	; 3
    400a:	6d ec       	ldi	r22, 0xCD	; 205
    400c:	73 e0       	ldi	r23, 0x03	; 3
    400e:	80 e0       	ldi	r24, 0x00	; 0
    4010:	0e 94 4c 03 	call	0x698	; 0x698 <can_send_message>
		}
		
		// Acknowledge permission.
		uint8_t mac[16];
		
		PORTB = 0x00;
    4014:	15 b8       	out	0x05, r1	; 5
		
		// Receive the MAC of the message
		can_receive_frame_buffer(mac,2);
    4016:	62 e0       	ldi	r22, 0x02	; 2
    4018:	ce 01       	movw	r24, r28
    401a:	81 96       	adiw	r24, 0x21	; 33
    401c:	0e 94 57 04 	call	0x8ae	; 0x8ae <can_receive_frame_buffer>
		
		PORTB = _BV(PB2);
    4020:	d5 b8       	out	0x05, r13	; 5
		
		uint8_t mac2[32];
		uint16_t klen = 256;
		uint32_t msglen = 64;
		hmac_sha256(mac2, secret, klen ,message , msglen);
    4022:	10 e4       	ldi	r17, 0x40	; 64
    4024:	e1 2e       	mov	r14, r17
    4026:	f1 2c       	mov	r15, r1
    4028:	00 e0       	ldi	r16, 0x00	; 0
    402a:	10 e0       	ldi	r17, 0x00	; 0
    402c:	9e 01       	movw	r18, r28
    402e:	2f 5c       	subi	r18, 0xCF	; 207
    4030:	3f 4f       	sbci	r19, 0xFF	; 255
    4032:	40 e0       	ldi	r20, 0x00	; 0
    4034:	51 e0       	ldi	r21, 0x01	; 1
    4036:	b5 01       	movw	r22, r10
    4038:	ce 01       	movw	r24, r28
    403a:	01 96       	adiw	r24, 0x01	; 1
    403c:	e2 d1       	rcall	.+964    	; 0x4402 <hmac_sha256>
		
		//Check the MAC.
		if(memcmp(mac, mac2, 16) == 0){
    403e:	40 e1       	ldi	r20, 0x10	; 16
    4040:	50 e0       	ldi	r21, 0x00	; 0
    4042:	be 01       	movw	r22, r28
    4044:	6f 5f       	subi	r22, 0xFF	; 255
    4046:	7f 4f       	sbci	r23, 0xFF	; 255
    4048:	ce 01       	movw	r24, r28
    404a:	81 96       	adiw	r24, 0x21	; 33
    404c:	0e 94 30 34 	call	0x6860	; 0x6860 <memcmp>
    4050:	89 2b       	or	r24, r25
    4052:	71 f0       	breq	.+28     	; 0x4070 <message_authentication+0xc8>
    4054:	21 c0       	rjmp	.+66     	; 0x4098 <message_authentication+0xf0>
		//Check the Permission.
		if(check_permission(id, role) == 0){
			uart_puts("Permission Ok");
			can_send_message(0, default_id, ack_pos, 8);
		}else{
			uart_puts("Permission Failed");
    4056:	8c e7       	ldi	r24, 0x7C	; 124
    4058:	93 e0       	ldi	r25, 0x03	; 3
    405a:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
			can_send_message(0, default_id, ack_neg, 8);
    405e:	28 e0       	ldi	r18, 0x08	; 8
    4060:	4b eb       	ldi	r20, 0xBB	; 187
    4062:	53 e0       	ldi	r21, 0x03	; 3
    4064:	6d ec       	ldi	r22, 0xCD	; 205
    4066:	73 e0       	ldi	r23, 0x03	; 3
    4068:	80 e0       	ldi	r24, 0x00	; 0
    406a:	0e 94 4c 03 	call	0x698	; 0x698 <can_send_message>
			continue;
    406e:	ab cf       	rjmp	.-170    	; 0x3fc6 <message_authentication+0x1e>
		uint32_t msglen = 64;
		hmac_sha256(mac2, secret, klen ,message , msglen);
		
		//Check the MAC.
		if(memcmp(mac, mac2, 16) == 0){
			uart_puts("Authentication Ok");
    4070:	8e e8       	ldi	r24, 0x8E	; 142
    4072:	93 e0       	ldi	r25, 0x03	; 3
    4074:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
			can_send_message(0, default_id, ack_pos, 8);
    4078:	28 e0       	ldi	r18, 0x08	; 8
    407a:	43 ec       	ldi	r20, 0xC3	; 195
    407c:	53 e0       	ldi	r21, 0x03	; 3
    407e:	6d ec       	ldi	r22, 0xCD	; 205
    4080:	73 e0       	ldi	r23, 0x03	; 3
    4082:	80 e0       	ldi	r24, 0x00	; 0
    4084:	0e 94 4c 03 	call	0x698	; 0x698 <can_send_message>
			uart_puts("Authentication Failed");
			can_send_message(0, default_id, ack_neg, 8);
			continue;
		}
		
		PORTB = 0x00;
    4088:	15 b8       	out	0x05, r1	; 5
		
		//Forward the message to the internal vehicle network.
		forward_message(message, id);
    408a:	be 01       	movw	r22, r28
    408c:	67 5c       	subi	r22, 0xC7	; 199
    408e:	7f 4f       	sbci	r23, 0xFF	; 255
    4090:	ce 01       	movw	r24, r28
    4092:	c1 96       	adiw	r24, 0x31	; 49
    4094:	36 df       	rcall	.-404    	; 0x3f02 <forward_message>
    4096:	97 cf       	rjmp	.-210    	; 0x3fc6 <message_authentication+0x1e>
		//Check the MAC.
		if(memcmp(mac, mac2, 16) == 0){
			uart_puts("Authentication Ok");
			can_send_message(0, default_id, ack_pos, 8);
		}else{
			uart_puts("Authentication Failed");
    4098:	80 ea       	ldi	r24, 0xA0	; 160
    409a:	93 e0       	ldi	r25, 0x03	; 3
    409c:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
			can_send_message(0, default_id, ack_neg, 8);
    40a0:	28 e0       	ldi	r18, 0x08	; 8
    40a2:	4b eb       	ldi	r20, 0xBB	; 187
    40a4:	53 e0       	ldi	r21, 0x03	; 3
    40a6:	6d ec       	ldi	r22, 0xCD	; 205
    40a8:	73 e0       	ldi	r23, 0x03	; 3
    40aa:	80 e0       	ldi	r24, 0x00	; 0
    40ac:	0e 94 4c 03 	call	0x698	; 0x698 <can_send_message>
			continue;
    40b0:	8a cf       	rjmp	.-236    	; 0x3fc6 <message_authentication+0x1e>

000040b2 <main>:
static uint8_t g_isotpRecvBuf[128];
static uint8_t g_isotpSendBuf[128];


 int main()
 {
    40b2:	cf 93       	push	r28
    40b4:	df 93       	push	r29
    40b6:	cd b7       	in	r28, 0x3d	; 61
    40b8:	de b7       	in	r29, 0x3e	; 62
    40ba:	a8 97       	sbiw	r28, 0x28	; 40
    40bc:	0f b6       	in	r0, 0x3f	; 63
    40be:	f8 94       	cli
    40c0:	de bf       	out	0x3e, r29	; 62
    40c2:	0f be       	out	0x3f, r0	; 63
    40c4:	cd bf       	out	0x3d, r28	; 61
	uart_init();
    40c6:	0e 94 dd 31 	call	0x63ba	; 0x63ba <uart_init>
	buttons_init();
    40ca:	30 de       	rcall	.-928    	; 0x3d2c <buttons_init>
	can_init();
    40cc:	0e 94 62 02 	call	0x4c4	; 0x4c4 <can_init>
	init_permissions_table();
    40d0:	5b d1       	rcall	.+694    	; 0x4388 <init_permissions_table>
	uart_puts("idle");
    40d2:	86 eb       	ldi	r24, 0xB6	; 182
    40d4:	93 e0       	ldi	r25, 0x03	; 3
    40d6:	0e 94 e9 31 	call	0x63d2	; 0x63d2 <uart_puts>
	clock_Init();
    40da:	0e 94 f6 04 	call	0x9ec	; 0x9ec <clock_Init>
	
	can_msg_t init;
	uint8_t secret[32];
	uint16_t size = 1;
	while(1){
		isotpi_receive(default_id, 7, init);
    40de:	ae 01       	movw	r20, r28
    40e0:	4f 5f       	subi	r20, 0xFF	; 255
    40e2:	5f 4f       	sbci	r21, 0xFF	; 255
    40e4:	67 e0       	ldi	r22, 0x07	; 7
    40e6:	8d ec       	ldi	r24, 0xCD	; 205
    40e8:	93 e0       	ldi	r25, 0x03	; 3
    40ea:	7c dc       	rcall	.-1800   	; 0x39e4 <isotpi_receive>
		if(authenticated_key_agreement(init[0],secret)) return 0;
    40ec:	be 01       	movw	r22, r28
    40ee:	67 5f       	subi	r22, 0xF7	; 247
    40f0:	7f 4f       	sbci	r23, 0xFF	; 255
    40f2:	89 81       	ldd	r24, Y+1	; 0x01
    40f4:	64 de       	rcall	.-824    	; 0x3dbe <authenticated_key_agreement>
    40f6:	89 2b       	or	r24, r25
    40f8:	29 f4       	brne	.+10     	; 0x4104 <main+0x52>
		if(message_authentication(init[0],secret)) return 0;
    40fa:	be 01       	movw	r22, r28
    40fc:	67 5f       	subi	r22, 0xF7	; 247
    40fe:	7f 4f       	sbci	r23, 0xFF	; 255
    4100:	89 81       	ldd	r24, Y+1	; 0x01
    4102:	52 df       	rcall	.-348    	; 0x3fa8 <message_authentication>
	}
	
 }
    4104:	80 e0       	ldi	r24, 0x00	; 0
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	a8 96       	adiw	r28, 0x28	; 40
    410a:	0f b6       	in	r0, 0x3f	; 63
    410c:	f8 94       	cli
    410e:	de bf       	out	0x3e, r29	; 62
    4110:	0f be       	out	0x3f, r0	; 63
    4112:	cd bf       	out	0x3d, r28	; 61
    4114:	df 91       	pop	r29
    4116:	cf 91       	pop	r28
    4118:	08 95       	ret

0000411a <entrycmp>:
	}
	return 0;
}
	

int entrycmp(entry_t *entry, can_id_t msg_id){
    411a:	cf 93       	push	r28
    411c:	df 93       	push	r29
    411e:	1f 92       	push	r1
    4120:	cd b7       	in	r28, 0x3d	; 61
    4122:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t res =  memcmp(entry->id, msg_id, 2);
    4124:	42 e0       	ldi	r20, 0x02	; 2
    4126:	50 e0       	ldi	r21, 0x00	; 0
    4128:	0e 94 30 34 	call	0x6860	; 0x6860 <memcmp>
    412c:	89 83       	std	Y+1, r24	; 0x01
	return res;
    412e:	89 81       	ldd	r24, Y+1	; 0x01
}
    4130:	90 e0       	ldi	r25, 0x00	; 0
    4132:	0f 90       	pop	r0
    4134:	df 91       	pop	r29
    4136:	cf 91       	pop	r28
    4138:	08 95       	ret

0000413a <add_entry>:
	hex_to_bytes(hex, 4, id);
	add_entry(id);
	return 0;
}

int add_entry(can_id_t id){
    413a:	ef 92       	push	r14
    413c:	ff 92       	push	r15
    413e:	0f 93       	push	r16
    4140:	1f 93       	push	r17
    4142:	cf 93       	push	r28
    4144:	df 93       	push	r29
    4146:	8c 01       	movw	r16, r24
	entry_t *new_entry; 
	new_entry = malloc(sizeof(entry_t));
    4148:	86 e0       	ldi	r24, 0x06	; 6
    414a:	90 e0       	ldi	r25, 0x00	; 0
    414c:	0e 94 ad 32 	call	0x655a	; 0x655a <malloc>
    4150:	7c 01       	movw	r14, r24
	new_entry->permissions = NULL;
    4152:	fc 01       	movw	r30, r24
    4154:	13 82       	std	Z+3, r1	; 0x03
    4156:	12 82       	std	Z+2, r1	; 0x02
	new_entry->successor = NULL;
    4158:	15 82       	std	Z+5, r1	; 0x05
    415a:	14 82       	std	Z+4, r1	; 0x04
	memcpy(new_entry->id, id, sizeof(can_id_t));
    415c:	f8 01       	movw	r30, r16
    415e:	80 81       	ld	r24, Z
    4160:	91 81       	ldd	r25, Z+1	; 0x01
    4162:	f7 01       	movw	r30, r14
    4164:	91 83       	std	Z+1, r25	; 0x01
    4166:	80 83       	st	Z, r24
	entry_t *curr = permission_table->head;
    4168:	e0 91 95 07 	lds	r30, 0x0795	; 0x800795 <permission_table>
    416c:	f0 91 96 07 	lds	r31, 0x0796	; 0x800796 <permission_table+0x1>
    4170:	c0 81       	ld	r28, Z
    4172:	d1 81       	ldd	r29, Z+1	; 0x01
	if(curr != NULL){
    4174:	20 97       	sbiw	r28, 0x00	; 0
    4176:	d1 f0       	breq	.+52     	; 0x41ac <add_entry+0x72>
		while(curr->successor != NULL){
    4178:	8c 81       	ldd	r24, Y+4	; 0x04
    417a:	9d 81       	ldd	r25, Y+5	; 0x05
    417c:	89 2b       	or	r24, r25
    417e:	61 f0       	breq	.+24     	; 0x4198 <add_entry+0x5e>
			if(entrycmp(curr, id) == 0) return 1;
    4180:	b8 01       	movw	r22, r16
    4182:	ce 01       	movw	r24, r28
    4184:	ca df       	rcall	.-108    	; 0x411a <entrycmp>
    4186:	89 2b       	or	r24, r25
    4188:	b1 f0       	breq	.+44     	; 0x41b6 <add_entry+0x7c>
			curr = curr->successor;
    418a:	0c 80       	ldd	r0, Y+4	; 0x04
    418c:	dd 81       	ldd	r29, Y+5	; 0x05
    418e:	c0 2d       	mov	r28, r0
	new_entry->permissions = NULL;
	new_entry->successor = NULL;
	memcpy(new_entry->id, id, sizeof(can_id_t));
	entry_t *curr = permission_table->head;
	if(curr != NULL){
		while(curr->successor != NULL){
    4190:	8c 81       	ldd	r24, Y+4	; 0x04
    4192:	9d 81       	ldd	r25, Y+5	; 0x05
    4194:	89 2b       	or	r24, r25
    4196:	a1 f7       	brne	.-24     	; 0x4180 <add_entry+0x46>
			if(entrycmp(curr, id) == 0) return 1;
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
    4198:	b8 01       	movw	r22, r16
    419a:	ce 01       	movw	r24, r28
    419c:	be df       	rcall	.-132    	; 0x411a <entrycmp>
    419e:	89 2b       	or	r24, r25
    41a0:	69 f0       	breq	.+26     	; 0x41bc <add_entry+0x82>
		curr->successor = new_entry;
    41a2:	fd 82       	std	Y+5, r15	; 0x05
    41a4:	ec 82       	std	Y+4, r14	; 0x04
	}else{
		permission_table->head = new_entry;
	}
	return 0;
    41a6:	80 e0       	ldi	r24, 0x00	; 0
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	0a c0       	rjmp	.+20     	; 0x41c0 <add_entry+0x86>
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
		curr->successor = new_entry;
	}else{
		permission_table->head = new_entry;
    41ac:	f1 82       	std	Z+1, r15	; 0x01
    41ae:	e0 82       	st	Z, r14
	}
	return 0;
    41b0:	80 e0       	ldi	r24, 0x00	; 0
    41b2:	90 e0       	ldi	r25, 0x00	; 0
    41b4:	05 c0       	rjmp	.+10     	; 0x41c0 <add_entry+0x86>
	new_entry->successor = NULL;
	memcpy(new_entry->id, id, sizeof(can_id_t));
	entry_t *curr = permission_table->head;
	if(curr != NULL){
		while(curr->successor != NULL){
			if(entrycmp(curr, id) == 0) return 1;
    41b6:	81 e0       	ldi	r24, 0x01	; 1
    41b8:	90 e0       	ldi	r25, 0x00	; 0
    41ba:	02 c0       	rjmp	.+4      	; 0x41c0 <add_entry+0x86>
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
    41bc:	81 e0       	ldi	r24, 0x01	; 1
    41be:	90 e0       	ldi	r25, 0x00	; 0
		curr->successor = new_entry;
	}else{
		permission_table->head = new_entry;
	}
	return 0;
}
    41c0:	df 91       	pop	r29
    41c2:	cf 91       	pop	r28
    41c4:	1f 91       	pop	r17
    41c6:	0f 91       	pop	r16
    41c8:	ff 90       	pop	r15
    41ca:	ef 90       	pop	r14
    41cc:	08 95       	ret

000041ce <add_entry_hex>:
	can_id_t id;
	hex_to_bytes(hex,4,id);
	return add_permission(id,role);
}

int add_entry_hex(char *hex){
    41ce:	cf 93       	push	r28
    41d0:	df 93       	push	r29
    41d2:	00 d0       	rcall	.+0      	; 0x41d4 <add_entry_hex+0x6>
    41d4:	cd b7       	in	r28, 0x3d	; 61
    41d6:	de b7       	in	r29, 0x3e	; 62
	can_id_t id;
	hex_to_bytes(hex, 4, id);
    41d8:	ae 01       	movw	r20, r28
    41da:	4f 5f       	subi	r20, 0xFF	; 255
    41dc:	5f 4f       	sbci	r21, 0xFF	; 255
    41de:	64 e0       	ldi	r22, 0x04	; 4
    41e0:	0e 94 8c 18 	call	0x3118	; 0x3118 <hex_to_bytes>
	add_entry(id);
    41e4:	ce 01       	movw	r24, r28
    41e6:	01 96       	adiw	r24, 0x01	; 1
    41e8:	a8 df       	rcall	.-176    	; 0x413a <add_entry>
	return 0;
}
    41ea:	80 e0       	ldi	r24, 0x00	; 0
    41ec:	90 e0       	ldi	r25, 0x00	; 0
    41ee:	0f 90       	pop	r0
    41f0:	0f 90       	pop	r0
    41f2:	df 91       	pop	r29
    41f4:	cf 91       	pop	r28
    41f6:	08 95       	ret

000041f8 <find_entry>:
int entrycmp(entry_t *entry, can_id_t msg_id){
	volatile uint8_t res =  memcmp(entry->id, msg_id, 2);
	return res;
}

int find_entry(can_id_t msg_id, entry_t **dest){
    41f8:	ef 92       	push	r14
    41fa:	ff 92       	push	r15
    41fc:	0f 93       	push	r16
    41fe:	1f 93       	push	r17
    4200:	cf 93       	push	r28
    4202:	df 93       	push	r29
    4204:	8c 01       	movw	r16, r24
    4206:	7b 01       	movw	r14, r22
	entry_t *curr = permission_table->head;
    4208:	e0 91 95 07 	lds	r30, 0x0795	; 0x800795 <permission_table>
    420c:	f0 91 96 07 	lds	r31, 0x0796	; 0x800796 <permission_table+0x1>
    4210:	c0 81       	ld	r28, Z
    4212:	d1 81       	ldd	r29, Z+1	; 0x01
	while(curr != NULL){
    4214:	20 97       	sbiw	r28, 0x00	; 0
    4216:	89 f0       	breq	.+34     	; 0x423a <find_entry+0x42>
		if(entrycmp(curr, msg_id) == 0){
    4218:	b8 01       	movw	r22, r16
    421a:	ce 01       	movw	r24, r28
    421c:	7e df       	rcall	.-260    	; 0x411a <entrycmp>
    421e:	00 97       	sbiw	r24, 0x00	; 0
    4220:	21 f4       	brne	.+8      	; 0x422a <find_entry+0x32>
			*dest = curr;
    4222:	f7 01       	movw	r30, r14
    4224:	d1 83       	std	Z+1, r29	; 0x01
    4226:	c0 83       	st	Z, r28
			return 0;
    4228:	0a c0       	rjmp	.+20     	; 0x423e <find_entry+0x46>
		}else{
			curr = curr->successor;
    422a:	0c 80       	ldd	r0, Y+4	; 0x04
    422c:	dd 81       	ldd	r29, Y+5	; 0x05
    422e:	c0 2d       	mov	r28, r0
	return res;
}

int find_entry(can_id_t msg_id, entry_t **dest){
	entry_t *curr = permission_table->head;
	while(curr != NULL){
    4230:	20 97       	sbiw	r28, 0x00	; 0
    4232:	91 f7       	brne	.-28     	; 0x4218 <find_entry+0x20>
			return 0;
		}else{
			curr = curr->successor;
		}
	}
	return 1;
    4234:	81 e0       	ldi	r24, 0x01	; 1
    4236:	90 e0       	ldi	r25, 0x00	; 0
    4238:	02 c0       	rjmp	.+4      	; 0x423e <find_entry+0x46>
    423a:	81 e0       	ldi	r24, 0x01	; 1
    423c:	90 e0       	ldi	r25, 0x00	; 0
}
    423e:	df 91       	pop	r29
    4240:	cf 91       	pop	r28
    4242:	1f 91       	pop	r17
    4244:	0f 91       	pop	r16
    4246:	ff 90       	pop	r15
    4248:	ef 90       	pop	r14
    424a:	08 95       	ret

0000424c <add_permission>:
		permission_table->head = new_entry;
	}
	return 0;
}

int add_permission(can_id_t id, role_t role){
    424c:	cf 92       	push	r12
    424e:	df 92       	push	r13
    4250:	ef 92       	push	r14
    4252:	ff 92       	push	r15
    4254:	1f 93       	push	r17
    4256:	cf 93       	push	r28
    4258:	df 93       	push	r29
    425a:	00 d0       	rcall	.+0      	; 0x425c <add_permission+0x10>
    425c:	cd b7       	in	r28, 0x3d	; 61
    425e:	de b7       	in	r29, 0x3e	; 62
    4260:	6c 01       	movw	r12, r24
    4262:	16 2f       	mov	r17, r22
	volatile permission_t *new_permission;
	new_permission = malloc(sizeof(permission_t));
    4264:	83 e0       	ldi	r24, 0x03	; 3
    4266:	90 e0       	ldi	r25, 0x00	; 0
    4268:	0e 94 ad 32 	call	0x655a	; 0x655a <malloc>
    426c:	7c 01       	movw	r14, r24
	new_permission->successor = NULL;
    426e:	fc 01       	movw	r30, r24
    4270:	12 82       	std	Z+2, r1	; 0x02
    4272:	11 82       	std	Z+1, r1	; 0x01
	new_permission->role = role;
    4274:	10 83       	st	Z, r17
	entry_t *entry;
	if(find_entry(id, &entry)) return 1;
    4276:	be 01       	movw	r22, r28
    4278:	6f 5f       	subi	r22, 0xFF	; 255
    427a:	7f 4f       	sbci	r23, 0xFF	; 255
    427c:	c6 01       	movw	r24, r12
    427e:	bc df       	rcall	.-136    	; 0x41f8 <find_entry>
    4280:	ac 01       	movw	r20, r24
    4282:	89 2b       	or	r24, r25
    4284:	e1 f4       	brne	.+56     	; 0x42be <add_permission+0x72>
	if(entry->permissions == NULL){
    4286:	a9 81       	ldd	r26, Y+1	; 0x01
    4288:	ba 81       	ldd	r27, Y+2	; 0x02
    428a:	12 96       	adiw	r26, 0x02	; 2
    428c:	ed 91       	ld	r30, X+
    428e:	fc 91       	ld	r31, X
    4290:	13 97       	sbiw	r26, 0x03	; 3
    4292:	30 97       	sbiw	r30, 0x00	; 0
    4294:	49 f4       	brne	.+18     	; 0x42a8 <add_permission+0x5c>
		entry->permissions = new_permission;
    4296:	13 96       	adiw	r26, 0x03	; 3
    4298:	fc 92       	st	X, r15
    429a:	ee 92       	st	-X, r14
    429c:	12 97       	sbiw	r26, 0x02	; 2
		return 0;
    429e:	17 c0       	rjmp	.+46     	; 0x42ce <add_permission+0x82>
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    42a0:	90 81       	ld	r25, Z
			curr = curr->successor;
    42a2:	f9 01       	movw	r30, r18
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    42a4:	19 17       	cp	r17, r25
    42a6:	71 f0       	breq	.+28     	; 0x42c4 <add_permission+0x78>
	if(entry->permissions == NULL){
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
    42a8:	21 81       	ldd	r18, Z+1	; 0x01
    42aa:	32 81       	ldd	r19, Z+2	; 0x02
    42ac:	21 15       	cp	r18, r1
    42ae:	31 05       	cpc	r19, r1
    42b0:	b9 f7       	brne	.-18     	; 0x42a0 <add_permission+0x54>
			if(role == curr->role) return 2;
			curr = curr->successor;
		}
		if(role == curr->role) return 2;
    42b2:	80 81       	ld	r24, Z
    42b4:	18 17       	cp	r17, r24
    42b6:	49 f0       	breq	.+18     	; 0x42ca <add_permission+0x7e>
		curr->successor = new_permission;		
    42b8:	f2 82       	std	Z+2, r15	; 0x02
    42ba:	e1 82       	std	Z+1, r14	; 0x01
	}
	return 0;
    42bc:	08 c0       	rjmp	.+16     	; 0x42ce <add_permission+0x82>
	volatile permission_t *new_permission;
	new_permission = malloc(sizeof(permission_t));
	new_permission->successor = NULL;
	new_permission->role = role;
	entry_t *entry;
	if(find_entry(id, &entry)) return 1;
    42be:	41 e0       	ldi	r20, 0x01	; 1
    42c0:	50 e0       	ldi	r21, 0x00	; 0
    42c2:	05 c0       	rjmp	.+10     	; 0x42ce <add_permission+0x82>
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    42c4:	42 e0       	ldi	r20, 0x02	; 2
    42c6:	50 e0       	ldi	r21, 0x00	; 0
    42c8:	02 c0       	rjmp	.+4      	; 0x42ce <add_permission+0x82>
			curr = curr->successor;
		}
		if(role == curr->role) return 2;
    42ca:	42 e0       	ldi	r20, 0x02	; 2
    42cc:	50 e0       	ldi	r21, 0x00	; 0
		curr->successor = new_permission;		
	}
	return 0;
}
    42ce:	ca 01       	movw	r24, r20
    42d0:	0f 90       	pop	r0
    42d2:	0f 90       	pop	r0
    42d4:	df 91       	pop	r29
    42d6:	cf 91       	pop	r28
    42d8:	1f 91       	pop	r17
    42da:	ff 90       	pop	r15
    42dc:	ef 90       	pop	r14
    42de:	df 90       	pop	r13
    42e0:	cf 90       	pop	r12
    42e2:	08 95       	ret

000042e4 <add_permission_hex>:
#include <stdlib.h>
#include <string.h>

permission_table_t *permission_table; 

int add_permission_hex(char *hex, role_t role){
    42e4:	1f 93       	push	r17
    42e6:	cf 93       	push	r28
    42e8:	df 93       	push	r29
    42ea:	00 d0       	rcall	.+0      	; 0x42ec <add_permission_hex+0x8>
    42ec:	cd b7       	in	r28, 0x3d	; 61
    42ee:	de b7       	in	r29, 0x3e	; 62
    42f0:	16 2f       	mov	r17, r22
	can_id_t id;
	hex_to_bytes(hex,4,id);
    42f2:	ae 01       	movw	r20, r28
    42f4:	4f 5f       	subi	r20, 0xFF	; 255
    42f6:	5f 4f       	sbci	r21, 0xFF	; 255
    42f8:	64 e0       	ldi	r22, 0x04	; 4
    42fa:	0e 94 8c 18 	call	0x3118	; 0x3118 <hex_to_bytes>
	return add_permission(id,role);
    42fe:	61 2f       	mov	r22, r17
    4300:	ce 01       	movw	r24, r28
    4302:	01 96       	adiw	r24, 0x01	; 1
    4304:	a3 df       	rcall	.-186    	; 0x424c <add_permission>
}
    4306:	0f 90       	pop	r0
    4308:	0f 90       	pop	r0
    430a:	df 91       	pop	r29
    430c:	cf 91       	pop	r28
    430e:	1f 91       	pop	r17
    4310:	08 95       	ret

00004312 <find_permission>:
	}
	return 1;
}

int find_permission(entry_t *entry, role_t role, permission_t **dest){
	permission_t *curr = entry->permissions;
    4312:	dc 01       	movw	r26, r24
    4314:	12 96       	adiw	r26, 0x02	; 2
    4316:	ed 91       	ld	r30, X+
    4318:	fc 91       	ld	r31, X
    431a:	13 97       	sbiw	r26, 0x03	; 3
	if(curr != NULL){
    431c:	30 97       	sbiw	r30, 0x00	; 0
    431e:	61 f4       	brne	.+24     	; 0x4338 <find_permission+0x26>
				*dest = curr;
				return 0;
			}
		}
	}else{
		return 1;
    4320:	81 e0       	ldi	r24, 0x01	; 1
    4322:	90 e0       	ldi	r25, 0x00	; 0
    4324:	08 95       	ret
int find_permission(entry_t *entry, role_t role, permission_t **dest){
	permission_t *curr = entry->permissions;
	if(curr != NULL){
		while(curr->successor != NULL){
			curr = curr->successor;
			if(role == curr->role){
    4326:	80 81       	ld	r24, Z
    4328:	86 13       	cpse	r24, r22
    432a:	06 c0       	rjmp	.+12     	; 0x4338 <find_permission+0x26>
				*dest = curr;
    432c:	da 01       	movw	r26, r20
    432e:	ed 93       	st	X+, r30
    4330:	fc 93       	st	X, r31
				return 0;
    4332:	80 e0       	ldi	r24, 0x00	; 0
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	08 95       	ret
}

int find_permission(entry_t *entry, role_t role, permission_t **dest){
	permission_t *curr = entry->permissions;
	if(curr != NULL){
		while(curr->successor != NULL){
    4338:	01 80       	ldd	r0, Z+1	; 0x01
    433a:	f2 81       	ldd	r31, Z+2	; 0x02
    433c:	e0 2d       	mov	r30, r0
    433e:	30 97       	sbiw	r30, 0x00	; 0
    4340:	91 f7       	brne	.-28     	; 0x4326 <find_permission+0x14>
			}
		}
	}else{
		return 1;
	}
	return 1;
    4342:	81 e0       	ldi	r24, 0x01	; 1
    4344:	90 e0       	ldi	r25, 0x00	; 0
}
    4346:	08 95       	ret

00004348 <check_permission>:

int check_permission(can_id_t id, role_t role){
    4348:	1f 93       	push	r17
    434a:	cf 93       	push	r28
    434c:	df 93       	push	r29
    434e:	00 d0       	rcall	.+0      	; 0x4350 <check_permission+0x8>
    4350:	00 d0       	rcall	.+0      	; 0x4352 <check_permission+0xa>
    4352:	cd b7       	in	r28, 0x3d	; 61
    4354:	de b7       	in	r29, 0x3e	; 62
    4356:	16 2f       	mov	r17, r22
	entry_t *entry;
	if(find_entry(id, &entry)) return 2;
    4358:	be 01       	movw	r22, r28
    435a:	6f 5f       	subi	r22, 0xFF	; 255
    435c:	7f 4f       	sbci	r23, 0xFF	; 255
    435e:	4c df       	rcall	.-360    	; 0x41f8 <find_entry>
    4360:	89 2b       	or	r24, r25
    4362:	41 f4       	brne	.+16     	; 0x4374 <check_permission+0x2c>
	permission_t *p;
	return find_permission(entry, role, &p);
    4364:	ae 01       	movw	r20, r28
    4366:	4d 5f       	subi	r20, 0xFD	; 253
    4368:	5f 4f       	sbci	r21, 0xFF	; 255
    436a:	61 2f       	mov	r22, r17
    436c:	89 81       	ldd	r24, Y+1	; 0x01
    436e:	9a 81       	ldd	r25, Y+2	; 0x02
    4370:	d0 df       	rcall	.-96     	; 0x4312 <find_permission>
    4372:	02 c0       	rjmp	.+4      	; 0x4378 <check_permission+0x30>
	return 1;
}

int check_permission(can_id_t id, role_t role){
	entry_t *entry;
	if(find_entry(id, &entry)) return 2;
    4374:	82 e0       	ldi	r24, 0x02	; 2
    4376:	90 e0       	ldi	r25, 0x00	; 0
	permission_t *p;
	return find_permission(entry, role, &p);
}
    4378:	0f 90       	pop	r0
    437a:	0f 90       	pop	r0
    437c:	0f 90       	pop	r0
    437e:	0f 90       	pop	r0
    4380:	df 91       	pop	r29
    4382:	cf 91       	pop	r28
    4384:	1f 91       	pop	r17
    4386:	08 95       	ret

00004388 <init_permissions_table>:

void init_permissions_table(){
	permission_table = malloc(sizeof(permission_table_t));
    4388:	82 e0       	ldi	r24, 0x02	; 2
    438a:	90 e0       	ldi	r25, 0x00	; 0
    438c:	0e 94 ad 32 	call	0x655a	; 0x655a <malloc>
    4390:	90 93 96 07 	sts	0x0796, r25	; 0x800796 <permission_table+0x1>
    4394:	80 93 95 07 	sts	0x0795, r24	; 0x800795 <permission_table>
	permission_table->head = NULL;
    4398:	fc 01       	movw	r30, r24
    439a:	11 82       	std	Z+1, r1	; 0x01
    439c:	10 82       	st	Z, r1
	add_entry_hex("0201");
    439e:	8f e4       	ldi	r24, 0x4F	; 79
    43a0:	96 e0       	ldi	r25, 0x06	; 6
    43a2:	15 df       	rcall	.-470    	; 0x41ce <add_entry_hex>
	add_permission_hex("0201", ADMIN_ROLE);
    43a4:	60 e0       	ldi	r22, 0x00	; 0
    43a6:	8f e4       	ldi	r24, 0x4F	; 79
    43a8:	96 e0       	ldi	r25, 0x06	; 6
    43aa:	9c df       	rcall	.-200    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0201", OEM_ROLE);
    43ac:	61 e0       	ldi	r22, 0x01	; 1
    43ae:	8f e4       	ldi	r24, 0x4F	; 79
    43b0:	96 e0       	ldi	r25, 0x06	; 6
    43b2:	98 df       	rcall	.-208    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0201", POLICEMAN_ROLE);
    43b4:	62 e0       	ldi	r22, 0x02	; 2
    43b6:	8f e4       	ldi	r24, 0x4F	; 79
    43b8:	96 e0       	ldi	r25, 0x06	; 6
    43ba:	94 df       	rcall	.-216    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0201", REPAIRMAN_ROLE);
    43bc:	63 e0       	ldi	r22, 0x03	; 3
    43be:	8f e4       	ldi	r24, 0x4F	; 79
    43c0:	96 e0       	ldi	r25, 0x06	; 6
    43c2:	90 df       	rcall	.-224    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0201", OWNER_ROLE);
    43c4:	64 e0       	ldi	r22, 0x04	; 4
    43c6:	8f e4       	ldi	r24, 0x4F	; 79
    43c8:	96 e0       	ldi	r25, 0x06	; 6
    43ca:	8c df       	rcall	.-232    	; 0x42e4 <add_permission_hex>
	add_entry_hex("0402");
    43cc:	84 e5       	ldi	r24, 0x54	; 84
    43ce:	96 e0       	ldi	r25, 0x06	; 6
    43d0:	fe de       	rcall	.-516    	; 0x41ce <add_entry_hex>
	add_permission_hex("0402", ADMIN_ROLE);
    43d2:	60 e0       	ldi	r22, 0x00	; 0
    43d4:	84 e5       	ldi	r24, 0x54	; 84
    43d6:	96 e0       	ldi	r25, 0x06	; 6
    43d8:	85 df       	rcall	.-246    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0402", OEM_ROLE);
    43da:	61 e0       	ldi	r22, 0x01	; 1
    43dc:	84 e5       	ldi	r24, 0x54	; 84
    43de:	96 e0       	ldi	r25, 0x06	; 6
    43e0:	81 df       	rcall	.-254    	; 0x42e4 <add_permission_hex>
	add_permission_hex("0402", REPAIRMAN_ROLE);
    43e2:	63 e0       	ldi	r22, 0x03	; 3
    43e4:	84 e5       	ldi	r24, 0x54	; 84
    43e6:	96 e0       	ldi	r25, 0x06	; 6
    43e8:	7d df       	rcall	.-262    	; 0x42e4 <add_permission_hex>
	add_entry_hex("0000");
    43ea:	89 e5       	ldi	r24, 0x59	; 89
    43ec:	96 e0       	ldi	r25, 0x06	; 6
    43ee:	ef de       	rcall	.-546    	; 0x41ce <add_entry_hex>
	add_permission_hex("0000", ADMIN_ROLE);
    43f0:	60 e0       	ldi	r22, 0x00	; 0
    43f2:	89 e5       	ldi	r24, 0x59	; 89
    43f4:	96 e0       	ldi	r25, 0x06	; 6
    43f6:	76 df       	rcall	.-276    	; 0x42e4 <add_permission_hex>
    43f8:	61 e0       	ldi	r22, 0x01	; 1
	add_permission_hex("0000", OEM_ROLE);
    43fa:	89 e5       	ldi	r24, 0x59	; 89
    43fc:	96 e0       	ldi	r25, 0x06	; 6
    43fe:	72 cf       	rjmp	.-284    	; 0x42e4 <add_permission_hex>
    4400:	08 95       	ret

00004402 <hmac_sha256>:
    4402:	2f 92       	push	r2
    4404:	3f 92       	push	r3
    4406:	4f 92       	push	r4
    4408:	5f 92       	push	r5
    440a:	6f 92       	push	r6
    440c:	7f 92       	push	r7
    440e:	8f 92       	push	r8
    4410:	9f 92       	push	r9
    4412:	af 92       	push	r10
    4414:	bf 92       	push	r11
    4416:	cf 92       	push	r12
    4418:	df 92       	push	r13
    441a:	ef 92       	push	r14
    441c:	ff 92       	push	r15
    441e:	0f 93       	push	r16
    4420:	1f 93       	push	r17
    4422:	cf 93       	push	r28
    4424:	df 93       	push	r29
    4426:	cd b7       	in	r28, 0x3d	; 61
    4428:	de b7       	in	r29, 0x3e	; 62
    442a:	c8 56       	subi	r28, 0x68	; 104
    442c:	d1 09       	sbc	r29, r1
    442e:	0f b6       	in	r0, 0x3f	; 63
    4430:	f8 94       	cli
    4432:	de bf       	out	0x3e, r29	; 62
    4434:	0f be       	out	0x3f, r0	; 63
    4436:	cd bf       	out	0x3d, r28	; 61
    4438:	1c 01       	movw	r2, r24
    443a:	49 01       	movw	r8, r18
    443c:	a9 96       	adiw	r28, 0x29	; 41
    443e:	ec ae       	std	Y+60, r14	; 0x3c
    4440:	fd ae       	std	Y+61, r15	; 0x3d
    4442:	0e af       	std	Y+62, r16	; 0x3e
    4444:	1f af       	std	Y+63, r17	; 0x3f
    4446:	a9 97       	sbiw	r28, 0x29	; 41
    4448:	fe 01       	movw	r30, r28
    444a:	b5 96       	adiw	r30, 0x25	; 37
    444c:	80 e4       	ldi	r24, 0x40	; 64
    444e:	df 01       	movw	r26, r30
    4450:	1d 92       	st	X+, r1
    4452:	8a 95       	dec	r24
    4454:	e9 f7       	brne	.-6      	; 0x4450 <hmac_sha256+0x4e>
    4456:	41 30       	cpi	r20, 0x01	; 1
    4458:	b2 e0       	ldi	r27, 0x02	; 2
    445a:	5b 07       	cpc	r21, r27
    445c:	30 f0       	brcs	.+12     	; 0x446a <hmac_sha256+0x68>
    445e:	9a 01       	movw	r18, r20
    4460:	40 e0       	ldi	r20, 0x00	; 0
    4462:	50 e0       	ldi	r21, 0x00	; 0
    4464:	cf 01       	movw	r24, r30
    4466:	e5 d0       	rcall	.+458    	; 0x4632 <sha256>
    4468:	96 c0       	rjmp	.+300    	; 0x4596 <hmac_sha256+0x194>
    446a:	49 5f       	subi	r20, 0xF9	; 249
    446c:	5f 4f       	sbci	r21, 0xFF	; 255
    446e:	56 95       	lsr	r21
    4470:	47 95       	ror	r20
    4472:	56 95       	lsr	r21
    4474:	47 95       	ror	r20
    4476:	56 95       	lsr	r21
    4478:	47 95       	ror	r20
    447a:	ce 01       	movw	r24, r28
    447c:	85 96       	adiw	r24, 0x25	; 37
    447e:	0e 94 3d 34 	call	0x687a	; 0x687a <memcpy>
    4482:	89 c0       	rjmp	.+274    	; 0x4596 <hmac_sha256+0x194>
    4484:	80 81       	ld	r24, Z
    4486:	89 27       	eor	r24, r25
    4488:	81 93       	st	Z+, r24
    448a:	ec 15       	cp	r30, r12
    448c:	fd 05       	cpc	r31, r13
    448e:	d1 f7       	brne	.-12     	; 0x4484 <hmac_sha256+0x82>
    4490:	ce 01       	movw	r24, r28
    4492:	01 96       	adiw	r24, 0x01	; 1
    4494:	a4 d0       	rcall	.+328    	; 0x45de <sha256_init>
    4496:	be 01       	movw	r22, r28
    4498:	6b 5d       	subi	r22, 0xDB	; 219
    449a:	7f 4f       	sbci	r23, 0xFF	; 255
    449c:	ce 01       	movw	r24, r28
    449e:	01 96       	adiw	r24, 0x01	; 1
    44a0:	aa d0       	rcall	.+340    	; 0x45f6 <sha256_nextBlock>
    44a2:	a9 96       	adiw	r28, 0x29	; 41
    44a4:	8c ad       	ldd	r24, Y+60	; 0x3c
    44a6:	9d ad       	ldd	r25, Y+61	; 0x3d
    44a8:	ae ad       	ldd	r26, Y+62	; 0x3e
    44aa:	bf ad       	ldd	r27, Y+63	; 0x3f
    44ac:	a9 97       	sbiw	r28, 0x29	; 41
    44ae:	81 15       	cp	r24, r1
    44b0:	e2 e0       	ldi	r30, 0x02	; 2
    44b2:	9e 07       	cpc	r25, r30
    44b4:	a1 05       	cpc	r26, r1
    44b6:	b1 05       	cpc	r27, r1
    44b8:	08 f4       	brcc	.+2      	; 0x44bc <hmac_sha256+0xba>
    44ba:	41 c0       	rjmp	.+130    	; 0x453e <hmac_sha256+0x13c>
    44bc:	2c 01       	movw	r4, r24
    44be:	3d 01       	movw	r6, r26
    44c0:	54 01       	movw	r10, r8
    44c2:	b5 01       	movw	r22, r10
    44c4:	ce 01       	movw	r24, r28
    44c6:	01 96       	adiw	r24, 0x01	; 1
    44c8:	96 d0       	rcall	.+300    	; 0x45f6 <sha256_nextBlock>
    44ca:	f0 e4       	ldi	r31, 0x40	; 64
    44cc:	af 0e       	add	r10, r31
    44ce:	b1 1c       	adc	r11, r1
    44d0:	22 e0       	ldi	r18, 0x02	; 2
    44d2:	52 1a       	sub	r5, r18
    44d4:	61 08       	sbc	r6, r1
    44d6:	71 08       	sbc	r7, r1
    44d8:	41 14       	cp	r4, r1
    44da:	82 e0       	ldi	r24, 0x02	; 2
    44dc:	58 06       	cpc	r5, r24
    44de:	61 04       	cpc	r6, r1
    44e0:	71 04       	cpc	r7, r1
    44e2:	78 f7       	brcc	.-34     	; 0x44c2 <hmac_sha256+0xc0>
    44e4:	a9 96       	adiw	r28, 0x29	; 41
    44e6:	8c ad       	ldd	r24, Y+60	; 0x3c
    44e8:	9d ad       	ldd	r25, Y+61	; 0x3d
    44ea:	ae ad       	ldd	r26, Y+62	; 0x3e
    44ec:	bf ad       	ldd	r27, Y+63	; 0x3f
    44ee:	a9 97       	sbiw	r28, 0x29	; 41
    44f0:	92 50       	subi	r25, 0x02	; 2
    44f2:	a1 09       	sbc	r26, r1
    44f4:	b1 09       	sbc	r27, r1
    44f6:	07 2e       	mov	r0, r23
    44f8:	79 e0       	ldi	r23, 0x09	; 9
    44fa:	b6 95       	lsr	r27
    44fc:	a7 95       	ror	r26
    44fe:	97 95       	ror	r25
    4500:	87 95       	ror	r24
    4502:	7a 95       	dec	r23
    4504:	d1 f7       	brne	.-12     	; 0x44fa <hmac_sha256+0xf8>
    4506:	70 2d       	mov	r23, r0
    4508:	01 96       	adiw	r24, 0x01	; 1
    450a:	00 24       	eor	r0, r0
    450c:	96 95       	lsr	r25
    450e:	87 95       	ror	r24
    4510:	07 94       	ror	r0
    4512:	96 95       	lsr	r25
    4514:	87 95       	ror	r24
    4516:	07 94       	ror	r0
    4518:	98 2f       	mov	r25, r24
    451a:	80 2d       	mov	r24, r0
    451c:	88 0e       	add	r8, r24
    451e:	99 1e       	adc	r9, r25
    4520:	a9 96       	adiw	r28, 0x29	; 41
    4522:	8c ad       	ldd	r24, Y+60	; 0x3c
    4524:	9d ad       	ldd	r25, Y+61	; 0x3d
    4526:	ae ad       	ldd	r26, Y+62	; 0x3e
    4528:	bf ad       	ldd	r27, Y+63	; 0x3f
    452a:	a9 97       	sbiw	r28, 0x29	; 41
    452c:	91 70       	andi	r25, 0x01	; 1
    452e:	aa 27       	eor	r26, r26
    4530:	bb 27       	eor	r27, r27
    4532:	a9 96       	adiw	r28, 0x29	; 41
    4534:	8c af       	std	Y+60, r24	; 0x3c
    4536:	9d af       	std	Y+61, r25	; 0x3d
    4538:	ae af       	std	Y+62, r26	; 0x3e
    453a:	bf af       	std	Y+63, r27	; 0x3f
    453c:	a9 97       	sbiw	r28, 0x29	; 41
    453e:	a7 96       	adiw	r28, 0x27	; 39
    4540:	4e ad       	ldd	r20, Y+62	; 0x3e
    4542:	5f ad       	ldd	r21, Y+63	; 0x3f
    4544:	a7 97       	sbiw	r28, 0x27	; 39
    4546:	b4 01       	movw	r22, r8
    4548:	ce 01       	movw	r24, r28
    454a:	01 96       	adiw	r24, 0x01	; 1
    454c:	57 d0       	rcall	.+174    	; 0x45fc <sha256_lastBlock>
    454e:	9a e6       	ldi	r25, 0x6A	; 106
    4550:	d8 01       	movw	r26, r16
    4552:	8c 91       	ld	r24, X
    4554:	89 27       	eor	r24, r25
    4556:	f8 01       	movw	r30, r16
    4558:	81 93       	st	Z+, r24
    455a:	8f 01       	movw	r16, r30
    455c:	ec 15       	cp	r30, r12
    455e:	fd 05       	cpc	r31, r13
    4560:	b9 f7       	brne	.-18     	; 0x4550 <hmac_sha256+0x14e>
    4562:	be 01       	movw	r22, r28
    4564:	6f 5f       	subi	r22, 0xFF	; 255
    4566:	7f 4f       	sbci	r23, 0xFF	; 255
    4568:	c1 01       	movw	r24, r2
    456a:	4b d0       	rcall	.+150    	; 0x4602 <sha256_ctx2hash>
    456c:	ce 01       	movw	r24, r28
    456e:	01 96       	adiw	r24, 0x01	; 1
    4570:	36 d0       	rcall	.+108    	; 0x45de <sha256_init>
    4572:	be 01       	movw	r22, r28
    4574:	6b 5d       	subi	r22, 0xDB	; 219
    4576:	7f 4f       	sbci	r23, 0xFF	; 255
    4578:	ce 01       	movw	r24, r28
    457a:	01 96       	adiw	r24, 0x01	; 1
    457c:	3c d0       	rcall	.+120    	; 0x45f6 <sha256_nextBlock>
    457e:	40 e0       	ldi	r20, 0x00	; 0
    4580:	51 e0       	ldi	r21, 0x01	; 1
    4582:	b1 01       	movw	r22, r2
    4584:	ce 01       	movw	r24, r28
    4586:	01 96       	adiw	r24, 0x01	; 1
    4588:	39 d0       	rcall	.+114    	; 0x45fc <sha256_lastBlock>
    458a:	be 01       	movw	r22, r28
    458c:	6f 5f       	subi	r22, 0xFF	; 255
    458e:	7f 4f       	sbci	r23, 0xFF	; 255
    4590:	c1 01       	movw	r24, r2
    4592:	37 d0       	rcall	.+110    	; 0x4602 <sha256_ctx2hash>
    4594:	0a c0       	rjmp	.+20     	; 0x45aa <hmac_sha256+0x1a8>
    4596:	8e 01       	movw	r16, r28
    4598:	0b 5d       	subi	r16, 0xDB	; 219
    459a:	1f 4f       	sbci	r17, 0xFF	; 255
    459c:	6e 01       	movw	r12, r28
    459e:	f5 e6       	ldi	r31, 0x65	; 101
    45a0:	cf 0e       	add	r12, r31
    45a2:	d1 1c       	adc	r13, r1
    45a4:	f8 01       	movw	r30, r16
    45a6:	96 e3       	ldi	r25, 0x36	; 54
    45a8:	6d cf       	rjmp	.-294    	; 0x4484 <hmac_sha256+0x82>
    45aa:	c8 59       	subi	r28, 0x98	; 152
    45ac:	df 4f       	sbci	r29, 0xFF	; 255
    45ae:	0f b6       	in	r0, 0x3f	; 63
    45b0:	f8 94       	cli
    45b2:	de bf       	out	0x3e, r29	; 62
    45b4:	0f be       	out	0x3f, r0	; 63
    45b6:	cd bf       	out	0x3d, r28	; 61
    45b8:	df 91       	pop	r29
    45ba:	cf 91       	pop	r28
    45bc:	1f 91       	pop	r17
    45be:	0f 91       	pop	r16
    45c0:	ff 90       	pop	r15
    45c2:	ef 90       	pop	r14
    45c4:	df 90       	pop	r13
    45c6:	cf 90       	pop	r12
    45c8:	bf 90       	pop	r11
    45ca:	af 90       	pop	r10
    45cc:	9f 90       	pop	r9
    45ce:	8f 90       	pop	r8
    45d0:	7f 90       	pop	r7
    45d2:	6f 90       	pop	r6
    45d4:	5f 90       	pop	r5
    45d6:	4f 90       	pop	r4
    45d8:	3f 90       	pop	r3
    45da:	2f 90       	pop	r2
    45dc:	08 95       	ret

000045de <sha256_init>:
    45de:	fc 01       	movw	r30, r24
    45e0:	10 a2       	std	Z+32, r1	; 0x20
    45e2:	11 a2       	std	Z+33, r1	; 0x21
    45e4:	12 a2       	std	Z+34, r1	; 0x22
    45e6:	13 a2       	std	Z+35, r1	; 0x23
    45e8:	40 e2       	ldi	r20, 0x20	; 32
    45ea:	50 e0       	ldi	r21, 0x00	; 0
    45ec:	64 e9       	ldi	r22, 0x94	; 148
    45ee:	70 e0       	ldi	r23, 0x00	; 0
    45f0:	0c 94 27 34 	jmp	0x684e	; 0x684e <memcpy_P>
    45f4:	08 95       	ret

000045f6 <sha256_nextBlock>:
    45f6:	0c 94 5a 2d 	jmp	0x5ab4	; 0x5ab4 <sha2_small_common_nextBlock>
    45fa:	08 95       	ret

000045fc <sha256_lastBlock>:
    45fc:	0c 94 6a 30 	jmp	0x60d4	; 0x60d4 <sha2_small_common_lastBlock>
    4600:	08 95       	ret

00004602 <sha256_ctx2hash>:
    4602:	cf 93       	push	r28
    4604:	df 93       	push	r29
    4606:	ac 01       	movw	r20, r24
    4608:	ec 01       	movw	r28, r24
    460a:	a0 96       	adiw	r28, 0x20	; 32
    460c:	fa 01       	movw	r30, r20
    460e:	93 e0       	ldi	r25, 0x03	; 3
    4610:	db 01       	movw	r26, r22
    4612:	a9 0f       	add	r26, r25
    4614:	b1 1d       	adc	r27, r1
    4616:	2c 91       	ld	r18, X
    4618:	21 93       	st	Z+, r18
    461a:	91 50       	subi	r25, 0x01	; 1
    461c:	c8 f7       	brcc	.-14     	; 0x4610 <sha256_ctx2hash+0xe>
    461e:	4c 5f       	subi	r20, 0xFC	; 252
    4620:	5f 4f       	sbci	r21, 0xFF	; 255
    4622:	6c 5f       	subi	r22, 0xFC	; 252
    4624:	7f 4f       	sbci	r23, 0xFF	; 255
    4626:	4c 17       	cp	r20, r28
    4628:	5d 07       	cpc	r21, r29
    462a:	81 f7       	brne	.-32     	; 0x460c <sha256_ctx2hash+0xa>
    462c:	df 91       	pop	r29
    462e:	cf 91       	pop	r28
    4630:	08 95       	ret

00004632 <sha256>:
    4632:	4f 92       	push	r4
    4634:	5f 92       	push	r5
    4636:	6f 92       	push	r6
    4638:	7f 92       	push	r7
    463a:	8f 92       	push	r8
    463c:	9f 92       	push	r9
    463e:	af 92       	push	r10
    4640:	bf 92       	push	r11
    4642:	cf 92       	push	r12
    4644:	df 92       	push	r13
    4646:	ef 92       	push	r14
    4648:	ff 92       	push	r15
    464a:	0f 93       	push	r16
    464c:	1f 93       	push	r17
    464e:	cf 93       	push	r28
    4650:	df 93       	push	r29
    4652:	cd b7       	in	r28, 0x3d	; 61
    4654:	de b7       	in	r29, 0x3e	; 62
    4656:	a4 97       	sbiw	r28, 0x24	; 36
    4658:	0f b6       	in	r0, 0x3f	; 63
    465a:	f8 94       	cli
    465c:	de bf       	out	0x3e, r29	; 62
    465e:	0f be       	out	0x3f, r0	; 63
    4660:	cd bf       	out	0x3d, r28	; 61
    4662:	4c 01       	movw	r8, r24
    4664:	5b 01       	movw	r10, r22
    4666:	69 01       	movw	r12, r18
    4668:	7a 01       	movw	r14, r20
    466a:	ce 01       	movw	r24, r28
    466c:	01 96       	adiw	r24, 0x01	; 1
    466e:	b7 df       	rcall	.-146    	; 0x45de <sha256_init>
    4670:	c1 14       	cp	r12, r1
    4672:	82 e0       	ldi	r24, 0x02	; 2
    4674:	d8 06       	cpc	r13, r24
    4676:	e1 04       	cpc	r14, r1
    4678:	f1 04       	cpc	r15, r1
    467a:	90 f1       	brcs	.+100    	; 0x46e0 <sha256+0xae>
    467c:	26 01       	movw	r4, r12
    467e:	37 01       	movw	r6, r14
    4680:	85 01       	movw	r16, r10
    4682:	b8 01       	movw	r22, r16
    4684:	ce 01       	movw	r24, r28
    4686:	01 96       	adiw	r24, 0x01	; 1
    4688:	0e 94 5a 2d 	call	0x5ab4	; 0x5ab4 <sha2_small_common_nextBlock>
    468c:	00 5c       	subi	r16, 0xC0	; 192
    468e:	1f 4f       	sbci	r17, 0xFF	; 255
    4690:	82 e0       	ldi	r24, 0x02	; 2
    4692:	58 1a       	sub	r5, r24
    4694:	61 08       	sbc	r6, r1
    4696:	71 08       	sbc	r7, r1
    4698:	41 14       	cp	r4, r1
    469a:	82 e0       	ldi	r24, 0x02	; 2
    469c:	58 06       	cpc	r5, r24
    469e:	61 04       	cpc	r6, r1
    46a0:	71 04       	cpc	r7, r1
    46a2:	78 f7       	brcc	.-34     	; 0x4682 <sha256+0x50>
    46a4:	d7 01       	movw	r26, r14
    46a6:	c6 01       	movw	r24, r12
    46a8:	92 50       	subi	r25, 0x02	; 2
    46aa:	a1 09       	sbc	r26, r1
    46ac:	b1 09       	sbc	r27, r1
    46ae:	07 2e       	mov	r0, r23
    46b0:	79 e0       	ldi	r23, 0x09	; 9
    46b2:	b6 95       	lsr	r27
    46b4:	a7 95       	ror	r26
    46b6:	97 95       	ror	r25
    46b8:	87 95       	ror	r24
    46ba:	7a 95       	dec	r23
    46bc:	d1 f7       	brne	.-12     	; 0x46b2 <sha256+0x80>
    46be:	70 2d       	mov	r23, r0
    46c0:	01 96       	adiw	r24, 0x01	; 1
    46c2:	00 24       	eor	r0, r0
    46c4:	96 95       	lsr	r25
    46c6:	87 95       	ror	r24
    46c8:	07 94       	ror	r0
    46ca:	96 95       	lsr	r25
    46cc:	87 95       	ror	r24
    46ce:	07 94       	ror	r0
    46d0:	98 2f       	mov	r25, r24
    46d2:	80 2d       	mov	r24, r0
    46d4:	a8 0e       	add	r10, r24
    46d6:	b9 1e       	adc	r11, r25
    46d8:	81 e0       	ldi	r24, 0x01	; 1
    46da:	d8 22       	and	r13, r24
    46dc:	ee 24       	eor	r14, r14
    46de:	ff 24       	eor	r15, r15
    46e0:	a6 01       	movw	r20, r12
    46e2:	b5 01       	movw	r22, r10
    46e4:	ce 01       	movw	r24, r28
    46e6:	01 96       	adiw	r24, 0x01	; 1
    46e8:	0e 94 6a 30 	call	0x60d4	; 0x60d4 <sha2_small_common_lastBlock>
    46ec:	be 01       	movw	r22, r28
    46ee:	6f 5f       	subi	r22, 0xFF	; 255
    46f0:	7f 4f       	sbci	r23, 0xFF	; 255
    46f2:	c4 01       	movw	r24, r8
    46f4:	86 df       	rcall	.-244    	; 0x4602 <sha256_ctx2hash>
    46f6:	a4 96       	adiw	r28, 0x24	; 36
    46f8:	0f b6       	in	r0, 0x3f	; 63
    46fa:	f8 94       	cli
    46fc:	de bf       	out	0x3e, r29	; 62
    46fe:	0f be       	out	0x3f, r0	; 63
    4700:	cd bf       	out	0x3d, r28	; 61
    4702:	df 91       	pop	r29
    4704:	cf 91       	pop	r28
    4706:	1f 91       	pop	r17
    4708:	0f 91       	pop	r16
    470a:	ff 90       	pop	r15
    470c:	ef 90       	pop	r14
    470e:	df 90       	pop	r13
    4710:	cf 90       	pop	r12
    4712:	bf 90       	pop	r11
    4714:	af 90       	pop	r10
    4716:	9f 90       	pop	r9
    4718:	8f 90       	pop	r8
    471a:	7f 90       	pop	r7
    471c:	6f 90       	pop	r6
    471e:	5f 90       	pop	r5
    4720:	4f 90       	pop	r4
    4722:	08 95       	ret

00004724 <sha2_large_common_nextBlock>:
    4724:	2f 92       	push	r2
    4726:	3f 92       	push	r3
    4728:	4f 92       	push	r4
    472a:	5f 92       	push	r5
    472c:	6f 92       	push	r6
    472e:	7f 92       	push	r7
    4730:	8f 92       	push	r8
    4732:	9f 92       	push	r9
    4734:	af 92       	push	r10
    4736:	bf 92       	push	r11
    4738:	cf 92       	push	r12
    473a:	df 92       	push	r13
    473c:	ef 92       	push	r14
    473e:	ff 92       	push	r15
    4740:	0f 93       	push	r16
    4742:	1f 93       	push	r17
    4744:	cf 93       	push	r28
    4746:	df 93       	push	r29
    4748:	cd b7       	in	r28, 0x3d	; 61
    474a:	de b7       	in	r29, 0x3e	; 62
    474c:	ca 5e       	subi	r28, 0xEA	; 234
    474e:	d1 09       	sbc	r29, r1
    4750:	0f b6       	in	r0, 0x3f	; 63
    4752:	f8 94       	cli
    4754:	de bf       	out	0x3e, r29	; 62
    4756:	0f be       	out	0x3f, r0	; 63
    4758:	cd bf       	out	0x3d, r28	; 61
    475a:	c7 51       	subi	r28, 0x17	; 23
    475c:	df 4f       	sbci	r29, 0xFF	; 255
    475e:	99 83       	std	Y+1, r25	; 0x01
    4760:	88 83       	st	Y, r24
    4762:	c9 5e       	subi	r28, 0xE9	; 233
    4764:	d0 40       	sbci	r29, 0x00	; 0
    4766:	ce 01       	movw	r24, r28
    4768:	01 96       	adiw	r24, 0x01	; 1
    476a:	c5 52       	subi	r28, 0x25	; 37
    476c:	df 4f       	sbci	r29, 0xFF	; 255
    476e:	99 83       	std	Y+1, r25	; 0x01
    4770:	88 83       	st	Y, r24
    4772:	cb 5d       	subi	r28, 0xDB	; 219
    4774:	d0 40       	sbci	r29, 0x00	; 0
    4776:	fe 01       	movw	r30, r28
    4778:	ef 57       	subi	r30, 0x7F	; 127
    477a:	ff 4f       	sbci	r31, 0xFF	; 255
    477c:	c7 53       	subi	r28, 0x37	; 55
    477e:	df 4f       	sbci	r29, 0xFF	; 255
    4780:	f9 83       	std	Y+1, r31	; 0x01
    4782:	e8 83       	st	Y, r30
    4784:	c9 5c       	subi	r28, 0xC9	; 201
    4786:	d0 40       	sbci	r29, 0x00	; 0
    4788:	2c 01       	movw	r4, r24
    478a:	c9 51       	subi	r28, 0x19	; 25
    478c:	df 4f       	sbci	r29, 0xFF	; 255
    478e:	79 83       	std	Y+1, r23	; 0x01
    4790:	68 83       	st	Y, r22
    4792:	c7 5e       	subi	r28, 0xE7	; 231
    4794:	d0 40       	sbci	r29, 0x00	; 0
    4796:	c9 51       	subi	r28, 0x19	; 25
    4798:	df 4f       	sbci	r29, 0xFF	; 255
    479a:	a8 81       	ld	r26, Y
    479c:	b9 81       	ldd	r27, Y+1	; 0x01
    479e:	c7 5e       	subi	r28, 0xE7	; 231
    47a0:	d0 40       	sbci	r29, 0x00	; 0
    47a2:	bc 91       	ld	r27, X
    47a4:	c5 53       	subi	r28, 0x35	; 53
    47a6:	df 4f       	sbci	r29, 0xFF	; 255
    47a8:	b8 83       	st	Y, r27
    47aa:	cb 5c       	subi	r28, 0xCB	; 203
    47ac:	d0 40       	sbci	r29, 0x00	; 0
    47ae:	c9 51       	subi	r28, 0x19	; 25
    47b0:	df 4f       	sbci	r29, 0xFF	; 255
    47b2:	e8 81       	ld	r30, Y
    47b4:	f9 81       	ldd	r31, Y+1	; 0x01
    47b6:	c7 5e       	subi	r28, 0xE7	; 231
    47b8:	d0 40       	sbci	r29, 0x00	; 0
    47ba:	71 80       	ldd	r7, Z+1	; 0x01
    47bc:	82 80       	ldd	r8, Z+2	; 0x02
    47be:	93 80       	ldd	r9, Z+3	; 0x03
    47c0:	a4 80       	ldd	r10, Z+4	; 0x04
    47c2:	b5 80       	ldd	r11, Z+5	; 0x05
    47c4:	a6 81       	ldd	r26, Z+6	; 0x06
    47c6:	b7 81       	ldd	r27, Z+7	; 0x07
    47c8:	38 96       	adiw	r30, 0x08	; 8
    47ca:	c9 51       	subi	r28, 0x19	; 25
    47cc:	df 4f       	sbci	r29, 0xFF	; 255
    47ce:	f9 83       	std	Y+1, r31	; 0x01
    47d0:	e8 83       	st	Y, r30
    47d2:	c7 5e       	subi	r28, 0xE7	; 231
    47d4:	d0 40       	sbci	r29, 0x00	; 0
    47d6:	68 94       	set
    47d8:	66 24       	eor	r6, r6
    47da:	63 f8       	bld	r6, 3
    47dc:	c1 2c       	mov	r12, r1
    47de:	d1 2c       	mov	r13, r1
    47e0:	e1 2c       	mov	r14, r1
    47e2:	f1 2c       	mov	r15, r1
    47e4:	10 e0       	ldi	r17, 0x00	; 0
    47e6:	f0 e0       	ldi	r31, 0x00	; 0
    47e8:	21 2c       	mov	r2, r1
    47ea:	31 2c       	mov	r3, r1
    47ec:	2c 2d       	mov	r18, r12
    47ee:	3d 2d       	mov	r19, r13
    47f0:	4e 2d       	mov	r20, r14
    47f2:	5f 2d       	mov	r21, r15
    47f4:	61 2f       	mov	r22, r17
    47f6:	7f 2f       	mov	r23, r31
    47f8:	82 2d       	mov	r24, r2
    47fa:	93 2d       	mov	r25, r3
    47fc:	08 e0       	ldi	r16, 0x08	; 8
    47fe:	0e 94 52 32 	call	0x64a4	; 0x64a4 <__ashldi3>
    4802:	c5 53       	subi	r28, 0x35	; 53
    4804:	df 4f       	sbci	r29, 0xFF	; 255
    4806:	c8 80       	ld	r12, Y
    4808:	cb 5c       	subi	r28, 0xCB	; 203
    480a:	d0 40       	sbci	r29, 0x00	; 0
    480c:	c2 2a       	or	r12, r18
    480e:	d3 2e       	mov	r13, r19
    4810:	e4 2e       	mov	r14, r20
    4812:	f5 2e       	mov	r15, r21
    4814:	16 2f       	mov	r17, r22
    4816:	f7 2f       	mov	r31, r23
    4818:	28 2e       	mov	r2, r24
    481a:	39 2e       	mov	r3, r25
    481c:	c5 53       	subi	r28, 0x35	; 53
    481e:	df 4f       	sbci	r29, 0xFF	; 255
    4820:	28 81       	ld	r18, Y
    4822:	cb 5c       	subi	r28, 0xCB	; 203
    4824:	d0 40       	sbci	r29, 0x00	; 0
    4826:	37 2d       	mov	r19, r7
    4828:	48 2d       	mov	r20, r8
    482a:	59 2d       	mov	r21, r9
    482c:	6a 2d       	mov	r22, r10
    482e:	7b 2d       	mov	r23, r11
    4830:	8a 2f       	mov	r24, r26
    4832:	9b 2f       	mov	r25, r27
    4834:	0e 94 6d 32 	call	0x64da	; 0x64da <__lshrdi3>
    4838:	c5 53       	subi	r28, 0x35	; 53
    483a:	df 4f       	sbci	r29, 0xFF	; 255
    483c:	28 83       	st	Y, r18
    483e:	cb 5c       	subi	r28, 0xCB	; 203
    4840:	d0 40       	sbci	r29, 0x00	; 0
    4842:	73 2e       	mov	r7, r19
    4844:	84 2e       	mov	r8, r20
    4846:	95 2e       	mov	r9, r21
    4848:	a6 2e       	mov	r10, r22
    484a:	b7 2e       	mov	r11, r23
    484c:	a8 2f       	mov	r26, r24
    484e:	b9 2f       	mov	r27, r25
    4850:	6a 94       	dec	r6
    4852:	61 10       	cpse	r6, r1
    4854:	cb cf       	rjmp	.-106    	; 0x47ec <sha2_large_common_nextBlock+0xc8>
    4856:	d2 01       	movw	r26, r4
    4858:	cc 92       	st	X, r12
    485a:	11 96       	adiw	r26, 0x01	; 1
    485c:	dc 92       	st	X, r13
    485e:	11 97       	sbiw	r26, 0x01	; 1
    4860:	12 96       	adiw	r26, 0x02	; 2
    4862:	ec 92       	st	X, r14
    4864:	12 97       	sbiw	r26, 0x02	; 2
    4866:	13 96       	adiw	r26, 0x03	; 3
    4868:	fc 92       	st	X, r15
    486a:	13 97       	sbiw	r26, 0x03	; 3
    486c:	14 96       	adiw	r26, 0x04	; 4
    486e:	1c 93       	st	X, r17
    4870:	14 97       	sbiw	r26, 0x04	; 4
    4872:	15 96       	adiw	r26, 0x05	; 5
    4874:	fc 93       	st	X, r31
    4876:	15 97       	sbiw	r26, 0x05	; 5
    4878:	16 96       	adiw	r26, 0x06	; 6
    487a:	2c 92       	st	X, r2
    487c:	16 97       	sbiw	r26, 0x06	; 6
    487e:	17 96       	adiw	r26, 0x07	; 7
    4880:	3c 92       	st	X, r3
    4882:	b8 e0       	ldi	r27, 0x08	; 8
    4884:	4b 0e       	add	r4, r27
    4886:	51 1c       	adc	r5, r1
    4888:	c7 53       	subi	r28, 0x37	; 55
    488a:	df 4f       	sbci	r29, 0xFF	; 255
    488c:	e8 81       	ld	r30, Y
    488e:	f9 81       	ldd	r31, Y+1	; 0x01
    4890:	c9 5c       	subi	r28, 0xC9	; 201
    4892:	d0 40       	sbci	r29, 0x00	; 0
    4894:	e4 15       	cp	r30, r4
    4896:	f5 05       	cpc	r31, r5
    4898:	09 f0       	breq	.+2      	; 0x489c <sha2_large_common_nextBlock+0x178>
    489a:	7d cf       	rjmp	.-262    	; 0x4796 <sha2_large_common_nextBlock+0x72>
    489c:	80 e4       	ldi	r24, 0x40	; 64
    489e:	c7 51       	subi	r28, 0x17	; 23
    48a0:	df 4f       	sbci	r29, 0xFF	; 255
    48a2:	e8 81       	ld	r30, Y
    48a4:	f9 81       	ldd	r31, Y+1	; 0x01
    48a6:	c9 5e       	subi	r28, 0xE9	; 233
    48a8:	d0 40       	sbci	r29, 0x00	; 0
    48aa:	de 01       	movw	r26, r28
    48ac:	af 57       	subi	r26, 0x7F	; 127
    48ae:	bf 4f       	sbci	r27, 0xFF	; 255
    48b0:	01 90       	ld	r0, Z+
    48b2:	0d 92       	st	X+, r0
    48b4:	8a 95       	dec	r24
    48b6:	e1 f7       	brne	.-8      	; 0x48b0 <sha2_large_common_nextBlock+0x18c>
    48b8:	84 eb       	ldi	r24, 0xB4	; 180
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	cf 52       	subi	r28, 0x2F	; 47
    48be:	df 4f       	sbci	r29, 0xFF	; 255
    48c0:	99 83       	std	Y+1, r25	; 0x01
    48c2:	88 83       	st	Y, r24
    48c4:	c1 5d       	subi	r28, 0xD1	; 209
    48c6:	d0 40       	sbci	r29, 0x00	; 0
    48c8:	c0 53       	subi	r28, 0x30	; 48
    48ca:	df 4f       	sbci	r29, 0xFF	; 255
    48cc:	18 82       	st	Y, r1
    48ce:	c0 5d       	subi	r28, 0xD0	; 208
    48d0:	d0 40       	sbci	r29, 0x00	; 0
    48d2:	a1 e8       	ldi	r26, 0x81	; 129
    48d4:	b0 e0       	ldi	r27, 0x00	; 0
    48d6:	ac 0f       	add	r26, r28
    48d8:	bd 1f       	adc	r27, r29
    48da:	18 96       	adiw	r26, 0x08	; 8
    48dc:	c9 51       	subi	r28, 0x19	; 25
    48de:	df 4f       	sbci	r29, 0xFF	; 255
    48e0:	b9 83       	std	Y+1, r27	; 0x01
    48e2:	a8 83       	st	Y, r26
    48e4:	c7 5e       	subi	r28, 0xE7	; 231
    48e6:	d0 40       	sbci	r29, 0x00	; 0
    48e8:	c0 53       	subi	r28, 0x30	; 48
    48ea:	df 4f       	sbci	r29, 0xFF	; 255
    48ec:	b8 81       	ld	r27, Y
    48ee:	c0 5d       	subi	r28, 0xD0	; 208
    48f0:	d0 40       	sbci	r29, 0x00	; 0
    48f2:	b0 31       	cpi	r27, 0x10	; 16
    48f4:	08 f0       	brcs	.+2      	; 0x48f8 <sha2_large_common_nextBlock+0x1d4>
    48f6:	60 c0       	rjmp	.+192    	; 0x49b8 <sha2_large_common_nextBlock+0x294>
    48f8:	c5 52       	subi	r28, 0x25	; 37
    48fa:	df 4f       	sbci	r29, 0xFF	; 255
    48fc:	e8 81       	ld	r30, Y
    48fe:	f9 81       	ldd	r31, Y+1	; 0x01
    4900:	cb 5d       	subi	r28, 0xDB	; 219
    4902:	d0 40       	sbci	r29, 0x00	; 0
    4904:	f0 81       	ld	r31, Z
    4906:	c5 53       	subi	r28, 0x35	; 53
    4908:	df 4f       	sbci	r29, 0xFF	; 255
    490a:	f8 83       	st	Y, r31
    490c:	cb 5c       	subi	r28, 0xCB	; 203
    490e:	d0 40       	sbci	r29, 0x00	; 0
    4910:	c5 52       	subi	r28, 0x25	; 37
    4912:	df 4f       	sbci	r29, 0xFF	; 255
    4914:	a8 81       	ld	r26, Y
    4916:	b9 81       	ldd	r27, Y+1	; 0x01
    4918:	cb 5d       	subi	r28, 0xDB	; 219
    491a:	d0 40       	sbci	r29, 0x00	; 0
    491c:	11 96       	adiw	r26, 0x01	; 1
    491e:	bc 91       	ld	r27, X
    4920:	c4 53       	subi	r28, 0x34	; 52
    4922:	df 4f       	sbci	r29, 0xFF	; 255
    4924:	b8 83       	st	Y, r27
    4926:	cc 5c       	subi	r28, 0xCC	; 204
    4928:	d0 40       	sbci	r29, 0x00	; 0
    492a:	c5 52       	subi	r28, 0x25	; 37
    492c:	df 4f       	sbci	r29, 0xFF	; 255
    492e:	e8 81       	ld	r30, Y
    4930:	f9 81       	ldd	r31, Y+1	; 0x01
    4932:	cb 5d       	subi	r28, 0xDB	; 219
    4934:	d0 40       	sbci	r29, 0x00	; 0
    4936:	f2 81       	ldd	r31, Z+2	; 0x02
    4938:	c3 53       	subi	r28, 0x33	; 51
    493a:	df 4f       	sbci	r29, 0xFF	; 255
    493c:	f8 83       	st	Y, r31
    493e:	cd 5c       	subi	r28, 0xCD	; 205
    4940:	d0 40       	sbci	r29, 0x00	; 0
    4942:	c5 52       	subi	r28, 0x25	; 37
    4944:	df 4f       	sbci	r29, 0xFF	; 255
    4946:	a8 81       	ld	r26, Y
    4948:	b9 81       	ldd	r27, Y+1	; 0x01
    494a:	cb 5d       	subi	r28, 0xDB	; 219
    494c:	d0 40       	sbci	r29, 0x00	; 0
    494e:	13 96       	adiw	r26, 0x03	; 3
    4950:	bc 91       	ld	r27, X
    4952:	c2 53       	subi	r28, 0x32	; 50
    4954:	df 4f       	sbci	r29, 0xFF	; 255
    4956:	b8 83       	st	Y, r27
    4958:	ce 5c       	subi	r28, 0xCE	; 206
    495a:	d0 40       	sbci	r29, 0x00	; 0
    495c:	c5 52       	subi	r28, 0x25	; 37
    495e:	df 4f       	sbci	r29, 0xFF	; 255
    4960:	e8 81       	ld	r30, Y
    4962:	f9 81       	ldd	r31, Y+1	; 0x01
    4964:	cb 5d       	subi	r28, 0xDB	; 219
    4966:	d0 40       	sbci	r29, 0x00	; 0
    4968:	f4 81       	ldd	r31, Z+4	; 0x04
    496a:	c1 53       	subi	r28, 0x31	; 49
    496c:	df 4f       	sbci	r29, 0xFF	; 255
    496e:	f8 83       	st	Y, r31
    4970:	cf 5c       	subi	r28, 0xCF	; 207
    4972:	d0 40       	sbci	r29, 0x00	; 0
    4974:	c5 52       	subi	r28, 0x25	; 37
    4976:	df 4f       	sbci	r29, 0xFF	; 255
    4978:	a8 81       	ld	r26, Y
    497a:	b9 81       	ldd	r27, Y+1	; 0x01
    497c:	cb 5d       	subi	r28, 0xDB	; 219
    497e:	d0 40       	sbci	r29, 0x00	; 0
    4980:	15 96       	adiw	r26, 0x05	; 5
    4982:	bc 91       	ld	r27, X
    4984:	cd 52       	subi	r28, 0x2D	; 45
    4986:	df 4f       	sbci	r29, 0xFF	; 255
    4988:	b8 83       	st	Y, r27
    498a:	c3 5d       	subi	r28, 0xD3	; 211
    498c:	d0 40       	sbci	r29, 0x00	; 0
    498e:	c5 52       	subi	r28, 0x25	; 37
    4990:	df 4f       	sbci	r29, 0xFF	; 255
    4992:	e8 81       	ld	r30, Y
    4994:	f9 81       	ldd	r31, Y+1	; 0x01
    4996:	cb 5d       	subi	r28, 0xDB	; 219
    4998:	d0 40       	sbci	r29, 0x00	; 0
    499a:	f6 81       	ldd	r31, Z+6	; 0x06
    499c:	cc 52       	subi	r28, 0x2C	; 44
    499e:	df 4f       	sbci	r29, 0xFF	; 255
    49a0:	f8 83       	st	Y, r31
    49a2:	c4 5d       	subi	r28, 0xD4	; 212
    49a4:	d0 40       	sbci	r29, 0x00	; 0
    49a6:	c5 52       	subi	r28, 0x25	; 37
    49a8:	df 4f       	sbci	r29, 0xFF	; 255
    49aa:	a8 81       	ld	r26, Y
    49ac:	b9 81       	ldd	r27, Y+1	; 0x01
    49ae:	cb 5d       	subi	r28, 0xDB	; 219
    49b0:	d0 40       	sbci	r29, 0x00	; 0
    49b2:	17 96       	adiw	r26, 0x07	; 7
    49b4:	4c 90       	ld	r4, X
    49b6:	db c1       	rjmp	.+950    	; 0x4d6e <sha2_large_common_nextBlock+0x64a>
    49b8:	e2 96       	adiw	r28, 0x32	; 50
    49ba:	5f ac       	ldd	r5, Y+63	; 0x3f
    49bc:	e2 97       	sbiw	r28, 0x32	; 50
    49be:	e3 96       	adiw	r28, 0x33	; 51
    49c0:	6f ac       	ldd	r6, Y+63	; 0x3f
    49c2:	e3 97       	sbiw	r28, 0x33	; 51
    49c4:	e4 96       	adiw	r28, 0x34	; 52
    49c6:	7f ac       	ldd	r7, Y+63	; 0x3f
    49c8:	e4 97       	sbiw	r28, 0x34	; 52
    49ca:	e5 96       	adiw	r28, 0x35	; 53
    49cc:	8f ac       	ldd	r8, Y+63	; 0x3f
    49ce:	e5 97       	sbiw	r28, 0x35	; 53
    49d0:	e6 96       	adiw	r28, 0x36	; 54
    49d2:	9f ac       	ldd	r9, Y+63	; 0x3f
    49d4:	e6 97       	sbiw	r28, 0x36	; 54
    49d6:	e7 96       	adiw	r28, 0x37	; 55
    49d8:	bf ad       	ldd	r27, Y+63	; 0x3f
    49da:	e7 97       	sbiw	r28, 0x37	; 55
    49dc:	e8 96       	adiw	r28, 0x38	; 56
    49de:	af ad       	ldd	r26, Y+63	; 0x3f
    49e0:	e8 97       	sbiw	r28, 0x38	; 56
    49e2:	e9 96       	adiw	r28, 0x39	; 57
    49e4:	ff ad       	ldd	r31, Y+63	; 0x3f
    49e6:	e9 97       	sbiw	r28, 0x39	; 57
    49e8:	e9 85       	ldd	r30, Y+9	; 0x09
    49ea:	c5 53       	subi	r28, 0x35	; 53
    49ec:	df 4f       	sbci	r29, 0xFF	; 255
    49ee:	e8 83       	st	Y, r30
    49f0:	cb 5c       	subi	r28, 0xCB	; 203
    49f2:	d0 40       	sbci	r29, 0x00	; 0
    49f4:	ea 85       	ldd	r30, Y+10	; 0x0a
    49f6:	c4 53       	subi	r28, 0x34	; 52
    49f8:	df 4f       	sbci	r29, 0xFF	; 255
    49fa:	e8 83       	st	Y, r30
    49fc:	cc 5c       	subi	r28, 0xCC	; 204
    49fe:	d0 40       	sbci	r29, 0x00	; 0
    4a00:	eb 85       	ldd	r30, Y+11	; 0x0b
    4a02:	c3 53       	subi	r28, 0x33	; 51
    4a04:	df 4f       	sbci	r29, 0xFF	; 255
    4a06:	e8 83       	st	Y, r30
    4a08:	cd 5c       	subi	r28, 0xCD	; 205
    4a0a:	d0 40       	sbci	r29, 0x00	; 0
    4a0c:	ec 85       	ldd	r30, Y+12	; 0x0c
    4a0e:	c2 53       	subi	r28, 0x32	; 50
    4a10:	df 4f       	sbci	r29, 0xFF	; 255
    4a12:	e8 83       	st	Y, r30
    4a14:	ce 5c       	subi	r28, 0xCE	; 206
    4a16:	d0 40       	sbci	r29, 0x00	; 0
    4a18:	ed 85       	ldd	r30, Y+13	; 0x0d
    4a1a:	c1 53       	subi	r28, 0x31	; 49
    4a1c:	df 4f       	sbci	r29, 0xFF	; 255
    4a1e:	e8 83       	st	Y, r30
    4a20:	cf 5c       	subi	r28, 0xCF	; 207
    4a22:	d0 40       	sbci	r29, 0x00	; 0
    4a24:	2e 84       	ldd	r2, Y+14	; 0x0e
    4a26:	3f 84       	ldd	r3, Y+15	; 0x0f
    4a28:	48 88       	ldd	r4, Y+16	; 0x10
    4a2a:	2a 96       	adiw	r28, 0x0a	; 10
    4a2c:	2f ad       	ldd	r18, Y+63	; 0x3f
    4a2e:	2a 97       	sbiw	r28, 0x0a	; 10
    4a30:	2b 96       	adiw	r28, 0x0b	; 11
    4a32:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a34:	2b 97       	sbiw	r28, 0x0b	; 11
    4a36:	2c 96       	adiw	r28, 0x0c	; 12
    4a38:	4f ad       	ldd	r20, Y+63	; 0x3f
    4a3a:	2c 97       	sbiw	r28, 0x0c	; 12
    4a3c:	2d 96       	adiw	r28, 0x0d	; 13
    4a3e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4a40:	2d 97       	sbiw	r28, 0x0d	; 13
    4a42:	2e 96       	adiw	r28, 0x0e	; 14
    4a44:	6f ad       	ldd	r22, Y+63	; 0x3f
    4a46:	2e 97       	sbiw	r28, 0x0e	; 14
    4a48:	2f 96       	adiw	r28, 0x0f	; 15
    4a4a:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a4c:	2f 97       	sbiw	r28, 0x0f	; 15
    4a4e:	60 96       	adiw	r28, 0x10	; 16
    4a50:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a52:	60 97       	sbiw	r28, 0x10	; 16
    4a54:	61 96       	adiw	r28, 0x11	; 17
    4a56:	9f ad       	ldd	r25, Y+63	; 0x3f
    4a58:	61 97       	sbiw	r28, 0x11	; 17
    4a5a:	a9 80       	ldd	r10, Y+1	; 0x01
    4a5c:	ba 80       	ldd	r11, Y+2	; 0x02
    4a5e:	cb 80       	ldd	r12, Y+3	; 0x03
    4a60:	dc 80       	ldd	r13, Y+4	; 0x04
    4a62:	ed 80       	ldd	r14, Y+5	; 0x05
    4a64:	fe 80       	ldd	r15, Y+6	; 0x06
    4a66:	0f 81       	ldd	r16, Y+7	; 0x07
    4a68:	18 85       	ldd	r17, Y+8	; 0x08
    4a6a:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    4a6e:	cd 52       	subi	r28, 0x2D	; 45
    4a70:	df 4f       	sbci	r29, 0xFF	; 255
    4a72:	28 83       	st	Y, r18
    4a74:	c3 5d       	subi	r28, 0xD3	; 211
    4a76:	d0 40       	sbci	r29, 0x00	; 0
    4a78:	cc 52       	subi	r28, 0x2C	; 44
    4a7a:	df 4f       	sbci	r29, 0xFF	; 255
    4a7c:	38 83       	st	Y, r19
    4a7e:	c4 5d       	subi	r28, 0xD4	; 212
    4a80:	d0 40       	sbci	r29, 0x00	; 0
    4a82:	cb 52       	subi	r28, 0x2B	; 43
    4a84:	df 4f       	sbci	r29, 0xFF	; 255
    4a86:	48 83       	st	Y, r20
    4a88:	c5 5d       	subi	r28, 0xD5	; 213
    4a8a:	d0 40       	sbci	r29, 0x00	; 0
    4a8c:	ca 52       	subi	r28, 0x2A	; 42
    4a8e:	df 4f       	sbci	r29, 0xFF	; 255
    4a90:	58 83       	st	Y, r21
    4a92:	c6 5d       	subi	r28, 0xD6	; 214
    4a94:	d0 40       	sbci	r29, 0x00	; 0
    4a96:	c9 52       	subi	r28, 0x29	; 41
    4a98:	df 4f       	sbci	r29, 0xFF	; 255
    4a9a:	68 83       	st	Y, r22
    4a9c:	c7 5d       	subi	r28, 0xD7	; 215
    4a9e:	d0 40       	sbci	r29, 0x00	; 0
    4aa0:	c8 52       	subi	r28, 0x28	; 40
    4aa2:	df 4f       	sbci	r29, 0xFF	; 255
    4aa4:	78 83       	st	Y, r23
    4aa6:	c8 5d       	subi	r28, 0xD8	; 216
    4aa8:	d0 40       	sbci	r29, 0x00	; 0
    4aaa:	c7 52       	subi	r28, 0x27	; 39
    4aac:	df 4f       	sbci	r29, 0xFF	; 255
    4aae:	88 83       	st	Y, r24
    4ab0:	c9 5d       	subi	r28, 0xD9	; 217
    4ab2:	d0 40       	sbci	r29, 0x00	; 0
    4ab4:	c6 52       	subi	r28, 0x26	; 38
    4ab6:	df 4f       	sbci	r29, 0xFF	; 255
    4ab8:	98 83       	st	Y, r25
    4aba:	ca 5d       	subi	r28, 0xDA	; 218
    4abc:	d0 40       	sbci	r29, 0x00	; 0
    4abe:	25 2d       	mov	r18, r5
    4ac0:	36 2d       	mov	r19, r6
    4ac2:	47 2d       	mov	r20, r7
    4ac4:	58 2d       	mov	r21, r8
    4ac6:	69 2d       	mov	r22, r9
    4ac8:	7b 2f       	mov	r23, r27
    4aca:	8a 2f       	mov	r24, r26
    4acc:	9f 2f       	mov	r25, r31
    4ace:	03 e0       	ldi	r16, 0x03	; 3
    4ad0:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    4ad4:	a2 2e       	mov	r10, r18
    4ad6:	b3 2e       	mov	r11, r19
    4ad8:	c4 2e       	mov	r12, r20
    4ada:	d5 2e       	mov	r13, r21
    4adc:	e6 2e       	mov	r14, r22
    4ade:	f7 2e       	mov	r15, r23
    4ae0:	e8 2f       	mov	r30, r24
    4ae2:	19 2f       	mov	r17, r25
    4ae4:	25 2d       	mov	r18, r5
    4ae6:	36 2d       	mov	r19, r6
    4ae8:	47 2d       	mov	r20, r7
    4aea:	58 2d       	mov	r21, r8
    4aec:	69 2d       	mov	r22, r9
    4aee:	7b 2f       	mov	r23, r27
    4af0:	8a 2f       	mov	r24, r26
    4af2:	9f 2f       	mov	r25, r31
    4af4:	0d e2       	ldi	r16, 0x2D	; 45
    4af6:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    4afa:	a2 26       	eor	r10, r18
    4afc:	b3 26       	eor	r11, r19
    4afe:	c4 26       	eor	r12, r20
    4b00:	d5 26       	eor	r13, r21
    4b02:	e6 26       	eor	r14, r22
    4b04:	f7 26       	eor	r15, r23
    4b06:	e8 27       	eor	r30, r24
    4b08:	19 27       	eor	r17, r25
    4b0a:	25 2d       	mov	r18, r5
    4b0c:	36 2d       	mov	r19, r6
    4b0e:	47 2d       	mov	r20, r7
    4b10:	58 2d       	mov	r21, r8
    4b12:	69 2d       	mov	r22, r9
    4b14:	7b 2f       	mov	r23, r27
    4b16:	8a 2f       	mov	r24, r26
    4b18:	9f 2f       	mov	r25, r31
    4b1a:	06 e0       	ldi	r16, 0x06	; 6
    4b1c:	0e 94 6d 32 	call	0x64da	; 0x64da <__lshrdi3>
    4b20:	a2 26       	eor	r10, r18
    4b22:	b3 26       	eor	r11, r19
    4b24:	c4 26       	eor	r12, r20
    4b26:	d5 26       	eor	r13, r21
    4b28:	e6 26       	eor	r14, r22
    4b2a:	f7 26       	eor	r15, r23
    4b2c:	0e 2f       	mov	r16, r30
    4b2e:	08 27       	eor	r16, r24
    4b30:	19 27       	eor	r17, r25
    4b32:	cd 52       	subi	r28, 0x2D	; 45
    4b34:	df 4f       	sbci	r29, 0xFF	; 255
    4b36:	28 81       	ld	r18, Y
    4b38:	c3 5d       	subi	r28, 0xD3	; 211
    4b3a:	d0 40       	sbci	r29, 0x00	; 0
    4b3c:	cc 52       	subi	r28, 0x2C	; 44
    4b3e:	df 4f       	sbci	r29, 0xFF	; 255
    4b40:	38 81       	ld	r19, Y
    4b42:	c4 5d       	subi	r28, 0xD4	; 212
    4b44:	d0 40       	sbci	r29, 0x00	; 0
    4b46:	cb 52       	subi	r28, 0x2B	; 43
    4b48:	df 4f       	sbci	r29, 0xFF	; 255
    4b4a:	48 81       	ld	r20, Y
    4b4c:	c5 5d       	subi	r28, 0xD5	; 213
    4b4e:	d0 40       	sbci	r29, 0x00	; 0
    4b50:	ca 52       	subi	r28, 0x2A	; 42
    4b52:	df 4f       	sbci	r29, 0xFF	; 255
    4b54:	58 81       	ld	r21, Y
    4b56:	c6 5d       	subi	r28, 0xD6	; 214
    4b58:	d0 40       	sbci	r29, 0x00	; 0
    4b5a:	c9 52       	subi	r28, 0x29	; 41
    4b5c:	df 4f       	sbci	r29, 0xFF	; 255
    4b5e:	68 81       	ld	r22, Y
    4b60:	c7 5d       	subi	r28, 0xD7	; 215
    4b62:	d0 40       	sbci	r29, 0x00	; 0
    4b64:	c8 52       	subi	r28, 0x28	; 40
    4b66:	df 4f       	sbci	r29, 0xFF	; 255
    4b68:	78 81       	ld	r23, Y
    4b6a:	c8 5d       	subi	r28, 0xD8	; 216
    4b6c:	d0 40       	sbci	r29, 0x00	; 0
    4b6e:	c7 52       	subi	r28, 0x27	; 39
    4b70:	df 4f       	sbci	r29, 0xFF	; 255
    4b72:	88 81       	ld	r24, Y
    4b74:	c9 5d       	subi	r28, 0xD9	; 217
    4b76:	d0 40       	sbci	r29, 0x00	; 0
    4b78:	c6 52       	subi	r28, 0x26	; 38
    4b7a:	df 4f       	sbci	r29, 0xFF	; 255
    4b7c:	98 81       	ld	r25, Y
    4b7e:	ca 5d       	subi	r28, 0xDA	; 218
    4b80:	d0 40       	sbci	r29, 0x00	; 0
    4b82:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    4b86:	62 2e       	mov	r6, r18
    4b88:	73 2e       	mov	r7, r19
    4b8a:	84 2e       	mov	r8, r20
    4b8c:	95 2e       	mov	r9, r21
    4b8e:	b6 2f       	mov	r27, r22
    4b90:	a7 2f       	mov	r26, r23
    4b92:	f8 2f       	mov	r31, r24
    4b94:	e9 2f       	mov	r30, r25
    4b96:	c5 53       	subi	r28, 0x35	; 53
    4b98:	df 4f       	sbci	r29, 0xFF	; 255
    4b9a:	28 81       	ld	r18, Y
    4b9c:	cb 5c       	subi	r28, 0xCB	; 203
    4b9e:	d0 40       	sbci	r29, 0x00	; 0
    4ba0:	c4 53       	subi	r28, 0x34	; 52
    4ba2:	df 4f       	sbci	r29, 0xFF	; 255
    4ba4:	38 81       	ld	r19, Y
    4ba6:	cc 5c       	subi	r28, 0xCC	; 204
    4ba8:	d0 40       	sbci	r29, 0x00	; 0
    4baa:	c3 53       	subi	r28, 0x33	; 51
    4bac:	df 4f       	sbci	r29, 0xFF	; 255
    4bae:	48 81       	ld	r20, Y
    4bb0:	cd 5c       	subi	r28, 0xCD	; 205
    4bb2:	d0 40       	sbci	r29, 0x00	; 0
    4bb4:	c2 53       	subi	r28, 0x32	; 50
    4bb6:	df 4f       	sbci	r29, 0xFF	; 255
    4bb8:	58 81       	ld	r21, Y
    4bba:	ce 5c       	subi	r28, 0xCE	; 206
    4bbc:	d0 40       	sbci	r29, 0x00	; 0
    4bbe:	c1 53       	subi	r28, 0x31	; 49
    4bc0:	df 4f       	sbci	r29, 0xFF	; 255
    4bc2:	68 81       	ld	r22, Y
    4bc4:	cf 5c       	subi	r28, 0xCF	; 207
    4bc6:	d0 40       	sbci	r29, 0x00	; 0
    4bc8:	72 2d       	mov	r23, r2
    4bca:	83 2d       	mov	r24, r3
    4bcc:	94 2d       	mov	r25, r4
    4bce:	08 e3       	ldi	r16, 0x38	; 56
    4bd0:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    4bd4:	a2 2e       	mov	r10, r18
    4bd6:	b3 2e       	mov	r11, r19
    4bd8:	c4 2e       	mov	r12, r20
    4bda:	d5 2e       	mov	r13, r21
    4bdc:	e6 2e       	mov	r14, r22
    4bde:	f7 2e       	mov	r15, r23
    4be0:	58 2e       	mov	r5, r24
    4be2:	19 2f       	mov	r17, r25
    4be4:	c5 53       	subi	r28, 0x35	; 53
    4be6:	df 4f       	sbci	r29, 0xFF	; 255
    4be8:	28 81       	ld	r18, Y
    4bea:	cb 5c       	subi	r28, 0xCB	; 203
    4bec:	d0 40       	sbci	r29, 0x00	; 0
    4bee:	c4 53       	subi	r28, 0x34	; 52
    4bf0:	df 4f       	sbci	r29, 0xFF	; 255
    4bf2:	38 81       	ld	r19, Y
    4bf4:	cc 5c       	subi	r28, 0xCC	; 204
    4bf6:	d0 40       	sbci	r29, 0x00	; 0
    4bf8:	c3 53       	subi	r28, 0x33	; 51
    4bfa:	df 4f       	sbci	r29, 0xFF	; 255
    4bfc:	48 81       	ld	r20, Y
    4bfe:	cd 5c       	subi	r28, 0xCD	; 205
    4c00:	d0 40       	sbci	r29, 0x00	; 0
    4c02:	c2 53       	subi	r28, 0x32	; 50
    4c04:	df 4f       	sbci	r29, 0xFF	; 255
    4c06:	58 81       	ld	r21, Y
    4c08:	ce 5c       	subi	r28, 0xCE	; 206
    4c0a:	d0 40       	sbci	r29, 0x00	; 0
    4c0c:	c1 53       	subi	r28, 0x31	; 49
    4c0e:	df 4f       	sbci	r29, 0xFF	; 255
    4c10:	68 81       	ld	r22, Y
    4c12:	cf 5c       	subi	r28, 0xCF	; 207
    4c14:	d0 40       	sbci	r29, 0x00	; 0
    4c16:	72 2d       	mov	r23, r2
    4c18:	83 2d       	mov	r24, r3
    4c1a:	94 2d       	mov	r25, r4
    4c1c:	0f e3       	ldi	r16, 0x3F	; 63
    4c1e:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    4c22:	a2 26       	eor	r10, r18
    4c24:	b3 26       	eor	r11, r19
    4c26:	c4 26       	eor	r12, r20
    4c28:	d5 26       	eor	r13, r21
    4c2a:	e6 26       	eor	r14, r22
    4c2c:	f7 26       	eor	r15, r23
    4c2e:	58 26       	eor	r5, r24
    4c30:	19 27       	eor	r17, r25
    4c32:	c5 53       	subi	r28, 0x35	; 53
    4c34:	df 4f       	sbci	r29, 0xFF	; 255
    4c36:	28 81       	ld	r18, Y
    4c38:	cb 5c       	subi	r28, 0xCB	; 203
    4c3a:	d0 40       	sbci	r29, 0x00	; 0
    4c3c:	c4 53       	subi	r28, 0x34	; 52
    4c3e:	df 4f       	sbci	r29, 0xFF	; 255
    4c40:	38 81       	ld	r19, Y
    4c42:	cc 5c       	subi	r28, 0xCC	; 204
    4c44:	d0 40       	sbci	r29, 0x00	; 0
    4c46:	c3 53       	subi	r28, 0x33	; 51
    4c48:	df 4f       	sbci	r29, 0xFF	; 255
    4c4a:	48 81       	ld	r20, Y
    4c4c:	cd 5c       	subi	r28, 0xCD	; 205
    4c4e:	d0 40       	sbci	r29, 0x00	; 0
    4c50:	c2 53       	subi	r28, 0x32	; 50
    4c52:	df 4f       	sbci	r29, 0xFF	; 255
    4c54:	58 81       	ld	r21, Y
    4c56:	ce 5c       	subi	r28, 0xCE	; 206
    4c58:	d0 40       	sbci	r29, 0x00	; 0
    4c5a:	c1 53       	subi	r28, 0x31	; 49
    4c5c:	df 4f       	sbci	r29, 0xFF	; 255
    4c5e:	68 81       	ld	r22, Y
    4c60:	cf 5c       	subi	r28, 0xCF	; 207
    4c62:	d0 40       	sbci	r29, 0x00	; 0
    4c64:	72 2d       	mov	r23, r2
    4c66:	83 2d       	mov	r24, r3
    4c68:	94 2d       	mov	r25, r4
    4c6a:	07 e0       	ldi	r16, 0x07	; 7
    4c6c:	0e 94 6d 32 	call	0x64da	; 0x64da <__lshrdi3>
    4c70:	a2 26       	eor	r10, r18
    4c72:	b3 26       	eor	r11, r19
    4c74:	c4 26       	eor	r12, r20
    4c76:	d5 26       	eor	r13, r21
    4c78:	e6 26       	eor	r14, r22
    4c7a:	f7 26       	eor	r15, r23
    4c7c:	05 2d       	mov	r16, r5
    4c7e:	08 27       	eor	r16, r24
    4c80:	19 27       	eor	r17, r25
    4c82:	26 2d       	mov	r18, r6
    4c84:	37 2d       	mov	r19, r7
    4c86:	48 2d       	mov	r20, r8
    4c88:	59 2d       	mov	r21, r9
    4c8a:	6b 2f       	mov	r22, r27
    4c8c:	7a 2f       	mov	r23, r26
    4c8e:	8f 2f       	mov	r24, r31
    4c90:	9e 2f       	mov	r25, r30
    4c92:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    4c96:	c5 53       	subi	r28, 0x35	; 53
    4c98:	df 4f       	sbci	r29, 0xFF	; 255
    4c9a:	28 83       	st	Y, r18
    4c9c:	cb 5c       	subi	r28, 0xCB	; 203
    4c9e:	d0 40       	sbci	r29, 0x00	; 0
    4ca0:	c4 53       	subi	r28, 0x34	; 52
    4ca2:	df 4f       	sbci	r29, 0xFF	; 255
    4ca4:	38 83       	st	Y, r19
    4ca6:	cc 5c       	subi	r28, 0xCC	; 204
    4ca8:	d0 40       	sbci	r29, 0x00	; 0
    4caa:	c3 53       	subi	r28, 0x33	; 51
    4cac:	df 4f       	sbci	r29, 0xFF	; 255
    4cae:	48 83       	st	Y, r20
    4cb0:	cd 5c       	subi	r28, 0xCD	; 205
    4cb2:	d0 40       	sbci	r29, 0x00	; 0
    4cb4:	c2 53       	subi	r28, 0x32	; 50
    4cb6:	df 4f       	sbci	r29, 0xFF	; 255
    4cb8:	58 83       	st	Y, r21
    4cba:	ce 5c       	subi	r28, 0xCE	; 206
    4cbc:	d0 40       	sbci	r29, 0x00	; 0
    4cbe:	c1 53       	subi	r28, 0x31	; 49
    4cc0:	df 4f       	sbci	r29, 0xFF	; 255
    4cc2:	68 83       	st	Y, r22
    4cc4:	cf 5c       	subi	r28, 0xCF	; 207
    4cc6:	d0 40       	sbci	r29, 0x00	; 0
    4cc8:	cd 52       	subi	r28, 0x2D	; 45
    4cca:	df 4f       	sbci	r29, 0xFF	; 255
    4ccc:	78 83       	st	Y, r23
    4cce:	c3 5d       	subi	r28, 0xD3	; 211
    4cd0:	d0 40       	sbci	r29, 0x00	; 0
    4cd2:	cc 52       	subi	r28, 0x2C	; 44
    4cd4:	df 4f       	sbci	r29, 0xFF	; 255
    4cd6:	88 83       	st	Y, r24
    4cd8:	c4 5d       	subi	r28, 0xD4	; 212
    4cda:	d0 40       	sbci	r29, 0x00	; 0
    4cdc:	49 2e       	mov	r4, r25
    4cde:	48 e7       	ldi	r20, 0x78	; 120
    4ce0:	50 e0       	ldi	r21, 0x00	; 0
    4ce2:	be 01       	movw	r22, r28
    4ce4:	67 5f       	subi	r22, 0xF7	; 247
    4ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ce8:	ce 01       	movw	r24, r28
    4cea:	01 96       	adiw	r24, 0x01	; 1
    4cec:	0e 94 46 34 	call	0x688c	; 0x688c <memmove>
    4cf0:	c5 53       	subi	r28, 0x35	; 53
    4cf2:	df 4f       	sbci	r29, 0xFF	; 255
    4cf4:	f8 81       	ld	r31, Y
    4cf6:	cb 5c       	subi	r28, 0xCB	; 203
    4cf8:	d0 40       	sbci	r29, 0x00	; 0
    4cfa:	ea 96       	adiw	r28, 0x3a	; 58
    4cfc:	ff af       	std	Y+63, r31	; 0x3f
    4cfe:	ea 97       	sbiw	r28, 0x3a	; 58
    4d00:	c4 53       	subi	r28, 0x34	; 52
    4d02:	df 4f       	sbci	r29, 0xFF	; 255
    4d04:	18 81       	ld	r17, Y
    4d06:	cc 5c       	subi	r28, 0xCC	; 204
    4d08:	d0 40       	sbci	r29, 0x00	; 0
    4d0a:	eb 96       	adiw	r28, 0x3b	; 59
    4d0c:	1f af       	std	Y+63, r17	; 0x3f
    4d0e:	eb 97       	sbiw	r28, 0x3b	; 59
    4d10:	c3 53       	subi	r28, 0x33	; 51
    4d12:	df 4f       	sbci	r29, 0xFF	; 255
    4d14:	88 81       	ld	r24, Y
    4d16:	cd 5c       	subi	r28, 0xCD	; 205
    4d18:	d0 40       	sbci	r29, 0x00	; 0
    4d1a:	ec 96       	adiw	r28, 0x3c	; 60
    4d1c:	8f af       	std	Y+63, r24	; 0x3f
    4d1e:	ec 97       	sbiw	r28, 0x3c	; 60
    4d20:	c2 53       	subi	r28, 0x32	; 50
    4d22:	df 4f       	sbci	r29, 0xFF	; 255
    4d24:	98 81       	ld	r25, Y
    4d26:	ce 5c       	subi	r28, 0xCE	; 206
    4d28:	d0 40       	sbci	r29, 0x00	; 0
    4d2a:	ed 96       	adiw	r28, 0x3d	; 61
    4d2c:	9f af       	std	Y+63, r25	; 0x3f
    4d2e:	ed 97       	sbiw	r28, 0x3d	; 61
    4d30:	c1 53       	subi	r28, 0x31	; 49
    4d32:	df 4f       	sbci	r29, 0xFF	; 255
    4d34:	a8 81       	ld	r26, Y
    4d36:	cf 5c       	subi	r28, 0xCF	; 207
    4d38:	d0 40       	sbci	r29, 0x00	; 0
    4d3a:	ee 96       	adiw	r28, 0x3e	; 62
    4d3c:	af af       	std	Y+63, r26	; 0x3f
    4d3e:	ee 97       	sbiw	r28, 0x3e	; 62
    4d40:	cd 52       	subi	r28, 0x2D	; 45
    4d42:	df 4f       	sbci	r29, 0xFF	; 255
    4d44:	b8 81       	ld	r27, Y
    4d46:	c3 5d       	subi	r28, 0xD3	; 211
    4d48:	d0 40       	sbci	r29, 0x00	; 0
    4d4a:	ef 96       	adiw	r28, 0x3f	; 63
    4d4c:	bf af       	std	Y+63, r27	; 0x3f
    4d4e:	ef 97       	sbiw	r28, 0x3f	; 63
    4d50:	cc 52       	subi	r28, 0x2C	; 44
    4d52:	df 4f       	sbci	r29, 0xFF	; 255
    4d54:	e8 81       	ld	r30, Y
    4d56:	c4 5d       	subi	r28, 0xD4	; 212
    4d58:	d0 40       	sbci	r29, 0x00	; 0
    4d5a:	c1 58       	subi	r28, 0x81	; 129
    4d5c:	df 4f       	sbci	r29, 0xFF	; 255
    4d5e:	e8 83       	st	Y, r30
    4d60:	cf 57       	subi	r28, 0x7F	; 127
    4d62:	d0 40       	sbci	r29, 0x00	; 0
    4d64:	c0 58       	subi	r28, 0x80	; 128
    4d66:	df 4f       	sbci	r29, 0xFF	; 255
    4d68:	48 82       	st	Y, r4
    4d6a:	c0 58       	subi	r28, 0x80	; 128
    4d6c:	d0 40       	sbci	r29, 0x00	; 0
    4d6e:	c7 54       	subi	r28, 0x47	; 71
    4d70:	df 4f       	sbci	r29, 0xFF	; 255
    4d72:	18 81       	ld	r17, Y
    4d74:	c9 5b       	subi	r28, 0xB9	; 185
    4d76:	d0 40       	sbci	r29, 0x00	; 0
    4d78:	cb 52       	subi	r28, 0x2B	; 43
    4d7a:	df 4f       	sbci	r29, 0xFF	; 255
    4d7c:	18 83       	st	Y, r17
    4d7e:	c5 5d       	subi	r28, 0xD5	; 213
    4d80:	d0 40       	sbci	r29, 0x00	; 0
    4d82:	c6 54       	subi	r28, 0x46	; 70
    4d84:	df 4f       	sbci	r29, 0xFF	; 255
    4d86:	a8 81       	ld	r26, Y
    4d88:	ca 5b       	subi	r28, 0xBA	; 186
    4d8a:	d0 40       	sbci	r29, 0x00	; 0
    4d8c:	ca 52       	subi	r28, 0x2A	; 42
    4d8e:	df 4f       	sbci	r29, 0xFF	; 255
    4d90:	a8 83       	st	Y, r26
    4d92:	c6 5d       	subi	r28, 0xD6	; 214
    4d94:	d0 40       	sbci	r29, 0x00	; 0
    4d96:	c5 54       	subi	r28, 0x45	; 69
    4d98:	df 4f       	sbci	r29, 0xFF	; 255
    4d9a:	b8 81       	ld	r27, Y
    4d9c:	cb 5b       	subi	r28, 0xBB	; 187
    4d9e:	d0 40       	sbci	r29, 0x00	; 0
    4da0:	c9 52       	subi	r28, 0x29	; 41
    4da2:	df 4f       	sbci	r29, 0xFF	; 255
    4da4:	b8 83       	st	Y, r27
    4da6:	c7 5d       	subi	r28, 0xD7	; 215
    4da8:	d0 40       	sbci	r29, 0x00	; 0
    4daa:	c4 54       	subi	r28, 0x44	; 68
    4dac:	df 4f       	sbci	r29, 0xFF	; 255
    4dae:	18 81       	ld	r17, Y
    4db0:	cc 5b       	subi	r28, 0xBC	; 188
    4db2:	d0 40       	sbci	r29, 0x00	; 0
    4db4:	c8 52       	subi	r28, 0x28	; 40
    4db6:	df 4f       	sbci	r29, 0xFF	; 255
    4db8:	18 83       	st	Y, r17
    4dba:	c8 5d       	subi	r28, 0xD8	; 216
    4dbc:	d0 40       	sbci	r29, 0x00	; 0
    4dbe:	c3 54       	subi	r28, 0x43	; 67
    4dc0:	df 4f       	sbci	r29, 0xFF	; 255
    4dc2:	a8 81       	ld	r26, Y
    4dc4:	cd 5b       	subi	r28, 0xBD	; 189
    4dc6:	d0 40       	sbci	r29, 0x00	; 0
    4dc8:	c7 52       	subi	r28, 0x27	; 39
    4dca:	df 4f       	sbci	r29, 0xFF	; 255
    4dcc:	a8 83       	st	Y, r26
    4dce:	c9 5d       	subi	r28, 0xD9	; 217
    4dd0:	d0 40       	sbci	r29, 0x00	; 0
    4dd2:	c2 54       	subi	r28, 0x42	; 66
    4dd4:	df 4f       	sbci	r29, 0xFF	; 255
    4dd6:	b8 81       	ld	r27, Y
    4dd8:	ce 5b       	subi	r28, 0xBE	; 190
    4dda:	d0 40       	sbci	r29, 0x00	; 0
    4ddc:	c6 52       	subi	r28, 0x26	; 38
    4dde:	df 4f       	sbci	r29, 0xFF	; 255
    4de0:	b8 83       	st	Y, r27
    4de2:	ca 5d       	subi	r28, 0xDA	; 218
    4de4:	d0 40       	sbci	r29, 0x00	; 0
    4de6:	c1 54       	subi	r28, 0x41	; 65
    4de8:	df 4f       	sbci	r29, 0xFF	; 255
    4dea:	18 81       	ld	r17, Y
    4dec:	cf 5b       	subi	r28, 0xBF	; 191
    4dee:	d0 40       	sbci	r29, 0x00	; 0
    4df0:	c3 52       	subi	r28, 0x23	; 35
    4df2:	df 4f       	sbci	r29, 0xFF	; 255
    4df4:	18 83       	st	Y, r17
    4df6:	cd 5d       	subi	r28, 0xDD	; 221
    4df8:	d0 40       	sbci	r29, 0x00	; 0
    4dfa:	c0 54       	subi	r28, 0x40	; 64
    4dfc:	df 4f       	sbci	r29, 0xFF	; 255
    4dfe:	a8 81       	ld	r26, Y
    4e00:	c0 5c       	subi	r28, 0xC0	; 192
    4e02:	d0 40       	sbci	r29, 0x00	; 0
    4e04:	c2 52       	subi	r28, 0x22	; 34
    4e06:	df 4f       	sbci	r29, 0xFF	; 255
    4e08:	a8 83       	st	Y, r26
    4e0a:	ce 5d       	subi	r28, 0xDE	; 222
    4e0c:	d0 40       	sbci	r29, 0x00	; 0
    4e0e:	cf 55       	subi	r28, 0x5F	; 95
    4e10:	df 4f       	sbci	r29, 0xFF	; 255
    4e12:	98 80       	ld	r9, Y
    4e14:	c1 5a       	subi	r28, 0xA1	; 161
    4e16:	d0 40       	sbci	r29, 0x00	; 0
    4e18:	ce 55       	subi	r28, 0x5E	; 94
    4e1a:	df 4f       	sbci	r29, 0xFF	; 255
    4e1c:	b8 80       	ld	r11, Y
    4e1e:	c2 5a       	subi	r28, 0xA2	; 162
    4e20:	d0 40       	sbci	r29, 0x00	; 0
    4e22:	cd 55       	subi	r28, 0x5D	; 93
    4e24:	df 4f       	sbci	r29, 0xFF	; 255
    4e26:	c8 80       	ld	r12, Y
    4e28:	c3 5a       	subi	r28, 0xA3	; 163
    4e2a:	d0 40       	sbci	r29, 0x00	; 0
    4e2c:	cc 55       	subi	r28, 0x5C	; 92
    4e2e:	df 4f       	sbci	r29, 0xFF	; 255
    4e30:	d8 80       	ld	r13, Y
    4e32:	c4 5a       	subi	r28, 0xA4	; 164
    4e34:	d0 40       	sbci	r29, 0x00	; 0
    4e36:	cb 55       	subi	r28, 0x5B	; 91
    4e38:	df 4f       	sbci	r29, 0xFF	; 255
    4e3a:	f8 80       	ld	r15, Y
    4e3c:	c5 5a       	subi	r28, 0xA5	; 165
    4e3e:	d0 40       	sbci	r29, 0x00	; 0
    4e40:	ca 55       	subi	r28, 0x5A	; 90
    4e42:	df 4f       	sbci	r29, 0xFF	; 255
    4e44:	18 81       	ld	r17, Y
    4e46:	c6 5a       	subi	r28, 0xA6	; 166
    4e48:	d0 40       	sbci	r29, 0x00	; 0
    4e4a:	c9 55       	subi	r28, 0x59	; 89
    4e4c:	df 4f       	sbci	r29, 0xFF	; 255
    4e4e:	b8 81       	ld	r27, Y
    4e50:	c7 5a       	subi	r28, 0xA7	; 167
    4e52:	d0 40       	sbci	r29, 0x00	; 0
    4e54:	c8 55       	subi	r28, 0x58	; 88
    4e56:	df 4f       	sbci	r29, 0xFF	; 255
    4e58:	a8 81       	ld	r26, Y
    4e5a:	c8 5a       	subi	r28, 0xA8	; 168
    4e5c:	d0 40       	sbci	r29, 0x00	; 0
    4e5e:	79 2d       	mov	r23, r9
    4e60:	70 95       	com	r23
    4e62:	6b 2d       	mov	r22, r11
    4e64:	60 95       	com	r22
    4e66:	5c 2d       	mov	r21, r12
    4e68:	50 95       	com	r21
    4e6a:	4d 2d       	mov	r20, r13
    4e6c:	40 95       	com	r20
    4e6e:	3f 2d       	mov	r19, r15
    4e70:	30 95       	com	r19
    4e72:	21 2f       	mov	r18, r17
    4e74:	20 95       	com	r18
    4e76:	9b 2f       	mov	r25, r27
    4e78:	90 95       	com	r25
    4e7a:	8a 2f       	mov	r24, r26
    4e7c:	80 95       	com	r24
    4e7e:	cf 54       	subi	r28, 0x4F	; 79
    4e80:	df 4f       	sbci	r29, 0xFF	; 255
    4e82:	68 80       	ld	r6, Y
    4e84:	c1 5b       	subi	r28, 0xB1	; 177
    4e86:	d0 40       	sbci	r29, 0x00	; 0
    4e88:	67 22       	and	r6, r23
    4e8a:	ce 54       	subi	r28, 0x4E	; 78
    4e8c:	df 4f       	sbci	r29, 0xFF	; 255
    4e8e:	88 80       	ld	r8, Y
    4e90:	c2 5b       	subi	r28, 0xB2	; 178
    4e92:	d0 40       	sbci	r29, 0x00	; 0
    4e94:	86 22       	and	r8, r22
    4e96:	cd 54       	subi	r28, 0x4D	; 77
    4e98:	df 4f       	sbci	r29, 0xFF	; 255
    4e9a:	e8 80       	ld	r14, Y
    4e9c:	c3 5b       	subi	r28, 0xB3	; 179
    4e9e:	d0 40       	sbci	r29, 0x00	; 0
    4ea0:	e5 22       	and	r14, r21
    4ea2:	cc 54       	subi	r28, 0x4C	; 76
    4ea4:	df 4f       	sbci	r29, 0xFF	; 255
    4ea6:	f8 81       	ld	r31, Y
    4ea8:	c4 5b       	subi	r28, 0xB4	; 180
    4eaa:	d0 40       	sbci	r29, 0x00	; 0
    4eac:	f4 23       	and	r31, r20
    4eae:	cb 54       	subi	r28, 0x4B	; 75
    4eb0:	df 4f       	sbci	r29, 0xFF	; 255
    4eb2:	78 81       	ld	r23, Y
    4eb4:	c5 5b       	subi	r28, 0xB5	; 181
    4eb6:	d0 40       	sbci	r29, 0x00	; 0
    4eb8:	73 23       	and	r23, r19
    4eba:	ca 54       	subi	r28, 0x4A	; 74
    4ebc:	df 4f       	sbci	r29, 0xFF	; 255
    4ebe:	58 81       	ld	r21, Y
    4ec0:	c6 5b       	subi	r28, 0xB6	; 182
    4ec2:	d0 40       	sbci	r29, 0x00	; 0
    4ec4:	52 23       	and	r21, r18
    4ec6:	c9 54       	subi	r28, 0x49	; 73
    4ec8:	df 4f       	sbci	r29, 0xFF	; 255
    4eca:	38 81       	ld	r19, Y
    4ecc:	c7 5b       	subi	r28, 0xB7	; 183
    4ece:	d0 40       	sbci	r29, 0x00	; 0
    4ed0:	39 23       	and	r19, r25
    4ed2:	c8 54       	subi	r28, 0x48	; 72
    4ed4:	df 4f       	sbci	r29, 0xFF	; 255
    4ed6:	98 81       	ld	r25, Y
    4ed8:	c8 5b       	subi	r28, 0xB8	; 184
    4eda:	d0 40       	sbci	r29, 0x00	; 0
    4edc:	98 23       	and	r25, r24
    4ede:	c7 55       	subi	r28, 0x57	; 87
    4ee0:	df 4f       	sbci	r29, 0xFF	; 255
    4ee2:	78 80       	ld	r7, Y
    4ee4:	c9 5a       	subi	r28, 0xA9	; 169
    4ee6:	d0 40       	sbci	r29, 0x00	; 0
    4ee8:	79 20       	and	r7, r9
    4eea:	c6 55       	subi	r28, 0x56	; 86
    4eec:	df 4f       	sbci	r29, 0xFF	; 255
    4eee:	a8 80       	ld	r10, Y
    4ef0:	ca 5a       	subi	r28, 0xAA	; 170
    4ef2:	d0 40       	sbci	r29, 0x00	; 0
    4ef4:	ab 20       	and	r10, r11
    4ef6:	c5 55       	subi	r28, 0x55	; 85
    4ef8:	df 4f       	sbci	r29, 0xFF	; 255
    4efa:	08 81       	ld	r16, Y
    4efc:	cb 5a       	subi	r28, 0xAB	; 171
    4efe:	d0 40       	sbci	r29, 0x00	; 0
    4f00:	0c 21       	and	r16, r12
    4f02:	c4 55       	subi	r28, 0x54	; 84
    4f04:	df 4f       	sbci	r29, 0xFF	; 255
    4f06:	e8 81       	ld	r30, Y
    4f08:	cc 5a       	subi	r28, 0xAC	; 172
    4f0a:	d0 40       	sbci	r29, 0x00	; 0
    4f0c:	ed 21       	and	r30, r13
    4f0e:	c3 55       	subi	r28, 0x53	; 83
    4f10:	df 4f       	sbci	r29, 0xFF	; 255
    4f12:	68 81       	ld	r22, Y
    4f14:	cd 5a       	subi	r28, 0xAD	; 173
    4f16:	d0 40       	sbci	r29, 0x00	; 0
    4f18:	6f 21       	and	r22, r15
    4f1a:	c2 55       	subi	r28, 0x52	; 82
    4f1c:	df 4f       	sbci	r29, 0xFF	; 255
    4f1e:	48 81       	ld	r20, Y
    4f20:	ce 5a       	subi	r28, 0xAE	; 174
    4f22:	d0 40       	sbci	r29, 0x00	; 0
    4f24:	41 23       	and	r20, r17
    4f26:	c1 55       	subi	r28, 0x51	; 81
    4f28:	df 4f       	sbci	r29, 0xFF	; 255
    4f2a:	28 81       	ld	r18, Y
    4f2c:	cf 5a       	subi	r28, 0xAF	; 175
    4f2e:	d0 40       	sbci	r29, 0x00	; 0
    4f30:	2b 23       	and	r18, r27
    4f32:	c0 55       	subi	r28, 0x50	; 80
    4f34:	df 4f       	sbci	r29, 0xFF	; 255
    4f36:	88 81       	ld	r24, Y
    4f38:	c0 5b       	subi	r28, 0xB0	; 176
    4f3a:	d0 40       	sbci	r29, 0x00	; 0
    4f3c:	8a 23       	and	r24, r26
    4f3e:	67 24       	eor	r6, r7
    4f40:	c1 52       	subi	r28, 0x21	; 33
    4f42:	df 4f       	sbci	r29, 0xFF	; 255
    4f44:	68 82       	st	Y, r6
    4f46:	cf 5d       	subi	r28, 0xDF	; 223
    4f48:	d0 40       	sbci	r29, 0x00	; 0
    4f4a:	8a 24       	eor	r8, r10
    4f4c:	c0 52       	subi	r28, 0x20	; 32
    4f4e:	df 4f       	sbci	r29, 0xFF	; 255
    4f50:	88 82       	st	Y, r8
    4f52:	c0 5e       	subi	r28, 0xE0	; 224
    4f54:	d0 40       	sbci	r29, 0x00	; 0
    4f56:	e0 26       	eor	r14, r16
    4f58:	cf 51       	subi	r28, 0x1F	; 31
    4f5a:	df 4f       	sbci	r29, 0xFF	; 255
    4f5c:	e8 82       	st	Y, r14
    4f5e:	c1 5e       	subi	r28, 0xE1	; 225
    4f60:	d0 40       	sbci	r29, 0x00	; 0
    4f62:	fe 27       	eor	r31, r30
    4f64:	ce 51       	subi	r28, 0x1E	; 30
    4f66:	df 4f       	sbci	r29, 0xFF	; 255
    4f68:	f8 83       	st	Y, r31
    4f6a:	c2 5e       	subi	r28, 0xE2	; 226
    4f6c:	d0 40       	sbci	r29, 0x00	; 0
    4f6e:	76 27       	eor	r23, r22
    4f70:	cd 51       	subi	r28, 0x1D	; 29
    4f72:	df 4f       	sbci	r29, 0xFF	; 255
    4f74:	78 83       	st	Y, r23
    4f76:	c3 5e       	subi	r28, 0xE3	; 227
    4f78:	d0 40       	sbci	r29, 0x00	; 0
    4f7a:	54 27       	eor	r21, r20
    4f7c:	cc 51       	subi	r28, 0x1C	; 28
    4f7e:	df 4f       	sbci	r29, 0xFF	; 255
    4f80:	58 83       	st	Y, r21
    4f82:	c4 5e       	subi	r28, 0xE4	; 228
    4f84:	d0 40       	sbci	r29, 0x00	; 0
    4f86:	32 27       	eor	r19, r18
    4f88:	cb 51       	subi	r28, 0x1B	; 27
    4f8a:	df 4f       	sbci	r29, 0xFF	; 255
    4f8c:	38 83       	st	Y, r19
    4f8e:	c5 5e       	subi	r28, 0xE5	; 229
    4f90:	d0 40       	sbci	r29, 0x00	; 0
    4f92:	98 27       	eor	r25, r24
    4f94:	ca 51       	subi	r28, 0x1A	; 26
    4f96:	df 4f       	sbci	r29, 0xFF	; 255
    4f98:	98 83       	st	Y, r25
    4f9a:	c6 5e       	subi	r28, 0xE6	; 230
    4f9c:	d0 40       	sbci	r29, 0x00	; 0
    4f9e:	cf 52       	subi	r28, 0x2F	; 47
    4fa0:	df 4f       	sbci	r29, 0xFF	; 255
    4fa2:	e8 81       	ld	r30, Y
    4fa4:	f9 81       	ldd	r31, Y+1	; 0x01
    4fa6:	c1 5d       	subi	r28, 0xD1	; 209
    4fa8:	d0 40       	sbci	r29, 0x00	; 0
    4faa:	45 91       	lpm	r20, Z+
    4fac:	55 91       	lpm	r21, Z+
    4fae:	65 91       	lpm	r22, Z+
    4fb0:	74 91       	lpm	r23, Z
    4fb2:	a4 2e       	mov	r10, r20
    4fb4:	cf 53       	subi	r28, 0x3F	; 63
    4fb6:	df 4f       	sbci	r29, 0xFF	; 255
    4fb8:	48 83       	st	Y, r20
    4fba:	59 83       	std	Y+1, r21	; 0x01
    4fbc:	6a 83       	std	Y+2, r22	; 0x02
    4fbe:	7b 83       	std	Y+3, r23	; 0x03
    4fc0:	c1 5c       	subi	r28, 0xC1	; 193
    4fc2:	d0 40       	sbci	r29, 0x00	; 0
    4fc4:	cf 52       	subi	r28, 0x2F	; 47
    4fc6:	df 4f       	sbci	r29, 0xFF	; 255
    4fc8:	e8 81       	ld	r30, Y
    4fca:	f9 81       	ldd	r31, Y+1	; 0x01
    4fcc:	c1 5d       	subi	r28, 0xD1	; 209
    4fce:	d0 40       	sbci	r29, 0x00	; 0
    4fd0:	34 96       	adiw	r30, 0x04	; 4
    4fd2:	45 91       	lpm	r20, Z+
    4fd4:	55 91       	lpm	r21, Z+
    4fd6:	65 91       	lpm	r22, Z+
    4fd8:	74 91       	lpm	r23, Z
    4fda:	e4 2e       	mov	r14, r20
    4fdc:	cb 53       	subi	r28, 0x3B	; 59
    4fde:	df 4f       	sbci	r29, 0xFF	; 255
    4fe0:	48 83       	st	Y, r20
    4fe2:	59 83       	std	Y+1, r21	; 0x01
    4fe4:	6a 83       	std	Y+2, r22	; 0x02
    4fe6:	7b 83       	std	Y+3, r23	; 0x03
    4fe8:	c5 5c       	subi	r28, 0xC5	; 197
    4fea:	d0 40       	sbci	r29, 0x00	; 0
    4fec:	29 2d       	mov	r18, r9
    4fee:	3b 2d       	mov	r19, r11
    4ff0:	4c 2d       	mov	r20, r12
    4ff2:	5d 2d       	mov	r21, r13
    4ff4:	6f 2d       	mov	r22, r15
    4ff6:	71 2f       	mov	r23, r17
    4ff8:	8b 2f       	mov	r24, r27
    4ffa:	9a 2f       	mov	r25, r26
    4ffc:	0e e2       	ldi	r16, 0x2E	; 46
    4ffe:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    5002:	22 2e       	mov	r2, r18
    5004:	33 2e       	mov	r3, r19
    5006:	54 2e       	mov	r5, r20
    5008:	65 2e       	mov	r6, r21
    500a:	76 2e       	mov	r7, r22
    500c:	87 2e       	mov	r8, r23
    500e:	f8 2f       	mov	r31, r24
    5010:	e9 2f       	mov	r30, r25
    5012:	29 2d       	mov	r18, r9
    5014:	3b 2d       	mov	r19, r11
    5016:	4c 2d       	mov	r20, r12
    5018:	5d 2d       	mov	r21, r13
    501a:	6f 2d       	mov	r22, r15
    501c:	71 2f       	mov	r23, r17
    501e:	8b 2f       	mov	r24, r27
    5020:	9a 2f       	mov	r25, r26
    5022:	02 e3       	ldi	r16, 0x32	; 50
    5024:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    5028:	22 26       	eor	r2, r18
    502a:	33 26       	eor	r3, r19
    502c:	54 26       	eor	r5, r20
    502e:	65 26       	eor	r6, r21
    5030:	76 26       	eor	r7, r22
    5032:	87 26       	eor	r8, r23
    5034:	f8 27       	eor	r31, r24
    5036:	e9 27       	eor	r30, r25
    5038:	29 2d       	mov	r18, r9
    503a:	3b 2d       	mov	r19, r11
    503c:	4c 2d       	mov	r20, r12
    503e:	5d 2d       	mov	r21, r13
    5040:	6f 2d       	mov	r22, r15
    5042:	71 2f       	mov	r23, r17
    5044:	8b 2f       	mov	r24, r27
    5046:	9a 2f       	mov	r25, r26
    5048:	07 e1       	ldi	r16, 0x17	; 23
    504a:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    504e:	22 26       	eor	r2, r18
    5050:	33 26       	eor	r3, r19
    5052:	54 26       	eor	r5, r20
    5054:	65 26       	eor	r6, r21
    5056:	76 26       	eor	r7, r22
    5058:	87 26       	eor	r8, r23
    505a:	f8 27       	eor	r31, r24
    505c:	e9 27       	eor	r30, r25
    505e:	cb 52       	subi	r28, 0x2B	; 43
    5060:	df 4f       	sbci	r29, 0xFF	; 255
    5062:	28 81       	ld	r18, Y
    5064:	c5 5d       	subi	r28, 0xD5	; 213
    5066:	d0 40       	sbci	r29, 0x00	; 0
    5068:	ca 52       	subi	r28, 0x2A	; 42
    506a:	df 4f       	sbci	r29, 0xFF	; 255
    506c:	38 81       	ld	r19, Y
    506e:	c6 5d       	subi	r28, 0xD6	; 214
    5070:	d0 40       	sbci	r29, 0x00	; 0
    5072:	c9 52       	subi	r28, 0x29	; 41
    5074:	df 4f       	sbci	r29, 0xFF	; 255
    5076:	48 81       	ld	r20, Y
    5078:	c7 5d       	subi	r28, 0xD7	; 215
    507a:	d0 40       	sbci	r29, 0x00	; 0
    507c:	c8 52       	subi	r28, 0x28	; 40
    507e:	df 4f       	sbci	r29, 0xFF	; 255
    5080:	58 81       	ld	r21, Y
    5082:	c8 5d       	subi	r28, 0xD8	; 216
    5084:	d0 40       	sbci	r29, 0x00	; 0
    5086:	c7 52       	subi	r28, 0x27	; 39
    5088:	df 4f       	sbci	r29, 0xFF	; 255
    508a:	68 81       	ld	r22, Y
    508c:	c9 5d       	subi	r28, 0xD9	; 217
    508e:	d0 40       	sbci	r29, 0x00	; 0
    5090:	c6 52       	subi	r28, 0x26	; 38
    5092:	df 4f       	sbci	r29, 0xFF	; 255
    5094:	78 81       	ld	r23, Y
    5096:	ca 5d       	subi	r28, 0xDA	; 218
    5098:	d0 40       	sbci	r29, 0x00	; 0
    509a:	c3 52       	subi	r28, 0x23	; 35
    509c:	df 4f       	sbci	r29, 0xFF	; 255
    509e:	88 81       	ld	r24, Y
    50a0:	cd 5d       	subi	r28, 0xDD	; 221
    50a2:	d0 40       	sbci	r29, 0x00	; 0
    50a4:	c2 52       	subi	r28, 0x22	; 34
    50a6:	df 4f       	sbci	r29, 0xFF	; 255
    50a8:	98 81       	ld	r25, Y
    50aa:	ce 5d       	subi	r28, 0xDE	; 222
    50ac:	d0 40       	sbci	r29, 0x00	; 0
    50ae:	ce 53       	subi	r28, 0x3E	; 62
    50b0:	df 4f       	sbci	r29, 0xFF	; 255
    50b2:	b8 80       	ld	r11, Y
    50b4:	c2 5c       	subi	r28, 0xC2	; 194
    50b6:	d0 40       	sbci	r29, 0x00	; 0
    50b8:	cd 53       	subi	r28, 0x3D	; 61
    50ba:	df 4f       	sbci	r29, 0xFF	; 255
    50bc:	c8 80       	ld	r12, Y
    50be:	c3 5c       	subi	r28, 0xC3	; 195
    50c0:	d0 40       	sbci	r29, 0x00	; 0
    50c2:	cc 53       	subi	r28, 0x3C	; 60
    50c4:	df 4f       	sbci	r29, 0xFF	; 255
    50c6:	d8 80       	ld	r13, Y
    50c8:	c4 5c       	subi	r28, 0xC4	; 196
    50ca:	d0 40       	sbci	r29, 0x00	; 0
    50cc:	ca 53       	subi	r28, 0x3A	; 58
    50ce:	df 4f       	sbci	r29, 0xFF	; 255
    50d0:	f8 80       	ld	r15, Y
    50d2:	c6 5c       	subi	r28, 0xC6	; 198
    50d4:	d0 40       	sbci	r29, 0x00	; 0
    50d6:	c9 53       	subi	r28, 0x39	; 57
    50d8:	df 4f       	sbci	r29, 0xFF	; 255
    50da:	08 81       	ld	r16, Y
    50dc:	c7 5c       	subi	r28, 0xC7	; 199
    50de:	d0 40       	sbci	r29, 0x00	; 0
    50e0:	c8 53       	subi	r28, 0x38	; 56
    50e2:	df 4f       	sbci	r29, 0xFF	; 255
    50e4:	18 81       	ld	r17, Y
    50e6:	c8 5c       	subi	r28, 0xC8	; 200
    50e8:	d0 40       	sbci	r29, 0x00	; 0
    50ea:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    50ee:	a2 2e       	mov	r10, r18
    50f0:	b3 2e       	mov	r11, r19
    50f2:	c4 2e       	mov	r12, r20
    50f4:	d5 2e       	mov	r13, r21
    50f6:	e6 2e       	mov	r14, r22
    50f8:	f7 2e       	mov	r15, r23
    50fa:	08 2f       	mov	r16, r24
    50fc:	19 2f       	mov	r17, r25
    50fe:	22 2d       	mov	r18, r2
    5100:	33 2d       	mov	r19, r3
    5102:	45 2d       	mov	r20, r5
    5104:	56 2d       	mov	r21, r6
    5106:	67 2d       	mov	r22, r7
    5108:	78 2d       	mov	r23, r8
    510a:	8f 2f       	mov	r24, r31
    510c:	9e 2f       	mov	r25, r30
    510e:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    5112:	c1 52       	subi	r28, 0x21	; 33
    5114:	df 4f       	sbci	r29, 0xFF	; 255
    5116:	a8 80       	ld	r10, Y
    5118:	cf 5d       	subi	r28, 0xDF	; 223
    511a:	d0 40       	sbci	r29, 0x00	; 0
    511c:	c0 52       	subi	r28, 0x20	; 32
    511e:	df 4f       	sbci	r29, 0xFF	; 255
    5120:	b8 80       	ld	r11, Y
    5122:	c0 5e       	subi	r28, 0xE0	; 224
    5124:	d0 40       	sbci	r29, 0x00	; 0
    5126:	cf 51       	subi	r28, 0x1F	; 31
    5128:	df 4f       	sbci	r29, 0xFF	; 255
    512a:	c8 80       	ld	r12, Y
    512c:	c1 5e       	subi	r28, 0xE1	; 225
    512e:	d0 40       	sbci	r29, 0x00	; 0
    5130:	ce 51       	subi	r28, 0x1E	; 30
    5132:	df 4f       	sbci	r29, 0xFF	; 255
    5134:	d8 80       	ld	r13, Y
    5136:	c2 5e       	subi	r28, 0xE2	; 226
    5138:	d0 40       	sbci	r29, 0x00	; 0
    513a:	cd 51       	subi	r28, 0x1D	; 29
    513c:	df 4f       	sbci	r29, 0xFF	; 255
    513e:	e8 80       	ld	r14, Y
    5140:	c3 5e       	subi	r28, 0xE3	; 227
    5142:	d0 40       	sbci	r29, 0x00	; 0
    5144:	cc 51       	subi	r28, 0x1C	; 28
    5146:	df 4f       	sbci	r29, 0xFF	; 255
    5148:	f8 80       	ld	r15, Y
    514a:	c4 5e       	subi	r28, 0xE4	; 228
    514c:	d0 40       	sbci	r29, 0x00	; 0
    514e:	cb 51       	subi	r28, 0x1B	; 27
    5150:	df 4f       	sbci	r29, 0xFF	; 255
    5152:	08 81       	ld	r16, Y
    5154:	c5 5e       	subi	r28, 0xE5	; 229
    5156:	d0 40       	sbci	r29, 0x00	; 0
    5158:	ca 51       	subi	r28, 0x1A	; 26
    515a:	df 4f       	sbci	r29, 0xFF	; 255
    515c:	18 81       	ld	r17, Y
    515e:	c6 5e       	subi	r28, 0xE6	; 230
    5160:	d0 40       	sbci	r29, 0x00	; 0
    5162:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    5166:	c5 53       	subi	r28, 0x35	; 53
    5168:	df 4f       	sbci	r29, 0xFF	; 255
    516a:	a8 80       	ld	r10, Y
    516c:	cb 5c       	subi	r28, 0xCB	; 203
    516e:	d0 40       	sbci	r29, 0x00	; 0
    5170:	c4 53       	subi	r28, 0x34	; 52
    5172:	df 4f       	sbci	r29, 0xFF	; 255
    5174:	b8 80       	ld	r11, Y
    5176:	cc 5c       	subi	r28, 0xCC	; 204
    5178:	d0 40       	sbci	r29, 0x00	; 0
    517a:	c3 53       	subi	r28, 0x33	; 51
    517c:	df 4f       	sbci	r29, 0xFF	; 255
    517e:	c8 80       	ld	r12, Y
    5180:	cd 5c       	subi	r28, 0xCD	; 205
    5182:	d0 40       	sbci	r29, 0x00	; 0
    5184:	c2 53       	subi	r28, 0x32	; 50
    5186:	df 4f       	sbci	r29, 0xFF	; 255
    5188:	d8 80       	ld	r13, Y
    518a:	ce 5c       	subi	r28, 0xCE	; 206
    518c:	d0 40       	sbci	r29, 0x00	; 0
    518e:	c1 53       	subi	r28, 0x31	; 49
    5190:	df 4f       	sbci	r29, 0xFF	; 255
    5192:	e8 80       	ld	r14, Y
    5194:	cf 5c       	subi	r28, 0xCF	; 207
    5196:	d0 40       	sbci	r29, 0x00	; 0
    5198:	cd 52       	subi	r28, 0x2D	; 45
    519a:	df 4f       	sbci	r29, 0xFF	; 255
    519c:	f8 80       	ld	r15, Y
    519e:	c3 5d       	subi	r28, 0xD3	; 211
    51a0:	d0 40       	sbci	r29, 0x00	; 0
    51a2:	cc 52       	subi	r28, 0x2C	; 44
    51a4:	df 4f       	sbci	r29, 0xFF	; 255
    51a6:	08 81       	ld	r16, Y
    51a8:	c4 5d       	subi	r28, 0xD4	; 212
    51aa:	d0 40       	sbci	r29, 0x00	; 0
    51ac:	14 2d       	mov	r17, r4
    51ae:	0e 94 a4 32 	call	0x6548	; 0x6548 <__adddi3>
    51b2:	c5 53       	subi	r28, 0x35	; 53
    51b4:	df 4f       	sbci	r29, 0xFF	; 255
    51b6:	28 83       	st	Y, r18
    51b8:	cb 5c       	subi	r28, 0xCB	; 203
    51ba:	d0 40       	sbci	r29, 0x00	; 0
    51bc:	c4 53       	subi	r28, 0x34	; 52
    51be:	df 4f       	sbci	r29, 0xFF	; 255
    51c0:	38 83       	st	Y, r19
    51c2:	cc 5c       	subi	r28, 0xCC	; 204
    51c4:	d0 40       	sbci	r29, 0x00	; 0
    51c6:	c3 53       	subi	r28, 0x33	; 51
    51c8:	df 4f       	sbci	r29, 0xFF	; 255
    51ca:	48 83       	st	Y, r20
    51cc:	cd 5c       	subi	r28, 0xCD	; 205
    51ce:	d0 40       	sbci	r29, 0x00	; 0
    51d0:	c2 53       	subi	r28, 0x32	; 50
    51d2:	df 4f       	sbci	r29, 0xFF	; 255
    51d4:	58 83       	st	Y, r21
    51d6:	ce 5c       	subi	r28, 0xCE	; 206
    51d8:	d0 40       	sbci	r29, 0x00	; 0
    51da:	c1 53       	subi	r28, 0x31	; 49
    51dc:	df 4f       	sbci	r29, 0xFF	; 255
    51de:	68 83       	st	Y, r22
    51e0:	cf 5c       	subi	r28, 0xCF	; 207
    51e2:	d0 40       	sbci	r29, 0x00	; 0
    51e4:	cd 52       	subi	r28, 0x2D	; 45
    51e6:	df 4f       	sbci	r29, 0xFF	; 255
    51e8:	78 83       	st	Y, r23
    51ea:	c3 5d       	subi	r28, 0xD3	; 211
    51ec:	d0 40       	sbci	r29, 0x00	; 0
    51ee:	cc 52       	subi	r28, 0x2C	; 44
    51f0:	df 4f       	sbci	r29, 0xFF	; 255
    51f2:	88 83       	st	Y, r24
    51f4:	c4 5d       	subi	r28, 0xD4	; 212
    51f6:	d0 40       	sbci	r29, 0x00	; 0
    51f8:	cb 52       	subi	r28, 0x2B	; 43
    51fa:	df 4f       	sbci	r29, 0xFF	; 255
    51fc:	98 83       	st	Y, r25
    51fe:	c5 5d       	subi	r28, 0xD5	; 213
    5200:	d0 40       	sbci	r29, 0x00	; 0
    5202:	cf 57       	subi	r28, 0x7F	; 127
    5204:	df 4f       	sbci	r29, 0xFF	; 255
    5206:	a8 80       	ld	r10, Y
    5208:	c1 58       	subi	r28, 0x81	; 129
    520a:	d0 40       	sbci	r29, 0x00	; 0
    520c:	ce 57       	subi	r28, 0x7E	; 126
    520e:	df 4f       	sbci	r29, 0xFF	; 255
    5210:	b8 80       	ld	r11, Y
    5212:	c2 58       	subi	r28, 0x82	; 130
    5214:	d0 40       	sbci	r29, 0x00	; 0
    5216:	cd 57       	subi	r28, 0x7D	; 125
    5218:	df 4f       	sbci	r29, 0xFF	; 255
    521a:	78 80       	ld	r7, Y
    521c:	c3 58       	subi	r28, 0x83	; 131
    521e:	d0 40       	sbci	r29, 0x00	; 0
    5220:	cc 57       	subi	r28, 0x7C	; 124
    5222:	df 4f       	sbci	r29, 0xFF	; 255
    5224:	68 80       	ld	r6, Y
    5226:	c4 58       	subi	r28, 0x84	; 132
    5228:	d0 40       	sbci	r29, 0x00	; 0
    522a:	cb 57       	subi	r28, 0x7B	; 123
    522c:	df 4f       	sbci	r29, 0xFF	; 255
    522e:	58 80       	ld	r5, Y
    5230:	c5 58       	subi	r28, 0x85	; 133
    5232:	d0 40       	sbci	r29, 0x00	; 0
    5234:	ca 57       	subi	r28, 0x7A	; 122
    5236:	df 4f       	sbci	r29, 0xFF	; 255
    5238:	48 80       	ld	r4, Y
    523a:	c6 58       	subi	r28, 0x86	; 134
    523c:	d0 40       	sbci	r29, 0x00	; 0
    523e:	c9 57       	subi	r28, 0x79	; 121
    5240:	df 4f       	sbci	r29, 0xFF	; 255
    5242:	38 80       	ld	r3, Y
    5244:	c7 58       	subi	r28, 0x87	; 135
    5246:	d0 40       	sbci	r29, 0x00	; 0
    5248:	c8 57       	subi	r28, 0x78	; 120
    524a:	df 4f       	sbci	r29, 0xFF	; 255
    524c:	28 80       	ld	r2, Y
    524e:	c8 58       	subi	r28, 0x88	; 136
    5250:	d0 40       	sbci	r29, 0x00	; 0
    5252:	c7 57       	subi	r28, 0x77	; 119
    5254:	df 4f       	sbci	r29, 0xFF	; 255
    5256:	18 81       	ld	r17, Y
    5258:	c9 58       	subi	r28, 0x89	; 137
    525a:	d0 40       	sbci	r29, 0x00	; 0
    525c:	ca 52       	subi	r28, 0x2A	; 42
    525e:	df 4f       	sbci	r29, 0xFF	; 255
    5260:	18 83       	st	Y, r17
    5262:	c6 5d       	subi	r28, 0xD6	; 214
    5264:	d0 40       	sbci	r29, 0x00	; 0
    5266:	c6 57       	subi	r28, 0x76	; 118
    5268:	df 4f       	sbci	r29, 0xFF	; 255
    526a:	18 81       	ld	r17, Y
    526c:	ca 58       	subi	r28, 0x8A	; 138
    526e:	d0 40       	sbci	r29, 0x00	; 0
    5270:	c9 52       	subi	r28, 0x29	; 41
    5272:	df 4f       	sbci	r29, 0xFF	; 255
    5274:	18 83       	st	Y, r17
    5276:	c7 5d       	subi	r28, 0xD7	; 215
    5278:	d0 40       	sbci	r29, 0x00	; 0
    527a:	c5 57       	subi	r28, 0x75	; 117
    527c:	df 4f       	sbci	r29, 0xFF	; 255
    527e:	18 81       	ld	r17, Y
    5280:	cb 58       	subi	r28, 0x8B	; 139
    5282:	d0 40       	sbci	r29, 0x00	; 0
    5284:	c8 52       	subi	r28, 0x28	; 40
    5286:	df 4f       	sbci	r29, 0xFF	; 255
    5288:	18 83       	st	Y, r17
    528a:	c8 5d       	subi	r28, 0xD8	; 216
    528c:	d0 40       	sbci	r29, 0x00	; 0
    528e:	c4 57       	subi	r28, 0x74	; 116
    5290:	df 4f       	sbci	r29, 0xFF	; 255
    5292:	18 81       	ld	r17, Y
    5294:	cc 58       	subi	r28, 0x8C	; 140
    5296:	d0 40       	sbci	r29, 0x00	; 0
    5298:	c7 52       	subi	r28, 0x27	; 39
    529a:	df 4f       	sbci	r29, 0xFF	; 255
    529c:	18 83       	st	Y, r17
    529e:	c9 5d       	subi	r28, 0xD9	; 217
    52a0:	d0 40       	sbci	r29, 0x00	; 0
    52a2:	c3 57       	subi	r28, 0x73	; 115
    52a4:	df 4f       	sbci	r29, 0xFF	; 255
    52a6:	18 81       	ld	r17, Y
    52a8:	cd 58       	subi	r28, 0x8D	; 141
    52aa:	d0 40       	sbci	r29, 0x00	; 0
    52ac:	c6 52       	subi	r28, 0x26	; 38
    52ae:	df 4f       	sbci	r29, 0xFF	; 255
    52b0:	18 83       	st	Y, r17
    52b2:	ca 5d       	subi	r28, 0xDA	; 218
    52b4:	d0 40       	sbci	r29, 0x00	; 0
    52b6:	c2 57       	subi	r28, 0x72	; 114
    52b8:	df 4f       	sbci	r29, 0xFF	; 255
    52ba:	18 81       	ld	r17, Y
    52bc:	ce 58       	subi	r28, 0x8E	; 142
    52be:	d0 40       	sbci	r29, 0x00	; 0
    52c0:	c3 52       	subi	r28, 0x23	; 35
    52c2:	df 4f       	sbci	r29, 0xFF	; 255
    52c4:	18 83       	st	Y, r17
    52c6:	cd 5d       	subi	r28, 0xDD	; 221
    52c8:	d0 40       	sbci	r29, 0x00	; 0
    52ca:	c1 57       	subi	r28, 0x71	; 113
    52cc:	df 4f       	sbci	r29, 0xFF	; 255
    52ce:	18 81       	ld	r17, Y
    52d0:	cf 58       	subi	r28, 0x8F	; 143
    52d2:	d0 40       	sbci	r29, 0x00	; 0
    52d4:	c2 52       	subi	r28, 0x22	; 34
    52d6:	df 4f       	sbci	r29, 0xFF	; 255
    52d8:	18 83       	st	Y, r17
    52da:	ce 5d       	subi	r28, 0xDE	; 222
    52dc:	d0 40       	sbci	r29, 0x00	; 0
    52de:	c0 57       	subi	r28, 0x70	; 112
    52e0:	df 4f       	sbci	r29, 0xFF	; 255
    52e2:	88 80       	ld	r8, Y
    52e4:	c0 59       	subi	r28, 0x90	; 144
    52e6:	d0 40       	sbci	r29, 0x00	; 0
    52e8:	cf 56       	subi	r28, 0x6F	; 111
    52ea:	df 4f       	sbci	r29, 0xFF	; 255
    52ec:	18 81       	ld	r17, Y
    52ee:	c1 59       	subi	r28, 0x91	; 145
    52f0:	d0 40       	sbci	r29, 0x00	; 0
    52f2:	c1 52       	subi	r28, 0x21	; 33
    52f4:	df 4f       	sbci	r29, 0xFF	; 255
    52f6:	18 83       	st	Y, r17
    52f8:	cf 5d       	subi	r28, 0xDF	; 223
    52fa:	d0 40       	sbci	r29, 0x00	; 0
    52fc:	ce 56       	subi	r28, 0x6E	; 110
    52fe:	df 4f       	sbci	r29, 0xFF	; 255
    5300:	18 81       	ld	r17, Y
    5302:	c2 59       	subi	r28, 0x92	; 146
    5304:	d0 40       	sbci	r29, 0x00	; 0
    5306:	c0 52       	subi	r28, 0x20	; 32
    5308:	df 4f       	sbci	r29, 0xFF	; 255
    530a:	18 83       	st	Y, r17
    530c:	c0 5e       	subi	r28, 0xE0	; 224
    530e:	d0 40       	sbci	r29, 0x00	; 0
    5310:	cd 56       	subi	r28, 0x6D	; 109
    5312:	df 4f       	sbci	r29, 0xFF	; 255
    5314:	18 81       	ld	r17, Y
    5316:	c3 59       	subi	r28, 0x93	; 147
    5318:	d0 40       	sbci	r29, 0x00	; 0
    531a:	cf 51       	subi	r28, 0x1F	; 31
    531c:	df 4f       	sbci	r29, 0xFF	; 255
    531e:	18 83       	st	Y, r17
    5320:	c1 5e       	subi	r28, 0xE1	; 225
    5322:	d0 40       	sbci	r29, 0x00	; 0
    5324:	cc 56       	subi	r28, 0x6C	; 108
    5326:	df 4f       	sbci	r29, 0xFF	; 255
    5328:	18 81       	ld	r17, Y
    532a:	c4 59       	subi	r28, 0x94	; 148
    532c:	d0 40       	sbci	r29, 0x00	; 0
    532e:	ce 51       	subi	r28, 0x1E	; 30
    5330:	df 4f       	sbci	r29, 0xFF	; 255
    5332:	18 83       	st	Y, r17
    5334:	c2 5e       	subi	r28, 0xE2	; 226
    5336:	d0 40       	sbci	r29, 0x00	; 0
    5338:	cb 56       	subi	r28, 0x6B	; 107
    533a:	df 4f       	sbci	r29, 0xFF	; 255
    533c:	18 81       	ld	r17, Y
    533e:	c5 59       	subi	r28, 0x95	; 149
    5340:	d0 40       	sbci	r29, 0x00	; 0
    5342:	cd 51       	subi	r28, 0x1D	; 29
    5344:	df 4f       	sbci	r29, 0xFF	; 255
    5346:	18 83       	st	Y, r17
    5348:	c3 5e       	subi	r28, 0xE3	; 227
    534a:	d0 40       	sbci	r29, 0x00	; 0
    534c:	ca 56       	subi	r28, 0x6A	; 106
    534e:	df 4f       	sbci	r29, 0xFF	; 255
    5350:	18 81       	ld	r17, Y
    5352:	c6 59       	subi	r28, 0x96	; 150
    5354:	d0 40       	sbci	r29, 0x00	; 0
    5356:	cc 51       	subi	r28, 0x1C	; 28
    5358:	df 4f       	sbci	r29, 0xFF	; 255
    535a:	18 83       	st	Y, r17
    535c:	c4 5e       	subi	r28, 0xE4	; 228
    535e:	d0 40       	sbci	r29, 0x00	; 0
    5360:	c9 56       	subi	r28, 0x69	; 105
    5362:	df 4f       	sbci	r29, 0xFF	; 255
    5364:	18 81       	ld	r17, Y
    5366:	c7 59       	subi	r28, 0x97	; 151
    5368:	d0 40       	sbci	r29, 0x00	; 0
    536a:	cb 51       	subi	r28, 0x1B	; 27
    536c:	df 4f       	sbci	r29, 0xFF	; 255
    536e:	18 83       	st	Y, r17
    5370:	c5 5e       	subi	r28, 0xE5	; 229
    5372:	d0 40       	sbci	r29, 0x00	; 0
    5374:	c8 56       	subi	r28, 0x68	; 104
    5376:	df 4f       	sbci	r29, 0xFF	; 255
    5378:	98 80       	ld	r9, Y
    537a:	c8 59       	subi	r28, 0x98	; 152
    537c:	d0 40       	sbci	r29, 0x00	; 0
    537e:	48 e3       	ldi	r20, 0x38	; 56
    5380:	50 e0       	ldi	r21, 0x00	; 0
    5382:	be 01       	movw	r22, r28
    5384:	6f 57       	subi	r22, 0x7F	; 127
    5386:	7f 4f       	sbci	r23, 0xFF	; 255
    5388:	c9 51       	subi	r28, 0x19	; 25
    538a:	df 4f       	sbci	r29, 0xFF	; 255
    538c:	88 81       	ld	r24, Y
    538e:	99 81       	ldd	r25, Y+1	; 0x01
    5390:	c7 5e       	subi	r28, 0xE7	; 231
    5392:	d0 40       	sbci	r29, 0x00	; 0
    5394:	0e 94 46 34 	call	0x688c	; 0x688c <memmove>
    5398:	2a 2d       	mov	r18, r10
    539a:	3b 2d       	mov	r19, r11
    539c:	47 2d       	mov	r20, r7
    539e:	56 2d       	mov	r21, r6
    53a0:	65 2d       	mov	r22, r5
    53a2:	74 2d       	mov	r23, r4
    53a4:	83 2d       	mov	r24, r3
    53a6:	92 2d       	mov	r25, r2
    53a8:	0e e1       	ldi	r16, 0x1E	; 30
    53aa:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    53ae:	d2 2e       	mov	r13, r18
    53b0:	e3 2e       	mov	r14, r19
    53b2:	f4 2e       	mov	r15, r20
    53b4:	15 2f       	mov	r17, r21
    53b6:	b6 2f       	mov	r27, r22
    53b8:	e7 2f       	mov	r30, r23
    53ba:	a8 2f       	mov	r26, r24
    53bc:	f9 2f       	mov	r31, r25
    53be:	2a 2d       	mov	r18, r10
    53c0:	3b 2d       	mov	r19, r11
    53c2:	47 2d       	mov	r20, r7
    53c4:	56 2d       	mov	r21, r6
    53c6:	65 2d       	mov	r22, r5
    53c8:	74 2d       	mov	r23, r4
    53ca:	83 2d       	mov	r24, r3
    53cc:	92 2d       	mov	r25, r2
    53ce:	04 e2       	ldi	r16, 0x24	; 36
    53d0:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    53d4:	d2 26       	eor	r13, r18
    53d6:	e3 26       	eor	r14, r19
    53d8:	f4 26       	eor	r15, r20
    53da:	15 27       	eor	r17, r21
    53dc:	b6 27       	eor	r27, r22
    53de:	e7 27       	eor	r30, r23
    53e0:	a8 27       	eor	r26, r24
    53e2:	f9 27       	eor	r31, r25
    53e4:	2a 2d       	mov	r18, r10
    53e6:	3b 2d       	mov	r19, r11
    53e8:	47 2d       	mov	r20, r7
    53ea:	56 2d       	mov	r21, r6
    53ec:	65 2d       	mov	r22, r5
    53ee:	74 2d       	mov	r23, r4
    53f0:	83 2d       	mov	r24, r3
    53f2:	92 2d       	mov	r25, r2
    53f4:	09 e1       	ldi	r16, 0x19	; 25
    53f6:	0e 94 89 32 	call	0x6512	; 0x6512 <__rotldi3>
    53fa:	2d 25       	eor	r18, r13
    53fc:	3e 25       	eor	r19, r14
    53fe:	4f 25       	eor	r20, r15
    5400:	51 27       	eor	r21, r17
    5402:	6b 27       	eor	r22, r27
    5404:	7e 27       	eor	r23, r30
    5406:	c1 52       	subi	r28, 0x21	; 33
    5408:	df 4f       	sbci	r29, 0xFF	; 255
    540a:	b8 81       	ld	r27, Y
    540c:	cf 5d       	subi	r28, 0xDF	; 223
    540e:	d0 40       	sbci	r29, 0x00	; 0
    5410:	ca 52       	subi	r28, 0x2A	; 42
    5412:	df 4f       	sbci	r29, 0xFF	; 255
    5414:	18 81       	ld	r17, Y
    5416:	c6 5d       	subi	r28, 0xD6	; 214
    5418:	d0 40       	sbci	r29, 0x00	; 0
    541a:	b1 27       	eor	r27, r17
    541c:	c0 52       	subi	r28, 0x20	; 32
    541e:	df 4f       	sbci	r29, 0xFF	; 255
    5420:	e8 81       	ld	r30, Y
    5422:	c0 5e       	subi	r28, 0xE0	; 224
    5424:	d0 40       	sbci	r29, 0x00	; 0
    5426:	c9 52       	subi	r28, 0x29	; 41
    5428:	df 4f       	sbci	r29, 0xFF	; 255
    542a:	18 81       	ld	r17, Y
    542c:	c7 5d       	subi	r28, 0xD7	; 215
    542e:	d0 40       	sbci	r29, 0x00	; 0
    5430:	e1 27       	eor	r30, r17
    5432:	cf 51       	subi	r28, 0x1F	; 31
    5434:	df 4f       	sbci	r29, 0xFF	; 255
    5436:	c8 80       	ld	r12, Y
    5438:	c1 5e       	subi	r28, 0xE1	; 225
    543a:	d0 40       	sbci	r29, 0x00	; 0
    543c:	c8 52       	subi	r28, 0x28	; 40
    543e:	df 4f       	sbci	r29, 0xFF	; 255
    5440:	18 81       	ld	r17, Y
    5442:	c8 5d       	subi	r28, 0xD8	; 216
    5444:	d0 40       	sbci	r29, 0x00	; 0
    5446:	c1 26       	eor	r12, r17
    5448:	ce 51       	subi	r28, 0x1E	; 30
    544a:	df 4f       	sbci	r29, 0xFF	; 255
    544c:	d8 80       	ld	r13, Y
    544e:	c2 5e       	subi	r28, 0xE2	; 226
    5450:	d0 40       	sbci	r29, 0x00	; 0
    5452:	c7 52       	subi	r28, 0x27	; 39
    5454:	df 4f       	sbci	r29, 0xFF	; 255
    5456:	18 81       	ld	r17, Y
    5458:	c9 5d       	subi	r28, 0xD9	; 217
    545a:	d0 40       	sbci	r29, 0x00	; 0
    545c:	d1 26       	eor	r13, r17
    545e:	cd 51       	subi	r28, 0x1D	; 29
    5460:	df 4f       	sbci	r29, 0xFF	; 255
    5462:	e8 80       	ld	r14, Y
    5464:	c3 5e       	subi	r28, 0xE3	; 227
    5466:	d0 40       	sbci	r29, 0x00	; 0
    5468:	c6 52       	subi	r28, 0x26	; 38
    546a:	df 4f       	sbci	r29, 0xFF	; 255
    546c:	18 81       	ld	r17, Y
    546e:	ca 5d       	subi	r28, 0xDA	; 218
    5470:	d0 40       	sbci	r29, 0x00	; 0
    5472:	e1 26       	eor	r14, r17
    5474:	cc 51       	subi	r28, 0x1C	; 28
    5476:	df 4f       	sbci	r29, 0xFF	; 255
    5478:	f8 80       	ld	r15, Y
    547a:	c4 5e       	subi	r28, 0xE4	; 228
    547c:	d0 40       	sbci	r29, 0x00	; 0
    547e:	c3 52       	subi	r28, 0x23	; 35
    5480:	df 4f       	sbci	r29, 0xFF	; 255
    5482:	18 81       	ld	r17, Y
    5484:	cd 5d       	subi	r28, 0xDD	; 221
    5486:	d0 40       	sbci	r29, 0x00	; 0
    5488:	f1 26       	eor	r15, r17
    548a:	cb 51       	subi	r28, 0x1B	; 27
    548c:	df 4f       	sbci	r29, 0xFF	; 255
    548e:	08 81       	ld	r16, Y
    5490:	c5 5e       	subi	r28, 0xE5	; 229
    5492:	d0 40       	sbci	r29, 0x00	; 0
    5494:	c2 52       	subi	r28, 0x22	; 34
    5496:	df 4f       	sbci	r29, 0xFF	; 255
    5498:	18 81       	ld	r17, Y
    549a:	ce 5d       	subi	r28, 0xDE	; 222
    549c:	d0 40       	sbci	r29, 0x00	; 0
    549e:	01 27       	eor	r16, r17
    54a0:	19 2d       	mov	r17, r9
    54a2:	18 25       	eor	r17, r8
    54a4:	ab 22       	and	r10, r27
    54a6:	be 22       	and	r11, r30
    54a8:	c7 20       	and	r12, r7
    54aa:	d6 20       	and	r13, r6
    54ac:	e5 20       	and	r14, r5
    54ae:	f4 20       	and	r15, r4
    54b0:	03 21       	and	r16, r3
    54b2:	12 21       	and	r17, r2
    54b4:	ca 52       	subi	r28, 0x2A	; 42
    54b6:	df 4f       	sbci	r29, 0xFF	; 255
    54b8:	e8 81       	ld	r30, Y
    54ba:	c6 5d       	subi	r28, 0xD6	; 214
    54bc:	d0 40       	sbci	r29, 0x00	; 0
    54be:	c1 52       	subi	r28, 0x21	; 33
    54c0:	df 4f       	sbci	r29, 0xFF	; 255
    54c2:	b8 81       	ld	r27, Y
    54c4:	cf 5d       	subi	r28, 0xDF	; 223
    54c6:	d0 40       	sbci	r29, 0x00	; 0
    54c8:	eb 23       	and	r30, r27
    54ca:	c9 52       	subi	r28, 0x29	; 41
    54cc:	df 4f       	sbci	r29, 0xFF	; 255
    54ce:	28 80       	ld	r2, Y
    54d0:	c7 5d       	subi	r28, 0xD7	; 215
    54d2:	d0 40       	sbci	r29, 0x00	; 0
    54d4:	c0 52       	subi	r28, 0x20	; 32
    54d6:	df 4f       	sbci	r29, 0xFF	; 255
    54d8:	b8 81       	ld	r27, Y
    54da:	c0 5e       	subi	r28, 0xE0	; 224
    54dc:	d0 40       	sbci	r29, 0x00	; 0
    54de:	2b 22       	and	r2, r27
    54e0:	c8 52       	subi	r28, 0x28	; 40
    54e2:	df 4f       	sbci	r29, 0xFF	; 255
    54e4:	38 80       	ld	r3, Y
    54e6:	c8 5d       	subi	r28, 0xD8	; 216
    54e8:	d0 40       	sbci	r29, 0x00	; 0
    54ea:	cf 51       	subi	r28, 0x1F	; 31
    54ec:	df 4f       	sbci	r29, 0xFF	; 255
    54ee:	b8 81       	ld	r27, Y
    54f0:	c1 5e       	subi	r28, 0xE1	; 225
    54f2:	d0 40       	sbci	r29, 0x00	; 0
    54f4:	3b 22       	and	r3, r27
    54f6:	c7 52       	subi	r28, 0x27	; 39
    54f8:	df 4f       	sbci	r29, 0xFF	; 255
    54fa:	48 80       	ld	r4, Y
    54fc:	c9 5d       	subi	r28, 0xD9	; 217
    54fe:	d0 40       	sbci	r29, 0x00	; 0
    5500:	ce 51       	subi	r28, 0x1E	; 30
    5502:	df 4f       	sbci	r29, 0xFF	; 255
    5504:	b8 81       	ld	r27, Y
    5506:	c2 5e       	subi	r28, 0xE2	; 226
    5508:	d0 40       	sbci	r29, 0x00	; 0
    550a:	4b 22       	and	r4, r27
    550c:	c6 52       	subi	r28, 0x26	; 38
    550e:	df 4f       	sbci	r29, 0xFF	; 255
    5510:	58 80       	ld	r5, Y
    5512:	ca 5d       	subi	r28, 0xDA	; 218
    5514:	d0 40       	sbci	r29, 0x00	; 0
    5516:	cd 51       	subi	r28, 0x1D	; 29
    5518:	df 4f       	sbci	r29, 0xFF	; 255
    551a:	b8 81       	ld	r27, Y
    551c:	c3 5e       	subi	r28, 0xE3	; 227
    551e:	d0 40       	sbci	r29, 0x00	; 0
    5520:	5b 22       	and	r5, r27
    5522:	c3 52       	subi	r28, 0x23	; 35
    5524:	df 4f       	sbci	r29, 0xFF	; 255
    5526:	68 80       	ld	r6, Y
    5528:	cd 5d       	subi	r28, 0xDD	; 221
    552a:	d0 40       	sbci	r29, 0x00	; 0
    552c:	cc 51       	subi	r28, 0x1C	; 28
    552e:	df 4f       	sbci	r29, 0xFF	; 255
    5530:	b8 81       	ld	r27, Y
    5532:	c4 5e       	subi	r28, 0xE4	; 228
    5534:	d0 40       	sbci	r29, 0x00	; 0
    5536:	6b 22       	and	r6, r27
    5538:	c2 52       	subi	r28, 0x22	; 34
    553a:	df 4f       	sbci	r29, 0xFF	; 255
    553c:	78 80       	ld	r7, Y
    553e:	ce 5d       	subi	r28, 0xDE	; 222
    5540:	d0 40       	sbci	r29, 0x00	; 0
    5542:	cb 51       	subi	r28, 0x1B	; 27
    5544:	df 4f       	sbci	r29, 0xFF	; 255
    5546:	b8 81       	ld	r27, Y
    5548:	c5 5e       	subi	r28, 0xE5	; 229
    554a:	d0 40       	sbci	r29, 0x00	; 0
    554c:	7b 22       	and	r7, r27
    554e:	b8 2d       	mov	r27, r8
    5550:	b9 21       	and	r27, r9
    5552:	ae 26       	eor	r10, r30
    5554:	b2 24       	eor	r11, r2
    5556:	c3 24       	eor	r12, r3
    5558:	d4 24       	eor	r13, r4
    555a:	e5 24       	eor	r14, r5
    555c:	f6 24       	eor	r15, r6
    555e:	07 25       	eor	r16, r7
    5560:	1b 27       	eor	r17, r27
    5562:	8a 27       	eor	r24, r26
    5564:	9f 27       	eor	r25, r31
    5566:	f0 d7       	rcall	.+4064   	; 0x6548 <__adddi3>
    5568:	c5 53       	subi	r28, 0x35	; 53
    556a:	df 4f       	sbci	r29, 0xFF	; 255
    556c:	a8 80       	ld	r10, Y
    556e:	cb 5c       	subi	r28, 0xCB	; 203
    5570:	d0 40       	sbci	r29, 0x00	; 0
    5572:	c4 53       	subi	r28, 0x34	; 52
    5574:	df 4f       	sbci	r29, 0xFF	; 255
    5576:	b8 80       	ld	r11, Y
    5578:	cc 5c       	subi	r28, 0xCC	; 204
    557a:	d0 40       	sbci	r29, 0x00	; 0
    557c:	c3 53       	subi	r28, 0x33	; 51
    557e:	df 4f       	sbci	r29, 0xFF	; 255
    5580:	c8 80       	ld	r12, Y
    5582:	cd 5c       	subi	r28, 0xCD	; 205
    5584:	d0 40       	sbci	r29, 0x00	; 0
    5586:	c2 53       	subi	r28, 0x32	; 50
    5588:	df 4f       	sbci	r29, 0xFF	; 255
    558a:	d8 80       	ld	r13, Y
    558c:	ce 5c       	subi	r28, 0xCE	; 206
    558e:	d0 40       	sbci	r29, 0x00	; 0
    5590:	c1 53       	subi	r28, 0x31	; 49
    5592:	df 4f       	sbci	r29, 0xFF	; 255
    5594:	e8 80       	ld	r14, Y
    5596:	cf 5c       	subi	r28, 0xCF	; 207
    5598:	d0 40       	sbci	r29, 0x00	; 0
    559a:	cd 52       	subi	r28, 0x2D	; 45
    559c:	df 4f       	sbci	r29, 0xFF	; 255
    559e:	f8 80       	ld	r15, Y
    55a0:	c3 5d       	subi	r28, 0xD3	; 211
    55a2:	d0 40       	sbci	r29, 0x00	; 0
    55a4:	cc 52       	subi	r28, 0x2C	; 44
    55a6:	df 4f       	sbci	r29, 0xFF	; 255
    55a8:	08 81       	ld	r16, Y
    55aa:	c4 5d       	subi	r28, 0xD4	; 212
    55ac:	d0 40       	sbci	r29, 0x00	; 0
    55ae:	cb 52       	subi	r28, 0x2B	; 43
    55b0:	df 4f       	sbci	r29, 0xFF	; 255
    55b2:	18 81       	ld	r17, Y
    55b4:	c5 5d       	subi	r28, 0xD5	; 213
    55b6:	d0 40       	sbci	r29, 0x00	; 0
    55b8:	c7 d7       	rcall	.+3982   	; 0x6548 <__adddi3>
    55ba:	cf 57       	subi	r28, 0x7F	; 127
    55bc:	df 4f       	sbci	r29, 0xFF	; 255
    55be:	28 83       	st	Y, r18
    55c0:	c1 58       	subi	r28, 0x81	; 129
    55c2:	d0 40       	sbci	r29, 0x00	; 0
    55c4:	ce 57       	subi	r28, 0x7E	; 126
    55c6:	df 4f       	sbci	r29, 0xFF	; 255
    55c8:	38 83       	st	Y, r19
    55ca:	c2 58       	subi	r28, 0x82	; 130
    55cc:	d0 40       	sbci	r29, 0x00	; 0
    55ce:	cd 57       	subi	r28, 0x7D	; 125
    55d0:	df 4f       	sbci	r29, 0xFF	; 255
    55d2:	48 83       	st	Y, r20
    55d4:	c3 58       	subi	r28, 0x83	; 131
    55d6:	d0 40       	sbci	r29, 0x00	; 0
    55d8:	cc 57       	subi	r28, 0x7C	; 124
    55da:	df 4f       	sbci	r29, 0xFF	; 255
    55dc:	58 83       	st	Y, r21
    55de:	c4 58       	subi	r28, 0x84	; 132
    55e0:	d0 40       	sbci	r29, 0x00	; 0
    55e2:	cb 57       	subi	r28, 0x7B	; 123
    55e4:	df 4f       	sbci	r29, 0xFF	; 255
    55e6:	68 83       	st	Y, r22
    55e8:	c5 58       	subi	r28, 0x85	; 133
    55ea:	d0 40       	sbci	r29, 0x00	; 0
    55ec:	ca 57       	subi	r28, 0x7A	; 122
    55ee:	df 4f       	sbci	r29, 0xFF	; 255
    55f0:	78 83       	st	Y, r23
    55f2:	c6 58       	subi	r28, 0x86	; 134
    55f4:	d0 40       	sbci	r29, 0x00	; 0
    55f6:	c9 57       	subi	r28, 0x79	; 121
    55f8:	df 4f       	sbci	r29, 0xFF	; 255
    55fa:	88 83       	st	Y, r24
    55fc:	c7 58       	subi	r28, 0x87	; 135
    55fe:	d0 40       	sbci	r29, 0x00	; 0
    5600:	c8 57       	subi	r28, 0x78	; 120
    5602:	df 4f       	sbci	r29, 0xFF	; 255
    5604:	98 83       	st	Y, r25
    5606:	c8 58       	subi	r28, 0x88	; 136
    5608:	d0 40       	sbci	r29, 0x00	; 0
    560a:	2a 2d       	mov	r18, r10
    560c:	3b 2d       	mov	r19, r11
    560e:	4c 2d       	mov	r20, r12
    5610:	5d 2d       	mov	r21, r13
    5612:	6e 2d       	mov	r22, r14
    5614:	7f 2d       	mov	r23, r15
    5616:	80 2f       	mov	r24, r16
    5618:	91 2f       	mov	r25, r17
    561a:	cf 55       	subi	r28, 0x5F	; 95
    561c:	df 4f       	sbci	r29, 0xFF	; 255
    561e:	a8 80       	ld	r10, Y
    5620:	c1 5a       	subi	r28, 0xA1	; 161
    5622:	d0 40       	sbci	r29, 0x00	; 0
    5624:	ce 55       	subi	r28, 0x5E	; 94
    5626:	df 4f       	sbci	r29, 0xFF	; 255
    5628:	b8 80       	ld	r11, Y
    562a:	c2 5a       	subi	r28, 0xA2	; 162
    562c:	d0 40       	sbci	r29, 0x00	; 0
    562e:	cd 55       	subi	r28, 0x5D	; 93
    5630:	df 4f       	sbci	r29, 0xFF	; 255
    5632:	c8 80       	ld	r12, Y
    5634:	c3 5a       	subi	r28, 0xA3	; 163
    5636:	d0 40       	sbci	r29, 0x00	; 0
    5638:	cc 55       	subi	r28, 0x5C	; 92
    563a:	df 4f       	sbci	r29, 0xFF	; 255
    563c:	d8 80       	ld	r13, Y
    563e:	c4 5a       	subi	r28, 0xA4	; 164
    5640:	d0 40       	sbci	r29, 0x00	; 0
    5642:	cb 55       	subi	r28, 0x5B	; 91
    5644:	df 4f       	sbci	r29, 0xFF	; 255
    5646:	e8 80       	ld	r14, Y
    5648:	c5 5a       	subi	r28, 0xA5	; 165
    564a:	d0 40       	sbci	r29, 0x00	; 0
    564c:	ca 55       	subi	r28, 0x5A	; 90
    564e:	df 4f       	sbci	r29, 0xFF	; 255
    5650:	f8 80       	ld	r15, Y
    5652:	c6 5a       	subi	r28, 0xA6	; 166
    5654:	d0 40       	sbci	r29, 0x00	; 0
    5656:	c9 55       	subi	r28, 0x59	; 89
    5658:	df 4f       	sbci	r29, 0xFF	; 255
    565a:	08 81       	ld	r16, Y
    565c:	c7 5a       	subi	r28, 0xA7	; 167
    565e:	d0 40       	sbci	r29, 0x00	; 0
    5660:	c8 55       	subi	r28, 0x58	; 88
    5662:	df 4f       	sbci	r29, 0xFF	; 255
    5664:	18 81       	ld	r17, Y
    5666:	c8 5a       	subi	r28, 0xA8	; 168
    5668:	d0 40       	sbci	r29, 0x00	; 0
    566a:	6e d7       	rcall	.+3804   	; 0x6548 <__adddi3>
    566c:	cf 55       	subi	r28, 0x5F	; 95
    566e:	df 4f       	sbci	r29, 0xFF	; 255
    5670:	28 83       	st	Y, r18
    5672:	c1 5a       	subi	r28, 0xA1	; 161
    5674:	d0 40       	sbci	r29, 0x00	; 0
    5676:	ce 55       	subi	r28, 0x5E	; 94
    5678:	df 4f       	sbci	r29, 0xFF	; 255
    567a:	38 83       	st	Y, r19
    567c:	c2 5a       	subi	r28, 0xA2	; 162
    567e:	d0 40       	sbci	r29, 0x00	; 0
    5680:	cd 55       	subi	r28, 0x5D	; 93
    5682:	df 4f       	sbci	r29, 0xFF	; 255
    5684:	48 83       	st	Y, r20
    5686:	c3 5a       	subi	r28, 0xA3	; 163
    5688:	d0 40       	sbci	r29, 0x00	; 0
    568a:	cc 55       	subi	r28, 0x5C	; 92
    568c:	df 4f       	sbci	r29, 0xFF	; 255
    568e:	58 83       	st	Y, r21
    5690:	c4 5a       	subi	r28, 0xA4	; 164
    5692:	d0 40       	sbci	r29, 0x00	; 0
    5694:	cb 55       	subi	r28, 0x5B	; 91
    5696:	df 4f       	sbci	r29, 0xFF	; 255
    5698:	68 83       	st	Y, r22
    569a:	c5 5a       	subi	r28, 0xA5	; 165
    569c:	d0 40       	sbci	r29, 0x00	; 0
    569e:	ca 55       	subi	r28, 0x5A	; 90
    56a0:	df 4f       	sbci	r29, 0xFF	; 255
    56a2:	78 83       	st	Y, r23
    56a4:	c6 5a       	subi	r28, 0xA6	; 166
    56a6:	d0 40       	sbci	r29, 0x00	; 0
    56a8:	c9 55       	subi	r28, 0x59	; 89
    56aa:	df 4f       	sbci	r29, 0xFF	; 255
    56ac:	88 83       	st	Y, r24
    56ae:	c7 5a       	subi	r28, 0xA7	; 167
    56b0:	d0 40       	sbci	r29, 0x00	; 0
    56b2:	c8 55       	subi	r28, 0x58	; 88
    56b4:	df 4f       	sbci	r29, 0xFF	; 255
    56b6:	98 83       	st	Y, r25
    56b8:	c8 5a       	subi	r28, 0xA8	; 168
    56ba:	d0 40       	sbci	r29, 0x00	; 0
    56bc:	c0 53       	subi	r28, 0x30	; 48
    56be:	df 4f       	sbci	r29, 0xFF	; 255
    56c0:	e8 81       	ld	r30, Y
    56c2:	c0 5d       	subi	r28, 0xD0	; 208
    56c4:	d0 40       	sbci	r29, 0x00	; 0
    56c6:	ef 5f       	subi	r30, 0xFF	; 255
    56c8:	c0 53       	subi	r28, 0x30	; 48
    56ca:	df 4f       	sbci	r29, 0xFF	; 255
    56cc:	e8 83       	st	Y, r30
    56ce:	c0 5d       	subi	r28, 0xD0	; 208
    56d0:	d0 40       	sbci	r29, 0x00	; 0
    56d2:	c5 52       	subi	r28, 0x25	; 37
    56d4:	df 4f       	sbci	r29, 0xFF	; 255
    56d6:	88 81       	ld	r24, Y
    56d8:	99 81       	ldd	r25, Y+1	; 0x01
    56da:	cb 5d       	subi	r28, 0xDB	; 219
    56dc:	d0 40       	sbci	r29, 0x00	; 0
    56de:	08 96       	adiw	r24, 0x08	; 8
    56e0:	c5 52       	subi	r28, 0x25	; 37
    56e2:	df 4f       	sbci	r29, 0xFF	; 255
    56e4:	99 83       	std	Y+1, r25	; 0x01
    56e6:	88 83       	st	Y, r24
    56e8:	cb 5d       	subi	r28, 0xDB	; 219
    56ea:	d0 40       	sbci	r29, 0x00	; 0
    56ec:	cf 52       	subi	r28, 0x2F	; 47
    56ee:	df 4f       	sbci	r29, 0xFF	; 255
    56f0:	a8 81       	ld	r26, Y
    56f2:	b9 81       	ldd	r27, Y+1	; 0x01
    56f4:	c1 5d       	subi	r28, 0xD1	; 209
    56f6:	d0 40       	sbci	r29, 0x00	; 0
    56f8:	18 96       	adiw	r26, 0x08	; 8
    56fa:	cf 52       	subi	r28, 0x2F	; 47
    56fc:	df 4f       	sbci	r29, 0xFF	; 255
    56fe:	b9 83       	std	Y+1, r27	; 0x01
    5700:	a8 83       	st	Y, r26
    5702:	c1 5d       	subi	r28, 0xD1	; 209
    5704:	d0 40       	sbci	r29, 0x00	; 0
    5706:	e0 35       	cpi	r30, 0x50	; 80
    5708:	09 f0       	breq	.+2      	; 0x570c <sha2_large_common_nextBlock+0xfe8>
    570a:	ee c8       	rjmp	.-3620   	; 0x48e8 <sha2_large_common_nextBlock+0x1c4>
    570c:	0f 2e       	mov	r0, r31
    570e:	f7 e0       	ldi	r31, 0x07	; 7
    5710:	9f 2e       	mov	r9, r31
    5712:	f0 2d       	mov	r31, r0
    5714:	79 2c       	mov	r7, r9
    5716:	c7 51       	subi	r28, 0x17	; 23
    5718:	df 4f       	sbci	r29, 0xFF	; 255
    571a:	88 80       	ld	r8, Y
    571c:	99 80       	ldd	r9, Y+1	; 0x01
    571e:	c9 5e       	subi	r28, 0xE9	; 233
    5720:	d0 40       	sbci	r29, 0x00	; 0
    5722:	a7 2d       	mov	r26, r7
    5724:	b0 e0       	ldi	r27, 0x00	; 0
    5726:	aa 0f       	add	r26, r26
    5728:	bb 1f       	adc	r27, r27
    572a:	aa 0f       	add	r26, r26
    572c:	bb 1f       	adc	r27, r27
    572e:	aa 0f       	add	r26, r26
    5730:	bb 1f       	adc	r27, r27
    5732:	f4 01       	movw	r30, r8
    5734:	ea 0f       	add	r30, r26
    5736:	fb 1f       	adc	r31, r27
    5738:	81 e8       	ldi	r24, 0x81	; 129
    573a:	90 e0       	ldi	r25, 0x00	; 0
    573c:	8c 0f       	add	r24, r28
    573e:	9d 1f       	adc	r25, r29
    5740:	a8 0f       	add	r26, r24
    5742:	b9 1f       	adc	r27, r25
    5744:	20 81       	ld	r18, Z
    5746:	31 81       	ldd	r19, Z+1	; 0x01
    5748:	42 81       	ldd	r20, Z+2	; 0x02
    574a:	53 81       	ldd	r21, Z+3	; 0x03
    574c:	64 81       	ldd	r22, Z+4	; 0x04
    574e:	75 81       	ldd	r23, Z+5	; 0x05
    5750:	86 81       	ldd	r24, Z+6	; 0x06
    5752:	97 81       	ldd	r25, Z+7	; 0x07
    5754:	ac 90       	ld	r10, X
    5756:	11 96       	adiw	r26, 0x01	; 1
    5758:	bc 90       	ld	r11, X
    575a:	11 97       	sbiw	r26, 0x01	; 1
    575c:	12 96       	adiw	r26, 0x02	; 2
    575e:	cc 90       	ld	r12, X
    5760:	12 97       	sbiw	r26, 0x02	; 2
    5762:	13 96       	adiw	r26, 0x03	; 3
    5764:	dc 90       	ld	r13, X
    5766:	13 97       	sbiw	r26, 0x03	; 3
    5768:	14 96       	adiw	r26, 0x04	; 4
    576a:	ec 90       	ld	r14, X
    576c:	14 97       	sbiw	r26, 0x04	; 4
    576e:	15 96       	adiw	r26, 0x05	; 5
    5770:	fc 90       	ld	r15, X
    5772:	15 97       	sbiw	r26, 0x05	; 5
    5774:	16 96       	adiw	r26, 0x06	; 6
    5776:	0c 91       	ld	r16, X
    5778:	16 97       	sbiw	r26, 0x06	; 6
    577a:	17 96       	adiw	r26, 0x07	; 7
    577c:	1c 91       	ld	r17, X
    577e:	e4 d6       	rcall	.+3528   	; 0x6548 <__adddi3>
    5780:	20 83       	st	Z, r18
    5782:	31 83       	std	Z+1, r19	; 0x01
    5784:	42 83       	std	Z+2, r20	; 0x02
    5786:	53 83       	std	Z+3, r21	; 0x03
    5788:	64 83       	std	Z+4, r22	; 0x04
    578a:	75 83       	std	Z+5, r23	; 0x05
    578c:	86 83       	std	Z+6, r24	; 0x06
    578e:	97 83       	std	Z+7, r25	; 0x07
    5790:	7a 94       	dec	r7
    5792:	9f ef       	ldi	r25, 0xFF	; 255
    5794:	79 12       	cpse	r7, r25
    5796:	c5 cf       	rjmp	.-118    	; 0x5722 <sha2_large_common_nextBlock+0xffe>
    5798:	c7 51       	subi	r28, 0x17	; 23
    579a:	df 4f       	sbci	r29, 0xFF	; 255
    579c:	e8 81       	ld	r30, Y
    579e:	f9 81       	ldd	r31, Y+1	; 0x01
    57a0:	c9 5e       	subi	r28, 0xE9	; 233
    57a2:	d0 40       	sbci	r29, 0x00	; 0
    57a4:	e0 5c       	subi	r30, 0xC0	; 192
    57a6:	ff 4f       	sbci	r31, 0xFF	; 255
    57a8:	80 81       	ld	r24, Z
    57aa:	91 81       	ldd	r25, Z+1	; 0x01
    57ac:	a2 81       	ldd	r26, Z+2	; 0x02
    57ae:	b3 81       	ldd	r27, Z+3	; 0x03
    57b0:	01 96       	adiw	r24, 0x01	; 1
    57b2:	a1 1d       	adc	r26, r1
    57b4:	b1 1d       	adc	r27, r1
    57b6:	80 83       	st	Z, r24
    57b8:	91 83       	std	Z+1, r25	; 0x01
    57ba:	a2 83       	std	Z+2, r26	; 0x02
    57bc:	b3 83       	std	Z+3, r27	; 0x03
    57be:	c6 51       	subi	r28, 0x16	; 22
    57c0:	df 4f       	sbci	r29, 0xFF	; 255
    57c2:	0f b6       	in	r0, 0x3f	; 63
    57c4:	f8 94       	cli
    57c6:	de bf       	out	0x3e, r29	; 62
    57c8:	0f be       	out	0x3f, r0	; 63
    57ca:	cd bf       	out	0x3d, r28	; 61
    57cc:	df 91       	pop	r29
    57ce:	cf 91       	pop	r28
    57d0:	1f 91       	pop	r17
    57d2:	0f 91       	pop	r16
    57d4:	ff 90       	pop	r15
    57d6:	ef 90       	pop	r14
    57d8:	df 90       	pop	r13
    57da:	cf 90       	pop	r12
    57dc:	bf 90       	pop	r11
    57de:	af 90       	pop	r10
    57e0:	9f 90       	pop	r9
    57e2:	8f 90       	pop	r8
    57e4:	7f 90       	pop	r7
    57e6:	6f 90       	pop	r6
    57e8:	5f 90       	pop	r5
    57ea:	4f 90       	pop	r4
    57ec:	3f 90       	pop	r3
    57ee:	2f 90       	pop	r2
    57f0:	08 95       	ret

000057f2 <sha2_large_common_lastBlock>:
    57f2:	2f 92       	push	r2
    57f4:	3f 92       	push	r3
    57f6:	4f 92       	push	r4
    57f8:	5f 92       	push	r5
    57fa:	6f 92       	push	r6
    57fc:	7f 92       	push	r7
    57fe:	8f 92       	push	r8
    5800:	9f 92       	push	r9
    5802:	af 92       	push	r10
    5804:	bf 92       	push	r11
    5806:	cf 92       	push	r12
    5808:	df 92       	push	r13
    580a:	ef 92       	push	r14
    580c:	ff 92       	push	r15
    580e:	0f 93       	push	r16
    5810:	1f 93       	push	r17
    5812:	cf 93       	push	r28
    5814:	df 93       	push	r29
    5816:	cd b7       	in	r28, 0x3d	; 61
    5818:	de b7       	in	r29, 0x3e	; 62
    581a:	cc 58       	subi	r28, 0x8C	; 140
    581c:	d1 09       	sbc	r29, r1
    581e:	0f b6       	in	r0, 0x3f	; 63
    5820:	f8 94       	cli
    5822:	de bf       	out	0x3e, r29	; 62
    5824:	0f be       	out	0x3f, r0	; 63
    5826:	cd bf       	out	0x3d, r28	; 61
    5828:	cf 57       	subi	r28, 0x7F	; 127
    582a:	df 4f       	sbci	r29, 0xFF	; 255
    582c:	99 83       	std	Y+1, r25	; 0x01
    582e:	88 83       	st	Y, r24
    5830:	c1 58       	subi	r28, 0x81	; 129
    5832:	d0 40       	sbci	r29, 0x00	; 0
    5834:	c5 57       	subi	r28, 0x75	; 117
    5836:	df 4f       	sbci	r29, 0xFF	; 255
    5838:	79 83       	std	Y+1, r23	; 0x01
    583a:	68 83       	st	Y, r22
    583c:	cb 58       	subi	r28, 0x8B	; 139
    583e:	d0 40       	sbci	r29, 0x00	; 0
    5840:	4a 01       	movw	r8, r20
    5842:	41 15       	cp	r20, r1
    5844:	24 e0       	ldi	r18, 0x04	; 4
    5846:	52 07       	cpc	r21, r18
    5848:	78 f1       	brcs	.+94     	; 0x58a8 <sha2_large_common_lastBlock+0xb6>
    584a:	7a 01       	movw	r14, r20
    584c:	8b 01       	movw	r16, r22
    584e:	b8 01       	movw	r22, r16
    5850:	cf 57       	subi	r28, 0x7F	; 127
    5852:	df 4f       	sbci	r29, 0xFF	; 255
    5854:	88 81       	ld	r24, Y
    5856:	99 81       	ldd	r25, Y+1	; 0x01
    5858:	c1 58       	subi	r28, 0x81	; 129
    585a:	d0 40       	sbci	r29, 0x00	; 0
    585c:	0e 94 92 23 	call	0x4724	; 0x4724 <sha2_large_common_nextBlock>
    5860:	00 58       	subi	r16, 0x80	; 128
    5862:	1f 4f       	sbci	r17, 0xFF	; 255
    5864:	34 e0       	ldi	r19, 0x04	; 4
    5866:	f3 1a       	sub	r15, r19
    5868:	e1 14       	cp	r14, r1
    586a:	84 e0       	ldi	r24, 0x04	; 4
    586c:	f8 06       	cpc	r15, r24
    586e:	78 f7       	brcc	.-34     	; 0x584e <sha2_large_common_lastBlock+0x5c>
    5870:	c4 01       	movw	r24, r8
    5872:	94 50       	subi	r25, 0x04	; 4
    5874:	89 2f       	mov	r24, r25
    5876:	99 27       	eor	r25, r25
    5878:	86 95       	lsr	r24
    587a:	86 95       	lsr	r24
    587c:	01 96       	adiw	r24, 0x01	; 1
    587e:	96 95       	lsr	r25
    5880:	98 2f       	mov	r25, r24
    5882:	88 27       	eor	r24, r24
    5884:	97 95       	ror	r25
    5886:	87 95       	ror	r24
    5888:	c5 57       	subi	r28, 0x75	; 117
    588a:	df 4f       	sbci	r29, 0xFF	; 255
    588c:	e8 81       	ld	r30, Y
    588e:	f9 81       	ldd	r31, Y+1	; 0x01
    5890:	cb 58       	subi	r28, 0x8B	; 139
    5892:	d0 40       	sbci	r29, 0x00	; 0
    5894:	e8 0f       	add	r30, r24
    5896:	f9 1f       	adc	r31, r25
    5898:	c5 57       	subi	r28, 0x75	; 117
    589a:	df 4f       	sbci	r29, 0xFF	; 255
    589c:	f9 83       	std	Y+1, r31	; 0x01
    589e:	e8 83       	st	Y, r30
    58a0:	cb 58       	subi	r28, 0x8B	; 139
    58a2:	d0 40       	sbci	r29, 0x00	; 0
    58a4:	f3 e0       	ldi	r31, 0x03	; 3
    58a6:	9f 22       	and	r9, r31
    58a8:	cf 57       	subi	r28, 0x7F	; 127
    58aa:	df 4f       	sbci	r29, 0xFF	; 255
    58ac:	e8 81       	ld	r30, Y
    58ae:	f9 81       	ldd	r31, Y+1	; 0x01
    58b0:	c1 58       	subi	r28, 0x81	; 129
    58b2:	d0 40       	sbci	r29, 0x00	; 0
    58b4:	e0 5c       	subi	r30, 0xC0	; 192
    58b6:	ff 4f       	sbci	r31, 0xFF	; 255
    58b8:	80 81       	ld	r24, Z
    58ba:	91 81       	ldd	r25, Z+1	; 0x01
    58bc:	a2 81       	ldd	r26, Z+2	; 0x02
    58be:	b3 81       	ldd	r27, Z+3	; 0x03
    58c0:	5c 01       	movw	r10, r24
    58c2:	6d 01       	movw	r12, r26
    58c4:	28 2f       	mov	r18, r24
    58c6:	3b 2d       	mov	r19, r11
    58c8:	4c 2d       	mov	r20, r12
    58ca:	5d 2d       	mov	r21, r13
    58cc:	60 e0       	ldi	r22, 0x00	; 0
    58ce:	70 e0       	ldi	r23, 0x00	; 0
    58d0:	80 e0       	ldi	r24, 0x00	; 0
    58d2:	90 e0       	ldi	r25, 0x00	; 0
    58d4:	0a e0       	ldi	r16, 0x0A	; 10
    58d6:	e6 d5       	rcall	.+3020   	; 0x64a4 <__ashldi3>
    58d8:	54 01       	movw	r10, r8
    58da:	c1 2c       	mov	r12, r1
    58dc:	d1 2c       	mov	r13, r1
    58de:	e1 2c       	mov	r14, r1
    58e0:	f1 2c       	mov	r15, r1
    58e2:	87 01       	movw	r16, r14
    58e4:	cd 57       	subi	r28, 0x7D	; 125
    58e6:	df 4f       	sbci	r29, 0xFF	; 255
    58e8:	88 82       	st	Y, r8
    58ea:	c3 58       	subi	r28, 0x83	; 131
    58ec:	d0 40       	sbci	r29, 0x00	; 0
    58ee:	cc 57       	subi	r28, 0x7C	; 124
    58f0:	df 4f       	sbci	r29, 0xFF	; 255
    58f2:	b8 82       	st	Y, r11
    58f4:	c4 58       	subi	r28, 0x84	; 132
    58f6:	d0 40       	sbci	r29, 0x00	; 0
    58f8:	cb 57       	subi	r28, 0x7B	; 123
    58fa:	df 4f       	sbci	r29, 0xFF	; 255
    58fc:	c8 82       	st	Y, r12
    58fe:	c5 58       	subi	r28, 0x85	; 133
    5900:	d0 40       	sbci	r29, 0x00	; 0
    5902:	ca 57       	subi	r28, 0x7A	; 122
    5904:	df 4f       	sbci	r29, 0xFF	; 255
    5906:	d8 82       	st	Y, r13
    5908:	c6 58       	subi	r28, 0x86	; 134
    590a:	d0 40       	sbci	r29, 0x00	; 0
    590c:	c9 57       	subi	r28, 0x79	; 121
    590e:	df 4f       	sbci	r29, 0xFF	; 255
    5910:	e8 82       	st	Y, r14
    5912:	c7 58       	subi	r28, 0x87	; 135
    5914:	d0 40       	sbci	r29, 0x00	; 0
    5916:	c8 57       	subi	r28, 0x78	; 120
    5918:	df 4f       	sbci	r29, 0xFF	; 255
    591a:	f8 82       	st	Y, r15
    591c:	c8 58       	subi	r28, 0x88	; 136
    591e:	d0 40       	sbci	r29, 0x00	; 0
    5920:	c7 57       	subi	r28, 0x77	; 119
    5922:	df 4f       	sbci	r29, 0xFF	; 255
    5924:	08 83       	st	Y, r16
    5926:	c9 58       	subi	r28, 0x89	; 137
    5928:	d0 40       	sbci	r29, 0x00	; 0
    592a:	c6 57       	subi	r28, 0x76	; 118
    592c:	df 4f       	sbci	r29, 0xFF	; 255
    592e:	18 83       	st	Y, r17
    5930:	ca 58       	subi	r28, 0x8A	; 138
    5932:	d0 40       	sbci	r29, 0x00	; 0
    5934:	c1 2c       	mov	r12, r1
    5936:	d1 2c       	mov	r13, r1
    5938:	e1 2c       	mov	r14, r1
    593a:	f1 2c       	mov	r15, r1
    593c:	00 e0       	ldi	r16, 0x00	; 0
    593e:	10 e0       	ldi	r17, 0x00	; 0
    5940:	03 d6       	rcall	.+3078   	; 0x6548 <__adddi3>
    5942:	e2 2f       	mov	r30, r18
    5944:	a3 2e       	mov	r10, r19
    5946:	b4 2e       	mov	r11, r20
    5948:	b5 2f       	mov	r27, r21
    594a:	a6 2f       	mov	r26, r22
    594c:	f7 2f       	mov	r31, r23
    594e:	28 2e       	mov	r2, r24
    5950:	39 2e       	mov	r3, r25
    5952:	68 94       	set
    5954:	44 24       	eor	r4, r4
    5956:	43 f8       	bld	r4, 3
    5958:	71 2c       	mov	r7, r1
    595a:	51 2c       	mov	r5, r1
    595c:	61 2c       	mov	r6, r1
    595e:	27 2d       	mov	r18, r7
    5960:	3c 2d       	mov	r19, r12
    5962:	4d 2d       	mov	r20, r13
    5964:	5e 2d       	mov	r21, r14
    5966:	6f 2d       	mov	r22, r15
    5968:	71 2f       	mov	r23, r17
    596a:	85 2d       	mov	r24, r5
    596c:	96 2d       	mov	r25, r6
    596e:	08 e0       	ldi	r16, 0x08	; 8
    5970:	99 d5       	rcall	.+2866   	; 0x64a4 <__ashldi3>
    5972:	7e 2e       	mov	r7, r30
    5974:	72 2a       	or	r7, r18
    5976:	c3 2e       	mov	r12, r19
    5978:	d4 2e       	mov	r13, r20
    597a:	e5 2e       	mov	r14, r21
    597c:	f6 2e       	mov	r15, r22
    597e:	17 2f       	mov	r17, r23
    5980:	58 2e       	mov	r5, r24
    5982:	69 2e       	mov	r6, r25
    5984:	2e 2f       	mov	r18, r30
    5986:	3a 2d       	mov	r19, r10
    5988:	4b 2d       	mov	r20, r11
    598a:	5b 2f       	mov	r21, r27
    598c:	6a 2f       	mov	r22, r26
    598e:	7f 2f       	mov	r23, r31
    5990:	82 2d       	mov	r24, r2
    5992:	93 2d       	mov	r25, r3
    5994:	a2 d5       	rcall	.+2884   	; 0x64da <__lshrdi3>
    5996:	e2 2f       	mov	r30, r18
    5998:	a3 2e       	mov	r10, r19
    599a:	b4 2e       	mov	r11, r20
    599c:	b5 2f       	mov	r27, r21
    599e:	a6 2f       	mov	r26, r22
    59a0:	f7 2f       	mov	r31, r23
    59a2:	28 2e       	mov	r2, r24
    59a4:	39 2e       	mov	r3, r25
    59a6:	4a 94       	dec	r4
    59a8:	41 10       	cpse	r4, r1
    59aa:	d9 cf       	rjmp	.-78     	; 0x595e <sha2_large_common_lastBlock+0x16c>
    59ac:	9e 01       	movw	r18, r28
    59ae:	2f 5f       	subi	r18, 0xFF	; 255
    59b0:	3f 4f       	sbci	r19, 0xFF	; 255
    59b2:	59 01       	movw	r10, r18
    59b4:	80 e8       	ldi	r24, 0x80	; 128
    59b6:	f9 01       	movw	r30, r18
    59b8:	11 92       	st	Z+, r1
    59ba:	8a 95       	dec	r24
    59bc:	e9 f7       	brne	.-6      	; 0x59b8 <sha2_large_common_lastBlock+0x1c6>
    59be:	a4 01       	movw	r20, r8
    59c0:	49 5f       	subi	r20, 0xF9	; 249
    59c2:	5f 4f       	sbci	r21, 0xFF	; 255
    59c4:	56 95       	lsr	r21
    59c6:	47 95       	ror	r20
    59c8:	56 95       	lsr	r21
    59ca:	47 95       	ror	r20
    59cc:	56 95       	lsr	r21
    59ce:	47 95       	ror	r20
    59d0:	c5 57       	subi	r28, 0x75	; 117
    59d2:	df 4f       	sbci	r29, 0xFF	; 255
    59d4:	68 81       	ld	r22, Y
    59d6:	79 81       	ldd	r23, Y+1	; 0x01
    59d8:	cb 58       	subi	r28, 0x8B	; 139
    59da:	d0 40       	sbci	r29, 0x00	; 0
    59dc:	c9 01       	movw	r24, r18
    59de:	4d d7       	rcall	.+3738   	; 0x687a <memcpy>
    59e0:	f4 01       	movw	r30, r8
    59e2:	f6 95       	lsr	r31
    59e4:	e7 95       	ror	r30
    59e6:	f6 95       	lsr	r31
    59e8:	e7 95       	ror	r30
    59ea:	f6 95       	lsr	r31
    59ec:	e7 95       	ror	r30
    59ee:	ea 0d       	add	r30, r10
    59f0:	fb 1d       	adc	r31, r11
    59f2:	94 01       	movw	r18, r8
    59f4:	27 70       	andi	r18, 0x07	; 7
    59f6:	33 27       	eor	r19, r19
    59f8:	80 e8       	ldi	r24, 0x80	; 128
    59fa:	90 e0       	ldi	r25, 0x00	; 0
    59fc:	02 c0       	rjmp	.+4      	; 0x5a02 <sha2_large_common_lastBlock+0x210>
    59fe:	95 95       	asr	r25
    5a00:	87 95       	ror	r24
    5a02:	2a 95       	dec	r18
    5a04:	e2 f7       	brpl	.-8      	; 0x59fe <sha2_large_common_lastBlock+0x20c>
    5a06:	90 81       	ld	r25, Z
    5a08:	89 2b       	or	r24, r25
    5a0a:	80 83       	st	Z, r24
    5a0c:	f0 e8       	ldi	r31, 0x80	; 128
    5a0e:	8f 16       	cp	r8, r31
    5a10:	f3 e0       	ldi	r31, 0x03	; 3
    5a12:	9f 06       	cpc	r9, r31
    5a14:	70 f0       	brcs	.+28     	; 0x5a32 <sha2_large_common_lastBlock+0x240>
    5a16:	b5 01       	movw	r22, r10
    5a18:	cf 57       	subi	r28, 0x7F	; 127
    5a1a:	df 4f       	sbci	r29, 0xFF	; 255
    5a1c:	88 81       	ld	r24, Y
    5a1e:	99 81       	ldd	r25, Y+1	; 0x01
    5a20:	c1 58       	subi	r28, 0x81	; 129
    5a22:	d0 40       	sbci	r29, 0x00	; 0
    5a24:	0e 94 92 23 	call	0x4724	; 0x4724 <sha2_large_common_nextBlock>
    5a28:	88 e7       	ldi	r24, 0x78	; 120
    5a2a:	f5 01       	movw	r30, r10
    5a2c:	11 92       	st	Z+, r1
    5a2e:	8a 95       	dec	r24
    5a30:	e9 f7       	brne	.-6      	; 0x5a2c <sha2_large_common_lastBlock+0x23a>
    5a32:	ea 96       	adiw	r28, 0x3a	; 58
    5a34:	7f ae       	std	Y+63, r7	; 0x3f
    5a36:	ea 97       	sbiw	r28, 0x3a	; 58
    5a38:	eb 96       	adiw	r28, 0x3b	; 59
    5a3a:	cf ae       	std	Y+63, r12	; 0x3f
    5a3c:	eb 97       	sbiw	r28, 0x3b	; 59
    5a3e:	ec 96       	adiw	r28, 0x3c	; 60
    5a40:	df ae       	std	Y+63, r13	; 0x3f
    5a42:	ec 97       	sbiw	r28, 0x3c	; 60
    5a44:	ed 96       	adiw	r28, 0x3d	; 61
    5a46:	ef ae       	std	Y+63, r14	; 0x3f
    5a48:	ed 97       	sbiw	r28, 0x3d	; 61
    5a4a:	ee 96       	adiw	r28, 0x3e	; 62
    5a4c:	ff ae       	std	Y+63, r15	; 0x3f
    5a4e:	ee 97       	sbiw	r28, 0x3e	; 62
    5a50:	ef 96       	adiw	r28, 0x3f	; 63
    5a52:	1f af       	std	Y+63, r17	; 0x3f
    5a54:	ef 97       	sbiw	r28, 0x3f	; 63
    5a56:	c1 58       	subi	r28, 0x81	; 129
    5a58:	df 4f       	sbci	r29, 0xFF	; 255
    5a5a:	58 82       	st	Y, r5
    5a5c:	cf 57       	subi	r28, 0x7F	; 127
    5a5e:	d0 40       	sbci	r29, 0x00	; 0
    5a60:	c0 58       	subi	r28, 0x80	; 128
    5a62:	df 4f       	sbci	r29, 0xFF	; 255
    5a64:	68 82       	st	Y, r6
    5a66:	c0 58       	subi	r28, 0x80	; 128
    5a68:	d0 40       	sbci	r29, 0x00	; 0
    5a6a:	be 01       	movw	r22, r28
    5a6c:	6f 5f       	subi	r22, 0xFF	; 255
    5a6e:	7f 4f       	sbci	r23, 0xFF	; 255
    5a70:	cf 57       	subi	r28, 0x7F	; 127
    5a72:	df 4f       	sbci	r29, 0xFF	; 255
    5a74:	88 81       	ld	r24, Y
    5a76:	99 81       	ldd	r25, Y+1	; 0x01
    5a78:	c1 58       	subi	r28, 0x81	; 129
    5a7a:	d0 40       	sbci	r29, 0x00	; 0
    5a7c:	0e 94 92 23 	call	0x4724	; 0x4724 <sha2_large_common_nextBlock>
    5a80:	c4 57       	subi	r28, 0x74	; 116
    5a82:	df 4f       	sbci	r29, 0xFF	; 255
    5a84:	0f b6       	in	r0, 0x3f	; 63
    5a86:	f8 94       	cli
    5a88:	de bf       	out	0x3e, r29	; 62
    5a8a:	0f be       	out	0x3f, r0	; 63
    5a8c:	cd bf       	out	0x3d, r28	; 61
    5a8e:	df 91       	pop	r29
    5a90:	cf 91       	pop	r28
    5a92:	1f 91       	pop	r17
    5a94:	0f 91       	pop	r16
    5a96:	ff 90       	pop	r15
    5a98:	ef 90       	pop	r14
    5a9a:	df 90       	pop	r13
    5a9c:	cf 90       	pop	r12
    5a9e:	bf 90       	pop	r11
    5aa0:	af 90       	pop	r10
    5aa2:	9f 90       	pop	r9
    5aa4:	8f 90       	pop	r8
    5aa6:	7f 90       	pop	r7
    5aa8:	6f 90       	pop	r6
    5aaa:	5f 90       	pop	r5
    5aac:	4f 90       	pop	r4
    5aae:	3f 90       	pop	r3
    5ab0:	2f 90       	pop	r2
    5ab2:	08 95       	ret

00005ab4 <sha2_small_common_nextBlock>:
    5ab4:	2f 92       	push	r2
    5ab6:	3f 92       	push	r3
    5ab8:	4f 92       	push	r4
    5aba:	5f 92       	push	r5
    5abc:	6f 92       	push	r6
    5abe:	7f 92       	push	r7
    5ac0:	8f 92       	push	r8
    5ac2:	9f 92       	push	r9
    5ac4:	af 92       	push	r10
    5ac6:	bf 92       	push	r11
    5ac8:	cf 92       	push	r12
    5aca:	df 92       	push	r13
    5acc:	ef 92       	push	r14
    5ace:	ff 92       	push	r15
    5ad0:	0f 93       	push	r16
    5ad2:	1f 93       	push	r17
    5ad4:	cf 93       	push	r28
    5ad6:	df 93       	push	r29
    5ad8:	cd b7       	in	r28, 0x3d	; 61
    5ada:	de b7       	in	r29, 0x3e	; 62
    5adc:	cb 56       	subi	r28, 0x6B	; 107
    5ade:	d1 09       	sbc	r29, r1
    5ae0:	0f b6       	in	r0, 0x3f	; 63
    5ae2:	f8 94       	cli
    5ae4:	de bf       	out	0x3e, r29	; 62
    5ae6:	0f be       	out	0x3f, r0	; 63
    5ae8:	cd bf       	out	0x3d, r28	; 61
    5aea:	ac 96       	adiw	r28, 0x2c	; 44
    5aec:	9f af       	std	Y+63, r25	; 0x3f
    5aee:	8e af       	std	Y+62, r24	; 0x3e
    5af0:	ac 97       	sbiw	r28, 0x2c	; 44
    5af2:	9e 01       	movw	r18, r28
    5af4:	2f 5f       	subi	r18, 0xFF	; 255
    5af6:	3f 4f       	sbci	r19, 0xFF	; 255
    5af8:	a8 96       	adiw	r28, 0x28	; 40
    5afa:	3f af       	std	Y+63, r19	; 0x3f
    5afc:	2e af       	std	Y+62, r18	; 0x3e
    5afe:	a8 97       	sbiw	r28, 0x28	; 40
    5b00:	20 5c       	subi	r18, 0xC0	; 192
    5b02:	3f 4f       	sbci	r19, 0xFF	; 255
    5b04:	a8 96       	adiw	r28, 0x28	; 40
    5b06:	ee ad       	ldd	r30, Y+62	; 0x3e
    5b08:	ff ad       	ldd	r31, Y+63	; 0x3f
    5b0a:	a8 97       	sbiw	r28, 0x28	; 40
    5b0c:	af 01       	movw	r20, r30
    5b0e:	fb 01       	movw	r30, r22
    5b10:	81 91       	ld	r24, Z+
    5b12:	91 91       	ld	r25, Z+
    5b14:	a1 91       	ld	r26, Z+
    5b16:	b1 91       	ld	r27, Z+
    5b18:	bf 01       	movw	r22, r30
    5b1a:	b8 2e       	mov	r11, r24
    5b1c:	aa 24       	eor	r10, r10
    5b1e:	99 24       	eor	r9, r9
    5b20:	88 24       	eor	r8, r8
    5b22:	cb 2e       	mov	r12, r27
    5b24:	dd 24       	eor	r13, r13
    5b26:	ee 24       	eor	r14, r14
    5b28:	ff 24       	eor	r15, r15
    5b2a:	c8 28       	or	r12, r8
    5b2c:	d9 28       	or	r13, r9
    5b2e:	ea 28       	or	r14, r10
    5b30:	fb 28       	or	r15, r11
    5b32:	4c 01       	movw	r8, r24
    5b34:	5d 01       	movw	r10, r26
    5b36:	88 24       	eor	r8, r8
    5b38:	aa 24       	eor	r10, r10
    5b3a:	bb 24       	eor	r11, r11
    5b3c:	ba 2c       	mov	r11, r10
    5b3e:	a9 2c       	mov	r10, r9
    5b40:	98 2c       	mov	r9, r8
    5b42:	88 24       	eor	r8, r8
    5b44:	c8 28       	or	r12, r8
    5b46:	d9 28       	or	r13, r9
    5b48:	ea 28       	or	r14, r10
    5b4a:	fb 28       	or	r15, r11
    5b4c:	88 27       	eor	r24, r24
    5b4e:	99 27       	eor	r25, r25
    5b50:	bb 27       	eor	r27, r27
    5b52:	89 2f       	mov	r24, r25
    5b54:	9a 2f       	mov	r25, r26
    5b56:	ab 2f       	mov	r26, r27
    5b58:	bb 27       	eor	r27, r27
    5b5a:	8c 29       	or	r24, r12
    5b5c:	9d 29       	or	r25, r13
    5b5e:	ae 29       	or	r26, r14
    5b60:	bf 29       	or	r27, r15
    5b62:	fa 01       	movw	r30, r20
    5b64:	81 93       	st	Z+, r24
    5b66:	91 93       	st	Z+, r25
    5b68:	a1 93       	st	Z+, r26
    5b6a:	b1 93       	st	Z+, r27
    5b6c:	af 01       	movw	r20, r30
    5b6e:	e2 17       	cp	r30, r18
    5b70:	f3 07       	cpc	r31, r19
    5b72:	69 f6       	brne	.-102    	; 0x5b0e <sha2_small_common_nextBlock+0x5a>
    5b74:	80 e2       	ldi	r24, 0x20	; 32
    5b76:	ac 96       	adiw	r28, 0x2c	; 44
    5b78:	ee ad       	ldd	r30, Y+62	; 0x3e
    5b7a:	ff ad       	ldd	r31, Y+63	; 0x3f
    5b7c:	ac 97       	sbiw	r28, 0x2c	; 44
    5b7e:	de 01       	movw	r26, r28
    5b80:	af 5b       	subi	r26, 0xBF	; 191
    5b82:	bf 4f       	sbci	r27, 0xFF	; 255
    5b84:	01 90       	ld	r0, Z+
    5b86:	0d 92       	st	X+, r0
    5b88:	8a 95       	dec	r24
    5b8a:	e1 f7       	brne	.-8      	; 0x5b84 <sha2_small_common_nextBlock+0xd0>
    5b8c:	0f 2e       	mov	r0, r31
    5b8e:	f4 e3       	ldi	r31, 0x34	; 52
    5b90:	2f 2e       	mov	r2, r31
    5b92:	f3 e0       	ldi	r31, 0x03	; 3
    5b94:	3f 2e       	mov	r3, r31
    5b96:	f0 2d       	mov	r31, r0
    5b98:	a6 96       	adiw	r28, 0x26	; 38
    5b9a:	1f ae       	std	Y+63, r1	; 0x3f
    5b9c:	a6 97       	sbiw	r28, 0x26	; 38
    5b9e:	21 e4       	ldi	r18, 0x41	; 65
    5ba0:	30 e0       	ldi	r19, 0x00	; 0
    5ba2:	2c 0f       	add	r18, r28
    5ba4:	3d 1f       	adc	r19, r29
    5ba6:	2c 5f       	subi	r18, 0xFC	; 252
    5ba8:	3f 4f       	sbci	r19, 0xFF	; 255
    5baa:	aa 96       	adiw	r28, 0x2a	; 42
    5bac:	3f af       	std	Y+63, r19	; 0x3f
    5bae:	2e af       	std	Y+62, r18	; 0x3e
    5bb0:	aa 97       	sbiw	r28, 0x2a	; 42
    5bb2:	a6 96       	adiw	r28, 0x26	; 38
    5bb4:	3f ad       	ldd	r19, Y+63	; 0x3f
    5bb6:	a6 97       	sbiw	r28, 0x26	; 38
    5bb8:	30 31       	cpi	r19, 0x10	; 16
    5bba:	48 f4       	brcc	.+18     	; 0x5bce <sha2_small_common_nextBlock+0x11a>
    5bbc:	a8 96       	adiw	r28, 0x28	; 40
    5bbe:	ae ad       	ldd	r26, Y+62	; 0x3e
    5bc0:	bf ad       	ldd	r27, Y+63	; 0x3f
    5bc2:	a8 97       	sbiw	r28, 0x28	; 40
    5bc4:	cd 90       	ld	r12, X+
    5bc6:	dd 90       	ld	r13, X+
    5bc8:	ed 90       	ld	r14, X+
    5bca:	fc 90       	ld	r15, X
    5bcc:	b8 c0       	rjmp	.+368    	; 0x5d3e <sha2_small_common_nextBlock+0x28a>
    5bce:	89 ad       	ldd	r24, Y+57	; 0x39
    5bd0:	9a ad       	ldd	r25, Y+58	; 0x3a
    5bd2:	ab ad       	ldd	r26, Y+59	; 0x3b
    5bd4:	bc ad       	ldd	r27, Y+60	; 0x3c
    5bd6:	8d 80       	ldd	r8, Y+5	; 0x05
    5bd8:	9e 80       	ldd	r9, Y+6	; 0x06
    5bda:	af 80       	ldd	r10, Y+7	; 0x07
    5bdc:	b8 84       	ldd	r11, Y+8	; 0x08
    5bde:	6c 01       	movw	r12, r24
    5be0:	7d 01       	movw	r14, r26
    5be2:	0b 2e       	mov	r0, r27
    5be4:	bd e0       	ldi	r27, 0x0D	; 13
    5be6:	cc 0c       	add	r12, r12
    5be8:	dd 1c       	adc	r13, r13
    5bea:	ee 1c       	adc	r14, r14
    5bec:	ff 1c       	adc	r15, r15
    5bee:	ba 95       	dec	r27
    5bf0:	d1 f7       	brne	.-12     	; 0x5be6 <sha2_small_common_nextBlock+0x132>
    5bf2:	b0 2d       	mov	r27, r0
    5bf4:	ac 01       	movw	r20, r24
    5bf6:	bd 01       	movw	r22, r26
    5bf8:	03 2e       	mov	r0, r19
    5bfa:	33 e1       	ldi	r19, 0x13	; 19
    5bfc:	76 95       	lsr	r23
    5bfe:	67 95       	ror	r22
    5c00:	57 95       	ror	r21
    5c02:	47 95       	ror	r20
    5c04:	3a 95       	dec	r19
    5c06:	d1 f7       	brne	.-12     	; 0x5bfc <sha2_small_common_nextBlock+0x148>
    5c08:	30 2d       	mov	r19, r0
    5c0a:	97 01       	movw	r18, r14
    5c0c:	86 01       	movw	r16, r12
    5c0e:	04 2b       	or	r16, r20
    5c10:	15 2b       	or	r17, r21
    5c12:	26 2b       	or	r18, r22
    5c14:	37 2b       	or	r19, r23
    5c16:	6c 01       	movw	r12, r24
    5c18:	7d 01       	movw	r14, r26
    5c1a:	0b 2e       	mov	r0, r27
    5c1c:	bf e0       	ldi	r27, 0x0F	; 15
    5c1e:	cc 0c       	add	r12, r12
    5c20:	dd 1c       	adc	r13, r13
    5c22:	ee 1c       	adc	r14, r14
    5c24:	ff 1c       	adc	r15, r15
    5c26:	ba 95       	dec	r27
    5c28:	d1 f7       	brne	.-12     	; 0x5c1e <sha2_small_common_nextBlock+0x16a>
    5c2a:	b0 2d       	mov	r27, r0
    5c2c:	ac 01       	movw	r20, r24
    5c2e:	bd 01       	movw	r22, r26
    5c30:	03 2e       	mov	r0, r19
    5c32:	31 e1       	ldi	r19, 0x11	; 17
    5c34:	76 95       	lsr	r23
    5c36:	67 95       	ror	r22
    5c38:	57 95       	ror	r21
    5c3a:	47 95       	ror	r20
    5c3c:	3a 95       	dec	r19
    5c3e:	d1 f7       	brne	.-12     	; 0x5c34 <sha2_small_common_nextBlock+0x180>
    5c40:	30 2d       	mov	r19, r0
    5c42:	4c 29       	or	r20, r12
    5c44:	5d 29       	or	r21, r13
    5c46:	6e 29       	or	r22, r14
    5c48:	7f 29       	or	r23, r15
    5c4a:	68 01       	movw	r12, r16
    5c4c:	79 01       	movw	r14, r18
    5c4e:	c4 26       	eor	r12, r20
    5c50:	d5 26       	eor	r13, r21
    5c52:	e6 26       	eor	r14, r22
    5c54:	f7 26       	eor	r15, r23
    5c56:	07 2e       	mov	r0, r23
    5c58:	7a e0       	ldi	r23, 0x0A	; 10
    5c5a:	b6 95       	lsr	r27
    5c5c:	a7 95       	ror	r26
    5c5e:	97 95       	ror	r25
    5c60:	87 95       	ror	r24
    5c62:	7a 95       	dec	r23
    5c64:	d1 f7       	brne	.-12     	; 0x5c5a <sha2_small_common_nextBlock+0x1a6>
    5c66:	70 2d       	mov	r23, r0
    5c68:	8c 25       	eor	r24, r12
    5c6a:	9d 25       	eor	r25, r13
    5c6c:	ae 25       	eor	r26, r14
    5c6e:	bf 25       	eor	r27, r15
    5c70:	cd a0       	ldd	r12, Y+37	; 0x25
    5c72:	de a0       	ldd	r13, Y+38	; 0x26
    5c74:	ef a0       	ldd	r14, Y+39	; 0x27
    5c76:	f8 a4       	ldd	r15, Y+40	; 0x28
    5c78:	49 81       	ldd	r20, Y+1	; 0x01
    5c7a:	5a 81       	ldd	r21, Y+2	; 0x02
    5c7c:	6b 81       	ldd	r22, Y+3	; 0x03
    5c7e:	7c 81       	ldd	r23, Y+4	; 0x04
    5c80:	c4 0e       	add	r12, r20
    5c82:	d5 1e       	adc	r13, r21
    5c84:	e6 1e       	adc	r14, r22
    5c86:	f7 1e       	adc	r15, r23
    5c88:	8c 0d       	add	r24, r12
    5c8a:	9d 1d       	adc	r25, r13
    5c8c:	ae 1d       	adc	r26, r14
    5c8e:	bf 1d       	adc	r27, r15
    5c90:	75 01       	movw	r14, r10
    5c92:	64 01       	movw	r12, r8
    5c94:	0b 2e       	mov	r0, r27
    5c96:	be e0       	ldi	r27, 0x0E	; 14
    5c98:	cc 0c       	add	r12, r12
    5c9a:	dd 1c       	adc	r13, r13
    5c9c:	ee 1c       	adc	r14, r14
    5c9e:	ff 1c       	adc	r15, r15
    5ca0:	ba 95       	dec	r27
    5ca2:	d1 f7       	brne	.-12     	; 0x5c98 <sha2_small_common_nextBlock+0x1e4>
    5ca4:	b0 2d       	mov	r27, r0
    5ca6:	b5 01       	movw	r22, r10
    5ca8:	a4 01       	movw	r20, r8
    5caa:	03 2e       	mov	r0, r19
    5cac:	32 e1       	ldi	r19, 0x12	; 18
    5cae:	76 95       	lsr	r23
    5cb0:	67 95       	ror	r22
    5cb2:	57 95       	ror	r21
    5cb4:	47 95       	ror	r20
    5cb6:	3a 95       	dec	r19
    5cb8:	d1 f7       	brne	.-12     	; 0x5cae <sha2_small_common_nextBlock+0x1fa>
    5cba:	30 2d       	mov	r19, r0
    5cbc:	c4 2a       	or	r12, r20
    5cbe:	d5 2a       	or	r13, r21
    5cc0:	e6 2a       	or	r14, r22
    5cc2:	f7 2a       	or	r15, r23
    5cc4:	b5 01       	movw	r22, r10
    5cc6:	a4 01       	movw	r20, r8
    5cc8:	68 94       	set
    5cca:	16 f8       	bld	r1, 6
    5ccc:	76 95       	lsr	r23
    5cce:	67 95       	ror	r22
    5cd0:	57 95       	ror	r21
    5cd2:	47 95       	ror	r20
    5cd4:	16 94       	lsr	r1
    5cd6:	d1 f7       	brne	.-12     	; 0x5ccc <sha2_small_common_nextBlock+0x218>
    5cd8:	95 01       	movw	r18, r10
    5cda:	84 01       	movw	r16, r8
    5cdc:	0f 2e       	mov	r0, r31
    5cde:	f9 e1       	ldi	r31, 0x19	; 25
    5ce0:	00 0f       	add	r16, r16
    5ce2:	11 1f       	adc	r17, r17
    5ce4:	22 1f       	adc	r18, r18
    5ce6:	33 1f       	adc	r19, r19
    5ce8:	fa 95       	dec	r31
    5cea:	d1 f7       	brne	.-12     	; 0x5ce0 <sha2_small_common_nextBlock+0x22c>
    5cec:	f0 2d       	mov	r31, r0
    5cee:	40 2b       	or	r20, r16
    5cf0:	51 2b       	or	r21, r17
    5cf2:	62 2b       	or	r22, r18
    5cf4:	73 2b       	or	r23, r19
    5cf6:	c4 26       	eor	r12, r20
    5cf8:	d5 26       	eor	r13, r21
    5cfa:	e6 26       	eor	r14, r22
    5cfc:	f7 26       	eor	r15, r23
    5cfe:	68 94       	set
    5d00:	12 f8       	bld	r1, 2
    5d02:	b6 94       	lsr	r11
    5d04:	a7 94       	ror	r10
    5d06:	97 94       	ror	r9
    5d08:	87 94       	ror	r8
    5d0a:	16 94       	lsr	r1
    5d0c:	d1 f7       	brne	.-12     	; 0x5d02 <sha2_small_common_nextBlock+0x24e>
    5d0e:	8c 24       	eor	r8, r12
    5d10:	9d 24       	eor	r9, r13
    5d12:	ae 24       	eor	r10, r14
    5d14:	bf 24       	eor	r11, r15
    5d16:	6c 01       	movw	r12, r24
    5d18:	7d 01       	movw	r14, r26
    5d1a:	c8 0c       	add	r12, r8
    5d1c:	d9 1c       	adc	r13, r9
    5d1e:	ea 1c       	adc	r14, r10
    5d20:	fb 1c       	adc	r15, r11
    5d22:	4c e3       	ldi	r20, 0x3C	; 60
    5d24:	50 e0       	ldi	r21, 0x00	; 0
    5d26:	be 01       	movw	r22, r28
    5d28:	6b 5f       	subi	r22, 0xFB	; 251
    5d2a:	7f 4f       	sbci	r23, 0xFF	; 255
    5d2c:	ce 01       	movw	r24, r28
    5d2e:	01 96       	adiw	r24, 0x01	; 1
    5d30:	ad d5       	rcall	.+2906   	; 0x688c <memmove>
    5d32:	21 96       	adiw	r28, 0x01	; 1
    5d34:	cc ae       	std	Y+60, r12	; 0x3c
    5d36:	dd ae       	std	Y+61, r13	; 0x3d
    5d38:	ee ae       	std	Y+62, r14	; 0x3e
    5d3a:	ff ae       	std	Y+63, r15	; 0x3f
    5d3c:	21 97       	sbiw	r28, 0x01	; 1
    5d3e:	65 96       	adiw	r28, 0x15	; 21
    5d40:	8c ad       	ldd	r24, Y+60	; 0x3c
    5d42:	9d ad       	ldd	r25, Y+61	; 0x3d
    5d44:	ae ad       	ldd	r26, Y+62	; 0x3e
    5d46:	bf ad       	ldd	r27, Y+63	; 0x3f
    5d48:	65 97       	sbiw	r28, 0x15	; 21
    5d4a:	f1 01       	movw	r30, r2
    5d4c:	25 91       	lpm	r18, Z+
    5d4e:	35 91       	lpm	r19, Z+
    5d50:	45 91       	lpm	r20, Z+
    5d52:	54 91       	lpm	r21, Z
    5d54:	a5 96       	adiw	r28, 0x25	; 37
    5d56:	2c af       	std	Y+60, r18	; 0x3c
    5d58:	3d af       	std	Y+61, r19	; 0x3d
    5d5a:	4e af       	std	Y+62, r20	; 0x3e
    5d5c:	5f af       	std	Y+63, r21	; 0x3f
    5d5e:	a5 97       	sbiw	r28, 0x25	; 37
    5d60:	4c 01       	movw	r8, r24
    5d62:	5d 01       	movw	r10, r26
    5d64:	80 94       	com	r8
    5d66:	90 94       	com	r9
    5d68:	a0 94       	com	r10
    5d6a:	b0 94       	com	r11
    5d6c:	6d 96       	adiw	r28, 0x1d	; 29
    5d6e:	4c ad       	ldd	r20, Y+60	; 0x3c
    5d70:	5d ad       	ldd	r21, Y+61	; 0x3d
    5d72:	6e ad       	ldd	r22, Y+62	; 0x3e
    5d74:	7f ad       	ldd	r23, Y+63	; 0x3f
    5d76:	6d 97       	sbiw	r28, 0x1d	; 29
    5d78:	84 22       	and	r8, r20
    5d7a:	95 22       	and	r9, r21
    5d7c:	a6 22       	and	r10, r22
    5d7e:	b7 22       	and	r11, r23
    5d80:	69 96       	adiw	r28, 0x19	; 25
    5d82:	4c ad       	ldd	r20, Y+60	; 0x3c
    5d84:	5d ad       	ldd	r21, Y+61	; 0x3d
    5d86:	6e ad       	ldd	r22, Y+62	; 0x3e
    5d88:	7f ad       	ldd	r23, Y+63	; 0x3f
    5d8a:	69 97       	sbiw	r28, 0x19	; 25
    5d8c:	8c 01       	movw	r16, r24
    5d8e:	9d 01       	movw	r18, r26
    5d90:	04 23       	and	r16, r20
    5d92:	15 23       	and	r17, r21
    5d94:	26 23       	and	r18, r22
    5d96:	37 23       	and	r19, r23
    5d98:	b5 01       	movw	r22, r10
    5d9a:	a4 01       	movw	r20, r8
    5d9c:	40 27       	eor	r20, r16
    5d9e:	51 27       	eor	r21, r17
    5da0:	62 27       	eor	r22, r18
    5da2:	73 27       	eor	r23, r19
    5da4:	4c 01       	movw	r8, r24
    5da6:	5d 01       	movw	r10, r26
    5da8:	07 2e       	mov	r0, r23
    5daa:	7b e0       	ldi	r23, 0x0B	; 11
    5dac:	b6 94       	lsr	r11
    5dae:	a7 94       	ror	r10
    5db0:	97 94       	ror	r9
    5db2:	87 94       	ror	r8
    5db4:	7a 95       	dec	r23
    5db6:	d1 f7       	brne	.-12     	; 0x5dac <sha2_small_common_nextBlock+0x2f8>
    5db8:	70 2d       	mov	r23, r0
    5dba:	8c 01       	movw	r16, r24
    5dbc:	9d 01       	movw	r18, r26
    5dbe:	0f 2e       	mov	r0, r31
    5dc0:	f5 e1       	ldi	r31, 0x15	; 21
    5dc2:	00 0f       	add	r16, r16
    5dc4:	11 1f       	adc	r17, r17
    5dc6:	22 1f       	adc	r18, r18
    5dc8:	33 1f       	adc	r19, r19
    5dca:	fa 95       	dec	r31
    5dcc:	d1 f7       	brne	.-12     	; 0x5dc2 <sha2_small_common_nextBlock+0x30e>
    5dce:	f0 2d       	mov	r31, r0
    5dd0:	80 2a       	or	r8, r16
    5dd2:	91 2a       	or	r9, r17
    5dd4:	a2 2a       	or	r10, r18
    5dd6:	b3 2a       	or	r11, r19
    5dd8:	2c 01       	movw	r4, r24
    5dda:	3d 01       	movw	r6, r26
    5ddc:	68 94       	set
    5dde:	15 f8       	bld	r1, 5
    5de0:	76 94       	lsr	r7
    5de2:	67 94       	ror	r6
    5de4:	57 94       	ror	r5
    5de6:	47 94       	ror	r4
    5de8:	16 94       	lsr	r1
    5dea:	d1 f7       	brne	.-12     	; 0x5de0 <sha2_small_common_nextBlock+0x32c>
    5dec:	8c 01       	movw	r16, r24
    5dee:	9d 01       	movw	r18, r26
    5df0:	0f 2e       	mov	r0, r31
    5df2:	fa e1       	ldi	r31, 0x1A	; 26
    5df4:	00 0f       	add	r16, r16
    5df6:	11 1f       	adc	r17, r17
    5df8:	22 1f       	adc	r18, r18
    5dfa:	33 1f       	adc	r19, r19
    5dfc:	fa 95       	dec	r31
    5dfe:	d1 f7       	brne	.-12     	; 0x5df4 <sha2_small_common_nextBlock+0x340>
    5e00:	f0 2d       	mov	r31, r0
    5e02:	04 29       	or	r16, r4
    5e04:	15 29       	or	r17, r5
    5e06:	26 29       	or	r18, r6
    5e08:	37 29       	or	r19, r7
    5e0a:	08 25       	eor	r16, r8
    5e0c:	19 25       	eor	r17, r9
    5e0e:	2a 25       	eor	r18, r10
    5e10:	3b 25       	eor	r19, r11
    5e12:	4c 01       	movw	r8, r24
    5e14:	5d 01       	movw	r10, r26
    5e16:	88 0c       	add	r8, r8
    5e18:	99 1c       	adc	r9, r9
    5e1a:	aa 1c       	adc	r10, r10
    5e1c:	bb 1c       	adc	r11, r11
    5e1e:	88 0c       	add	r8, r8
    5e20:	99 1c       	adc	r9, r9
    5e22:	aa 1c       	adc	r10, r10
    5e24:	bb 1c       	adc	r11, r11
    5e26:	88 0c       	add	r8, r8
    5e28:	99 1c       	adc	r9, r9
    5e2a:	aa 1c       	adc	r10, r10
    5e2c:	bb 1c       	adc	r11, r11
    5e2e:	88 0c       	add	r8, r8
    5e30:	99 1c       	adc	r9, r9
    5e32:	aa 1c       	adc	r10, r10
    5e34:	bb 1c       	adc	r11, r11
    5e36:	88 0c       	add	r8, r8
    5e38:	99 1c       	adc	r9, r9
    5e3a:	aa 1c       	adc	r10, r10
    5e3c:	bb 1c       	adc	r11, r11
    5e3e:	88 0c       	add	r8, r8
    5e40:	99 1c       	adc	r9, r9
    5e42:	aa 1c       	adc	r10, r10
    5e44:	bb 1c       	adc	r11, r11
    5e46:	88 0c       	add	r8, r8
    5e48:	99 1c       	adc	r9, r9
    5e4a:	aa 1c       	adc	r10, r10
    5e4c:	bb 1c       	adc	r11, r11
    5e4e:	07 2e       	mov	r0, r23
    5e50:	79 e1       	ldi	r23, 0x19	; 25
    5e52:	b6 95       	lsr	r27
    5e54:	a7 95       	ror	r26
    5e56:	97 95       	ror	r25
    5e58:	87 95       	ror	r24
    5e5a:	7a 95       	dec	r23
    5e5c:	d1 f7       	brne	.-12     	; 0x5e52 <sha2_small_common_nextBlock+0x39e>
    5e5e:	70 2d       	mov	r23, r0
    5e60:	88 29       	or	r24, r8
    5e62:	99 29       	or	r25, r9
    5e64:	aa 29       	or	r26, r10
    5e66:	bb 29       	or	r27, r11
    5e68:	08 27       	eor	r16, r24
    5e6a:	19 27       	eor	r17, r25
    5e6c:	2a 27       	eor	r18, r26
    5e6e:	3b 27       	eor	r19, r27
    5e70:	40 0f       	add	r20, r16
    5e72:	51 1f       	adc	r21, r17
    5e74:	62 1f       	adc	r22, r18
    5e76:	73 1f       	adc	r23, r19
    5e78:	a1 96       	adiw	r28, 0x21	; 33
    5e7a:	0c ad       	ldd	r16, Y+60	; 0x3c
    5e7c:	1d ad       	ldd	r17, Y+61	; 0x3d
    5e7e:	2e ad       	ldd	r18, Y+62	; 0x3e
    5e80:	3f ad       	ldd	r19, Y+63	; 0x3f
    5e82:	a1 97       	sbiw	r28, 0x21	; 33
    5e84:	40 0f       	add	r20, r16
    5e86:	51 1f       	adc	r21, r17
    5e88:	62 1f       	adc	r22, r18
    5e8a:	73 1f       	adc	r23, r19
    5e8c:	c4 0e       	add	r12, r20
    5e8e:	d5 1e       	adc	r13, r21
    5e90:	e6 1e       	adc	r14, r22
    5e92:	f7 1e       	adc	r15, r23
    5e94:	a5 96       	adiw	r28, 0x25	; 37
    5e96:	8c ad       	ldd	r24, Y+60	; 0x3c
    5e98:	9d ad       	ldd	r25, Y+61	; 0x3d
    5e9a:	ae ad       	ldd	r26, Y+62	; 0x3e
    5e9c:	bf ad       	ldd	r27, Y+63	; 0x3f
    5e9e:	a5 97       	sbiw	r28, 0x25	; 37
    5ea0:	8c 0d       	add	r24, r12
    5ea2:	9d 1d       	adc	r25, r13
    5ea4:	ae 1d       	adc	r26, r14
    5ea6:	bf 1d       	adc	r27, r15
    5ea8:	a5 96       	adiw	r28, 0x25	; 37
    5eaa:	8c af       	std	Y+60, r24	; 0x3c
    5eac:	9d af       	std	Y+61, r25	; 0x3d
    5eae:	ae af       	std	Y+62, r26	; 0x3e
    5eb0:	bf af       	std	Y+63, r27	; 0x3f
    5eb2:	a5 97       	sbiw	r28, 0x25	; 37
    5eb4:	25 96       	adiw	r28, 0x05	; 5
    5eb6:	8c ac       	ldd	r8, Y+60	; 0x3c
    5eb8:	9d ac       	ldd	r9, Y+61	; 0x3d
    5eba:	ae ac       	ldd	r10, Y+62	; 0x3e
    5ebc:	bf ac       	ldd	r11, Y+63	; 0x3f
    5ebe:	25 97       	sbiw	r28, 0x05	; 5
    5ec0:	29 96       	adiw	r28, 0x09	; 9
    5ec2:	4c ac       	ldd	r4, Y+60	; 0x3c
    5ec4:	5d ac       	ldd	r5, Y+61	; 0x3d
    5ec6:	6e ac       	ldd	r6, Y+62	; 0x3e
    5ec8:	7f ac       	ldd	r7, Y+63	; 0x3f
    5eca:	29 97       	sbiw	r28, 0x09	; 9
    5ecc:	2d 96       	adiw	r28, 0x0d	; 13
    5ece:	cc ac       	ldd	r12, Y+60	; 0x3c
    5ed0:	dd ac       	ldd	r13, Y+61	; 0x3d
    5ed2:	ee ac       	ldd	r14, Y+62	; 0x3e
    5ed4:	ff ac       	ldd	r15, Y+63	; 0x3f
    5ed6:	2d 97       	sbiw	r28, 0x0d	; 13
    5ed8:	4c e1       	ldi	r20, 0x1C	; 28
    5eda:	50 e0       	ldi	r21, 0x00	; 0
    5edc:	be 01       	movw	r22, r28
    5ede:	6f 5b       	subi	r22, 0xBF	; 191
    5ee0:	7f 4f       	sbci	r23, 0xFF	; 255
    5ee2:	aa 96       	adiw	r28, 0x2a	; 42
    5ee4:	8e ad       	ldd	r24, Y+62	; 0x3e
    5ee6:	9f ad       	ldd	r25, Y+63	; 0x3f
    5ee8:	aa 97       	sbiw	r28, 0x2a	; 42
    5eea:	d0 d4       	rcall	.+2464   	; 0x688c <memmove>
    5eec:	65 96       	adiw	r28, 0x15	; 21
    5eee:	8c ad       	ldd	r24, Y+60	; 0x3c
    5ef0:	9d ad       	ldd	r25, Y+61	; 0x3d
    5ef2:	ae ad       	ldd	r26, Y+62	; 0x3e
    5ef4:	bf ad       	ldd	r27, Y+63	; 0x3f
    5ef6:	65 97       	sbiw	r28, 0x15	; 21
    5ef8:	a5 96       	adiw	r28, 0x25	; 37
    5efa:	2c ad       	ldd	r18, Y+60	; 0x3c
    5efc:	3d ad       	ldd	r19, Y+61	; 0x3d
    5efe:	4e ad       	ldd	r20, Y+62	; 0x3e
    5f00:	5f ad       	ldd	r21, Y+63	; 0x3f
    5f02:	a5 97       	sbiw	r28, 0x25	; 37
    5f04:	82 0f       	add	r24, r18
    5f06:	93 1f       	adc	r25, r19
    5f08:	a4 1f       	adc	r26, r20
    5f0a:	b5 1f       	adc	r27, r21
    5f0c:	65 96       	adiw	r28, 0x15	; 21
    5f0e:	8c af       	std	Y+60, r24	; 0x3c
    5f10:	9d af       	std	Y+61, r25	; 0x3d
    5f12:	ae af       	std	Y+62, r26	; 0x3e
    5f14:	bf af       	std	Y+63, r27	; 0x3f
    5f16:	65 97       	sbiw	r28, 0x15	; 21
    5f18:	b5 01       	movw	r22, r10
    5f1a:	a4 01       	movw	r20, r8
    5f1c:	03 2e       	mov	r0, r19
    5f1e:	3d e0       	ldi	r19, 0x0D	; 13
    5f20:	76 95       	lsr	r23
    5f22:	67 95       	ror	r22
    5f24:	57 95       	ror	r21
    5f26:	47 95       	ror	r20
    5f28:	3a 95       	dec	r19
    5f2a:	d1 f7       	brne	.-12     	; 0x5f20 <sha2_small_common_nextBlock+0x46c>
    5f2c:	30 2d       	mov	r19, r0
    5f2e:	d5 01       	movw	r26, r10
    5f30:	c4 01       	movw	r24, r8
    5f32:	07 2e       	mov	r0, r23
    5f34:	73 e1       	ldi	r23, 0x13	; 19
    5f36:	88 0f       	add	r24, r24
    5f38:	99 1f       	adc	r25, r25
    5f3a:	aa 1f       	adc	r26, r26
    5f3c:	bb 1f       	adc	r27, r27
    5f3e:	7a 95       	dec	r23
    5f40:	d1 f7       	brne	.-12     	; 0x5f36 <sha2_small_common_nextBlock+0x482>
    5f42:	70 2d       	mov	r23, r0
    5f44:	84 2b       	or	r24, r20
    5f46:	95 2b       	or	r25, r21
    5f48:	a6 2b       	or	r26, r22
    5f4a:	b7 2b       	or	r27, r23
    5f4c:	b5 01       	movw	r22, r10
    5f4e:	a4 01       	movw	r20, r8
    5f50:	76 95       	lsr	r23
    5f52:	67 95       	ror	r22
    5f54:	57 95       	ror	r21
    5f56:	47 95       	ror	r20
    5f58:	76 95       	lsr	r23
    5f5a:	67 95       	ror	r22
    5f5c:	57 95       	ror	r21
    5f5e:	47 95       	ror	r20
    5f60:	95 01       	movw	r18, r10
    5f62:	84 01       	movw	r16, r8
    5f64:	0f 2e       	mov	r0, r31
    5f66:	fe e1       	ldi	r31, 0x1E	; 30
    5f68:	00 0f       	add	r16, r16
    5f6a:	11 1f       	adc	r17, r17
    5f6c:	22 1f       	adc	r18, r18
    5f6e:	33 1f       	adc	r19, r19
    5f70:	fa 95       	dec	r31
    5f72:	d1 f7       	brne	.-12     	; 0x5f68 <sha2_small_common_nextBlock+0x4b4>
    5f74:	f0 2d       	mov	r31, r0
    5f76:	40 2b       	or	r20, r16
    5f78:	51 2b       	or	r21, r17
    5f7a:	62 2b       	or	r22, r18
    5f7c:	73 2b       	or	r23, r19
    5f7e:	48 27       	eor	r20, r24
    5f80:	59 27       	eor	r21, r25
    5f82:	6a 27       	eor	r22, r26
    5f84:	7b 27       	eor	r23, r27
    5f86:	95 01       	movw	r18, r10
    5f88:	84 01       	movw	r16, r8
    5f8a:	0f 2e       	mov	r0, r31
    5f8c:	fa e0       	ldi	r31, 0x0A	; 10
    5f8e:	00 0f       	add	r16, r16
    5f90:	11 1f       	adc	r17, r17
    5f92:	22 1f       	adc	r18, r18
    5f94:	33 1f       	adc	r19, r19
    5f96:	fa 95       	dec	r31
    5f98:	d1 f7       	brne	.-12     	; 0x5f8e <sha2_small_common_nextBlock+0x4da>
    5f9a:	f0 2d       	mov	r31, r0
    5f9c:	d5 01       	movw	r26, r10
    5f9e:	c4 01       	movw	r24, r8
    5fa0:	07 2e       	mov	r0, r23
    5fa2:	76 e1       	ldi	r23, 0x16	; 22
    5fa4:	b6 95       	lsr	r27
    5fa6:	a7 95       	ror	r26
    5fa8:	97 95       	ror	r25
    5faa:	87 95       	ror	r24
    5fac:	7a 95       	dec	r23
    5fae:	d1 f7       	brne	.-12     	; 0x5fa4 <sha2_small_common_nextBlock+0x4f0>
    5fb0:	70 2d       	mov	r23, r0
    5fb2:	80 2b       	or	r24, r16
    5fb4:	91 2b       	or	r25, r17
    5fb6:	a2 2b       	or	r26, r18
    5fb8:	b3 2b       	or	r27, r19
    5fba:	48 27       	eor	r20, r24
    5fbc:	59 27       	eor	r21, r25
    5fbe:	6a 27       	eor	r22, r26
    5fc0:	7b 27       	eor	r23, r27
    5fc2:	97 01       	movw	r18, r14
    5fc4:	86 01       	movw	r16, r12
    5fc6:	04 25       	eor	r16, r4
    5fc8:	15 25       	eor	r17, r5
    5fca:	26 25       	eor	r18, r6
    5fcc:	37 25       	eor	r19, r7
    5fce:	80 22       	and	r8, r16
    5fd0:	91 22       	and	r9, r17
    5fd2:	a2 22       	and	r10, r18
    5fd4:	b3 22       	and	r11, r19
    5fd6:	c4 20       	and	r12, r4
    5fd8:	d5 20       	and	r13, r5
    5fda:	e6 20       	and	r14, r6
    5fdc:	f7 20       	and	r15, r7
    5fde:	95 01       	movw	r18, r10
    5fe0:	84 01       	movw	r16, r8
    5fe2:	0c 25       	eor	r16, r12
    5fe4:	1d 25       	eor	r17, r13
    5fe6:	2e 25       	eor	r18, r14
    5fe8:	3f 25       	eor	r19, r15
    5fea:	40 0f       	add	r20, r16
    5fec:	51 1f       	adc	r21, r17
    5fee:	62 1f       	adc	r22, r18
    5ff0:	73 1f       	adc	r23, r19
    5ff2:	a5 96       	adiw	r28, 0x25	; 37
    5ff4:	8c ad       	ldd	r24, Y+60	; 0x3c
    5ff6:	9d ad       	ldd	r25, Y+61	; 0x3d
    5ff8:	ae ad       	ldd	r26, Y+62	; 0x3e
    5ffa:	bf ad       	ldd	r27, Y+63	; 0x3f
    5ffc:	a5 97       	sbiw	r28, 0x25	; 37
    5ffe:	48 0f       	add	r20, r24
    6000:	59 1f       	adc	r21, r25
    6002:	6a 1f       	adc	r22, r26
    6004:	7b 1f       	adc	r23, r27
    6006:	25 96       	adiw	r28, 0x05	; 5
    6008:	4c af       	std	Y+60, r20	; 0x3c
    600a:	5d af       	std	Y+61, r21	; 0x3d
    600c:	6e af       	std	Y+62, r22	; 0x3e
    600e:	7f af       	std	Y+63, r23	; 0x3f
    6010:	25 97       	sbiw	r28, 0x05	; 5
    6012:	a6 96       	adiw	r28, 0x26	; 38
    6014:	9f ad       	ldd	r25, Y+63	; 0x3f
    6016:	a6 97       	sbiw	r28, 0x26	; 38
    6018:	9f 5f       	subi	r25, 0xFF	; 255
    601a:	a6 96       	adiw	r28, 0x26	; 38
    601c:	9f af       	std	Y+63, r25	; 0x3f
    601e:	a6 97       	sbiw	r28, 0x26	; 38
    6020:	a4 e0       	ldi	r26, 0x04	; 4
    6022:	2a 0e       	add	r2, r26
    6024:	31 1c       	adc	r3, r1
    6026:	a8 96       	adiw	r28, 0x28	; 40
    6028:	ee ad       	ldd	r30, Y+62	; 0x3e
    602a:	ff ad       	ldd	r31, Y+63	; 0x3f
    602c:	a8 97       	sbiw	r28, 0x28	; 40
    602e:	34 96       	adiw	r30, 0x04	; 4
    6030:	a8 96       	adiw	r28, 0x28	; 40
    6032:	ff af       	std	Y+63, r31	; 0x3f
    6034:	ee af       	std	Y+62, r30	; 0x3e
    6036:	a8 97       	sbiw	r28, 0x28	; 40
    6038:	90 34       	cpi	r25, 0x40	; 64
    603a:	09 f0       	breq	.+2      	; 0x603e <sha2_small_common_nextBlock+0x58a>
    603c:	ba cd       	rjmp	.-1164   	; 0x5bb2 <sha2_small_common_nextBlock+0xfe>
    603e:	fe 01       	movw	r30, r28
    6040:	ef 5b       	subi	r30, 0xBF	; 191
    6042:	ff 4f       	sbci	r31, 0xFF	; 255
    6044:	ac 96       	adiw	r28, 0x2c	; 44
    6046:	2e ad       	ldd	r18, Y+62	; 0x3e
    6048:	3f ad       	ldd	r19, Y+63	; 0x3f
    604a:	ac 97       	sbiw	r28, 0x2c	; 44
    604c:	af 01       	movw	r20, r30
    604e:	40 5e       	subi	r20, 0xE0	; 224
    6050:	5f 4f       	sbci	r21, 0xFF	; 255
    6052:	bf 01       	movw	r22, r30
    6054:	fb 01       	movw	r30, r22
    6056:	81 91       	ld	r24, Z+
    6058:	91 91       	ld	r25, Z+
    605a:	a1 91       	ld	r26, Z+
    605c:	b1 91       	ld	r27, Z+
    605e:	bf 01       	movw	r22, r30
    6060:	f9 01       	movw	r30, r18
    6062:	c0 80       	ld	r12, Z
    6064:	d1 80       	ldd	r13, Z+1	; 0x01
    6066:	e2 80       	ldd	r14, Z+2	; 0x02
    6068:	f3 80       	ldd	r15, Z+3	; 0x03
    606a:	8c 0d       	add	r24, r12
    606c:	9d 1d       	adc	r25, r13
    606e:	ae 1d       	adc	r26, r14
    6070:	bf 1d       	adc	r27, r15
    6072:	81 93       	st	Z+, r24
    6074:	91 93       	st	Z+, r25
    6076:	a1 93       	st	Z+, r26
    6078:	b1 93       	st	Z+, r27
    607a:	9f 01       	movw	r18, r30
    607c:	64 17       	cp	r22, r20
    607e:	75 07       	cpc	r23, r21
    6080:	49 f7       	brne	.-46     	; 0x6054 <sha2_small_common_nextBlock+0x5a0>
    6082:	ac 96       	adiw	r28, 0x2c	; 44
    6084:	ee ad       	ldd	r30, Y+62	; 0x3e
    6086:	ff ad       	ldd	r31, Y+63	; 0x3f
    6088:	ac 97       	sbiw	r28, 0x2c	; 44
    608a:	80 a1       	ldd	r24, Z+32	; 0x20
    608c:	91 a1       	ldd	r25, Z+33	; 0x21
    608e:	a2 a1       	ldd	r26, Z+34	; 0x22
    6090:	b3 a1       	ldd	r27, Z+35	; 0x23
    6092:	01 96       	adiw	r24, 0x01	; 1
    6094:	a1 1d       	adc	r26, r1
    6096:	b1 1d       	adc	r27, r1
    6098:	80 a3       	std	Z+32, r24	; 0x20
    609a:	91 a3       	std	Z+33, r25	; 0x21
    609c:	a2 a3       	std	Z+34, r26	; 0x22
    609e:	b3 a3       	std	Z+35, r27	; 0x23
    60a0:	c5 59       	subi	r28, 0x95	; 149
    60a2:	df 4f       	sbci	r29, 0xFF	; 255
    60a4:	0f b6       	in	r0, 0x3f	; 63
    60a6:	f8 94       	cli
    60a8:	de bf       	out	0x3e, r29	; 62
    60aa:	0f be       	out	0x3f, r0	; 63
    60ac:	cd bf       	out	0x3d, r28	; 61
    60ae:	df 91       	pop	r29
    60b0:	cf 91       	pop	r28
    60b2:	1f 91       	pop	r17
    60b4:	0f 91       	pop	r16
    60b6:	ff 90       	pop	r15
    60b8:	ef 90       	pop	r14
    60ba:	df 90       	pop	r13
    60bc:	cf 90       	pop	r12
    60be:	bf 90       	pop	r11
    60c0:	af 90       	pop	r10
    60c2:	9f 90       	pop	r9
    60c4:	8f 90       	pop	r8
    60c6:	7f 90       	pop	r7
    60c8:	6f 90       	pop	r6
    60ca:	5f 90       	pop	r5
    60cc:	4f 90       	pop	r4
    60ce:	3f 90       	pop	r3
    60d0:	2f 90       	pop	r2
    60d2:	08 95       	ret

000060d4 <sha2_small_common_lastBlock>:
    60d4:	8f 92       	push	r8
    60d6:	9f 92       	push	r9
    60d8:	af 92       	push	r10
    60da:	bf 92       	push	r11
    60dc:	cf 92       	push	r12
    60de:	df 92       	push	r13
    60e0:	ef 92       	push	r14
    60e2:	ff 92       	push	r15
    60e4:	0f 93       	push	r16
    60e6:	1f 93       	push	r17
    60e8:	cf 93       	push	r28
    60ea:	df 93       	push	r29
    60ec:	cd b7       	in	r28, 0x3d	; 61
    60ee:	de b7       	in	r29, 0x3e	; 62
    60f0:	c8 54       	subi	r28, 0x48	; 72
    60f2:	d1 09       	sbc	r29, r1
    60f4:	0f b6       	in	r0, 0x3f	; 63
    60f6:	f8 94       	cli
    60f8:	de bf       	out	0x3e, r29	; 62
    60fa:	0f be       	out	0x3f, r0	; 63
    60fc:	cd bf       	out	0x3d, r28	; 61
    60fe:	8c 01       	movw	r16, r24
    6100:	4b 01       	movw	r8, r22
    6102:	5a 01       	movw	r10, r20
    6104:	41 15       	cp	r20, r1
    6106:	62 e0       	ldi	r22, 0x02	; 2
    6108:	56 07       	cpc	r21, r22
    610a:	28 f1       	brcs	.+74     	; 0x6156 <sha2_small_common_lastBlock+0x82>
    610c:	6a 01       	movw	r12, r20
    610e:	74 01       	movw	r14, r8
    6110:	b7 01       	movw	r22, r14
    6112:	c8 01       	movw	r24, r16
    6114:	cf dc       	rcall	.-1634   	; 0x5ab4 <sha2_small_common_nextBlock>
    6116:	72 e0       	ldi	r23, 0x02	; 2
    6118:	d7 1a       	sub	r13, r23
    611a:	80 e4       	ldi	r24, 0x40	; 64
    611c:	e8 0e       	add	r14, r24
    611e:	f1 1c       	adc	r15, r1
    6120:	c1 14       	cp	r12, r1
    6122:	92 e0       	ldi	r25, 0x02	; 2
    6124:	d9 06       	cpc	r13, r25
    6126:	a0 f7       	brcc	.-24     	; 0x6110 <sha2_small_common_lastBlock+0x3c>
    6128:	75 01       	movw	r14, r10
    612a:	e1 e0       	ldi	r30, 0x01	; 1
    612c:	fe 22       	and	r15, r30
    612e:	f2 e0       	ldi	r31, 0x02	; 2
    6130:	bf 1a       	sub	r11, r31
    6132:	ab 2c       	mov	r10, r11
    6134:	bb 24       	eor	r11, r11
    6136:	a6 94       	lsr	r10
    6138:	6f ef       	ldi	r22, 0xFF	; 255
    613a:	a6 1a       	sub	r10, r22
    613c:	b6 0a       	sbc	r11, r22
    613e:	00 24       	eor	r0, r0
    6140:	b6 94       	lsr	r11
    6142:	a7 94       	ror	r10
    6144:	07 94       	ror	r0
    6146:	b6 94       	lsr	r11
    6148:	a7 94       	ror	r10
    614a:	07 94       	ror	r0
    614c:	ba 2c       	mov	r11, r10
    614e:	a0 2c       	mov	r10, r0
    6150:	8a 0c       	add	r8, r10
    6152:	9b 1c       	adc	r9, r11
    6154:	01 c0       	rjmp	.+2      	; 0x6158 <sha2_small_common_lastBlock+0x84>
    6156:	7a 01       	movw	r14, r20
    6158:	f8 01       	movw	r30, r16
    615a:	80 a1       	ldd	r24, Z+32	; 0x20
    615c:	91 a1       	ldd	r25, Z+33	; 0x21
    615e:	a2 a1       	ldd	r26, Z+34	; 0x22
    6160:	b3 a1       	ldd	r27, Z+35	; 0x23
    6162:	07 2e       	mov	r0, r23
    6164:	79 e0       	ldi	r23, 0x09	; 9
    6166:	88 0f       	add	r24, r24
    6168:	99 1f       	adc	r25, r25
    616a:	aa 1f       	adc	r26, r26
    616c:	bb 1f       	adc	r27, r27
    616e:	7a 95       	dec	r23
    6170:	d1 f7       	brne	.-12     	; 0x6166 <sha2_small_common_lastBlock+0x92>
    6172:	70 2d       	mov	r23, r0
    6174:	8e 0d       	add	r24, r14
    6176:	9f 1d       	adc	r25, r15
    6178:	a1 1d       	adc	r26, r1
    617a:	b1 1d       	adc	r27, r1
    617c:	9c 01       	movw	r18, r24
    617e:	ad 01       	movw	r20, r26
    6180:	22 96       	adiw	r28, 0x02	; 2
    6182:	2f af       	std	Y+63, r18	; 0x3f
    6184:	22 97       	sbiw	r28, 0x02	; 2
    6186:	23 96       	adiw	r28, 0x03	; 3
    6188:	3f af       	std	Y+63, r19	; 0x3f
    618a:	23 97       	sbiw	r28, 0x03	; 3
    618c:	24 96       	adiw	r28, 0x04	; 4
    618e:	4f af       	std	Y+63, r20	; 0x3f
    6190:	24 97       	sbiw	r28, 0x04	; 4
    6192:	25 96       	adiw	r28, 0x05	; 5
    6194:	5f af       	std	Y+63, r21	; 0x3f
    6196:	25 97       	sbiw	r28, 0x05	; 5
    6198:	26 96       	adiw	r28, 0x06	; 6
    619a:	1f ae       	std	Y+63, r1	; 0x3f
    619c:	26 97       	sbiw	r28, 0x06	; 6
    619e:	27 96       	adiw	r28, 0x07	; 7
    61a0:	1f ae       	std	Y+63, r1	; 0x3f
    61a2:	27 97       	sbiw	r28, 0x07	; 7
    61a4:	28 96       	adiw	r28, 0x08	; 8
    61a6:	1f ae       	std	Y+63, r1	; 0x3f
    61a8:	28 97       	sbiw	r28, 0x08	; 8
    61aa:	29 96       	adiw	r28, 0x09	; 9
    61ac:	1f ae       	std	Y+63, r1	; 0x3f
    61ae:	29 97       	sbiw	r28, 0x09	; 9
    61b0:	be 01       	movw	r22, r28
    61b2:	6f 5f       	subi	r22, 0xFF	; 255
    61b4:	7f 4f       	sbci	r23, 0xFF	; 255
    61b6:	6b 01       	movw	r12, r22
    61b8:	80 e4       	ldi	r24, 0x40	; 64
    61ba:	fb 01       	movw	r30, r22
    61bc:	11 92       	st	Z+, r1
    61be:	8a 95       	dec	r24
    61c0:	e9 f7       	brne	.-6      	; 0x61bc <sha2_small_common_lastBlock+0xe8>
    61c2:	a7 01       	movw	r20, r14
    61c4:	49 5f       	subi	r20, 0xF9	; 249
    61c6:	5f 4f       	sbci	r21, 0xFF	; 255
    61c8:	56 95       	lsr	r21
    61ca:	47 95       	ror	r20
    61cc:	56 95       	lsr	r21
    61ce:	47 95       	ror	r20
    61d0:	56 95       	lsr	r21
    61d2:	47 95       	ror	r20
    61d4:	b4 01       	movw	r22, r8
    61d6:	c6 01       	movw	r24, r12
    61d8:	50 d3       	rcall	.+1696   	; 0x687a <memcpy>
    61da:	f7 01       	movw	r30, r14
    61dc:	f6 95       	lsr	r31
    61de:	e7 95       	ror	r30
    61e0:	f6 95       	lsr	r31
    61e2:	e7 95       	ror	r30
    61e4:	f6 95       	lsr	r31
    61e6:	e7 95       	ror	r30
    61e8:	ec 0d       	add	r30, r12
    61ea:	fd 1d       	adc	r31, r13
    61ec:	c7 01       	movw	r24, r14
    61ee:	87 70       	andi	r24, 0x07	; 7
    61f0:	99 27       	eor	r25, r25
    61f2:	20 e8       	ldi	r18, 0x80	; 128
    61f4:	30 e0       	ldi	r19, 0x00	; 0
    61f6:	02 c0       	rjmp	.+4      	; 0x61fc <sha2_small_common_lastBlock+0x128>
    61f8:	35 95       	asr	r19
    61fa:	27 95       	ror	r18
    61fc:	8a 95       	dec	r24
    61fe:	e2 f7       	brpl	.-8      	; 0x61f8 <sha2_small_common_lastBlock+0x124>
    6200:	80 81       	ld	r24, Z
    6202:	28 2b       	or	r18, r24
    6204:	20 83       	st	Z, r18
    6206:	f0 ec       	ldi	r31, 0xC0	; 192
    6208:	ef 16       	cp	r14, r31
    620a:	f1 e0       	ldi	r31, 0x01	; 1
    620c:	ff 06       	cpc	r15, r31
    620e:	40 f0       	brcs	.+16     	; 0x6220 <sha2_small_common_lastBlock+0x14c>
    6210:	b6 01       	movw	r22, r12
    6212:	c8 01       	movw	r24, r16
    6214:	4f dc       	rcall	.-1890   	; 0x5ab4 <sha2_small_common_nextBlock>
    6216:	80 e4       	ldi	r24, 0x40	; 64
    6218:	f6 01       	movw	r30, r12
    621a:	11 92       	st	Z+, r1
    621c:	8a 95       	dec	r24
    621e:	e9 f7       	brne	.-6      	; 0x621a <sha2_small_common_lastBlock+0x146>
    6220:	27 e0       	ldi	r18, 0x07	; 7
    6222:	4f e3       	ldi	r20, 0x3F	; 63
    6224:	50 e0       	ldi	r21, 0x00	; 0
    6226:	82 2f       	mov	r24, r18
    6228:	90 e0       	ldi	r25, 0x00	; 0
    622a:	fa 01       	movw	r30, r20
    622c:	e8 1b       	sub	r30, r24
    622e:	f9 0b       	sbc	r31, r25
    6230:	61 e0       	ldi	r22, 0x01	; 1
    6232:	70 e0       	ldi	r23, 0x00	; 0
    6234:	6c 0f       	add	r22, r28
    6236:	7d 1f       	adc	r23, r29
    6238:	e6 0f       	add	r30, r22
    623a:	f7 1f       	adc	r31, r23
    623c:	a1 e4       	ldi	r26, 0x41	; 65
    623e:	b0 e0       	ldi	r27, 0x00	; 0
    6240:	ac 0f       	add	r26, r28
    6242:	bd 1f       	adc	r27, r29
    6244:	a8 0f       	add	r26, r24
    6246:	b9 1f       	adc	r27, r25
    6248:	8c 91       	ld	r24, X
    624a:	80 83       	st	Z, r24
    624c:	21 50       	subi	r18, 0x01	; 1
    624e:	58 f7       	brcc	.-42     	; 0x6226 <sha2_small_common_lastBlock+0x152>
    6250:	be 01       	movw	r22, r28
    6252:	6f 5f       	subi	r22, 0xFF	; 255
    6254:	7f 4f       	sbci	r23, 0xFF	; 255
    6256:	c8 01       	movw	r24, r16
    6258:	2d dc       	rcall	.-1958   	; 0x5ab4 <sha2_small_common_nextBlock>
    625a:	c8 5b       	subi	r28, 0xB8	; 184
    625c:	df 4f       	sbci	r29, 0xFF	; 255
    625e:	0f b6       	in	r0, 0x3f	; 63
    6260:	f8 94       	cli
    6262:	de bf       	out	0x3e, r29	; 62
    6264:	0f be       	out	0x3f, r0	; 63
    6266:	cd bf       	out	0x3d, r28	; 61
    6268:	df 91       	pop	r29
    626a:	cf 91       	pop	r28
    626c:	1f 91       	pop	r17
    626e:	0f 91       	pop	r16
    6270:	ff 90       	pop	r15
    6272:	ef 90       	pop	r14
    6274:	df 90       	pop	r13
    6276:	cf 90       	pop	r12
    6278:	bf 90       	pop	r11
    627a:	af 90       	pop	r10
    627c:	9f 90       	pop	r9
    627e:	8f 90       	pop	r8
    6280:	08 95       	ret

00006282 <sha512_init>:
    6282:	fc 01       	movw	r30, r24
    6284:	e0 5c       	subi	r30, 0xC0	; 192
    6286:	ff 4f       	sbci	r31, 0xFF	; 255
    6288:	10 82       	st	Z, r1
    628a:	11 82       	std	Z+1, r1	; 0x01
    628c:	12 82       	std	Z+2, r1	; 0x02
    628e:	13 82       	std	Z+3, r1	; 0x03
    6290:	40 e4       	ldi	r20, 0x40	; 64
    6292:	50 e0       	ldi	r21, 0x00	; 0
    6294:	64 e3       	ldi	r22, 0x34	; 52
    6296:	74 e0       	ldi	r23, 0x04	; 4
    6298:	da c2       	rjmp	.+1460   	; 0x684e <memcpy_P>
    629a:	08 95       	ret

0000629c <sha512_ctx2hash>:
    629c:	cf 93       	push	r28
    629e:	df 93       	push	r29
    62a0:	ac 01       	movw	r20, r24
    62a2:	ec 01       	movw	r28, r24
    62a4:	c0 5c       	subi	r28, 0xC0	; 192
    62a6:	df 4f       	sbci	r29, 0xFF	; 255
    62a8:	fa 01       	movw	r30, r20
    62aa:	97 e0       	ldi	r25, 0x07	; 7
    62ac:	db 01       	movw	r26, r22
    62ae:	a9 0f       	add	r26, r25
    62b0:	b1 1d       	adc	r27, r1
    62b2:	2c 91       	ld	r18, X
    62b4:	21 93       	st	Z+, r18
    62b6:	91 50       	subi	r25, 0x01	; 1
    62b8:	c8 f7       	brcc	.-14     	; 0x62ac <sha512_ctx2hash+0x10>
    62ba:	48 5f       	subi	r20, 0xF8	; 248
    62bc:	5f 4f       	sbci	r21, 0xFF	; 255
    62be:	68 5f       	subi	r22, 0xF8	; 248
    62c0:	7f 4f       	sbci	r23, 0xFF	; 255
    62c2:	4c 17       	cp	r20, r28
    62c4:	5d 07       	cpc	r21, r29
    62c6:	81 f7       	brne	.-32     	; 0x62a8 <sha512_ctx2hash+0xc>
    62c8:	df 91       	pop	r29
    62ca:	cf 91       	pop	r28
    62cc:	08 95       	ret

000062ce <sha512>:
    62ce:	4f 92       	push	r4
    62d0:	5f 92       	push	r5
    62d2:	6f 92       	push	r6
    62d4:	7f 92       	push	r7
    62d6:	8f 92       	push	r8
    62d8:	9f 92       	push	r9
    62da:	af 92       	push	r10
    62dc:	bf 92       	push	r11
    62de:	cf 92       	push	r12
    62e0:	df 92       	push	r13
    62e2:	ef 92       	push	r14
    62e4:	ff 92       	push	r15
    62e6:	0f 93       	push	r16
    62e8:	1f 93       	push	r17
    62ea:	cf 93       	push	r28
    62ec:	df 93       	push	r29
    62ee:	cd b7       	in	r28, 0x3d	; 61
    62f0:	de b7       	in	r29, 0x3e	; 62
    62f2:	c4 54       	subi	r28, 0x44	; 68
    62f4:	d1 09       	sbc	r29, r1
    62f6:	0f b6       	in	r0, 0x3f	; 63
    62f8:	f8 94       	cli
    62fa:	de bf       	out	0x3e, r29	; 62
    62fc:	0f be       	out	0x3f, r0	; 63
    62fe:	cd bf       	out	0x3d, r28	; 61
    6300:	4c 01       	movw	r8, r24
    6302:	5b 01       	movw	r10, r22
    6304:	69 01       	movw	r12, r18
    6306:	7a 01       	movw	r14, r20
    6308:	ce 01       	movw	r24, r28
    630a:	01 96       	adiw	r24, 0x01	; 1
    630c:	ba df       	rcall	.-140    	; 0x6282 <sha512_init>
    630e:	c1 14       	cp	r12, r1
    6310:	84 e0       	ldi	r24, 0x04	; 4
    6312:	d8 06       	cpc	r13, r24
    6314:	e1 04       	cpc	r14, r1
    6316:	f1 04       	cpc	r15, r1
    6318:	70 f1       	brcs	.+92     	; 0x6376 <sha512+0xa8>
    631a:	26 01       	movw	r4, r12
    631c:	37 01       	movw	r6, r14
    631e:	85 01       	movw	r16, r10
    6320:	b8 01       	movw	r22, r16
    6322:	ce 01       	movw	r24, r28
    6324:	01 96       	adiw	r24, 0x01	; 1
    6326:	0e 94 92 23 	call	0x4724	; 0x4724 <sha2_large_common_nextBlock>
    632a:	00 58       	subi	r16, 0x80	; 128
    632c:	1f 4f       	sbci	r17, 0xFF	; 255
    632e:	84 e0       	ldi	r24, 0x04	; 4
    6330:	58 1a       	sub	r5, r24
    6332:	61 08       	sbc	r6, r1
    6334:	71 08       	sbc	r7, r1
    6336:	41 14       	cp	r4, r1
    6338:	84 e0       	ldi	r24, 0x04	; 4
    633a:	58 06       	cpc	r5, r24
    633c:	61 04       	cpc	r6, r1
    633e:	71 04       	cpc	r7, r1
    6340:	78 f7       	brcc	.-34     	; 0x6320 <sha512+0x52>
    6342:	d7 01       	movw	r26, r14
    6344:	c6 01       	movw	r24, r12
    6346:	94 50       	subi	r25, 0x04	; 4
    6348:	a1 09       	sbc	r26, r1
    634a:	b1 09       	sbc	r27, r1
    634c:	07 2e       	mov	r0, r23
    634e:	7a e0       	ldi	r23, 0x0A	; 10
    6350:	b6 95       	lsr	r27
    6352:	a7 95       	ror	r26
    6354:	97 95       	ror	r25
    6356:	87 95       	ror	r24
    6358:	7a 95       	dec	r23
    635a:	d1 f7       	brne	.-12     	; 0x6350 <sha512+0x82>
    635c:	70 2d       	mov	r23, r0
    635e:	01 96       	adiw	r24, 0x01	; 1
    6360:	96 95       	lsr	r25
    6362:	98 2f       	mov	r25, r24
    6364:	88 27       	eor	r24, r24
    6366:	97 95       	ror	r25
    6368:	87 95       	ror	r24
    636a:	a8 0e       	add	r10, r24
    636c:	b9 1e       	adc	r11, r25
    636e:	83 e0       	ldi	r24, 0x03	; 3
    6370:	d8 22       	and	r13, r24
    6372:	ee 24       	eor	r14, r14
    6374:	ff 24       	eor	r15, r15
    6376:	a6 01       	movw	r20, r12
    6378:	b5 01       	movw	r22, r10
    637a:	ce 01       	movw	r24, r28
    637c:	01 96       	adiw	r24, 0x01	; 1
    637e:	39 da       	rcall	.-2958   	; 0x57f2 <sha2_large_common_lastBlock>
    6380:	be 01       	movw	r22, r28
    6382:	6f 5f       	subi	r22, 0xFF	; 255
    6384:	7f 4f       	sbci	r23, 0xFF	; 255
    6386:	c4 01       	movw	r24, r8
    6388:	89 df       	rcall	.-238    	; 0x629c <sha512_ctx2hash>
    638a:	cc 5b       	subi	r28, 0xBC	; 188
    638c:	df 4f       	sbci	r29, 0xFF	; 255
    638e:	0f b6       	in	r0, 0x3f	; 63
    6390:	f8 94       	cli
    6392:	de bf       	out	0x3e, r29	; 62
    6394:	0f be       	out	0x3f, r0	; 63
    6396:	cd bf       	out	0x3d, r28	; 61
    6398:	df 91       	pop	r29
    639a:	cf 91       	pop	r28
    639c:	1f 91       	pop	r17
    639e:	0f 91       	pop	r16
    63a0:	ff 90       	pop	r15
    63a2:	ef 90       	pop	r14
    63a4:	df 90       	pop	r13
    63a6:	cf 90       	pop	r12
    63a8:	bf 90       	pop	r11
    63aa:	af 90       	pop	r10
    63ac:	9f 90       	pop	r9
    63ae:	8f 90       	pop	r8
    63b0:	7f 90       	pop	r7
    63b2:	6f 90       	pop	r6
    63b4:	5f 90       	pop	r5
    63b6:	4f 90       	pop	r4
    63b8:	08 95       	ret

000063ba <uart_init>:
#include "uart_f.h"
#include "types.h"


void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    63ba:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    63be:	83 e3       	ldi	r24, 0x33	; 51
    63c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    63c4:	8e e0       	ldi	r24, 0x0E	; 14
    63c6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    63ca:	88 e1       	ldi	r24, 0x18	; 24
    63cc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    63d0:	08 95       	ret

000063d2 <uart_puts>:
}

void uart_puts(char* s){
    63d2:	0f 93       	push	r16
    63d4:	1f 93       	push	r17
    63d6:	cf 93       	push	r28
    63d8:	df 93       	push	r29
    63da:	1f 92       	push	r1
    63dc:	cd b7       	in	r28, 0x3d	; 61
    63de:	de b7       	in	r29, 0x3e	; 62
    63e0:	bc 01       	movw	r22, r24
	volatile uint8_t i;
	int len = strlen(s);
    63e2:	fc 01       	movw	r30, r24
    63e4:	01 90       	ld	r0, Z+
    63e6:	00 20       	and	r0, r0
    63e8:	e9 f7       	brne	.-6      	; 0x63e4 <uart_puts+0x12>
    63ea:	31 97       	sbiw	r30, 0x01	; 1
    63ec:	af 01       	movw	r20, r30
    63ee:	48 1b       	sub	r20, r24
    63f0:	59 0b       	sbc	r21, r25
	for (i = 0; i < len; i++){
    63f2:	19 82       	std	Y+1, r1	; 0x01
    63f4:	89 81       	ldd	r24, Y+1	; 0x01
    63f6:	90 e0       	ldi	r25, 0x00	; 0
    63f8:	84 17       	cp	r24, r20
    63fa:	95 07       	cpc	r25, r21
    63fc:	b4 f4       	brge	.+44     	; 0x642a <uart_puts+0x58>
		while(!( UCSR0A & 0X20));
    63fe:	e0 ec       	ldi	r30, 0xC0	; 192
    6400:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    6402:	06 ec       	ldi	r16, 0xC6	; 198
    6404:	10 e0       	ldi	r17, 0x00	; 0

void uart_puts(char* s){
	volatile uint8_t i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    6406:	90 81       	ld	r25, Z
    6408:	95 ff       	sbrs	r25, 5
    640a:	fd cf       	rjmp	.-6      	; 0x6406 <uart_puts+0x34>
		UDR0=s[i];
    640c:	89 81       	ldd	r24, Y+1	; 0x01
    640e:	db 01       	movw	r26, r22
    6410:	a8 0f       	add	r26, r24
    6412:	b1 1d       	adc	r27, r1
    6414:	9c 91       	ld	r25, X
    6416:	d8 01       	movw	r26, r16
    6418:	9c 93       	st	X, r25
}

void uart_puts(char* s){
	volatile uint8_t i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    641a:	99 81       	ldd	r25, Y+1	; 0x01
    641c:	9f 5f       	subi	r25, 0xFF	; 255
    641e:	99 83       	std	Y+1, r25	; 0x01
    6420:	29 81       	ldd	r18, Y+1	; 0x01
    6422:	30 e0       	ldi	r19, 0x00	; 0
    6424:	24 17       	cp	r18, r20
    6426:	35 07       	cpc	r19, r21
    6428:	74 f3       	brlt	.-36     	; 0x6406 <uart_puts+0x34>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    642a:	e0 ec       	ldi	r30, 0xC0	; 192
    642c:	f0 e0       	ldi	r31, 0x00	; 0
    642e:	80 81       	ld	r24, Z
    6430:	85 ff       	sbrs	r24, 5
    6432:	fd cf       	rjmp	.-6      	; 0x642e <uart_puts+0x5c>
	UDR0 = 13;
    6434:	8d e0       	ldi	r24, 0x0D	; 13
    6436:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    643a:	e0 ec       	ldi	r30, 0xC0	; 192
    643c:	f0 e0       	ldi	r31, 0x00	; 0
    643e:	80 81       	ld	r24, Z
    6440:	85 ff       	sbrs	r24, 5
    6442:	fd cf       	rjmp	.-6      	; 0x643e <uart_puts+0x6c>
	UDR0 = 10;
    6444:	8a e0       	ldi	r24, 0x0A	; 10
    6446:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    644a:	0f 90       	pop	r0
    644c:	df 91       	pop	r29
    644e:	cf 91       	pop	r28
    6450:	1f 91       	pop	r17
    6452:	0f 91       	pop	r16
    6454:	08 95       	ret

00006456 <uart_putd>:

void uart_putd(char* s, uint8_t len){
    6456:	cf 93       	push	r28
    6458:	df 93       	push	r29
	int i;
	for (i = 0; i < len; i++){
    645a:	66 23       	and	r22, r22
    645c:	81 f0       	breq	.+32     	; 0x647e <uart_putd+0x28>
    645e:	dc 01       	movw	r26, r24
    6460:	9c 01       	movw	r18, r24
    6462:	26 0f       	add	r18, r22
    6464:	31 1d       	adc	r19, r1
		while(!( UCSR0A & 0X20));
    6466:	e0 ec       	ldi	r30, 0xC0	; 192
    6468:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    646a:	c6 ec       	ldi	r28, 0xC6	; 198
    646c:	d0 e0       	ldi	r29, 0x00	; 0
}

void uart_putd(char* s, uint8_t len){
	int i;
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    646e:	90 81       	ld	r25, Z
    6470:	95 ff       	sbrs	r25, 5
    6472:	fd cf       	rjmp	.-6      	; 0x646e <uart_putd+0x18>
		UDR0=s[i];
    6474:	9d 91       	ld	r25, X+
    6476:	98 83       	st	Y, r25
	UDR0 = 10;
}

void uart_putd(char* s, uint8_t len){
	int i;
	for (i = 0; i < len; i++){
    6478:	a2 17       	cp	r26, r18
    647a:	b3 07       	cpc	r27, r19
    647c:	c1 f7       	brne	.-16     	; 0x646e <uart_putd+0x18>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    647e:	e0 ec       	ldi	r30, 0xC0	; 192
    6480:	f0 e0       	ldi	r31, 0x00	; 0
    6482:	80 81       	ld	r24, Z
    6484:	85 ff       	sbrs	r24, 5
    6486:	fd cf       	rjmp	.-6      	; 0x6482 <uart_putd+0x2c>
	UDR0 = 13;
    6488:	8d e0       	ldi	r24, 0x0D	; 13
    648a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    648e:	e0 ec       	ldi	r30, 0xC0	; 192
    6490:	f0 e0       	ldi	r31, 0x00	; 0
    6492:	80 81       	ld	r24, Z
    6494:	85 ff       	sbrs	r24, 5
    6496:	fd cf       	rjmp	.-6      	; 0x6492 <uart_putd+0x3c>
	UDR0 = 10;
    6498:	8a e0       	ldi	r24, 0x0A	; 10
    649a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    649e:	df 91       	pop	r29
    64a0:	cf 91       	pop	r28
    64a2:	08 95       	ret

000064a4 <__ashldi3>:
    64a4:	0f 93       	push	r16
    64a6:	08 30       	cpi	r16, 0x08	; 8
    64a8:	90 f0       	brcs	.+36     	; 0x64ce <__ashldi3+0x2a>
    64aa:	98 2f       	mov	r25, r24
    64ac:	87 2f       	mov	r24, r23
    64ae:	76 2f       	mov	r23, r22
    64b0:	65 2f       	mov	r22, r21
    64b2:	54 2f       	mov	r21, r20
    64b4:	43 2f       	mov	r20, r19
    64b6:	32 2f       	mov	r19, r18
    64b8:	22 27       	eor	r18, r18
    64ba:	08 50       	subi	r16, 0x08	; 8
    64bc:	f4 cf       	rjmp	.-24     	; 0x64a6 <__ashldi3+0x2>
    64be:	22 0f       	add	r18, r18
    64c0:	33 1f       	adc	r19, r19
    64c2:	44 1f       	adc	r20, r20
    64c4:	55 1f       	adc	r21, r21
    64c6:	66 1f       	adc	r22, r22
    64c8:	77 1f       	adc	r23, r23
    64ca:	88 1f       	adc	r24, r24
    64cc:	99 1f       	adc	r25, r25
    64ce:	0a 95       	dec	r16
    64d0:	b2 f7       	brpl	.-20     	; 0x64be <__ashldi3+0x1a>
    64d2:	0f 91       	pop	r16
    64d4:	08 95       	ret

000064d6 <__ashrdi3>:
    64d6:	97 fb       	bst	r25, 7
    64d8:	10 f8       	bld	r1, 0

000064da <__lshrdi3>:
    64da:	16 94       	lsr	r1
    64dc:	00 08       	sbc	r0, r0
    64de:	0f 93       	push	r16
    64e0:	08 30       	cpi	r16, 0x08	; 8
    64e2:	98 f0       	brcs	.+38     	; 0x650a <__lshrdi3+0x30>
    64e4:	08 50       	subi	r16, 0x08	; 8
    64e6:	23 2f       	mov	r18, r19
    64e8:	34 2f       	mov	r19, r20
    64ea:	45 2f       	mov	r20, r21
    64ec:	56 2f       	mov	r21, r22
    64ee:	67 2f       	mov	r22, r23
    64f0:	78 2f       	mov	r23, r24
    64f2:	89 2f       	mov	r24, r25
    64f4:	90 2d       	mov	r25, r0
    64f6:	f4 cf       	rjmp	.-24     	; 0x64e0 <__lshrdi3+0x6>
    64f8:	05 94       	asr	r0
    64fa:	97 95       	ror	r25
    64fc:	87 95       	ror	r24
    64fe:	77 95       	ror	r23
    6500:	67 95       	ror	r22
    6502:	57 95       	ror	r21
    6504:	47 95       	ror	r20
    6506:	37 95       	ror	r19
    6508:	27 95       	ror	r18
    650a:	0a 95       	dec	r16
    650c:	aa f7       	brpl	.-22     	; 0x64f8 <__lshrdi3+0x1e>
    650e:	0f 91       	pop	r16
    6510:	08 95       	ret

00006512 <__rotldi3>:
    6512:	0f 93       	push	r16
    6514:	08 30       	cpi	r16, 0x08	; 8
    6516:	a0 f0       	brcs	.+40     	; 0x6540 <__rotldi3+0x2e>
    6518:	08 50       	subi	r16, 0x08	; 8
    651a:	09 2e       	mov	r0, r25
    651c:	98 2f       	mov	r25, r24
    651e:	87 2f       	mov	r24, r23
    6520:	76 2f       	mov	r23, r22
    6522:	65 2f       	mov	r22, r21
    6524:	54 2f       	mov	r21, r20
    6526:	43 2f       	mov	r20, r19
    6528:	32 2f       	mov	r19, r18
    652a:	20 2d       	mov	r18, r0
    652c:	f3 cf       	rjmp	.-26     	; 0x6514 <__rotldi3+0x2>
    652e:	22 0f       	add	r18, r18
    6530:	33 1f       	adc	r19, r19
    6532:	44 1f       	adc	r20, r20
    6534:	55 1f       	adc	r21, r21
    6536:	66 1f       	adc	r22, r22
    6538:	77 1f       	adc	r23, r23
    653a:	88 1f       	adc	r24, r24
    653c:	99 1f       	adc	r25, r25
    653e:	21 1d       	adc	r18, r1
    6540:	0a 95       	dec	r16
    6542:	aa f7       	brpl	.-22     	; 0x652e <__rotldi3+0x1c>
    6544:	0f 91       	pop	r16
    6546:	08 95       	ret

00006548 <__adddi3>:
    6548:	2a 0d       	add	r18, r10
    654a:	3b 1d       	adc	r19, r11
    654c:	4c 1d       	adc	r20, r12
    654e:	5d 1d       	adc	r21, r13
    6550:	6e 1d       	adc	r22, r14
    6552:	7f 1d       	adc	r23, r15
    6554:	80 1f       	adc	r24, r16
    6556:	91 1f       	adc	r25, r17
    6558:	08 95       	ret

0000655a <malloc>:
    655a:	0f 93       	push	r16
    655c:	1f 93       	push	r17
    655e:	cf 93       	push	r28
    6560:	df 93       	push	r29
    6562:	82 30       	cpi	r24, 0x02	; 2
    6564:	91 05       	cpc	r25, r1
    6566:	10 f4       	brcc	.+4      	; 0x656c <malloc+0x12>
    6568:	82 e0       	ldi	r24, 0x02	; 2
    656a:	90 e0       	ldi	r25, 0x00	; 0
    656c:	e0 91 99 07 	lds	r30, 0x0799	; 0x800799 <__flp>
    6570:	f0 91 9a 07 	lds	r31, 0x079A	; 0x80079a <__flp+0x1>
    6574:	20 e0       	ldi	r18, 0x00	; 0
    6576:	30 e0       	ldi	r19, 0x00	; 0
    6578:	a0 e0       	ldi	r26, 0x00	; 0
    657a:	b0 e0       	ldi	r27, 0x00	; 0
    657c:	30 97       	sbiw	r30, 0x00	; 0
    657e:	19 f1       	breq	.+70     	; 0x65c6 <malloc+0x6c>
    6580:	40 81       	ld	r20, Z
    6582:	51 81       	ldd	r21, Z+1	; 0x01
    6584:	02 81       	ldd	r16, Z+2	; 0x02
    6586:	13 81       	ldd	r17, Z+3	; 0x03
    6588:	48 17       	cp	r20, r24
    658a:	59 07       	cpc	r21, r25
    658c:	c8 f0       	brcs	.+50     	; 0x65c0 <malloc+0x66>
    658e:	84 17       	cp	r24, r20
    6590:	95 07       	cpc	r25, r21
    6592:	69 f4       	brne	.+26     	; 0x65ae <malloc+0x54>
    6594:	10 97       	sbiw	r26, 0x00	; 0
    6596:	31 f0       	breq	.+12     	; 0x65a4 <malloc+0x4a>
    6598:	12 96       	adiw	r26, 0x02	; 2
    659a:	0c 93       	st	X, r16
    659c:	12 97       	sbiw	r26, 0x02	; 2
    659e:	13 96       	adiw	r26, 0x03	; 3
    65a0:	1c 93       	st	X, r17
    65a2:	27 c0       	rjmp	.+78     	; 0x65f2 <malloc+0x98>
    65a4:	00 93 99 07 	sts	0x0799, r16	; 0x800799 <__flp>
    65a8:	10 93 9a 07 	sts	0x079A, r17	; 0x80079a <__flp+0x1>
    65ac:	22 c0       	rjmp	.+68     	; 0x65f2 <malloc+0x98>
    65ae:	21 15       	cp	r18, r1
    65b0:	31 05       	cpc	r19, r1
    65b2:	19 f0       	breq	.+6      	; 0x65ba <malloc+0x60>
    65b4:	42 17       	cp	r20, r18
    65b6:	53 07       	cpc	r21, r19
    65b8:	18 f4       	brcc	.+6      	; 0x65c0 <malloc+0x66>
    65ba:	9a 01       	movw	r18, r20
    65bc:	bd 01       	movw	r22, r26
    65be:	ef 01       	movw	r28, r30
    65c0:	df 01       	movw	r26, r30
    65c2:	f8 01       	movw	r30, r16
    65c4:	db cf       	rjmp	.-74     	; 0x657c <malloc+0x22>
    65c6:	21 15       	cp	r18, r1
    65c8:	31 05       	cpc	r19, r1
    65ca:	f9 f0       	breq	.+62     	; 0x660a <malloc+0xb0>
    65cc:	28 1b       	sub	r18, r24
    65ce:	39 0b       	sbc	r19, r25
    65d0:	24 30       	cpi	r18, 0x04	; 4
    65d2:	31 05       	cpc	r19, r1
    65d4:	80 f4       	brcc	.+32     	; 0x65f6 <malloc+0x9c>
    65d6:	8a 81       	ldd	r24, Y+2	; 0x02
    65d8:	9b 81       	ldd	r25, Y+3	; 0x03
    65da:	61 15       	cp	r22, r1
    65dc:	71 05       	cpc	r23, r1
    65de:	21 f0       	breq	.+8      	; 0x65e8 <malloc+0x8e>
    65e0:	fb 01       	movw	r30, r22
    65e2:	93 83       	std	Z+3, r25	; 0x03
    65e4:	82 83       	std	Z+2, r24	; 0x02
    65e6:	04 c0       	rjmp	.+8      	; 0x65f0 <malloc+0x96>
    65e8:	90 93 9a 07 	sts	0x079A, r25	; 0x80079a <__flp+0x1>
    65ec:	80 93 99 07 	sts	0x0799, r24	; 0x800799 <__flp>
    65f0:	fe 01       	movw	r30, r28
    65f2:	32 96       	adiw	r30, 0x02	; 2
    65f4:	44 c0       	rjmp	.+136    	; 0x667e <malloc+0x124>
    65f6:	fe 01       	movw	r30, r28
    65f8:	e2 0f       	add	r30, r18
    65fa:	f3 1f       	adc	r31, r19
    65fc:	81 93       	st	Z+, r24
    65fe:	91 93       	st	Z+, r25
    6600:	22 50       	subi	r18, 0x02	; 2
    6602:	31 09       	sbc	r19, r1
    6604:	39 83       	std	Y+1, r19	; 0x01
    6606:	28 83       	st	Y, r18
    6608:	3a c0       	rjmp	.+116    	; 0x667e <malloc+0x124>
    660a:	20 91 97 07 	lds	r18, 0x0797	; 0x800797 <__brkval>
    660e:	30 91 98 07 	lds	r19, 0x0798	; 0x800798 <__brkval+0x1>
    6612:	23 2b       	or	r18, r19
    6614:	41 f4       	brne	.+16     	; 0x6626 <malloc+0xcc>
    6616:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    661a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    661e:	30 93 98 07 	sts	0x0798, r19	; 0x800798 <__brkval+0x1>
    6622:	20 93 97 07 	sts	0x0797, r18	; 0x800797 <__brkval>
    6626:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    662a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    662e:	21 15       	cp	r18, r1
    6630:	31 05       	cpc	r19, r1
    6632:	41 f4       	brne	.+16     	; 0x6644 <malloc+0xea>
    6634:	2d b7       	in	r18, 0x3d	; 61
    6636:	3e b7       	in	r19, 0x3e	; 62
    6638:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    663c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    6640:	24 1b       	sub	r18, r20
    6642:	35 0b       	sbc	r19, r21
    6644:	e0 91 97 07 	lds	r30, 0x0797	; 0x800797 <__brkval>
    6648:	f0 91 98 07 	lds	r31, 0x0798	; 0x800798 <__brkval+0x1>
    664c:	e2 17       	cp	r30, r18
    664e:	f3 07       	cpc	r31, r19
    6650:	a0 f4       	brcc	.+40     	; 0x667a <malloc+0x120>
    6652:	2e 1b       	sub	r18, r30
    6654:	3f 0b       	sbc	r19, r31
    6656:	28 17       	cp	r18, r24
    6658:	39 07       	cpc	r19, r25
    665a:	78 f0       	brcs	.+30     	; 0x667a <malloc+0x120>
    665c:	ac 01       	movw	r20, r24
    665e:	4e 5f       	subi	r20, 0xFE	; 254
    6660:	5f 4f       	sbci	r21, 0xFF	; 255
    6662:	24 17       	cp	r18, r20
    6664:	35 07       	cpc	r19, r21
    6666:	48 f0       	brcs	.+18     	; 0x667a <malloc+0x120>
    6668:	4e 0f       	add	r20, r30
    666a:	5f 1f       	adc	r21, r31
    666c:	50 93 98 07 	sts	0x0798, r21	; 0x800798 <__brkval+0x1>
    6670:	40 93 97 07 	sts	0x0797, r20	; 0x800797 <__brkval>
    6674:	81 93       	st	Z+, r24
    6676:	91 93       	st	Z+, r25
    6678:	02 c0       	rjmp	.+4      	; 0x667e <malloc+0x124>
    667a:	e0 e0       	ldi	r30, 0x00	; 0
    667c:	f0 e0       	ldi	r31, 0x00	; 0
    667e:	cf 01       	movw	r24, r30
    6680:	df 91       	pop	r29
    6682:	cf 91       	pop	r28
    6684:	1f 91       	pop	r17
    6686:	0f 91       	pop	r16
    6688:	08 95       	ret

0000668a <free>:
    668a:	cf 93       	push	r28
    668c:	df 93       	push	r29
    668e:	00 97       	sbiw	r24, 0x00	; 0
    6690:	09 f4       	brne	.+2      	; 0x6694 <free+0xa>
    6692:	81 c0       	rjmp	.+258    	; 0x6796 <free+0x10c>
    6694:	fc 01       	movw	r30, r24
    6696:	32 97       	sbiw	r30, 0x02	; 2
    6698:	13 82       	std	Z+3, r1	; 0x03
    669a:	12 82       	std	Z+2, r1	; 0x02
    669c:	a0 91 99 07 	lds	r26, 0x0799	; 0x800799 <__flp>
    66a0:	b0 91 9a 07 	lds	r27, 0x079A	; 0x80079a <__flp+0x1>
    66a4:	10 97       	sbiw	r26, 0x00	; 0
    66a6:	81 f4       	brne	.+32     	; 0x66c8 <free+0x3e>
    66a8:	20 81       	ld	r18, Z
    66aa:	31 81       	ldd	r19, Z+1	; 0x01
    66ac:	82 0f       	add	r24, r18
    66ae:	93 1f       	adc	r25, r19
    66b0:	20 91 97 07 	lds	r18, 0x0797	; 0x800797 <__brkval>
    66b4:	30 91 98 07 	lds	r19, 0x0798	; 0x800798 <__brkval+0x1>
    66b8:	28 17       	cp	r18, r24
    66ba:	39 07       	cpc	r19, r25
    66bc:	51 f5       	brne	.+84     	; 0x6712 <free+0x88>
    66be:	f0 93 98 07 	sts	0x0798, r31	; 0x800798 <__brkval+0x1>
    66c2:	e0 93 97 07 	sts	0x0797, r30	; 0x800797 <__brkval>
    66c6:	67 c0       	rjmp	.+206    	; 0x6796 <free+0x10c>
    66c8:	ed 01       	movw	r28, r26
    66ca:	20 e0       	ldi	r18, 0x00	; 0
    66cc:	30 e0       	ldi	r19, 0x00	; 0
    66ce:	ce 17       	cp	r28, r30
    66d0:	df 07       	cpc	r29, r31
    66d2:	40 f4       	brcc	.+16     	; 0x66e4 <free+0x5a>
    66d4:	4a 81       	ldd	r20, Y+2	; 0x02
    66d6:	5b 81       	ldd	r21, Y+3	; 0x03
    66d8:	9e 01       	movw	r18, r28
    66da:	41 15       	cp	r20, r1
    66dc:	51 05       	cpc	r21, r1
    66de:	f1 f0       	breq	.+60     	; 0x671c <free+0x92>
    66e0:	ea 01       	movw	r28, r20
    66e2:	f5 cf       	rjmp	.-22     	; 0x66ce <free+0x44>
    66e4:	d3 83       	std	Z+3, r29	; 0x03
    66e6:	c2 83       	std	Z+2, r28	; 0x02
    66e8:	40 81       	ld	r20, Z
    66ea:	51 81       	ldd	r21, Z+1	; 0x01
    66ec:	84 0f       	add	r24, r20
    66ee:	95 1f       	adc	r25, r21
    66f0:	c8 17       	cp	r28, r24
    66f2:	d9 07       	cpc	r29, r25
    66f4:	59 f4       	brne	.+22     	; 0x670c <free+0x82>
    66f6:	88 81       	ld	r24, Y
    66f8:	99 81       	ldd	r25, Y+1	; 0x01
    66fa:	84 0f       	add	r24, r20
    66fc:	95 1f       	adc	r25, r21
    66fe:	02 96       	adiw	r24, 0x02	; 2
    6700:	91 83       	std	Z+1, r25	; 0x01
    6702:	80 83       	st	Z, r24
    6704:	8a 81       	ldd	r24, Y+2	; 0x02
    6706:	9b 81       	ldd	r25, Y+3	; 0x03
    6708:	93 83       	std	Z+3, r25	; 0x03
    670a:	82 83       	std	Z+2, r24	; 0x02
    670c:	21 15       	cp	r18, r1
    670e:	31 05       	cpc	r19, r1
    6710:	29 f4       	brne	.+10     	; 0x671c <free+0x92>
    6712:	f0 93 9a 07 	sts	0x079A, r31	; 0x80079a <__flp+0x1>
    6716:	e0 93 99 07 	sts	0x0799, r30	; 0x800799 <__flp>
    671a:	3d c0       	rjmp	.+122    	; 0x6796 <free+0x10c>
    671c:	e9 01       	movw	r28, r18
    671e:	fb 83       	std	Y+3, r31	; 0x03
    6720:	ea 83       	std	Y+2, r30	; 0x02
    6722:	49 91       	ld	r20, Y+
    6724:	59 91       	ld	r21, Y+
    6726:	c4 0f       	add	r28, r20
    6728:	d5 1f       	adc	r29, r21
    672a:	ec 17       	cp	r30, r28
    672c:	fd 07       	cpc	r31, r29
    672e:	61 f4       	brne	.+24     	; 0x6748 <free+0xbe>
    6730:	80 81       	ld	r24, Z
    6732:	91 81       	ldd	r25, Z+1	; 0x01
    6734:	84 0f       	add	r24, r20
    6736:	95 1f       	adc	r25, r21
    6738:	02 96       	adiw	r24, 0x02	; 2
    673a:	e9 01       	movw	r28, r18
    673c:	99 83       	std	Y+1, r25	; 0x01
    673e:	88 83       	st	Y, r24
    6740:	82 81       	ldd	r24, Z+2	; 0x02
    6742:	93 81       	ldd	r25, Z+3	; 0x03
    6744:	9b 83       	std	Y+3, r25	; 0x03
    6746:	8a 83       	std	Y+2, r24	; 0x02
    6748:	e0 e0       	ldi	r30, 0x00	; 0
    674a:	f0 e0       	ldi	r31, 0x00	; 0
    674c:	12 96       	adiw	r26, 0x02	; 2
    674e:	8d 91       	ld	r24, X+
    6750:	9c 91       	ld	r25, X
    6752:	13 97       	sbiw	r26, 0x03	; 3
    6754:	00 97       	sbiw	r24, 0x00	; 0
    6756:	19 f0       	breq	.+6      	; 0x675e <free+0xd4>
    6758:	fd 01       	movw	r30, r26
    675a:	dc 01       	movw	r26, r24
    675c:	f7 cf       	rjmp	.-18     	; 0x674c <free+0xc2>
    675e:	8d 91       	ld	r24, X+
    6760:	9c 91       	ld	r25, X
    6762:	11 97       	sbiw	r26, 0x01	; 1
    6764:	9d 01       	movw	r18, r26
    6766:	2e 5f       	subi	r18, 0xFE	; 254
    6768:	3f 4f       	sbci	r19, 0xFF	; 255
    676a:	82 0f       	add	r24, r18
    676c:	93 1f       	adc	r25, r19
    676e:	20 91 97 07 	lds	r18, 0x0797	; 0x800797 <__brkval>
    6772:	30 91 98 07 	lds	r19, 0x0798	; 0x800798 <__brkval+0x1>
    6776:	28 17       	cp	r18, r24
    6778:	39 07       	cpc	r19, r25
    677a:	69 f4       	brne	.+26     	; 0x6796 <free+0x10c>
    677c:	30 97       	sbiw	r30, 0x00	; 0
    677e:	29 f4       	brne	.+10     	; 0x678a <free+0x100>
    6780:	10 92 9a 07 	sts	0x079A, r1	; 0x80079a <__flp+0x1>
    6784:	10 92 99 07 	sts	0x0799, r1	; 0x800799 <__flp>
    6788:	02 c0       	rjmp	.+4      	; 0x678e <free+0x104>
    678a:	13 82       	std	Z+3, r1	; 0x03
    678c:	12 82       	std	Z+2, r1	; 0x02
    678e:	b0 93 98 07 	sts	0x0798, r27	; 0x800798 <__brkval+0x1>
    6792:	a0 93 97 07 	sts	0x0797, r26	; 0x800797 <__brkval>
    6796:	df 91       	pop	r29
    6798:	cf 91       	pop	r28
    679a:	08 95       	ret

0000679c <do_rand>:
    679c:	8f 92       	push	r8
    679e:	9f 92       	push	r9
    67a0:	af 92       	push	r10
    67a2:	bf 92       	push	r11
    67a4:	cf 92       	push	r12
    67a6:	df 92       	push	r13
    67a8:	ef 92       	push	r14
    67aa:	ff 92       	push	r15
    67ac:	cf 93       	push	r28
    67ae:	df 93       	push	r29
    67b0:	ec 01       	movw	r28, r24
    67b2:	68 81       	ld	r22, Y
    67b4:	79 81       	ldd	r23, Y+1	; 0x01
    67b6:	8a 81       	ldd	r24, Y+2	; 0x02
    67b8:	9b 81       	ldd	r25, Y+3	; 0x03
    67ba:	61 15       	cp	r22, r1
    67bc:	71 05       	cpc	r23, r1
    67be:	81 05       	cpc	r24, r1
    67c0:	91 05       	cpc	r25, r1
    67c2:	21 f4       	brne	.+8      	; 0x67cc <do_rand+0x30>
    67c4:	64 e2       	ldi	r22, 0x24	; 36
    67c6:	79 ed       	ldi	r23, 0xD9	; 217
    67c8:	8b e5       	ldi	r24, 0x5B	; 91
    67ca:	97 e0       	ldi	r25, 0x07	; 7
    67cc:	2d e1       	ldi	r18, 0x1D	; 29
    67ce:	33 ef       	ldi	r19, 0xF3	; 243
    67d0:	41 e0       	ldi	r20, 0x01	; 1
    67d2:	50 e0       	ldi	r21, 0x00	; 0
    67d4:	73 d0       	rcall	.+230    	; 0x68bc <__divmodsi4>
    67d6:	49 01       	movw	r8, r18
    67d8:	5a 01       	movw	r10, r20
    67da:	9b 01       	movw	r18, r22
    67dc:	ac 01       	movw	r20, r24
    67de:	a7 ea       	ldi	r26, 0xA7	; 167
    67e0:	b1 e4       	ldi	r27, 0x41	; 65
    67e2:	88 d0       	rcall	.+272    	; 0x68f4 <__muluhisi3>
    67e4:	6b 01       	movw	r12, r22
    67e6:	7c 01       	movw	r14, r24
    67e8:	ac ee       	ldi	r26, 0xEC	; 236
    67ea:	b4 ef       	ldi	r27, 0xF4	; 244
    67ec:	a5 01       	movw	r20, r10
    67ee:	94 01       	movw	r18, r8
    67f0:	8d d0       	rcall	.+282    	; 0x690c <__mulohisi3>
    67f2:	dc 01       	movw	r26, r24
    67f4:	cb 01       	movw	r24, r22
    67f6:	8c 0d       	add	r24, r12
    67f8:	9d 1d       	adc	r25, r13
    67fa:	ae 1d       	adc	r26, r14
    67fc:	bf 1d       	adc	r27, r15
    67fe:	b7 ff       	sbrs	r27, 7
    6800:	03 c0       	rjmp	.+6      	; 0x6808 <do_rand+0x6c>
    6802:	01 97       	sbiw	r24, 0x01	; 1
    6804:	a1 09       	sbc	r26, r1
    6806:	b0 48       	sbci	r27, 0x80	; 128
    6808:	88 83       	st	Y, r24
    680a:	99 83       	std	Y+1, r25	; 0x01
    680c:	aa 83       	std	Y+2, r26	; 0x02
    680e:	bb 83       	std	Y+3, r27	; 0x03
    6810:	9f 77       	andi	r25, 0x7F	; 127
    6812:	df 91       	pop	r29
    6814:	cf 91       	pop	r28
    6816:	ff 90       	pop	r15
    6818:	ef 90       	pop	r14
    681a:	df 90       	pop	r13
    681c:	cf 90       	pop	r12
    681e:	bf 90       	pop	r11
    6820:	af 90       	pop	r10
    6822:	9f 90       	pop	r9
    6824:	8f 90       	pop	r8
    6826:	08 95       	ret

00006828 <rand_r>:
    6828:	b9 cf       	rjmp	.-142    	; 0x679c <do_rand>

0000682a <rand>:
    682a:	86 e0       	ldi	r24, 0x06	; 6
    682c:	91 e0       	ldi	r25, 0x01	; 1
    682e:	b6 cf       	rjmp	.-148    	; 0x679c <do_rand>

00006830 <srand>:
    6830:	a0 e0       	ldi	r26, 0x00	; 0
    6832:	b0 e0       	ldi	r27, 0x00	; 0
    6834:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    6838:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    683c:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    6840:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    6844:	08 95       	ret

00006846 <abort>:
    6846:	81 e0       	ldi	r24, 0x01	; 1
    6848:	90 e0       	ldi	r25, 0x00	; 0
    684a:	f8 94       	cli
    684c:	94 c0       	rjmp	.+296    	; 0x6976 <_exit>

0000684e <memcpy_P>:
    684e:	fb 01       	movw	r30, r22
    6850:	dc 01       	movw	r26, r24
    6852:	02 c0       	rjmp	.+4      	; 0x6858 <memcpy_P+0xa>
    6854:	05 90       	lpm	r0, Z+
    6856:	0d 92       	st	X+, r0
    6858:	41 50       	subi	r20, 0x01	; 1
    685a:	50 40       	sbci	r21, 0x00	; 0
    685c:	d8 f7       	brcc	.-10     	; 0x6854 <memcpy_P+0x6>
    685e:	08 95       	ret

00006860 <memcmp>:
    6860:	fb 01       	movw	r30, r22
    6862:	dc 01       	movw	r26, r24
    6864:	04 c0       	rjmp	.+8      	; 0x686e <memcmp+0xe>
    6866:	8d 91       	ld	r24, X+
    6868:	01 90       	ld	r0, Z+
    686a:	80 19       	sub	r24, r0
    686c:	21 f4       	brne	.+8      	; 0x6876 <memcmp+0x16>
    686e:	41 50       	subi	r20, 0x01	; 1
    6870:	50 40       	sbci	r21, 0x00	; 0
    6872:	c8 f7       	brcc	.-14     	; 0x6866 <memcmp+0x6>
    6874:	88 1b       	sub	r24, r24
    6876:	99 0b       	sbc	r25, r25
    6878:	08 95       	ret

0000687a <memcpy>:
    687a:	fb 01       	movw	r30, r22
    687c:	dc 01       	movw	r26, r24
    687e:	02 c0       	rjmp	.+4      	; 0x6884 <memcpy+0xa>
    6880:	01 90       	ld	r0, Z+
    6882:	0d 92       	st	X+, r0
    6884:	41 50       	subi	r20, 0x01	; 1
    6886:	50 40       	sbci	r21, 0x00	; 0
    6888:	d8 f7       	brcc	.-10     	; 0x6880 <memcpy+0x6>
    688a:	08 95       	ret

0000688c <memmove>:
    688c:	68 17       	cp	r22, r24
    688e:	79 07       	cpc	r23, r25
    6890:	68 f4       	brcc	.+26     	; 0x68ac <memmove+0x20>
    6892:	fb 01       	movw	r30, r22
    6894:	dc 01       	movw	r26, r24
    6896:	e4 0f       	add	r30, r20
    6898:	f5 1f       	adc	r31, r21
    689a:	a4 0f       	add	r26, r20
    689c:	b5 1f       	adc	r27, r21
    689e:	02 c0       	rjmp	.+4      	; 0x68a4 <memmove+0x18>
    68a0:	02 90       	ld	r0, -Z
    68a2:	0e 92       	st	-X, r0
    68a4:	41 50       	subi	r20, 0x01	; 1
    68a6:	50 40       	sbci	r21, 0x00	; 0
    68a8:	d8 f7       	brcc	.-10     	; 0x68a0 <memmove+0x14>
    68aa:	08 95       	ret
    68ac:	e6 cf       	rjmp	.-52     	; 0x687a <memcpy>

000068ae <memset>:
    68ae:	dc 01       	movw	r26, r24
    68b0:	01 c0       	rjmp	.+2      	; 0x68b4 <memset+0x6>
    68b2:	6d 93       	st	X+, r22
    68b4:	41 50       	subi	r20, 0x01	; 1
    68b6:	50 40       	sbci	r21, 0x00	; 0
    68b8:	e0 f7       	brcc	.-8      	; 0x68b2 <memset+0x4>
    68ba:	08 95       	ret

000068bc <__divmodsi4>:
    68bc:	05 2e       	mov	r0, r21
    68be:	97 fb       	bst	r25, 7
    68c0:	16 f4       	brtc	.+4      	; 0x68c6 <__divmodsi4+0xa>
    68c2:	00 94       	com	r0
    68c4:	0f d0       	rcall	.+30     	; 0x68e4 <__negsi2>
    68c6:	57 fd       	sbrc	r21, 7
    68c8:	05 d0       	rcall	.+10     	; 0x68d4 <__divmodsi4_neg2>
    68ca:	24 d0       	rcall	.+72     	; 0x6914 <__udivmodsi4>
    68cc:	07 fc       	sbrc	r0, 7
    68ce:	02 d0       	rcall	.+4      	; 0x68d4 <__divmodsi4_neg2>
    68d0:	46 f4       	brtc	.+16     	; 0x68e2 <__divmodsi4_exit>
    68d2:	08 c0       	rjmp	.+16     	; 0x68e4 <__negsi2>

000068d4 <__divmodsi4_neg2>:
    68d4:	50 95       	com	r21
    68d6:	40 95       	com	r20
    68d8:	30 95       	com	r19
    68da:	21 95       	neg	r18
    68dc:	3f 4f       	sbci	r19, 0xFF	; 255
    68de:	4f 4f       	sbci	r20, 0xFF	; 255
    68e0:	5f 4f       	sbci	r21, 0xFF	; 255

000068e2 <__divmodsi4_exit>:
    68e2:	08 95       	ret

000068e4 <__negsi2>:
    68e4:	90 95       	com	r25
    68e6:	80 95       	com	r24
    68e8:	70 95       	com	r23
    68ea:	61 95       	neg	r22
    68ec:	7f 4f       	sbci	r23, 0xFF	; 255
    68ee:	8f 4f       	sbci	r24, 0xFF	; 255
    68f0:	9f 4f       	sbci	r25, 0xFF	; 255
    68f2:	08 95       	ret

000068f4 <__muluhisi3>:
    68f4:	31 d0       	rcall	.+98     	; 0x6958 <__umulhisi3>
    68f6:	a5 9f       	mul	r26, r21
    68f8:	90 0d       	add	r25, r0
    68fa:	b4 9f       	mul	r27, r20
    68fc:	90 0d       	add	r25, r0
    68fe:	a4 9f       	mul	r26, r20
    6900:	80 0d       	add	r24, r0
    6902:	91 1d       	adc	r25, r1
    6904:	11 24       	eor	r1, r1
    6906:	08 95       	ret

00006908 <__mulshisi3>:
    6908:	b7 ff       	sbrs	r27, 7
    690a:	f4 cf       	rjmp	.-24     	; 0x68f4 <__muluhisi3>

0000690c <__mulohisi3>:
    690c:	f3 df       	rcall	.-26     	; 0x68f4 <__muluhisi3>
    690e:	82 1b       	sub	r24, r18
    6910:	93 0b       	sbc	r25, r19
    6912:	08 95       	ret

00006914 <__udivmodsi4>:
    6914:	a1 e2       	ldi	r26, 0x21	; 33
    6916:	1a 2e       	mov	r1, r26
    6918:	aa 1b       	sub	r26, r26
    691a:	bb 1b       	sub	r27, r27
    691c:	fd 01       	movw	r30, r26
    691e:	0d c0       	rjmp	.+26     	; 0x693a <__udivmodsi4_ep>

00006920 <__udivmodsi4_loop>:
    6920:	aa 1f       	adc	r26, r26
    6922:	bb 1f       	adc	r27, r27
    6924:	ee 1f       	adc	r30, r30
    6926:	ff 1f       	adc	r31, r31
    6928:	a2 17       	cp	r26, r18
    692a:	b3 07       	cpc	r27, r19
    692c:	e4 07       	cpc	r30, r20
    692e:	f5 07       	cpc	r31, r21
    6930:	20 f0       	brcs	.+8      	; 0x693a <__udivmodsi4_ep>
    6932:	a2 1b       	sub	r26, r18
    6934:	b3 0b       	sbc	r27, r19
    6936:	e4 0b       	sbc	r30, r20
    6938:	f5 0b       	sbc	r31, r21

0000693a <__udivmodsi4_ep>:
    693a:	66 1f       	adc	r22, r22
    693c:	77 1f       	adc	r23, r23
    693e:	88 1f       	adc	r24, r24
    6940:	99 1f       	adc	r25, r25
    6942:	1a 94       	dec	r1
    6944:	69 f7       	brne	.-38     	; 0x6920 <__udivmodsi4_loop>
    6946:	60 95       	com	r22
    6948:	70 95       	com	r23
    694a:	80 95       	com	r24
    694c:	90 95       	com	r25
    694e:	9b 01       	movw	r18, r22
    6950:	ac 01       	movw	r20, r24
    6952:	bd 01       	movw	r22, r26
    6954:	cf 01       	movw	r24, r30
    6956:	08 95       	ret

00006958 <__umulhisi3>:
    6958:	a2 9f       	mul	r26, r18
    695a:	b0 01       	movw	r22, r0
    695c:	b3 9f       	mul	r27, r19
    695e:	c0 01       	movw	r24, r0
    6960:	a3 9f       	mul	r26, r19
    6962:	70 0d       	add	r23, r0
    6964:	81 1d       	adc	r24, r1
    6966:	11 24       	eor	r1, r1
    6968:	91 1d       	adc	r25, r1
    696a:	b2 9f       	mul	r27, r18
    696c:	70 0d       	add	r23, r0
    696e:	81 1d       	adc	r24, r1
    6970:	11 24       	eor	r1, r1
    6972:	91 1d       	adc	r25, r1
    6974:	08 95       	ret

00006976 <_exit>:
    6976:	f8 94       	cli

00006978 <__stop_program>:
    6978:	ff cf       	rjmp	.-2      	; 0x6978 <__stop_program>
