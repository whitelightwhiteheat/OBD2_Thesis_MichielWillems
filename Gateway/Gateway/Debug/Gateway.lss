
Gateway.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000055c  00800100  00006818  000068ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006818  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013d  0080065c  0080065c  00006e08  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00006e08  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006e38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005d0  00000000  00000000  00006e78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000d226  00000000  00000000  00007448  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000024a4  00000000  00000000  0001466e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003e6d  00000000  00000000  00016b12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001b84  00000000  00000000  0001a980  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001b98  00000000  00000000  0001c504  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00009f7e  00000000  00000000  0001e09c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000618  00000000  00000000  0002801a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	39 c2       	rjmp	.+1138   	; 0x474 <__ctors_end>
       2:	00 00       	nop
       4:	56 c2       	rjmp	.+1196   	; 0x4b2 <__bad_interrupt>
       6:	00 00       	nop
       8:	54 c2       	rjmp	.+1192   	; 0x4b2 <__bad_interrupt>
       a:	00 00       	nop
       c:	52 c2       	rjmp	.+1188   	; 0x4b2 <__bad_interrupt>
       e:	00 00       	nop
      10:	50 c2       	rjmp	.+1184   	; 0x4b2 <__bad_interrupt>
      12:	00 00       	nop
      14:	4e c2       	rjmp	.+1180   	; 0x4b2 <__bad_interrupt>
      16:	00 00       	nop
      18:	4c c2       	rjmp	.+1176   	; 0x4b2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4a c2       	rjmp	.+1172   	; 0x4b2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	48 c2       	rjmp	.+1168   	; 0x4b2 <__bad_interrupt>
      22:	00 00       	nop
      24:	46 c2       	rjmp	.+1164   	; 0x4b2 <__bad_interrupt>
      26:	00 00       	nop
      28:	44 c2       	rjmp	.+1160   	; 0x4b2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	42 c2       	rjmp	.+1156   	; 0x4b2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	40 c2       	rjmp	.+1152   	; 0x4b2 <__bad_interrupt>
      32:	00 00       	nop
      34:	3e c2       	rjmp	.+1148   	; 0x4b2 <__bad_interrupt>
      36:	00 00       	nop
      38:	3c c2       	rjmp	.+1144   	; 0x4b2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3a c2       	rjmp	.+1140   	; 0x4b2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	25 c4       	rjmp	.+2122   	; 0x88c <__vector_16>
      42:	00 00       	nop
      44:	36 c2       	rjmp	.+1132   	; 0x4b2 <__bad_interrupt>
      46:	00 00       	nop
      48:	34 c2       	rjmp	.+1128   	; 0x4b2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	32 c2       	rjmp	.+1124   	; 0x4b2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	30 c2       	rjmp	.+1120   	; 0x4b2 <__bad_interrupt>
      52:	00 00       	nop
      54:	2e c2       	rjmp	.+1116   	; 0x4b2 <__bad_interrupt>
      56:	00 00       	nop
      58:	2c c2       	rjmp	.+1112   	; 0x4b2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2a c2       	rjmp	.+1108   	; 0x4b2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	28 c2       	rjmp	.+1104   	; 0x4b2 <__bad_interrupt>
      62:	00 00       	nop
      64:	26 c2       	rjmp	.+1100   	; 0x4b2 <__bad_interrupt>
      66:	00 00       	nop
      68:	24 c2       	rjmp	.+1096   	; 0x4b2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	22 c2       	rjmp	.+1092   	; 0x4b2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	20 c2       	rjmp	.+1088   	; 0x4b2 <__bad_interrupt>
      72:	00 00       	nop
      74:	1e c2       	rjmp	.+1084   	; 0x4b2 <__bad_interrupt>
      76:	00 00       	nop
      78:	1c c2       	rjmp	.+1080   	; 0x4b2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1a c2       	rjmp	.+1076   	; 0x4b2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	18 c2       	rjmp	.+1072   	; 0x4b2 <__bad_interrupt>
      82:	00 00       	nop
      84:	16 c2       	rjmp	.+1068   	; 0x4b2 <__bad_interrupt>
      86:	00 00       	nop
      88:	14 c2       	rjmp	.+1064   	; 0x4b2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	12 c2       	rjmp	.+1060   	; 0x4b2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	10 c2       	rjmp	.+1056   	; 0x4b2 <__bad_interrupt>
	...

00000094 <__trampolines_end>:
      94:	67 e6       	ldi	r22, 0x67	; 103
      96:	09 6a       	ori	r16, 0xA9	; 169
      98:	85 ae       	std	Z+61, r8	; 0x3d
      9a:	67 bb       	out	0x17, r22	; 23
      9c:	72 f3       	brmi	.-36     	; 0x7a <__SREG__+0x3b>
      9e:	6e 3c       	cpi	r22, 0xCE	; 206
      a0:	3a f5       	brpl	.+78     	; 0xf0 <sha2_large_common_const+0x3c>
      a2:	4f a5       	ldd	r20, Y+47	; 0x2f
      a4:	7f 52       	subi	r23, 0x2F	; 47
      a6:	0e 51       	subi	r16, 0x1E	; 30
      a8:	8c 68       	ori	r24, 0x8C	; 140
      aa:	05 9b       	sbis	0x00, 5	; 0
      ac:	ab d9       	rcall	.-3242   	; 0xfffff404 <__eeprom_end+0xff7ef404>
      ae:	83 1f       	adc	r24, r19
      b0:	19 cd       	rjmp	.-1486   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
      b2:	e0 5b       	subi	r30, 0xB0	; 176

000000b4 <sha2_large_common_const>:
      b4:	22 ae 28 d7 98 2f 8a 42 cd 65 ef 23 91 44 37 71     ".(../.B.e.#.D7q
      c4:	2f 3b 4d ec cf fb c0 b5 bc db 89 81 a5 db b5 e9     /;M.............
      d4:	38 b5 48 f3 5b c2 56 39 19 d0 05 b6 f1 11 f1 59     8.H.[.V9.......Y
      e4:	9b 4f 19 af a4 82 3f 92 18 81 6d da d5 5e 1c ab     .O....?...m..^..
      f4:	42 02 03 a3 98 aa 07 d8 be 6f 70 45 01 5b 83 12     B........opE.[..
     104:	8c b2 e4 4e be 85 31 24 e2 b4 ff d5 c3 7d 0c 55     ...N..1$.....}.U
     114:	6f 89 7b f2 74 5d be 72 b1 96 16 3b fe b1 de 80     o.{.t].r...;....
     124:	35 12 c7 25 a7 06 dc 9b 94 26 69 cf 74 f1 9b c1     5..%.....&i.t...
     134:	d2 4a f1 9e c1 69 9b e4 e3 25 4f 38 86 47 be ef     .J...i...%O8.G..
     144:	b5 d5 8c 8b c6 9d c1 0f 65 9c ac 77 cc a1 0c 24     ........e..w...$
     154:	75 02 2b 59 6f 2c e9 2d 83 e4 a6 6e aa 84 74 4a     u.+Yo,.-...n..tJ
     164:	d4 fb 41 bd dc a9 b0 5c b5 53 11 83 da 88 f9 76     ..A....\.S.....v
     174:	ab df 66 ee 52 51 3e 98 10 32 b4 2d 6d c6 31 a8     ..f.RQ>..2.-m.1.
     184:	3f 21 fb 98 c8 27 03 b0 e4 0e ef be c7 7f 59 bf     ?!...'........Y.
     194:	c2 8f a8 3d f3 0b e0 c6 25 a7 0a 93 47 91 a7 d5     ...=....%...G...
     1a4:	6f 82 03 e0 51 63 ca 06 70 6e 0e 0a 67 29 29 14     o...Qc..pn..g)).
     1b4:	fc 2f d2 46 85 0a b7 27 26 c9 26 5c 38 21 1b 2e     ./.F...'&.&\8!..
     1c4:	ed 2a c4 5a fc 6d 2c 4d df b3 95 9d 13 0d 38 53     .*.Z.m,M......8S
     1d4:	de 63 af 8b 54 73 0a 65 a8 b2 77 3c bb 0a 6a 76     .c..Ts.e..w<..jv
     1e4:	e6 ae ed 47 2e c9 c2 81 3b 35 82 14 85 2c 72 92     ...G....;5...,r.
     1f4:	64 03 f1 4c a1 e8 bf a2 01 30 42 bc 4b 66 1a a8     d..L.....0B.Kf..
     204:	91 97 f8 d0 70 8b 4b c2 30 be 54 06 a3 51 6c c7     ....p.K.0.T..Ql.
     214:	18 52 ef d6 19 e8 92 d1 10 a9 65 55 24 06 99 d6     .R........eU$...
     224:	2a 20 71 57 85 35 0e f4 b8 d1 bb 32 70 a0 6a 10     * qW.5.....2p.j.
     234:	c8 d0 d2 b8 16 c1 a4 19 53 ab 41 51 08 6c 37 1e     ........S.AQ.l7.
     244:	99 eb 8e df 4c 77 48 27 a8 48 9b e1 b5 bc b0 34     ....LwH'.H.....4
     254:	63 5a c9 c5 b3 0c 1c 39 cb 8a 41 e3 4a aa d8 4e     cZ.....9..A.J..N
     264:	73 e3 63 77 4f ca 9c 5b a3 b8 b2 d6 f3 6f 2e 68     s.cwO..[.....o.h
     274:	fc b2 ef 5d ee 82 8f 74 60 2f 17 43 6f 63 a5 78     ...]...t`/.Coc.x
     284:	72 ab f0 a1 14 78 c8 84 ec 39 64 1a 08 02 c7 8c     r....x...9d.....
     294:	28 1e 63 23 fa ff be 90 e9 bd 82 de eb 6c 50 a4     (.c#.........lP.
     2a4:	15 79 c6 b2 f7 a3 f9 be 2b 53 72 e3 f2 78 71 c6     .y......+Sr..xq.
     2b4:	9c 61 26 ea ce 3e 27 ca 07 c2 c0 21 c7 b8 86 d1     .a&..>'....!....
     2c4:	1e eb e0 cd d6 7d da ea 78 d1 6e ee 7f 4f 7d f5     .....}..x.n..O}.
     2d4:	ba 6f 17 72 aa 67 f0 06 a6 98 c8 a2 c5 7d 63 0a     .o.r.g.......}c.
     2e4:	ae 0d f9 be 04 98 3f 11 1b 47 1c 13 35 0b 71 1b     ......?..G..5.q.
     2f4:	84 7d 04 23 f5 77 db 28 93 24 c7 40 7b ab ca 32     .}.#.w.(.$.@{..2
     304:	bc be c9 15 0a be 9e 3c 4c 0d 10 9c c4 67 1d 43     .......<L....g.C
     314:	b6 42 3e cb be d4 c5 4c 2a 7e 65 fc 9c 29 7f 59     .B>....L*~e..).Y
     324:	ec fa d6 3a ab 6f cb 5f 17 58 47 4a 8c 19 44 6c     ...:.o._.XGJ..Dl

00000334 <k>:
     334:	98 2f 8a 42 91 44 37 71 cf fb c0 b5 a5 db b5 e9     ./.B.D7q........
     344:	5b c2 56 39 f1 11 f1 59 a4 82 3f 92 d5 5e 1c ab     [.V9...Y..?..^..
     354:	98 aa 07 d8 01 5b 83 12 be 85 31 24 c3 7d 0c 55     .....[....1$.}.U
     364:	74 5d be 72 fe b1 de 80 a7 06 dc 9b 74 f1 9b c1     t].r........t...
     374:	c1 69 9b e4 86 47 be ef c6 9d c1 0f cc a1 0c 24     .i...G.........$
     384:	6f 2c e9 2d aa 84 74 4a dc a9 b0 5c da 88 f9 76     o,.-..tJ...\...v
     394:	52 51 3e 98 6d c6 31 a8 c8 27 03 b0 c7 7f 59 bf     RQ>.m.1..'....Y.
     3a4:	f3 0b e0 c6 47 91 a7 d5 51 63 ca 06 67 29 29 14     ....G...Qc..g)).
     3b4:	85 0a b7 27 38 21 1b 2e fc 6d 2c 4d 13 0d 38 53     ...'8!...m,M..8S
     3c4:	54 73 0a 65 bb 0a 6a 76 2e c9 c2 81 85 2c 72 92     Ts.e..jv.....,r.
     3d4:	a1 e8 bf a2 4b 66 1a a8 70 8b 4b c2 a3 51 6c c7     ....Kf..p.K..Ql.
     3e4:	19 e8 92 d1 24 06 99 d6 85 35 0e f4 70 a0 6a 10     ....$....5..p.j.
     3f4:	16 c1 a4 19 08 6c 37 1e 4c 77 48 27 b5 bc b0 34     .....l7.LwH'...4
     404:	b3 0c 1c 39 4a aa d8 4e 4f ca 9c 5b f3 6f 2e 68     ...9J..NO..[.o.h
     414:	ee 82 8f 74 6f 63 a5 78 14 78 c8 84 08 02 c7 8c     ...toc.x.x......
     424:	fa ff be 90 eb 6c 50 a4 f7 a3 f9 be f2 78 71 c6     .....lP......xq.

00000434 <sha512_init_values>:
     434:	08 c9 bc f3 67 e6 09 6a 3b a7 ca 84 85 ae 67 bb     ....g..j;.....g.
     444:	2b f8 94 fe 72 f3 6e 3c f1 36 1d 5f 3a f5 4f a5     +...r.n<.6._:.O.
     454:	d1 82 e6 ad 7f 52 0e 51 1f 6c 3e 2b 8c 68 05 9b     .....R.Q.l>+.h..
     464:	6b bd 41 fb ab d9 83 1f 79 21 7e 13 19 cd e0 5b     k.A.....y!~....[

00000474 <__ctors_end>:
     474:	11 24       	eor	r1, r1
     476:	1f be       	out	0x3f, r1	; 63
     478:	cf ef       	ldi	r28, 0xFF	; 255
     47a:	d0 e1       	ldi	r29, 0x10	; 16
     47c:	de bf       	out	0x3e, r29	; 62
     47e:	cd bf       	out	0x3d, r28	; 61

00000480 <__do_copy_data>:
     480:	16 e0       	ldi	r17, 0x06	; 6
     482:	a0 e0       	ldi	r26, 0x00	; 0
     484:	b1 e0       	ldi	r27, 0x01	; 1
     486:	e8 e1       	ldi	r30, 0x18	; 24
     488:	f8 e6       	ldi	r31, 0x68	; 104
     48a:	00 e0       	ldi	r16, 0x00	; 0
     48c:	0b bf       	out	0x3b, r16	; 59
     48e:	02 c0       	rjmp	.+4      	; 0x494 <__do_copy_data+0x14>
     490:	07 90       	elpm	r0, Z+
     492:	0d 92       	st	X+, r0
     494:	ac 35       	cpi	r26, 0x5C	; 92
     496:	b1 07       	cpc	r27, r17
     498:	d9 f7       	brne	.-10     	; 0x490 <__do_copy_data+0x10>

0000049a <__do_clear_bss>:
     49a:	27 e0       	ldi	r18, 0x07	; 7
     49c:	ac e5       	ldi	r26, 0x5C	; 92
     49e:	b6 e0       	ldi	r27, 0x06	; 6
     4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <.do_clear_bss_start>

000004a2 <.do_clear_bss_loop>:
     4a2:	1d 92       	st	X+, r1

000004a4 <.do_clear_bss_start>:
     4a4:	a9 39       	cpi	r26, 0x99	; 153
     4a6:	b2 07       	cpc	r27, r18
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <.do_clear_bss_loop>
     4aa:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <main>
     4ae:	0c 94 0a 34 	jmp	0x6814	; 0x6814 <_exit>

000004b2 <__bad_interrupt>:
     4b2:	a6 cd       	rjmp	.-1204   	; 0x0 <__vectors>

000004b4 <set_page>:
	uint8_t message[8] = {0};
	can_get_message(mobnr , message);
	char hex[16] = "";
	bytes_to_hex(message, 8, hex);
	uart_puts(hex);
}
     4b4:	20 e1       	ldi	r18, 0x10	; 16
     4b6:	82 9f       	mul	r24, r18
     4b8:	c0 01       	movw	r24, r0
     4ba:	11 24       	eor	r1, r1
     4bc:	88 60       	ori	r24, 0x08	; 8
     4be:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4c2:	08 95       	ret

000004c4 <can_get_message>:
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	18 2f       	mov	r17, r24
     4cc:	eb 01       	movw	r28, r22
     4ce:	f2 df       	rcall	.-28     	; 0x4b4 <set_page>
     4d0:	20 e1       	ldi	r18, 0x10	; 16
     4d2:	12 9f       	mul	r17, r18
     4d4:	c0 01       	movw	r24, r0
     4d6:	11 24       	eor	r1, r1
     4d8:	88 60       	ori	r24, 0x08	; 8
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	ad ee       	ldi	r26, 0xED	; 237
     4de:	b0 e0       	ldi	r27, 0x00	; 0
     4e0:	ea ef       	ldi	r30, 0xFA	; 250
     4e2:	f0 e0       	ldi	r31, 0x00	; 0
     4e4:	29 2f       	mov	r18, r25
     4e6:	28 2b       	or	r18, r24
     4e8:	2c 93       	st	X, r18
     4ea:	20 81       	ld	r18, Z
     4ec:	29 93       	st	Y+, r18
     4ee:	9f 5f       	subi	r25, 0xFF	; 255
     4f0:	98 30       	cpi	r25, 0x08	; 8
     4f2:	c1 f7       	brne	.-16     	; 0x4e4 <can_get_message+0x20>
     4f4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4f8:	df 91       	pop	r29
     4fa:	cf 91       	pop	r28
     4fc:	1f 91       	pop	r17
     4fe:	08 95       	ret

00000500 <can_get_id>:
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	eb 01       	movw	r28, r22
     506:	d6 df       	rcall	.-84     	; 0x4b4 <set_page>
     508:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     50c:	e3 ef       	ldi	r30, 0xF3	; 243
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	92 95       	swap	r25
     514:	96 95       	lsr	r25
     516:	97 70       	andi	r25, 0x07	; 7
     518:	88 0f       	add	r24, r24
     51a:	88 0f       	add	r24, r24
     51c:	88 0f       	add	r24, r24
     51e:	89 2b       	or	r24, r25
     520:	88 83       	st	Y, r24
     522:	80 81       	ld	r24, Z
     524:	82 95       	swap	r24
     526:	86 95       	lsr	r24
     528:	87 70       	andi	r24, 0x07	; 7
     52a:	89 83       	std	Y+1, r24	; 0x01
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	08 95       	ret

00000532 <can_init_id>:
     532:	fc 01       	movw	r30, r24
     534:	80 81       	ld	r24, Z
     536:	82 95       	swap	r24
     538:	88 0f       	add	r24, r24
     53a:	80 7e       	andi	r24, 0xE0	; 224
     53c:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     540:	20 81       	ld	r18, Z
     542:	26 95       	lsr	r18
     544:	26 95       	lsr	r18
     546:	26 95       	lsr	r18
     548:	91 81       	ldd	r25, Z+1	; 0x01
     54a:	30 e2       	ldi	r19, 0x20	; 32
     54c:	93 9f       	mul	r25, r19
     54e:	c0 01       	movw	r24, r0
     550:	11 24       	eor	r1, r1
     552:	82 2b       	or	r24, r18
     554:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     558:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     55c:	08 95       	ret

0000055e <can_enable_mob_interrupt>:
     55e:	88 30       	cpi	r24, 0x08	; 8
     560:	80 f0       	brcs	.+32     	; 0x582 <can_enable_mob_interrupt+0x24>
     562:	ef ed       	ldi	r30, 0xDF	; 223
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	40 81       	ld	r20, Z
     568:	88 50       	subi	r24, 0x08	; 8
     56a:	21 e0       	ldi	r18, 0x01	; 1
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	b9 01       	movw	r22, r18
     570:	02 c0       	rjmp	.+4      	; 0x576 <can_enable_mob_interrupt+0x18>
     572:	66 0f       	add	r22, r22
     574:	77 1f       	adc	r23, r23
     576:	8a 95       	dec	r24
     578:	e2 f7       	brpl	.-8      	; 0x572 <can_enable_mob_interrupt+0x14>
     57a:	cb 01       	movw	r24, r22
     57c:	84 2b       	or	r24, r20
     57e:	80 83       	st	Z, r24
     580:	08 95       	ret
     582:	ee ed       	ldi	r30, 0xDE	; 222
     584:	f0 e0       	ldi	r31, 0x00	; 0
     586:	40 81       	ld	r20, Z
     588:	21 e0       	ldi	r18, 0x01	; 1
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	b9 01       	movw	r22, r18
     58e:	02 c0       	rjmp	.+4      	; 0x594 <can_enable_mob_interrupt+0x36>
     590:	66 0f       	add	r22, r22
     592:	77 1f       	adc	r23, r23
     594:	8a 95       	dec	r24
     596:	e2 f7       	brpl	.-8      	; 0x590 <can_enable_mob_interrupt+0x32>
     598:	cb 01       	movw	r24, r22
     59a:	84 2b       	or	r24, r20
     59c:	80 83       	st	Z, r24
     59e:	08 95       	ret

000005a0 <disable_mob_interrupt>:
     5a0:	88 30       	cpi	r24, 0x08	; 8
     5a2:	88 f0       	brcs	.+34     	; 0x5c6 <disable_mob_interrupt+0x26>
     5a4:	ef ed       	ldi	r30, 0xDF	; 223
     5a6:	f0 e0       	ldi	r31, 0x00	; 0
     5a8:	40 81       	ld	r20, Z
     5aa:	88 50       	subi	r24, 0x08	; 8
     5ac:	21 e0       	ldi	r18, 0x01	; 1
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	b9 01       	movw	r22, r18
     5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <disable_mob_interrupt+0x18>
     5b4:	66 0f       	add	r22, r22
     5b6:	77 1f       	adc	r23, r23
     5b8:	8a 95       	dec	r24
     5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <disable_mob_interrupt+0x14>
     5bc:	cb 01       	movw	r24, r22
     5be:	80 95       	com	r24
     5c0:	84 23       	and	r24, r20
     5c2:	80 83       	st	Z, r24
     5c4:	08 95       	ret
     5c6:	ee ed       	ldi	r30, 0xDE	; 222
     5c8:	f0 e0       	ldi	r31, 0x00	; 0
     5ca:	40 81       	ld	r20, Z
     5cc:	21 e0       	ldi	r18, 0x01	; 1
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	b9 01       	movw	r22, r18
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <disable_mob_interrupt+0x38>
     5d4:	66 0f       	add	r22, r22
     5d6:	77 1f       	adc	r23, r23
     5d8:	8a 95       	dec	r24
     5da:	e2 f7       	brpl	.-8      	; 0x5d4 <disable_mob_interrupt+0x34>
     5dc:	cb 01       	movw	r24, r22
     5de:	80 95       	com	r24
     5e0:	84 23       	and	r24, r20
     5e2:	80 83       	st	Z, r24
     5e4:	08 95       	ret

000005e6 <can_init_mask>:
     5e6:	fc 01       	movw	r30, r24
     5e8:	80 81       	ld	r24, Z
     5ea:	82 95       	swap	r24
     5ec:	88 0f       	add	r24, r24
     5ee:	80 7e       	andi	r24, 0xE0	; 224
     5f0:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     5f4:	20 81       	ld	r18, Z
     5f6:	26 95       	lsr	r18
     5f8:	26 95       	lsr	r18
     5fa:	26 95       	lsr	r18
     5fc:	91 81       	ldd	r25, Z+1	; 0x01
     5fe:	30 e2       	ldi	r19, 0x20	; 32
     600:	93 9f       	mul	r25, r19
     602:	c0 01       	movw	r24, r0
     604:	11 24       	eor	r1, r1
     606:	82 2b       	or	r24, r18
     608:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     60c:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
     610:	08 95       	ret

00000612 <can_get_size>:
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	eb 01       	movw	r28, r22
     618:	4d df       	rcall	.-358    	; 0x4b4 <set_page>
     61a:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     61e:	8f 70       	andi	r24, 0x0F	; 15
     620:	88 83       	st	Y, r24
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <can_init_message>:
     628:	0f 93       	push	r16
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	ec 01       	movw	r28, r24
     632:	06 2f       	mov	r16, r22
     634:	14 2f       	mov	r17, r20
     636:	49 30       	cpi	r20, 0x09	; 9
     638:	08 f0       	brcs	.+2      	; 0x63c <can_init_message+0x14>
     63a:	18 e0       	ldi	r17, 0x08	; 8
     63c:	80 2f       	mov	r24, r16
     63e:	3a df       	rcall	.-396    	; 0x4b4 <set_page>
     640:	11 23       	and	r17, r17
     642:	99 f0       	breq	.+38     	; 0x66a <can_init_message+0x42>
     644:	20 e1       	ldi	r18, 0x10	; 16
     646:	02 9f       	mul	r16, r18
     648:	c0 01       	movw	r24, r0
     64a:	11 24       	eor	r1, r1
     64c:	28 2f       	mov	r18, r24
     64e:	28 60       	ori	r18, 0x08	; 8
     650:	80 e0       	ldi	r24, 0x00	; 0
     652:	ad ee       	ldi	r26, 0xED	; 237
     654:	b0 e0       	ldi	r27, 0x00	; 0
     656:	ea ef       	ldi	r30, 0xFA	; 250
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	92 2f       	mov	r25, r18
     65c:	98 2b       	or	r25, r24
     65e:	9c 93       	st	X, r25
     660:	99 91       	ld	r25, Y+
     662:	90 83       	st	Z, r25
     664:	8f 5f       	subi	r24, 0xFF	; 255
     666:	81 13       	cpse	r24, r17
     668:	f8 cf       	rjmp	.-16     	; 0x65a <can_init_message+0x32>
     66a:	80 e1       	ldi	r24, 0x10	; 16
     66c:	08 9f       	mul	r16, r24
     66e:	b0 01       	movw	r22, r0
     670:	11 24       	eor	r1, r1
     672:	68 60       	ori	r22, 0x08	; 8
     674:	60 93 ed 00 	sts	0x00ED, r22	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     678:	ef ee       	ldi	r30, 0xEF	; 239
     67a:	f0 e0       	ldi	r31, 0x00	; 0
     67c:	80 81       	ld	r24, Z
     67e:	18 2b       	or	r17, r24
     680:	10 83       	st	Z, r17
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	1f 91       	pop	r17
     688:	0f 91       	pop	r16
     68a:	08 95       	ret

0000068c <can_init>:
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	f8 94       	cli
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     698:	84 e3       	ldi	r24, 0x34	; 52
     69a:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     69e:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	4d ee       	ldi	r20, 0xED	; 237
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	cf ee       	ldi	r28, 0xEF	; 239
     6aa:	d0 e0       	ldi	r29, 0x00	; 0
     6ac:	6e ee       	ldi	r22, 0xEE	; 238
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	ea ef       	ldi	r30, 0xFA	; 250
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	82 2f       	mov	r24, r18
     6b6:	82 95       	swap	r24
     6b8:	80 7f       	andi	r24, 0xF0	; 240
     6ba:	da 01       	movw	r26, r20
     6bc:	8c 93       	st	X, r24
     6be:	18 82       	st	Y, r1
     6c0:	db 01       	movw	r26, r22
     6c2:	1c 92       	st	X, r1
     6c4:	88 e0       	ldi	r24, 0x08	; 8
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	10 82       	st	Z, r1
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	e9 f7       	brne	.-6      	; 0x6c8 <can_init+0x3c>
     6ce:	2f 5f       	subi	r18, 0xFF	; 255
     6d0:	2f 30       	cpi	r18, 0x0F	; 15
     6d2:	81 f7       	brne	.-32     	; 0x6b4 <can_init+0x28>
     6d4:	88 e0       	ldi	r24, 0x08	; 8
     6d6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     6da:	86 e0       	ldi	r24, 0x06	; 6
     6dc:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     6e0:	8c e0       	ldi	r24, 0x0C	; 12
     6e2:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     6e6:	87 e3       	ldi	r24, 0x37	; 55
     6e8:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     6ec:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
     6f0:	82 e0       	ldi	r24, 0x02	; 2
     6f2:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     6f6:	78 94       	sei
     6f8:	df 91       	pop	r29
     6fa:	cf 91       	pop	r28
     6fc:	08 95       	ret

000006fe <can_send_message>:
     6fe:	ef 92       	push	r14
     700:	ff 92       	push	r15
     702:	0f 93       	push	r16
     704:	1f 93       	push	r17
     706:	cf 93       	push	r28
     708:	df 93       	push	r29
     70a:	c8 2f       	mov	r28, r24
     70c:	7b 01       	movw	r14, r22
     70e:	8a 01       	movw	r16, r20
     710:	d2 2f       	mov	r29, r18
     712:	d0 de       	rcall	.-608    	; 0x4b4 <set_page>
     714:	c7 01       	movw	r24, r14
     716:	0d df       	rcall	.-486    	; 0x532 <can_init_id>
     718:	4d 2f       	mov	r20, r29
     71a:	6c 2f       	mov	r22, r28
     71c:	c8 01       	movw	r24, r16
     71e:	84 df       	rcall	.-248    	; 0x628 <can_init_message>
     720:	ef ee       	ldi	r30, 0xEF	; 239
     722:	f0 e0       	ldi	r31, 0x00	; 0
     724:	80 81       	ld	r24, Z
     726:	80 64       	ori	r24, 0x40	; 64
     728:	80 83       	st	Z, r24
     72a:	ee ee       	ldi	r30, 0xEE	; 238
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	80 81       	ld	r24, Z
     730:	80 34       	cpi	r24, 0x40	; 64
     732:	e9 f7       	brne	.-6      	; 0x72e <can_send_message+0x30>
     734:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     738:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	df 91       	pop	r29
     742:	cf 91       	pop	r28
     744:	1f 91       	pop	r17
     746:	0f 91       	pop	r16
     748:	ff 90       	pop	r15
     74a:	ef 90       	pop	r14
     74c:	08 95       	ret

0000074e <can_enable_receive>:
     74e:	0f 93       	push	r16
     750:	1f 93       	push	r17
     752:	cf 93       	push	r28
     754:	c8 2f       	mov	r28, r24
     756:	8b 01       	movw	r16, r22
     758:	02 df       	rcall	.-508    	; 0x55e <can_enable_mob_interrupt>
     75a:	8c 2f       	mov	r24, r28
     75c:	ab de       	rcall	.-682    	; 0x4b4 <set_page>
     75e:	c8 01       	movw	r24, r16
     760:	42 df       	rcall	.-380    	; 0x5e6 <can_init_mask>
     762:	ef ee       	ldi	r30, 0xEF	; 239
     764:	f0 e0       	ldi	r31, 0x00	; 0
     766:	80 81       	ld	r24, Z
     768:	88 68       	ori	r24, 0x88	; 136
     76a:	80 83       	st	Z, r24
     76c:	cf 91       	pop	r28
     76e:	1f 91       	pop	r17
     770:	0f 91       	pop	r16
     772:	08 95       	ret

00000774 <can_wait_for_receive>:
     774:	ea ed       	ldi	r30, 0xDA	; 218
     776:	f0 e0       	ldi	r31, 0x00	; 0
     778:	80 81       	ld	r24, Z
     77a:	88 23       	and	r24, r24
     77c:	ec f7       	brge	.-6      	; 0x778 <can_wait_for_receive+0x4>
     77e:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     782:	82 95       	swap	r24
     784:	8f 70       	andi	r24, 0x0F	; 15
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	08 95       	ret

0000078a <can_receive_message>:
     78a:	bf 92       	push	r11
     78c:	cf 92       	push	r12
     78e:	df 92       	push	r13
     790:	ef 92       	push	r14
     792:	ff 92       	push	r15
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
     79c:	b8 2e       	mov	r11, r24
     79e:	6b 01       	movw	r12, r22
     7a0:	ea 01       	movw	r28, r20
     7a2:	79 01       	movw	r14, r18
     7a4:	87 de       	rcall	.-754    	; 0x4b4 <set_page>
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0b 2c       	mov	r0, r11
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <can_receive_message+0x28>
     7ae:	88 0f       	add	r24, r24
     7b0:	99 1f       	adc	r25, r25
     7b2:	0a 94       	dec	r0
     7b4:	e2 f7       	brpl	.-8      	; 0x7ae <can_receive_message+0x24>
     7b6:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
     7ba:	c6 01       	movw	r24, r12
     7bc:	ba de       	rcall	.-652    	; 0x532 <can_init_id>
     7be:	ce 01       	movw	r24, r28
     7c0:	12 df       	rcall	.-476    	; 0x5e6 <can_init_mask>
     7c2:	88 e8       	ldi	r24, 0x88	; 136
     7c4:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     7c8:	ea ed       	ldi	r30, 0xDA	; 218
     7ca:	f0 e0       	ldi	r31, 0x00	; 0
     7cc:	80 81       	ld	r24, Z
     7ce:	88 23       	and	r24, r24
     7d0:	ec f7       	brge	.-6      	; 0x7cc <can_receive_message+0x42>
     7d2:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     7d6:	85 ff       	sbrs	r24, 5
     7d8:	13 c0       	rjmp	.+38     	; 0x800 <can_receive_message+0x76>
     7da:	b7 01       	movw	r22, r14
     7dc:	8b 2d       	mov	r24, r11
     7de:	72 de       	rcall	.-796    	; 0x4c4 <can_get_message>
     7e0:	b8 01       	movw	r22, r16
     7e2:	8b 2d       	mov	r24, r11
     7e4:	16 df       	rcall	.-468    	; 0x612 <can_get_size>
     7e6:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     7ea:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     7ee:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
     7f2:	ea ed       	ldi	r30, 0xDA	; 218
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	80 81       	ld	r24, Z
     7f8:	80 83       	st	Z, r24
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <can_receive_message+0x7a>
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	df 91       	pop	r29
     806:	cf 91       	pop	r28
     808:	1f 91       	pop	r17
     80a:	0f 91       	pop	r16
     80c:	ff 90       	pop	r15
     80e:	ef 90       	pop	r14
     810:	df 90       	pop	r13
     812:	cf 90       	pop	r12
     814:	bf 90       	pop	r11
     816:	08 95       	ret

00000818 <can_free_mob>:

void can_free_mob(uint8_t mobnr){
     818:	cf 93       	push	r28
     81a:	c8 2f       	mov	r28, r24
	set_page(mobnr);
     81c:	4b de       	rcall	.-874    	; 0x4b4 <set_page>
	disable_mob_interrupt(mobnr);
     81e:	8c 2f       	mov	r24, r28
     820:	bf de       	rcall	.-642    	; 0x5a0 <disable_mob_interrupt>
	CANSTMOB = 0x00;
     822:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	CANCDMOB = 0x00;
     826:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
}
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <can_retrieve_message>:
int can_wait_for_receive(){
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	return (CANHPMOB >> 4);
}

int can_retrieve_message(uint8_t mobnr, can_id_t id, can_msg_t message, uint8_t *size){
     82e:	cf 92       	push	r12
     830:	df 92       	push	r13
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	c8 2f       	mov	r28, r24
     83e:	8b 01       	movw	r16, r22
     840:	6a 01       	movw	r12, r20
     842:	79 01       	movw	r14, r18
	set_page(mobnr);
     844:	37 de       	rcall	.-914    	; 0x4b4 <set_page>
	
	// Check if there is indeed a CAN message ready to be retrieved.
	if((CANGIT & INTR_MASK) != (1 << CANIT)) return 1;
     846:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     84a:	88 23       	and	r24, r24
     84c:	94 f4       	brge	.+36     	; 0x872 <can_retrieve_message+0x44>
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 2;
     84e:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     852:	85 ff       	sbrs	r24, 5
     854:	11 c0       	rjmp	.+34     	; 0x878 <can_retrieve_message+0x4a>
	
	can_get_message(mobnr, message);
     856:	b6 01       	movw	r22, r12
     858:	8c 2f       	mov	r24, r28
     85a:	34 de       	rcall	.-920    	; 0x4c4 <can_get_message>
	can_get_size(mobnr,size);
     85c:	b7 01       	movw	r22, r14
     85e:	8c 2f       	mov	r24, r28
     860:	d8 de       	rcall	.-592    	; 0x612 <can_get_size>
	can_get_id(mobnr,id);
     862:	b8 01       	movw	r22, r16
     864:	8c 2f       	mov	r24, r28
     866:	4c de       	rcall	.-872    	; 0x500 <can_get_id>
	can_free_mob(mobnr);
     868:	8c 2f       	mov	r24, r28
     86a:	d6 df       	rcall	.-84     	; 0x818 <can_free_mob>
     86c:	80 e0       	ldi	r24, 0x00	; 0
	return 0;
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	05 c0       	rjmp	.+10     	; 0x87c <can_retrieve_message+0x4e>
     872:	81 e0       	ldi	r24, 0x01	; 1

int can_retrieve_message(uint8_t mobnr, can_id_t id, can_msg_t message, uint8_t *size){
	set_page(mobnr);
	
	// Check if there is indeed a CAN message ready to be retrieved.
	if((CANGIT & INTR_MASK) != (1 << CANIT)) return 1;
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	02 c0       	rjmp	.+4      	; 0x87c <can_retrieve_message+0x4e>
     878:	82 e0       	ldi	r24, 0x02	; 2
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 2;
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	cf 91       	pop	r28
	can_get_message(mobnr, message);
	can_get_size(mobnr,size);
	can_get_id(mobnr,id);
	can_free_mob(mobnr);
	return 0;
}
     87e:	1f 91       	pop	r17
     880:	0f 91       	pop	r16
     882:	ff 90       	pop	r15
     884:	ef 90       	pop	r14
     886:	df 90       	pop	r13
     888:	cf 90       	pop	r12
     88a:	08 95       	ret

0000088c <__vector_16>:
#include <avr/interrupt.h>

volatile uint32_t ms = 0;

ISR(TIMER0_COMP_vect)
{
     88c:	1f 92       	push	r1
     88e:	0f 92       	push	r0
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	0f 92       	push	r0
     894:	11 24       	eor	r1, r1
     896:	8f 93       	push	r24
     898:	9f 93       	push	r25
     89a:	af 93       	push	r26
     89c:	bf 93       	push	r27
	ms = ms+1;
     89e:	80 91 5c 06 	lds	r24, 0x065C	; 0x80065c <__data_end>
     8a2:	90 91 5d 06 	lds	r25, 0x065D	; 0x80065d <__data_end+0x1>
     8a6:	a0 91 5e 06 	lds	r26, 0x065E	; 0x80065e <__data_end+0x2>
     8aa:	b0 91 5f 06 	lds	r27, 0x065F	; 0x80065f <__data_end+0x3>
     8ae:	01 96       	adiw	r24, 0x01	; 1
     8b0:	a1 1d       	adc	r26, r1
     8b2:	b1 1d       	adc	r27, r1
     8b4:	80 93 5c 06 	sts	0x065C, r24	; 0x80065c <__data_end>
     8b8:	90 93 5d 06 	sts	0x065D, r25	; 0x80065d <__data_end+0x1>
     8bc:	a0 93 5e 06 	sts	0x065E, r26	; 0x80065e <__data_end+0x2>
     8c0:	b0 93 5f 06 	sts	0x065F, r27	; 0x80065f <__data_end+0x3>
}
     8c4:	bf 91       	pop	r27
     8c6:	af 91       	pop	r26
     8c8:	9f 91       	pop	r25
     8ca:	8f 91       	pop	r24
     8cc:	0f 90       	pop	r0
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	0f 90       	pop	r0
     8d2:	1f 90       	pop	r1
     8d4:	18 95       	reti

000008d6 <millis>:

unsigned long int millis(void)
{
	return ms;
     8d6:	60 91 5c 06 	lds	r22, 0x065C	; 0x80065c <__data_end>
     8da:	70 91 5d 06 	lds	r23, 0x065D	; 0x80065d <__data_end+0x1>
     8de:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <__data_end+0x2>
     8e2:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <__data_end+0x3>
}
     8e6:	08 95       	ret

000008e8 <clock_Init>:

void clock_Init(void)
{
	OCR0A = 61;
     8e8:	8d e3       	ldi	r24, 0x3D	; 61
     8ea:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = 1 << OCIE0A;
     8ec:	82 e0       	ldi	r24, 0x02	; 2
     8ee:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TCCR0A = 1 << WGM00 | 1 << WGM01 | 1 << CS01 | 1 << CS00;
     8f2:	8b e4       	ldi	r24, 0x4B	; 75
     8f4:	84 bd       	out	0x24, r24	; 36
     8f6:	08 95       	ret

000008f8 <uECC_vli_clear>:
     8f8:	dc 01       	movw	r26, r24
     8fa:	e2 ea       	ldi	r30, 0xA2	; 162
     8fc:	f4 e0       	ldi	r31, 0x04	; 4
     8fe:	e6 1b       	sub	r30, r22
     900:	f1 09       	sbc	r31, r1
     902:	09 94       	ijmp
     904:	1d 92       	st	X+, r1
     906:	1d 92       	st	X+, r1
     908:	1d 92       	st	X+, r1
     90a:	1d 92       	st	X+, r1
     90c:	1d 92       	st	X+, r1
     90e:	1d 92       	st	X+, r1
     910:	1d 92       	st	X+, r1
     912:	1d 92       	st	X+, r1
     914:	1d 92       	st	X+, r1
     916:	1d 92       	st	X+, r1
     918:	1d 92       	st	X+, r1
     91a:	1d 92       	st	X+, r1
     91c:	1d 92       	st	X+, r1
     91e:	1d 92       	st	X+, r1
     920:	1d 92       	st	X+, r1
     922:	1d 92       	st	X+, r1
     924:	1d 92       	st	X+, r1
     926:	1d 92       	st	X+, r1
     928:	1d 92       	st	X+, r1
     92a:	1d 92       	st	X+, r1
     92c:	1d 92       	st	X+, r1
     92e:	1d 92       	st	X+, r1
     930:	1d 92       	st	X+, r1
     932:	1d 92       	st	X+, r1
     934:	1d 92       	st	X+, r1
     936:	1d 92       	st	X+, r1
     938:	1d 92       	st	X+, r1
     93a:	1d 92       	st	X+, r1
     93c:	1d 92       	st	X+, r1
     93e:	1d 92       	st	X+, r1
     940:	1d 92       	st	X+, r1
     942:	1d 92       	st	X+, r1
     944:	08 95       	ret

00000946 <uECC_vli_set>:
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	44 0f       	add	r20, r20
     94c:	eb 01       	movw	r28, r22
     94e:	dc 01       	movw	r26, r24
     950:	ed ee       	ldi	r30, 0xED	; 237
     952:	f4 e0       	ldi	r31, 0x04	; 4
     954:	e4 1b       	sub	r30, r20
     956:	f1 09       	sbc	r31, r1
     958:	09 94       	ijmp
     95a:	09 90       	ld	r0, Y+
     95c:	0d 92       	st	X+, r0
     95e:	09 90       	ld	r0, Y+
     960:	0d 92       	st	X+, r0
     962:	09 90       	ld	r0, Y+
     964:	0d 92       	st	X+, r0
     966:	09 90       	ld	r0, Y+
     968:	0d 92       	st	X+, r0
     96a:	09 90       	ld	r0, Y+
     96c:	0d 92       	st	X+, r0
     96e:	09 90       	ld	r0, Y+
     970:	0d 92       	st	X+, r0
     972:	09 90       	ld	r0, Y+
     974:	0d 92       	st	X+, r0
     976:	09 90       	ld	r0, Y+
     978:	0d 92       	st	X+, r0
     97a:	09 90       	ld	r0, Y+
     97c:	0d 92       	st	X+, r0
     97e:	09 90       	ld	r0, Y+
     980:	0d 92       	st	X+, r0
     982:	09 90       	ld	r0, Y+
     984:	0d 92       	st	X+, r0
     986:	09 90       	ld	r0, Y+
     988:	0d 92       	st	X+, r0
     98a:	09 90       	ld	r0, Y+
     98c:	0d 92       	st	X+, r0
     98e:	09 90       	ld	r0, Y+
     990:	0d 92       	st	X+, r0
     992:	09 90       	ld	r0, Y+
     994:	0d 92       	st	X+, r0
     996:	09 90       	ld	r0, Y+
     998:	0d 92       	st	X+, r0
     99a:	09 90       	ld	r0, Y+
     99c:	0d 92       	st	X+, r0
     99e:	09 90       	ld	r0, Y+
     9a0:	0d 92       	st	X+, r0
     9a2:	09 90       	ld	r0, Y+
     9a4:	0d 92       	st	X+, r0
     9a6:	09 90       	ld	r0, Y+
     9a8:	0d 92       	st	X+, r0
     9aa:	09 90       	ld	r0, Y+
     9ac:	0d 92       	st	X+, r0
     9ae:	09 90       	ld	r0, Y+
     9b0:	0d 92       	st	X+, r0
     9b2:	09 90       	ld	r0, Y+
     9b4:	0d 92       	st	X+, r0
     9b6:	09 90       	ld	r0, Y+
     9b8:	0d 92       	st	X+, r0
     9ba:	09 90       	ld	r0, Y+
     9bc:	0d 92       	st	X+, r0
     9be:	09 90       	ld	r0, Y+
     9c0:	0d 92       	st	X+, r0
     9c2:	09 90       	ld	r0, Y+
     9c4:	0d 92       	st	X+, r0
     9c6:	09 90       	ld	r0, Y+
     9c8:	0d 92       	st	X+, r0
     9ca:	09 90       	ld	r0, Y+
     9cc:	0d 92       	st	X+, r0
     9ce:	09 90       	ld	r0, Y+
     9d0:	0d 92       	st	X+, r0
     9d2:	09 90       	ld	r0, Y+
     9d4:	0d 92       	st	X+, r0
     9d6:	09 90       	ld	r0, Y+
     9d8:	0d 92       	st	X+, r0
     9da:	df 91       	pop	r29
     9dc:	cf 91       	pop	r28
     9de:	08 95       	ret

000009e0 <uECC_vli_rshift1>:
     9e0:	26 2f       	mov	r18, r22
     9e2:	06 2e       	mov	r0, r22
     9e4:	00 0c       	add	r0, r0
     9e6:	33 0b       	sbc	r19, r19
     9e8:	21 50       	subi	r18, 0x01	; 1
     9ea:	31 09       	sbc	r19, r1
     9ec:	32 2f       	mov	r19, r18
     9ee:	33 0f       	add	r19, r19
     9f0:	23 0f       	add	r18, r19
     9f2:	dc 01       	movw	r26, r24
     9f4:	e1 e6       	ldi	r30, 0x61	; 97
     9f6:	f5 e0       	ldi	r31, 0x05	; 5
     9f8:	e2 1b       	sub	r30, r18
     9fa:	f1 09       	sbc	r31, r1
     9fc:	a6 0f       	add	r26, r22
     9fe:	b1 1d       	adc	r27, r1
     a00:	0e 90       	ld	r0, -X
     a02:	06 94       	lsr	r0
     a04:	0c 92       	st	X, r0
     a06:	09 94       	ijmp
     a08:	0e 90       	ld	r0, -X
     a0a:	07 94       	ror	r0
     a0c:	0c 92       	st	X, r0
     a0e:	0e 90       	ld	r0, -X
     a10:	07 94       	ror	r0
     a12:	0c 92       	st	X, r0
     a14:	0e 90       	ld	r0, -X
     a16:	07 94       	ror	r0
     a18:	0c 92       	st	X, r0
     a1a:	0e 90       	ld	r0, -X
     a1c:	07 94       	ror	r0
     a1e:	0c 92       	st	X, r0
     a20:	0e 90       	ld	r0, -X
     a22:	07 94       	ror	r0
     a24:	0c 92       	st	X, r0
     a26:	0e 90       	ld	r0, -X
     a28:	07 94       	ror	r0
     a2a:	0c 92       	st	X, r0
     a2c:	0e 90       	ld	r0, -X
     a2e:	07 94       	ror	r0
     a30:	0c 92       	st	X, r0
     a32:	0e 90       	ld	r0, -X
     a34:	07 94       	ror	r0
     a36:	0c 92       	st	X, r0
     a38:	0e 90       	ld	r0, -X
     a3a:	07 94       	ror	r0
     a3c:	0c 92       	st	X, r0
     a3e:	0e 90       	ld	r0, -X
     a40:	07 94       	ror	r0
     a42:	0c 92       	st	X, r0
     a44:	0e 90       	ld	r0, -X
     a46:	07 94       	ror	r0
     a48:	0c 92       	st	X, r0
     a4a:	0e 90       	ld	r0, -X
     a4c:	07 94       	ror	r0
     a4e:	0c 92       	st	X, r0
     a50:	0e 90       	ld	r0, -X
     a52:	07 94       	ror	r0
     a54:	0c 92       	st	X, r0
     a56:	0e 90       	ld	r0, -X
     a58:	07 94       	ror	r0
     a5a:	0c 92       	st	X, r0
     a5c:	0e 90       	ld	r0, -X
     a5e:	07 94       	ror	r0
     a60:	0c 92       	st	X, r0
     a62:	0e 90       	ld	r0, -X
     a64:	07 94       	ror	r0
     a66:	0c 92       	st	X, r0
     a68:	0e 90       	ld	r0, -X
     a6a:	07 94       	ror	r0
     a6c:	0c 92       	st	X, r0
     a6e:	0e 90       	ld	r0, -X
     a70:	07 94       	ror	r0
     a72:	0c 92       	st	X, r0
     a74:	0e 90       	ld	r0, -X
     a76:	07 94       	ror	r0
     a78:	0c 92       	st	X, r0
     a7a:	0e 90       	ld	r0, -X
     a7c:	07 94       	ror	r0
     a7e:	0c 92       	st	X, r0
     a80:	0e 90       	ld	r0, -X
     a82:	07 94       	ror	r0
     a84:	0c 92       	st	X, r0
     a86:	0e 90       	ld	r0, -X
     a88:	07 94       	ror	r0
     a8a:	0c 92       	st	X, r0
     a8c:	0e 90       	ld	r0, -X
     a8e:	07 94       	ror	r0
     a90:	0c 92       	st	X, r0
     a92:	0e 90       	ld	r0, -X
     a94:	07 94       	ror	r0
     a96:	0c 92       	st	X, r0
     a98:	0e 90       	ld	r0, -X
     a9a:	07 94       	ror	r0
     a9c:	0c 92       	st	X, r0
     a9e:	0e 90       	ld	r0, -X
     aa0:	07 94       	ror	r0
     aa2:	0c 92       	st	X, r0
     aa4:	0e 90       	ld	r0, -X
     aa6:	07 94       	ror	r0
     aa8:	0c 92       	st	X, r0
     aaa:	0e 90       	ld	r0, -X
     aac:	07 94       	ror	r0
     aae:	0c 92       	st	X, r0
     ab0:	0e 90       	ld	r0, -X
     ab2:	07 94       	ror	r0
     ab4:	0c 92       	st	X, r0
     ab6:	0e 90       	ld	r0, -X
     ab8:	07 94       	ror	r0
     aba:	0c 92       	st	X, r0
     abc:	0e 90       	ld	r0, -X
     abe:	07 94       	ror	r0
     ac0:	0c 92       	st	X, r0
     ac2:	08 95       	ret

00000ac4 <uECC_vli_add>:
     ac4:	cf 93       	push	r28
     ac6:	df 93       	push	r29
     ac8:	22 0f       	add	r18, r18
     aca:	db 01       	movw	r26, r22
     acc:	ea 01       	movw	r28, r20
     ace:	ac 01       	movw	r20, r24
     ad0:	ee ea       	ldi	r30, 0xAE	; 174
     ad2:	f5 e0       	ldi	r31, 0x05	; 5
     ad4:	e2 1b       	sub	r30, r18
     ad6:	f1 09       	sbc	r31, r1
     ad8:	88 94       	clc
     ada:	09 94       	ijmp
     adc:	fa 01       	movw	r30, r20
     ade:	3e c0       	rjmp	.+124    	; 0xb5c <add_89_32>
     ae0:	fa 01       	movw	r30, r20
     ae2:	40 c0       	rjmp	.+128    	; 0xb64 <add_89_31>
     ae4:	fa 01       	movw	r30, r20
     ae6:	42 c0       	rjmp	.+132    	; 0xb6c <add_89_30>
     ae8:	fa 01       	movw	r30, r20
     aea:	44 c0       	rjmp	.+136    	; 0xb74 <add_89_29>
     aec:	fa 01       	movw	r30, r20
     aee:	46 c0       	rjmp	.+140    	; 0xb7c <add_89_28>
     af0:	fa 01       	movw	r30, r20
     af2:	48 c0       	rjmp	.+144    	; 0xb84 <add_89_27>
     af4:	fa 01       	movw	r30, r20
     af6:	4a c0       	rjmp	.+148    	; 0xb8c <add_89_26>
     af8:	fa 01       	movw	r30, r20
     afa:	4c c0       	rjmp	.+152    	; 0xb94 <add_89_25>
     afc:	fa 01       	movw	r30, r20
     afe:	4e c0       	rjmp	.+156    	; 0xb9c <add_89_24>
     b00:	fa 01       	movw	r30, r20
     b02:	50 c0       	rjmp	.+160    	; 0xba4 <add_89_23>
     b04:	fa 01       	movw	r30, r20
     b06:	52 c0       	rjmp	.+164    	; 0xbac <add_89_22>
     b08:	fa 01       	movw	r30, r20
     b0a:	54 c0       	rjmp	.+168    	; 0xbb4 <add_89_21>
     b0c:	fa 01       	movw	r30, r20
     b0e:	56 c0       	rjmp	.+172    	; 0xbbc <add_89_20>
     b10:	fa 01       	movw	r30, r20
     b12:	58 c0       	rjmp	.+176    	; 0xbc4 <add_89_19>
     b14:	fa 01       	movw	r30, r20
     b16:	5a c0       	rjmp	.+180    	; 0xbcc <add_89_18>
     b18:	fa 01       	movw	r30, r20
     b1a:	5c c0       	rjmp	.+184    	; 0xbd4 <add_89_17>
     b1c:	fa 01       	movw	r30, r20
     b1e:	5e c0       	rjmp	.+188    	; 0xbdc <add_89_16>
     b20:	fa 01       	movw	r30, r20
     b22:	60 c0       	rjmp	.+192    	; 0xbe4 <add_89_15>
     b24:	fa 01       	movw	r30, r20
     b26:	62 c0       	rjmp	.+196    	; 0xbec <add_89_14>
     b28:	fa 01       	movw	r30, r20
     b2a:	64 c0       	rjmp	.+200    	; 0xbf4 <add_89_13>
     b2c:	fa 01       	movw	r30, r20
     b2e:	66 c0       	rjmp	.+204    	; 0xbfc <add_89_12>
     b30:	fa 01       	movw	r30, r20
     b32:	68 c0       	rjmp	.+208    	; 0xc04 <add_89_11>
     b34:	fa 01       	movw	r30, r20
     b36:	6a c0       	rjmp	.+212    	; 0xc0c <add_89_10>
     b38:	fa 01       	movw	r30, r20
     b3a:	6c c0       	rjmp	.+216    	; 0xc14 <add_89_9>
     b3c:	fa 01       	movw	r30, r20
     b3e:	6e c0       	rjmp	.+220    	; 0xc1c <add_89_8>
     b40:	fa 01       	movw	r30, r20
     b42:	70 c0       	rjmp	.+224    	; 0xc24 <add_89_7>
     b44:	fa 01       	movw	r30, r20
     b46:	72 c0       	rjmp	.+228    	; 0xc2c <add_89_6>
     b48:	fa 01       	movw	r30, r20
     b4a:	74 c0       	rjmp	.+232    	; 0xc34 <add_89_5>
     b4c:	fa 01       	movw	r30, r20
     b4e:	76 c0       	rjmp	.+236    	; 0xc3c <add_89_4>
     b50:	fa 01       	movw	r30, r20
     b52:	78 c0       	rjmp	.+240    	; 0xc44 <add_89_3>
     b54:	fa 01       	movw	r30, r20
     b56:	7a c0       	rjmp	.+244    	; 0xc4c <add_89_2>
     b58:	fa 01       	movw	r30, r20
     b5a:	7c c0       	rjmp	.+248    	; 0xc54 <add_89_1>

00000b5c <add_89_32>:
     b5c:	8d 91       	ld	r24, X+
     b5e:	99 91       	ld	r25, Y+
     b60:	89 1f       	adc	r24, r25
     b62:	81 93       	st	Z+, r24

00000b64 <add_89_31>:
     b64:	8d 91       	ld	r24, X+
     b66:	99 91       	ld	r25, Y+
     b68:	89 1f       	adc	r24, r25
     b6a:	81 93       	st	Z+, r24

00000b6c <add_89_30>:
     b6c:	8d 91       	ld	r24, X+
     b6e:	99 91       	ld	r25, Y+
     b70:	89 1f       	adc	r24, r25
     b72:	81 93       	st	Z+, r24

00000b74 <add_89_29>:
     b74:	8d 91       	ld	r24, X+
     b76:	99 91       	ld	r25, Y+
     b78:	89 1f       	adc	r24, r25
     b7a:	81 93       	st	Z+, r24

00000b7c <add_89_28>:
     b7c:	8d 91       	ld	r24, X+
     b7e:	99 91       	ld	r25, Y+
     b80:	89 1f       	adc	r24, r25
     b82:	81 93       	st	Z+, r24

00000b84 <add_89_27>:
     b84:	8d 91       	ld	r24, X+
     b86:	99 91       	ld	r25, Y+
     b88:	89 1f       	adc	r24, r25
     b8a:	81 93       	st	Z+, r24

00000b8c <add_89_26>:
     b8c:	8d 91       	ld	r24, X+
     b8e:	99 91       	ld	r25, Y+
     b90:	89 1f       	adc	r24, r25
     b92:	81 93       	st	Z+, r24

00000b94 <add_89_25>:
     b94:	8d 91       	ld	r24, X+
     b96:	99 91       	ld	r25, Y+
     b98:	89 1f       	adc	r24, r25
     b9a:	81 93       	st	Z+, r24

00000b9c <add_89_24>:
     b9c:	8d 91       	ld	r24, X+
     b9e:	99 91       	ld	r25, Y+
     ba0:	89 1f       	adc	r24, r25
     ba2:	81 93       	st	Z+, r24

00000ba4 <add_89_23>:
     ba4:	8d 91       	ld	r24, X+
     ba6:	99 91       	ld	r25, Y+
     ba8:	89 1f       	adc	r24, r25
     baa:	81 93       	st	Z+, r24

00000bac <add_89_22>:
     bac:	8d 91       	ld	r24, X+
     bae:	99 91       	ld	r25, Y+
     bb0:	89 1f       	adc	r24, r25
     bb2:	81 93       	st	Z+, r24

00000bb4 <add_89_21>:
     bb4:	8d 91       	ld	r24, X+
     bb6:	99 91       	ld	r25, Y+
     bb8:	89 1f       	adc	r24, r25
     bba:	81 93       	st	Z+, r24

00000bbc <add_89_20>:
     bbc:	8d 91       	ld	r24, X+
     bbe:	99 91       	ld	r25, Y+
     bc0:	89 1f       	adc	r24, r25
     bc2:	81 93       	st	Z+, r24

00000bc4 <add_89_19>:
     bc4:	8d 91       	ld	r24, X+
     bc6:	99 91       	ld	r25, Y+
     bc8:	89 1f       	adc	r24, r25
     bca:	81 93       	st	Z+, r24

00000bcc <add_89_18>:
     bcc:	8d 91       	ld	r24, X+
     bce:	99 91       	ld	r25, Y+
     bd0:	89 1f       	adc	r24, r25
     bd2:	81 93       	st	Z+, r24

00000bd4 <add_89_17>:
     bd4:	8d 91       	ld	r24, X+
     bd6:	99 91       	ld	r25, Y+
     bd8:	89 1f       	adc	r24, r25
     bda:	81 93       	st	Z+, r24

00000bdc <add_89_16>:
     bdc:	8d 91       	ld	r24, X+
     bde:	99 91       	ld	r25, Y+
     be0:	89 1f       	adc	r24, r25
     be2:	81 93       	st	Z+, r24

00000be4 <add_89_15>:
     be4:	8d 91       	ld	r24, X+
     be6:	99 91       	ld	r25, Y+
     be8:	89 1f       	adc	r24, r25
     bea:	81 93       	st	Z+, r24

00000bec <add_89_14>:
     bec:	8d 91       	ld	r24, X+
     bee:	99 91       	ld	r25, Y+
     bf0:	89 1f       	adc	r24, r25
     bf2:	81 93       	st	Z+, r24

00000bf4 <add_89_13>:
     bf4:	8d 91       	ld	r24, X+
     bf6:	99 91       	ld	r25, Y+
     bf8:	89 1f       	adc	r24, r25
     bfa:	81 93       	st	Z+, r24

00000bfc <add_89_12>:
     bfc:	8d 91       	ld	r24, X+
     bfe:	99 91       	ld	r25, Y+
     c00:	89 1f       	adc	r24, r25
     c02:	81 93       	st	Z+, r24

00000c04 <add_89_11>:
     c04:	8d 91       	ld	r24, X+
     c06:	99 91       	ld	r25, Y+
     c08:	89 1f       	adc	r24, r25
     c0a:	81 93       	st	Z+, r24

00000c0c <add_89_10>:
     c0c:	8d 91       	ld	r24, X+
     c0e:	99 91       	ld	r25, Y+
     c10:	89 1f       	adc	r24, r25
     c12:	81 93       	st	Z+, r24

00000c14 <add_89_9>:
     c14:	8d 91       	ld	r24, X+
     c16:	99 91       	ld	r25, Y+
     c18:	89 1f       	adc	r24, r25
     c1a:	81 93       	st	Z+, r24

00000c1c <add_89_8>:
     c1c:	8d 91       	ld	r24, X+
     c1e:	99 91       	ld	r25, Y+
     c20:	89 1f       	adc	r24, r25
     c22:	81 93       	st	Z+, r24

00000c24 <add_89_7>:
     c24:	8d 91       	ld	r24, X+
     c26:	99 91       	ld	r25, Y+
     c28:	89 1f       	adc	r24, r25
     c2a:	81 93       	st	Z+, r24

00000c2c <add_89_6>:
     c2c:	8d 91       	ld	r24, X+
     c2e:	99 91       	ld	r25, Y+
     c30:	89 1f       	adc	r24, r25
     c32:	81 93       	st	Z+, r24

00000c34 <add_89_5>:
     c34:	8d 91       	ld	r24, X+
     c36:	99 91       	ld	r25, Y+
     c38:	89 1f       	adc	r24, r25
     c3a:	81 93       	st	Z+, r24

00000c3c <add_89_4>:
     c3c:	8d 91       	ld	r24, X+
     c3e:	99 91       	ld	r25, Y+
     c40:	89 1f       	adc	r24, r25
     c42:	81 93       	st	Z+, r24

00000c44 <add_89_3>:
     c44:	8d 91       	ld	r24, X+
     c46:	99 91       	ld	r25, Y+
     c48:	89 1f       	adc	r24, r25
     c4a:	81 93       	st	Z+, r24

00000c4c <add_89_2>:
     c4c:	8d 91       	ld	r24, X+
     c4e:	99 91       	ld	r25, Y+
     c50:	89 1f       	adc	r24, r25
     c52:	81 93       	st	Z+, r24

00000c54 <add_89_1>:
     c54:	8d 91       	ld	r24, X+
     c56:	99 91       	ld	r25, Y+
     c58:	89 1f       	adc	r24, r25
     c5a:	81 93       	st	Z+, r24
     c5c:	81 2d       	mov	r24, r1
     c5e:	88 1f       	adc	r24, r24
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	08 95       	ret

00000c66 <uECC_vli_sub>:
     c66:	cf 93       	push	r28
     c68:	df 93       	push	r29
     c6a:	22 0f       	add	r18, r18
     c6c:	db 01       	movw	r26, r22
     c6e:	ea 01       	movw	r28, r20
     c70:	ac 01       	movw	r20, r24
     c72:	ef e7       	ldi	r30, 0x7F	; 127
     c74:	f6 e0       	ldi	r31, 0x06	; 6
     c76:	e2 1b       	sub	r30, r18
     c78:	f1 09       	sbc	r31, r1
     c7a:	88 94       	clc
     c7c:	09 94       	ijmp
     c7e:	fa 01       	movw	r30, r20
     c80:	3e c0       	rjmp	.+124    	; 0xcfe <sub_129_32>
     c82:	fa 01       	movw	r30, r20
     c84:	40 c0       	rjmp	.+128    	; 0xd06 <sub_129_31>
     c86:	fa 01       	movw	r30, r20
     c88:	42 c0       	rjmp	.+132    	; 0xd0e <sub_129_30>
     c8a:	fa 01       	movw	r30, r20
     c8c:	44 c0       	rjmp	.+136    	; 0xd16 <sub_129_29>
     c8e:	fa 01       	movw	r30, r20
     c90:	46 c0       	rjmp	.+140    	; 0xd1e <sub_129_28>
     c92:	fa 01       	movw	r30, r20
     c94:	48 c0       	rjmp	.+144    	; 0xd26 <sub_129_27>
     c96:	fa 01       	movw	r30, r20
     c98:	4a c0       	rjmp	.+148    	; 0xd2e <sub_129_26>
     c9a:	fa 01       	movw	r30, r20
     c9c:	4c c0       	rjmp	.+152    	; 0xd36 <sub_129_25>
     c9e:	fa 01       	movw	r30, r20
     ca0:	4e c0       	rjmp	.+156    	; 0xd3e <sub_129_24>
     ca2:	fa 01       	movw	r30, r20
     ca4:	50 c0       	rjmp	.+160    	; 0xd46 <sub_129_23>
     ca6:	fa 01       	movw	r30, r20
     ca8:	52 c0       	rjmp	.+164    	; 0xd4e <sub_129_22>
     caa:	fa 01       	movw	r30, r20
     cac:	54 c0       	rjmp	.+168    	; 0xd56 <sub_129_21>
     cae:	fa 01       	movw	r30, r20
     cb0:	56 c0       	rjmp	.+172    	; 0xd5e <sub_129_20>
     cb2:	fa 01       	movw	r30, r20
     cb4:	58 c0       	rjmp	.+176    	; 0xd66 <sub_129_19>
     cb6:	fa 01       	movw	r30, r20
     cb8:	5a c0       	rjmp	.+180    	; 0xd6e <sub_129_18>
     cba:	fa 01       	movw	r30, r20
     cbc:	5c c0       	rjmp	.+184    	; 0xd76 <sub_129_17>
     cbe:	fa 01       	movw	r30, r20
     cc0:	5e c0       	rjmp	.+188    	; 0xd7e <sub_129_16>
     cc2:	fa 01       	movw	r30, r20
     cc4:	60 c0       	rjmp	.+192    	; 0xd86 <sub_129_15>
     cc6:	fa 01       	movw	r30, r20
     cc8:	62 c0       	rjmp	.+196    	; 0xd8e <sub_129_14>
     cca:	fa 01       	movw	r30, r20
     ccc:	64 c0       	rjmp	.+200    	; 0xd96 <sub_129_13>
     cce:	fa 01       	movw	r30, r20
     cd0:	66 c0       	rjmp	.+204    	; 0xd9e <sub_129_12>
     cd2:	fa 01       	movw	r30, r20
     cd4:	68 c0       	rjmp	.+208    	; 0xda6 <sub_129_11>
     cd6:	fa 01       	movw	r30, r20
     cd8:	6a c0       	rjmp	.+212    	; 0xdae <sub_129_10>
     cda:	fa 01       	movw	r30, r20
     cdc:	6c c0       	rjmp	.+216    	; 0xdb6 <sub_129_9>
     cde:	fa 01       	movw	r30, r20
     ce0:	6e c0       	rjmp	.+220    	; 0xdbe <sub_129_8>
     ce2:	fa 01       	movw	r30, r20
     ce4:	70 c0       	rjmp	.+224    	; 0xdc6 <sub_129_7>
     ce6:	fa 01       	movw	r30, r20
     ce8:	72 c0       	rjmp	.+228    	; 0xdce <sub_129_6>
     cea:	fa 01       	movw	r30, r20
     cec:	74 c0       	rjmp	.+232    	; 0xdd6 <sub_129_5>
     cee:	fa 01       	movw	r30, r20
     cf0:	76 c0       	rjmp	.+236    	; 0xdde <sub_129_4>
     cf2:	fa 01       	movw	r30, r20
     cf4:	78 c0       	rjmp	.+240    	; 0xde6 <sub_129_3>
     cf6:	fa 01       	movw	r30, r20
     cf8:	7a c0       	rjmp	.+244    	; 0xdee <sub_129_2>
     cfa:	fa 01       	movw	r30, r20
     cfc:	7c c0       	rjmp	.+248    	; 0xdf6 <sub_129_1>

00000cfe <sub_129_32>:
     cfe:	8d 91       	ld	r24, X+
     d00:	99 91       	ld	r25, Y+
     d02:	89 0b       	sbc	r24, r25
     d04:	81 93       	st	Z+, r24

00000d06 <sub_129_31>:
     d06:	8d 91       	ld	r24, X+
     d08:	99 91       	ld	r25, Y+
     d0a:	89 0b       	sbc	r24, r25
     d0c:	81 93       	st	Z+, r24

00000d0e <sub_129_30>:
     d0e:	8d 91       	ld	r24, X+
     d10:	99 91       	ld	r25, Y+
     d12:	89 0b       	sbc	r24, r25
     d14:	81 93       	st	Z+, r24

00000d16 <sub_129_29>:
     d16:	8d 91       	ld	r24, X+
     d18:	99 91       	ld	r25, Y+
     d1a:	89 0b       	sbc	r24, r25
     d1c:	81 93       	st	Z+, r24

00000d1e <sub_129_28>:
     d1e:	8d 91       	ld	r24, X+
     d20:	99 91       	ld	r25, Y+
     d22:	89 0b       	sbc	r24, r25
     d24:	81 93       	st	Z+, r24

00000d26 <sub_129_27>:
     d26:	8d 91       	ld	r24, X+
     d28:	99 91       	ld	r25, Y+
     d2a:	89 0b       	sbc	r24, r25
     d2c:	81 93       	st	Z+, r24

00000d2e <sub_129_26>:
     d2e:	8d 91       	ld	r24, X+
     d30:	99 91       	ld	r25, Y+
     d32:	89 0b       	sbc	r24, r25
     d34:	81 93       	st	Z+, r24

00000d36 <sub_129_25>:
     d36:	8d 91       	ld	r24, X+
     d38:	99 91       	ld	r25, Y+
     d3a:	89 0b       	sbc	r24, r25
     d3c:	81 93       	st	Z+, r24

00000d3e <sub_129_24>:
     d3e:	8d 91       	ld	r24, X+
     d40:	99 91       	ld	r25, Y+
     d42:	89 0b       	sbc	r24, r25
     d44:	81 93       	st	Z+, r24

00000d46 <sub_129_23>:
     d46:	8d 91       	ld	r24, X+
     d48:	99 91       	ld	r25, Y+
     d4a:	89 0b       	sbc	r24, r25
     d4c:	81 93       	st	Z+, r24

00000d4e <sub_129_22>:
     d4e:	8d 91       	ld	r24, X+
     d50:	99 91       	ld	r25, Y+
     d52:	89 0b       	sbc	r24, r25
     d54:	81 93       	st	Z+, r24

00000d56 <sub_129_21>:
     d56:	8d 91       	ld	r24, X+
     d58:	99 91       	ld	r25, Y+
     d5a:	89 0b       	sbc	r24, r25
     d5c:	81 93       	st	Z+, r24

00000d5e <sub_129_20>:
     d5e:	8d 91       	ld	r24, X+
     d60:	99 91       	ld	r25, Y+
     d62:	89 0b       	sbc	r24, r25
     d64:	81 93       	st	Z+, r24

00000d66 <sub_129_19>:
     d66:	8d 91       	ld	r24, X+
     d68:	99 91       	ld	r25, Y+
     d6a:	89 0b       	sbc	r24, r25
     d6c:	81 93       	st	Z+, r24

00000d6e <sub_129_18>:
     d6e:	8d 91       	ld	r24, X+
     d70:	99 91       	ld	r25, Y+
     d72:	89 0b       	sbc	r24, r25
     d74:	81 93       	st	Z+, r24

00000d76 <sub_129_17>:
     d76:	8d 91       	ld	r24, X+
     d78:	99 91       	ld	r25, Y+
     d7a:	89 0b       	sbc	r24, r25
     d7c:	81 93       	st	Z+, r24

00000d7e <sub_129_16>:
     d7e:	8d 91       	ld	r24, X+
     d80:	99 91       	ld	r25, Y+
     d82:	89 0b       	sbc	r24, r25
     d84:	81 93       	st	Z+, r24

00000d86 <sub_129_15>:
     d86:	8d 91       	ld	r24, X+
     d88:	99 91       	ld	r25, Y+
     d8a:	89 0b       	sbc	r24, r25
     d8c:	81 93       	st	Z+, r24

00000d8e <sub_129_14>:
     d8e:	8d 91       	ld	r24, X+
     d90:	99 91       	ld	r25, Y+
     d92:	89 0b       	sbc	r24, r25
     d94:	81 93       	st	Z+, r24

00000d96 <sub_129_13>:
     d96:	8d 91       	ld	r24, X+
     d98:	99 91       	ld	r25, Y+
     d9a:	89 0b       	sbc	r24, r25
     d9c:	81 93       	st	Z+, r24

00000d9e <sub_129_12>:
     d9e:	8d 91       	ld	r24, X+
     da0:	99 91       	ld	r25, Y+
     da2:	89 0b       	sbc	r24, r25
     da4:	81 93       	st	Z+, r24

00000da6 <sub_129_11>:
     da6:	8d 91       	ld	r24, X+
     da8:	99 91       	ld	r25, Y+
     daa:	89 0b       	sbc	r24, r25
     dac:	81 93       	st	Z+, r24

00000dae <sub_129_10>:
     dae:	8d 91       	ld	r24, X+
     db0:	99 91       	ld	r25, Y+
     db2:	89 0b       	sbc	r24, r25
     db4:	81 93       	st	Z+, r24

00000db6 <sub_129_9>:
     db6:	8d 91       	ld	r24, X+
     db8:	99 91       	ld	r25, Y+
     dba:	89 0b       	sbc	r24, r25
     dbc:	81 93       	st	Z+, r24

00000dbe <sub_129_8>:
     dbe:	8d 91       	ld	r24, X+
     dc0:	99 91       	ld	r25, Y+
     dc2:	89 0b       	sbc	r24, r25
     dc4:	81 93       	st	Z+, r24

00000dc6 <sub_129_7>:
     dc6:	8d 91       	ld	r24, X+
     dc8:	99 91       	ld	r25, Y+
     dca:	89 0b       	sbc	r24, r25
     dcc:	81 93       	st	Z+, r24

00000dce <sub_129_6>:
     dce:	8d 91       	ld	r24, X+
     dd0:	99 91       	ld	r25, Y+
     dd2:	89 0b       	sbc	r24, r25
     dd4:	81 93       	st	Z+, r24

00000dd6 <sub_129_5>:
     dd6:	8d 91       	ld	r24, X+
     dd8:	99 91       	ld	r25, Y+
     dda:	89 0b       	sbc	r24, r25
     ddc:	81 93       	st	Z+, r24

00000dde <sub_129_4>:
     dde:	8d 91       	ld	r24, X+
     de0:	99 91       	ld	r25, Y+
     de2:	89 0b       	sbc	r24, r25
     de4:	81 93       	st	Z+, r24

00000de6 <sub_129_3>:
     de6:	8d 91       	ld	r24, X+
     de8:	99 91       	ld	r25, Y+
     dea:	89 0b       	sbc	r24, r25
     dec:	81 93       	st	Z+, r24

00000dee <sub_129_2>:
     dee:	8d 91       	ld	r24, X+
     df0:	99 91       	ld	r25, Y+
     df2:	89 0b       	sbc	r24, r25
     df4:	81 93       	st	Z+, r24

00000df6 <sub_129_1>:
     df6:	8d 91       	ld	r24, X+
     df8:	99 91       	ld	r25, Y+
     dfa:	89 0b       	sbc	r24, r25
     dfc:	81 93       	st	Z+, r24
     dfe:	81 2d       	mov	r24, r1
     e00:	88 1f       	adc	r24, r24
     e02:	df 91       	pop	r29
     e04:	cf 91       	pop	r28
     e06:	08 95       	ret

00000e08 <uECC_vli_mult>:
     e08:	cf 93       	push	r28
     e0a:	df 93       	push	r29
     e0c:	fc 01       	movw	r30, r24
     e0e:	db 01       	movw	r26, r22
     e10:	ea 01       	movw	r28, r20
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	89 2f       	mov	r24, r25
     e16:	39 2f       	mov	r19, r25
     e18:	49 2f       	mov	r20, r25
     e1a:	51 e0       	ldi	r21, 0x01	; 1
     e1c:	60 e0       	ldi	r22, 0x00	; 0
     e1e:	c5 0f       	add	r28, r21
     e20:	d4 1f       	adc	r29, r20
     e22:	0d 90       	ld	r0, X+
     e24:	1a 90       	ld	r1, -Y
     e26:	01 9c       	mul	r0, r1
     e28:	90 0d       	add	r25, r0
     e2a:	81 1d       	adc	r24, r1
     e2c:	34 1f       	adc	r19, r20
     e2e:	63 95       	inc	r22
     e30:	65 17       	cp	r22, r21
     e32:	b8 f3       	brcs	.-18     	; 0xe22 <uECC_vli_mult+0x1a>
     e34:	a5 1b       	sub	r26, r21
     e36:	b4 0b       	sbc	r27, r20
     e38:	91 93       	st	Z+, r25
     e3a:	98 2f       	mov	r25, r24
     e3c:	83 2f       	mov	r24, r19
     e3e:	34 2f       	mov	r19, r20
     e40:	53 95       	inc	r21
     e42:	52 17       	cp	r21, r18
     e44:	58 f3       	brcs	.-42     	; 0xe1c <uECC_vli_mult+0x14>
     e46:	52 2f       	mov	r21, r18
     e48:	c2 0f       	add	r28, r18
     e4a:	d4 1f       	adc	r29, r20
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	0d 90       	ld	r0, X+
     e50:	1a 90       	ld	r1, -Y
     e52:	01 9c       	mul	r0, r1
     e54:	90 0d       	add	r25, r0
     e56:	81 1d       	adc	r24, r1
     e58:	34 1f       	adc	r19, r20
     e5a:	63 95       	inc	r22
     e5c:	65 17       	cp	r22, r21
     e5e:	b8 f3       	brcs	.-18     	; 0xe4e <uECC_vli_mult+0x46>
     e60:	c5 0f       	add	r28, r21
     e62:	d4 1f       	adc	r29, r20
     e64:	91 93       	st	Z+, r25
     e66:	98 2f       	mov	r25, r24
     e68:	83 2f       	mov	r24, r19
     e6a:	34 2f       	mov	r19, r20
     e6c:	5a 95       	dec	r21
     e6e:	a5 1b       	sub	r26, r21
     e70:	b4 0b       	sbc	r27, r20
     e72:	54 17       	cp	r21, r20
     e74:	59 f7       	brne	.-42     	; 0xe4c <uECC_vli_mult+0x44>
     e76:	91 93       	st	Z+, r25
     e78:	11 24       	eor	r1, r1
     e7a:	df 91       	pop	r29
     e7c:	cf 91       	pop	r28
     e7e:	08 95       	ret

00000e80 <uECC_vli_isZero>:
     e80:	16 16       	cp	r1, r22
     e82:	7c f4       	brge	.+30     	; 0xea2 <uECC_vli_isZero+0x22>
     e84:	fc 01       	movw	r30, r24
     e86:	61 50       	subi	r22, 0x01	; 1
     e88:	46 2f       	mov	r20, r22
     e8a:	50 e0       	ldi	r21, 0x00	; 0
     e8c:	4f 5f       	subi	r20, 0xFF	; 255
     e8e:	5f 4f       	sbci	r21, 0xFF	; 255
     e90:	48 0f       	add	r20, r24
     e92:	59 1f       	adc	r21, r25
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	21 91       	ld	r18, Z+
     e98:	92 2b       	or	r25, r18
     e9a:	e4 17       	cp	r30, r20
     e9c:	f5 07       	cpc	r31, r21
     e9e:	d9 f7       	brne	.-10     	; 0xe96 <uECC_vli_isZero+0x16>
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <uECC_vli_isZero+0x24>
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	91 11       	cpse	r25, r1
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	08 95       	ret

00000eac <uECC_vli_testBit>:
     eac:	9b 01       	movw	r18, r22
     eae:	35 95       	asr	r19
     eb0:	27 95       	ror	r18
     eb2:	35 95       	asr	r19
     eb4:	27 95       	ror	r18
     eb6:	35 95       	asr	r19
     eb8:	27 95       	ror	r18
     eba:	82 0f       	add	r24, r18
     ebc:	93 1f       	adc	r25, r19
     ebe:	67 70       	andi	r22, 0x07	; 7
     ec0:	77 27       	eor	r23, r23
     ec2:	21 e0       	ldi	r18, 0x01	; 1
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <uECC_vli_testBit+0x20>
     ec8:	22 0f       	add	r18, r18
     eca:	33 1f       	adc	r19, r19
     ecc:	6a 95       	dec	r22
     ece:	e2 f7       	brpl	.-8      	; 0xec8 <uECC_vli_testBit+0x1c>
     ed0:	fc 01       	movw	r30, r24
     ed2:	80 81       	ld	r24, Z
     ed4:	82 23       	and	r24, r18
     ed6:	08 95       	ret

00000ed8 <uECC_vli_numBits>:
     ed8:	9c 01       	movw	r18, r24
     eda:	61 50       	subi	r22, 0x01	; 1
     edc:	92 f0       	brmi	.+36     	; 0xf02 <uECC_vli_numBits+0x2a>
     ede:	fc 01       	movw	r30, r24
     ee0:	e6 0f       	add	r30, r22
     ee2:	f1 1d       	adc	r31, r1
     ee4:	67 fd       	sbrc	r22, 7
     ee6:	fa 95       	dec	r31
     ee8:	80 81       	ld	r24, Z
     eea:	81 11       	cpse	r24, r1
     eec:	0a c0       	rjmp	.+20     	; 0xf02 <uECC_vli_numBits+0x2a>
     eee:	61 50       	subi	r22, 0x01	; 1
     ef0:	42 f0       	brmi	.+16     	; 0xf02 <uECC_vli_numBits+0x2a>
     ef2:	f9 01       	movw	r30, r18
     ef4:	e6 0f       	add	r30, r22
     ef6:	f1 1d       	adc	r31, r1
     ef8:	67 fd       	sbrc	r22, 7
     efa:	fa 95       	dec	r31
     efc:	90 81       	ld	r25, Z
     efe:	99 23       	and	r25, r25
     f00:	b1 f3       	breq	.-20     	; 0xeee <uECC_vli_numBits+0x16>
     f02:	6f 5f       	subi	r22, 0xFF	; 255
     f04:	e9 f0       	breq	.+58     	; 0xf40 <uECC_vli_numBits+0x68>
     f06:	26 0f       	add	r18, r22
     f08:	31 1d       	adc	r19, r1
     f0a:	67 fd       	sbrc	r22, 7
     f0c:	3a 95       	dec	r19
     f0e:	f9 01       	movw	r30, r18
     f10:	31 97       	sbiw	r30, 0x01	; 1
     f12:	80 81       	ld	r24, Z
     f14:	88 23       	and	r24, r24
     f16:	31 f0       	breq	.+12     	; 0xf24 <uECC_vli_numBits+0x4c>
     f18:	20 e0       	ldi	r18, 0x00	; 0
     f1a:	86 95       	lsr	r24
     f1c:	2f 5f       	subi	r18, 0xFF	; 255
     f1e:	81 11       	cpse	r24, r1
     f20:	fc cf       	rjmp	.-8      	; 0xf1a <uECC_vli_numBits+0x42>
     f22:	01 c0       	rjmp	.+2      	; 0xf26 <uECC_vli_numBits+0x4e>
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	86 2f       	mov	r24, r22
     f28:	66 0f       	add	r22, r22
     f2a:	99 0b       	sbc	r25, r25
     f2c:	01 97       	sbiw	r24, 0x01	; 1
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	88 0f       	add	r24, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	82 0f       	add	r24, r18
     f3c:	91 1d       	adc	r25, r1
     f3e:	08 95       	ret
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	08 95       	ret

00000f46 <uECC_vli_cmp_unsafe>:
     f46:	dc 01       	movw	r26, r24
     f48:	41 50       	subi	r20, 0x01	; 1
     f4a:	2a f1       	brmi	.+74     	; 0xf96 <uECC_vli_cmp_unsafe+0x50>
     f4c:	84 2f       	mov	r24, r20
     f4e:	04 2e       	mov	r0, r20
     f50:	00 0c       	add	r0, r0
     f52:	99 0b       	sbc	r25, r25
     f54:	fd 01       	movw	r30, r26
     f56:	e8 0f       	add	r30, r24
     f58:	f9 1f       	adc	r31, r25
     f5a:	20 81       	ld	r18, Z
     f5c:	fb 01       	movw	r30, r22
     f5e:	e8 0f       	add	r30, r24
     f60:	f9 1f       	adc	r31, r25
     f62:	80 81       	ld	r24, Z
     f64:	82 17       	cp	r24, r18
     f66:	c8 f0       	brcs	.+50     	; 0xf9a <uECC_vli_cmp_unsafe+0x54>
     f68:	28 17       	cp	r18, r24
     f6a:	88 f4       	brcc	.+34     	; 0xf8e <uECC_vli_cmp_unsafe+0x48>
     f6c:	18 c0       	rjmp	.+48     	; 0xf9e <uECC_vli_cmp_unsafe+0x58>
     f6e:	24 2f       	mov	r18, r20
     f70:	04 2e       	mov	r0, r20
     f72:	00 0c       	add	r0, r0
     f74:	33 0b       	sbc	r19, r19
     f76:	fd 01       	movw	r30, r26
     f78:	e2 0f       	add	r30, r18
     f7a:	f3 1f       	adc	r31, r19
     f7c:	50 81       	ld	r21, Z
     f7e:	fb 01       	movw	r30, r22
     f80:	e2 0f       	add	r30, r18
     f82:	f3 1f       	adc	r31, r19
     f84:	90 81       	ld	r25, Z
     f86:	95 17       	cp	r25, r21
     f88:	60 f0       	brcs	.+24     	; 0xfa2 <uECC_vli_cmp_unsafe+0x5c>
     f8a:	59 17       	cp	r21, r25
     f8c:	60 f0       	brcs	.+24     	; 0xfa6 <uECC_vli_cmp_unsafe+0x60>
     f8e:	41 50       	subi	r20, 0x01	; 1
     f90:	72 f7       	brpl	.-36     	; 0xf6e <uECC_vli_cmp_unsafe+0x28>
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	08 95       	ret
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	08 95       	ret
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	08 95       	ret
     f9e:	8f ef       	ldi	r24, 0xFF	; 255
     fa0:	08 95       	ret
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	08 95       	ret
     fa6:	8f ef       	ldi	r24, 0xFF	; 255
     fa8:	08 95       	ret

00000faa <uECC_vli_cmp>:
     faa:	0f 93       	push	r16
     fac:	1f 93       	push	r17
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	cd b7       	in	r28, 0x3d	; 61
     fb4:	de b7       	in	r29, 0x3e	; 62
     fb6:	a0 97       	sbiw	r28, 0x20	; 32
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	f8 94       	cli
     fbc:	de bf       	out	0x3e, r29	; 62
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	cd bf       	out	0x3d, r28	; 61
     fc2:	14 2f       	mov	r17, r20
     fc4:	24 2f       	mov	r18, r20
     fc6:	ab 01       	movw	r20, r22
     fc8:	bc 01       	movw	r22, r24
     fca:	ce 01       	movw	r24, r28
     fcc:	01 96       	adiw	r24, 0x01	; 1
     fce:	4b de       	rcall	.-874    	; 0xc66 <uECC_vli_sub>
     fd0:	08 2f       	mov	r16, r24
     fd2:	61 2f       	mov	r22, r17
     fd4:	ce 01       	movw	r24, r28
     fd6:	01 96       	adiw	r24, 0x01	; 1
     fd8:	53 df       	rcall	.-346    	; 0xe80 <uECC_vli_isZero>
     fda:	91 e0       	ldi	r25, 0x01	; 1
     fdc:	81 11       	cpse	r24, r1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	01 11       	cpse	r16, r1
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <uECC_vli_cmp+0x3e>
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	88 0f       	add	r24, r24
     fea:	98 1b       	sub	r25, r24
     fec:	89 2f       	mov	r24, r25
     fee:	a0 96       	adiw	r28, 0x20	; 32
     ff0:	0f b6       	in	r0, 0x3f	; 63
     ff2:	f8 94       	cli
     ff4:	de bf       	out	0x3e, r29	; 62
     ff6:	0f be       	out	0x3f, r0	; 63
     ff8:	cd bf       	out	0x3d, r28	; 61
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	1f 91       	pop	r17
    1000:	0f 91       	pop	r16
    1002:	08 95       	ret

00001004 <uECC_vli_modAdd>:
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	cf 93       	push	r28
    100c:	df 93       	push	r29
    100e:	ec 01       	movw	r28, r24
    1010:	79 01       	movw	r14, r18
    1012:	20 2f       	mov	r18, r16
    1014:	57 dd       	rcall	.-1362   	; 0xac4 <uECC_vli_add>
    1016:	81 11       	cpse	r24, r1
    1018:	06 c0       	rjmp	.+12     	; 0x1026 <uECC_vli_modAdd+0x22>
    101a:	40 2f       	mov	r20, r16
    101c:	be 01       	movw	r22, r28
    101e:	c7 01       	movw	r24, r14
    1020:	92 df       	rcall	.-220    	; 0xf46 <uECC_vli_cmp_unsafe>
    1022:	81 30       	cpi	r24, 0x01	; 1
    1024:	29 f0       	breq	.+10     	; 0x1030 <uECC_vli_modAdd+0x2c>
    1026:	20 2f       	mov	r18, r16
    1028:	a7 01       	movw	r20, r14
    102a:	be 01       	movw	r22, r28
    102c:	ce 01       	movw	r24, r28
    102e:	1b de       	rcall	.-970    	; 0xc66 <uECC_vli_sub>
    1030:	df 91       	pop	r29
    1032:	cf 91       	pop	r28
    1034:	0f 91       	pop	r16
    1036:	ff 90       	pop	r15
    1038:	ef 90       	pop	r14
    103a:	08 95       	ret

0000103c <uECC_vli_modSub>:
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
    1046:	ec 01       	movw	r28, r24
    1048:	79 01       	movw	r14, r18
    104a:	20 2f       	mov	r18, r16
    104c:	0c de       	rcall	.-1000   	; 0xc66 <uECC_vli_sub>
    104e:	88 23       	and	r24, r24
    1050:	29 f0       	breq	.+10     	; 0x105c <uECC_vli_modSub+0x20>
    1052:	20 2f       	mov	r18, r16
    1054:	a7 01       	movw	r20, r14
    1056:	be 01       	movw	r22, r28
    1058:	ce 01       	movw	r24, r28
    105a:	34 dd       	rcall	.-1432   	; 0xac4 <uECC_vli_add>
    105c:	df 91       	pop	r29
    105e:	cf 91       	pop	r28
    1060:	0f 91       	pop	r16
    1062:	ff 90       	pop	r15
    1064:	ef 90       	pop	r14
    1066:	08 95       	ret

00001068 <uECC_vli_modMult>:
    1068:	2f 92       	push	r2
    106a:	3f 92       	push	r3
    106c:	4f 92       	push	r4
    106e:	5f 92       	push	r5
    1070:	6f 92       	push	r6
    1072:	7f 92       	push	r7
    1074:	8f 92       	push	r8
    1076:	9f 92       	push	r9
    1078:	af 92       	push	r10
    107a:	bf 92       	push	r11
    107c:	cf 92       	push	r12
    107e:	df 92       	push	r13
    1080:	ef 92       	push	r14
    1082:	ff 92       	push	r15
    1084:	0f 93       	push	r16
    1086:	1f 93       	push	r17
    1088:	cf 93       	push	r28
    108a:	df 93       	push	r29
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
    1090:	cc 5c       	subi	r28, 0xCC	; 204
    1092:	d1 09       	sbc	r29, r1
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	c7 53       	subi	r28, 0x37	; 55
    10a0:	df 4f       	sbci	r29, 0xFF	; 255
    10a2:	99 83       	std	Y+1, r25	; 0x01
    10a4:	88 83       	st	Y, r24
    10a6:	c9 5c       	subi	r28, 0xC9	; 201
    10a8:	d0 40       	sbci	r29, 0x00	; 0
    10aa:	c2 2e       	mov	r12, r18
    10ac:	d3 2e       	mov	r13, r19
    10ae:	a0 2e       	mov	r10, r16
    10b0:	20 2f       	mov	r18, r16
    10b2:	8e 01       	movw	r16, r28
    10b4:	0f 5f       	subi	r16, 0xFF	; 255
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	c8 01       	movw	r24, r16
    10ba:	a6 de       	rcall	.-692    	; 0xe08 <uECC_vli_mult>
    10bc:	ce 01       	movw	r24, r28
    10be:	8f 5b       	subi	r24, 0xBF	; 191
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	cf 53       	subi	r28, 0x3F	; 63
    10c4:	df 4f       	sbci	r29, 0xFF	; 255
    10c6:	99 83       	std	Y+1, r25	; 0x01
    10c8:	88 83       	st	Y, r24
    10ca:	c1 5c       	subi	r28, 0xC1	; 193
    10cc:	d0 40       	sbci	r29, 0x00	; 0
    10ce:	cd 53       	subi	r28, 0x3D	; 61
    10d0:	df 4f       	sbci	r29, 0xFF	; 255
    10d2:	19 83       	std	Y+1, r17	; 0x01
    10d4:	08 83       	st	Y, r16
    10d6:	c3 5c       	subi	r28, 0xC3	; 195
    10d8:	d0 40       	sbci	r29, 0x00	; 0
    10da:	8a 2c       	mov	r8, r10
    10dc:	0a 2c       	mov	r0, r10
    10de:	00 0c       	add	r0, r0
    10e0:	99 08       	sbc	r9, r9
    10e2:	6a 2d       	mov	r22, r10
    10e4:	8c 2d       	mov	r24, r12
    10e6:	9d 2d       	mov	r25, r13
    10e8:	f7 de       	rcall	.-530    	; 0xed8 <uECC_vli_numBits>
    10ea:	34 01       	movw	r6, r8
    10ec:	66 0c       	add	r6, r6
    10ee:	77 1c       	adc	r7, r7
    10f0:	66 0c       	add	r6, r6
    10f2:	77 1c       	adc	r7, r7
    10f4:	66 0c       	add	r6, r6
    10f6:	77 1c       	adc	r7, r7
    10f8:	66 0c       	add	r6, r6
    10fa:	77 1c       	adc	r7, r7
    10fc:	68 1a       	sub	r6, r24
    10fe:	79 0a       	sbc	r7, r25
    1100:	73 01       	movw	r14, r6
    1102:	1a f4       	brpl	.+6      	; 0x110a <__stack+0xb>
    1104:	27 e0       	ldi	r18, 0x07	; 7
    1106:	e2 0e       	add	r14, r18
    1108:	f1 1c       	adc	r15, r1
    110a:	f5 94       	asr	r15
    110c:	e7 94       	ror	r14
    110e:	f5 94       	asr	r15
    1110:	e7 94       	ror	r14
    1112:	f5 94       	asr	r15
    1114:	e7 94       	ror	r14
    1116:	c3 01       	movw	r24, r6
    1118:	87 70       	andi	r24, 0x07	; 7
    111a:	90 78       	andi	r25, 0x80	; 128
    111c:	99 23       	and	r25, r25
    111e:	24 f4       	brge	.+8      	; 0x1128 <__stack+0x29>
    1120:	01 97       	sbiw	r24, 0x01	; 1
    1122:	88 6f       	ori	r24, 0xF8	; 248
    1124:	9f 6f       	ori	r25, 0xFF	; 255
    1126:	01 96       	adiw	r24, 0x01	; 1
    1128:	18 2f       	mov	r17, r24
    112a:	6e 2d       	mov	r22, r14
    112c:	ce 01       	movw	r24, r28
    112e:	8f 57       	subi	r24, 0x7F	; 127
    1130:	9f 4f       	sbci	r25, 0xFF	; 255
    1132:	e2 db       	rcall	.-2108   	; 0x8f8 <uECC_vli_clear>
    1134:	11 16       	cp	r1, r17
    1136:	c4 f5       	brge	.+112    	; 0x11a8 <__stack+0xa9>
    1138:	aa 20       	and	r10, r10
    113a:	09 f4       	brne	.+2      	; 0x113e <__stack+0x3f>
    113c:	41 c0       	rjmp	.+130    	; 0x11c0 <__stack+0xc1>
    113e:	ac 2d       	mov	r26, r12
    1140:	bd 2d       	mov	r27, r13
    1142:	0e 2c       	mov	r0, r14
    1144:	00 0c       	add	r0, r0
    1146:	ff 08       	sbc	r15, r15
    1148:	e1 e8       	ldi	r30, 0x81	; 129
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	ec 0f       	add	r30, r28
    114e:	fd 1f       	adc	r31, r29
    1150:	ee 0d       	add	r30, r14
    1152:	ff 1d       	adc	r31, r15
    1154:	8f ef       	ldi	r24, 0xFF	; 255
    1156:	8a 0d       	add	r24, r10
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	e8 0e       	add	r14, r24
    115e:	f9 1e       	adc	r15, r25
    1160:	41 e8       	ldi	r20, 0x81	; 129
    1162:	50 e0       	ldi	r21, 0x00	; 0
    1164:	4c 0f       	add	r20, r28
    1166:	5d 1f       	adc	r21, r29
    1168:	4e 0d       	add	r20, r14
    116a:	5f 1d       	adc	r21, r15
    116c:	00 e0       	ldi	r16, 0x00	; 0
    116e:	68 e0       	ldi	r22, 0x08	; 8
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	61 1b       	sub	r22, r17
    1174:	71 09       	sbc	r23, r1
    1176:	17 fd       	sbrc	r17, 7
    1178:	73 95       	inc	r23
    117a:	9d 91       	ld	r25, X+
    117c:	89 2f       	mov	r24, r25
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	9c 01       	movw	r18, r24
    1182:	01 2e       	mov	r0, r17
    1184:	02 c0       	rjmp	.+4      	; 0x118a <__stack+0x8b>
    1186:	22 0f       	add	r18, r18
    1188:	33 1f       	adc	r19, r19
    118a:	0a 94       	dec	r0
    118c:	e2 f7       	brpl	.-8      	; 0x1186 <__stack+0x87>
    118e:	20 2b       	or	r18, r16
    1190:	21 93       	st	Z+, r18
    1192:	06 2e       	mov	r0, r22
    1194:	02 c0       	rjmp	.+4      	; 0x119a <__stack+0x9b>
    1196:	95 95       	asr	r25
    1198:	87 95       	ror	r24
    119a:	0a 94       	dec	r0
    119c:	e2 f7       	brpl	.-8      	; 0x1196 <__stack+0x97>
    119e:	08 2f       	mov	r16, r24
    11a0:	e4 17       	cp	r30, r20
    11a2:	f5 07       	cpc	r31, r21
    11a4:	51 f7       	brne	.-44     	; 0x117a <__stack+0x7b>
    11a6:	0c c0       	rjmp	.+24     	; 0x11c0 <__stack+0xc1>
    11a8:	4a 2d       	mov	r20, r10
    11aa:	6c 2d       	mov	r22, r12
    11ac:	7d 2d       	mov	r23, r13
    11ae:	81 e8       	ldi	r24, 0x81	; 129
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	8c 0f       	add	r24, r28
    11b4:	9d 1f       	adc	r25, r29
    11b6:	8e 0d       	add	r24, r14
    11b8:	91 1d       	adc	r25, r1
    11ba:	e7 fc       	sbrc	r14, 7
    11bc:	9a 95       	dec	r25
    11be:	c3 db       	rcall	.-2170   	; 0x946 <uECC_vli_set>
    11c0:	77 20       	and	r7, r7
    11c2:	0c f4       	brge	.+2      	; 0x11c6 <__stack+0xc7>
    11c4:	a6 c0       	rjmp	.+332    	; 0x1312 <__stack+0x213>
    11c6:	84 01       	movw	r16, r8
    11c8:	00 0f       	add	r16, r16
    11ca:	11 1f       	adc	r17, r17
    11cc:	bb 24       	eor	r11, r11
    11ce:	b3 94       	inc	r11
    11d0:	44 24       	eor	r4, r4
    11d2:	43 94       	inc	r4
    11d4:	51 2c       	mov	r5, r1
    11d6:	7e 01       	movw	r14, r28
    11d8:	31 e8       	ldi	r19, 0x81	; 129
    11da:	e3 0e       	add	r14, r19
    11dc:	f1 1c       	adc	r15, r1
    11de:	c9 53       	subi	r28, 0x39	; 57
    11e0:	df 4f       	sbci	r29, 0xFF	; 255
    11e2:	e8 82       	st	Y, r14
    11e4:	c7 5c       	subi	r28, 0xC7	; 199
    11e6:	d0 40       	sbci	r29, 0x00	; 0
    11e8:	c8 53       	subi	r28, 0x38	; 56
    11ea:	df 4f       	sbci	r29, 0xFF	; 255
    11ec:	f8 82       	st	Y, r15
    11ee:	c8 5c       	subi	r28, 0xC8	; 200
    11f0:	d0 40       	sbci	r29, 0x00	; 0
    11f2:	dd 24       	eor	r13, r13
    11f4:	d3 94       	inc	r13
    11f6:	c1 2c       	mov	r12, r1
    11f8:	c4 01       	movw	r24, r8
    11fa:	01 97       	sbiw	r24, 0x01	; 1
    11fc:	17 01       	movw	r2, r14
    11fe:	28 0e       	add	r2, r24
    1200:	39 1e       	adc	r3, r25
    1202:	8e 0c       	add	r8, r14
    1204:	9f 1c       	adc	r9, r15
    1206:	c7 01       	movw	r24, r14
    1208:	8a 0d       	add	r24, r10
    120a:	91 1d       	adc	r25, r1
    120c:	a7 fc       	sbrc	r10, 7
    120e:	9a 95       	dec	r25
    1210:	cb 53       	subi	r28, 0x3B	; 59
    1212:	df 4f       	sbci	r29, 0xFF	; 255
    1214:	99 83       	std	Y+1, r25	; 0x01
    1216:	88 83       	st	Y, r24
    1218:	c5 5c       	subi	r28, 0xC5	; 197
    121a:	d0 40       	sbci	r29, 0x00	; 0
    121c:	57 c0       	rjmp	.+174    	; 0x12cc <__stack+0x1cd>
    121e:	e6 2f       	mov	r30, r22
    1220:	06 2e       	mov	r0, r22
    1222:	00 0c       	add	r0, r0
    1224:	ff 0b       	sbc	r31, r31
    1226:	da 01       	movw	r26, r20
    1228:	ae 0f       	add	r26, r30
    122a:	bf 1f       	adc	r27, r31
    122c:	bc 90       	ld	r11, X
    122e:	c5 53       	subi	r28, 0x35	; 53
    1230:	df 4f       	sbci	r29, 0xFF	; 255
    1232:	b8 82       	st	Y, r11
    1234:	cb 5c       	subi	r28, 0xCB	; 203
    1236:	d0 40       	sbci	r29, 0x00	; 0
    1238:	8e 0d       	add	r24, r14
    123a:	9f 1d       	adc	r25, r15
    123c:	dc 01       	movw	r26, r24
    123e:	8c 91       	ld	r24, X
    1240:	b8 1a       	sub	r11, r24
    1242:	8b 2d       	mov	r24, r11
    1244:	87 1b       	sub	r24, r23
    1246:	c5 53       	subi	r28, 0x35	; 53
    1248:	df 4f       	sbci	r29, 0xFF	; 255
    124a:	b8 81       	ld	r27, Y
    124c:	cb 5c       	subi	r28, 0xCB	; 203
    124e:	d0 40       	sbci	r29, 0x00	; 0
    1250:	b8 17       	cp	r27, r24
    1252:	21 f0       	breq	.+8      	; 0x125c <__stack+0x15d>
    1254:	7d 2d       	mov	r23, r13
    1256:	b8 17       	cp	r27, r24
    1258:	08 f0       	brcs	.+2      	; 0x125c <__stack+0x15d>
    125a:	7c 2d       	mov	r23, r12
    125c:	e2 0f       	add	r30, r18
    125e:	f3 1f       	adc	r31, r19
    1260:	80 83       	st	Z, r24
    1262:	6f 5f       	subi	r22, 0xFF	; 255
    1264:	86 2f       	mov	r24, r22
    1266:	06 2e       	mov	r0, r22
    1268:	00 0c       	add	r0, r0
    126a:	99 0b       	sbc	r25, r25
    126c:	80 17       	cp	r24, r16
    126e:	91 07       	cpc	r25, r17
    1270:	b4 f2       	brlt	.-84     	; 0x121e <__stack+0x11f>
    1272:	c4 53       	subi	r28, 0x34	; 52
    1274:	df 4f       	sbci	r29, 0xFF	; 255
    1276:	b8 80       	ld	r11, Y
    1278:	cc 5c       	subi	r28, 0xCC	; 204
    127a:	d0 40       	sbci	r29, 0x00	; 0
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <__stack+0x181>
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	b7 12       	cpse	r11, r23
    1284:	80 e0       	ldi	r24, 0x00	; 0
    1286:	b8 2e       	mov	r11, r24
    1288:	6a 2d       	mov	r22, r10
    128a:	c9 53       	subi	r28, 0x39	; 57
    128c:	df 4f       	sbci	r29, 0xFF	; 255
    128e:	88 81       	ld	r24, Y
    1290:	c7 5c       	subi	r28, 0xC7	; 199
    1292:	d0 40       	sbci	r29, 0x00	; 0
    1294:	c8 53       	subi	r28, 0x38	; 56
    1296:	df 4f       	sbci	r29, 0xFF	; 255
    1298:	98 81       	ld	r25, Y
    129a:	c8 5c       	subi	r28, 0xC8	; 200
    129c:	d0 40       	sbci	r29, 0x00	; 0
    129e:	a0 db       	rcall	.-2240   	; 0x9e0 <uECC_vli_rshift1>
    12a0:	f4 01       	movw	r30, r8
    12a2:	80 81       	ld	r24, Z
    12a4:	f0 e8       	ldi	r31, 0x80	; 128
    12a6:	8f 9f       	mul	r24, r31
    12a8:	c0 01       	movw	r24, r0
    12aa:	11 24       	eor	r1, r1
    12ac:	d1 01       	movw	r26, r2
    12ae:	9c 91       	ld	r25, X
    12b0:	89 2b       	or	r24, r25
    12b2:	8c 93       	st	X, r24
    12b4:	6a 2d       	mov	r22, r10
    12b6:	cb 53       	subi	r28, 0x3B	; 59
    12b8:	df 4f       	sbci	r29, 0xFF	; 255
    12ba:	88 81       	ld	r24, Y
    12bc:	99 81       	ldd	r25, Y+1	; 0x01
    12be:	c5 5c       	subi	r28, 0xC5	; 197
    12c0:	d0 40       	sbci	r29, 0x00	; 0
    12c2:	8e db       	rcall	.-2276   	; 0x9e0 <uECC_vli_rshift1>
    12c4:	b1 e0       	ldi	r27, 0x01	; 1
    12c6:	6b 1a       	sub	r6, r27
    12c8:	71 08       	sbc	r7, r1
    12ca:	28 f1       	brcs	.+74     	; 0x1316 <__stack+0x217>
    12cc:	10 16       	cp	r1, r16
    12ce:	11 06       	cpc	r1, r17
    12d0:	b4 f6       	brge	.-84     	; 0x127e <__stack+0x17f>
    12d2:	8b 2d       	mov	r24, r11
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	fc 01       	movw	r30, r24
    12d8:	ee 0f       	add	r30, r30
    12da:	ff 1f       	adc	r31, r31
    12dc:	21 ec       	ldi	r18, 0xC1	; 193
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	2c 0f       	add	r18, r28
    12e2:	3d 1f       	adc	r19, r29
    12e4:	e2 0f       	add	r30, r18
    12e6:	f3 1f       	adc	r31, r19
    12e8:	40 81       	ld	r20, Z
    12ea:	51 81       	ldd	r21, Z+1	; 0x01
    12ec:	f2 01       	movw	r30, r4
    12ee:	e8 1b       	sub	r30, r24
    12f0:	f9 0b       	sbc	r31, r25
    12f2:	ee 0f       	add	r30, r30
    12f4:	ff 1f       	adc	r31, r31
    12f6:	e2 0f       	add	r30, r18
    12f8:	f3 1f       	adc	r31, r19
    12fa:	20 81       	ld	r18, Z
    12fc:	31 81       	ldd	r19, Z+1	; 0x01
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	80 e0       	ldi	r24, 0x00	; 0
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	c4 53       	subi	r28, 0x34	; 52
    1308:	df 4f       	sbci	r29, 0xFF	; 255
    130a:	b8 82       	st	Y, r11
    130c:	cc 5c       	subi	r28, 0xCC	; 204
    130e:	d0 40       	sbci	r29, 0x00	; 0
    1310:	86 cf       	rjmp	.-244    	; 0x121e <__stack+0x11f>
    1312:	bb 24       	eor	r11, r11
    1314:	b3 94       	inc	r11
    1316:	eb 2d       	mov	r30, r11
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	ee 0f       	add	r30, r30
    131c:	ff 1f       	adc	r31, r31
    131e:	81 ec       	ldi	r24, 0xC1	; 193
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	8c 0f       	add	r24, r28
    1324:	9d 1f       	adc	r25, r29
    1326:	e8 0f       	add	r30, r24
    1328:	f9 1f       	adc	r31, r25
    132a:	60 81       	ld	r22, Z
    132c:	71 81       	ldd	r23, Z+1	; 0x01
    132e:	4a 2d       	mov	r20, r10
    1330:	c7 53       	subi	r28, 0x37	; 55
    1332:	df 4f       	sbci	r29, 0xFF	; 255
    1334:	88 81       	ld	r24, Y
    1336:	99 81       	ldd	r25, Y+1	; 0x01
    1338:	c9 5c       	subi	r28, 0xC9	; 201
    133a:	d0 40       	sbci	r29, 0x00	; 0
    133c:	04 db       	rcall	.-2552   	; 0x946 <uECC_vli_set>
    133e:	c4 53       	subi	r28, 0x34	; 52
    1340:	df 4f       	sbci	r29, 0xFF	; 255
    1342:	0f b6       	in	r0, 0x3f	; 63
    1344:	f8 94       	cli
    1346:	de bf       	out	0x3e, r29	; 62
    1348:	0f be       	out	0x3f, r0	; 63
    134a:	cd bf       	out	0x3d, r28	; 61
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	ff 90       	pop	r15
    1356:	ef 90       	pop	r14
    1358:	df 90       	pop	r13
    135a:	cf 90       	pop	r12
    135c:	bf 90       	pop	r11
    135e:	af 90       	pop	r10
    1360:	9f 90       	pop	r9
    1362:	8f 90       	pop	r8
    1364:	7f 90       	pop	r7
    1366:	6f 90       	pop	r6
    1368:	5f 90       	pop	r5
    136a:	4f 90       	pop	r4
    136c:	3f 90       	pop	r3
    136e:	2f 90       	pop	r2
    1370:	08 95       	ret

00001372 <uECC_vli_modMult_fast>:
    1372:	ef 92       	push	r14
    1374:	ff 92       	push	r15
    1376:	0f 93       	push	r16
    1378:	1f 93       	push	r17
    137a:	cf 93       	push	r28
    137c:	df 93       	push	r29
    137e:	cd b7       	in	r28, 0x3d	; 61
    1380:	de b7       	in	r29, 0x3e	; 62
    1382:	c0 54       	subi	r28, 0x40	; 64
    1384:	d1 09       	sbc	r29, r1
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	f8 94       	cli
    138a:	de bf       	out	0x3e, r29	; 62
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	cd bf       	out	0x3d, r28	; 61
    1390:	7c 01       	movw	r14, r24
    1392:	89 01       	movw	r16, r18
    1394:	f9 01       	movw	r30, r18
    1396:	20 81       	ld	r18, Z
    1398:	ce 01       	movw	r24, r28
    139a:	01 96       	adiw	r24, 0x01	; 1
    139c:	35 dd       	rcall	.-1430   	; 0xe08 <uECC_vli_mult>
    139e:	f8 01       	movw	r30, r16
    13a0:	e6 55       	subi	r30, 0x56	; 86
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	01 90       	ld	r0, Z+
    13a6:	f0 81       	ld	r31, Z
    13a8:	e0 2d       	mov	r30, r0
    13aa:	be 01       	movw	r22, r28
    13ac:	6f 5f       	subi	r22, 0xFF	; 255
    13ae:	7f 4f       	sbci	r23, 0xFF	; 255
    13b0:	c7 01       	movw	r24, r14
    13b2:	09 95       	icall
    13b4:	c0 5c       	subi	r28, 0xC0	; 192
    13b6:	df 4f       	sbci	r29, 0xFF	; 255
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	de bf       	out	0x3e, r29	; 62
    13be:	0f be       	out	0x3f, r0	; 63
    13c0:	cd bf       	out	0x3d, r28	; 61
    13c2:	df 91       	pop	r29
    13c4:	cf 91       	pop	r28
    13c6:	1f 91       	pop	r17
    13c8:	0f 91       	pop	r16
    13ca:	ff 90       	pop	r15
    13cc:	ef 90       	pop	r14
    13ce:	08 95       	ret

000013d0 <uECC_vli_modSquare_fast>:
    13d0:	9a 01       	movw	r18, r20
    13d2:	ab 01       	movw	r20, r22
    13d4:	ce cf       	rjmp	.-100    	; 0x1372 <uECC_vli_modMult_fast>
    13d6:	08 95       	ret

000013d8 <vli_modInv_update>:
    13d8:	0f 93       	push	r16
    13da:	1f 93       	push	r17
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	8c 01       	movw	r16, r24
    13e2:	c4 2f       	mov	r28, r20
    13e4:	fc 01       	movw	r30, r24
    13e6:	80 81       	ld	r24, Z
    13e8:	80 ff       	sbrs	r24, 0
    13ea:	15 c0       	rjmp	.+42     	; 0x1416 <vli_modInv_update+0x3e>
    13ec:	24 2f       	mov	r18, r20
    13ee:	ab 01       	movw	r20, r22
    13f0:	b8 01       	movw	r22, r16
    13f2:	c8 01       	movw	r24, r16
    13f4:	67 db       	rcall	.-2354   	; 0xac4 <uECC_vli_add>
    13f6:	d8 2f       	mov	r29, r24
    13f8:	6c 2f       	mov	r22, r28
    13fa:	c8 01       	movw	r24, r16
    13fc:	f1 da       	rcall	.-2590   	; 0x9e0 <uECC_vli_rshift1>
    13fe:	dd 23       	and	r29, r29
    1400:	69 f0       	breq	.+26     	; 0x141c <vli_modInv_update+0x44>
    1402:	ec 2f       	mov	r30, r28
    1404:	cc 0f       	add	r28, r28
    1406:	ff 0b       	sbc	r31, r31
    1408:	31 97       	sbiw	r30, 0x01	; 1
    140a:	e0 0f       	add	r30, r16
    140c:	f1 1f       	adc	r31, r17
    140e:	80 81       	ld	r24, Z
    1410:	80 68       	ori	r24, 0x80	; 128
    1412:	80 83       	st	Z, r24
    1414:	03 c0       	rjmp	.+6      	; 0x141c <vli_modInv_update+0x44>
    1416:	64 2f       	mov	r22, r20
    1418:	c8 01       	movw	r24, r16
    141a:	e2 da       	rcall	.-2620   	; 0x9e0 <uECC_vli_rshift1>
    141c:	df 91       	pop	r29
    141e:	cf 91       	pop	r28
    1420:	1f 91       	pop	r17
    1422:	0f 91       	pop	r16
    1424:	08 95       	ret

00001426 <uECC_vli_modInv>:
    1426:	af 92       	push	r10
    1428:	bf 92       	push	r11
    142a:	cf 92       	push	r12
    142c:	df 92       	push	r13
    142e:	ef 92       	push	r14
    1430:	ff 92       	push	r15
    1432:	1f 93       	push	r17
    1434:	cf 93       	push	r28
    1436:	df 93       	push	r29
    1438:	cd b7       	in	r28, 0x3d	; 61
    143a:	de b7       	in	r29, 0x3e	; 62
    143c:	c0 58       	subi	r28, 0x80	; 128
    143e:	d1 09       	sbc	r29, r1
    1440:	0f b6       	in	r0, 0x3f	; 63
    1442:	f8 94       	cli
    1444:	de bf       	out	0x3e, r29	; 62
    1446:	0f be       	out	0x3f, r0	; 63
    1448:	cd bf       	out	0x3d, r28	; 61
    144a:	5c 01       	movw	r10, r24
    144c:	6b 01       	movw	r12, r22
    144e:	7a 01       	movw	r14, r20
    1450:	12 2f       	mov	r17, r18
    1452:	62 2f       	mov	r22, r18
    1454:	c6 01       	movw	r24, r12
    1456:	14 dd       	rcall	.-1496   	; 0xe80 <uECC_vli_isZero>
    1458:	88 23       	and	r24, r24
    145a:	21 f0       	breq	.+8      	; 0x1464 <uECC_vli_modInv+0x3e>
    145c:	61 2f       	mov	r22, r17
    145e:	c5 01       	movw	r24, r10
    1460:	4b da       	rcall	.-2922   	; 0x8f8 <uECC_vli_clear>
    1462:	a1 c0       	rjmp	.+322    	; 0x15a6 <uECC_vli_modInv+0x180>
    1464:	41 2f       	mov	r20, r17
    1466:	b6 01       	movw	r22, r12
    1468:	ce 01       	movw	r24, r28
    146a:	01 96       	adiw	r24, 0x01	; 1
    146c:	6c da       	rcall	.-2856   	; 0x946 <uECC_vli_set>
    146e:	41 2f       	mov	r20, r17
    1470:	b7 01       	movw	r22, r14
    1472:	ce 01       	movw	r24, r28
    1474:	81 96       	adiw	r24, 0x21	; 33
    1476:	67 da       	rcall	.-2866   	; 0x946 <uECC_vli_set>
    1478:	61 2f       	mov	r22, r17
    147a:	ce 01       	movw	r24, r28
    147c:	8f 5b       	subi	r24, 0xBF	; 191
    147e:	9f 4f       	sbci	r25, 0xFF	; 255
    1480:	3b da       	rcall	.-2954   	; 0x8f8 <uECC_vli_clear>
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	22 96       	adiw	r28, 0x02	; 2
    1486:	8f af       	std	Y+63, r24	; 0x3f
    1488:	22 97       	sbiw	r28, 0x02	; 2
    148a:	61 2f       	mov	r22, r17
    148c:	ce 01       	movw	r24, r28
    148e:	8f 59       	subi	r24, 0x9F	; 159
    1490:	9f 4f       	sbci	r25, 0xFF	; 255
    1492:	32 da       	rcall	.-2972   	; 0x8f8 <uECC_vli_clear>
    1494:	79 c0       	rjmp	.+242    	; 0x1588 <uECC_vli_modInv+0x162>
    1496:	99 81       	ldd	r25, Y+1	; 0x01
    1498:	90 fd       	sbrc	r25, 0
    149a:	0b c0       	rjmp	.+22     	; 0x14b2 <uECC_vli_modInv+0x8c>
    149c:	61 2f       	mov	r22, r17
    149e:	ce 01       	movw	r24, r28
    14a0:	01 96       	adiw	r24, 0x01	; 1
    14a2:	9e da       	rcall	.-2756   	; 0x9e0 <uECC_vli_rshift1>
    14a4:	41 2f       	mov	r20, r17
    14a6:	b7 01       	movw	r22, r14
    14a8:	ce 01       	movw	r24, r28
    14aa:	8f 5b       	subi	r24, 0xBF	; 191
    14ac:	9f 4f       	sbci	r25, 0xFF	; 255
    14ae:	94 df       	rcall	.-216    	; 0x13d8 <vli_modInv_update>
    14b0:	6b c0       	rjmp	.+214    	; 0x1588 <uECC_vli_modInv+0x162>
    14b2:	99 a1       	ldd	r25, Y+33	; 0x21
    14b4:	90 fd       	sbrc	r25, 0
    14b6:	0b c0       	rjmp	.+22     	; 0x14ce <uECC_vli_modInv+0xa8>
    14b8:	61 2f       	mov	r22, r17
    14ba:	ce 01       	movw	r24, r28
    14bc:	81 96       	adiw	r24, 0x21	; 33
    14be:	90 da       	rcall	.-2784   	; 0x9e0 <uECC_vli_rshift1>
    14c0:	41 2f       	mov	r20, r17
    14c2:	b7 01       	movw	r22, r14
    14c4:	ce 01       	movw	r24, r28
    14c6:	8f 59       	subi	r24, 0x9F	; 159
    14c8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ca:	86 df       	rcall	.-244    	; 0x13d8 <vli_modInv_update>
    14cc:	5d c0       	rjmp	.+186    	; 0x1588 <uECC_vli_modInv+0x162>
    14ce:	18 16       	cp	r1, r24
    14d0:	74 f5       	brge	.+92     	; 0x152e <uECC_vli_modInv+0x108>
    14d2:	21 2f       	mov	r18, r17
    14d4:	ae 01       	movw	r20, r28
    14d6:	4f 5d       	subi	r20, 0xDF	; 223
    14d8:	5f 4f       	sbci	r21, 0xFF	; 255
    14da:	be 01       	movw	r22, r28
    14dc:	6f 5f       	subi	r22, 0xFF	; 255
    14de:	7f 4f       	sbci	r23, 0xFF	; 255
    14e0:	cb 01       	movw	r24, r22
    14e2:	c1 db       	rcall	.-2174   	; 0xc66 <uECC_vli_sub>
    14e4:	61 2f       	mov	r22, r17
    14e6:	ce 01       	movw	r24, r28
    14e8:	01 96       	adiw	r24, 0x01	; 1
    14ea:	7a da       	rcall	.-2828   	; 0x9e0 <uECC_vli_rshift1>
    14ec:	41 2f       	mov	r20, r17
    14ee:	be 01       	movw	r22, r28
    14f0:	6f 59       	subi	r22, 0x9F	; 159
    14f2:	7f 4f       	sbci	r23, 0xFF	; 255
    14f4:	ce 01       	movw	r24, r28
    14f6:	8f 5b       	subi	r24, 0xBF	; 191
    14f8:	9f 4f       	sbci	r25, 0xFF	; 255
    14fa:	25 dd       	rcall	.-1462   	; 0xf46 <uECC_vli_cmp_unsafe>
    14fc:	88 23       	and	r24, r24
    14fe:	3c f4       	brge	.+14     	; 0x150e <uECC_vli_modInv+0xe8>
    1500:	21 2f       	mov	r18, r17
    1502:	a7 01       	movw	r20, r14
    1504:	be 01       	movw	r22, r28
    1506:	6f 5b       	subi	r22, 0xBF	; 191
    1508:	7f 4f       	sbci	r23, 0xFF	; 255
    150a:	cb 01       	movw	r24, r22
    150c:	db da       	rcall	.-2634   	; 0xac4 <uECC_vli_add>
    150e:	21 2f       	mov	r18, r17
    1510:	ae 01       	movw	r20, r28
    1512:	4f 59       	subi	r20, 0x9F	; 159
    1514:	5f 4f       	sbci	r21, 0xFF	; 255
    1516:	be 01       	movw	r22, r28
    1518:	6f 5b       	subi	r22, 0xBF	; 191
    151a:	7f 4f       	sbci	r23, 0xFF	; 255
    151c:	cb 01       	movw	r24, r22
    151e:	a3 db       	rcall	.-2234   	; 0xc66 <uECC_vli_sub>
    1520:	41 2f       	mov	r20, r17
    1522:	b7 01       	movw	r22, r14
    1524:	ce 01       	movw	r24, r28
    1526:	8f 5b       	subi	r24, 0xBF	; 191
    1528:	9f 4f       	sbci	r25, 0xFF	; 255
    152a:	56 df       	rcall	.-340    	; 0x13d8 <vli_modInv_update>
    152c:	2d c0       	rjmp	.+90     	; 0x1588 <uECC_vli_modInv+0x162>
    152e:	21 2f       	mov	r18, r17
    1530:	ae 01       	movw	r20, r28
    1532:	4f 5f       	subi	r20, 0xFF	; 255
    1534:	5f 4f       	sbci	r21, 0xFF	; 255
    1536:	be 01       	movw	r22, r28
    1538:	6f 5d       	subi	r22, 0xDF	; 223
    153a:	7f 4f       	sbci	r23, 0xFF	; 255
    153c:	cb 01       	movw	r24, r22
    153e:	93 db       	rcall	.-2266   	; 0xc66 <uECC_vli_sub>
    1540:	61 2f       	mov	r22, r17
    1542:	ce 01       	movw	r24, r28
    1544:	81 96       	adiw	r24, 0x21	; 33
    1546:	4c da       	rcall	.-2920   	; 0x9e0 <uECC_vli_rshift1>
    1548:	41 2f       	mov	r20, r17
    154a:	be 01       	movw	r22, r28
    154c:	6f 5b       	subi	r22, 0xBF	; 191
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	ce 01       	movw	r24, r28
    1552:	8f 59       	subi	r24, 0x9F	; 159
    1554:	9f 4f       	sbci	r25, 0xFF	; 255
    1556:	f7 dc       	rcall	.-1554   	; 0xf46 <uECC_vli_cmp_unsafe>
    1558:	88 23       	and	r24, r24
    155a:	3c f4       	brge	.+14     	; 0x156a <uECC_vli_modInv+0x144>
    155c:	21 2f       	mov	r18, r17
    155e:	a7 01       	movw	r20, r14
    1560:	be 01       	movw	r22, r28
    1562:	6f 59       	subi	r22, 0x9F	; 159
    1564:	7f 4f       	sbci	r23, 0xFF	; 255
    1566:	cb 01       	movw	r24, r22
    1568:	ad da       	rcall	.-2726   	; 0xac4 <uECC_vli_add>
    156a:	21 2f       	mov	r18, r17
    156c:	ae 01       	movw	r20, r28
    156e:	4f 5b       	subi	r20, 0xBF	; 191
    1570:	5f 4f       	sbci	r21, 0xFF	; 255
    1572:	be 01       	movw	r22, r28
    1574:	6f 59       	subi	r22, 0x9F	; 159
    1576:	7f 4f       	sbci	r23, 0xFF	; 255
    1578:	cb 01       	movw	r24, r22
    157a:	75 db       	rcall	.-2326   	; 0xc66 <uECC_vli_sub>
    157c:	41 2f       	mov	r20, r17
    157e:	b7 01       	movw	r22, r14
    1580:	ce 01       	movw	r24, r28
    1582:	8f 59       	subi	r24, 0x9F	; 159
    1584:	9f 4f       	sbci	r25, 0xFF	; 255
    1586:	28 df       	rcall	.-432    	; 0x13d8 <vli_modInv_update>
    1588:	41 2f       	mov	r20, r17
    158a:	be 01       	movw	r22, r28
    158c:	6f 5d       	subi	r22, 0xDF	; 223
    158e:	7f 4f       	sbci	r23, 0xFF	; 255
    1590:	ce 01       	movw	r24, r28
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	d8 dc       	rcall	.-1616   	; 0xf46 <uECC_vli_cmp_unsafe>
    1596:	81 11       	cpse	r24, r1
    1598:	7e cf       	rjmp	.-260    	; 0x1496 <uECC_vli_modInv+0x70>
    159a:	41 2f       	mov	r20, r17
    159c:	be 01       	movw	r22, r28
    159e:	6f 5b       	subi	r22, 0xBF	; 191
    15a0:	7f 4f       	sbci	r23, 0xFF	; 255
    15a2:	c5 01       	movw	r24, r10
    15a4:	d0 d9       	rcall	.-3168   	; 0x946 <uECC_vli_set>
    15a6:	c0 58       	subi	r28, 0x80	; 128
    15a8:	df 4f       	sbci	r29, 0xFF	; 255
    15aa:	0f b6       	in	r0, 0x3f	; 63
    15ac:	f8 94       	cli
    15ae:	de bf       	out	0x3e, r29	; 62
    15b0:	0f be       	out	0x3f, r0	; 63
    15b2:	cd bf       	out	0x3d, r28	; 61
    15b4:	df 91       	pop	r29
    15b6:	cf 91       	pop	r28
    15b8:	1f 91       	pop	r17
    15ba:	ff 90       	pop	r15
    15bc:	ef 90       	pop	r14
    15be:	df 90       	pop	r13
    15c0:	cf 90       	pop	r12
    15c2:	bf 90       	pop	r11
    15c4:	af 90       	pop	r10
    15c6:	08 95       	ret

000015c8 <double_jacobian_default>:
    15c8:	6f 92       	push	r6
    15ca:	7f 92       	push	r7
    15cc:	8f 92       	push	r8
    15ce:	9f 92       	push	r9
    15d0:	af 92       	push	r10
    15d2:	bf 92       	push	r11
    15d4:	cf 92       	push	r12
    15d6:	df 92       	push	r13
    15d8:	ef 92       	push	r14
    15da:	ff 92       	push	r15
    15dc:	0f 93       	push	r16
    15de:	1f 93       	push	r17
    15e0:	cf 93       	push	r28
    15e2:	df 93       	push	r29
    15e4:	cd b7       	in	r28, 0x3d	; 61
    15e6:	de b7       	in	r29, 0x3e	; 62
    15e8:	c0 54       	subi	r28, 0x40	; 64
    15ea:	d1 09       	sbc	r29, r1
    15ec:	0f b6       	in	r0, 0x3f	; 63
    15ee:	f8 94       	cli
    15f0:	de bf       	out	0x3e, r29	; 62
    15f2:	0f be       	out	0x3f, r0	; 63
    15f4:	cd bf       	out	0x3d, r28	; 61
    15f6:	6c 01       	movw	r12, r24
    15f8:	3b 01       	movw	r6, r22
    15fa:	7a 01       	movw	r14, r20
    15fc:	59 01       	movw	r10, r18
    15fe:	f9 01       	movw	r30, r18
    1600:	10 81       	ld	r17, Z
    1602:	61 2f       	mov	r22, r17
    1604:	ca 01       	movw	r24, r20
    1606:	3c dc       	rcall	.-1928   	; 0xe80 <uECC_vli_isZero>
    1608:	81 11       	cpse	r24, r1
    160a:	96 c0       	rjmp	.+300    	; 0x1738 <double_jacobian_default+0x170>
    160c:	a5 01       	movw	r20, r10
    160e:	b3 01       	movw	r22, r6
    1610:	ce 01       	movw	r24, r28
    1612:	01 96       	adiw	r24, 0x01	; 1
    1614:	dd de       	rcall	.-582    	; 0x13d0 <uECC_vli_modSquare_fast>
    1616:	95 01       	movw	r18, r10
    1618:	ae 01       	movw	r20, r28
    161a:	4f 5f       	subi	r20, 0xFF	; 255
    161c:	5f 4f       	sbci	r21, 0xFF	; 255
    161e:	b6 01       	movw	r22, r12
    1620:	ce 01       	movw	r24, r28
    1622:	81 96       	adiw	r24, 0x21	; 33
    1624:	a6 de       	rcall	.-692    	; 0x1372 <uECC_vli_modMult_fast>
    1626:	a5 01       	movw	r20, r10
    1628:	be 01       	movw	r22, r28
    162a:	6f 5f       	subi	r22, 0xFF	; 255
    162c:	7f 4f       	sbci	r23, 0xFF	; 255
    162e:	cb 01       	movw	r24, r22
    1630:	cf de       	rcall	.-610    	; 0x13d0 <uECC_vli_modSquare_fast>
    1632:	95 01       	movw	r18, r10
    1634:	a7 01       	movw	r20, r14
    1636:	b3 01       	movw	r22, r6
    1638:	c3 01       	movw	r24, r6
    163a:	9b de       	rcall	.-714    	; 0x1372 <uECC_vli_modMult_fast>
    163c:	a5 01       	movw	r20, r10
    163e:	b7 01       	movw	r22, r14
    1640:	c7 01       	movw	r24, r14
    1642:	c6 de       	rcall	.-628    	; 0x13d0 <uECC_vli_modSquare_fast>
    1644:	45 01       	movw	r8, r10
    1646:	f4 e0       	ldi	r31, 0x04	; 4
    1648:	8f 0e       	add	r8, r31
    164a:	91 1c       	adc	r9, r1
    164c:	01 2f       	mov	r16, r17
    164e:	94 01       	movw	r18, r8
    1650:	a7 01       	movw	r20, r14
    1652:	b6 01       	movw	r22, r12
    1654:	c6 01       	movw	r24, r12
    1656:	d6 dc       	rcall	.-1620   	; 0x1004 <uECC_vli_modAdd>
    1658:	94 01       	movw	r18, r8
    165a:	a7 01       	movw	r20, r14
    165c:	b7 01       	movw	r22, r14
    165e:	c7 01       	movw	r24, r14
    1660:	d1 dc       	rcall	.-1630   	; 0x1004 <uECC_vli_modAdd>
    1662:	94 01       	movw	r18, r8
    1664:	a7 01       	movw	r20, r14
    1666:	b6 01       	movw	r22, r12
    1668:	c7 01       	movw	r24, r14
    166a:	e8 dc       	rcall	.-1584   	; 0x103c <uECC_vli_modSub>
    166c:	95 01       	movw	r18, r10
    166e:	a7 01       	movw	r20, r14
    1670:	b6 01       	movw	r22, r12
    1672:	c6 01       	movw	r24, r12
    1674:	7e de       	rcall	.-772    	; 0x1372 <uECC_vli_modMult_fast>
    1676:	94 01       	movw	r18, r8
    1678:	a6 01       	movw	r20, r12
    167a:	b6 01       	movw	r22, r12
    167c:	c7 01       	movw	r24, r14
    167e:	c2 dc       	rcall	.-1660   	; 0x1004 <uECC_vli_modAdd>
    1680:	94 01       	movw	r18, r8
    1682:	a7 01       	movw	r20, r14
    1684:	b6 01       	movw	r22, r12
    1686:	c6 01       	movw	r24, r12
    1688:	bd dc       	rcall	.-1670   	; 0x1004 <uECC_vli_modAdd>
    168a:	60 e0       	ldi	r22, 0x00	; 0
    168c:	70 e0       	ldi	r23, 0x00	; 0
    168e:	c6 01       	movw	r24, r12
    1690:	0d dc       	rcall	.-2022   	; 0xeac <uECC_vli_testBit>
    1692:	88 23       	and	r24, r24
    1694:	c1 f0       	breq	.+48     	; 0x16c6 <double_jacobian_default+0xfe>
    1696:	21 2f       	mov	r18, r17
    1698:	a4 01       	movw	r20, r8
    169a:	b6 01       	movw	r22, r12
    169c:	c6 01       	movw	r24, r12
    169e:	12 da       	rcall	.-3036   	; 0xac4 <uECC_vli_add>
    16a0:	08 2f       	mov	r16, r24
    16a2:	61 2f       	mov	r22, r17
    16a4:	c6 01       	movw	r24, r12
    16a6:	9c d9       	rcall	.-3272   	; 0x9e0 <uECC_vli_rshift1>
    16a8:	e1 2f       	mov	r30, r17
    16aa:	01 2e       	mov	r0, r17
    16ac:	00 0c       	add	r0, r0
    16ae:	ff 0b       	sbc	r31, r31
    16b0:	31 97       	sbiw	r30, 0x01	; 1
    16b2:	ec 0d       	add	r30, r12
    16b4:	fd 1d       	adc	r31, r13
    16b6:	20 e8       	ldi	r18, 0x80	; 128
    16b8:	02 9f       	mul	r16, r18
    16ba:	c0 01       	movw	r24, r0
    16bc:	11 24       	eor	r1, r1
    16be:	00 81       	ld	r16, Z
    16c0:	08 2b       	or	r16, r24
    16c2:	00 83       	st	Z, r16
    16c4:	03 c0       	rjmp	.+6      	; 0x16cc <double_jacobian_default+0x104>
    16c6:	61 2f       	mov	r22, r17
    16c8:	c6 01       	movw	r24, r12
    16ca:	8a d9       	rcall	.-3308   	; 0x9e0 <uECC_vli_rshift1>
    16cc:	a5 01       	movw	r20, r10
    16ce:	b6 01       	movw	r22, r12
    16d0:	c7 01       	movw	r24, r14
    16d2:	7e de       	rcall	.-772    	; 0x13d0 <uECC_vli_modSquare_fast>
    16d4:	01 2f       	mov	r16, r17
    16d6:	94 01       	movw	r18, r8
    16d8:	ae 01       	movw	r20, r28
    16da:	4f 5d       	subi	r20, 0xDF	; 223
    16dc:	5f 4f       	sbci	r21, 0xFF	; 255
    16de:	b7 01       	movw	r22, r14
    16e0:	c7 01       	movw	r24, r14
    16e2:	ac dc       	rcall	.-1704   	; 0x103c <uECC_vli_modSub>
    16e4:	94 01       	movw	r18, r8
    16e6:	ae 01       	movw	r20, r28
    16e8:	4f 5d       	subi	r20, 0xDF	; 223
    16ea:	5f 4f       	sbci	r21, 0xFF	; 255
    16ec:	b7 01       	movw	r22, r14
    16ee:	c7 01       	movw	r24, r14
    16f0:	a5 dc       	rcall	.-1718   	; 0x103c <uECC_vli_modSub>
    16f2:	94 01       	movw	r18, r8
    16f4:	a7 01       	movw	r20, r14
    16f6:	be 01       	movw	r22, r28
    16f8:	6f 5d       	subi	r22, 0xDF	; 223
    16fa:	7f 4f       	sbci	r23, 0xFF	; 255
    16fc:	cb 01       	movw	r24, r22
    16fe:	9e dc       	rcall	.-1732   	; 0x103c <uECC_vli_modSub>
    1700:	95 01       	movw	r18, r10
    1702:	ae 01       	movw	r20, r28
    1704:	4f 5d       	subi	r20, 0xDF	; 223
    1706:	5f 4f       	sbci	r21, 0xFF	; 255
    1708:	b6 01       	movw	r22, r12
    170a:	c6 01       	movw	r24, r12
    170c:	32 de       	rcall	.-924    	; 0x1372 <uECC_vli_modMult_fast>
    170e:	94 01       	movw	r18, r8
    1710:	ae 01       	movw	r20, r28
    1712:	4f 5f       	subi	r20, 0xFF	; 255
    1714:	5f 4f       	sbci	r21, 0xFF	; 255
    1716:	b6 01       	movw	r22, r12
    1718:	ca 01       	movw	r24, r20
    171a:	90 dc       	rcall	.-1760   	; 0x103c <uECC_vli_modSub>
    171c:	41 2f       	mov	r20, r17
    171e:	b7 01       	movw	r22, r14
    1720:	c6 01       	movw	r24, r12
    1722:	11 d9       	rcall	.-3550   	; 0x946 <uECC_vli_set>
    1724:	41 2f       	mov	r20, r17
    1726:	b3 01       	movw	r22, r6
    1728:	c7 01       	movw	r24, r14
    172a:	0d d9       	rcall	.-3558   	; 0x946 <uECC_vli_set>
    172c:	41 2f       	mov	r20, r17
    172e:	be 01       	movw	r22, r28
    1730:	6f 5f       	subi	r22, 0xFF	; 255
    1732:	7f 4f       	sbci	r23, 0xFF	; 255
    1734:	c3 01       	movw	r24, r6
    1736:	07 d9       	rcall	.-3570   	; 0x946 <uECC_vli_set>
    1738:	c0 5c       	subi	r28, 0xC0	; 192
    173a:	df 4f       	sbci	r29, 0xFF	; 255
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	f8 94       	cli
    1740:	de bf       	out	0x3e, r29	; 62
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	cd bf       	out	0x3d, r28	; 61
    1746:	df 91       	pop	r29
    1748:	cf 91       	pop	r28
    174a:	1f 91       	pop	r17
    174c:	0f 91       	pop	r16
    174e:	ff 90       	pop	r15
    1750:	ef 90       	pop	r14
    1752:	df 90       	pop	r13
    1754:	cf 90       	pop	r12
    1756:	bf 90       	pop	r11
    1758:	af 90       	pop	r10
    175a:	9f 90       	pop	r9
    175c:	8f 90       	pop	r8
    175e:	7f 90       	pop	r7
    1760:	6f 90       	pop	r6
    1762:	08 95       	ret

00001764 <x_side_default>:
    1764:	6f 92       	push	r6
    1766:	7f 92       	push	r7
    1768:	8f 92       	push	r8
    176a:	9f 92       	push	r9
    176c:	af 92       	push	r10
    176e:	bf 92       	push	r11
    1770:	cf 92       	push	r12
    1772:	df 92       	push	r13
    1774:	ef 92       	push	r14
    1776:	ff 92       	push	r15
    1778:	0f 93       	push	r16
    177a:	1f 93       	push	r17
    177c:	cf 93       	push	r28
    177e:	df 93       	push	r29
    1780:	cd b7       	in	r28, 0x3d	; 61
    1782:	de b7       	in	r29, 0x3e	; 62
    1784:	a0 97       	sbiw	r28, 0x20	; 32
    1786:	0f b6       	in	r0, 0x3f	; 63
    1788:	f8 94       	cli
    178a:	de bf       	out	0x3e, r29	; 62
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	cd bf       	out	0x3d, r28	; 61
    1790:	7c 01       	movw	r14, r24
    1792:	4b 01       	movw	r8, r22
    1794:	6a 01       	movw	r12, r20
    1796:	ce 01       	movw	r24, r28
    1798:	01 96       	adiw	r24, 0x01	; 1
    179a:	3c 01       	movw	r6, r24
    179c:	80 e2       	ldi	r24, 0x20	; 32
    179e:	f3 01       	movw	r30, r6
    17a0:	11 92       	st	Z+, r1
    17a2:	8a 95       	dec	r24
    17a4:	e9 f7       	brne	.-6      	; 0x17a0 <x_side_default+0x3c>
    17a6:	83 e0       	ldi	r24, 0x03	; 3
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	fa 01       	movw	r30, r20
    17ac:	10 81       	ld	r17, Z
    17ae:	c7 01       	movw	r24, r14
    17b0:	0f de       	rcall	.-994    	; 0x13d0 <uECC_vli_modSquare_fast>
    17b2:	56 01       	movw	r10, r12
    17b4:	f4 e0       	ldi	r31, 0x04	; 4
    17b6:	af 0e       	add	r10, r31
    17b8:	b1 1c       	adc	r11, r1
    17ba:	01 2f       	mov	r16, r17
    17bc:	95 01       	movw	r18, r10
    17be:	a3 01       	movw	r20, r6
    17c0:	b7 01       	movw	r22, r14
    17c2:	c7 01       	movw	r24, r14
    17c4:	3b dc       	rcall	.-1930   	; 0x103c <uECC_vli_modSub>
    17c6:	96 01       	movw	r18, r12
    17c8:	a4 01       	movw	r20, r8
    17ca:	b7 01       	movw	r22, r14
    17cc:	c7 01       	movw	r24, r14
    17ce:	d1 dd       	rcall	.-1118   	; 0x1372 <uECC_vli_modMult_fast>
    17d0:	a6 01       	movw	r20, r12
    17d2:	4c 57       	subi	r20, 0x7C	; 124
    17d4:	5f 4f       	sbci	r21, 0xFF	; 255
    17d6:	95 01       	movw	r18, r10
    17d8:	b7 01       	movw	r22, r14
    17da:	c7 01       	movw	r24, r14
    17dc:	13 dc       	rcall	.-2010   	; 0x1004 <uECC_vli_modAdd>
    17de:	a0 96       	adiw	r28, 0x20	; 32
    17e0:	0f b6       	in	r0, 0x3f	; 63
    17e2:	f8 94       	cli
    17e4:	de bf       	out	0x3e, r29	; 62
    17e6:	0f be       	out	0x3f, r0	; 63
    17e8:	cd bf       	out	0x3d, r28	; 61
    17ea:	df 91       	pop	r29
    17ec:	cf 91       	pop	r28
    17ee:	1f 91       	pop	r17
    17f0:	0f 91       	pop	r16
    17f2:	ff 90       	pop	r15
    17f4:	ef 90       	pop	r14
    17f6:	df 90       	pop	r13
    17f8:	cf 90       	pop	r12
    17fa:	bf 90       	pop	r11
    17fc:	af 90       	pop	r10
    17fe:	9f 90       	pop	r9
    1800:	8f 90       	pop	r8
    1802:	7f 90       	pop	r7
    1804:	6f 90       	pop	r6
    1806:	08 95       	ret

00001808 <mod_sqrt_default>:
    1808:	bf 92       	push	r11
    180a:	cf 92       	push	r12
    180c:	df 92       	push	r13
    180e:	ef 92       	push	r14
    1810:	ff 92       	push	r15
    1812:	0f 93       	push	r16
    1814:	1f 93       	push	r17
    1816:	cf 93       	push	r28
    1818:	df 93       	push	r29
    181a:	cd b7       	in	r28, 0x3d	; 61
    181c:	de b7       	in	r29, 0x3e	; 62
    181e:	c0 54       	subi	r28, 0x40	; 64
    1820:	d1 09       	sbc	r29, r1
    1822:	0f b6       	in	r0, 0x3f	; 63
    1824:	f8 94       	cli
    1826:	de bf       	out	0x3e, r29	; 62
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	cd bf       	out	0x3d, r28	; 61
    182c:	6c 01       	movw	r12, r24
    182e:	7b 01       	movw	r14, r22
    1830:	90 e2       	ldi	r25, 0x20	; 32
    1832:	8e 01       	movw	r16, r28
    1834:	0f 5f       	subi	r16, 0xFF	; 255
    1836:	1f 4f       	sbci	r17, 0xFF	; 255
    1838:	d8 01       	movw	r26, r16
    183a:	e9 2f       	mov	r30, r25
    183c:	1d 92       	st	X+, r1
    183e:	ea 95       	dec	r30
    1840:	e9 f7       	brne	.-6      	; 0x183c <mod_sqrt_default+0x34>
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	89 83       	std	Y+1, r24	; 0x01
    1846:	fe 01       	movw	r30, r28
    1848:	b1 96       	adiw	r30, 0x21	; 33
    184a:	df 01       	movw	r26, r30
    184c:	1d 92       	st	X+, r1
    184e:	9a 95       	dec	r25
    1850:	e9 f7       	brne	.-6      	; 0x184c <mod_sqrt_default+0x44>
    1852:	89 a3       	std	Y+33, r24	; 0x21
    1854:	fb 01       	movw	r30, r22
    1856:	b0 80       	ld	r11, Z
    1858:	6c 5f       	subi	r22, 0xFC	; 252
    185a:	7f 4f       	sbci	r23, 0xFF	; 255
    185c:	2b 2d       	mov	r18, r11
    185e:	a8 01       	movw	r20, r16
    1860:	c8 01       	movw	r24, r16
    1862:	30 d9       	rcall	.-3488   	; 0xac4 <uECC_vli_add>
    1864:	6b 2d       	mov	r22, r11
    1866:	c8 01       	movw	r24, r16
    1868:	37 db       	rcall	.-2450   	; 0xed8 <uECC_vli_numBits>
    186a:	8c 01       	movw	r16, r24
    186c:	01 50       	subi	r16, 0x01	; 1
    186e:	11 09       	sbc	r17, r1
    1870:	02 30       	cpi	r16, 0x02	; 2
    1872:	11 05       	cpc	r17, r1
    1874:	c4 f0       	brlt	.+48     	; 0x18a6 <mod_sqrt_default+0x9e>
    1876:	a7 01       	movw	r20, r14
    1878:	be 01       	movw	r22, r28
    187a:	6f 5d       	subi	r22, 0xDF	; 223
    187c:	7f 4f       	sbci	r23, 0xFF	; 255
    187e:	cb 01       	movw	r24, r22
    1880:	a7 dd       	rcall	.-1202   	; 0x13d0 <uECC_vli_modSquare_fast>
    1882:	b8 01       	movw	r22, r16
    1884:	ce 01       	movw	r24, r28
    1886:	01 96       	adiw	r24, 0x01	; 1
    1888:	11 db       	rcall	.-2526   	; 0xeac <uECC_vli_testBit>
    188a:	88 23       	and	r24, r24
    188c:	39 f0       	breq	.+14     	; 0x189c <mod_sqrt_default+0x94>
    188e:	97 01       	movw	r18, r14
    1890:	a6 01       	movw	r20, r12
    1892:	be 01       	movw	r22, r28
    1894:	6f 5d       	subi	r22, 0xDF	; 223
    1896:	7f 4f       	sbci	r23, 0xFF	; 255
    1898:	cb 01       	movw	r24, r22
    189a:	6b dd       	rcall	.-1322   	; 0x1372 <uECC_vli_modMult_fast>
    189c:	01 50       	subi	r16, 0x01	; 1
    189e:	11 09       	sbc	r17, r1
    18a0:	01 30       	cpi	r16, 0x01	; 1
    18a2:	11 05       	cpc	r17, r1
    18a4:	41 f7       	brne	.-48     	; 0x1876 <mod_sqrt_default+0x6e>
    18a6:	4b 2d       	mov	r20, r11
    18a8:	be 01       	movw	r22, r28
    18aa:	6f 5d       	subi	r22, 0xDF	; 223
    18ac:	7f 4f       	sbci	r23, 0xFF	; 255
    18ae:	c6 01       	movw	r24, r12
    18b0:	4a d8       	rcall	.-3948   	; 0x946 <uECC_vli_set>
    18b2:	c0 5c       	subi	r28, 0xC0	; 192
    18b4:	df 4f       	sbci	r29, 0xFF	; 255
    18b6:	0f b6       	in	r0, 0x3f	; 63
    18b8:	f8 94       	cli
    18ba:	de bf       	out	0x3e, r29	; 62
    18bc:	0f be       	out	0x3f, r0	; 63
    18be:	cd bf       	out	0x3d, r28	; 61
    18c0:	df 91       	pop	r29
    18c2:	cf 91       	pop	r28
    18c4:	1f 91       	pop	r17
    18c6:	0f 91       	pop	r16
    18c8:	ff 90       	pop	r15
    18ca:	ef 90       	pop	r14
    18cc:	df 90       	pop	r13
    18ce:	cf 90       	pop	r12
    18d0:	bf 90       	pop	r11
    18d2:	08 95       	ret

000018d4 <vli_mmod_fast_secp256r1>:
    18d4:	cf 92       	push	r12
    18d6:	df 92       	push	r13
    18d8:	ff 92       	push	r15
    18da:	0f 93       	push	r16
    18dc:	1f 93       	push	r17
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	cd b7       	in	r28, 0x3d	; 61
    18e4:	de b7       	in	r29, 0x3e	; 62
    18e6:	a0 97       	sbiw	r28, 0x20	; 32
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	f8 94       	cli
    18ec:	de bf       	out	0x3e, r29	; 62
    18ee:	0f be       	out	0x3f, r0	; 63
    18f0:	cd bf       	out	0x3d, r28	; 61
    18f2:	6c 01       	movw	r12, r24
    18f4:	8b 01       	movw	r16, r22
    18f6:	40 e2       	ldi	r20, 0x20	; 32
    18f8:	26 d8       	rcall	.-4020   	; 0x946 <uECC_vli_set>
    18fa:	1c 82       	std	Y+4, r1	; 0x04
    18fc:	1b 82       	std	Y+3, r1	; 0x03
    18fe:	1a 82       	std	Y+2, r1	; 0x02
    1900:	19 82       	std	Y+1, r1	; 0x01
    1902:	18 86       	std	Y+8, r1	; 0x08
    1904:	1f 82       	std	Y+7, r1	; 0x07
    1906:	1e 82       	std	Y+6, r1	; 0x06
    1908:	1d 82       	std	Y+5, r1	; 0x05
    190a:	1c 86       	std	Y+12, r1	; 0x0c
    190c:	1b 86       	std	Y+11, r1	; 0x0b
    190e:	1a 86       	std	Y+10, r1	; 0x0a
    1910:	19 86       	std	Y+9, r1	; 0x09
    1912:	f8 01       	movw	r30, r16
    1914:	84 a5       	ldd	r24, Z+44	; 0x2c
    1916:	8d 87       	std	Y+13, r24	; 0x0d
    1918:	85 a5       	ldd	r24, Z+45	; 0x2d
    191a:	8e 87       	std	Y+14, r24	; 0x0e
    191c:	86 a5       	ldd	r24, Z+46	; 0x2e
    191e:	8f 87       	std	Y+15, r24	; 0x0f
    1920:	87 a5       	ldd	r24, Z+47	; 0x2f
    1922:	88 8b       	std	Y+16, r24	; 0x10
    1924:	80 a9       	ldd	r24, Z+48	; 0x30
    1926:	89 8b       	std	Y+17, r24	; 0x11
    1928:	81 a9       	ldd	r24, Z+49	; 0x31
    192a:	8a 8b       	std	Y+18, r24	; 0x12
    192c:	82 a9       	ldd	r24, Z+50	; 0x32
    192e:	8b 8b       	std	Y+19, r24	; 0x13
    1930:	83 a9       	ldd	r24, Z+51	; 0x33
    1932:	8c 8b       	std	Y+20, r24	; 0x14
    1934:	84 a9       	ldd	r24, Z+52	; 0x34
    1936:	8d 8b       	std	Y+21, r24	; 0x15
    1938:	85 a9       	ldd	r24, Z+53	; 0x35
    193a:	8e 8b       	std	Y+22, r24	; 0x16
    193c:	86 a9       	ldd	r24, Z+54	; 0x36
    193e:	8f 8b       	std	Y+23, r24	; 0x17
    1940:	87 a9       	ldd	r24, Z+55	; 0x37
    1942:	88 8f       	std	Y+24, r24	; 0x18
    1944:	80 ad       	ldd	r24, Z+56	; 0x38
    1946:	89 8f       	std	Y+25, r24	; 0x19
    1948:	81 ad       	ldd	r24, Z+57	; 0x39
    194a:	8a 8f       	std	Y+26, r24	; 0x1a
    194c:	82 ad       	ldd	r24, Z+58	; 0x3a
    194e:	8b 8f       	std	Y+27, r24	; 0x1b
    1950:	83 ad       	ldd	r24, Z+59	; 0x3b
    1952:	8c 8f       	std	Y+28, r24	; 0x1c
    1954:	84 ad       	ldd	r24, Z+60	; 0x3c
    1956:	8d 8f       	std	Y+29, r24	; 0x1d
    1958:	85 ad       	ldd	r24, Z+61	; 0x3d
    195a:	8e 8f       	std	Y+30, r24	; 0x1e
    195c:	86 ad       	ldd	r24, Z+62	; 0x3e
    195e:	8f 8f       	std	Y+31, r24	; 0x1f
    1960:	87 ad       	ldd	r24, Z+63	; 0x3f
    1962:	88 a3       	std	Y+32, r24	; 0x20
    1964:	20 e2       	ldi	r18, 0x20	; 32
    1966:	ae 01       	movw	r20, r28
    1968:	4f 5f       	subi	r20, 0xFF	; 255
    196a:	5f 4f       	sbci	r21, 0xFF	; 255
    196c:	ba 01       	movw	r22, r20
    196e:	ca 01       	movw	r24, r20
    1970:	a9 d8       	rcall	.-3758   	; 0xac4 <uECC_vli_add>
    1972:	f8 2e       	mov	r15, r24
    1974:	20 e2       	ldi	r18, 0x20	; 32
    1976:	ae 01       	movw	r20, r28
    1978:	4f 5f       	subi	r20, 0xFF	; 255
    197a:	5f 4f       	sbci	r21, 0xFF	; 255
    197c:	b6 01       	movw	r22, r12
    197e:	c6 01       	movw	r24, r12
    1980:	a1 d8       	rcall	.-3774   	; 0xac4 <uECC_vli_add>
    1982:	f8 0e       	add	r15, r24
    1984:	f8 01       	movw	r30, r16
    1986:	80 a9       	ldd	r24, Z+48	; 0x30
    1988:	8d 87       	std	Y+13, r24	; 0x0d
    198a:	81 a9       	ldd	r24, Z+49	; 0x31
    198c:	8e 87       	std	Y+14, r24	; 0x0e
    198e:	82 a9       	ldd	r24, Z+50	; 0x32
    1990:	8f 87       	std	Y+15, r24	; 0x0f
    1992:	83 a9       	ldd	r24, Z+51	; 0x33
    1994:	88 8b       	std	Y+16, r24	; 0x10
    1996:	84 a9       	ldd	r24, Z+52	; 0x34
    1998:	89 8b       	std	Y+17, r24	; 0x11
    199a:	85 a9       	ldd	r24, Z+53	; 0x35
    199c:	8a 8b       	std	Y+18, r24	; 0x12
    199e:	86 a9       	ldd	r24, Z+54	; 0x36
    19a0:	8b 8b       	std	Y+19, r24	; 0x13
    19a2:	87 a9       	ldd	r24, Z+55	; 0x37
    19a4:	8c 8b       	std	Y+20, r24	; 0x14
    19a6:	80 ad       	ldd	r24, Z+56	; 0x38
    19a8:	8d 8b       	std	Y+21, r24	; 0x15
    19aa:	81 ad       	ldd	r24, Z+57	; 0x39
    19ac:	8e 8b       	std	Y+22, r24	; 0x16
    19ae:	82 ad       	ldd	r24, Z+58	; 0x3a
    19b0:	8f 8b       	std	Y+23, r24	; 0x17
    19b2:	83 ad       	ldd	r24, Z+59	; 0x3b
    19b4:	88 8f       	std	Y+24, r24	; 0x18
    19b6:	84 ad       	ldd	r24, Z+60	; 0x3c
    19b8:	89 8f       	std	Y+25, r24	; 0x19
    19ba:	85 ad       	ldd	r24, Z+61	; 0x3d
    19bc:	8a 8f       	std	Y+26, r24	; 0x1a
    19be:	86 ad       	ldd	r24, Z+62	; 0x3e
    19c0:	8b 8f       	std	Y+27, r24	; 0x1b
    19c2:	87 ad       	ldd	r24, Z+63	; 0x3f
    19c4:	8c 8f       	std	Y+28, r24	; 0x1c
    19c6:	18 a2       	std	Y+32, r1	; 0x20
    19c8:	1f 8e       	std	Y+31, r1	; 0x1f
    19ca:	1e 8e       	std	Y+30, r1	; 0x1e
    19cc:	1d 8e       	std	Y+29, r1	; 0x1d
    19ce:	20 e2       	ldi	r18, 0x20	; 32
    19d0:	ae 01       	movw	r20, r28
    19d2:	4f 5f       	subi	r20, 0xFF	; 255
    19d4:	5f 4f       	sbci	r21, 0xFF	; 255
    19d6:	ba 01       	movw	r22, r20
    19d8:	ca 01       	movw	r24, r20
    19da:	74 d8       	rcall	.-3864   	; 0xac4 <uECC_vli_add>
    19dc:	f8 0e       	add	r15, r24
    19de:	20 e2       	ldi	r18, 0x20	; 32
    19e0:	ae 01       	movw	r20, r28
    19e2:	4f 5f       	subi	r20, 0xFF	; 255
    19e4:	5f 4f       	sbci	r21, 0xFF	; 255
    19e6:	b6 01       	movw	r22, r12
    19e8:	c6 01       	movw	r24, r12
    19ea:	6c d8       	rcall	.-3880   	; 0xac4 <uECC_vli_add>
    19ec:	f8 0e       	add	r15, r24
    19ee:	f8 01       	movw	r30, r16
    19f0:	80 a1       	ldd	r24, Z+32	; 0x20
    19f2:	89 83       	std	Y+1, r24	; 0x01
    19f4:	81 a1       	ldd	r24, Z+33	; 0x21
    19f6:	8a 83       	std	Y+2, r24	; 0x02
    19f8:	82 a1       	ldd	r24, Z+34	; 0x22
    19fa:	8b 83       	std	Y+3, r24	; 0x03
    19fc:	83 a1       	ldd	r24, Z+35	; 0x23
    19fe:	8c 83       	std	Y+4, r24	; 0x04
    1a00:	84 a1       	ldd	r24, Z+36	; 0x24
    1a02:	8d 83       	std	Y+5, r24	; 0x05
    1a04:	85 a1       	ldd	r24, Z+37	; 0x25
    1a06:	8e 83       	std	Y+6, r24	; 0x06
    1a08:	86 a1       	ldd	r24, Z+38	; 0x26
    1a0a:	8f 83       	std	Y+7, r24	; 0x07
    1a0c:	87 a1       	ldd	r24, Z+39	; 0x27
    1a0e:	88 87       	std	Y+8, r24	; 0x08
    1a10:	80 a5       	ldd	r24, Z+40	; 0x28
    1a12:	89 87       	std	Y+9, r24	; 0x09
    1a14:	81 a5       	ldd	r24, Z+41	; 0x29
    1a16:	8a 87       	std	Y+10, r24	; 0x0a
    1a18:	82 a5       	ldd	r24, Z+42	; 0x2a
    1a1a:	8b 87       	std	Y+11, r24	; 0x0b
    1a1c:	83 a5       	ldd	r24, Z+43	; 0x2b
    1a1e:	8c 87       	std	Y+12, r24	; 0x0c
    1a20:	18 8a       	std	Y+16, r1	; 0x10
    1a22:	1f 86       	std	Y+15, r1	; 0x0f
    1a24:	1e 86       	std	Y+14, r1	; 0x0e
    1a26:	1d 86       	std	Y+13, r1	; 0x0d
    1a28:	1c 8a       	std	Y+20, r1	; 0x14
    1a2a:	1b 8a       	std	Y+19, r1	; 0x13
    1a2c:	1a 8a       	std	Y+18, r1	; 0x12
    1a2e:	19 8a       	std	Y+17, r1	; 0x11
    1a30:	18 8e       	std	Y+24, r1	; 0x18
    1a32:	1f 8a       	std	Y+23, r1	; 0x17
    1a34:	1e 8a       	std	Y+22, r1	; 0x16
    1a36:	1d 8a       	std	Y+21, r1	; 0x15
    1a38:	80 ad       	ldd	r24, Z+56	; 0x38
    1a3a:	89 8f       	std	Y+25, r24	; 0x19
    1a3c:	81 ad       	ldd	r24, Z+57	; 0x39
    1a3e:	8a 8f       	std	Y+26, r24	; 0x1a
    1a40:	82 ad       	ldd	r24, Z+58	; 0x3a
    1a42:	8b 8f       	std	Y+27, r24	; 0x1b
    1a44:	83 ad       	ldd	r24, Z+59	; 0x3b
    1a46:	8c 8f       	std	Y+28, r24	; 0x1c
    1a48:	84 ad       	ldd	r24, Z+60	; 0x3c
    1a4a:	8d 8f       	std	Y+29, r24	; 0x1d
    1a4c:	85 ad       	ldd	r24, Z+61	; 0x3d
    1a4e:	8e 8f       	std	Y+30, r24	; 0x1e
    1a50:	86 ad       	ldd	r24, Z+62	; 0x3e
    1a52:	8f 8f       	std	Y+31, r24	; 0x1f
    1a54:	87 ad       	ldd	r24, Z+63	; 0x3f
    1a56:	88 a3       	std	Y+32, r24	; 0x20
    1a58:	20 e2       	ldi	r18, 0x20	; 32
    1a5a:	ae 01       	movw	r20, r28
    1a5c:	4f 5f       	subi	r20, 0xFF	; 255
    1a5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a60:	b6 01       	movw	r22, r12
    1a62:	c6 01       	movw	r24, r12
    1a64:	2f d8       	rcall	.-4002   	; 0xac4 <uECC_vli_add>
    1a66:	f8 0e       	add	r15, r24
    1a68:	f8 01       	movw	r30, r16
    1a6a:	84 a1       	ldd	r24, Z+36	; 0x24
    1a6c:	89 83       	std	Y+1, r24	; 0x01
    1a6e:	85 a1       	ldd	r24, Z+37	; 0x25
    1a70:	8a 83       	std	Y+2, r24	; 0x02
    1a72:	86 a1       	ldd	r24, Z+38	; 0x26
    1a74:	8b 83       	std	Y+3, r24	; 0x03
    1a76:	87 a1       	ldd	r24, Z+39	; 0x27
    1a78:	8c 83       	std	Y+4, r24	; 0x04
    1a7a:	80 a5       	ldd	r24, Z+40	; 0x28
    1a7c:	8d 83       	std	Y+5, r24	; 0x05
    1a7e:	81 a5       	ldd	r24, Z+41	; 0x29
    1a80:	8e 83       	std	Y+6, r24	; 0x06
    1a82:	82 a5       	ldd	r24, Z+42	; 0x2a
    1a84:	8f 83       	std	Y+7, r24	; 0x07
    1a86:	83 a5       	ldd	r24, Z+43	; 0x2b
    1a88:	88 87       	std	Y+8, r24	; 0x08
    1a8a:	84 a5       	ldd	r24, Z+44	; 0x2c
    1a8c:	89 87       	std	Y+9, r24	; 0x09
    1a8e:	85 a5       	ldd	r24, Z+45	; 0x2d
    1a90:	8a 87       	std	Y+10, r24	; 0x0a
    1a92:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a94:	8b 87       	std	Y+11, r24	; 0x0b
    1a96:	87 a5       	ldd	r24, Z+47	; 0x2f
    1a98:	8c 87       	std	Y+12, r24	; 0x0c
    1a9a:	34 a9       	ldd	r19, Z+52	; 0x34
    1a9c:	3d 87       	std	Y+13, r19	; 0x0d
    1a9e:	25 a9       	ldd	r18, Z+53	; 0x35
    1aa0:	2e 87       	std	Y+14, r18	; 0x0e
    1aa2:	96 a9       	ldd	r25, Z+54	; 0x36
    1aa4:	9f 87       	std	Y+15, r25	; 0x0f
    1aa6:	87 a9       	ldd	r24, Z+55	; 0x37
    1aa8:	88 8b       	std	Y+16, r24	; 0x10
    1aaa:	40 ad       	ldd	r20, Z+56	; 0x38
    1aac:	49 8b       	std	Y+17, r20	; 0x11
    1aae:	41 ad       	ldd	r20, Z+57	; 0x39
    1ab0:	4a 8b       	std	Y+18, r20	; 0x12
    1ab2:	42 ad       	ldd	r20, Z+58	; 0x3a
    1ab4:	4b 8b       	std	Y+19, r20	; 0x13
    1ab6:	43 ad       	ldd	r20, Z+59	; 0x3b
    1ab8:	4c 8b       	std	Y+20, r20	; 0x14
    1aba:	44 ad       	ldd	r20, Z+60	; 0x3c
    1abc:	4d 8b       	std	Y+21, r20	; 0x15
    1abe:	45 ad       	ldd	r20, Z+61	; 0x3d
    1ac0:	4e 8b       	std	Y+22, r20	; 0x16
    1ac2:	46 ad       	ldd	r20, Z+62	; 0x3e
    1ac4:	4f 8b       	std	Y+23, r20	; 0x17
    1ac6:	47 ad       	ldd	r20, Z+63	; 0x3f
    1ac8:	48 8f       	std	Y+24, r20	; 0x18
    1aca:	39 8f       	std	Y+25, r19	; 0x19
    1acc:	2a 8f       	std	Y+26, r18	; 0x1a
    1ace:	9b 8f       	std	Y+27, r25	; 0x1b
    1ad0:	8c 8f       	std	Y+28, r24	; 0x1c
    1ad2:	80 a1       	ldd	r24, Z+32	; 0x20
    1ad4:	8d 8f       	std	Y+29, r24	; 0x1d
    1ad6:	81 a1       	ldd	r24, Z+33	; 0x21
    1ad8:	8e 8f       	std	Y+30, r24	; 0x1e
    1ada:	82 a1       	ldd	r24, Z+34	; 0x22
    1adc:	8f 8f       	std	Y+31, r24	; 0x1f
    1ade:	83 a1       	ldd	r24, Z+35	; 0x23
    1ae0:	88 a3       	std	Y+32, r24	; 0x20
    1ae2:	20 e2       	ldi	r18, 0x20	; 32
    1ae4:	ae 01       	movw	r20, r28
    1ae6:	4f 5f       	subi	r20, 0xFF	; 255
    1ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aea:	b6 01       	movw	r22, r12
    1aec:	c6 01       	movw	r24, r12
    1aee:	0e 94 62 05 	call	0xac4	; 0xac4 <uECC_vli_add>
    1af2:	f8 0e       	add	r15, r24
    1af4:	f8 01       	movw	r30, r16
    1af6:	84 a5       	ldd	r24, Z+44	; 0x2c
    1af8:	89 83       	std	Y+1, r24	; 0x01
    1afa:	85 a5       	ldd	r24, Z+45	; 0x2d
    1afc:	8a 83       	std	Y+2, r24	; 0x02
    1afe:	86 a5       	ldd	r24, Z+46	; 0x2e
    1b00:	8b 83       	std	Y+3, r24	; 0x03
    1b02:	87 a5       	ldd	r24, Z+47	; 0x2f
    1b04:	8c 83       	std	Y+4, r24	; 0x04
    1b06:	80 a9       	ldd	r24, Z+48	; 0x30
    1b08:	8d 83       	std	Y+5, r24	; 0x05
    1b0a:	81 a9       	ldd	r24, Z+49	; 0x31
    1b0c:	8e 83       	std	Y+6, r24	; 0x06
    1b0e:	82 a9       	ldd	r24, Z+50	; 0x32
    1b10:	8f 83       	std	Y+7, r24	; 0x07
    1b12:	83 a9       	ldd	r24, Z+51	; 0x33
    1b14:	88 87       	std	Y+8, r24	; 0x08
    1b16:	84 a9       	ldd	r24, Z+52	; 0x34
    1b18:	89 87       	std	Y+9, r24	; 0x09
    1b1a:	85 a9       	ldd	r24, Z+53	; 0x35
    1b1c:	8a 87       	std	Y+10, r24	; 0x0a
    1b1e:	86 a9       	ldd	r24, Z+54	; 0x36
    1b20:	8b 87       	std	Y+11, r24	; 0x0b
    1b22:	87 a9       	ldd	r24, Z+55	; 0x37
    1b24:	8c 87       	std	Y+12, r24	; 0x0c
    1b26:	18 8a       	std	Y+16, r1	; 0x10
    1b28:	1f 86       	std	Y+15, r1	; 0x0f
    1b2a:	1e 86       	std	Y+14, r1	; 0x0e
    1b2c:	1d 86       	std	Y+13, r1	; 0x0d
    1b2e:	1c 8a       	std	Y+20, r1	; 0x14
    1b30:	1b 8a       	std	Y+19, r1	; 0x13
    1b32:	1a 8a       	std	Y+18, r1	; 0x12
    1b34:	19 8a       	std	Y+17, r1	; 0x11
    1b36:	18 8e       	std	Y+24, r1	; 0x18
    1b38:	1f 8a       	std	Y+23, r1	; 0x17
    1b3a:	1e 8a       	std	Y+22, r1	; 0x16
    1b3c:	1d 8a       	std	Y+21, r1	; 0x15
    1b3e:	80 a1       	ldd	r24, Z+32	; 0x20
    1b40:	89 8f       	std	Y+25, r24	; 0x19
    1b42:	81 a1       	ldd	r24, Z+33	; 0x21
    1b44:	8a 8f       	std	Y+26, r24	; 0x1a
    1b46:	82 a1       	ldd	r24, Z+34	; 0x22
    1b48:	8b 8f       	std	Y+27, r24	; 0x1b
    1b4a:	83 a1       	ldd	r24, Z+35	; 0x23
    1b4c:	8c 8f       	std	Y+28, r24	; 0x1c
    1b4e:	80 a5       	ldd	r24, Z+40	; 0x28
    1b50:	8d 8f       	std	Y+29, r24	; 0x1d
    1b52:	81 a5       	ldd	r24, Z+41	; 0x29
    1b54:	8e 8f       	std	Y+30, r24	; 0x1e
    1b56:	82 a5       	ldd	r24, Z+42	; 0x2a
    1b58:	8f 8f       	std	Y+31, r24	; 0x1f
    1b5a:	83 a5       	ldd	r24, Z+43	; 0x2b
    1b5c:	88 a3       	std	Y+32, r24	; 0x20
    1b5e:	20 e2       	ldi	r18, 0x20	; 32
    1b60:	ae 01       	movw	r20, r28
    1b62:	4f 5f       	subi	r20, 0xFF	; 255
    1b64:	5f 4f       	sbci	r21, 0xFF	; 255
    1b66:	b6 01       	movw	r22, r12
    1b68:	c6 01       	movw	r24, r12
    1b6a:	7d d8       	rcall	.-3846   	; 0xc66 <uECC_vli_sub>
    1b6c:	f8 1a       	sub	r15, r24
    1b6e:	f8 01       	movw	r30, r16
    1b70:	80 a9       	ldd	r24, Z+48	; 0x30
    1b72:	89 83       	std	Y+1, r24	; 0x01
    1b74:	81 a9       	ldd	r24, Z+49	; 0x31
    1b76:	8a 83       	std	Y+2, r24	; 0x02
    1b78:	82 a9       	ldd	r24, Z+50	; 0x32
    1b7a:	8b 83       	std	Y+3, r24	; 0x03
    1b7c:	83 a9       	ldd	r24, Z+51	; 0x33
    1b7e:	8c 83       	std	Y+4, r24	; 0x04
    1b80:	84 a9       	ldd	r24, Z+52	; 0x34
    1b82:	8d 83       	std	Y+5, r24	; 0x05
    1b84:	85 a9       	ldd	r24, Z+53	; 0x35
    1b86:	8e 83       	std	Y+6, r24	; 0x06
    1b88:	86 a9       	ldd	r24, Z+54	; 0x36
    1b8a:	8f 83       	std	Y+7, r24	; 0x07
    1b8c:	87 a9       	ldd	r24, Z+55	; 0x37
    1b8e:	88 87       	std	Y+8, r24	; 0x08
    1b90:	80 ad       	ldd	r24, Z+56	; 0x38
    1b92:	89 87       	std	Y+9, r24	; 0x09
    1b94:	81 ad       	ldd	r24, Z+57	; 0x39
    1b96:	8a 87       	std	Y+10, r24	; 0x0a
    1b98:	82 ad       	ldd	r24, Z+58	; 0x3a
    1b9a:	8b 87       	std	Y+11, r24	; 0x0b
    1b9c:	83 ad       	ldd	r24, Z+59	; 0x3b
    1b9e:	8c 87       	std	Y+12, r24	; 0x0c
    1ba0:	84 ad       	ldd	r24, Z+60	; 0x3c
    1ba2:	8d 87       	std	Y+13, r24	; 0x0d
    1ba4:	85 ad       	ldd	r24, Z+61	; 0x3d
    1ba6:	8e 87       	std	Y+14, r24	; 0x0e
    1ba8:	86 ad       	ldd	r24, Z+62	; 0x3e
    1baa:	8f 87       	std	Y+15, r24	; 0x0f
    1bac:	87 ad       	ldd	r24, Z+63	; 0x3f
    1bae:	88 8b       	std	Y+16, r24	; 0x10
    1bb0:	1c 8a       	std	Y+20, r1	; 0x14
    1bb2:	1b 8a       	std	Y+19, r1	; 0x13
    1bb4:	1a 8a       	std	Y+18, r1	; 0x12
    1bb6:	19 8a       	std	Y+17, r1	; 0x11
    1bb8:	18 8e       	std	Y+24, r1	; 0x18
    1bba:	1f 8a       	std	Y+23, r1	; 0x17
    1bbc:	1e 8a       	std	Y+22, r1	; 0x16
    1bbe:	1d 8a       	std	Y+21, r1	; 0x15
    1bc0:	84 a1       	ldd	r24, Z+36	; 0x24
    1bc2:	89 8f       	std	Y+25, r24	; 0x19
    1bc4:	85 a1       	ldd	r24, Z+37	; 0x25
    1bc6:	8a 8f       	std	Y+26, r24	; 0x1a
    1bc8:	86 a1       	ldd	r24, Z+38	; 0x26
    1bca:	8b 8f       	std	Y+27, r24	; 0x1b
    1bcc:	87 a1       	ldd	r24, Z+39	; 0x27
    1bce:	8c 8f       	std	Y+28, r24	; 0x1c
    1bd0:	84 a5       	ldd	r24, Z+44	; 0x2c
    1bd2:	8d 8f       	std	Y+29, r24	; 0x1d
    1bd4:	85 a5       	ldd	r24, Z+45	; 0x2d
    1bd6:	8e 8f       	std	Y+30, r24	; 0x1e
    1bd8:	86 a5       	ldd	r24, Z+46	; 0x2e
    1bda:	8f 8f       	std	Y+31, r24	; 0x1f
    1bdc:	87 a5       	ldd	r24, Z+47	; 0x2f
    1bde:	88 a3       	std	Y+32, r24	; 0x20
    1be0:	20 e2       	ldi	r18, 0x20	; 32
    1be2:	ae 01       	movw	r20, r28
    1be4:	4f 5f       	subi	r20, 0xFF	; 255
    1be6:	5f 4f       	sbci	r21, 0xFF	; 255
    1be8:	b6 01       	movw	r22, r12
    1bea:	c6 01       	movw	r24, r12
    1bec:	3c d8       	rcall	.-3976   	; 0xc66 <uECC_vli_sub>
    1bee:	f8 1a       	sub	r15, r24
    1bf0:	f8 01       	movw	r30, r16
    1bf2:	84 a9       	ldd	r24, Z+52	; 0x34
    1bf4:	89 83       	std	Y+1, r24	; 0x01
    1bf6:	85 a9       	ldd	r24, Z+53	; 0x35
    1bf8:	8a 83       	std	Y+2, r24	; 0x02
    1bfa:	86 a9       	ldd	r24, Z+54	; 0x36
    1bfc:	8b 83       	std	Y+3, r24	; 0x03
    1bfe:	87 a9       	ldd	r24, Z+55	; 0x37
    1c00:	8c 83       	std	Y+4, r24	; 0x04
    1c02:	80 ad       	ldd	r24, Z+56	; 0x38
    1c04:	8d 83       	std	Y+5, r24	; 0x05
    1c06:	81 ad       	ldd	r24, Z+57	; 0x39
    1c08:	8e 83       	std	Y+6, r24	; 0x06
    1c0a:	82 ad       	ldd	r24, Z+58	; 0x3a
    1c0c:	8f 83       	std	Y+7, r24	; 0x07
    1c0e:	83 ad       	ldd	r24, Z+59	; 0x3b
    1c10:	88 87       	std	Y+8, r24	; 0x08
    1c12:	84 ad       	ldd	r24, Z+60	; 0x3c
    1c14:	89 87       	std	Y+9, r24	; 0x09
    1c16:	85 ad       	ldd	r24, Z+61	; 0x3d
    1c18:	8a 87       	std	Y+10, r24	; 0x0a
    1c1a:	86 ad       	ldd	r24, Z+62	; 0x3e
    1c1c:	8b 87       	std	Y+11, r24	; 0x0b
    1c1e:	87 ad       	ldd	r24, Z+63	; 0x3f
    1c20:	8c 87       	std	Y+12, r24	; 0x0c
    1c22:	80 a1       	ldd	r24, Z+32	; 0x20
    1c24:	8d 87       	std	Y+13, r24	; 0x0d
    1c26:	81 a1       	ldd	r24, Z+33	; 0x21
    1c28:	8e 87       	std	Y+14, r24	; 0x0e
    1c2a:	82 a1       	ldd	r24, Z+34	; 0x22
    1c2c:	8f 87       	std	Y+15, r24	; 0x0f
    1c2e:	83 a1       	ldd	r24, Z+35	; 0x23
    1c30:	88 8b       	std	Y+16, r24	; 0x10
    1c32:	84 a1       	ldd	r24, Z+36	; 0x24
    1c34:	89 8b       	std	Y+17, r24	; 0x11
    1c36:	85 a1       	ldd	r24, Z+37	; 0x25
    1c38:	8a 8b       	std	Y+18, r24	; 0x12
    1c3a:	86 a1       	ldd	r24, Z+38	; 0x26
    1c3c:	8b 8b       	std	Y+19, r24	; 0x13
    1c3e:	87 a1       	ldd	r24, Z+39	; 0x27
    1c40:	8c 8b       	std	Y+20, r24	; 0x14
    1c42:	80 a5       	ldd	r24, Z+40	; 0x28
    1c44:	8d 8b       	std	Y+21, r24	; 0x15
    1c46:	81 a5       	ldd	r24, Z+41	; 0x29
    1c48:	8e 8b       	std	Y+22, r24	; 0x16
    1c4a:	82 a5       	ldd	r24, Z+42	; 0x2a
    1c4c:	8f 8b       	std	Y+23, r24	; 0x17
    1c4e:	83 a5       	ldd	r24, Z+43	; 0x2b
    1c50:	88 8f       	std	Y+24, r24	; 0x18
    1c52:	1c 8e       	std	Y+28, r1	; 0x1c
    1c54:	1b 8e       	std	Y+27, r1	; 0x1b
    1c56:	1a 8e       	std	Y+26, r1	; 0x1a
    1c58:	19 8e       	std	Y+25, r1	; 0x19
    1c5a:	80 a9       	ldd	r24, Z+48	; 0x30
    1c5c:	8d 8f       	std	Y+29, r24	; 0x1d
    1c5e:	81 a9       	ldd	r24, Z+49	; 0x31
    1c60:	8e 8f       	std	Y+30, r24	; 0x1e
    1c62:	82 a9       	ldd	r24, Z+50	; 0x32
    1c64:	8f 8f       	std	Y+31, r24	; 0x1f
    1c66:	83 a9       	ldd	r24, Z+51	; 0x33
    1c68:	88 a3       	std	Y+32, r24	; 0x20
    1c6a:	20 e2       	ldi	r18, 0x20	; 32
    1c6c:	ae 01       	movw	r20, r28
    1c6e:	4f 5f       	subi	r20, 0xFF	; 255
    1c70:	5f 4f       	sbci	r21, 0xFF	; 255
    1c72:	b6 01       	movw	r22, r12
    1c74:	c6 01       	movw	r24, r12
    1c76:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_sub>
    1c7a:	f8 1a       	sub	r15, r24
    1c7c:	f8 01       	movw	r30, r16
    1c7e:	80 ad       	ldd	r24, Z+56	; 0x38
    1c80:	89 83       	std	Y+1, r24	; 0x01
    1c82:	81 ad       	ldd	r24, Z+57	; 0x39
    1c84:	8a 83       	std	Y+2, r24	; 0x02
    1c86:	82 ad       	ldd	r24, Z+58	; 0x3a
    1c88:	8b 83       	std	Y+3, r24	; 0x03
    1c8a:	83 ad       	ldd	r24, Z+59	; 0x3b
    1c8c:	8c 83       	std	Y+4, r24	; 0x04
    1c8e:	84 ad       	ldd	r24, Z+60	; 0x3c
    1c90:	8d 83       	std	Y+5, r24	; 0x05
    1c92:	85 ad       	ldd	r24, Z+61	; 0x3d
    1c94:	8e 83       	std	Y+6, r24	; 0x06
    1c96:	86 ad       	ldd	r24, Z+62	; 0x3e
    1c98:	8f 83       	std	Y+7, r24	; 0x07
    1c9a:	87 ad       	ldd	r24, Z+63	; 0x3f
    1c9c:	88 87       	std	Y+8, r24	; 0x08
    1c9e:	1c 86       	std	Y+12, r1	; 0x0c
    1ca0:	1b 86       	std	Y+11, r1	; 0x0b
    1ca2:	1a 86       	std	Y+10, r1	; 0x0a
    1ca4:	19 86       	std	Y+9, r1	; 0x09
    1ca6:	84 a1       	ldd	r24, Z+36	; 0x24
    1ca8:	8d 87       	std	Y+13, r24	; 0x0d
    1caa:	85 a1       	ldd	r24, Z+37	; 0x25
    1cac:	8e 87       	std	Y+14, r24	; 0x0e
    1cae:	86 a1       	ldd	r24, Z+38	; 0x26
    1cb0:	8f 87       	std	Y+15, r24	; 0x0f
    1cb2:	87 a1       	ldd	r24, Z+39	; 0x27
    1cb4:	88 8b       	std	Y+16, r24	; 0x10
    1cb6:	80 a5       	ldd	r24, Z+40	; 0x28
    1cb8:	89 8b       	std	Y+17, r24	; 0x11
    1cba:	81 a5       	ldd	r24, Z+41	; 0x29
    1cbc:	8a 8b       	std	Y+18, r24	; 0x12
    1cbe:	82 a5       	ldd	r24, Z+42	; 0x2a
    1cc0:	8b 8b       	std	Y+19, r24	; 0x13
    1cc2:	83 a5       	ldd	r24, Z+43	; 0x2b
    1cc4:	8c 8b       	std	Y+20, r24	; 0x14
    1cc6:	84 a5       	ldd	r24, Z+44	; 0x2c
    1cc8:	8d 8b       	std	Y+21, r24	; 0x15
    1cca:	85 a5       	ldd	r24, Z+45	; 0x2d
    1ccc:	8e 8b       	std	Y+22, r24	; 0x16
    1cce:	86 a5       	ldd	r24, Z+46	; 0x2e
    1cd0:	8f 8b       	std	Y+23, r24	; 0x17
    1cd2:	87 a5       	ldd	r24, Z+47	; 0x2f
    1cd4:	88 8f       	std	Y+24, r24	; 0x18
    1cd6:	1c 8e       	std	Y+28, r1	; 0x1c
    1cd8:	1b 8e       	std	Y+27, r1	; 0x1b
    1cda:	1a 8e       	std	Y+26, r1	; 0x1a
    1cdc:	19 8e       	std	Y+25, r1	; 0x19
    1cde:	84 a9       	ldd	r24, Z+52	; 0x34
    1ce0:	8d 8f       	std	Y+29, r24	; 0x1d
    1ce2:	85 a9       	ldd	r24, Z+53	; 0x35
    1ce4:	8e 8f       	std	Y+30, r24	; 0x1e
    1ce6:	86 a9       	ldd	r24, Z+54	; 0x36
    1ce8:	8f 8f       	std	Y+31, r24	; 0x1f
    1cea:	87 a9       	ldd	r24, Z+55	; 0x37
    1cec:	88 a3       	std	Y+32, r24	; 0x20
    1cee:	20 e2       	ldi	r18, 0x20	; 32
    1cf0:	ae 01       	movw	r20, r28
    1cf2:	4f 5f       	subi	r20, 0xFF	; 255
    1cf4:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf6:	b6 01       	movw	r22, r12
    1cf8:	c6 01       	movw	r24, r12
    1cfa:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_sub>
    1cfe:	1f 2d       	mov	r17, r15
    1d00:	18 1b       	sub	r17, r24
    1d02:	92 f4       	brpl	.+36     	; 0x1d28 <vli_mmod_fast_secp256r1+0x454>
    1d04:	20 e2       	ldi	r18, 0x20	; 32
    1d06:	4e e0       	ldi	r20, 0x0E	; 14
    1d08:	51 e0       	ldi	r21, 0x01	; 1
    1d0a:	b6 01       	movw	r22, r12
    1d0c:	c6 01       	movw	r24, r12
    1d0e:	0e 94 62 05 	call	0xac4	; 0xac4 <uECC_vli_add>
    1d12:	18 0f       	add	r17, r24
    1d14:	ba f3       	brmi	.-18     	; 0x1d04 <vli_mmod_fast_secp256r1+0x430>
    1d16:	11 c0       	rjmp	.+34     	; 0x1d3a <vli_mmod_fast_secp256r1+0x466>
    1d18:	20 e2       	ldi	r18, 0x20	; 32
    1d1a:	4e e0       	ldi	r20, 0x0E	; 14
    1d1c:	51 e0       	ldi	r21, 0x01	; 1
    1d1e:	b6 01       	movw	r22, r12
    1d20:	c6 01       	movw	r24, r12
    1d22:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_sub>
    1d26:	18 1b       	sub	r17, r24
    1d28:	11 11       	cpse	r17, r1
    1d2a:	f6 cf       	rjmp	.-20     	; 0x1d18 <vli_mmod_fast_secp256r1+0x444>
    1d2c:	40 e2       	ldi	r20, 0x20	; 32
    1d2e:	b6 01       	movw	r22, r12
    1d30:	8e e0       	ldi	r24, 0x0E	; 14
    1d32:	91 e0       	ldi	r25, 0x01	; 1
    1d34:	08 d9       	rcall	.-3568   	; 0xf46 <uECC_vli_cmp_unsafe>
    1d36:	81 30       	cpi	r24, 0x01	; 1
    1d38:	79 f7       	brne	.-34     	; 0x1d18 <vli_mmod_fast_secp256r1+0x444>
    1d3a:	a0 96       	adiw	r28, 0x20	; 32
    1d3c:	0f b6       	in	r0, 0x3f	; 63
    1d3e:	f8 94       	cli
    1d40:	de bf       	out	0x3e, r29	; 62
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	cd bf       	out	0x3d, r28	; 61
    1d46:	df 91       	pop	r29
    1d48:	cf 91       	pop	r28
    1d4a:	1f 91       	pop	r17
    1d4c:	0f 91       	pop	r16
    1d4e:	ff 90       	pop	r15
    1d50:	df 90       	pop	r13
    1d52:	cf 90       	pop	r12
    1d54:	08 95       	ret

00001d56 <apply_z>:
    1d56:	af 92       	push	r10
    1d58:	bf 92       	push	r11
    1d5a:	cf 92       	push	r12
    1d5c:	df 92       	push	r13
    1d5e:	ef 92       	push	r14
    1d60:	ff 92       	push	r15
    1d62:	0f 93       	push	r16
    1d64:	1f 93       	push	r17
    1d66:	cf 93       	push	r28
    1d68:	df 93       	push	r29
    1d6a:	cd b7       	in	r28, 0x3d	; 61
    1d6c:	de b7       	in	r29, 0x3e	; 62
    1d6e:	a0 97       	sbiw	r28, 0x20	; 32
    1d70:	0f b6       	in	r0, 0x3f	; 63
    1d72:	f8 94       	cli
    1d74:	de bf       	out	0x3e, r29	; 62
    1d76:	0f be       	out	0x3f, r0	; 63
    1d78:	cd bf       	out	0x3d, r28	; 61
    1d7a:	5c 01       	movw	r10, r24
    1d7c:	7b 01       	movw	r14, r22
    1d7e:	6a 01       	movw	r12, r20
    1d80:	89 01       	movw	r16, r18
    1d82:	a9 01       	movw	r20, r18
    1d84:	b6 01       	movw	r22, r12
    1d86:	ce 01       	movw	r24, r28
    1d88:	01 96       	adiw	r24, 0x01	; 1
    1d8a:	22 db       	rcall	.-2492   	; 0x13d0 <uECC_vli_modSquare_fast>
    1d8c:	98 01       	movw	r18, r16
    1d8e:	ae 01       	movw	r20, r28
    1d90:	4f 5f       	subi	r20, 0xFF	; 255
    1d92:	5f 4f       	sbci	r21, 0xFF	; 255
    1d94:	b5 01       	movw	r22, r10
    1d96:	c5 01       	movw	r24, r10
    1d98:	ec da       	rcall	.-2600   	; 0x1372 <uECC_vli_modMult_fast>
    1d9a:	98 01       	movw	r18, r16
    1d9c:	a6 01       	movw	r20, r12
    1d9e:	be 01       	movw	r22, r28
    1da0:	6f 5f       	subi	r22, 0xFF	; 255
    1da2:	7f 4f       	sbci	r23, 0xFF	; 255
    1da4:	cb 01       	movw	r24, r22
    1da6:	e5 da       	rcall	.-2614   	; 0x1372 <uECC_vli_modMult_fast>
    1da8:	98 01       	movw	r18, r16
    1daa:	ae 01       	movw	r20, r28
    1dac:	4f 5f       	subi	r20, 0xFF	; 255
    1dae:	5f 4f       	sbci	r21, 0xFF	; 255
    1db0:	b7 01       	movw	r22, r14
    1db2:	c7 01       	movw	r24, r14
    1db4:	de da       	rcall	.-2628   	; 0x1372 <uECC_vli_modMult_fast>
    1db6:	a0 96       	adiw	r28, 0x20	; 32
    1db8:	0f b6       	in	r0, 0x3f	; 63
    1dba:	f8 94       	cli
    1dbc:	de bf       	out	0x3e, r29	; 62
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	cd bf       	out	0x3d, r28	; 61
    1dc2:	df 91       	pop	r29
    1dc4:	cf 91       	pop	r28
    1dc6:	1f 91       	pop	r17
    1dc8:	0f 91       	pop	r16
    1dca:	ff 90       	pop	r15
    1dcc:	ef 90       	pop	r14
    1dce:	df 90       	pop	r13
    1dd0:	cf 90       	pop	r12
    1dd2:	bf 90       	pop	r11
    1dd4:	af 90       	pop	r10
    1dd6:	08 95       	ret

00001dd8 <XYcZ_add>:
    1dd8:	4f 92       	push	r4
    1dda:	5f 92       	push	r5
    1ddc:	6f 92       	push	r6
    1dde:	7f 92       	push	r7
    1de0:	8f 92       	push	r8
    1de2:	9f 92       	push	r9
    1de4:	af 92       	push	r10
    1de6:	bf 92       	push	r11
    1de8:	cf 92       	push	r12
    1dea:	df 92       	push	r13
    1dec:	ef 92       	push	r14
    1dee:	ff 92       	push	r15
    1df0:	0f 93       	push	r16
    1df2:	1f 93       	push	r17
    1df4:	cf 93       	push	r28
    1df6:	df 93       	push	r29
    1df8:	cd b7       	in	r28, 0x3d	; 61
    1dfa:	de b7       	in	r29, 0x3e	; 62
    1dfc:	a0 97       	sbiw	r28, 0x20	; 32
    1dfe:	0f b6       	in	r0, 0x3f	; 63
    1e00:	f8 94       	cli
    1e02:	de bf       	out	0x3e, r29	; 62
    1e04:	0f be       	out	0x3f, r0	; 63
    1e06:	cd bf       	out	0x3d, r28	; 61
    1e08:	3c 01       	movw	r6, r24
    1e0a:	2b 01       	movw	r4, r22
    1e0c:	7a 01       	movw	r14, r20
    1e0e:	59 01       	movw	r10, r18
    1e10:	68 01       	movw	r12, r16
    1e12:	f8 01       	movw	r30, r16
    1e14:	10 81       	ld	r17, Z
    1e16:	46 01       	movw	r8, r12
    1e18:	f4 e0       	ldi	r31, 0x04	; 4
    1e1a:	8f 0e       	add	r8, r31
    1e1c:	91 1c       	adc	r9, r1
    1e1e:	01 2f       	mov	r16, r17
    1e20:	94 01       	movw	r18, r8
    1e22:	ac 01       	movw	r20, r24
    1e24:	b7 01       	movw	r22, r14
    1e26:	ce 01       	movw	r24, r28
    1e28:	01 96       	adiw	r24, 0x01	; 1
    1e2a:	08 d9       	rcall	.-3568   	; 0x103c <uECC_vli_modSub>
    1e2c:	a6 01       	movw	r20, r12
    1e2e:	be 01       	movw	r22, r28
    1e30:	6f 5f       	subi	r22, 0xFF	; 255
    1e32:	7f 4f       	sbci	r23, 0xFF	; 255
    1e34:	cb 01       	movw	r24, r22
    1e36:	cc da       	rcall	.-2664   	; 0x13d0 <uECC_vli_modSquare_fast>
    1e38:	96 01       	movw	r18, r12
    1e3a:	ae 01       	movw	r20, r28
    1e3c:	4f 5f       	subi	r20, 0xFF	; 255
    1e3e:	5f 4f       	sbci	r21, 0xFF	; 255
    1e40:	b3 01       	movw	r22, r6
    1e42:	c3 01       	movw	r24, r6
    1e44:	96 da       	rcall	.-2772   	; 0x1372 <uECC_vli_modMult_fast>
    1e46:	96 01       	movw	r18, r12
    1e48:	ae 01       	movw	r20, r28
    1e4a:	4f 5f       	subi	r20, 0xFF	; 255
    1e4c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e4e:	b7 01       	movw	r22, r14
    1e50:	c7 01       	movw	r24, r14
    1e52:	8f da       	rcall	.-2786   	; 0x1372 <uECC_vli_modMult_fast>
    1e54:	94 01       	movw	r18, r8
    1e56:	a2 01       	movw	r20, r4
    1e58:	b5 01       	movw	r22, r10
    1e5a:	c5 01       	movw	r24, r10
    1e5c:	ef d8       	rcall	.-3618   	; 0x103c <uECC_vli_modSub>
    1e5e:	a6 01       	movw	r20, r12
    1e60:	b5 01       	movw	r22, r10
    1e62:	ce 01       	movw	r24, r28
    1e64:	01 96       	adiw	r24, 0x01	; 1
    1e66:	b4 da       	rcall	.-2712   	; 0x13d0 <uECC_vli_modSquare_fast>
    1e68:	94 01       	movw	r18, r8
    1e6a:	a3 01       	movw	r20, r6
    1e6c:	be 01       	movw	r22, r28
    1e6e:	6f 5f       	subi	r22, 0xFF	; 255
    1e70:	7f 4f       	sbci	r23, 0xFF	; 255
    1e72:	cb 01       	movw	r24, r22
    1e74:	e3 d8       	rcall	.-3642   	; 0x103c <uECC_vli_modSub>
    1e76:	94 01       	movw	r18, r8
    1e78:	a7 01       	movw	r20, r14
    1e7a:	be 01       	movw	r22, r28
    1e7c:	6f 5f       	subi	r22, 0xFF	; 255
    1e7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e80:	cb 01       	movw	r24, r22
    1e82:	dc d8       	rcall	.-3656   	; 0x103c <uECC_vli_modSub>
    1e84:	94 01       	movw	r18, r8
    1e86:	a3 01       	movw	r20, r6
    1e88:	b7 01       	movw	r22, r14
    1e8a:	c7 01       	movw	r24, r14
    1e8c:	d7 d8       	rcall	.-3666   	; 0x103c <uECC_vli_modSub>
    1e8e:	96 01       	movw	r18, r12
    1e90:	a7 01       	movw	r20, r14
    1e92:	b2 01       	movw	r22, r4
    1e94:	c2 01       	movw	r24, r4
    1e96:	6d da       	rcall	.-2854   	; 0x1372 <uECC_vli_modMult_fast>
    1e98:	94 01       	movw	r18, r8
    1e9a:	ae 01       	movw	r20, r28
    1e9c:	4f 5f       	subi	r20, 0xFF	; 255
    1e9e:	5f 4f       	sbci	r21, 0xFF	; 255
    1ea0:	b3 01       	movw	r22, r6
    1ea2:	c7 01       	movw	r24, r14
    1ea4:	cb d8       	rcall	.-3690   	; 0x103c <uECC_vli_modSub>
    1ea6:	96 01       	movw	r18, r12
    1ea8:	a7 01       	movw	r20, r14
    1eaa:	b5 01       	movw	r22, r10
    1eac:	c5 01       	movw	r24, r10
    1eae:	61 da       	rcall	.-2878   	; 0x1372 <uECC_vli_modMult_fast>
    1eb0:	94 01       	movw	r18, r8
    1eb2:	a2 01       	movw	r20, r4
    1eb4:	b5 01       	movw	r22, r10
    1eb6:	c5 01       	movw	r24, r10
    1eb8:	c1 d8       	rcall	.-3710   	; 0x103c <uECC_vli_modSub>
    1eba:	41 2f       	mov	r20, r17
    1ebc:	be 01       	movw	r22, r28
    1ebe:	6f 5f       	subi	r22, 0xFF	; 255
    1ec0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ec2:	c7 01       	movw	r24, r14
    1ec4:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    1ec8:	a0 96       	adiw	r28, 0x20	; 32
    1eca:	0f b6       	in	r0, 0x3f	; 63
    1ecc:	f8 94       	cli
    1ece:	de bf       	out	0x3e, r29	; 62
    1ed0:	0f be       	out	0x3f, r0	; 63
    1ed2:	cd bf       	out	0x3d, r28	; 61
    1ed4:	df 91       	pop	r29
    1ed6:	cf 91       	pop	r28
    1ed8:	1f 91       	pop	r17
    1eda:	0f 91       	pop	r16
    1edc:	ff 90       	pop	r15
    1ede:	ef 90       	pop	r14
    1ee0:	df 90       	pop	r13
    1ee2:	cf 90       	pop	r12
    1ee4:	bf 90       	pop	r11
    1ee6:	af 90       	pop	r10
    1ee8:	9f 90       	pop	r9
    1eea:	8f 90       	pop	r8
    1eec:	7f 90       	pop	r7
    1eee:	6f 90       	pop	r6
    1ef0:	5f 90       	pop	r5
    1ef2:	4f 90       	pop	r4
    1ef4:	08 95       	ret

00001ef6 <XYcZ_addC>:
    1ef6:	4f 92       	push	r4
    1ef8:	5f 92       	push	r5
    1efa:	6f 92       	push	r6
    1efc:	7f 92       	push	r7
    1efe:	8f 92       	push	r8
    1f00:	9f 92       	push	r9
    1f02:	af 92       	push	r10
    1f04:	bf 92       	push	r11
    1f06:	cf 92       	push	r12
    1f08:	df 92       	push	r13
    1f0a:	ef 92       	push	r14
    1f0c:	ff 92       	push	r15
    1f0e:	0f 93       	push	r16
    1f10:	1f 93       	push	r17
    1f12:	cf 93       	push	r28
    1f14:	df 93       	push	r29
    1f16:	cd b7       	in	r28, 0x3d	; 61
    1f18:	de b7       	in	r29, 0x3e	; 62
    1f1a:	c0 56       	subi	r28, 0x60	; 96
    1f1c:	d1 09       	sbc	r29, r1
    1f1e:	0f b6       	in	r0, 0x3f	; 63
    1f20:	f8 94       	cli
    1f22:	de bf       	out	0x3e, r29	; 62
    1f24:	0f be       	out	0x3f, r0	; 63
    1f26:	cd bf       	out	0x3d, r28	; 61
    1f28:	4c 01       	movw	r8, r24
    1f2a:	2b 01       	movw	r4, r22
    1f2c:	5a 01       	movw	r10, r20
    1f2e:	39 01       	movw	r6, r18
    1f30:	68 01       	movw	r12, r16
    1f32:	f8 01       	movw	r30, r16
    1f34:	10 81       	ld	r17, Z
    1f36:	76 01       	movw	r14, r12
    1f38:	f4 e0       	ldi	r31, 0x04	; 4
    1f3a:	ef 0e       	add	r14, r31
    1f3c:	f1 1c       	adc	r15, r1
    1f3e:	01 2f       	mov	r16, r17
    1f40:	97 01       	movw	r18, r14
    1f42:	ac 01       	movw	r20, r24
    1f44:	b5 01       	movw	r22, r10
    1f46:	ce 01       	movw	r24, r28
    1f48:	01 96       	adiw	r24, 0x01	; 1
    1f4a:	78 d8       	rcall	.-3856   	; 0x103c <uECC_vli_modSub>
    1f4c:	a6 01       	movw	r20, r12
    1f4e:	be 01       	movw	r22, r28
    1f50:	6f 5f       	subi	r22, 0xFF	; 255
    1f52:	7f 4f       	sbci	r23, 0xFF	; 255
    1f54:	cb 01       	movw	r24, r22
    1f56:	3c da       	rcall	.-2952   	; 0x13d0 <uECC_vli_modSquare_fast>
    1f58:	96 01       	movw	r18, r12
    1f5a:	ae 01       	movw	r20, r28
    1f5c:	4f 5f       	subi	r20, 0xFF	; 255
    1f5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f60:	b4 01       	movw	r22, r8
    1f62:	c4 01       	movw	r24, r8
    1f64:	06 da       	rcall	.-3060   	; 0x1372 <uECC_vli_modMult_fast>
    1f66:	96 01       	movw	r18, r12
    1f68:	ae 01       	movw	r20, r28
    1f6a:	4f 5f       	subi	r20, 0xFF	; 255
    1f6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1f6e:	b5 01       	movw	r22, r10
    1f70:	c5 01       	movw	r24, r10
    1f72:	ff d9       	rcall	.-3074   	; 0x1372 <uECC_vli_modMult_fast>
    1f74:	97 01       	movw	r18, r14
    1f76:	a2 01       	movw	r20, r4
    1f78:	b3 01       	movw	r22, r6
    1f7a:	ce 01       	movw	r24, r28
    1f7c:	01 96       	adiw	r24, 0x01	; 1
    1f7e:	42 d8       	rcall	.-3964   	; 0x1004 <uECC_vli_modAdd>
    1f80:	97 01       	movw	r18, r14
    1f82:	a2 01       	movw	r20, r4
    1f84:	b3 01       	movw	r22, r6
    1f86:	c3 01       	movw	r24, r6
    1f88:	59 d8       	rcall	.-3918   	; 0x103c <uECC_vli_modSub>
    1f8a:	97 01       	movw	r18, r14
    1f8c:	a4 01       	movw	r20, r8
    1f8e:	b5 01       	movw	r22, r10
    1f90:	ce 01       	movw	r24, r28
    1f92:	81 96       	adiw	r24, 0x21	; 33
    1f94:	53 d8       	rcall	.-3930   	; 0x103c <uECC_vli_modSub>
    1f96:	96 01       	movw	r18, r12
    1f98:	ae 01       	movw	r20, r28
    1f9a:	4f 5d       	subi	r20, 0xDF	; 223
    1f9c:	5f 4f       	sbci	r21, 0xFF	; 255
    1f9e:	b2 01       	movw	r22, r4
    1fa0:	c2 01       	movw	r24, r4
    1fa2:	e7 d9       	rcall	.-3122   	; 0x1372 <uECC_vli_modMult_fast>
    1fa4:	97 01       	movw	r18, r14
    1fa6:	a5 01       	movw	r20, r10
    1fa8:	b4 01       	movw	r22, r8
    1faa:	ce 01       	movw	r24, r28
    1fac:	81 96       	adiw	r24, 0x21	; 33
    1fae:	2a d8       	rcall	.-4012   	; 0x1004 <uECC_vli_modAdd>
    1fb0:	a6 01       	movw	r20, r12
    1fb2:	b3 01       	movw	r22, r6
    1fb4:	c5 01       	movw	r24, r10
    1fb6:	0c da       	rcall	.-3048   	; 0x13d0 <uECC_vli_modSquare_fast>
    1fb8:	97 01       	movw	r18, r14
    1fba:	ae 01       	movw	r20, r28
    1fbc:	4f 5d       	subi	r20, 0xDF	; 223
    1fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1fc0:	b5 01       	movw	r22, r10
    1fc2:	c5 01       	movw	r24, r10
    1fc4:	3b d8       	rcall	.-3978   	; 0x103c <uECC_vli_modSub>
    1fc6:	97 01       	movw	r18, r14
    1fc8:	a5 01       	movw	r20, r10
    1fca:	b4 01       	movw	r22, r8
    1fcc:	ce 01       	movw	r24, r28
    1fce:	8f 5b       	subi	r24, 0xBF	; 191
    1fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd2:	34 d8       	rcall	.-3992   	; 0x103c <uECC_vli_modSub>
    1fd4:	96 01       	movw	r18, r12
    1fd6:	ae 01       	movw	r20, r28
    1fd8:	4f 5b       	subi	r20, 0xBF	; 191
    1fda:	5f 4f       	sbci	r21, 0xFF	; 255
    1fdc:	b3 01       	movw	r22, r6
    1fde:	c3 01       	movw	r24, r6
    1fe0:	c8 d9       	rcall	.-3184   	; 0x1372 <uECC_vli_modMult_fast>
    1fe2:	97 01       	movw	r18, r14
    1fe4:	a2 01       	movw	r20, r4
    1fe6:	b3 01       	movw	r22, r6
    1fe8:	c3 01       	movw	r24, r6
    1fea:	28 d8       	rcall	.-4016   	; 0x103c <uECC_vli_modSub>
    1fec:	a6 01       	movw	r20, r12
    1fee:	be 01       	movw	r22, r28
    1ff0:	6f 5f       	subi	r22, 0xFF	; 255
    1ff2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff4:	ce 01       	movw	r24, r28
    1ff6:	8f 5b       	subi	r24, 0xBF	; 191
    1ff8:	9f 4f       	sbci	r25, 0xFF	; 255
    1ffa:	ea d9       	rcall	.-3116   	; 0x13d0 <uECC_vli_modSquare_fast>
    1ffc:	97 01       	movw	r18, r14
    1ffe:	ae 01       	movw	r20, r28
    2000:	4f 5d       	subi	r20, 0xDF	; 223
    2002:	5f 4f       	sbci	r21, 0xFF	; 255
    2004:	be 01       	movw	r22, r28
    2006:	6f 5b       	subi	r22, 0xBF	; 191
    2008:	7f 4f       	sbci	r23, 0xFF	; 255
    200a:	cb 01       	movw	r24, r22
    200c:	17 d8       	rcall	.-4050   	; 0x103c <uECC_vli_modSub>
    200e:	97 01       	movw	r18, r14
    2010:	a4 01       	movw	r20, r8
    2012:	be 01       	movw	r22, r28
    2014:	6f 5b       	subi	r22, 0xBF	; 191
    2016:	7f 4f       	sbci	r23, 0xFF	; 255
    2018:	ce 01       	movw	r24, r28
    201a:	81 96       	adiw	r24, 0x21	; 33
    201c:	0f d8       	rcall	.-4066   	; 0x103c <uECC_vli_modSub>
    201e:	96 01       	movw	r18, r12
    2020:	ae 01       	movw	r20, r28
    2022:	4f 5f       	subi	r20, 0xFF	; 255
    2024:	5f 4f       	sbci	r21, 0xFF	; 255
    2026:	be 01       	movw	r22, r28
    2028:	6f 5d       	subi	r22, 0xDF	; 223
    202a:	7f 4f       	sbci	r23, 0xFF	; 255
    202c:	cb 01       	movw	r24, r22
    202e:	a1 d9       	rcall	.-3262   	; 0x1372 <uECC_vli_modMult_fast>
    2030:	97 01       	movw	r18, r14
    2032:	a2 01       	movw	r20, r4
    2034:	be 01       	movw	r22, r28
    2036:	6f 5d       	subi	r22, 0xDF	; 223
    2038:	7f 4f       	sbci	r23, 0xFF	; 255
    203a:	c2 01       	movw	r24, r4
    203c:	0e 94 1e 08 	call	0x103c	; 0x103c <uECC_vli_modSub>
    2040:	41 2f       	mov	r20, r17
    2042:	be 01       	movw	r22, r28
    2044:	6f 5b       	subi	r22, 0xBF	; 191
    2046:	7f 4f       	sbci	r23, 0xFF	; 255
    2048:	c4 01       	movw	r24, r8
    204a:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    204e:	c0 5a       	subi	r28, 0xA0	; 160
    2050:	df 4f       	sbci	r29, 0xFF	; 255
    2052:	0f b6       	in	r0, 0x3f	; 63
    2054:	f8 94       	cli
    2056:	de bf       	out	0x3e, r29	; 62
    2058:	0f be       	out	0x3f, r0	; 63
    205a:	cd bf       	out	0x3d, r28	; 61
    205c:	df 91       	pop	r29
    205e:	cf 91       	pop	r28
    2060:	1f 91       	pop	r17
    2062:	0f 91       	pop	r16
    2064:	ff 90       	pop	r15
    2066:	ef 90       	pop	r14
    2068:	df 90       	pop	r13
    206a:	cf 90       	pop	r12
    206c:	bf 90       	pop	r11
    206e:	af 90       	pop	r10
    2070:	9f 90       	pop	r9
    2072:	8f 90       	pop	r8
    2074:	7f 90       	pop	r7
    2076:	6f 90       	pop	r6
    2078:	5f 90       	pop	r5
    207a:	4f 90       	pop	r4
    207c:	08 95       	ret

0000207e <EccPoint_mult>:
    207e:	2f 92       	push	r2
    2080:	3f 92       	push	r3
    2082:	4f 92       	push	r4
    2084:	5f 92       	push	r5
    2086:	6f 92       	push	r6
    2088:	7f 92       	push	r7
    208a:	8f 92       	push	r8
    208c:	9f 92       	push	r9
    208e:	af 92       	push	r10
    2090:	bf 92       	push	r11
    2092:	cf 92       	push	r12
    2094:	df 92       	push	r13
    2096:	ef 92       	push	r14
    2098:	ff 92       	push	r15
    209a:	0f 93       	push	r16
    209c:	1f 93       	push	r17
    209e:	cf 93       	push	r28
    20a0:	df 93       	push	r29
    20a2:	cd b7       	in	r28, 0x3d	; 61
    20a4:	de b7       	in	r29, 0x3e	; 62
    20a6:	cb 5c       	subi	r28, 0xCB	; 203
    20a8:	d1 09       	sbc	r29, r1
    20aa:	0f b6       	in	r0, 0x3f	; 63
    20ac:	f8 94       	cli
    20ae:	de bf       	out	0x3e, r29	; 62
    20b0:	0f be       	out	0x3f, r0	; 63
    20b2:	cd bf       	out	0x3d, r28	; 61
    20b4:	c6 53       	subi	r28, 0x36	; 54
    20b6:	df 4f       	sbci	r29, 0xFF	; 255
    20b8:	99 83       	std	Y+1, r25	; 0x01
    20ba:	88 83       	st	Y, r24
    20bc:	ca 5c       	subi	r28, 0xCA	; 202
    20be:	d0 40       	sbci	r29, 0x00	; 0
    20c0:	cc 53       	subi	r28, 0x3C	; 60
    20c2:	df 4f       	sbci	r29, 0xFF	; 255
    20c4:	79 83       	std	Y+1, r23	; 0x01
    20c6:	68 83       	st	Y, r22
    20c8:	c4 5c       	subi	r28, 0xC4	; 196
    20ca:	d0 40       	sbci	r29, 0x00	; 0
    20cc:	cf 53       	subi	r28, 0x3F	; 63
    20ce:	df 4f       	sbci	r29, 0xFF	; 255
    20d0:	59 83       	std	Y+1, r21	; 0x01
    20d2:	48 83       	st	Y, r20
    20d4:	c1 5c       	subi	r28, 0xC1	; 193
    20d6:	d0 40       	sbci	r29, 0x00	; 0
    20d8:	69 01       	movw	r12, r18
    20da:	17 01       	movw	r2, r14
    20dc:	f7 01       	movw	r30, r14
    20de:	f0 81       	ld	r31, Z
    20e0:	cd 53       	subi	r28, 0x3D	; 61
    20e2:	df 4f       	sbci	r29, 0xFF	; 255
    20e4:	f8 83       	st	Y, r31
    20e6:	c3 5c       	subi	r28, 0xC3	; 195
    20e8:	d0 40       	sbci	r29, 0x00	; 0
    20ea:	4f 2f       	mov	r20, r31
    20ec:	ce 01       	movw	r24, r28
    20ee:	81 96       	adiw	r24, 0x21	; 33
    20f0:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    20f4:	cd 53       	subi	r28, 0x3D	; 61
    20f6:	df 4f       	sbci	r29, 0xFF	; 255
    20f8:	28 81       	ld	r18, Y
    20fa:	c3 5c       	subi	r28, 0xC3	; 195
    20fc:	d0 40       	sbci	r29, 0x00	; 0
    20fe:	02 2e       	mov	r0, r18
    2100:	00 0c       	add	r0, r0
    2102:	33 0b       	sbc	r19, r19
    2104:	ca 53       	subi	r28, 0x3A	; 58
    2106:	df 4f       	sbci	r29, 0xFF	; 255
    2108:	39 83       	std	Y+1, r19	; 0x01
    210a:	28 83       	st	Y, r18
    210c:	c6 5c       	subi	r28, 0xC6	; 198
    210e:	d0 40       	sbci	r29, 0x00	; 0
    2110:	cc 53       	subi	r28, 0x3C	; 60
    2112:	df 4f       	sbci	r29, 0xFF	; 255
    2114:	88 81       	ld	r24, Y
    2116:	99 81       	ldd	r25, Y+1	; 0x01
    2118:	c4 5c       	subi	r28, 0xC4	; 196
    211a:	d0 40       	sbci	r29, 0x00	; 0
    211c:	82 0f       	add	r24, r18
    211e:	93 1f       	adc	r25, r19
    2120:	c8 53       	subi	r28, 0x38	; 56
    2122:	df 4f       	sbci	r29, 0xFF	; 255
    2124:	99 83       	std	Y+1, r25	; 0x01
    2126:	88 83       	st	Y, r24
    2128:	c8 5c       	subi	r28, 0xC8	; 200
    212a:	d0 40       	sbci	r29, 0x00	; 0
    212c:	cd 53       	subi	r28, 0x3D	; 61
    212e:	df 4f       	sbci	r29, 0xFF	; 255
    2130:	48 81       	ld	r20, Y
    2132:	c3 5c       	subi	r28, 0xC3	; 195
    2134:	d0 40       	sbci	r29, 0x00	; 0
    2136:	bc 01       	movw	r22, r24
    2138:	ce 01       	movw	r24, r28
    213a:	8f 59       	subi	r24, 0x9F	; 159
    213c:	9f 4f       	sbci	r25, 0xFF	; 255
    213e:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2142:	f7 01       	movw	r30, r14
    2144:	b0 80       	ld	r11, Z
    2146:	c1 14       	cp	r12, r1
    2148:	d1 04       	cpc	r13, r1
    214a:	41 f0       	breq	.+16     	; 0x215c <EccPoint_mult+0xde>
    214c:	4b 2d       	mov	r20, r11
    214e:	b6 01       	movw	r22, r12
    2150:	ce 01       	movw	r24, r28
    2152:	8f 55       	subi	r24, 0x5F	; 95
    2154:	9f 4f       	sbci	r25, 0xFF	; 255
    2156:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    215a:	0c c0       	rjmp	.+24     	; 0x2174 <EccPoint_mult+0xf6>
    215c:	6b 2d       	mov	r22, r11
    215e:	ce 01       	movw	r24, r28
    2160:	8f 55       	subi	r24, 0x5F	; 95
    2162:	9f 4f       	sbci	r25, 0xFF	; 255
    2164:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <uECC_vli_clear>
    2168:	81 e0       	ldi	r24, 0x01	; 1
    216a:	cf 55       	subi	r28, 0x5F	; 95
    216c:	df 4f       	sbci	r29, 0xFF	; 255
    216e:	88 83       	st	Y, r24
    2170:	c1 5a       	subi	r28, 0xA1	; 161
    2172:	d0 40       	sbci	r29, 0x00	; 0
    2174:	4b 2d       	mov	r20, r11
    2176:	be 01       	movw	r22, r28
    2178:	6f 5d       	subi	r22, 0xDF	; 223
    217a:	7f 4f       	sbci	r23, 0xFF	; 255
    217c:	ce 01       	movw	r24, r28
    217e:	01 96       	adiw	r24, 0x01	; 1
    2180:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2184:	0f 2e       	mov	r0, r31
    2186:	f1 e4       	ldi	r31, 0x41	; 65
    2188:	ef 2e       	mov	r14, r31
    218a:	f1 2c       	mov	r15, r1
    218c:	f0 2d       	mov	r31, r0
    218e:	ec 0e       	add	r14, r28
    2190:	fd 1e       	adc	r15, r29
    2192:	f0 e2       	ldi	r31, 0x20	; 32
    2194:	ef 0e       	add	r14, r31
    2196:	f1 1c       	adc	r15, r1
    2198:	4b 2d       	mov	r20, r11
    219a:	b7 01       	movw	r22, r14
    219c:	ce 01       	movw	r24, r28
    219e:	8f 5b       	subi	r24, 0xBF	; 191
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    21a6:	91 01       	movw	r18, r2
    21a8:	ae 01       	movw	r20, r28
    21aa:	4f 55       	subi	r20, 0x5F	; 95
    21ac:	5f 4f       	sbci	r21, 0xFF	; 255
    21ae:	b7 01       	movw	r22, r14
    21b0:	ce 01       	movw	r24, r28
    21b2:	81 96       	adiw	r24, 0x21	; 33
    21b4:	d0 dd       	rcall	.-1120   	; 0x1d56 <apply_z>
    21b6:	f1 01       	movw	r30, r2
    21b8:	ec 55       	subi	r30, 0x5C	; 92
    21ba:	ff 4f       	sbci	r31, 0xFF	; 255
    21bc:	01 90       	ld	r0, Z+
    21be:	f0 81       	ld	r31, Z
    21c0:	e0 2d       	mov	r30, r0
    21c2:	91 01       	movw	r18, r2
    21c4:	ae 01       	movw	r20, r28
    21c6:	4f 55       	subi	r20, 0x5F	; 95
    21c8:	5f 4f       	sbci	r21, 0xFF	; 255
    21ca:	b7 01       	movw	r22, r14
    21cc:	ce 01       	movw	r24, r28
    21ce:	81 96       	adiw	r24, 0x21	; 33
    21d0:	09 95       	icall
    21d2:	91 01       	movw	r18, r2
    21d4:	ae 01       	movw	r20, r28
    21d6:	4f 55       	subi	r20, 0x5F	; 95
    21d8:	5f 4f       	sbci	r21, 0xFF	; 255
    21da:	be 01       	movw	r22, r28
    21dc:	6f 5b       	subi	r22, 0xBF	; 191
    21de:	7f 4f       	sbci	r23, 0xFF	; 255
    21e0:	ce 01       	movw	r24, r28
    21e2:	01 96       	adiw	r24, 0x01	; 1
    21e4:	b8 dd       	rcall	.-1168   	; 0x1d56 <apply_z>
    21e6:	58 01       	movw	r10, r16
    21e8:	22 e0       	ldi	r18, 0x02	; 2
    21ea:	a2 1a       	sub	r10, r18
    21ec:	b1 08       	sbc	r11, r1
    21ee:	1a 14       	cp	r1, r10
    21f0:	1b 04       	cpc	r1, r11
    21f2:	0c f0       	brlt	.+2      	; 0x21f6 <EccPoint_mult+0x178>
    21f4:	53 c0       	rjmp	.+166    	; 0x229c <EccPoint_mult+0x21e>
    21f6:	44 24       	eor	r4, r4
    21f8:	43 94       	inc	r4
    21fa:	51 2c       	mov	r5, r1
    21fc:	b5 01       	movw	r22, r10
    21fe:	cf 53       	subi	r28, 0x3F	; 63
    2200:	df 4f       	sbci	r29, 0xFF	; 255
    2202:	88 81       	ld	r24, Y
    2204:	99 81       	ldd	r25, Y+1	; 0x01
    2206:	c1 5c       	subi	r28, 0xC1	; 193
    2208:	d0 40       	sbci	r29, 0x00	; 0
    220a:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    220e:	92 01       	movw	r18, r4
    2210:	88 23       	and	r24, r24
    2212:	11 f0       	breq	.+4      	; 0x2218 <EccPoint_mult+0x19a>
    2214:	20 e0       	ldi	r18, 0x00	; 0
    2216:	30 e0       	ldi	r19, 0x00	; 0
    2218:	39 01       	movw	r6, r18
    221a:	66 0c       	add	r6, r6
    221c:	77 1c       	adc	r7, r7
    221e:	66 0c       	add	r6, r6
    2220:	77 1c       	adc	r7, r7
    2222:	66 0c       	add	r6, r6
    2224:	77 1c       	adc	r7, r7
    2226:	66 0c       	add	r6, r6
    2228:	77 1c       	adc	r7, r7
    222a:	66 0c       	add	r6, r6
    222c:	77 1c       	adc	r7, r7
    222e:	0f 2e       	mov	r0, r31
    2230:	f1 e4       	ldi	r31, 0x41	; 65
    2232:	cf 2e       	mov	r12, r31
    2234:	d1 2c       	mov	r13, r1
    2236:	f0 2d       	mov	r31, r0
    2238:	cc 0e       	add	r12, r28
    223a:	dd 1e       	adc	r13, r29
    223c:	c6 0c       	add	r12, r6
    223e:	d7 1c       	adc	r13, r7
    2240:	81 e0       	ldi	r24, 0x01	; 1
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	8c 0f       	add	r24, r28
    2246:	9d 1f       	adc	r25, r29
    2248:	68 0e       	add	r6, r24
    224a:	79 1e       	adc	r7, r25
    224c:	72 01       	movw	r14, r4
    224e:	e2 1a       	sub	r14, r18
    2250:	f3 0a       	sbc	r15, r19
    2252:	ee 0c       	add	r14, r14
    2254:	ff 1c       	adc	r15, r15
    2256:	ee 0c       	add	r14, r14
    2258:	ff 1c       	adc	r15, r15
    225a:	ee 0c       	add	r14, r14
    225c:	ff 1c       	adc	r15, r15
    225e:	ee 0c       	add	r14, r14
    2260:	ff 1c       	adc	r15, r15
    2262:	ee 0c       	add	r14, r14
    2264:	ff 1c       	adc	r15, r15
    2266:	0f 2e       	mov	r0, r31
    2268:	f1 e4       	ldi	r31, 0x41	; 65
    226a:	8f 2e       	mov	r8, r31
    226c:	91 2c       	mov	r9, r1
    226e:	f0 2d       	mov	r31, r0
    2270:	8c 0e       	add	r8, r28
    2272:	9d 1e       	adc	r9, r29
    2274:	8e 0c       	add	r8, r14
    2276:	9f 1c       	adc	r9, r15
    2278:	e8 0e       	add	r14, r24
    227a:	f9 1e       	adc	r15, r25
    227c:	81 01       	movw	r16, r2
    227e:	96 01       	movw	r18, r12
    2280:	a3 01       	movw	r20, r6
    2282:	b4 01       	movw	r22, r8
    2284:	c7 01       	movw	r24, r14
    2286:	37 de       	rcall	.-914    	; 0x1ef6 <XYcZ_addC>
    2288:	94 01       	movw	r18, r8
    228a:	a7 01       	movw	r20, r14
    228c:	b6 01       	movw	r22, r12
    228e:	c3 01       	movw	r24, r6
    2290:	a3 dd       	rcall	.-1210   	; 0x1dd8 <XYcZ_add>
    2292:	91 e0       	ldi	r25, 0x01	; 1
    2294:	a9 1a       	sub	r10, r25
    2296:	b1 08       	sbc	r11, r1
    2298:	09 f0       	breq	.+2      	; 0x229c <EccPoint_mult+0x21e>
    229a:	b0 cf       	rjmp	.-160    	; 0x21fc <EccPoint_mult+0x17e>
    229c:	60 e0       	ldi	r22, 0x00	; 0
    229e:	70 e0       	ldi	r23, 0x00	; 0
    22a0:	cf 53       	subi	r28, 0x3F	; 63
    22a2:	df 4f       	sbci	r29, 0xFF	; 255
    22a4:	88 81       	ld	r24, Y
    22a6:	99 81       	ldd	r25, Y+1	; 0x01
    22a8:	c1 5c       	subi	r28, 0xC1	; 193
    22aa:	d0 40       	sbci	r29, 0x00	; 0
    22ac:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    22b0:	21 e0       	ldi	r18, 0x01	; 1
    22b2:	30 e0       	ldi	r19, 0x00	; 0
    22b4:	88 23       	and	r24, r24
    22b6:	11 f0       	breq	.+4      	; 0x22bc <EccPoint_mult+0x23e>
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	69 01       	movw	r12, r18
    22be:	cc 0c       	add	r12, r12
    22c0:	dd 1c       	adc	r13, r13
    22c2:	cc 0c       	add	r12, r12
    22c4:	dd 1c       	adc	r13, r13
    22c6:	cc 0c       	add	r12, r12
    22c8:	dd 1c       	adc	r13, r13
    22ca:	cc 0c       	add	r12, r12
    22cc:	dd 1c       	adc	r13, r13
    22ce:	cc 0c       	add	r12, r12
    22d0:	dd 1c       	adc	r13, r13
    22d2:	0f 2e       	mov	r0, r31
    22d4:	f1 e4       	ldi	r31, 0x41	; 65
    22d6:	8f 2e       	mov	r8, r31
    22d8:	91 2c       	mov	r9, r1
    22da:	f0 2d       	mov	r31, r0
    22dc:	8c 0e       	add	r8, r28
    22de:	9d 1e       	adc	r9, r29
    22e0:	8c 0c       	add	r8, r12
    22e2:	9d 1c       	adc	r9, r13
    22e4:	e1 e0       	ldi	r30, 0x01	; 1
    22e6:	f0 e0       	ldi	r31, 0x00	; 0
    22e8:	ec 0f       	add	r30, r28
    22ea:	fd 1f       	adc	r31, r29
    22ec:	ce 0e       	add	r12, r30
    22ee:	df 1e       	adc	r13, r31
    22f0:	81 e0       	ldi	r24, 0x01	; 1
    22f2:	90 e0       	ldi	r25, 0x00	; 0
    22f4:	7c 01       	movw	r14, r24
    22f6:	e2 1a       	sub	r14, r18
    22f8:	f3 0a       	sbc	r15, r19
    22fa:	ee 0c       	add	r14, r14
    22fc:	ff 1c       	adc	r15, r15
    22fe:	ee 0c       	add	r14, r14
    2300:	ff 1c       	adc	r15, r15
    2302:	ee 0c       	add	r14, r14
    2304:	ff 1c       	adc	r15, r15
    2306:	ee 0c       	add	r14, r14
    2308:	ff 1c       	adc	r15, r15
    230a:	ee 0c       	add	r14, r14
    230c:	ff 1c       	adc	r15, r15
    230e:	0f 2e       	mov	r0, r31
    2310:	f1 e4       	ldi	r31, 0x41	; 65
    2312:	af 2e       	mov	r10, r31
    2314:	b1 2c       	mov	r11, r1
    2316:	f0 2d       	mov	r31, r0
    2318:	ac 0e       	add	r10, r28
    231a:	bd 1e       	adc	r11, r29
    231c:	ae 0c       	add	r10, r14
    231e:	bf 1c       	adc	r11, r15
    2320:	ee 0e       	add	r14, r30
    2322:	ff 1e       	adc	r15, r31
    2324:	81 01       	movw	r16, r2
    2326:	94 01       	movw	r18, r8
    2328:	a6 01       	movw	r20, r12
    232a:	b5 01       	movw	r22, r10
    232c:	c7 01       	movw	r24, r14
    232e:	e3 dd       	rcall	.-1082   	; 0x1ef6 <XYcZ_addC>
    2330:	31 01       	movw	r6, r2
    2332:	f4 e0       	ldi	r31, 0x04	; 4
    2334:	6f 0e       	add	r6, r31
    2336:	71 1c       	adc	r7, r1
    2338:	cd 53       	subi	r28, 0x3D	; 61
    233a:	df 4f       	sbci	r29, 0xFF	; 255
    233c:	08 81       	ld	r16, Y
    233e:	c3 5c       	subi	r28, 0xC3	; 195
    2340:	d0 40       	sbci	r29, 0x00	; 0
    2342:	93 01       	movw	r18, r6
    2344:	ae 01       	movw	r20, r28
    2346:	4f 5f       	subi	r20, 0xFF	; 255
    2348:	5f 4f       	sbci	r21, 0xFF	; 255
    234a:	be 01       	movw	r22, r28
    234c:	6f 5d       	subi	r22, 0xDF	; 223
    234e:	7f 4f       	sbci	r23, 0xFF	; 255
    2350:	ce 01       	movw	r24, r28
    2352:	8f 57       	subi	r24, 0x7F	; 127
    2354:	9f 4f       	sbci	r25, 0xFF	; 255
    2356:	0e 94 1e 08 	call	0x103c	; 0x103c <uECC_vli_modSub>
    235a:	91 01       	movw	r18, r2
    235c:	a5 01       	movw	r20, r10
    235e:	be 01       	movw	r22, r28
    2360:	6f 57       	subi	r22, 0x7F	; 127
    2362:	7f 4f       	sbci	r23, 0xFF	; 255
    2364:	cb 01       	movw	r24, r22
    2366:	05 d8       	rcall	.-4086   	; 0x1372 <uECC_vli_modMult_fast>
    2368:	91 01       	movw	r18, r2
    236a:	cc 53       	subi	r28, 0x3C	; 60
    236c:	df 4f       	sbci	r29, 0xFF	; 255
    236e:	48 81       	ld	r20, Y
    2370:	59 81       	ldd	r21, Y+1	; 0x01
    2372:	c4 5c       	subi	r28, 0xC4	; 196
    2374:	d0 40       	sbci	r29, 0x00	; 0
    2376:	be 01       	movw	r22, r28
    2378:	6f 57       	subi	r22, 0x7F	; 127
    237a:	7f 4f       	sbci	r23, 0xFF	; 255
    237c:	cb 01       	movw	r24, r22
    237e:	0e 94 b9 09 	call	0x1372	; 0x1372 <uECC_vli_modMult_fast>
    2382:	cd 53       	subi	r28, 0x3D	; 61
    2384:	df 4f       	sbci	r29, 0xFF	; 255
    2386:	28 81       	ld	r18, Y
    2388:	c3 5c       	subi	r28, 0xC3	; 195
    238a:	d0 40       	sbci	r29, 0x00	; 0
    238c:	a3 01       	movw	r20, r6
    238e:	be 01       	movw	r22, r28
    2390:	6f 57       	subi	r22, 0x7F	; 127
    2392:	7f 4f       	sbci	r23, 0xFF	; 255
    2394:	cb 01       	movw	r24, r22
    2396:	47 d8       	rcall	.-3954   	; 0x1426 <uECC_vli_modInv>
    2398:	91 01       	movw	r18, r2
    239a:	c8 53       	subi	r28, 0x38	; 56
    239c:	df 4f       	sbci	r29, 0xFF	; 255
    239e:	48 81       	ld	r20, Y
    23a0:	59 81       	ldd	r21, Y+1	; 0x01
    23a2:	c8 5c       	subi	r28, 0xC8	; 200
    23a4:	d0 40       	sbci	r29, 0x00	; 0
    23a6:	be 01       	movw	r22, r28
    23a8:	6f 57       	subi	r22, 0x7F	; 127
    23aa:	7f 4f       	sbci	r23, 0xFF	; 255
    23ac:	cb 01       	movw	r24, r22
    23ae:	0e 94 b9 09 	call	0x1372	; 0x1372 <uECC_vli_modMult_fast>
    23b2:	91 01       	movw	r18, r2
    23b4:	a7 01       	movw	r20, r14
    23b6:	be 01       	movw	r22, r28
    23b8:	6f 57       	subi	r22, 0x7F	; 127
    23ba:	7f 4f       	sbci	r23, 0xFF	; 255
    23bc:	cb 01       	movw	r24, r22
    23be:	0e 94 b9 09 	call	0x1372	; 0x1372 <uECC_vli_modMult_fast>
    23c2:	81 01       	movw	r16, r2
    23c4:	95 01       	movw	r18, r10
    23c6:	a7 01       	movw	r20, r14
    23c8:	b4 01       	movw	r22, r8
    23ca:	c6 01       	movw	r24, r12
    23cc:	05 dd       	rcall	.-1526   	; 0x1dd8 <XYcZ_add>
    23ce:	91 01       	movw	r18, r2
    23d0:	ae 01       	movw	r20, r28
    23d2:	4f 57       	subi	r20, 0x7F	; 127
    23d4:	5f 4f       	sbci	r21, 0xFF	; 255
    23d6:	be 01       	movw	r22, r28
    23d8:	6f 5b       	subi	r22, 0xBF	; 191
    23da:	7f 4f       	sbci	r23, 0xFF	; 255
    23dc:	ce 01       	movw	r24, r28
    23de:	01 96       	adiw	r24, 0x01	; 1
    23e0:	ba dc       	rcall	.-1676   	; 0x1d56 <apply_z>
    23e2:	cd 53       	subi	r28, 0x3D	; 61
    23e4:	df 4f       	sbci	r29, 0xFF	; 255
    23e6:	48 81       	ld	r20, Y
    23e8:	c3 5c       	subi	r28, 0xC3	; 195
    23ea:	d0 40       	sbci	r29, 0x00	; 0
    23ec:	be 01       	movw	r22, r28
    23ee:	6f 5f       	subi	r22, 0xFF	; 255
    23f0:	7f 4f       	sbci	r23, 0xFF	; 255
    23f2:	c6 53       	subi	r28, 0x36	; 54
    23f4:	df 4f       	sbci	r29, 0xFF	; 255
    23f6:	88 81       	ld	r24, Y
    23f8:	99 81       	ldd	r25, Y+1	; 0x01
    23fa:	ca 5c       	subi	r28, 0xCA	; 202
    23fc:	d0 40       	sbci	r29, 0x00	; 0
    23fe:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2402:	cd 53       	subi	r28, 0x3D	; 61
    2404:	df 4f       	sbci	r29, 0xFF	; 255
    2406:	48 81       	ld	r20, Y
    2408:	c3 5c       	subi	r28, 0xC3	; 195
    240a:	d0 40       	sbci	r29, 0x00	; 0
    240c:	be 01       	movw	r22, r28
    240e:	6f 5b       	subi	r22, 0xBF	; 191
    2410:	7f 4f       	sbci	r23, 0xFF	; 255
    2412:	c6 53       	subi	r28, 0x36	; 54
    2414:	df 4f       	sbci	r29, 0xFF	; 255
    2416:	88 81       	ld	r24, Y
    2418:	99 81       	ldd	r25, Y+1	; 0x01
    241a:	ca 5c       	subi	r28, 0xCA	; 202
    241c:	d0 40       	sbci	r29, 0x00	; 0
    241e:	ca 53       	subi	r28, 0x3A	; 58
    2420:	df 4f       	sbci	r29, 0xFF	; 255
    2422:	28 81       	ld	r18, Y
    2424:	39 81       	ldd	r19, Y+1	; 0x01
    2426:	c6 5c       	subi	r28, 0xC6	; 198
    2428:	d0 40       	sbci	r29, 0x00	; 0
    242a:	82 0f       	add	r24, r18
    242c:	93 1f       	adc	r25, r19
    242e:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2432:	c5 53       	subi	r28, 0x35	; 53
    2434:	df 4f       	sbci	r29, 0xFF	; 255
    2436:	0f b6       	in	r0, 0x3f	; 63
    2438:	f8 94       	cli
    243a:	de bf       	out	0x3e, r29	; 62
    243c:	0f be       	out	0x3f, r0	; 63
    243e:	cd bf       	out	0x3d, r28	; 61
    2440:	df 91       	pop	r29
    2442:	cf 91       	pop	r28
    2444:	1f 91       	pop	r17
    2446:	0f 91       	pop	r16
    2448:	ff 90       	pop	r15
    244a:	ef 90       	pop	r14
    244c:	df 90       	pop	r13
    244e:	cf 90       	pop	r12
    2450:	bf 90       	pop	r11
    2452:	af 90       	pop	r10
    2454:	9f 90       	pop	r9
    2456:	8f 90       	pop	r8
    2458:	7f 90       	pop	r7
    245a:	6f 90       	pop	r6
    245c:	5f 90       	pop	r5
    245e:	4f 90       	pop	r4
    2460:	3f 90       	pop	r3
    2462:	2f 90       	pop	r2
    2464:	08 95       	ret

00002466 <regularize_k>:
    2466:	af 92       	push	r10
    2468:	bf 92       	push	r11
    246a:	cf 92       	push	r12
    246c:	df 92       	push	r13
    246e:	ef 92       	push	r14
    2470:	ff 92       	push	r15
    2472:	0f 93       	push	r16
    2474:	1f 93       	push	r17
    2476:	cf 93       	push	r28
    2478:	df 93       	push	r29
    247a:	7b 01       	movw	r14, r22
    247c:	5a 01       	movw	r10, r20
    247e:	f9 01       	movw	r30, r18
    2480:	c2 80       	ldd	r12, Z+2	; 0x02
    2482:	d3 80       	ldd	r13, Z+3	; 0x03
    2484:	a6 01       	movw	r20, r12
    2486:	49 5f       	subi	r20, 0xF9	; 249
    2488:	5f 4f       	sbci	r21, 0xFF	; 255
    248a:	ea 01       	movw	r28, r20
    248c:	dd 23       	and	r29, r29
    248e:	0c f4       	brge	.+2      	; 0x2492 <regularize_k+0x2c>
    2490:	27 96       	adiw	r28, 0x07	; 7
    2492:	d5 95       	asr	r29
    2494:	c7 95       	ror	r28
    2496:	d5 95       	asr	r29
    2498:	c7 95       	ror	r28
    249a:	d5 95       	asr	r29
    249c:	c7 95       	ror	r28
    249e:	89 01       	movw	r16, r18
    24a0:	0c 5d       	subi	r16, 0xDC	; 220
    24a2:	1f 4f       	sbci	r17, 0xFF	; 255
    24a4:	2c 2f       	mov	r18, r28
    24a6:	a8 01       	movw	r20, r16
    24a8:	bc 01       	movw	r22, r24
    24aa:	c7 01       	movw	r24, r14
    24ac:	0e 94 62 05 	call	0xac4	; 0xac4 <uECC_vli_add>
    24b0:	81 11       	cpse	r24, r1
    24b2:	11 c0       	rjmp	.+34     	; 0x24d6 <regularize_k+0x70>
    24b4:	28 e0       	ldi	r18, 0x08	; 8
    24b6:	c2 02       	muls	r28, r18
    24b8:	c0 01       	movw	r24, r0
    24ba:	11 24       	eor	r1, r1
    24bc:	c8 16       	cp	r12, r24
    24be:	d9 06       	cpc	r13, r25
    24c0:	6c f4       	brge	.+26     	; 0x24dc <regularize_k+0x76>
    24c2:	b6 01       	movw	r22, r12
    24c4:	c7 01       	movw	r24, r14
    24c6:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    24ca:	91 e0       	ldi	r25, 0x01	; 1
    24cc:	81 11       	cpse	r24, r1
    24ce:	01 c0       	rjmp	.+2      	; 0x24d2 <regularize_k+0x6c>
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	d9 2e       	mov	r13, r25
    24d4:	04 c0       	rjmp	.+8      	; 0x24de <regularize_k+0x78>
    24d6:	dd 24       	eor	r13, r13
    24d8:	d3 94       	inc	r13
    24da:	01 c0       	rjmp	.+2      	; 0x24de <regularize_k+0x78>
    24dc:	d1 2c       	mov	r13, r1
    24de:	2c 2f       	mov	r18, r28
    24e0:	a8 01       	movw	r20, r16
    24e2:	b7 01       	movw	r22, r14
    24e4:	c5 01       	movw	r24, r10
    24e6:	0e 94 62 05 	call	0xac4	; 0xac4 <uECC_vli_add>
    24ea:	8d 2d       	mov	r24, r13
    24ec:	df 91       	pop	r29
    24ee:	cf 91       	pop	r28
    24f0:	1f 91       	pop	r17
    24f2:	0f 91       	pop	r16
    24f4:	ff 90       	pop	r15
    24f6:	ef 90       	pop	r14
    24f8:	df 90       	pop	r13
    24fa:	cf 90       	pop	r12
    24fc:	bf 90       	pop	r11
    24fe:	af 90       	pop	r10
    2500:	08 95       	ret

00002502 <EccPoint_compute_public_key>:
    2502:	af 92       	push	r10
    2504:	bf 92       	push	r11
    2506:	cf 92       	push	r12
    2508:	df 92       	push	r13
    250a:	ef 92       	push	r14
    250c:	ff 92       	push	r15
    250e:	0f 93       	push	r16
    2510:	1f 93       	push	r17
    2512:	cf 93       	push	r28
    2514:	df 93       	push	r29
    2516:	cd b7       	in	r28, 0x3d	; 61
    2518:	de b7       	in	r29, 0x3e	; 62
    251a:	c4 54       	subi	r28, 0x44	; 68
    251c:	d1 09       	sbc	r29, r1
    251e:	0f b6       	in	r0, 0x3f	; 63
    2520:	f8 94       	cli
    2522:	de bf       	out	0x3e, r29	; 62
    2524:	0f be       	out	0x3f, r0	; 63
    2526:	cd bf       	out	0x3d, r28	; 61
    2528:	5c 01       	movw	r10, r24
    252a:	cb 01       	movw	r24, r22
    252c:	6a 01       	movw	r12, r20
    252e:	7e 01       	movw	r14, r28
    2530:	21 e4       	ldi	r18, 0x41	; 65
    2532:	e2 0e       	add	r14, r18
    2534:	f1 1c       	adc	r15, r1
    2536:	be 01       	movw	r22, r28
    2538:	6f 5f       	subi	r22, 0xFF	; 255
    253a:	7f 4f       	sbci	r23, 0xFF	; 255
    253c:	f7 01       	movw	r30, r14
    253e:	71 83       	std	Z+1, r23	; 0x01
    2540:	60 83       	st	Z, r22
    2542:	ae 01       	movw	r20, r28
    2544:	4f 5d       	subi	r20, 0xDF	; 223
    2546:	5f 4f       	sbci	r21, 0xFF	; 255
    2548:	53 83       	std	Z+3, r21	; 0x03
    254a:	42 83       	std	Z+2, r20	; 0x02
    254c:	96 01       	movw	r18, r12
    254e:	8b df       	rcall	.-234    	; 0x2466 <regularize_k>
    2550:	f6 01       	movw	r30, r12
    2552:	02 81       	ldd	r16, Z+2	; 0x02
    2554:	13 81       	ldd	r17, Z+3	; 0x03
    2556:	0f 5f       	subi	r16, 0xFF	; 255
    2558:	1f 4f       	sbci	r17, 0xFF	; 255
    255a:	f7 01       	movw	r30, r14
    255c:	21 e0       	ldi	r18, 0x01	; 1
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	88 23       	and	r24, r24
    2562:	11 f0       	breq	.+4      	; 0x2568 <EccPoint_compute_public_key+0x66>
    2564:	20 e0       	ldi	r18, 0x00	; 0
    2566:	30 e0       	ldi	r19, 0x00	; 0
    2568:	22 0f       	add	r18, r18
    256a:	33 1f       	adc	r19, r19
    256c:	e2 0f       	add	r30, r18
    256e:	f3 1f       	adc	r31, r19
    2570:	40 81       	ld	r20, Z
    2572:	51 81       	ldd	r21, Z+1	; 0x01
    2574:	b6 01       	movw	r22, r12
    2576:	6c 5b       	subi	r22, 0xBC	; 188
    2578:	7f 4f       	sbci	r23, 0xFF	; 255
    257a:	76 01       	movw	r14, r12
    257c:	20 e0       	ldi	r18, 0x00	; 0
    257e:	30 e0       	ldi	r19, 0x00	; 0
    2580:	c5 01       	movw	r24, r10
    2582:	7d dd       	rcall	.-1286   	; 0x207e <EccPoint_mult>
    2584:	f6 01       	movw	r30, r12
    2586:	60 81       	ld	r22, Z
    2588:	66 0f       	add	r22, r22
    258a:	c5 01       	movw	r24, r10
    258c:	0e 94 40 07 	call	0xe80	; 0xe80 <uECC_vli_isZero>
    2590:	91 e0       	ldi	r25, 0x01	; 1
    2592:	81 11       	cpse	r24, r1
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	89 2f       	mov	r24, r25
    2598:	cc 5b       	subi	r28, 0xBC	; 188
    259a:	df 4f       	sbci	r29, 0xFF	; 255
    259c:	0f b6       	in	r0, 0x3f	; 63
    259e:	f8 94       	cli
    25a0:	de bf       	out	0x3e, r29	; 62
    25a2:	0f be       	out	0x3f, r0	; 63
    25a4:	cd bf       	out	0x3d, r28	; 61
    25a6:	df 91       	pop	r29
    25a8:	cf 91       	pop	r28
    25aa:	1f 91       	pop	r17
    25ac:	0f 91       	pop	r16
    25ae:	ff 90       	pop	r15
    25b0:	ef 90       	pop	r14
    25b2:	df 90       	pop	r13
    25b4:	cf 90       	pop	r12
    25b6:	bf 90       	pop	r11
    25b8:	af 90       	pop	r10
    25ba:	08 95       	ret

000025bc <uECC_vli_nativeToBytes>:
    25bc:	cf 93       	push	r28
    25be:	df 93       	push	r29
    25c0:	dc 01       	movw	r26, r24
    25c2:	16 16       	cp	r1, r22
    25c4:	17 06       	cpc	r1, r23
    25c6:	cc f4       	brge	.+50     	; 0x25fa <uECC_vli_nativeToBytes+0x3e>
    25c8:	20 e0       	ldi	r18, 0x00	; 0
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	eb 01       	movw	r28, r22
    25d0:	21 97       	sbiw	r28, 0x01	; 1
    25d2:	fe 01       	movw	r30, r28
    25d4:	e2 1b       	sub	r30, r18
    25d6:	f3 0b       	sbc	r31, r19
    25d8:	e4 0f       	add	r30, r20
    25da:	f5 1f       	adc	r31, r21
    25dc:	20 81       	ld	r18, Z
    25de:	fd 01       	movw	r30, r26
    25e0:	e9 0f       	add	r30, r25
    25e2:	f1 1d       	adc	r31, r1
    25e4:	97 fd       	sbrc	r25, 7
    25e6:	fa 95       	dec	r31
    25e8:	20 83       	st	Z, r18
    25ea:	9f 5f       	subi	r25, 0xFF	; 255
    25ec:	29 2f       	mov	r18, r25
    25ee:	09 2e       	mov	r0, r25
    25f0:	00 0c       	add	r0, r0
    25f2:	33 0b       	sbc	r19, r19
    25f4:	26 17       	cp	r18, r22
    25f6:	37 07       	cpc	r19, r23
    25f8:	64 f3       	brlt	.-40     	; 0x25d2 <uECC_vli_nativeToBytes+0x16>
    25fa:	df 91       	pop	r29
    25fc:	cf 91       	pop	r28
    25fe:	08 95       	ret

00002600 <uECC_generate_random_int>:
    2600:	9f 92       	push	r9
    2602:	af 92       	push	r10
    2604:	bf 92       	push	r11
    2606:	cf 92       	push	r12
    2608:	df 92       	push	r13
    260a:	ef 92       	push	r14
    260c:	ff 92       	push	r15
    260e:	0f 93       	push	r16
    2610:	1f 93       	push	r17
    2612:	cf 93       	push	r28
    2614:	df 93       	push	r29
    2616:	8c 01       	movw	r16, r24
    2618:	5b 01       	movw	r10, r22
    261a:	d4 2f       	mov	r29, r20
    261c:	64 2f       	mov	r22, r20
    261e:	c5 01       	movw	r24, r10
    2620:	0e 94 6c 07 	call	0xed8	; 0xed8 <uECC_vli_numBits>
    2624:	20 91 60 06 	lds	r18, 0x0660	; 0x800660 <g_rng_function>
    2628:	30 91 61 06 	lds	r19, 0x0661	; 0x800661 <g_rng_function+0x1>
    262c:	23 2b       	or	r18, r19
    262e:	c1 f1       	breq	.+112    	; 0x26a0 <uECC_generate_random_int+0xa0>
    2630:	48 e0       	ldi	r20, 0x08	; 8
    2632:	d4 02       	muls	r29, r20
    2634:	90 01       	movw	r18, r0
    2636:	11 24       	eor	r1, r1
    2638:	28 1b       	sub	r18, r24
    263a:	39 0b       	sbc	r19, r25
    263c:	8f ef       	ldi	r24, 0xFF	; 255
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	02 c0       	rjmp	.+4      	; 0x2646 <uECC_generate_random_int+0x46>
    2642:	95 95       	asr	r25
    2644:	87 95       	ror	r24
    2646:	2a 95       	dec	r18
    2648:	e2 f7       	brpl	.-8      	; 0x2642 <uECC_generate_random_int+0x42>
    264a:	98 2e       	mov	r9, r24
    264c:	c0 e4       	ldi	r28, 0x40	; 64
    264e:	cd 2e       	mov	r12, r29
    2650:	0d 2e       	mov	r0, r29
    2652:	00 0c       	add	r0, r0
    2654:	dd 08       	sbc	r13, r13
    2656:	76 01       	movw	r14, r12
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	e8 1a       	sub	r14, r24
    265c:	f1 08       	sbc	r15, r1
    265e:	e0 0e       	add	r14, r16
    2660:	f1 1e       	adc	r15, r17
    2662:	e0 91 60 06 	lds	r30, 0x0660	; 0x800660 <g_rng_function>
    2666:	f0 91 61 06 	lds	r31, 0x0661	; 0x800661 <g_rng_function+0x1>
    266a:	b6 01       	movw	r22, r12
    266c:	c8 01       	movw	r24, r16
    266e:	09 95       	icall
    2670:	00 97       	sbiw	r24, 0x00	; 0
    2672:	d9 f0       	breq	.+54     	; 0x26aa <uECC_generate_random_int+0xaa>
    2674:	f7 01       	movw	r30, r14
    2676:	80 81       	ld	r24, Z
    2678:	89 21       	and	r24, r9
    267a:	80 83       	st	Z, r24
    267c:	6d 2f       	mov	r22, r29
    267e:	c8 01       	movw	r24, r16
    2680:	0e 94 40 07 	call	0xe80	; 0xe80 <uECC_vli_isZero>
    2684:	81 11       	cpse	r24, r1
    2686:	07 c0       	rjmp	.+14     	; 0x2696 <uECC_generate_random_int+0x96>
    2688:	4d 2f       	mov	r20, r29
    268a:	b8 01       	movw	r22, r16
    268c:	c5 01       	movw	r24, r10
    268e:	0e 94 d5 07 	call	0xfaa	; 0xfaa <uECC_vli_cmp>
    2692:	81 30       	cpi	r24, 0x01	; 1
    2694:	41 f0       	breq	.+16     	; 0x26a6 <uECC_generate_random_int+0xa6>
    2696:	c1 50       	subi	r28, 0x01	; 1
    2698:	21 f7       	brne	.-56     	; 0x2662 <uECC_generate_random_int+0x62>
    269a:	80 e0       	ldi	r24, 0x00	; 0
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	05 c0       	rjmp	.+10     	; 0x26aa <uECC_generate_random_int+0xaa>
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	02 c0       	rjmp	.+4      	; 0x26aa <uECC_generate_random_int+0xaa>
    26a6:	81 e0       	ldi	r24, 0x01	; 1
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	df 91       	pop	r29
    26ac:	cf 91       	pop	r28
    26ae:	1f 91       	pop	r17
    26b0:	0f 91       	pop	r16
    26b2:	ff 90       	pop	r15
    26b4:	ef 90       	pop	r14
    26b6:	df 90       	pop	r13
    26b8:	cf 90       	pop	r12
    26ba:	bf 90       	pop	r11
    26bc:	af 90       	pop	r10
    26be:	9f 90       	pop	r9
    26c0:	08 95       	ret

000026c2 <bits2int>:
    26c2:	8f 92       	push	r8
    26c4:	9f 92       	push	r9
    26c6:	af 92       	push	r10
    26c8:	bf 92       	push	r11
    26ca:	cf 92       	push	r12
    26cc:	df 92       	push	r13
    26ce:	ef 92       	push	r14
    26d0:	ff 92       	push	r15
    26d2:	0f 93       	push	r16
    26d4:	1f 93       	push	r17
    26d6:	cf 93       	push	r28
    26d8:	df 93       	push	r29
    26da:	8c 01       	movw	r16, r24
    26dc:	4b 01       	movw	r8, r22
    26de:	79 01       	movw	r14, r18
    26e0:	f9 01       	movw	r30, r18
    26e2:	82 81       	ldd	r24, Z+2	; 0x02
    26e4:	93 81       	ldd	r25, Z+3	; 0x03
    26e6:	07 96       	adiw	r24, 0x07	; 7
    26e8:	ec 01       	movw	r28, r24
    26ea:	0a f4       	brpl	.+2      	; 0x26ee <bits2int+0x2c>
    26ec:	27 96       	adiw	r28, 0x07	; 7
    26ee:	d5 95       	asr	r29
    26f0:	c7 95       	ror	r28
    26f2:	d5 95       	asr	r29
    26f4:	c7 95       	ror	r28
    26f6:	d5 95       	asr	r29
    26f8:	c7 95       	ror	r28
    26fa:	cc 2e       	mov	r12, r28
    26fc:	dd 2e       	mov	r13, r29
    26fe:	56 01       	movw	r10, r12
    2700:	4c 15       	cp	r20, r12
    2702:	5d 05       	cpc	r21, r13
    2704:	08 f4       	brcc	.+2      	; 0x2708 <bits2int+0x46>
    2706:	5a 01       	movw	r10, r20
    2708:	6c 2f       	mov	r22, r28
    270a:	c8 01       	movw	r24, r16
    270c:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <uECC_vli_clear>
    2710:	a4 01       	movw	r20, r8
    2712:	b5 01       	movw	r22, r10
    2714:	c8 01       	movw	r24, r16
    2716:	52 df       	rcall	.-348    	; 0x25bc <uECC_vli_nativeToBytes>
    2718:	aa 0c       	add	r10, r10
    271a:	bb 1c       	adc	r11, r11
    271c:	aa 0c       	add	r10, r10
    271e:	bb 1c       	adc	r11, r11
    2720:	aa 0c       	add	r10, r10
    2722:	bb 1c       	adc	r11, r11
    2724:	f7 01       	movw	r30, r14
    2726:	82 81       	ldd	r24, Z+2	; 0x02
    2728:	93 81       	ldd	r25, Z+3	; 0x03
    272a:	8a 15       	cp	r24, r10
    272c:	9b 05       	cpc	r25, r11
    272e:	a0 f5       	brcc	.+104    	; 0x2798 <bits2int+0xd6>
    2730:	b5 01       	movw	r22, r10
    2732:	68 1b       	sub	r22, r24
    2734:	79 0b       	sbc	r23, r25
    2736:	f8 01       	movw	r30, r16
    2738:	ec 0d       	add	r30, r12
    273a:	fd 1d       	adc	r31, r13
    273c:	0e 17       	cp	r16, r30
    273e:	1f 07       	cpc	r17, r31
    2740:	d8 f4       	brcc	.+54     	; 0x2778 <bits2int+0xb6>
    2742:	d8 01       	movw	r26, r16
    2744:	d1 2c       	mov	r13, r1
    2746:	48 e0       	ldi	r20, 0x08	; 8
    2748:	50 e0       	ldi	r21, 0x00	; 0
    274a:	46 1b       	sub	r20, r22
    274c:	57 0b       	sbc	r21, r23
    274e:	92 91       	ld	r25, -Z
    2750:	29 2f       	mov	r18, r25
    2752:	30 e0       	ldi	r19, 0x00	; 0
    2754:	c9 01       	movw	r24, r18
    2756:	06 2e       	mov	r0, r22
    2758:	02 c0       	rjmp	.+4      	; 0x275e <bits2int+0x9c>
    275a:	95 95       	asr	r25
    275c:	87 95       	ror	r24
    275e:	0a 94       	dec	r0
    2760:	e2 f7       	brpl	.-8      	; 0x275a <bits2int+0x98>
    2762:	8d 29       	or	r24, r13
    2764:	80 83       	st	Z, r24
    2766:	04 2e       	mov	r0, r20
    2768:	01 c0       	rjmp	.+2      	; 0x276c <bits2int+0xaa>
    276a:	22 0f       	add	r18, r18
    276c:	0a 94       	dec	r0
    276e:	ea f7       	brpl	.-6      	; 0x276a <bits2int+0xa8>
    2770:	d2 2e       	mov	r13, r18
    2772:	ae 17       	cp	r26, r30
    2774:	bf 07       	cpc	r27, r31
    2776:	59 f7       	brne	.-42     	; 0x274e <bits2int+0x8c>
    2778:	f4 e2       	ldi	r31, 0x24	; 36
    277a:	ef 0e       	add	r14, r31
    277c:	f1 1c       	adc	r15, r1
    277e:	4c 2f       	mov	r20, r28
    2780:	b8 01       	movw	r22, r16
    2782:	c7 01       	movw	r24, r14
    2784:	0e 94 a3 07 	call	0xf46	; 0xf46 <uECC_vli_cmp_unsafe>
    2788:	81 30       	cpi	r24, 0x01	; 1
    278a:	31 f0       	breq	.+12     	; 0x2798 <bits2int+0xd6>
    278c:	2c 2f       	mov	r18, r28
    278e:	a7 01       	movw	r20, r14
    2790:	b8 01       	movw	r22, r16
    2792:	c8 01       	movw	r24, r16
    2794:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_sub>
    2798:	df 91       	pop	r29
    279a:	cf 91       	pop	r28
    279c:	1f 91       	pop	r17
    279e:	0f 91       	pop	r16
    27a0:	ff 90       	pop	r15
    27a2:	ef 90       	pop	r14
    27a4:	df 90       	pop	r13
    27a6:	cf 90       	pop	r12
    27a8:	bf 90       	pop	r11
    27aa:	af 90       	pop	r10
    27ac:	9f 90       	pop	r9
    27ae:	8f 90       	pop	r8
    27b0:	08 95       	ret

000027b2 <uECC_set_rng>:
    27b2:	90 93 61 06 	sts	0x0661, r25	; 0x800661 <g_rng_function+0x1>
    27b6:	80 93 60 06 	sts	0x0660, r24	; 0x800660 <g_rng_function>
    27ba:	08 95       	ret

000027bc <uECC_secp256r1>:
    27bc:	8a e0       	ldi	r24, 0x0A	; 10
    27be:	91 e0       	ldi	r25, 0x01	; 1
    27c0:	08 95       	ret

000027c2 <uECC_make_key>:
    27c2:	9f 92       	push	r9
    27c4:	af 92       	push	r10
    27c6:	bf 92       	push	r11
    27c8:	cf 92       	push	r12
    27ca:	df 92       	push	r13
    27cc:	ef 92       	push	r14
    27ce:	ff 92       	push	r15
    27d0:	0f 93       	push	r16
    27d2:	1f 93       	push	r17
    27d4:	cf 93       	push	r28
    27d6:	df 93       	push	r29
    27d8:	cd b7       	in	r28, 0x3d	; 61
    27da:	de b7       	in	r29, 0x3e	; 62
    27dc:	c0 56       	subi	r28, 0x60	; 96
    27de:	d1 09       	sbc	r29, r1
    27e0:	0f b6       	in	r0, 0x3f	; 63
    27e2:	f8 94       	cli
    27e4:	de bf       	out	0x3e, r29	; 62
    27e6:	0f be       	out	0x3f, r0	; 63
    27e8:	cd bf       	out	0x3d, r28	; 61
    27ea:	6c 01       	movw	r12, r24
    27ec:	5b 01       	movw	r10, r22
    27ee:	8a 01       	movw	r16, r20
    27f0:	68 94       	set
    27f2:	99 24       	eor	r9, r9
    27f4:	96 f8       	bld	r9, 6
    27f6:	7a 01       	movw	r14, r20
    27f8:	84 e2       	ldi	r24, 0x24	; 36
    27fa:	e8 0e       	add	r14, r24
    27fc:	f1 1c       	adc	r15, r1
    27fe:	f8 01       	movw	r30, r16
    2800:	82 81       	ldd	r24, Z+2	; 0x02
    2802:	93 81       	ldd	r25, Z+3	; 0x03
    2804:	07 96       	adiw	r24, 0x07	; 7
    2806:	ac 01       	movw	r20, r24
    2808:	12 f4       	brpl	.+4      	; 0x280e <uECC_make_key+0x4c>
    280a:	49 5f       	subi	r20, 0xF9	; 249
    280c:	5f 4f       	sbci	r21, 0xFF	; 255
    280e:	55 95       	asr	r21
    2810:	47 95       	ror	r20
    2812:	55 95       	asr	r21
    2814:	47 95       	ror	r20
    2816:	55 95       	asr	r21
    2818:	47 95       	ror	r20
    281a:	b7 01       	movw	r22, r14
    281c:	ce 01       	movw	r24, r28
    281e:	01 96       	adiw	r24, 0x01	; 1
    2820:	ef de       	rcall	.-546    	; 0x2600 <uECC_generate_random_int>
    2822:	00 97       	sbiw	r24, 0x00	; 0
    2824:	09 f4       	brne	.+2      	; 0x2828 <uECC_make_key+0x66>
    2826:	40 c0       	rjmp	.+128    	; 0x28a8 <uECC_make_key+0xe6>
    2828:	a8 01       	movw	r20, r16
    282a:	be 01       	movw	r22, r28
    282c:	6f 5f       	subi	r22, 0xFF	; 255
    282e:	7f 4f       	sbci	r23, 0xFF	; 255
    2830:	ce 01       	movw	r24, r28
    2832:	81 96       	adiw	r24, 0x21	; 33
    2834:	66 de       	rcall	.-820    	; 0x2502 <EccPoint_compute_public_key>
    2836:	88 23       	and	r24, r24
    2838:	91 f1       	breq	.+100    	; 0x289e <uECC_make_key+0xdc>
    283a:	f8 01       	movw	r30, r16
    283c:	82 81       	ldd	r24, Z+2	; 0x02
    283e:	93 81       	ldd	r25, Z+3	; 0x03
    2840:	07 96       	adiw	r24, 0x07	; 7
    2842:	bc 01       	movw	r22, r24
    2844:	12 f4       	brpl	.+4      	; 0x284a <uECC_make_key+0x88>
    2846:	69 5f       	subi	r22, 0xF9	; 249
    2848:	7f 4f       	sbci	r23, 0xFF	; 255
    284a:	75 95       	asr	r23
    284c:	67 95       	ror	r22
    284e:	75 95       	asr	r23
    2850:	67 95       	ror	r22
    2852:	75 95       	asr	r23
    2854:	67 95       	ror	r22
    2856:	ae 01       	movw	r20, r28
    2858:	4f 5f       	subi	r20, 0xFF	; 255
    285a:	5f 4f       	sbci	r21, 0xFF	; 255
    285c:	c5 01       	movw	r24, r10
    285e:	ae de       	rcall	.-676    	; 0x25bc <uECC_vli_nativeToBytes>
    2860:	f8 01       	movw	r30, r16
    2862:	61 81       	ldd	r22, Z+1	; 0x01
    2864:	06 2e       	mov	r0, r22
    2866:	00 0c       	add	r0, r0
    2868:	77 0b       	sbc	r23, r23
    286a:	ae 01       	movw	r20, r28
    286c:	4f 5d       	subi	r20, 0xDF	; 223
    286e:	5f 4f       	sbci	r21, 0xFF	; 255
    2870:	c6 01       	movw	r24, r12
    2872:	a4 de       	rcall	.-696    	; 0x25bc <uECC_vli_nativeToBytes>
    2874:	f8 01       	movw	r30, r16
    2876:	81 81       	ldd	r24, Z+1	; 0x01
    2878:	90 81       	ld	r25, Z
    287a:	41 e2       	ldi	r20, 0x21	; 33
    287c:	50 e0       	ldi	r21, 0x00	; 0
    287e:	4c 0f       	add	r20, r28
    2880:	5d 1f       	adc	r21, r29
    2882:	49 0f       	add	r20, r25
    2884:	51 1d       	adc	r21, r1
    2886:	97 fd       	sbrc	r25, 7
    2888:	5a 95       	dec	r21
    288a:	08 2e       	mov	r0, r24
    288c:	00 0c       	add	r0, r0
    288e:	99 0b       	sbc	r25, r25
    2890:	bc 01       	movw	r22, r24
    2892:	8c 0d       	add	r24, r12
    2894:	9d 1d       	adc	r25, r13
    2896:	92 de       	rcall	.-732    	; 0x25bc <uECC_vli_nativeToBytes>
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	90 e0       	ldi	r25, 0x00	; 0
    289c:	05 c0       	rjmp	.+10     	; 0x28a8 <uECC_make_key+0xe6>
    289e:	9a 94       	dec	r9
    28a0:	91 10       	cpse	r9, r1
    28a2:	ad cf       	rjmp	.-166    	; 0x27fe <uECC_make_key+0x3c>
    28a4:	80 e0       	ldi	r24, 0x00	; 0
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	c0 5a       	subi	r28, 0xA0	; 160
    28aa:	df 4f       	sbci	r29, 0xFF	; 255
    28ac:	0f b6       	in	r0, 0x3f	; 63
    28ae:	f8 94       	cli
    28b0:	de bf       	out	0x3e, r29	; 62
    28b2:	0f be       	out	0x3f, r0	; 63
    28b4:	cd bf       	out	0x3d, r28	; 61
    28b6:	df 91       	pop	r29
    28b8:	cf 91       	pop	r28
    28ba:	1f 91       	pop	r17
    28bc:	0f 91       	pop	r16
    28be:	ff 90       	pop	r15
    28c0:	ef 90       	pop	r14
    28c2:	df 90       	pop	r13
    28c4:	cf 90       	pop	r12
    28c6:	bf 90       	pop	r11
    28c8:	af 90       	pop	r10
    28ca:	9f 90       	pop	r9
    28cc:	08 95       	ret

000028ce <uECC_shared_secret>:
    28ce:	6f 92       	push	r6
    28d0:	7f 92       	push	r7
    28d2:	8f 92       	push	r8
    28d4:	9f 92       	push	r9
    28d6:	af 92       	push	r10
    28d8:	bf 92       	push	r11
    28da:	cf 92       	push	r12
    28dc:	df 92       	push	r13
    28de:	ef 92       	push	r14
    28e0:	ff 92       	push	r15
    28e2:	0f 93       	push	r16
    28e4:	1f 93       	push	r17
    28e6:	cf 93       	push	r28
    28e8:	df 93       	push	r29
    28ea:	cd b7       	in	r28, 0x3d	; 61
    28ec:	de b7       	in	r29, 0x3e	; 62
    28ee:	c4 58       	subi	r28, 0x84	; 132
    28f0:	d1 09       	sbc	r29, r1
    28f2:	0f b6       	in	r0, 0x3f	; 63
    28f4:	f8 94       	cli
    28f6:	de bf       	out	0x3e, r29	; 62
    28f8:	0f be       	out	0x3f, r0	; 63
    28fa:	cd bf       	out	0x3d, r28	; 61
    28fc:	8c 01       	movw	r16, r24
    28fe:	4a 01       	movw	r8, r20
    2900:	69 01       	movw	r12, r18
    2902:	ce 01       	movw	r24, r28
    2904:	8f 5b       	subi	r24, 0xBF	; 191
    2906:	9f 4f       	sbci	r25, 0xFF	; 255
    2908:	cf 57       	subi	r28, 0x7F	; 127
    290a:	df 4f       	sbci	r29, 0xFF	; 255
    290c:	99 83       	std	Y+1, r25	; 0x01
    290e:	88 83       	st	Y, r24
    2910:	c1 58       	subi	r28, 0x81	; 129
    2912:	d0 40       	sbci	r29, 0x00	; 0
    2914:	80 96       	adiw	r24, 0x20	; 32
    2916:	cd 57       	subi	r28, 0x7D	; 125
    2918:	df 4f       	sbci	r29, 0xFF	; 255
    291a:	99 83       	std	Y+1, r25	; 0x01
    291c:	88 83       	st	Y, r24
    291e:	c3 58       	subi	r28, 0x83	; 131
    2920:	d0 40       	sbci	r29, 0x00	; 0
    2922:	f9 01       	movw	r30, r18
    2924:	f0 80       	ld	r15, Z
    2926:	a1 80       	ldd	r10, Z+1	; 0x01
    2928:	22 81       	ldd	r18, Z+2	; 0x02
    292a:	33 81       	ldd	r19, Z+3	; 0x03
    292c:	29 5f       	subi	r18, 0xF9	; 249
    292e:	3f 4f       	sbci	r19, 0xFF	; 255
    2930:	c9 01       	movw	r24, r18
    2932:	99 23       	and	r25, r25
    2934:	0c f4       	brge	.+2      	; 0x2938 <uECC_shared_secret+0x6a>
    2936:	07 96       	adiw	r24, 0x07	; 7
    2938:	95 95       	asr	r25
    293a:	87 95       	ror	r24
    293c:	95 95       	asr	r25
    293e:	87 95       	ror	r24
    2940:	95 95       	asr	r25
    2942:	87 95       	ror	r24
    2944:	ab 01       	movw	r20, r22
    2946:	bc 01       	movw	r22, r24
    2948:	ce 01       	movw	r24, r28
    294a:	8f 5b       	subi	r24, 0xBF	; 191
    294c:	9f 4f       	sbci	r25, 0xFF	; 255
    294e:	36 de       	rcall	.-916    	; 0x25bc <uECC_vli_nativeToBytes>
    2950:	0a 2c       	mov	r0, r10
    2952:	00 0c       	add	r0, r0
    2954:	bb 08       	sbc	r11, r11
    2956:	a8 01       	movw	r20, r16
    2958:	b5 01       	movw	r22, r10
    295a:	ce 01       	movw	r24, r28
    295c:	01 96       	adiw	r24, 0x01	; 1
    295e:	2e de       	rcall	.-932    	; 0x25bc <uECC_vli_nativeToBytes>
    2960:	a8 01       	movw	r20, r16
    2962:	4a 0d       	add	r20, r10
    2964:	5b 1d       	adc	r21, r11
    2966:	b5 01       	movw	r22, r10
    2968:	81 e0       	ldi	r24, 0x01	; 1
    296a:	90 e0       	ldi	r25, 0x00	; 0
    296c:	8c 0f       	add	r24, r28
    296e:	9d 1f       	adc	r25, r29
    2970:	8f 0d       	add	r24, r15
    2972:	91 1d       	adc	r25, r1
    2974:	f7 fc       	sbrc	r15, 7
    2976:	9a 95       	dec	r25
    2978:	21 de       	rcall	.-958    	; 0x25bc <uECC_vli_nativeToBytes>
    297a:	96 01       	movw	r18, r12
    297c:	ae 01       	movw	r20, r28
    297e:	4f 59       	subi	r20, 0x9F	; 159
    2980:	5f 4f       	sbci	r21, 0xFF	; 255
    2982:	be 01       	movw	r22, r28
    2984:	6f 5b       	subi	r22, 0xBF	; 191
    2986:	7f 4f       	sbci	r23, 0xFF	; 255
    2988:	cb 01       	movw	r24, r22
    298a:	6d dd       	rcall	.-1318   	; 0x2466 <regularize_k>
    298c:	18 2f       	mov	r17, r24
    298e:	80 91 60 06 	lds	r24, 0x0660	; 0x800660 <g_rng_function>
    2992:	90 91 61 06 	lds	r25, 0x0661	; 0x800661 <g_rng_function+0x1>
    2996:	89 2b       	or	r24, r25
    2998:	a9 f0       	breq	.+42     	; 0x29c4 <uECC_shared_secret+0xf6>
    299a:	e1 2f       	mov	r30, r17
    299c:	f0 e0       	ldi	r31, 0x00	; 0
    299e:	ee 0f       	add	r30, r30
    29a0:	ff 1f       	adc	r31, r31
    29a2:	81 e8       	ldi	r24, 0x81	; 129
    29a4:	90 e0       	ldi	r25, 0x00	; 0
    29a6:	8c 0f       	add	r24, r28
    29a8:	9d 1f       	adc	r25, r29
    29aa:	e8 0f       	add	r30, r24
    29ac:	f9 1f       	adc	r31, r25
    29ae:	60 80       	ld	r6, Z
    29b0:	71 80       	ldd	r7, Z+1	; 0x01
    29b2:	4f 2d       	mov	r20, r15
    29b4:	b6 01       	movw	r22, r12
    29b6:	6c 5f       	subi	r22, 0xFC	; 252
    29b8:	7f 4f       	sbci	r23, 0xFF	; 255
    29ba:	c3 01       	movw	r24, r6
    29bc:	21 de       	rcall	.-958    	; 0x2600 <uECC_generate_random_int>
    29be:	00 97       	sbiw	r24, 0x00	; 0
    29c0:	19 f4       	brne	.+6      	; 0x29c8 <uECC_shared_secret+0xfa>
    29c2:	32 c0       	rjmp	.+100    	; 0x2a28 <uECC_shared_secret+0x15a>
    29c4:	61 2c       	mov	r6, r1
    29c6:	71 2c       	mov	r7, r1
    29c8:	f6 01       	movw	r30, r12
    29ca:	22 81       	ldd	r18, Z+2	; 0x02
    29cc:	33 81       	ldd	r19, Z+3	; 0x03
    29ce:	2f 5f       	subi	r18, 0xFF	; 255
    29d0:	3f 4f       	sbci	r19, 0xFF	; 255
    29d2:	81 e0       	ldi	r24, 0x01	; 1
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	11 23       	and	r17, r17
    29d8:	11 f0       	breq	.+4      	; 0x29de <uECC_shared_secret+0x110>
    29da:	80 e0       	ldi	r24, 0x00	; 0
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	88 0f       	add	r24, r24
    29e0:	99 1f       	adc	r25, r25
    29e2:	e1 e8       	ldi	r30, 0x81	; 129
    29e4:	f0 e0       	ldi	r31, 0x00	; 0
    29e6:	ec 0f       	add	r30, r28
    29e8:	fd 1f       	adc	r31, r29
    29ea:	e8 0f       	add	r30, r24
    29ec:	f9 1f       	adc	r31, r25
    29ee:	40 81       	ld	r20, Z
    29f0:	51 81       	ldd	r21, Z+1	; 0x01
    29f2:	76 01       	movw	r14, r12
    29f4:	89 01       	movw	r16, r18
    29f6:	93 01       	movw	r18, r6
    29f8:	be 01       	movw	r22, r28
    29fa:	6f 5f       	subi	r22, 0xFF	; 255
    29fc:	7f 4f       	sbci	r23, 0xFF	; 255
    29fe:	cb 01       	movw	r24, r22
    2a00:	3e db       	rcall	.-2436   	; 0x207e <EccPoint_mult>
    2a02:	ae 01       	movw	r20, r28
    2a04:	4f 5f       	subi	r20, 0xFF	; 255
    2a06:	5f 4f       	sbci	r21, 0xFF	; 255
    2a08:	b5 01       	movw	r22, r10
    2a0a:	c4 01       	movw	r24, r8
    2a0c:	d7 dd       	rcall	.-1106   	; 0x25bc <uECC_vli_nativeToBytes>
    2a0e:	f6 01       	movw	r30, r12
    2a10:	60 81       	ld	r22, Z
    2a12:	66 0f       	add	r22, r22
    2a14:	ce 01       	movw	r24, r28
    2a16:	01 96       	adiw	r24, 0x01	; 1
    2a18:	0e 94 40 07 	call	0xe80	; 0xe80 <uECC_vli_isZero>
    2a1c:	31 e0       	ldi	r19, 0x01	; 1
    2a1e:	20 e0       	ldi	r18, 0x00	; 0
    2a20:	81 11       	cpse	r24, r1
    2a22:	30 e0       	ldi	r19, 0x00	; 0
    2a24:	83 2f       	mov	r24, r19
    2a26:	92 2f       	mov	r25, r18
    2a28:	cc 57       	subi	r28, 0x7C	; 124
    2a2a:	df 4f       	sbci	r29, 0xFF	; 255
    2a2c:	0f b6       	in	r0, 0x3f	; 63
    2a2e:	f8 94       	cli
    2a30:	de bf       	out	0x3e, r29	; 62
    2a32:	0f be       	out	0x3f, r0	; 63
    2a34:	cd bf       	out	0x3d, r28	; 61
    2a36:	df 91       	pop	r29
    2a38:	cf 91       	pop	r28
    2a3a:	1f 91       	pop	r17
    2a3c:	0f 91       	pop	r16
    2a3e:	ff 90       	pop	r15
    2a40:	ef 90       	pop	r14
    2a42:	df 90       	pop	r13
    2a44:	cf 90       	pop	r12
    2a46:	bf 90       	pop	r11
    2a48:	af 90       	pop	r10
    2a4a:	9f 90       	pop	r9
    2a4c:	8f 90       	pop	r8
    2a4e:	7f 90       	pop	r7
    2a50:	6f 90       	pop	r6
    2a52:	08 95       	ret

00002a54 <uECC_verify>:
    2a54:	2f 92       	push	r2
    2a56:	3f 92       	push	r3
    2a58:	4f 92       	push	r4
    2a5a:	5f 92       	push	r5
    2a5c:	6f 92       	push	r6
    2a5e:	7f 92       	push	r7
    2a60:	8f 92       	push	r8
    2a62:	9f 92       	push	r9
    2a64:	af 92       	push	r10
    2a66:	bf 92       	push	r11
    2a68:	cf 92       	push	r12
    2a6a:	df 92       	push	r13
    2a6c:	ef 92       	push	r14
    2a6e:	ff 92       	push	r15
    2a70:	0f 93       	push	r16
    2a72:	1f 93       	push	r17
    2a74:	cf 93       	push	r28
    2a76:	df 93       	push	r29
    2a78:	cd b7       	in	r28, 0x3d	; 61
    2a7a:	de b7       	in	r29, 0x3e	; 62
    2a7c:	cc 5c       	subi	r28, 0xCC	; 204
    2a7e:	d1 40       	sbci	r29, 0x01	; 1
    2a80:	0f b6       	in	r0, 0x3f	; 63
    2a82:	f8 94       	cli
    2a84:	de bf       	out	0x3e, r29	; 62
    2a86:	0f be       	out	0x3f, r0	; 63
    2a88:	cd bf       	out	0x3d, r28	; 61
    2a8a:	4c 01       	movw	r8, r24
    2a8c:	c7 53       	subi	r28, 0x37	; 55
    2a8e:	de 4f       	sbci	r29, 0xFE	; 254
    2a90:	79 83       	std	Y+1, r23	; 0x01
    2a92:	68 83       	st	Y, r22
    2a94:	c9 5c       	subi	r28, 0xC9	; 201
    2a96:	d1 40       	sbci	r29, 0x01	; 1
    2a98:	c5 53       	subi	r28, 0x35	; 53
    2a9a:	de 4f       	sbci	r29, 0xFE	; 254
    2a9c:	59 83       	std	Y+1, r21	; 0x01
    2a9e:	48 83       	st	Y, r20
    2aa0:	cb 5c       	subi	r28, 0xCB	; 203
    2aa2:	d1 40       	sbci	r29, 0x01	; 1
    2aa4:	59 01       	movw	r10, r18
    2aa6:	78 01       	movw	r14, r16
    2aa8:	d8 01       	movw	r26, r16
    2aaa:	3c 90       	ld	r3, X
    2aac:	12 96       	adiw	r26, 0x02	; 2
    2aae:	8d 91       	ld	r24, X+
    2ab0:	9c 91       	ld	r25, X
    2ab2:	13 97       	sbiw	r26, 0x03	; 3
    2ab4:	07 96       	adiw	r24, 0x07	; 7
    2ab6:	6c 01       	movw	r12, r24
    2ab8:	1a f4       	brpl	.+6      	; 0x2ac0 <uECC_verify+0x6c>
    2aba:	b7 e0       	ldi	r27, 0x07	; 7
    2abc:	cb 0e       	add	r12, r27
    2abe:	d1 1c       	adc	r13, r1
    2ac0:	d5 94       	asr	r13
    2ac2:	c7 94       	ror	r12
    2ac4:	d5 94       	asr	r13
    2ac6:	c7 94       	ror	r12
    2ac8:	d5 94       	asr	r13
    2aca:	c7 94       	ror	r12
    2acc:	0c 2d       	mov	r16, r12
    2ace:	0c 2c       	mov	r0, r12
    2ad0:	00 0c       	add	r0, r0
    2ad2:	11 0b       	sbc	r17, r17
    2ad4:	01 50       	subi	r16, 0x01	; 1
    2ad6:	11 09       	sbc	r17, r1
    2ad8:	e1 ea       	ldi	r30, 0xA1	; 161
    2ada:	f0 e0       	ldi	r31, 0x00	; 0
    2adc:	ec 0f       	add	r30, r28
    2ade:	fd 1f       	adc	r31, r29
    2ae0:	e0 0f       	add	r30, r16
    2ae2:	f1 1f       	adc	r31, r17
    2ae4:	10 82       	st	Z, r1
    2ae6:	e9 e8       	ldi	r30, 0x89	; 137
    2ae8:	f1 e0       	ldi	r31, 0x01	; 1
    2aea:	ec 0f       	add	r30, r28
    2aec:	fd 1f       	adc	r31, r29
    2aee:	e0 0f       	add	r30, r16
    2af0:	f1 1f       	adc	r31, r17
    2af2:	10 82       	st	Z, r1
    2af4:	e9 ea       	ldi	r30, 0xA9	; 169
    2af6:	f1 e0       	ldi	r31, 0x01	; 1
    2af8:	ec 0f       	add	r30, r28
    2afa:	fd 1f       	adc	r31, r29
    2afc:	e0 0f       	add	r30, r16
    2afe:	f1 1f       	adc	r31, r17
    2b00:	10 82       	st	Z, r1
    2b02:	f7 01       	movw	r30, r14
    2b04:	61 81       	ldd	r22, Z+1	; 0x01
    2b06:	06 2e       	mov	r0, r22
    2b08:	00 0c       	add	r0, r0
    2b0a:	77 0b       	sbc	r23, r23
    2b0c:	a4 01       	movw	r20, r8
    2b0e:	ce 01       	movw	r24, r28
    2b10:	87 5b       	subi	r24, 0xB7	; 183
    2b12:	9e 4f       	sbci	r25, 0xFE	; 254
    2b14:	53 dd       	rcall	.-1370   	; 0x25bc <uECC_vli_nativeToBytes>
    2b16:	d7 01       	movw	r26, r14
    2b18:	11 96       	adiw	r26, 0x01	; 1
    2b1a:	6c 91       	ld	r22, X
    2b1c:	63 2c       	mov	r6, r3
    2b1e:	03 2c       	mov	r0, r3
    2b20:	00 0c       	add	r0, r0
    2b22:	77 08       	sbc	r7, r7
    2b24:	0f 2e       	mov	r0, r31
    2b26:	f9 e4       	ldi	r31, 0x49	; 73
    2b28:	4f 2e       	mov	r4, r31
    2b2a:	55 24       	eor	r5, r5
    2b2c:	53 94       	inc	r5
    2b2e:	f0 2d       	mov	r31, r0
    2b30:	4c 0e       	add	r4, r28
    2b32:	5d 1e       	adc	r5, r29
    2b34:	46 0c       	add	r4, r6
    2b36:	57 1c       	adc	r5, r7
    2b38:	06 2e       	mov	r0, r22
    2b3a:	00 0c       	add	r0, r0
    2b3c:	77 0b       	sbc	r23, r23
    2b3e:	a4 01       	movw	r20, r8
    2b40:	46 0f       	add	r20, r22
    2b42:	57 1f       	adc	r21, r23
    2b44:	c2 01       	movw	r24, r4
    2b46:	3a dd       	rcall	.-1420   	; 0x25bc <uECC_vli_nativeToBytes>
    2b48:	f7 01       	movw	r30, r14
    2b4a:	61 81       	ldd	r22, Z+1	; 0x01
    2b4c:	06 2e       	mov	r0, r22
    2b4e:	00 0c       	add	r0, r0
    2b50:	77 0b       	sbc	r23, r23
    2b52:	a5 01       	movw	r20, r10
    2b54:	ce 01       	movw	r24, r28
    2b56:	87 57       	subi	r24, 0x77	; 119
    2b58:	9e 4f       	sbci	r25, 0xFE	; 254
    2b5a:	30 dd       	rcall	.-1440   	; 0x25bc <uECC_vli_nativeToBytes>
    2b5c:	d7 01       	movw	r26, r14
    2b5e:	11 96       	adiw	r26, 0x01	; 1
    2b60:	6c 91       	ld	r22, X
    2b62:	06 2e       	mov	r0, r22
    2b64:	00 0c       	add	r0, r0
    2b66:	77 0b       	sbc	r23, r23
    2b68:	a5 01       	movw	r20, r10
    2b6a:	46 0f       	add	r20, r22
    2b6c:	57 1f       	adc	r21, r23
    2b6e:	ce 01       	movw	r24, r28
    2b70:	87 55       	subi	r24, 0x57	; 87
    2b72:	9e 4f       	sbci	r25, 0xFE	; 254
    2b74:	23 dd       	rcall	.-1466   	; 0x25bc <uECC_vli_nativeToBytes>
    2b76:	63 2d       	mov	r22, r3
    2b78:	ce 01       	movw	r24, r28
    2b7a:	87 57       	subi	r24, 0x77	; 119
    2b7c:	9e 4f       	sbci	r25, 0xFE	; 254
    2b7e:	0e 94 40 07 	call	0xe80	; 0xe80 <uECC_vli_isZero>
    2b82:	81 11       	cpse	r24, r1
    2b84:	02 c2       	rjmp	.+1028   	; 0x2f8a <uECC_verify+0x536>
    2b86:	63 2d       	mov	r22, r3
    2b88:	ce 01       	movw	r24, r28
    2b8a:	87 55       	subi	r24, 0x57	; 87
    2b8c:	9e 4f       	sbci	r25, 0xFE	; 254
    2b8e:	0e 94 40 07 	call	0xe80	; 0xe80 <uECC_vli_isZero>
    2b92:	81 11       	cpse	r24, r1
    2b94:	fd c1       	rjmp	.+1018   	; 0x2f90 <uECC_verify+0x53c>
    2b96:	47 01       	movw	r8, r14
    2b98:	b4 e2       	ldi	r27, 0x24	; 36
    2b9a:	8b 0e       	add	r8, r27
    2b9c:	91 1c       	adc	r9, r1
    2b9e:	4c 2d       	mov	r20, r12
    2ba0:	be 01       	movw	r22, r28
    2ba2:	67 57       	subi	r22, 0x77	; 119
    2ba4:	7e 4f       	sbci	r23, 0xFE	; 254
    2ba6:	c4 01       	movw	r24, r8
    2ba8:	0e 94 a3 07 	call	0xf46	; 0xf46 <uECC_vli_cmp_unsafe>
    2bac:	81 30       	cpi	r24, 0x01	; 1
    2bae:	09 f0       	breq	.+2      	; 0x2bb2 <uECC_verify+0x15e>
    2bb0:	f2 c1       	rjmp	.+996    	; 0x2f96 <uECC_verify+0x542>
    2bb2:	4c 2d       	mov	r20, r12
    2bb4:	be 01       	movw	r22, r28
    2bb6:	67 55       	subi	r22, 0x57	; 87
    2bb8:	7e 4f       	sbci	r23, 0xFE	; 254
    2bba:	c4 01       	movw	r24, r8
    2bbc:	0e 94 a3 07 	call	0xf46	; 0xf46 <uECC_vli_cmp_unsafe>
    2bc0:	81 30       	cpi	r24, 0x01	; 1
    2bc2:	09 f0       	breq	.+2      	; 0x2bc6 <uECC_verify+0x172>
    2bc4:	eb c1       	rjmp	.+982    	; 0x2f9c <uECC_verify+0x548>
    2bc6:	2c 2d       	mov	r18, r12
    2bc8:	a4 01       	movw	r20, r8
    2bca:	be 01       	movw	r22, r28
    2bcc:	67 55       	subi	r22, 0x57	; 87
    2bce:	7e 4f       	sbci	r23, 0xFE	; 254
    2bd0:	ce 01       	movw	r24, r28
    2bd2:	8f 5b       	subi	r24, 0xBF	; 191
    2bd4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bd6:	0e 94 13 0a 	call	0x1426	; 0x1426 <uECC_vli_modInv>
    2bda:	e1 e0       	ldi	r30, 0x01	; 1
    2bdc:	f0 e0       	ldi	r31, 0x00	; 0
    2bde:	ec 0f       	add	r30, r28
    2be0:	fd 1f       	adc	r31, r29
    2be2:	e0 0f       	add	r30, r16
    2be4:	f1 1f       	adc	r31, r17
    2be6:	10 82       	st	Z, r1
    2be8:	97 01       	movw	r18, r14
    2bea:	c5 53       	subi	r28, 0x35	; 53
    2bec:	de 4f       	sbci	r29, 0xFE	; 254
    2bee:	48 81       	ld	r20, Y
    2bf0:	59 81       	ldd	r21, Y+1	; 0x01
    2bf2:	cb 5c       	subi	r28, 0xCB	; 203
    2bf4:	d1 40       	sbci	r29, 0x01	; 1
    2bf6:	c7 53       	subi	r28, 0x37	; 55
    2bf8:	de 4f       	sbci	r29, 0xFE	; 254
    2bfa:	68 81       	ld	r22, Y
    2bfc:	79 81       	ldd	r23, Y+1	; 0x01
    2bfe:	c9 5c       	subi	r28, 0xC9	; 201
    2c00:	d1 40       	sbci	r29, 0x01	; 1
    2c02:	ce 01       	movw	r24, r28
    2c04:	01 96       	adiw	r24, 0x01	; 1
    2c06:	5d dd       	rcall	.-1350   	; 0x26c2 <bits2int>
    2c08:	0c 2d       	mov	r16, r12
    2c0a:	94 01       	movw	r18, r8
    2c0c:	ae 01       	movw	r20, r28
    2c0e:	4f 5b       	subi	r20, 0xBF	; 191
    2c10:	5f 4f       	sbci	r21, 0xFF	; 255
    2c12:	be 01       	movw	r22, r28
    2c14:	6f 5f       	subi	r22, 0xFF	; 255
    2c16:	7f 4f       	sbci	r23, 0xFF	; 255
    2c18:	cb 01       	movw	r24, r22
    2c1a:	0e 94 34 08 	call	0x1068	; 0x1068 <uECC_vli_modMult>
    2c1e:	94 01       	movw	r18, r8
    2c20:	ae 01       	movw	r20, r28
    2c22:	4f 5b       	subi	r20, 0xBF	; 191
    2c24:	5f 4f       	sbci	r21, 0xFF	; 255
    2c26:	be 01       	movw	r22, r28
    2c28:	67 57       	subi	r22, 0x77	; 119
    2c2a:	7e 4f       	sbci	r23, 0xFE	; 254
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	81 96       	adiw	r24, 0x21	; 33
    2c30:	0e 94 34 08 	call	0x1068	; 0x1068 <uECC_vli_modMult>
    2c34:	5e 01       	movw	r10, r28
    2c36:	e1 e6       	ldi	r30, 0x61	; 97
    2c38:	ae 0e       	add	r10, r30
    2c3a:	b1 1c       	adc	r11, r1
    2c3c:	43 2d       	mov	r20, r3
    2c3e:	be 01       	movw	r22, r28
    2c40:	67 5b       	subi	r22, 0xB7	; 183
    2c42:	7e 4f       	sbci	r23, 0xFE	; 254
    2c44:	c5 01       	movw	r24, r10
    2c46:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2c4a:	c5 01       	movw	r24, r10
    2c4c:	86 0d       	add	r24, r6
    2c4e:	97 1d       	adc	r25, r7
    2c50:	c5 53       	subi	r28, 0x35	; 53
    2c52:	de 4f       	sbci	r29, 0xFE	; 254
    2c54:	99 83       	std	Y+1, r25	; 0x01
    2c56:	88 83       	st	Y, r24
    2c58:	cb 5c       	subi	r28, 0xCB	; 203
    2c5a:	d1 40       	sbci	r29, 0x01	; 1
    2c5c:	43 2d       	mov	r20, r3
    2c5e:	b2 01       	movw	r22, r4
    2c60:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2c64:	43 2d       	mov	r20, r3
    2c66:	27 01       	movw	r4, r14
    2c68:	94 e4       	ldi	r25, 0x44	; 68
    2c6a:	49 0e       	add	r4, r25
    2c6c:	51 1c       	adc	r5, r1
    2c6e:	b2 01       	movw	r22, r4
    2c70:	ce 01       	movw	r24, r28
    2c72:	8f 51       	subi	r24, 0x1F	; 31
    2c74:	9f 4f       	sbci	r25, 0xFF	; 255
    2c76:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2c7a:	b2 01       	movw	r22, r4
    2c7c:	66 0d       	add	r22, r6
    2c7e:	77 1d       	adc	r23, r7
    2c80:	43 2d       	mov	r20, r3
    2c82:	ce 01       	movw	r24, r28
    2c84:	8f 5f       	subi	r24, 0xFF	; 255
    2c86:	9e 4f       	sbci	r25, 0xFE	; 254
    2c88:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2c8c:	d7 01       	movw	r26, r14
    2c8e:	14 96       	adiw	r26, 0x04	; 4
    2c90:	c7 53       	subi	r28, 0x37	; 55
    2c92:	de 4f       	sbci	r29, 0xFE	; 254
    2c94:	b9 83       	std	Y+1, r27	; 0x01
    2c96:	a8 83       	st	Y, r26
    2c98:	c9 5c       	subi	r28, 0xC9	; 201
    2c9a:	d1 40       	sbci	r29, 0x01	; 1
    2c9c:	03 2d       	mov	r16, r3
    2c9e:	9d 01       	movw	r18, r26
    2ca0:	ae 01       	movw	r20, r28
    2ca2:	4f 51       	subi	r20, 0x1F	; 31
    2ca4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ca6:	b5 01       	movw	r22, r10
    2ca8:	ce 01       	movw	r24, r28
    2caa:	8f 5b       	subi	r24, 0xBF	; 191
    2cac:	9f 4f       	sbci	r25, 0xFF	; 255
    2cae:	0e 94 1e 08 	call	0x103c	; 0x103c <uECC_vli_modSub>
    2cb2:	87 01       	movw	r16, r14
    2cb4:	c5 53       	subi	r28, 0x35	; 53
    2cb6:	de 4f       	sbci	r29, 0xFE	; 254
    2cb8:	28 81       	ld	r18, Y
    2cba:	39 81       	ldd	r19, Y+1	; 0x01
    2cbc:	cb 5c       	subi	r28, 0xCB	; 203
    2cbe:	d1 40       	sbci	r29, 0x01	; 1
    2cc0:	a5 01       	movw	r20, r10
    2cc2:	be 01       	movw	r22, r28
    2cc4:	6f 5f       	subi	r22, 0xFF	; 255
    2cc6:	7e 4f       	sbci	r23, 0xFE	; 254
    2cc8:	ce 01       	movw	r24, r28
    2cca:	8f 51       	subi	r24, 0x1F	; 31
    2ccc:	9f 4f       	sbci	r25, 0xFF	; 255
    2cce:	84 d8       	rcall	.-3832   	; 0x1dd8 <XYcZ_add>
    2cd0:	23 2d       	mov	r18, r3
    2cd2:	c7 53       	subi	r28, 0x37	; 55
    2cd4:	de 4f       	sbci	r29, 0xFE	; 254
    2cd6:	48 81       	ld	r20, Y
    2cd8:	59 81       	ldd	r21, Y+1	; 0x01
    2cda:	c9 5c       	subi	r28, 0xC9	; 201
    2cdc:	d1 40       	sbci	r29, 0x01	; 1
    2cde:	be 01       	movw	r22, r28
    2ce0:	6f 5b       	subi	r22, 0xBF	; 191
    2ce2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	0e 94 13 0a 	call	0x1426	; 0x1426 <uECC_vli_modInv>
    2cea:	97 01       	movw	r18, r14
    2cec:	ae 01       	movw	r20, r28
    2cee:	4f 5b       	subi	r20, 0xBF	; 191
    2cf0:	5f 4f       	sbci	r21, 0xFF	; 255
    2cf2:	c5 53       	subi	r28, 0x35	; 53
    2cf4:	de 4f       	sbci	r29, 0xFE	; 254
    2cf6:	68 81       	ld	r22, Y
    2cf8:	79 81       	ldd	r23, Y+1	; 0x01
    2cfa:	cb 5c       	subi	r28, 0xCB	; 203
    2cfc:	d1 40       	sbci	r29, 0x01	; 1
    2cfe:	c5 01       	movw	r24, r10
    2d00:	2a d8       	rcall	.-4012   	; 0x1d56 <apply_z>
    2d02:	cf 5b       	subi	r28, 0xBF	; 191
    2d04:	de 4f       	sbci	r29, 0xFE	; 254
    2d06:	19 82       	std	Y+1, r1	; 0x01
    2d08:	18 82       	st	Y, r1
    2d0a:	c1 54       	subi	r28, 0x41	; 65
    2d0c:	d1 40       	sbci	r29, 0x01	; 1
    2d0e:	cd 5b       	subi	r28, 0xBD	; 189
    2d10:	de 4f       	sbci	r29, 0xFE	; 254
    2d12:	59 82       	std	Y+1, r5	; 0x01
    2d14:	48 82       	st	Y, r4
    2d16:	c3 54       	subi	r28, 0x43	; 67
    2d18:	d1 40       	sbci	r29, 0x01	; 1
    2d1a:	e9 e4       	ldi	r30, 0x49	; 73
    2d1c:	f1 e0       	ldi	r31, 0x01	; 1
    2d1e:	ec 0f       	add	r30, r28
    2d20:	fd 1f       	adc	r31, r29
    2d22:	cb 5b       	subi	r28, 0xBB	; 187
    2d24:	de 4f       	sbci	r29, 0xFE	; 254
    2d26:	f9 83       	std	Y+1, r31	; 0x01
    2d28:	e8 83       	st	Y, r30
    2d2a:	c5 54       	subi	r28, 0x45	; 69
    2d2c:	d1 40       	sbci	r29, 0x01	; 1
    2d2e:	c9 5b       	subi	r28, 0xB9	; 185
    2d30:	de 4f       	sbci	r29, 0xFE	; 254
    2d32:	b9 82       	std	Y+1, r11	; 0x01
    2d34:	a8 82       	st	Y, r10
    2d36:	c7 54       	subi	r28, 0x47	; 71
    2d38:	d1 40       	sbci	r29, 0x01	; 1
    2d3a:	6c 2d       	mov	r22, r12
    2d3c:	ce 01       	movw	r24, r28
    2d3e:	81 96       	adiw	r24, 0x21	; 33
    2d40:	0e 94 6c 07 	call	0xed8	; 0xed8 <uECC_vli_numBits>
    2d44:	08 2f       	mov	r16, r24
    2d46:	19 2f       	mov	r17, r25
    2d48:	6c 2d       	mov	r22, r12
    2d4a:	ce 01       	movw	r24, r28
    2d4c:	01 96       	adiw	r24, 0x01	; 1
    2d4e:	0e 94 6c 07 	call	0xed8	; 0xed8 <uECC_vli_numBits>
    2d52:	a0 2e       	mov	r10, r16
    2d54:	b1 2e       	mov	r11, r17
    2d56:	a8 16       	cp	r10, r24
    2d58:	b9 06       	cpc	r11, r25
    2d5a:	0c f4       	brge	.+2      	; 0x2d5e <uECC_verify+0x30a>
    2d5c:	5c 01       	movw	r10, r24
    2d5e:	85 01       	movw	r16, r10
    2d60:	01 50       	subi	r16, 0x01	; 1
    2d62:	11 09       	sbc	r17, r1
    2d64:	b8 01       	movw	r22, r16
    2d66:	ce 01       	movw	r24, r28
    2d68:	01 96       	adiw	r24, 0x01	; 1
    2d6a:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    2d6e:	21 e0       	ldi	r18, 0x01	; 1
    2d70:	90 e0       	ldi	r25, 0x00	; 0
    2d72:	81 11       	cpse	r24, r1
    2d74:	01 c0       	rjmp	.+2      	; 0x2d78 <uECC_verify+0x324>
    2d76:	20 e0       	ldi	r18, 0x00	; 0
    2d78:	42 2e       	mov	r4, r18
    2d7a:	59 2e       	mov	r5, r25
    2d7c:	b8 01       	movw	r22, r16
    2d7e:	ce 01       	movw	r24, r28
    2d80:	81 96       	adiw	r24, 0x21	; 33
    2d82:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    2d86:	81 11       	cpse	r24, r1
    2d88:	03 c0       	rjmp	.+6      	; 0x2d90 <uECC_verify+0x33c>
    2d8a:	e0 e0       	ldi	r30, 0x00	; 0
    2d8c:	f0 e0       	ldi	r31, 0x00	; 0
    2d8e:	02 c0       	rjmp	.+4      	; 0x2d94 <uECC_verify+0x340>
    2d90:	e2 e0       	ldi	r30, 0x02	; 2
    2d92:	f0 e0       	ldi	r31, 0x00	; 0
    2d94:	e4 29       	or	r30, r4
    2d96:	f5 29       	or	r31, r5
    2d98:	ee 0f       	add	r30, r30
    2d9a:	ff 1f       	adc	r31, r31
    2d9c:	81 e4       	ldi	r24, 0x41	; 65
    2d9e:	91 e0       	ldi	r25, 0x01	; 1
    2da0:	8c 0f       	add	r24, r28
    2da2:	9d 1f       	adc	r25, r29
    2da4:	e8 0f       	add	r30, r24
    2da6:	f9 1f       	adc	r31, r25
    2da8:	00 81       	ld	r16, Z
    2daa:	11 81       	ldd	r17, Z+1	; 0x01
    2dac:	43 2d       	mov	r20, r3
    2dae:	b8 01       	movw	r22, r16
    2db0:	ce 01       	movw	r24, r28
    2db2:	8f 55       	subi	r24, 0x5F	; 95
    2db4:	9f 4f       	sbci	r25, 0xFF	; 255
    2db6:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2dba:	b8 01       	movw	r22, r16
    2dbc:	66 0d       	add	r22, r6
    2dbe:	77 1d       	adc	r23, r7
    2dc0:	43 2d       	mov	r20, r3
    2dc2:	ce 01       	movw	r24, r28
    2dc4:	8f 53       	subi	r24, 0x3F	; 63
    2dc6:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc8:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2dcc:	63 2d       	mov	r22, r3
    2dce:	ce 01       	movw	r24, r28
    2dd0:	8f 5b       	subi	r24, 0xBF	; 191
    2dd2:	9f 4f       	sbci	r25, 0xFF	; 255
    2dd4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <uECC_vli_clear>
    2dd8:	81 e0       	ldi	r24, 0x01	; 1
    2dda:	22 96       	adiw	r28, 0x02	; 2
    2ddc:	8f af       	std	Y+63, r24	; 0x3f
    2dde:	22 97       	sbiw	r28, 0x02	; 2
    2de0:	92 e0       	ldi	r25, 0x02	; 2
    2de2:	a9 1a       	sub	r10, r25
    2de4:	b1 08       	sbc	r11, r1
    2de6:	0a f4       	brpl	.+2      	; 0x2dea <uECC_verify+0x396>
    2de8:	83 c0       	rjmp	.+262    	; 0x2ef0 <uECC_verify+0x49c>
    2dea:	27 01       	movw	r4, r14
    2dec:	a4 ea       	ldi	r26, 0xA4	; 164
    2dee:	4a 0e       	add	r4, r26
    2df0:	51 1c       	adc	r5, r1
    2df2:	21 2c       	mov	r2, r1
    2df4:	d2 01       	movw	r26, r4
    2df6:	ed 91       	ld	r30, X+
    2df8:	fc 91       	ld	r31, X
    2dfa:	97 01       	movw	r18, r14
    2dfc:	ae 01       	movw	r20, r28
    2dfe:	4f 5b       	subi	r20, 0xBF	; 191
    2e00:	5f 4f       	sbci	r21, 0xFF	; 255
    2e02:	be 01       	movw	r22, r28
    2e04:	6f 53       	subi	r22, 0x3F	; 63
    2e06:	7f 4f       	sbci	r23, 0xFF	; 255
    2e08:	ce 01       	movw	r24, r28
    2e0a:	8f 55       	subi	r24, 0x5F	; 95
    2e0c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e0e:	09 95       	icall
    2e10:	b5 01       	movw	r22, r10
    2e12:	ce 01       	movw	r24, r28
    2e14:	01 96       	adiw	r24, 0x01	; 1
    2e16:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    2e1a:	11 e0       	ldi	r17, 0x01	; 1
    2e1c:	81 11       	cpse	r24, r1
    2e1e:	01 c0       	rjmp	.+2      	; 0x2e22 <uECC_verify+0x3ce>
    2e20:	12 2d       	mov	r17, r2
    2e22:	b5 01       	movw	r22, r10
    2e24:	ce 01       	movw	r24, r28
    2e26:	81 96       	adiw	r24, 0x21	; 33
    2e28:	0e 94 56 07 	call	0xeac	; 0xeac <uECC_vli_testBit>
    2e2c:	81 11       	cpse	r24, r1
    2e2e:	02 c0       	rjmp	.+4      	; 0x2e34 <uECC_verify+0x3e0>
    2e30:	e2 2d       	mov	r30, r2
    2e32:	01 c0       	rjmp	.+2      	; 0x2e36 <uECC_verify+0x3e2>
    2e34:	e2 e0       	ldi	r30, 0x02	; 2
    2e36:	1e 2b       	or	r17, r30
    2e38:	e1 2f       	mov	r30, r17
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	ee 0f       	add	r30, r30
    2e3e:	ff 1f       	adc	r31, r31
    2e40:	81 e4       	ldi	r24, 0x41	; 65
    2e42:	91 e0       	ldi	r25, 0x01	; 1
    2e44:	8c 0f       	add	r24, r28
    2e46:	9d 1f       	adc	r25, r29
    2e48:	e8 0f       	add	r30, r24
    2e4a:	f9 1f       	adc	r31, r25
    2e4c:	00 81       	ld	r16, Z
    2e4e:	11 81       	ldd	r17, Z+1	; 0x01
    2e50:	01 15       	cp	r16, r1
    2e52:	11 05       	cpc	r17, r1
    2e54:	09 f4       	brne	.+2      	; 0x2e58 <uECC_verify+0x404>
    2e56:	47 c0       	rjmp	.+142    	; 0x2ee6 <uECC_verify+0x492>
    2e58:	43 2d       	mov	r20, r3
    2e5a:	b8 01       	movw	r22, r16
    2e5c:	ce 01       	movw	r24, r28
    2e5e:	8f 51       	subi	r24, 0x1F	; 31
    2e60:	9f 4f       	sbci	r25, 0xFF	; 255
    2e62:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2e66:	b8 01       	movw	r22, r16
    2e68:	66 0d       	add	r22, r6
    2e6a:	77 1d       	adc	r23, r7
    2e6c:	43 2d       	mov	r20, r3
    2e6e:	ce 01       	movw	r24, r28
    2e70:	8f 5f       	subi	r24, 0xFF	; 255
    2e72:	9e 4f       	sbci	r25, 0xFE	; 254
    2e74:	0e 94 a3 04 	call	0x946	; 0x946 <uECC_vli_set>
    2e78:	97 01       	movw	r18, r14
    2e7a:	ae 01       	movw	r20, r28
    2e7c:	4f 5b       	subi	r20, 0xBF	; 191
    2e7e:	5f 4f       	sbci	r21, 0xFF	; 255
    2e80:	be 01       	movw	r22, r28
    2e82:	6f 5f       	subi	r22, 0xFF	; 255
    2e84:	7e 4f       	sbci	r23, 0xFE	; 254
    2e86:	ce 01       	movw	r24, r28
    2e88:	8f 51       	subi	r24, 0x1F	; 31
    2e8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e8c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <apply_z>
    2e90:	03 2d       	mov	r16, r3
    2e92:	c7 53       	subi	r28, 0x37	; 55
    2e94:	de 4f       	sbci	r29, 0xFE	; 254
    2e96:	28 81       	ld	r18, Y
    2e98:	39 81       	ldd	r19, Y+1	; 0x01
    2e9a:	c9 5c       	subi	r28, 0xC9	; 201
    2e9c:	d1 40       	sbci	r29, 0x01	; 1
    2e9e:	ae 01       	movw	r20, r28
    2ea0:	4f 51       	subi	r20, 0x1F	; 31
    2ea2:	5f 4f       	sbci	r21, 0xFF	; 255
    2ea4:	be 01       	movw	r22, r28
    2ea6:	6f 55       	subi	r22, 0x5F	; 95
    2ea8:	7f 4f       	sbci	r23, 0xFF	; 255
    2eaa:	ce 01       	movw	r24, r28
    2eac:	8f 5d       	subi	r24, 0xDF	; 223
    2eae:	9e 4f       	sbci	r25, 0xFE	; 254
    2eb0:	0e 94 1e 08 	call	0x103c	; 0x103c <uECC_vli_modSub>
    2eb4:	87 01       	movw	r16, r14
    2eb6:	9e 01       	movw	r18, r28
    2eb8:	2f 53       	subi	r18, 0x3F	; 63
    2eba:	3f 4f       	sbci	r19, 0xFF	; 255
    2ebc:	ae 01       	movw	r20, r28
    2ebe:	4f 55       	subi	r20, 0x5F	; 95
    2ec0:	5f 4f       	sbci	r21, 0xFF	; 255
    2ec2:	be 01       	movw	r22, r28
    2ec4:	6f 5f       	subi	r22, 0xFF	; 255
    2ec6:	7e 4f       	sbci	r23, 0xFE	; 254
    2ec8:	ce 01       	movw	r24, r28
    2eca:	8f 51       	subi	r24, 0x1F	; 31
    2ecc:	9f 4f       	sbci	r25, 0xFF	; 255
    2ece:	0e 94 ec 0e 	call	0x1dd8	; 0x1dd8 <XYcZ_add>
    2ed2:	97 01       	movw	r18, r14
    2ed4:	ae 01       	movw	r20, r28
    2ed6:	4f 5d       	subi	r20, 0xDF	; 223
    2ed8:	5e 4f       	sbci	r21, 0xFE	; 254
    2eda:	be 01       	movw	r22, r28
    2edc:	6f 5b       	subi	r22, 0xBF	; 191
    2ede:	7f 4f       	sbci	r23, 0xFF	; 255
    2ee0:	cb 01       	movw	r24, r22
    2ee2:	0e 94 b9 09 	call	0x1372	; 0x1372 <uECC_vli_modMult_fast>
    2ee6:	91 e0       	ldi	r25, 0x01	; 1
    2ee8:	a9 1a       	sub	r10, r25
    2eea:	b1 08       	sbc	r11, r1
    2eec:	08 f0       	brcs	.+2      	; 0x2ef0 <uECC_verify+0x49c>
    2eee:	82 cf       	rjmp	.-252    	; 0x2df4 <uECC_verify+0x3a0>
    2ef0:	23 2d       	mov	r18, r3
    2ef2:	c7 53       	subi	r28, 0x37	; 55
    2ef4:	de 4f       	sbci	r29, 0xFE	; 254
    2ef6:	48 81       	ld	r20, Y
    2ef8:	59 81       	ldd	r21, Y+1	; 0x01
    2efa:	c9 5c       	subi	r28, 0xC9	; 201
    2efc:	d1 40       	sbci	r29, 0x01	; 1
    2efe:	be 01       	movw	r22, r28
    2f00:	6f 5b       	subi	r22, 0xBF	; 191
    2f02:	7f 4f       	sbci	r23, 0xFF	; 255
    2f04:	cb 01       	movw	r24, r22
    2f06:	0e 94 13 0a 	call	0x1426	; 0x1426 <uECC_vli_modInv>
    2f0a:	97 01       	movw	r18, r14
    2f0c:	ae 01       	movw	r20, r28
    2f0e:	4f 5b       	subi	r20, 0xBF	; 191
    2f10:	5f 4f       	sbci	r21, 0xFF	; 255
    2f12:	be 01       	movw	r22, r28
    2f14:	6f 53       	subi	r22, 0x3F	; 63
    2f16:	7f 4f       	sbci	r23, 0xFF	; 255
    2f18:	ce 01       	movw	r24, r28
    2f1a:	8f 55       	subi	r24, 0x5F	; 95
    2f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f1e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <apply_z>
    2f22:	4c 2d       	mov	r20, r12
    2f24:	be 01       	movw	r22, r28
    2f26:	6f 55       	subi	r22, 0x5F	; 95
    2f28:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2a:	c4 01       	movw	r24, r8
    2f2c:	0e 94 a3 07 	call	0xf46	; 0xf46 <uECC_vli_cmp_unsafe>
    2f30:	81 30       	cpi	r24, 0x01	; 1
    2f32:	41 f0       	breq	.+16     	; 0x2f44 <uECC_verify+0x4f0>
    2f34:	2c 2d       	mov	r18, r12
    2f36:	a4 01       	movw	r20, r8
    2f38:	be 01       	movw	r22, r28
    2f3a:	6f 55       	subi	r22, 0x5F	; 95
    2f3c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f3e:	cb 01       	movw	r24, r22
    2f40:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_sub>
    2f44:	3a 94       	dec	r3
    2f46:	33 20       	and	r3, r3
    2f48:	cc f0       	brlt	.+50     	; 0x2f7c <uECC_verify+0x528>
    2f4a:	20 e0       	ldi	r18, 0x00	; 0
    2f4c:	83 2d       	mov	r24, r3
    2f4e:	03 2c       	mov	r0, r3
    2f50:	00 0c       	add	r0, r0
    2f52:	99 0b       	sbc	r25, r25
    2f54:	e1 ea       	ldi	r30, 0xA1	; 161
    2f56:	f0 e0       	ldi	r31, 0x00	; 0
    2f58:	ec 0f       	add	r30, r28
    2f5a:	fd 1f       	adc	r31, r29
    2f5c:	e8 0f       	add	r30, r24
    2f5e:	f9 1f       	adc	r31, r25
    2f60:	a9 e8       	ldi	r26, 0x89	; 137
    2f62:	b1 e0       	ldi	r27, 0x01	; 1
    2f64:	ac 0f       	add	r26, r28
    2f66:	bd 1f       	adc	r27, r29
    2f68:	a8 0f       	add	r26, r24
    2f6a:	b9 1f       	adc	r27, r25
    2f6c:	30 81       	ld	r19, Z
    2f6e:	8c 91       	ld	r24, X
    2f70:	83 27       	eor	r24, r19
    2f72:	28 2b       	or	r18, r24
    2f74:	3a 94       	dec	r3
    2f76:	33 20       	and	r3, r3
    2f78:	4c f7       	brge	.-46     	; 0x2f4c <uECC_verify+0x4f8>
    2f7a:	01 c0       	rjmp	.+2      	; 0x2f7e <uECC_verify+0x52a>
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	81 e0       	ldi	r24, 0x01	; 1
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	22 23       	and	r18, r18
    2f84:	69 f0       	breq	.+26     	; 0x2fa0 <uECC_verify+0x54c>
    2f86:	80 e0       	ldi	r24, 0x00	; 0
    2f88:	0b c0       	rjmp	.+22     	; 0x2fa0 <uECC_verify+0x54c>
    2f8a:	80 e0       	ldi	r24, 0x00	; 0
    2f8c:	90 e0       	ldi	r25, 0x00	; 0
    2f8e:	08 c0       	rjmp	.+16     	; 0x2fa0 <uECC_verify+0x54c>
    2f90:	80 e0       	ldi	r24, 0x00	; 0
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	05 c0       	rjmp	.+10     	; 0x2fa0 <uECC_verify+0x54c>
    2f96:	80 e0       	ldi	r24, 0x00	; 0
    2f98:	90 e0       	ldi	r25, 0x00	; 0
    2f9a:	02 c0       	rjmp	.+4      	; 0x2fa0 <uECC_verify+0x54c>
    2f9c:	80 e0       	ldi	r24, 0x00	; 0
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	c4 53       	subi	r28, 0x34	; 52
    2fa2:	de 4f       	sbci	r29, 0xFE	; 254
    2fa4:	0f b6       	in	r0, 0x3f	; 63
    2fa6:	f8 94       	cli
    2fa8:	de bf       	out	0x3e, r29	; 62
    2faa:	0f be       	out	0x3f, r0	; 63
    2fac:	cd bf       	out	0x3d, r28	; 61
    2fae:	df 91       	pop	r29
    2fb0:	cf 91       	pop	r28
    2fb2:	1f 91       	pop	r17
    2fb4:	0f 91       	pop	r16
    2fb6:	ff 90       	pop	r15
    2fb8:	ef 90       	pop	r14
    2fba:	df 90       	pop	r13
    2fbc:	cf 90       	pop	r12
    2fbe:	bf 90       	pop	r11
    2fc0:	af 90       	pop	r10
    2fc2:	9f 90       	pop	r9
    2fc4:	8f 90       	pop	r8
    2fc6:	7f 90       	pop	r7
    2fc8:	6f 90       	pop	r6
    2fca:	5f 90       	pop	r5
    2fcc:	4f 90       	pop	r4
    2fce:	3f 90       	pop	r3
    2fd0:	2f 90       	pop	r2
    2fd2:	08 95       	ret

00002fd4 <bytes_to_hex>:

#include <avr/io.h>
#include "hexconv.h"

void bytes_to_hex(const uint8_t *src, uint8_t intlen, char dest[intlen*2])
{
    2fd4:	cf 93       	push	r28
    2fd6:	df 93       	push	r29
	static const unsigned char table[] = "0123456789abcdef";

	for (; intlen > 0; intlen--)
    2fd8:	66 23       	and	r22, r22
    2fda:	c9 f0       	breq	.+50     	; 0x300e <bytes_to_hex+0x3a>
    2fdc:	c4 2f       	mov	r28, r20
    2fde:	d5 2f       	mov	r29, r21
    2fe0:	28 2f       	mov	r18, r24
    2fe2:	39 2f       	mov	r19, r25
	{
		unsigned char c = *src++;
    2fe4:	d9 01       	movw	r26, r18
    2fe6:	ed 91       	ld	r30, X+
    2fe8:	9d 01       	movw	r18, r26
		*dest++ = table[c >> 4];
    2fea:	ae 2f       	mov	r26, r30
    2fec:	a2 95       	swap	r26
    2fee:	af 70       	andi	r26, 0x0F	; 15
    2ff0:	b0 e0       	ldi	r27, 0x00	; 0
    2ff2:	aa 54       	subi	r26, 0x4A	; 74
    2ff4:	be 4f       	sbci	r27, 0xFE	; 254
    2ff6:	8c 91       	ld	r24, X
    2ff8:	88 83       	st	Y, r24
		*dest++ = table[c & 0x0f];
    2ffa:	ef 70       	andi	r30, 0x0F	; 15
    2ffc:	f0 e0       	ldi	r31, 0x00	; 0
    2ffe:	ea 54       	subi	r30, 0x4A	; 74
    3000:	fe 4f       	sbci	r31, 0xFE	; 254
    3002:	80 81       	ld	r24, Z
    3004:	89 83       	std	Y+1, r24	; 0x01

void bytes_to_hex(const uint8_t *src, uint8_t intlen, char dest[intlen*2])
{
	static const unsigned char table[] = "0123456789abcdef";

	for (; intlen > 0; intlen--)
    3006:	61 50       	subi	r22, 0x01	; 1
    3008:	22 96       	adiw	r28, 0x02	; 2
    300a:	61 11       	cpse	r22, r1
    300c:	eb cf       	rjmp	.-42     	; 0x2fe4 <bytes_to_hex+0x10>
	{
		unsigned char c = *src++;
		*dest++ = table[c >> 4];
		*dest++ = table[c & 0x0f];
	}
}
    300e:	df 91       	pop	r29
    3010:	cf 91       	pop	r28
    3012:	08 95       	ret

00003014 <hex_to_bytes>:

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
    3014:	ff 92       	push	r15
    3016:	0f 93       	push	r16
    3018:	1f 93       	push	r17
    301a:	cf 93       	push	r28
    301c:	df 93       	push	r29
    301e:	f8 2e       	mov	r15, r24
    3020:	09 2f       	mov	r16, r25
    3022:	16 2f       	mov	r17, r22
    3024:	ea 01       	movw	r28, r20
	memset(dest, 0, strlen/2);
    3026:	46 2f       	mov	r20, r22
    3028:	46 95       	lsr	r20
    302a:	50 e0       	ldi	r21, 0x00	; 0
    302c:	60 e0       	ldi	r22, 0x00	; 0
    302e:	70 e0       	ldi	r23, 0x00	; 0
    3030:	ce 01       	movw	r24, r28
    3032:	0e 94 a6 33 	call	0x674c	; 0x674c <memset>
	uint8_t index = 0;
	while (index < strlen) {
    3036:	11 23       	and	r17, r17
    3038:	09 f4       	brne	.+2      	; 0x303c <hex_to_bytes+0x28>
    303a:	3f c0       	rjmp	.+126    	; 0x30ba <hex_to_bytes+0xa6>
    303c:	ef 2d       	mov	r30, r15
    303e:	f0 2f       	mov	r31, r16
    3040:	20 e0       	ldi	r18, 0x00	; 0
    3042:	30 e0       	ldi	r19, 0x00	; 0
		char c = src[index];
		int value = 0;
    3044:	70 e0       	ldi	r23, 0x00	; 0
    3046:	60 e0       	ldi	r22, 0x00	; 0
    3048:	42 2f       	mov	r20, r18

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
		char c = src[index];
    304a:	81 91       	ld	r24, Z+
    304c:	2f 5f       	subi	r18, 0xFF	; 255
    304e:	3f 4f       	sbci	r19, 0xFF	; 255
		int value = 0;
		if(c >= '0' && c <= '9')
    3050:	90 ed       	ldi	r25, 0xD0	; 208
    3052:	98 0f       	add	r25, r24
    3054:	9a 30       	cpi	r25, 0x0A	; 10
    3056:	18 f4       	brcc	.+6      	; 0x305e <hex_to_bytes+0x4a>
		value = (c - '0');
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	c0 97       	sbiw	r24, 0x30	; 48
    305c:	11 c0       	rjmp	.+34     	; 0x3080 <hex_to_bytes+0x6c>
		else if (c >= 'A' && c <= 'F')
    305e:	9f eb       	ldi	r25, 0xBF	; 191
    3060:	98 0f       	add	r25, r24
    3062:	96 30       	cpi	r25, 0x06	; 6
    3064:	18 f4       	brcc	.+6      	; 0x306c <hex_to_bytes+0x58>
		value = (10 + (c - 'A'));
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	c7 97       	sbiw	r24, 0x37	; 55
    306a:	0a c0       	rjmp	.+20     	; 0x3080 <hex_to_bytes+0x6c>
		else if (c >= 'a' && c <= 'f')
    306c:	9f e9       	ldi	r25, 0x9F	; 159
    306e:	98 0f       	add	r25, r24
    3070:	96 30       	cpi	r25, 0x06	; 6
    3072:	20 f4       	brcc	.+8      	; 0x307c <hex_to_bytes+0x68>
		value = (10 + (c - 'a'));
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	87 55       	subi	r24, 0x57	; 87
    3078:	91 09       	sbc	r25, r1
    307a:	02 c0       	rjmp	.+4      	; 0x3080 <hex_to_bytes+0x6c>
void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
		char c = src[index];
		int value = 0;
    307c:	87 2f       	mov	r24, r23
    307e:	96 2f       	mov	r25, r22
		else if (c >= 'A' && c <= 'F')
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
		value = (10 + (c - 'a'));

		dest[(index/2)] += value << (((index + 1) % 2) * 4);
    3080:	46 95       	lsr	r20
    3082:	de 01       	movw	r26, r28
    3084:	a4 0f       	add	r26, r20
    3086:	b1 1d       	adc	r27, r1
    3088:	a9 01       	movw	r20, r18
    308a:	41 70       	andi	r20, 0x01	; 1
    308c:	50 78       	andi	r21, 0x80	; 128
    308e:	55 23       	and	r21, r21
    3090:	34 f4       	brge	.+12     	; 0x309e <hex_to_bytes+0x8a>
    3092:	41 50       	subi	r20, 0x01	; 1
    3094:	51 09       	sbc	r21, r1
    3096:	4e 6f       	ori	r20, 0xFE	; 254
    3098:	5f 6f       	ori	r21, 0xFF	; 255
    309a:	4f 5f       	subi	r20, 0xFF	; 255
    309c:	5f 4f       	sbci	r21, 0xFF	; 255
    309e:	44 0f       	add	r20, r20
    30a0:	55 1f       	adc	r21, r21
    30a2:	44 0f       	add	r20, r20
    30a4:	55 1f       	adc	r21, r21
    30a6:	02 c0       	rjmp	.+4      	; 0x30ac <hex_to_bytes+0x98>
    30a8:	88 0f       	add	r24, r24
    30aa:	99 1f       	adc	r25, r25
    30ac:	4a 95       	dec	r20
    30ae:	e2 f7       	brpl	.-8      	; 0x30a8 <hex_to_bytes+0x94>
    30b0:	9c 91       	ld	r25, X
    30b2:	89 0f       	add	r24, r25
    30b4:	8c 93       	st	X, r24
}

void hex_to_bytes(char *src, uint8_t strlen, uint8_t dest[strlen/2]) {
	memset(dest, 0, strlen/2);
	uint8_t index = 0;
	while (index < strlen) {
    30b6:	21 17       	cp	r18, r17
    30b8:	38 f2       	brcs	.-114    	; 0x3048 <hex_to_bytes+0x34>

		dest[(index/2)] += value << (((index + 1) % 2) * 4);

		index++;
	}
}
    30ba:	df 91       	pop	r29
    30bc:	cf 91       	pop	r28
    30be:	1f 91       	pop	r17
    30c0:	0f 91       	pop	r16
    30c2:	ff 90       	pop	r15
    30c4:	08 95       	ret

000030c6 <isotp_send_flow_control>:

    return ms;
}

static int isotp_send_flow_control(IsoTpLink* link, uint8_t flow_status, uint8_t block_size, uint8_t st_min_ms) 
{
    30c6:	cf 93       	push	r28
    30c8:	df 93       	push	r29
    30ca:	cd b7       	in	r28, 0x3d	; 61
    30cc:	de b7       	in	r29, 0x3e	; 62
    30ce:	28 97       	sbiw	r28, 0x08	; 8
    30d0:	0f b6       	in	r0, 0x3f	; 63
    30d2:	f8 94       	cli
    30d4:	de bf       	out	0x3e, r29	; 62
    30d6:	0f be       	out	0x3f, r0	; 63
    30d8:	cd bf       	out	0x3d, r28	; 61
    IsoTpCanMessage message;
    int ret;

    /* setup message  */
    message.as.flow_control.type = ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME;
    message.as.flow_control.FS = flow_status;
    30da:	62 95       	swap	r22
    30dc:	60 7f       	andi	r22, 0xF0	; 240
    30de:	63 60       	ori	r22, 0x03	; 3
    30e0:	69 83       	std	Y+1, r22	; 0x01
    message.as.flow_control.BS = block_size;
    30e2:	4a 83       	std	Y+2, r20	; 0x02
static uint8_t isotp_ms_to_st_min(uint8_t ms) 
{
    uint8_t st_min;

    st_min = ms;
    if (st_min > 0x7F){
    30e4:	22 23       	and	r18, r18
    30e6:	0c f4       	brge	.+2      	; 0x30ea <isotp_send_flow_control+0x24>
        st_min = 0x7F;
    30e8:	2f e7       	ldi	r18, 0x7F	; 127

    /* setup message  */
    message.as.flow_control.type = ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME;
    message.as.flow_control.FS = flow_status;
    message.as.flow_control.BS = block_size;
    message.as.flow_control.STmin = isotp_ms_to_st_min(st_min_ms);
    30ea:	2b 83       	std	Y+3, r18	; 0x03

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.flow_control.reserve, 0, sizeof(message.as.flow_control.reserve));
    30ec:	fe 01       	movw	r30, r28
    30ee:	34 96       	adiw	r30, 0x04	; 4
    30f0:	25 e0       	ldi	r18, 0x05	; 5
    30f2:	df 01       	movw	r26, r30
    30f4:	1d 92       	st	X+, r1
    30f6:	2a 95       	dec	r18
    30f8:	e9 f7       	brne	.-6      	; 0x30f4 <isotp_send_flow_control+0x2e>
    ret = isotp_user_send_can(link->send_arbitration_id,
    30fa:	fc 01       	movw	r30, r24
    30fc:	60 81       	ld	r22, Z
    30fe:	71 81       	ldd	r23, Z+1	; 0x01
    3100:	82 81       	ldd	r24, Z+2	; 0x02
    3102:	93 81       	ldd	r25, Z+3	; 0x03
    3104:	28 e0       	ldi	r18, 0x08	; 8
    3106:	ae 01       	movw	r20, r28
    3108:	4f 5f       	subi	r20, 0xFF	; 255
    310a:	5f 4f       	sbci	r21, 0xFF	; 255
    310c:	83 d3       	rcall	.+1798   	; 0x3814 <isotp_user_send_can>
                           message.as.data_array.ptr, 
                           3);
#endif

    return ret;
}
    310e:	28 96       	adiw	r28, 0x08	; 8
    3110:	0f b6       	in	r0, 0x3f	; 63
    3112:	f8 94       	cli
    3114:	de bf       	out	0x3e, r29	; 62
    3116:	0f be       	out	0x3f, r0	; 63
    3118:	cd bf       	out	0x3d, r28	; 61
    311a:	df 91       	pop	r29
    311c:	cf 91       	pop	r28
    311e:	08 95       	ret

00003120 <isotp_send_with_id>:
{
    return isotp_send_with_id(link, link->send_arbitration_id, payload, size);
}

int isotp_send_with_id(IsoTpLink *link, uint32_t id, const uint8_t payload[], uint16_t size)
{
    3120:	8f 92       	push	r8
    3122:	9f 92       	push	r9
    3124:	af 92       	push	r10
    3126:	bf 92       	push	r11
    3128:	ef 92       	push	r14
    312a:	ff 92       	push	r15
    312c:	0f 93       	push	r16
    312e:	1f 93       	push	r17
    3130:	cf 93       	push	r28
    3132:	df 93       	push	r29
    3134:	cd b7       	in	r28, 0x3d	; 61
    3136:	de b7       	in	r29, 0x3e	; 62
    3138:	28 97       	sbiw	r28, 0x08	; 8
    313a:	0f b6       	in	r0, 0x3f	; 63
    313c:	f8 94       	cli
    313e:	de bf       	out	0x3e, r29	; 62
    3140:	0f be       	out	0x3f, r0	; 63
    3142:	cd bf       	out	0x3d, r28	; 61
    3144:	7c 01       	movw	r14, r24
    3146:	4a 01       	movw	r8, r20
    3148:	5b 01       	movw	r10, r22
    int ret;
    
    if (size > link->send_buf_size){
    314a:	dc 01       	movw	r26, r24
    314c:	16 96       	adiw	r26, 0x06	; 6
    314e:	8d 91       	ld	r24, X+
    3150:	9c 91       	ld	r25, X
    3152:	17 97       	sbiw	r26, 0x07	; 7
    3154:	80 17       	cp	r24, r16
    3156:	91 07       	cpc	r25, r17
    3158:	50 f4       	brcc	.+20     	; 0x316e <isotp_send_with_id+0x4e>
        isotp_user_debug("Message to big, increase ISO_TP_MAX_MESSAGE_SIZE to set a bigger buffer\n");
    315a:	87 ec       	ldi	r24, 0xC7	; 199
    315c:	91 e0       	ldi	r25, 0x01	; 1
    315e:	9f 93       	push	r25
    3160:	8f 93       	push	r24
    3162:	55 d3       	rcall	.+1706   	; 0x380e <isotp_user_debug>
        return ISOTP_RET_OVERFLOW;
    3164:	0f 90       	pop	r0
    3166:	0f 90       	pop	r0
    3168:	8d ef       	ldi	r24, 0xFD	; 253
    316a:	9f ef       	ldi	r25, 0xFF	; 255
    316c:	7f c0       	rjmp	.+254    	; 0x326c <isotp_send_with_id+0x14c>
    }

    if (ISOTP_SEND_STATUS_INPROGRESS == link->send_status){
    316e:	f7 01       	movw	r30, r14
    3170:	83 8d       	ldd	r24, Z+27	; 0x1b
    3172:	81 30       	cpi	r24, 0x01	; 1
    3174:	51 f4       	brne	.+20     	; 0x318a <isotp_send_with_id+0x6a>
        isotp_user_debug("Abord previous message, which is sending in pregress\n");
    3176:	80 e1       	ldi	r24, 0x10	; 16
    3178:	92 e0       	ldi	r25, 0x02	; 2
    317a:	9f 93       	push	r25
    317c:	8f 93       	push	r24
    317e:	47 d3       	rcall	.+1678   	; 0x380e <isotp_user_debug>
        return ISOTP_RET_INPROGRESS;
    3180:	0f 90       	pop	r0
    3182:	0f 90       	pop	r0
    3184:	8e ef       	ldi	r24, 0xFE	; 254
    3186:	9f ef       	ldi	r25, 0xFF	; 255
    3188:	71 c0       	rjmp	.+226    	; 0x326c <isotp_send_with_id+0x14c>
    }

    /* copy into local buffer */
    link->send_size = size;
    318a:	11 87       	std	Z+9, r17	; 0x09
    318c:	00 87       	std	Z+8, r16	; 0x08
    link->send_offset = 0;
    318e:	13 86       	std	Z+11, r1	; 0x0b
    3190:	12 86       	std	Z+10, r1	; 0x0a
    (void)memcpy(link->send_buffer, payload, size);
    3192:	a8 01       	movw	r20, r16
    3194:	b9 01       	movw	r22, r18
    3196:	84 81       	ldd	r24, Z+4	; 0x04
    3198:	95 81       	ldd	r25, Z+5	; 0x05
    319a:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>

    if(link->send_size < 8){
    319e:	f7 01       	movw	r30, r14
    31a0:	00 85       	ldd	r16, Z+8	; 0x08
    31a2:	11 85       	ldd	r17, Z+9	; 0x09
    31a4:	08 30       	cpi	r16, 0x08	; 8
    31a6:	11 05       	cpc	r17, r1
    31a8:	08 f5       	brcc	.+66     	; 0x31ec <isotp_send_with_id+0xcc>
    /* multi frame message length must greater than 7  */
    assert(link->send_size <= 7);

    /* setup message  */
    message.as.single_frame.type = ISOTP_PCI_TYPE_SINGLE;
    message.as.single_frame.SF_DL = (uint8_t)link->send_size;
    31aa:	80 2f       	mov	r24, r16
    31ac:	82 95       	swap	r24
    31ae:	80 7f       	andi	r24, 0xF0	; 240
    31b0:	89 83       	std	Y+1, r24	; 0x01
    (void)memcpy(message.as.single_frame.data, link->send_buffer, link->send_size);
    31b2:	64 81       	ldd	r22, Z+4	; 0x04
    31b4:	75 81       	ldd	r23, Z+5	; 0x05
    31b6:	a8 01       	movw	r20, r16
    31b8:	ce 01       	movw	r24, r28
    31ba:	02 96       	adiw	r24, 0x02	; 2
    31bc:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.single_frame.data + link->send_size,
    31c0:	47 e0       	ldi	r20, 0x07	; 7
    31c2:	50 e0       	ldi	r21, 0x00	; 0
    31c4:	40 1b       	sub	r20, r16
    31c6:	51 0b       	sbc	r21, r17
    31c8:	60 e0       	ldi	r22, 0x00	; 0
    31ca:	70 e0       	ldi	r23, 0x00	; 0
    31cc:	82 e0       	ldi	r24, 0x02	; 2
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	8c 0f       	add	r24, r28
    31d2:	9d 1f       	adc	r25, r29
    31d4:	80 0f       	add	r24, r16
    31d6:	91 1f       	adc	r25, r17
    31d8:	0e 94 a6 33 	call	0x674c	; 0x674c <memset>
           0,
           sizeof(message.as.single_frame.data) - link->send_size);
    ret = isotp_user_send_can(id,
    31dc:	28 e0       	ldi	r18, 0x08	; 8
    31de:	ae 01       	movw	r20, r28
    31e0:	4f 5f       	subi	r20, 0xFF	; 255
    31e2:	5f 4f       	sbci	r21, 0xFF	; 255
    31e4:	c5 01       	movw	r24, r10
    31e6:	b4 01       	movw	r22, r8
    31e8:	15 d3       	rcall	.+1578   	; 0x3814 <isotp_user_send_can>
    31ea:	40 c0       	rjmp	.+128    	; 0x326c <isotp_send_with_id+0x14c>
    /* multi frame message length must greater than 7  */
    assert(link->send_size > 7);

    /* setup message  */
    message.as.first_frame.type = ISOTP_PCI_TYPE_FIRST_FRAME;
    message.as.first_frame.FF_DL_low  = (uint8_t)link->send_size;
    31ec:	0a 83       	std	Y+2, r16	; 0x02
    message.as.first_frame.FF_DL_high = (uint8_t)(0x0F & (link->send_size >> 8));
    31ee:	81 2f       	mov	r24, r17
    31f0:	82 95       	swap	r24
    31f2:	80 7f       	andi	r24, 0xF0	; 240
    31f4:	81 60       	ori	r24, 0x01	; 1
    31f6:	89 83       	std	Y+1, r24	; 0x01
    (void)memcpy(message.as.first_frame.data, 
    31f8:	04 80       	ldd	r0, Z+4	; 0x04
    31fa:	f5 81       	ldd	r31, Z+5	; 0x05
    31fc:	e0 2d       	mov	r30, r0
    31fe:	86 e0       	ldi	r24, 0x06	; 6
    3200:	de 01       	movw	r26, r28
    3202:	13 96       	adiw	r26, 0x03	; 3
    3204:	01 90       	ld	r0, Z+
    3206:	0d 92       	st	X+, r0
    3208:	8a 95       	dec	r24
    320a:	e1 f7       	brne	.-8      	; 0x3204 <isotp_send_with_id+0xe4>
           link->send_buffer, 
           sizeof(message.as.first_frame.data));

    /* send message */
    ret = isotp_user_send_can(id,
    320c:	28 e0       	ldi	r18, 0x08	; 8
    320e:	ae 01       	movw	r20, r28
    3210:	4f 5f       	subi	r20, 0xFF	; 255
    3212:	5f 4f       	sbci	r21, 0xFF	; 255
    3214:	c5 01       	movw	r24, r10
    3216:	b4 01       	movw	r22, r8
    3218:	fd d2       	rcall	.+1530   	; 0x3814 <isotp_user_send_can>
                           message.as.data_array.ptr, 
                           sizeof(message));
    if (ISOTP_RET_OK == ret){
    321a:	00 97       	sbiw	r24, 0x00	; 0
    321c:	39 f5       	brne	.+78     	; 0x326c <isotp_send_with_id+0x14c>
        link->send_offset += sizeof(message.as.first_frame.data);
    321e:	f7 01       	movw	r30, r14
    3220:	82 85       	ldd	r24, Z+10	; 0x0a
    3222:	93 85       	ldd	r25, Z+11	; 0x0b
    3224:	06 96       	adiw	r24, 0x06	; 6
    3226:	93 87       	std	Z+11, r25	; 0x0b
    3228:	82 87       	std	Z+10, r24	; 0x0a
        link->send_sn = 1;
    322a:	11 e0       	ldi	r17, 0x01	; 1
    322c:	14 87       	std	Z+12, r17	; 0x0c
        /* send multi-frame */
        ret = isotp_send_first_frame(link, id); 
        
        /* init multi-frame control flags */
        if (ISOTP_RET_OK == ret){
            link->send_bs_remain = 5;
    322e:	85 e0       	ldi	r24, 0x05	; 5
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	96 87       	std	Z+14, r25	; 0x0e
            link->send_st_min = 0;
    3234:	85 87       	std	Z+13, r24	; 0x0d
            link->send_wtf_count = 0;
    3236:	17 86       	std	Z+15, r1	; 0x0f
            link->send_timer_st = isotp_user_get_ms();
    3238:	10 8a       	std	Z+16, r1	; 0x10
    323a:	0a d3       	rcall	.+1556   	; 0x3850 <isotp_user_get_ms>
    323c:	d7 01       	movw	r26, r14
    323e:	51 96       	adiw	r26, 0x11	; 17
    3240:	6d 93       	st	X+, r22
    3242:	7d 93       	st	X+, r23
    3244:	8d 93       	st	X+, r24
    3246:	9c 93       	st	X, r25
            link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3248:	54 97       	sbiw	r26, 0x14	; 20
    324a:	02 d3       	rcall	.+1540   	; 0x3850 <isotp_user_get_ms>
    324c:	dc 01       	movw	r26, r24
    324e:	cb 01       	movw	r24, r22
    3250:	8c 59       	subi	r24, 0x9C	; 156
    3252:	9f 4f       	sbci	r25, 0xFF	; 255
    3254:	af 4f       	sbci	r26, 0xFF	; 255
    3256:	bf 4f       	sbci	r27, 0xFF	; 255
    3258:	f7 01       	movw	r30, r14
    325a:	85 8b       	std	Z+21, r24	; 0x15
    325c:	96 8b       	std	Z+22, r25	; 0x16
    325e:	a7 8b       	std	Z+23, r26	; 0x17
    3260:	b0 8f       	std	Z+24, r27	; 0x18
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    3262:	12 8e       	std	Z+26, r1	; 0x1a
    3264:	11 8e       	std	Z+25, r1	; 0x19
            link->send_status = ISOTP_SEND_STATUS_INPROGRESS;
    3266:	13 8f       	std	Z+27, r17	; 0x1b
    if(link->send_size < 8){
        /* send single frame */
        ret = isotp_send_single_frame(link, id);
    } else {
        /* send multi-frame */
        ret = isotp_send_first_frame(link, id); 
    3268:	80 e0       	ldi	r24, 0x00	; 0
    326a:	90 e0       	ldi	r25, 0x00	; 0
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
            link->send_status = ISOTP_SEND_STATUS_INPROGRESS;
        }
    }
    return ret;
}
    326c:	28 96       	adiw	r28, 0x08	; 8
    326e:	0f b6       	in	r0, 0x3f	; 63
    3270:	f8 94       	cli
    3272:	de bf       	out	0x3e, r29	; 62
    3274:	0f be       	out	0x3f, r0	; 63
    3276:	cd bf       	out	0x3d, r28	; 61
    3278:	df 91       	pop	r29
    327a:	cf 91       	pop	r28
    327c:	1f 91       	pop	r17
    327e:	0f 91       	pop	r16
    3280:	ff 90       	pop	r15
    3282:	ef 90       	pop	r14
    3284:	bf 90       	pop	r11
    3286:	af 90       	pop	r10
    3288:	9f 90       	pop	r9
    328a:	8f 90       	pop	r8
    328c:	08 95       	ret

0000328e <isotp_send>:
    
    return ret;
}

int isotp_send(IsoTpLink *link, const uint8_t payload[], uint16_t size)
{
    328e:	0f 93       	push	r16
    3290:	1f 93       	push	r17
    3292:	9b 01       	movw	r18, r22
    3294:	8a 01       	movw	r16, r20
    return isotp_send_with_id(link, link->send_arbitration_id, payload, size);
    3296:	fc 01       	movw	r30, r24
    3298:	40 81       	ld	r20, Z
    329a:	51 81       	ldd	r21, Z+1	; 0x01
    329c:	62 81       	ldd	r22, Z+2	; 0x02
    329e:	73 81       	ldd	r23, Z+3	; 0x03
    32a0:	3f df       	rcall	.-386    	; 0x3120 <isotp_send_with_id>
}
    32a2:	1f 91       	pop	r17
    32a4:	0f 91       	pop	r16
    32a6:	08 95       	ret

000032a8 <isotp_on_can_message>:

    return ISOTP_RET_OK;
}

void isotp_on_can_message(IsoTpLink *link, uint8_t *data, uint8_t len)
{
    32a8:	cf 92       	push	r12
    32aa:	df 92       	push	r13
    32ac:	ef 92       	push	r14
    32ae:	ff 92       	push	r15
    32b0:	0f 93       	push	r16
    32b2:	1f 93       	push	r17
    32b4:	cf 93       	push	r28
    32b6:	df 93       	push	r29
    32b8:	cd b7       	in	r28, 0x3d	; 61
    32ba:	de b7       	in	r29, 0x3e	; 62
    32bc:	2a 97       	sbiw	r28, 0x0a	; 10
    32be:	0f b6       	in	r0, 0x3f	; 63
    32c0:	f8 94       	cli
    32c2:	de bf       	out	0x3e, r29	; 62
    32c4:	0f be       	out	0x3f, r0	; 63
    32c6:	cd bf       	out	0x3d, r28	; 61
    32c8:	7c 01       	movw	r14, r24
    IsoTpCanMessage message;
    int ret;
    
    if (len < 2 || len > 8){
    32ca:	9e ef       	ldi	r25, 0xFE	; 254
    32cc:	94 0f       	add	r25, r20
    32ce:	97 30       	cpi	r25, 0x07	; 7
    32d0:	08 f0       	brcs	.+2      	; 0x32d4 <isotp_on_can_message+0x2c>
    32d2:	67 c1       	rjmp	.+718    	; 0x35a2 <isotp_on_can_message+0x2fa>
    32d4:	14 2f       	mov	r17, r20
        return;
    }

    (void)memcpy(message.as.data_array.ptr, data, len);
    32d6:	c4 2e       	mov	r12, r20
    32d8:	d1 2c       	mov	r13, r1
    32da:	a6 01       	movw	r20, r12
    32dc:	ce 01       	movw	r24, r28
    32de:	01 96       	adiw	r24, 0x01	; 1
    32e0:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>
    (void)memset(message.as.data_array.ptr + len, 0, sizeof(message.as.data_array.ptr) - len);
    32e4:	48 e0       	ldi	r20, 0x08	; 8
    32e6:	50 e0       	ldi	r21, 0x00	; 0
    32e8:	4c 19       	sub	r20, r12
    32ea:	5d 09       	sbc	r21, r13
    32ec:	60 e0       	ldi	r22, 0x00	; 0
    32ee:	70 e0       	ldi	r23, 0x00	; 0
    32f0:	81 e0       	ldi	r24, 0x01	; 1
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	8c 0f       	add	r24, r28
    32f6:	9d 1f       	adc	r25, r29
    32f8:	8c 0d       	add	r24, r12
    32fa:	9d 1d       	adc	r25, r13
    32fc:	0e 94 a6 33 	call	0x674c	; 0x674c <memset>

    switch(message.as.common.type) {
    3300:	89 81       	ldd	r24, Y+1	; 0x01
    3302:	8f 70       	andi	r24, 0x0F	; 15
    3304:	81 30       	cpi	r24, 0x01	; 1
    3306:	09 f4       	brne	.+2      	; 0x330a <isotp_on_can_message+0x62>
    3308:	40 c0       	rjmp	.+128    	; 0x338a <isotp_on_can_message+0xe2>
    330a:	38 f0       	brcs	.+14     	; 0x331a <isotp_on_can_message+0x72>
    330c:	82 30       	cpi	r24, 0x02	; 2
    330e:	09 f4       	brne	.+2      	; 0x3312 <isotp_on_can_message+0x6a>
    3310:	8b c0       	rjmp	.+278    	; 0x3428 <isotp_on_can_message+0x180>
    3312:	83 30       	cpi	r24, 0x03	; 3
    3314:	09 f4       	brne	.+2      	; 0x3318 <isotp_on_can_message+0x70>
    3316:	cf c0       	rjmp	.+414    	; 0x34b6 <isotp_on_can_message+0x20e>
    3318:	44 c1       	rjmp	.+648    	; 0x35a2 <isotp_on_can_message+0x2fa>
        case ISOTP_PCI_TYPE_SINGLE: {
            /* update protocol resault */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    331a:	f7 01       	movw	r30, r14
    331c:	80 a9       	ldd	r24, Z+48	; 0x30
    331e:	81 30       	cpi	r24, 0x01	; 1
    3320:	29 f4       	brne	.+10     	; 0x332c <isotp_on_can_message+0x84>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3322:	8a ef       	ldi	r24, 0xFA	; 250
    3324:	9f ef       	ldi	r25, 0xFF	; 255
    3326:	97 a7       	std	Z+47, r25	; 0x2f
    3328:	86 a7       	std	Z+46, r24	; 0x2e
    332a:	03 c0       	rjmp	.+6      	; 0x3332 <isotp_on_can_message+0x8a>
            } else {
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    332c:	f7 01       	movw	r30, r14
    332e:	17 a6       	std	Z+47, r1	; 0x2f
    3330:	16 a6       	std	Z+46, r1	; 0x2e
}

static int isotp_receive_single_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{   
    /* check data length */
    if ((0 == message->as.single_frame.SF_DL) ||
    3332:	89 81       	ldd	r24, Y+1	; 0x01
    3334:	80 7f       	andi	r24, 0xF0	; 240
    3336:	69 f0       	breq	.+26     	; 0x3352 <isotp_on_can_message+0xaa>
        (message->as.single_frame.SF_DL > (len - 1))){
    3338:	49 81       	ldd	r20, Y+1	; 0x01
    333a:	84 2f       	mov	r24, r20
    333c:	82 95       	swap	r24
    333e:	8f 70       	andi	r24, 0x0F	; 15
}

static int isotp_receive_single_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{   
    /* check data length */
    if ((0 == message->as.single_frame.SF_DL) ||
    3340:	28 2f       	mov	r18, r24
    3342:	30 e0       	ldi	r19, 0x00	; 0
    3344:	41 2f       	mov	r20, r17
    3346:	50 e0       	ldi	r21, 0x00	; 0
    3348:	41 50       	subi	r20, 0x01	; 1
    334a:	51 09       	sbc	r21, r1
    334c:	42 17       	cp	r20, r18
    334e:	53 07       	cpc	r21, r19
    3350:	44 f4       	brge	.+16     	; 0x3362 <isotp_on_can_message+0xba>
        (message->as.single_frame.SF_DL > (len - 1))){
        isotp_user_debug("Single-frame length too small.");
    3352:	86 e4       	ldi	r24, 0x46	; 70
    3354:	92 e0       	ldi	r25, 0x02	; 2
    3356:	9f 93       	push	r25
    3358:	8f 93       	push	r24
    335a:	59 d2       	rcall	.+1202   	; 0x380e <isotp_user_debug>
    335c:	0f 90       	pop	r0
    335e:	0f 90       	pop	r0
    3360:	20 c1       	rjmp	.+576    	; 0x35a2 <isotp_on_can_message+0x2fa>
        return ISOTP_RET_LENGTH;
    }

    /* copying data */
    (void)memcpy(link->receive_buffer, 
    3362:	48 2f       	mov	r20, r24
    3364:	50 e0       	ldi	r21, 0x00	; 0
    3366:	be 01       	movw	r22, r28
    3368:	6e 5f       	subi	r22, 0xFE	; 254
    336a:	7f 4f       	sbci	r23, 0xFF	; 255
    336c:	f7 01       	movw	r30, r14
    336e:	80 a1       	ldd	r24, Z+32	; 0x20
    3370:	91 a1       	ldd	r25, Z+33	; 0x21
    3372:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>
           message->as.single_frame.data, 
           message->as.single_frame.SF_DL);
    link->receive_size = message->as.single_frame.SF_DL;
    3376:	89 81       	ldd	r24, Y+1	; 0x01
    3378:	82 95       	swap	r24
    337a:	8f 70       	andi	r24, 0x0F	; 15
    337c:	90 e0       	ldi	r25, 0x00	; 0
    337e:	f7 01       	movw	r30, r14
    3380:	95 a3       	std	Z+37, r25	; 0x25
    3382:	84 a3       	std	Z+36, r24	; 0x24
            /* handle message */
            ret = isotp_receive_single_frame(link, &message, len);
            
            if (ISOTP_RET_OK == ret){
                /* change status */
                link->receive_status = ISOTP_RECEIVE_STATUS_FULL;
    3384:	82 e0       	ldi	r24, 0x02	; 2
    3386:	80 ab       	std	Z+48, r24	; 0x30
    3388:	0c c1       	rjmp	.+536    	; 0x35a2 <isotp_on_can_message+0x2fa>
            }
            break;
        }
        case ISOTP_PCI_TYPE_FIRST_FRAME: {
            /* update protocol resault */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    338a:	f7 01       	movw	r30, r14
    338c:	80 a9       	ldd	r24, Z+48	; 0x30
    338e:	81 30       	cpi	r24, 0x01	; 1
    3390:	29 f4       	brne	.+10     	; 0x339c <isotp_on_can_message+0xf4>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3392:	8a ef       	ldi	r24, 0xFA	; 250
    3394:	9f ef       	ldi	r25, 0xFF	; 255
    3396:	97 a7       	std	Z+47, r25	; 0x2f
    3398:	86 a7       	std	Z+46, r24	; 0x2e
    339a:	03 c0       	rjmp	.+6      	; 0x33a2 <isotp_on_can_message+0xfa>
            } else {
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_OK;
    339c:	f7 01       	movw	r30, r14
    339e:	17 a6       	std	Z+47, r1	; 0x2f
    33a0:	16 a6       	std	Z+46, r1	; 0x2e

static int isotp_receive_first_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    volatile uint16_t payload_length;

    if (8 != len){
    33a2:	18 30       	cpi	r17, 0x08	; 8
    33a4:	41 f0       	breq	.+16     	; 0x33b6 <isotp_on_can_message+0x10e>
        isotp_user_debug("First frame should be 8 byte lenght.");
    33a6:	85 e6       	ldi	r24, 0x65	; 101
    33a8:	92 e0       	ldi	r25, 0x02	; 2
    33aa:	9f 93       	push	r25
    33ac:	8f 93       	push	r24
    33ae:	2f d2       	rcall	.+1118   	; 0x380e <isotp_user_debug>
    33b0:	0f 90       	pop	r0
    33b2:	0f 90       	pop	r0
    33b4:	f6 c0       	rjmp	.+492    	; 0x35a2 <isotp_on_can_message+0x2fa>
        return ISOTP_RET_LENGTH;
    }

    /* check data length */
	payload_length = message->as.first_frame.FF_DL_high;
    33b6:	89 81       	ldd	r24, Y+1	; 0x01
    33b8:	82 95       	swap	r24
    33ba:	8f 70       	andi	r24, 0x0F	; 15
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	9a 87       	std	Y+10, r25	; 0x0a
    33c0:	89 87       	std	Y+9, r24	; 0x09
    payload_length = (payload_length << 8) + message->as.first_frame.FF_DL_low;
    33c2:	89 85       	ldd	r24, Y+9	; 0x09
    33c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    33c6:	98 2f       	mov	r25, r24
    33c8:	88 27       	eor	r24, r24
    33ca:	2a 81       	ldd	r18, Y+2	; 0x02
    33cc:	82 0f       	add	r24, r18
    33ce:	91 1d       	adc	r25, r1
    33d0:	9a 87       	std	Y+10, r25	; 0x0a
    33d2:	89 87       	std	Y+9, r24	; 0x09
        return ISOTP_RET_OVERFLOW;
    }
	*/
    
    /* copying data */
    (void)memcpy(link->receive_buffer, message->as.first_frame.data, sizeof(message->as.first_frame.data));
    33d4:	f7 01       	movw	r30, r14
    33d6:	a0 a1       	ldd	r26, Z+32	; 0x20
    33d8:	b1 a1       	ldd	r27, Z+33	; 0x21
    33da:	86 e0       	ldi	r24, 0x06	; 6
    33dc:	fe 01       	movw	r30, r28
    33de:	33 96       	adiw	r30, 0x03	; 3
    33e0:	01 90       	ld	r0, Z+
    33e2:	0d 92       	st	X+, r0
    33e4:	8a 95       	dec	r24
    33e6:	e1 f7       	brne	.-8      	; 0x33e0 <isotp_on_can_message+0x138>
    link->receive_size = payload_length;
    33e8:	89 85       	ldd	r24, Y+9	; 0x09
    33ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    33ec:	f7 01       	movw	r30, r14
    33ee:	95 a3       	std	Z+37, r25	; 0x25
    33f0:	84 a3       	std	Z+36, r24	; 0x24
    link->receive_offset = sizeof(message->as.first_frame.data);
    33f2:	86 e0       	ldi	r24, 0x06	; 6
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	97 a3       	std	Z+39, r25	; 0x27
    33f8:	86 a3       	std	Z+38, r24	; 0x26
    link->receive_sn = 1;
    33fa:	81 e0       	ldi	r24, 0x01	; 1
    33fc:	80 a7       	std	Z+40, r24	; 0x28
            }

            /* if receive successful */
            if (ISOTP_RET_OK == ret){
                /* change status */
                link->receive_status = ISOTP_RECEIVE_STATUS_INPROGRESS;
    33fe:	80 ab       	std	Z+48, r24	; 0x30
                /* send fc frame */
                link->receive_bs_count = ISO_TP_DEFAULT_BLOCK_SIZE;					
    3400:	8e e0       	ldi	r24, 0x0E	; 14
    3402:	81 a7       	std	Z+41, r24	; 0x29
                isotp_send_flow_control(link, PCI_FLOW_STATUS_CONTINUE, link->receive_bs_count, ISO_TP_DEFAULT_ST_MIN);
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	4e e0       	ldi	r20, 0x0E	; 14
    3408:	60 e0       	ldi	r22, 0x00	; 0
    340a:	c7 01       	movw	r24, r14
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    340c:	5c de       	rcall	.-840    	; 0x30c6 <isotp_send_flow_control>
    340e:	20 d2       	rcall	.+1088   	; 0x3850 <isotp_user_get_ms>
    3410:	dc 01       	movw	r26, r24
    3412:	cb 01       	movw	r24, r22
    3414:	8c 59       	subi	r24, 0x9C	; 156
    3416:	9f 4f       	sbci	r25, 0xFF	; 255
    3418:	af 4f       	sbci	r26, 0xFF	; 255
    341a:	bf 4f       	sbci	r27, 0xFF	; 255
    341c:	f7 01       	movw	r30, r14
    341e:	82 a7       	std	Z+42, r24	; 0x2a
    3420:	93 a7       	std	Z+43, r25	; 0x2b
    3422:	a4 a7       	std	Z+44, r26	; 0x2c
    3424:	b5 a7       	std	Z+45, r27	; 0x2d
    3426:	bd c0       	rjmp	.+378    	; 0x35a2 <isotp_on_can_message+0x2fa>
            
            break;
        }
        case TSOTP_PCI_TYPE_CONSECUTIVE_FRAME: {
            /* check if in receiving status */
            if (ISOTP_RECEIVE_STATUS_INPROGRESS != link->receive_status){
    3428:	f7 01       	movw	r30, r14
    342a:	80 a9       	ldd	r24, Z+48	; 0x30
    342c:	81 30       	cpi	r24, 0x01	; 1
    342e:	29 f0       	breq	.+10     	; 0x343a <isotp_on_can_message+0x192>
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_UNEXP_PDU;
    3430:	8a ef       	ldi	r24, 0xFA	; 250
    3432:	9f ef       	ldi	r25, 0xFF	; 255
    3434:	97 a7       	std	Z+47, r25	; 0x2f
    3436:	86 a7       	std	Z+46, r24	; 0x2e
                break;
    3438:	b4 c0       	rjmp	.+360    	; 0x35a2 <isotp_on_can_message+0x2fa>
static int isotp_receive_consecutive_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    uint16_t remaining_bytes;
    
    /* check sn */
    if (link->receive_sn != message->as.consecutive_frame.SN){
    343a:	89 81       	ldd	r24, Y+1	; 0x01
    343c:	82 95       	swap	r24
    343e:	8f 70       	andi	r24, 0x0F	; 15
    3440:	f7 01       	movw	r30, r14
    3442:	90 a5       	ldd	r25, Z+40	; 0x28
    3444:	98 13       	cpse	r25, r24
    3446:	94 c0       	rjmp	.+296    	; 0x3570 <isotp_on_can_message+0x2c8>
        return ISOTP_RET_WRONG_SN;
    }

    /* check data length */
    remaining_bytes = link->receive_size - link->receive_offset;
    3448:	86 a1       	ldd	r24, Z+38	; 0x26
    344a:	97 a1       	ldd	r25, Z+39	; 0x27
    344c:	04 a1       	ldd	r16, Z+36	; 0x24
    344e:	15 a1       	ldd	r17, Z+37	; 0x25
    3450:	08 1b       	sub	r16, r24
    3452:	19 0b       	sbc	r17, r25
    3454:	08 30       	cpi	r16, 0x08	; 8
    3456:	11 05       	cpc	r17, r1
    3458:	10 f0       	brcs	.+4      	; 0x345e <isotp_on_can_message+0x1b6>
    345a:	07 e0       	ldi	r16, 0x07	; 7
    345c:	10 e0       	ldi	r17, 0x00	; 0
		return ISOTP_RET_LENGTH;
    }
	*/
	
    /* copying data */
    (void)memcpy(link->receive_buffer + link->receive_offset, 
    345e:	f7 01       	movw	r30, r14
    3460:	20 a1       	ldd	r18, Z+32	; 0x20
    3462:	31 a1       	ldd	r19, Z+33	; 0x21
    3464:	a8 01       	movw	r20, r16
    3466:	be 01       	movw	r22, r28
    3468:	6e 5f       	subi	r22, 0xFE	; 254
    346a:	7f 4f       	sbci	r23, 0xFF	; 255
    346c:	82 0f       	add	r24, r18
    346e:	93 1f       	adc	r25, r19
    3470:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>
           message->as.consecutive_frame.data,
           remaining_bytes);

    link->receive_offset += remaining_bytes;
    3474:	f7 01       	movw	r30, r14
    3476:	86 a1       	ldd	r24, Z+38	; 0x26
    3478:	97 a1       	ldd	r25, Z+39	; 0x27
    347a:	08 0f       	add	r16, r24
    347c:	19 1f       	adc	r17, r25
    347e:	17 a3       	std	Z+39, r17	; 0x27
    3480:	06 a3       	std	Z+38, r16	; 0x26
    if (++(link->receive_sn) > 0x0F){
    3482:	80 a5       	ldd	r24, Z+40	; 0x28
    3484:	8f 5f       	subi	r24, 0xFF	; 255
    3486:	80 31       	cpi	r24, 0x10	; 16
    3488:	08 f4       	brcc	.+2      	; 0x348c <isotp_on_can_message+0x1e4>
    348a:	5b c0       	rjmp	.+182    	; 0x3542 <isotp_on_can_message+0x29a>
        link->receive_sn = 0;
    348c:	10 a6       	std	Z+40, r1	; 0x28
    348e:	5b c0       	rjmp	.+182    	; 0x3546 <isotp_on_can_message+0x29e>
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
                
                /* receive finished */
                if (link->receive_offset >= link->receive_size){
                    link->receive_status = ISOTP_RECEIVE_STATUS_FULL;
    3490:	82 e0       	ldi	r24, 0x02	; 2
    3492:	f7 01       	movw	r30, r14
    3494:	80 ab       	std	Z+48, r24	; 0x30
    3496:	85 c0       	rjmp	.+266    	; 0x35a2 <isotp_on_can_message+0x2fa>
                } else {
                    /* send fc when bs reaches limit */
                    if (0 == --link->receive_bs_count){
    3498:	f7 01       	movw	r30, r14
    349a:	81 a5       	ldd	r24, Z+41	; 0x29
    349c:	81 50       	subi	r24, 0x01	; 1
    349e:	11 f0       	breq	.+4      	; 0x34a4 <isotp_on_can_message+0x1fc>
    34a0:	81 a7       	std	Z+41, r24	; 0x29
    34a2:	7f c0       	rjmp	.+254    	; 0x35a2 <isotp_on_can_message+0x2fa>
                        link->receive_bs_count = ISO_TP_DEFAULT_BLOCK_SIZE;											
    34a4:	8e e0       	ldi	r24, 0x0E	; 14
    34a6:	f7 01       	movw	r30, r14
    34a8:	81 a7       	std	Z+41, r24	; 0x29
                        isotp_send_flow_control(link, PCI_FLOW_STATUS_CONTINUE, link->receive_bs_count, ISO_TP_DEFAULT_ST_MIN);
    34aa:	20 e0       	ldi	r18, 0x00	; 0
    34ac:	4e e0       	ldi	r20, 0x0E	; 14
    34ae:	60 e0       	ldi	r22, 0x00	; 0
    34b0:	c7 01       	movw	r24, r14
    34b2:	09 de       	rcall	.-1006   	; 0x30c6 <isotp_send_flow_control>
    34b4:	76 c0       	rjmp	.+236    	; 0x35a2 <isotp_on_can_message+0x2fa>
            
            break;
        }
        case ISOTP_PCI_TYPE_FLOW_CONTROL_FRAME:
            /* handle fc frame only when sending in progress  */
            if (ISOTP_SEND_STATUS_INPROGRESS != link->send_status){
    34b6:	f7 01       	movw	r30, r14
    34b8:	83 8d       	ldd	r24, Z+27	; 0x1b
    34ba:	81 30       	cpi	r24, 0x01	; 1
    34bc:	09 f0       	breq	.+2      	; 0x34c0 <isotp_on_can_message+0x218>
    34be:	71 c0       	rjmp	.+226    	; 0x35a2 <isotp_on_can_message+0x2fa>
}

static int isotp_receive_flow_conrtrol_frame(IsoTpLink *link, IsoTpCanMessage *message, uint8_t len)
{
    /* check message length */
    if (len < 3){
    34c0:	13 30       	cpi	r17, 0x03	; 3
    34c2:	08 f0       	brcs	.+2      	; 0x34c6 <isotp_on_can_message+0x21e>
        isotp_user_debug("Flow control frame too short.");
    34c4:	5c c0       	rjmp	.+184    	; 0x357e <isotp_on_can_message+0x2d6>
    34c6:	8a e8       	ldi	r24, 0x8A	; 138
    34c8:	92 e0       	ldi	r25, 0x02	; 2
    34ca:	9f 93       	push	r25
    34cc:	8f 93       	push	r24
    34ce:	9f d1       	rcall	.+830    	; 0x380e <isotp_user_debug>
    34d0:	0f 90       	pop	r0
    34d2:	0f 90       	pop	r0
    34d4:	66 c0       	rjmp	.+204    	; 0x35a2 <isotp_on_can_message+0x2fa>
                /* refresh bs timer */
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;

                /* overflow */
                if (PCI_FLOW_STATUS_OVERFLOW == message.as.flow_control.FS) {
                    link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_BUFFER_OVFLW;
    34d6:	88 ef       	ldi	r24, 0xF8	; 248
    34d8:	9f ef       	ldi	r25, 0xFF	; 255
    34da:	f7 01       	movw	r30, r14
    34dc:	92 8f       	std	Z+26, r25	; 0x1a
    34de:	81 8f       	std	Z+25, r24	; 0x19
                    link->send_status = ISOTP_SEND_STATUS_ERROR;
    34e0:	82 e0       	ldi	r24, 0x02	; 2
    34e2:	83 8f       	std	Z+27, r24	; 0x1b
    34e4:	5e c0       	rjmp	.+188    	; 0x35a2 <isotp_on_can_message+0x2fa>
                } 
                /* wait */
                else if (PCI_FLOW_STATUS_WAIT == message.as.flow_control.FS) {
    34e6:	80 31       	cpi	r24, 0x10	; 16
    34e8:	71 f4       	brne	.+28     	; 0x3506 <isotp_on_can_message+0x25e>
                    link->send_wtf_count += 1;
    34ea:	f7 01       	movw	r30, r14
    34ec:	80 89       	ldd	r24, Z+16	; 0x10
    34ee:	8f 5f       	subi	r24, 0xFF	; 255
    34f0:	80 8b       	std	Z+16, r24	; 0x10
                    /* wati exceed allowed count */
                    if (link->send_wtf_count > ISO_TP_MAX_WFT_NUMBER){
    34f2:	82 30       	cpi	r24, 0x02	; 2
    34f4:	08 f4       	brcc	.+2      	; 0x34f8 <isotp_on_can_message+0x250>
    34f6:	55 c0       	rjmp	.+170    	; 0x35a2 <isotp_on_can_message+0x2fa>
                        link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_WFT_OVRN;
    34f8:	89 ef       	ldi	r24, 0xF9	; 249
    34fa:	9f ef       	ldi	r25, 0xFF	; 255
    34fc:	92 8f       	std	Z+26, r25	; 0x1a
    34fe:	81 8f       	std	Z+25, r24	; 0x19
                        link->send_status = ISOTP_SEND_STATUS_ERROR;
    3500:	82 e0       	ldi	r24, 0x02	; 2
    3502:	83 8f       	std	Z+27, r24	; 0x1b
    3504:	4e c0       	rjmp	.+156    	; 0x35a2 <isotp_on_can_message+0x2fa>
                    }
                } 
                /* permit send */
                else if (PCI_FLOW_STATUS_CONTINUE == message.as.flow_control.FS){
    3506:	81 11       	cpse	r24, r1
    3508:	4c c0       	rjmp	.+152    	; 0x35a2 <isotp_on_can_message+0x2fa>
                    if (0 == message.as.flow_control.BS){
    350a:	8a 81       	ldd	r24, Y+2	; 0x02
    350c:	81 11       	cpse	r24, r1
    350e:	06 c0       	rjmp	.+12     	; 0x351c <isotp_on_can_message+0x274>
                        link->send_bs_remain = ISOTP_INVALID_BS;
    3510:	8f ef       	ldi	r24, 0xFF	; 255
    3512:	9f ef       	ldi	r25, 0xFF	; 255
    3514:	f7 01       	movw	r30, r14
    3516:	96 87       	std	Z+14, r25	; 0x0e
    3518:	85 87       	std	Z+13, r24	; 0x0d
    351a:	04 c0       	rjmp	.+8      	; 0x3524 <isotp_on_can_message+0x27c>
                    } else {
                        link->send_bs_remain = message.as.flow_control.BS;
    351c:	90 e0       	ldi	r25, 0x00	; 0
    351e:	f7 01       	movw	r30, r14
    3520:	96 87       	std	Z+14, r25	; 0x0e
    3522:	85 87       	std	Z+13, r24	; 0x0d
                    }
                    link->send_st_min = isotp_st_min_to_ms(message.as.flow_control.STmin);
    3524:	8b 81       	ldd	r24, Y+3	; 0x03
/* st_min to msec  */
static uint8_t isotp_st_min_to_ms(uint8_t st_min) 
{
    uint8_t ms;
    
    if (st_min >= 0xF1 && st_min <= 0xF9){
    3526:	9f e0       	ldi	r25, 0x0F	; 15
    3528:	98 0f       	add	r25, r24
    352a:	99 30       	cpi	r25, 0x09	; 9
    352c:	18 f0       	brcs	.+6      	; 0x3534 <isotp_on_can_message+0x28c>
        ms = 1;
    } else if (st_min <= 0x7F) {
    352e:	88 23       	and	r24, r24
    3530:	24 f4       	brge	.+8      	; 0x353a <isotp_on_can_message+0x292>
    3532:	02 c0       	rjmp	.+4      	; 0x3538 <isotp_on_can_message+0x290>
static uint8_t isotp_st_min_to_ms(uint8_t st_min) 
{
    uint8_t ms;
    
    if (st_min >= 0xF1 && st_min <= 0xF9){
        ms = 1;
    3534:	81 e0       	ldi	r24, 0x01	; 1
    3536:	01 c0       	rjmp	.+2      	; 0x353a <isotp_on_can_message+0x292>
    } else if (st_min <= 0x7F) {
        ms = st_min;
    } else {
        ms = 0;
    3538:	80 e0       	ldi	r24, 0x00	; 0
                    if (0 == message.as.flow_control.BS){
                        link->send_bs_remain = ISOTP_INVALID_BS;
                    } else {
                        link->send_bs_remain = message.as.flow_control.BS;
                    }
                    link->send_st_min = isotp_st_min_to_ms(message.as.flow_control.STmin);
    353a:	f7 01       	movw	r30, r14
                    link->send_wtf_count = 0;
    353c:	87 87       	std	Z+15, r24	; 0x0f
    353e:	10 8a       	std	Z+16, r1	; 0x10
    (void)memcpy(link->receive_buffer + link->receive_offset, 
           message->as.consecutive_frame.data,
           remaining_bytes);

    link->receive_offset += remaining_bytes;
    if (++(link->receive_sn) > 0x0F){
    3540:	30 c0       	rjmp	.+96     	; 0x35a2 <isotp_on_can_message+0x2fa>
    3542:	f7 01       	movw	r30, r14
            }

            /* if success */
            if (ISOTP_RET_OK == ret){
                /* refresh timer cs */
                link->receive_timer_cr = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3544:	80 a7       	std	Z+40, r24	; 0x28
    3546:	84 d1       	rcall	.+776    	; 0x3850 <isotp_user_get_ms>
    3548:	dc 01       	movw	r26, r24
    354a:	cb 01       	movw	r24, r22
    354c:	8c 59       	subi	r24, 0x9C	; 156
    354e:	9f 4f       	sbci	r25, 0xFF	; 255
    3550:	af 4f       	sbci	r26, 0xFF	; 255
    3552:	bf 4f       	sbci	r27, 0xFF	; 255
    3554:	f7 01       	movw	r30, r14
    3556:	82 a7       	std	Z+42, r24	; 0x2a
    3558:	93 a7       	std	Z+43, r25	; 0x2b
    355a:	a4 a7       	std	Z+44, r26	; 0x2c
    355c:	b5 a7       	std	Z+45, r27	; 0x2d
                
                /* receive finished */
                if (link->receive_offset >= link->receive_size){
    355e:	26 a1       	ldd	r18, Z+38	; 0x26
    3560:	37 a1       	ldd	r19, Z+39	; 0x27
    3562:	84 a1       	ldd	r24, Z+36	; 0x24
    3564:	95 a1       	ldd	r25, Z+37	; 0x25
    3566:	28 17       	cp	r18, r24
    3568:	39 07       	cpc	r19, r25
    356a:	08 f4       	brcc	.+2      	; 0x356e <isotp_on_can_message+0x2c6>
    356c:	95 cf       	rjmp	.-214    	; 0x3498 <isotp_on_can_message+0x1f0>
    356e:	90 cf       	rjmp	.-224    	; 0x3490 <isotp_on_can_message+0x1e8>
            /* handle message */
            ret = isotp_receive_consecutive_frame(link, &message, len);

            /* if wrong sn */
            if (ISOTP_RET_WRONG_SN == ret){
                link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_WRONG_SN;
    3570:	8c ef       	ldi	r24, 0xFC	; 252
    3572:	9f ef       	ldi	r25, 0xFF	; 255
    3574:	f7 01       	movw	r30, r14
    3576:	97 a7       	std	Z+47, r25	; 0x2f
                link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    3578:	86 a7       	std	Z+46, r24	; 0x2e
                break;
    357a:	10 aa       	std	Z+48, r1	; 0x30
            /* handle message */
            ret = isotp_receive_flow_conrtrol_frame(link, &message, len);
            
            if (ISOTP_RET_OK == ret){
                /* refresh bs timer */
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    357c:	12 c0       	rjmp	.+36     	; 0x35a2 <isotp_on_can_message+0x2fa>
    357e:	68 d1       	rcall	.+720    	; 0x3850 <isotp_user_get_ms>
    3580:	dc 01       	movw	r26, r24
    3582:	cb 01       	movw	r24, r22
    3584:	8c 59       	subi	r24, 0x9C	; 156
    3586:	9f 4f       	sbci	r25, 0xFF	; 255
    3588:	af 4f       	sbci	r26, 0xFF	; 255
    358a:	bf 4f       	sbci	r27, 0xFF	; 255
    358c:	f7 01       	movw	r30, r14
    358e:	85 8b       	std	Z+21, r24	; 0x15
    3590:	96 8b       	std	Z+22, r25	; 0x16
    3592:	a7 8b       	std	Z+23, r26	; 0x17
    3594:	b0 8f       	std	Z+24, r27	; 0x18

                /* overflow */
                if (PCI_FLOW_STATUS_OVERFLOW == message.as.flow_control.FS) {
    3596:	89 81       	ldd	r24, Y+1	; 0x01
    3598:	80 7f       	andi	r24, 0xF0	; 240
    359a:	80 32       	cpi	r24, 0x20	; 32
    359c:	09 f0       	breq	.+2      	; 0x35a0 <isotp_on_can_message+0x2f8>
    359e:	a3 cf       	rjmp	.-186    	; 0x34e6 <isotp_on_can_message+0x23e>
    35a0:	9a cf       	rjmp	.-204    	; 0x34d6 <isotp_on_can_message+0x22e>
        default:
            break;
    };
    
    return;
}
    35a2:	2a 96       	adiw	r28, 0x0a	; 10
    35a4:	0f b6       	in	r0, 0x3f	; 63
    35a6:	f8 94       	cli
    35a8:	de bf       	out	0x3e, r29	; 62
    35aa:	0f be       	out	0x3f, r0	; 63
    35ac:	cd bf       	out	0x3d, r28	; 61
    35ae:	df 91       	pop	r29
    35b0:	cf 91       	pop	r28
    35b2:	1f 91       	pop	r17
    35b4:	0f 91       	pop	r16
    35b6:	ff 90       	pop	r15
    35b8:	ef 90       	pop	r14
    35ba:	df 90       	pop	r13
    35bc:	cf 90       	pop	r12
    35be:	08 95       	ret

000035c0 <isotp_receive>:

int isotp_receive(IsoTpLink *link, uint8_t *payload, const uint16_t payload_size, uint16_t *out_size)
{
    35c0:	ef 92       	push	r14
    35c2:	ff 92       	push	r15
    35c4:	0f 93       	push	r16
    35c6:	1f 93       	push	r17
    35c8:	cf 93       	push	r28
    35ca:	df 93       	push	r29
    35cc:	fc 01       	movw	r30, r24
    uint16_t copylen;
    
    if (ISOTP_RECEIVE_STATUS_FULL != link->receive_status){
    35ce:	80 a9       	ldd	r24, Z+48	; 0x30
    35d0:	82 30       	cpi	r24, 0x02	; 2
    35d2:	a9 f4       	brne	.+42     	; 0x35fe <isotp_receive+0x3e>
        return ISOTP_RET_NO_DATA;
    }

    copylen = link->receive_size;
    35d4:	04 a1       	ldd	r16, Z+36	; 0x24
    35d6:	15 a1       	ldd	r17, Z+37	; 0x25
    35d8:	40 17       	cp	r20, r16
    35da:	51 07       	cpc	r21, r17
    35dc:	08 f4       	brcc	.+2      	; 0x35e0 <isotp_receive+0x20>
    35de:	8a 01       	movw	r16, r20
    35e0:	79 01       	movw	r14, r18
    35e2:	cb 01       	movw	r24, r22
    35e4:	ef 01       	movw	r28, r30
    if (copylen > payload_size){
        copylen = payload_size;
    }

    memcpy(payload, link->receive_buffer, copylen);
    35e6:	60 a1       	ldd	r22, Z+32	; 0x20
    35e8:	71 a1       	ldd	r23, Z+33	; 0x21
    35ea:	a8 01       	movw	r20, r16
    35ec:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>
    *out_size = copylen;
    35f0:	f7 01       	movw	r30, r14
    35f2:	11 83       	std	Z+1, r17	; 0x01
    35f4:	00 83       	st	Z, r16

    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    35f6:	18 aa       	std	Y+48, r1	; 0x30

    return ISOTP_RET_OK;
    35f8:	80 e0       	ldi	r24, 0x00	; 0
    35fa:	90 e0       	ldi	r25, 0x00	; 0
    35fc:	02 c0       	rjmp	.+4      	; 0x3602 <isotp_receive+0x42>
int isotp_receive(IsoTpLink *link, uint8_t *payload, const uint16_t payload_size, uint16_t *out_size)
{
    uint16_t copylen;
    
    if (ISOTP_RECEIVE_STATUS_FULL != link->receive_status){
        return ISOTP_RET_NO_DATA;
    35fe:	8b ef       	ldi	r24, 0xFB	; 251
    3600:	9f ef       	ldi	r25, 0xFF	; 255
    *out_size = copylen;

    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;

    return ISOTP_RET_OK;
}
    3602:	df 91       	pop	r29
    3604:	cf 91       	pop	r28
    3606:	1f 91       	pop	r17
    3608:	0f 91       	pop	r16
    360a:	ff 90       	pop	r15
    360c:	ef 90       	pop	r14
    360e:	08 95       	ret

00003610 <isotp_init_link>:

void isotp_init_link(IsoTpLink *link, uint32_t sendid, 
                     uint8_t *sendbuf, uint16_t sendbufsize,
                     uint8_t *recvbuf, uint16_t recvbufsize)
{
    3610:	cf 92       	push	r12
    3612:	df 92       	push	r13
    3614:	ef 92       	push	r14
    3616:	ff 92       	push	r15
    3618:	0f 93       	push	r16
    361a:	1f 93       	push	r17
    361c:	fc 01       	movw	r30, r24
    memset(link, 0, sizeof(*link));
    361e:	81 e3       	ldi	r24, 0x31	; 49
    3620:	df 01       	movw	r26, r30
    3622:	1d 92       	st	X+, r1
    3624:	8a 95       	dec	r24
    3626:	e9 f7       	brne	.-6      	; 0x3622 <isotp_init_link+0x12>
    link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    3628:	10 aa       	std	Z+48, r1	; 0x30
    link->send_status = ISOTP_SEND_STATUS_IDLE;
    362a:	13 8e       	std	Z+27, r1	; 0x1b
    link->send_arbitration_id = sendid;
    362c:	40 83       	st	Z, r20
    362e:	51 83       	std	Z+1, r21	; 0x01
    3630:	62 83       	std	Z+2, r22	; 0x02
    3632:	73 83       	std	Z+3, r23	; 0x03
    link->send_buffer = sendbuf;
    3634:	35 83       	std	Z+5, r19	; 0x05
    3636:	24 83       	std	Z+4, r18	; 0x04
    link->send_buf_size = sendbufsize;
    3638:	17 83       	std	Z+7, r17	; 0x07
    363a:	06 83       	std	Z+6, r16	; 0x06
    link->receive_buffer = recvbuf;
    363c:	f1 a2       	std	Z+33, r15	; 0x21
    363e:	e0 a2       	std	Z+32, r14	; 0x20
    link->recevie_buf_size = recvbufsize;
    3640:	d3 a2       	std	Z+35, r13	; 0x23
    3642:	c2 a2       	std	Z+34, r12	; 0x22
    
    return;
}
    3644:	1f 91       	pop	r17
    3646:	0f 91       	pop	r16
    3648:	ff 90       	pop	r15
    364a:	ef 90       	pop	r14
    364c:	df 90       	pop	r13
    364e:	cf 90       	pop	r12
    3650:	08 95       	ret

00003652 <isotp_poll>:

void isotp_poll(IsoTpLink *link)
{
    3652:	cf 92       	push	r12
    3654:	df 92       	push	r13
    3656:	ef 92       	push	r14
    3658:	ff 92       	push	r15
    365a:	0f 93       	push	r16
    365c:	1f 93       	push	r17
    365e:	cf 93       	push	r28
    3660:	df 93       	push	r29
    3662:	cd b7       	in	r28, 0x3d	; 61
    3664:	de b7       	in	r29, 0x3e	; 62
    3666:	28 97       	sbiw	r28, 0x08	; 8
    3668:	0f b6       	in	r0, 0x3f	; 63
    366a:	f8 94       	cli
    366c:	de bf       	out	0x3e, r29	; 62
    366e:	0f be       	out	0x3f, r0	; 63
    3670:	cd bf       	out	0x3d, r28	; 61
    3672:	8c 01       	movw	r16, r24
    int ret;

    /* only polling when operation in progress */
    if (ISOTP_SEND_STATUS_INPROGRESS == link->send_status){
    3674:	fc 01       	movw	r30, r24
    3676:	83 8d       	ldd	r24, Z+27	; 0x1b
    3678:	81 30       	cpi	r24, 0x01	; 1
    367a:	09 f0       	breq	.+2      	; 0x367e <isotp_poll+0x2c>
    367c:	95 c0       	rjmp	.+298    	; 0x37a8 <isotp_poll+0x156>

        /* continue send data */
        if (/* send data if bs_remain is invalid or bs_remain large than zero */
    367e:	85 85       	ldd	r24, Z+13	; 0x0d
    3680:	96 85       	ldd	r25, Z+14	; 0x0e
    3682:	89 2b       	or	r24, r25
    3684:	09 f4       	brne	.+2      	; 0x3688 <isotp_poll+0x36>
    3686:	7e c0       	rjmp	.+252    	; 0x3784 <isotp_poll+0x132>
            (ISOTP_INVALID_BS == link->send_bs_remain || link->send_bs_remain > 0) &&
    3688:	87 85       	ldd	r24, Z+15	; 0x0f
    368a:	88 23       	and	r24, r24
    368c:	59 f0       	breq	.+22     	; 0x36a4 <isotp_poll+0x52>
            /* and if st_min is zero or go beyond interval time */
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
    368e:	c1 88       	ldd	r12, Z+17	; 0x11
    3690:	d2 88       	ldd	r13, Z+18	; 0x12
    3692:	e3 88       	ldd	r14, Z+19	; 0x13
    3694:	f4 88       	ldd	r15, Z+20	; 0x14
    3696:	dc d0       	rcall	.+440    	; 0x3850 <isotp_user_get_ms>
    3698:	c6 1a       	sub	r12, r22
    369a:	d7 0a       	sbc	r13, r23
    369c:	e8 0a       	sbc	r14, r24
    369e:	f9 0a       	sbc	r15, r25
    36a0:	0a f0       	brmi	.+2      	; 0x36a4 <isotp_poll+0x52>
    36a2:	70 c0       	rjmp	.+224    	; 0x3784 <isotp_poll+0x132>
	IsoTpCanMessage message;
    uint8_t data_length;
    int ret;

    /* multi frame message length must greater than 7  */
    assert(link->send_size > 7);
    36a4:	f8 01       	movw	r30, r16
    36a6:	e0 84       	ldd	r14, Z+8	; 0x08
    36a8:	f1 84       	ldd	r15, Z+9	; 0x09
    36aa:	f8 e0       	ldi	r31, 0x08	; 8
    36ac:	ef 16       	cp	r14, r31
    36ae:	f1 04       	cpc	r15, r1
    36b0:	10 f4       	brcc	.+4      	; 0x36b6 <isotp_poll+0x64>
    36b2:	0e 94 72 33 	call	0x66e4	; 0x66e4 <abort>

    /* setup message  */
    message.as.consecutive_frame.type = TSOTP_PCI_TYPE_CONSECUTIVE_FRAME;
    message.as.consecutive_frame.SN = link->send_sn;
    36b6:	f8 01       	movw	r30, r16
    36b8:	84 85       	ldd	r24, Z+12	; 0x0c
    36ba:	82 95       	swap	r24
    36bc:	80 7f       	andi	r24, 0xF0	; 240
    36be:	82 60       	ori	r24, 0x02	; 2
    36c0:	89 83       	std	Y+1, r24	; 0x01
    data_length = link->send_size - link->send_offset;
    36c2:	22 85       	ldd	r18, Z+10	; 0x0a
    36c4:	33 85       	ldd	r19, Z+11	; 0x0b
    36c6:	8e 2d       	mov	r24, r14
    36c8:	82 1b       	sub	r24, r18
    if (data_length > sizeof(message.as.consecutive_frame.data)){
        data_length = sizeof(message.as.consecutive_frame.data);
    }
    (void)memcpy(message.as.consecutive_frame.data, link->send_buffer + link->send_offset, data_length);
    36ca:	88 30       	cpi	r24, 0x08	; 8
    36cc:	08 f0       	brcs	.+2      	; 0x36d0 <isotp_poll+0x7e>
    36ce:	87 e0       	ldi	r24, 0x07	; 7
    36d0:	e8 2e       	mov	r14, r24
    36d2:	f1 2c       	mov	r15, r1
    36d4:	f8 01       	movw	r30, r16
    36d6:	64 81       	ldd	r22, Z+4	; 0x04
    36d8:	75 81       	ldd	r23, Z+5	; 0x05
    36da:	62 0f       	add	r22, r18
    36dc:	73 1f       	adc	r23, r19
    36de:	a7 01       	movw	r20, r14
    36e0:	ce 01       	movw	r24, r28
    36e2:	02 96       	adiw	r24, 0x02	; 2
    36e4:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>

    /* send message */
#ifdef ISO_TP_FRAME_PADDING
    (void)memset(message.as.consecutive_frame.data + data_length,
    36e8:	47 e0       	ldi	r20, 0x07	; 7
    36ea:	50 e0       	ldi	r21, 0x00	; 0
    36ec:	4e 19       	sub	r20, r14
    36ee:	5f 09       	sbc	r21, r15
    36f0:	60 e0       	ldi	r22, 0x00	; 0
    36f2:	70 e0       	ldi	r23, 0x00	; 0
    36f4:	82 e0       	ldi	r24, 0x02	; 2
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	8c 0f       	add	r24, r28
    36fa:	9d 1f       	adc	r25, r29
    36fc:	8e 0d       	add	r24, r14
    36fe:	9f 1d       	adc	r25, r15
    3700:	0e 94 a6 33 	call	0x674c	; 0x674c <memset>
           0,
           sizeof(message.as.consecutive_frame.data) - data_length);
    ret = isotp_user_send_can(link->send_arbitration_id,
    3704:	f8 01       	movw	r30, r16
    3706:	60 81       	ld	r22, Z
    3708:	71 81       	ldd	r23, Z+1	; 0x01
    370a:	82 81       	ldd	r24, Z+2	; 0x02
    370c:	93 81       	ldd	r25, Z+3	; 0x03
    370e:	28 e0       	ldi	r18, 0x08	; 8
    3710:	ae 01       	movw	r20, r28
    3712:	4f 5f       	subi	r20, 0xFF	; 255
    3714:	5f 4f       	sbci	r21, 0xFF	; 255
    3716:	7e d0       	rcall	.+252    	; 0x3814 <isotp_user_send_can>
#else
    ret = isotp_user_send_can(link->send_arbitration_id,
                           message.as.data_array.ptr,
                           data_length + 1);
#endif
    if (ISOTP_RET_OK == ret){
    3718:	89 2b       	or	r24, r25
    371a:	09 f0       	breq	.+2      	; 0x371e <isotp_poll+0xcc>
    371c:	5a c0       	rjmp	.+180    	; 0x37d2 <isotp_poll+0x180>
        link->send_offset += data_length;
    371e:	f8 01       	movw	r30, r16
    3720:	82 85       	ldd	r24, Z+10	; 0x0a
    3722:	93 85       	ldd	r25, Z+11	; 0x0b
    3724:	e8 0e       	add	r14, r24
    3726:	f9 1e       	adc	r15, r25
    3728:	f3 86       	std	Z+11, r15	; 0x0b
    372a:	e2 86       	std	Z+10, r14	; 0x0a
        if (++(link->send_sn) > 0x0F){
    372c:	84 85       	ldd	r24, Z+12	; 0x0c
    372e:	8f 5f       	subi	r24, 0xFF	; 255
    3730:	80 31       	cpi	r24, 0x10	; 16
    3732:	08 f4       	brcc	.+2      	; 0x3736 <isotp_poll+0xe4>
    3734:	52 c0       	rjmp	.+164    	; 0x37da <isotp_poll+0x188>
            link->send_sn = 0;
    3736:	14 86       	std	Z+12, r1	; 0x0c
    3738:	52 c0       	rjmp	.+164    	; 0x37de <isotp_poll+0x18c>
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
            
            ret = isotp_send_consecutive_frame(link);
            if (ISOTP_RET_OK == ret){
                if (ISOTP_INVALID_BS != link->send_bs_remain){
                    link->send_bs_remain -= 1;
    373a:	01 97       	sbiw	r24, 0x01	; 1
    373c:	f8 01       	movw	r30, r16
    373e:	96 87       	std	Z+14, r25	; 0x0e
                }
                link->send_timer_bs = isotp_user_get_ms() + ISO_TP_DEFAULT_RESPONSE_TIMEOUT;
    3740:	85 87       	std	Z+13, r24	; 0x0d
    3742:	86 d0       	rcall	.+268    	; 0x3850 <isotp_user_get_ms>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	8c 59       	subi	r24, 0x9C	; 156
    374a:	9f 4f       	sbci	r25, 0xFF	; 255
    374c:	af 4f       	sbci	r26, 0xFF	; 255
    374e:	bf 4f       	sbci	r27, 0xFF	; 255
    3750:	f8 01       	movw	r30, r16
    3752:	85 8b       	std	Z+21, r24	; 0x15
    3754:	96 8b       	std	Z+22, r25	; 0x16
    3756:	a7 8b       	std	Z+23, r26	; 0x17
                link->send_timer_st = isotp_user_get_ms() + link->send_st_min;
    3758:	b0 8f       	std	Z+24, r27	; 0x18
    375a:	7a d0       	rcall	.+244    	; 0x3850 <isotp_user_get_ms>
    375c:	f8 01       	movw	r30, r16
    375e:	27 85       	ldd	r18, Z+15	; 0x0f
    3760:	dc 01       	movw	r26, r24
    3762:	cb 01       	movw	r24, r22
    3764:	82 0f       	add	r24, r18
    3766:	91 1d       	adc	r25, r1
    3768:	a1 1d       	adc	r26, r1
    376a:	b1 1d       	adc	r27, r1
    376c:	81 8b       	std	Z+17, r24	; 0x11
    376e:	92 8b       	std	Z+18, r25	; 0x12
    3770:	a3 8b       	std	Z+19, r26	; 0x13
    3772:	b4 8b       	std	Z+20, r27	; 0x14

                /* check if send finish */
                if (link->send_offset >= link->send_size){
    3774:	22 85       	ldd	r18, Z+10	; 0x0a
    3776:	33 85       	ldd	r19, Z+11	; 0x0b
    3778:	80 85       	ldd	r24, Z+8	; 0x08
    377a:	91 85       	ldd	r25, Z+9	; 0x09
    377c:	28 17       	cp	r18, r24
    377e:	39 07       	cpc	r19, r25
    3780:	08 f0       	brcs	.+2      	; 0x3784 <isotp_poll+0x132>
                    link->send_status = ISOTP_SEND_STATUS_IDLE;
    3782:	13 8e       	std	Z+27, r1	; 0x1b
                link->send_status = ISOTP_SEND_STATUS_ERROR;
            }
        }

        /* check timeout */
        if (IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_bs)){
    3784:	f8 01       	movw	r30, r16
    3786:	c5 88       	ldd	r12, Z+21	; 0x15
    3788:	d6 88       	ldd	r13, Z+22	; 0x16
    378a:	e7 88       	ldd	r14, Z+23	; 0x17
    378c:	f0 8c       	ldd	r15, Z+24	; 0x18
    378e:	60 d0       	rcall	.+192    	; 0x3850 <isotp_user_get_ms>
    3790:	c6 1a       	sub	r12, r22
    3792:	d7 0a       	sbc	r13, r23
    3794:	e8 0a       	sbc	r14, r24
    3796:	f9 0a       	sbc	r15, r25
    3798:	3a f4       	brpl	.+14     	; 0x37a8 <isotp_poll+0x156>
            link->send_protocol_resault = ISOTP_PROTOCOL_RESAULT_TIMEOUT_BS;
    379a:	8e ef       	ldi	r24, 0xFE	; 254
    379c:	9f ef       	ldi	r25, 0xFF	; 255
    379e:	f8 01       	movw	r30, r16
    37a0:	92 8f       	std	Z+26, r25	; 0x1a
    37a2:	81 8f       	std	Z+25, r24	; 0x19
            link->send_status = ISOTP_SEND_STATUS_ERROR;
    37a4:	82 e0       	ldi	r24, 0x02	; 2
    37a6:	83 8f       	std	Z+27, r24	; 0x1b
        }
    }

    /* only polling when operation in progress */
    if (ISOTP_RECEIVE_STATUS_INPROGRESS == link->receive_status){
    37a8:	f8 01       	movw	r30, r16
    37aa:	80 a9       	ldd	r24, Z+48	; 0x30
    37ac:	81 30       	cpi	r24, 0x01	; 1
        
        /* check timeout */
        if (IsoTpTimeAfter(isotp_user_get_ms(), link->receive_timer_cr)){
    37ae:	01 f5       	brne	.+64     	; 0x37f0 <isotp_poll+0x19e>
    37b0:	c2 a4       	ldd	r12, Z+42	; 0x2a
    37b2:	d3 a4       	ldd	r13, Z+43	; 0x2b
    37b4:	e4 a4       	ldd	r14, Z+44	; 0x2c
    37b6:	f5 a4       	ldd	r15, Z+45	; 0x2d
    37b8:	4b d0       	rcall	.+150    	; 0x3850 <isotp_user_get_ms>
    37ba:	c6 1a       	sub	r12, r22
    37bc:	d7 0a       	sbc	r13, r23
    37be:	e8 0a       	sbc	r14, r24
    37c0:	f9 0a       	sbc	r15, r25
    37c2:	b2 f4       	brpl	.+44     	; 0x37f0 <isotp_poll+0x19e>
            link->receive_protocol_resault = ISOTP_PROTOCOL_RESAULT_TIMEOUT_CR;
    37c4:	8d ef       	ldi	r24, 0xFD	; 253
    37c6:	9f ef       	ldi	r25, 0xFF	; 255
    37c8:	f8 01       	movw	r30, r16
    37ca:	97 a7       	std	Z+47, r25	; 0x2f
    37cc:	86 a7       	std	Z+46, r24	; 0x2e
            link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
    37ce:	10 aa       	std	Z+48, r1	; 0x30
        }
    }

    return;
    37d0:	0f c0       	rjmp	.+30     	; 0x37f0 <isotp_poll+0x19e>
                /* check if send finish */
                if (link->send_offset >= link->send_size){
                    link->send_status = ISOTP_SEND_STATUS_IDLE;
                }
            } else {
                link->send_status = ISOTP_SEND_STATUS_ERROR;
    37d2:	82 e0       	ldi	r24, 0x02	; 2
    37d4:	f8 01       	movw	r30, r16
    37d6:	83 8f       	std	Z+27, r24	; 0x1b
    37d8:	d5 cf       	rjmp	.-86     	; 0x3784 <isotp_poll+0x132>
                           message.as.data_array.ptr,
                           data_length + 1);
#endif
    if (ISOTP_RET_OK == ret){
        link->send_offset += data_length;
        if (++(link->send_sn) > 0x0F){
    37da:	f8 01       	movw	r30, r16
    37dc:	84 87       	std	Z+12, r24	; 0x0c
            /* and if st_min is zero or go beyond interval time */
            (0 == link->send_st_min || (0 != link->send_st_min && IsoTpTimeAfter(isotp_user_get_ms(), link->send_timer_st)))){
            
            ret = isotp_send_consecutive_frame(link);
            if (ISOTP_RET_OK == ret){
                if (ISOTP_INVALID_BS != link->send_bs_remain){
    37de:	f8 01       	movw	r30, r16
    37e0:	85 85       	ldd	r24, Z+13	; 0x0d
    37e2:	96 85       	ldd	r25, Z+14	; 0x0e
    37e4:	8f 3f       	cpi	r24, 0xFF	; 255
    37e6:	ff ef       	ldi	r31, 0xFF	; 255
    37e8:	9f 07       	cpc	r25, r31
    37ea:	09 f0       	breq	.+2      	; 0x37ee <isotp_poll+0x19c>
    37ec:	a6 cf       	rjmp	.-180    	; 0x373a <isotp_poll+0xe8>
    37ee:	a9 cf       	rjmp	.-174    	; 0x3742 <isotp_poll+0xf0>
            link->receive_status = ISOTP_RECEIVE_STATUS_IDLE;
        }
    }

    return;
}
    37f0:	28 96       	adiw	r28, 0x08	; 8
    37f2:	0f b6       	in	r0, 0x3f	; 63
    37f4:	f8 94       	cli
    37f6:	de bf       	out	0x3e, r29	; 62
    37f8:	0f be       	out	0x3f, r0	; 63
    37fa:	cd bf       	out	0x3d, r28	; 61
    37fc:	df 91       	pop	r29
    37fe:	cf 91       	pop	r28
    3800:	1f 91       	pop	r17
    3802:	0f 91       	pop	r16
    3804:	ff 90       	pop	r15
    3806:	ef 90       	pop	r14
    3808:	df 90       	pop	r13
    380a:	cf 90       	pop	r12
    380c:	08 95       	ret

0000380e <isotp_user_debug>:
#include "../uart_f.h"
#include "../can.h"

/* user implemented, print debug message */
void isotp_user_debug(const char* message){
	uart_puts(message);
    380e:	0c 94 38 31 	jmp	0x6270	; 0x6270 <uart_puts>
    3812:	08 95       	ret

00003814 <isotp_user_send_can>:
}

/* user implemented, send can message */
int  isotp_user_send_can(const uint32_t arbitration_id, const uint8_t* data, const uint8_t size){
    3814:	cf 93       	push	r28
    3816:	df 93       	push	r29
    3818:	00 d0       	rcall	.+0      	; 0x381a <isotp_user_send_can+0x6>
    381a:	00 d0       	rcall	.+0      	; 0x381c <isotp_user_send_can+0x8>
    381c:	00 d0       	rcall	.+0      	; 0x381e <isotp_user_send_can+0xa>
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	6b 83       	std	Y+3, r22	; 0x03
    3824:	7c 83       	std	Y+4, r23	; 0x04
    3826:	8d 83       	std	Y+5, r24	; 0x05
    3828:	9e 83       	std	Y+6, r25	; 0x06
	can_msg_t message;
	can_id_t id;
	memcpy(id,&arbitration_id,2);
    382a:	7a 83       	std	Y+2, r23	; 0x02
    382c:	69 83       	std	Y+1, r22	; 0x01
	can_send_message(0, id, data, size);
    382e:	be 01       	movw	r22, r28
    3830:	6f 5f       	subi	r22, 0xFF	; 255
    3832:	7f 4f       	sbci	r23, 0xFF	; 255
    3834:	80 e0       	ldi	r24, 0x00	; 0
    3836:	0e 94 7f 03 	call	0x6fe	; 0x6fe <can_send_message>
	return 0;
}
    383a:	80 e0       	ldi	r24, 0x00	; 0
    383c:	90 e0       	ldi	r25, 0x00	; 0
    383e:	26 96       	adiw	r28, 0x06	; 6
    3840:	0f b6       	in	r0, 0x3f	; 63
    3842:	f8 94       	cli
    3844:	de bf       	out	0x3e, r29	; 62
    3846:	0f be       	out	0x3f, r0	; 63
    3848:	cd bf       	out	0x3d, r28	; 61
    384a:	df 91       	pop	r29
    384c:	cf 91       	pop	r28
    384e:	08 95       	ret

00003850 <isotp_user_get_ms>:

/* user implemented, get millisecond */
uint32_t isotp_user_get_ms(void){
	return millis();
    3850:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <millis>
}
    3854:	08 95       	ret

00003856 <isotpi_send>:

static IsoTpLink g_link;
static uint8_t g_isotpRecvBuf[128];
static uint8_t g_isotpSendBuf[128];

int isotpi_send(can_id_t id, uint8_t payload_size , uint8_t payload[payload_size]){
    3856:	8f 92       	push	r8
    3858:	9f 92       	push	r9
    385a:	bf 92       	push	r11
    385c:	cf 92       	push	r12
    385e:	df 92       	push	r13
    3860:	ef 92       	push	r14
    3862:	ff 92       	push	r15
    3864:	0f 93       	push	r16
    3866:	1f 93       	push	r17
    3868:	cf 93       	push	r28
    386a:	df 93       	push	r29
    386c:	00 d0       	rcall	.+0      	; 0x386e <isotpi_send+0x18>
    386e:	00 d0       	rcall	.+0      	; 0x3870 <isotpi_send+0x1a>
    3870:	cd b7       	in	r28, 0x3d	; 61
    3872:	de b7       	in	r29, 0x3e	; 62
    3874:	b6 2e       	mov	r11, r22
    3876:	4a 01       	movw	r8, r20
	uint32_t arbitration_id = 0;
    3878:	19 82       	std	Y+1, r1	; 0x01
    387a:	1a 82       	std	Y+2, r1	; 0x02
    387c:	1b 82       	std	Y+3, r1	; 0x03
    387e:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    3880:	fc 01       	movw	r30, r24
    3882:	80 81       	ld	r24, Z
    3884:	91 81       	ldd	r25, Z+1	; 0x01
    3886:	9a 83       	std	Y+2, r25	; 0x02
    3888:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    388a:	49 81       	ldd	r20, Y+1	; 0x01
    388c:	5a 81       	ldd	r21, Y+2	; 0x02
    388e:	6b 81       	ldd	r22, Y+3	; 0x03
    3890:	7c 81       	ldd	r23, Y+4	; 0x04
    3892:	68 94       	set
    3894:	cc 24       	eor	r12, r12
    3896:	c7 f8       	bld	r12, 7
    3898:	d1 2c       	mov	r13, r1
    389a:	0f 2e       	mov	r0, r31
    389c:	f2 ee       	ldi	r31, 0xE2	; 226
    389e:	ef 2e       	mov	r14, r31
    38a0:	f6 e0       	ldi	r31, 0x06	; 6
    38a2:	ff 2e       	mov	r15, r31
    38a4:	f0 2d       	mov	r31, r0
    38a6:	00 e8       	ldi	r16, 0x80	; 128
    38a8:	10 e0       	ldi	r17, 0x00	; 0
    38aa:	22 e6       	ldi	r18, 0x62	; 98
    38ac:	36 e0       	ldi	r19, 0x06	; 6
    38ae:	82 e6       	ldi	r24, 0x62	; 98
    38b0:	97 e0       	ldi	r25, 0x07	; 7
    38b2:	ae de       	rcall	.-676    	; 0x3610 <isotp_init_link>
	return isotp_send(&g_link, payload, payload_size);
    38b4:	4b 2d       	mov	r20, r11
    38b6:	50 e0       	ldi	r21, 0x00	; 0
    38b8:	b4 01       	movw	r22, r8
    38ba:	82 e6       	ldi	r24, 0x62	; 98
    38bc:	97 e0       	ldi	r25, 0x07	; 7
    38be:	e7 dc       	rcall	.-1586   	; 0x328e <isotp_send>
}
    38c0:	0f 90       	pop	r0
    38c2:	0f 90       	pop	r0
    38c4:	0f 90       	pop	r0
    38c6:	0f 90       	pop	r0
    38c8:	df 91       	pop	r29
    38ca:	cf 91       	pop	r28
    38cc:	1f 91       	pop	r17
    38ce:	0f 91       	pop	r16
    38d0:	ff 90       	pop	r15
    38d2:	ef 90       	pop	r14
    38d4:	df 90       	pop	r13
    38d6:	cf 90       	pop	r12
    38d8:	bf 90       	pop	r11
    38da:	9f 90       	pop	r9
    38dc:	8f 90       	pop	r8
    38de:	08 95       	ret

000038e0 <isotpi_receive>:

int isotpi_receive(can_id_t id, uint8_t payload_size , uint8_t payload[payload_size]){
    38e0:	6f 92       	push	r6
    38e2:	7f 92       	push	r7
    38e4:	8f 92       	push	r8
    38e6:	9f 92       	push	r9
    38e8:	bf 92       	push	r11
    38ea:	cf 92       	push	r12
    38ec:	df 92       	push	r13
    38ee:	ef 92       	push	r14
    38f0:	ff 92       	push	r15
    38f2:	0f 93       	push	r16
    38f4:	1f 93       	push	r17
    38f6:	cf 93       	push	r28
    38f8:	df 93       	push	r29
    38fa:	cd b7       	in	r28, 0x3d	; 61
    38fc:	de b7       	in	r29, 0x3e	; 62
    38fe:	2e 97       	sbiw	r28, 0x0e	; 14
    3900:	0f b6       	in	r0, 0x3f	; 63
    3902:	f8 94       	cli
    3904:	de bf       	out	0x3e, r29	; 62
    3906:	0f be       	out	0x3f, r0	; 63
    3908:	cd bf       	out	0x3d, r28	; 61
    390a:	4c 01       	movw	r8, r24
    390c:	b6 2e       	mov	r11, r22
    390e:	3a 01       	movw	r6, r20
	uint32_t arbitration_id = 0;
    3910:	19 82       	std	Y+1, r1	; 0x01
    3912:	1a 82       	std	Y+2, r1	; 0x02
    3914:	1b 82       	std	Y+3, r1	; 0x03
    3916:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    3918:	fc 01       	movw	r30, r24
    391a:	80 81       	ld	r24, Z
    391c:	91 81       	ldd	r25, Z+1	; 0x01
    391e:	9a 83       	std	Y+2, r25	; 0x02
    3920:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    3922:	49 81       	ldd	r20, Y+1	; 0x01
    3924:	5a 81       	ldd	r21, Y+2	; 0x02
    3926:	6b 81       	ldd	r22, Y+3	; 0x03
    3928:	7c 81       	ldd	r23, Y+4	; 0x04
    392a:	68 94       	set
    392c:	cc 24       	eor	r12, r12
    392e:	c7 f8       	bld	r12, 7
    3930:	d1 2c       	mov	r13, r1
    3932:	0f 2e       	mov	r0, r31
    3934:	f2 ee       	ldi	r31, 0xE2	; 226
    3936:	ef 2e       	mov	r14, r31
    3938:	f6 e0       	ldi	r31, 0x06	; 6
    393a:	ff 2e       	mov	r15, r31
    393c:	f0 2d       	mov	r31, r0
    393e:	00 e8       	ldi	r16, 0x80	; 128
    3940:	10 e0       	ldi	r17, 0x00	; 0
    3942:	22 e6       	ldi	r18, 0x62	; 98
    3944:	36 e0       	ldi	r19, 0x06	; 6
    3946:	82 e6       	ldi	r24, 0x62	; 98
    3948:	97 e0       	ldi	r25, 0x07	; 7
    394a:	62 de       	rcall	.-828    	; 0x3610 <isotp_init_link>
	can_msg_t message;
	can_receive_message(0,id,zero_mask,message,8);
    394c:	08 e0       	ldi	r16, 0x08	; 8
    394e:	10 e0       	ldi	r17, 0x00	; 0
    3950:	9e 01       	movw	r18, r28
    3952:	2b 5f       	subi	r18, 0xFB	; 251
    3954:	3f 4f       	sbci	r19, 0xFF	; 255
    3956:	48 ea       	ldi	r20, 0xA8	; 168
    3958:	52 e0       	ldi	r21, 0x02	; 2
    395a:	b4 01       	movw	r22, r8
    395c:	80 e0       	ldi	r24, 0x00	; 0
    395e:	0e 94 c5 03 	call	0x78a	; 0x78a <can_receive_message>
	isotp_on_can_message(&g_link, message, 8);
    3962:	48 e0       	ldi	r20, 0x08	; 8
    3964:	be 01       	movw	r22, r28
    3966:	6b 5f       	subi	r22, 0xFB	; 251
    3968:	7f 4f       	sbci	r23, 0xFF	; 255
    396a:	82 e6       	ldi	r24, 0x62	; 98
    396c:	97 e0       	ldi	r25, 0x07	; 7
    396e:	9c dc       	rcall	.-1736   	; 0x32a8 <isotp_on_can_message>
	uint16_t out_size;
	return isotp_receive(&g_link, payload, payload_size, &out_size);
    3970:	4b 2d       	mov	r20, r11
    3972:	50 e0       	ldi	r21, 0x00	; 0
    3974:	9e 01       	movw	r18, r28
    3976:	23 5f       	subi	r18, 0xF3	; 243
    3978:	3f 4f       	sbci	r19, 0xFF	; 255
    397a:	b3 01       	movw	r22, r6
    397c:	82 e6       	ldi	r24, 0x62	; 98
    397e:	97 e0       	ldi	r25, 0x07	; 7
    3980:	1f de       	rcall	.-962    	; 0x35c0 <isotp_receive>
}
    3982:	2e 96       	adiw	r28, 0x0e	; 14
    3984:	0f b6       	in	r0, 0x3f	; 63
    3986:	f8 94       	cli
    3988:	de bf       	out	0x3e, r29	; 62
    398a:	0f be       	out	0x3f, r0	; 63
    398c:	cd bf       	out	0x3d, r28	; 61
    398e:	df 91       	pop	r29
    3990:	cf 91       	pop	r28
    3992:	1f 91       	pop	r17
    3994:	0f 91       	pop	r16
    3996:	ff 90       	pop	r15
    3998:	ef 90       	pop	r14
    399a:	df 90       	pop	r13
    399c:	cf 90       	pop	r12
    399e:	bf 90       	pop	r11
    39a0:	9f 90       	pop	r9
    39a2:	8f 90       	pop	r8
    39a4:	7f 90       	pop	r7
    39a6:	6f 90       	pop	r6
    39a8:	08 95       	ret

000039aa <isotpi_send_multi>:

int isotpi_send_multi(can_id_t id, uint8_t payload_size ,uint8_t payload[payload_size]){
    39aa:	8f 92       	push	r8
    39ac:	9f 92       	push	r9
    39ae:	bf 92       	push	r11
    39b0:	cf 92       	push	r12
    39b2:	df 92       	push	r13
    39b4:	ef 92       	push	r14
    39b6:	ff 92       	push	r15
    39b8:	0f 93       	push	r16
    39ba:	1f 93       	push	r17
    39bc:	cf 93       	push	r28
    39be:	df 93       	push	r29
    39c0:	cd b7       	in	r28, 0x3d	; 61
    39c2:	de b7       	in	r29, 0x3e	; 62
    39c4:	2f 97       	sbiw	r28, 0x0f	; 15
    39c6:	0f b6       	in	r0, 0x3f	; 63
    39c8:	f8 94       	cli
    39ca:	de bf       	out	0x3e, r29	; 62
    39cc:	0f be       	out	0x3f, r0	; 63
    39ce:	cd bf       	out	0x3d, r28	; 61
    39d0:	b6 2e       	mov	r11, r22
    39d2:	4a 01       	movw	r8, r20
	uint32_t arbitration_id = 0;
    39d4:	19 82       	std	Y+1, r1	; 0x01
    39d6:	1a 82       	std	Y+2, r1	; 0x02
    39d8:	1b 82       	std	Y+3, r1	; 0x03
    39da:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id,2);
    39dc:	fc 01       	movw	r30, r24
    39de:	80 81       	ld	r24, Z
    39e0:	91 81       	ldd	r25, Z+1	; 0x01
    39e2:	9a 83       	std	Y+2, r25	; 0x02
    39e4:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link,arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf),g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    39e6:	49 81       	ldd	r20, Y+1	; 0x01
    39e8:	5a 81       	ldd	r21, Y+2	; 0x02
    39ea:	6b 81       	ldd	r22, Y+3	; 0x03
    39ec:	7c 81       	ldd	r23, Y+4	; 0x04
    39ee:	68 94       	set
    39f0:	cc 24       	eor	r12, r12
    39f2:	c7 f8       	bld	r12, 7
    39f4:	d1 2c       	mov	r13, r1
    39f6:	0f 2e       	mov	r0, r31
    39f8:	f2 ee       	ldi	r31, 0xE2	; 226
    39fa:	ef 2e       	mov	r14, r31
    39fc:	f6 e0       	ldi	r31, 0x06	; 6
    39fe:	ff 2e       	mov	r15, r31
    3a00:	f0 2d       	mov	r31, r0
    3a02:	00 e8       	ldi	r16, 0x80	; 128
    3a04:	10 e0       	ldi	r17, 0x00	; 0
    3a06:	22 e6       	ldi	r18, 0x62	; 98
    3a08:	36 e0       	ldi	r19, 0x06	; 6
    3a0a:	82 e6       	ldi	r24, 0x62	; 98
    3a0c:	97 e0       	ldi	r25, 0x07	; 7
    3a0e:	00 de       	rcall	.-1024   	; 0x3610 <isotp_init_link>

	can_enable_receive(1,zero_mask);
    3a10:	68 ea       	ldi	r22, 0xA8	; 168
    3a12:	72 e0       	ldi	r23, 0x02	; 2
    3a14:	81 e0       	ldi	r24, 0x01	; 1
    3a16:	0e 94 a7 03 	call	0x74e	; 0x74e <can_enable_receive>
	isotp_send(&g_link, payload, payload_size);
    3a1a:	4b 2d       	mov	r20, r11
    3a1c:	50 e0       	ldi	r21, 0x00	; 0
    3a1e:	b4 01       	movw	r22, r8
    3a20:	82 e6       	ldi	r24, 0x62	; 98
    3a22:	97 e0       	ldi	r25, 0x07	; 7
    3a24:	34 dc       	rcall	.-1944   	; 0x328e <isotp_send>
	can_msg_t message;
	can_id_t message_id;
	uint8_t len;
	uint8_t mobnr;
	
	mobnr = can_wait_for_receive();
    3a26:	0e 94 ba 03 	call	0x774	; 0x774 <can_wait_for_receive>
	
	can_retrieve_message(mobnr, message_id, message, &len);
    3a2a:	9e 01       	movw	r18, r28
    3a2c:	21 5f       	subi	r18, 0xF1	; 241
    3a2e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a30:	ae 01       	movw	r20, r28
    3a32:	4b 5f       	subi	r20, 0xFB	; 251
    3a34:	5f 4f       	sbci	r21, 0xFF	; 255
    3a36:	be 01       	movw	r22, r28
    3a38:	63 5f       	subi	r22, 0xF3	; 243
    3a3a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a3c:	0e 94 17 04 	call	0x82e	; 0x82e <can_retrieve_message>
	isotp_on_can_message(&g_link,message,len);
    3a40:	4f 85       	ldd	r20, Y+15	; 0x0f
    3a42:	be 01       	movw	r22, r28
    3a44:	6b 5f       	subi	r22, 0xFB	; 251
    3a46:	7f 4f       	sbci	r23, 0xFF	; 255
    3a48:	82 e6       	ldi	r24, 0x62	; 98
    3a4a:	97 e0       	ldi	r25, 0x07	; 7
    3a4c:	2d dc       	rcall	.-1958   	; 0x32a8 <isotp_on_can_message>
	
	while(1){
		
		isotp_poll(&g_link);
    3a4e:	82 e6       	ldi	r24, 0x62	; 98
    3a50:	97 e0       	ldi	r25, 0x07	; 7
    3a52:	ff dd       	rcall	.-1026   	; 0x3652 <isotp_poll>
    3a54:	80 91 7d 07 	lds	r24, 0x077D	; 0x80077d <g_link+0x1b>
		
		if(g_link.send_status == ISOTP_SEND_STATUS_IDLE){
    3a58:	81 11       	cpse	r24, r1
    3a5a:	06 c0       	rjmp	.+12     	; 0x3a68 <isotpi_send_multi+0xbe>
    3a5c:	81 e0       	ldi	r24, 0x01	; 1
			can_free_mob(1);
    3a5e:	0e 94 0c 04 	call	0x818	; 0x818 <can_free_mob>
    3a62:	80 e0       	ldi	r24, 0x00	; 0
			return 0;
    3a64:	90 e0       	ldi	r25, 0x00	; 0
    3a66:	07 c0       	rjmp	.+14     	; 0x3a76 <isotpi_send_multi+0xcc>
    3a68:	82 30       	cpi	r24, 0x02	; 2
		}
		
		if(g_link.send_status == ISOTP_SEND_STATUS_ERROR){
    3a6a:	89 f7       	brne	.-30     	; 0x3a4e <isotpi_send_multi+0xa4>
    3a6c:	81 e0       	ldi	r24, 0x01	; 1
			can_free_mob(1);
    3a6e:	0e 94 0c 04 	call	0x818	; 0x818 <can_free_mob>
    3a72:	81 e0       	ldi	r24, 0x01	; 1
			return 1;
    3a74:	90 e0       	ldi	r25, 0x00	; 0
    3a76:	2f 96       	adiw	r28, 0x0f	; 15
		}
	}
}
    3a78:	0f b6       	in	r0, 0x3f	; 63
    3a7a:	f8 94       	cli
    3a7c:	de bf       	out	0x3e, r29	; 62
    3a7e:	0f be       	out	0x3f, r0	; 63
    3a80:	cd bf       	out	0x3d, r28	; 61
    3a82:	df 91       	pop	r29
    3a84:	cf 91       	pop	r28
    3a86:	1f 91       	pop	r17
    3a88:	0f 91       	pop	r16
    3a8a:	ff 90       	pop	r15
    3a8c:	ef 90       	pop	r14
    3a8e:	df 90       	pop	r13
    3a90:	cf 90       	pop	r12
    3a92:	bf 90       	pop	r11
    3a94:	9f 90       	pop	r9
    3a96:	8f 90       	pop	r8
    3a98:	08 95       	ret

00003a9a <isotpi_receive_multi>:
    3a9a:	7f 92       	push	r7

int isotpi_receive_multi(can_id_t id_send, can_id_t id_rec, uint8_t payload_size, uint8_t payload[payload_size]){
    3a9c:	8f 92       	push	r8
    3a9e:	9f 92       	push	r9
    3aa0:	af 92       	push	r10
    3aa2:	bf 92       	push	r11
    3aa4:	cf 92       	push	r12
    3aa6:	df 92       	push	r13
    3aa8:	ef 92       	push	r14
    3aaa:	ff 92       	push	r15
    3aac:	0f 93       	push	r16
    3aae:	1f 93       	push	r17
    3ab0:	cf 93       	push	r28
    3ab2:	df 93       	push	r29
    3ab4:	cd b7       	in	r28, 0x3d	; 61
    3ab6:	de b7       	in	r29, 0x3e	; 62
    3ab8:	2f 97       	sbiw	r28, 0x0f	; 15
    3aba:	0f b6       	in	r0, 0x3f	; 63
    3abc:	f8 94       	cli
    3abe:	de bf       	out	0x3e, r29	; 62
    3ac0:	0f be       	out	0x3f, r0	; 63
    3ac2:	cd bf       	out	0x3d, r28	; 61
    3ac4:	4b 01       	movw	r8, r22
    3ac6:	74 2e       	mov	r7, r20
    3ac8:	59 01       	movw	r10, r18
	uint32_t arbitration_id = 0;
    3aca:	19 82       	std	Y+1, r1	; 0x01
    3acc:	1a 82       	std	Y+2, r1	; 0x02
    3ace:	1b 82       	std	Y+3, r1	; 0x03
    3ad0:	1c 82       	std	Y+4, r1	; 0x04
	memcpy(&arbitration_id,id_send,2);
    3ad2:	fc 01       	movw	r30, r24
    3ad4:	80 81       	ld	r24, Z
    3ad6:	91 81       	ldd	r25, Z+1	; 0x01
    3ad8:	9a 83       	std	Y+2, r25	; 0x02
    3ada:	89 83       	std	Y+1, r24	; 0x01
	isotp_init_link(&g_link, arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf), g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    3adc:	49 81       	ldd	r20, Y+1	; 0x01
    3ade:	5a 81       	ldd	r21, Y+2	; 0x02
    3ae0:	6b 81       	ldd	r22, Y+3	; 0x03
    3ae2:	7c 81       	ldd	r23, Y+4	; 0x04
    3ae4:	68 94       	set
    3ae6:	cc 24       	eor	r12, r12
    3ae8:	c7 f8       	bld	r12, 7
    3aea:	d1 2c       	mov	r13, r1
    3aec:	0f 2e       	mov	r0, r31
    3aee:	f2 ee       	ldi	r31, 0xE2	; 226
    3af0:	ef 2e       	mov	r14, r31
    3af2:	f6 e0       	ldi	r31, 0x06	; 6
    3af4:	ff 2e       	mov	r15, r31
    3af6:	f0 2d       	mov	r31, r0
    3af8:	00 e8       	ldi	r16, 0x80	; 128
    3afa:	10 e0       	ldi	r17, 0x00	; 0
    3afc:	22 e6       	ldi	r18, 0x62	; 98
    3afe:	36 e0       	ldi	r19, 0x06	; 6
    3b00:	82 e6       	ldi	r24, 0x62	; 98
    3b02:	97 e0       	ldi	r25, 0x07	; 7
    3b04:	85 dd       	rcall	.-1270   	; 0x3610 <isotp_init_link>
    
	while(1){
		
		uint8_t j;
		for(j=0; j<14; j++){
    3b06:	10 e0       	ldi	r17, 0x00	; 0
			can_enable_receive(j,zero_mask);
    3b08:	68 ea       	ldi	r22, 0xA8	; 168
    3b0a:	72 e0       	ldi	r23, 0x02	; 2
    3b0c:	81 2f       	mov	r24, r17
    3b0e:	0e 94 a7 03 	call	0x74e	; 0x74e <can_enable_receive>
	isotp_init_link(&g_link, arbitration_id, g_isotpSendBuf, sizeof(g_isotpSendBuf), g_isotpRecvBuf, sizeof(g_isotpRecvBuf));
    
	while(1){
		
		uint8_t j;
		for(j=0; j<14; j++){
    3b12:	1f 5f       	subi	r17, 0xFF	; 255
    3b14:	1e 30       	cpi	r17, 0x0E	; 14
    3b16:	c1 f7       	brne	.-16     	; 0x3b08 <isotpi_receive_multi+0x6e>
		uint8_t mobnr;
		can_msg_t message;
		uint8_t size;
		
		while(1){
			mobnr = can_wait_for_receive();
    3b18:	0e 94 ba 03 	call	0x774	; 0x774 <can_wait_for_receive>
			can_retrieve_message(mobnr, id_rec, message, &size);
    3b1c:	9e 01       	movw	r18, r28
    3b1e:	21 5f       	subi	r18, 0xF1	; 241
    3b20:	3f 4f       	sbci	r19, 0xFF	; 255
    3b22:	ae 01       	movw	r20, r28
    3b24:	4b 5f       	subi	r20, 0xFB	; 251
    3b26:	5f 4f       	sbci	r21, 0xFF	; 255
    3b28:	b4 01       	movw	r22, r8
    3b2a:	0e 94 17 04 	call	0x82e	; 0x82e <can_retrieve_message>
			isotp_on_can_message(&g_link, message, size);
    3b2e:	4f 85       	ldd	r20, Y+15	; 0x0f
    3b30:	be 01       	movw	r22, r28
    3b32:	6b 5f       	subi	r22, 0xFB	; 251
    3b34:	7f 4f       	sbci	r23, 0xFF	; 255
    3b36:	82 e6       	ldi	r24, 0x62	; 98
    3b38:	97 e0       	ldi	r25, 0x07	; 7
    3b3a:	b6 db       	rcall	.-2196   	; 0x32a8 <isotp_on_can_message>
			switch(g_link.receive_status){
    3b3c:	80 91 92 07 	lds	r24, 0x0792	; 0x800792 <g_link+0x30>
    3b40:	81 30       	cpi	r24, 0x01	; 1
    3b42:	51 f3       	breq	.-44     	; 0x3b18 <isotpi_receive_multi+0x7e>
    3b44:	82 30       	cpi	r24, 0x02	; 2
    3b46:	41 f7       	brne	.-48     	; 0x3b18 <isotpi_receive_multi+0x7e>
    3b48:	10 e0       	ldi	r17, 0x00	; 0
				case ISOTP_RECEIVE_STATUS_INPROGRESS :
				break;
				case ISOTP_RECEIVE_STATUS_FULL :
				for(j=0; j<14; j++){
					can_free_mob(j);
    3b4a:	81 2f       	mov	r24, r17
    3b4c:	0e 94 0c 04 	call	0x818	; 0x818 <can_free_mob>
			isotp_on_can_message(&g_link, message, size);
			switch(g_link.receive_status){
				case ISOTP_RECEIVE_STATUS_INPROGRESS :
				break;
				case ISOTP_RECEIVE_STATUS_FULL :
				for(j=0; j<14; j++){
    3b50:	1f 5f       	subi	r17, 0xFF	; 255
    3b52:	1e 30       	cpi	r17, 0x0E	; 14
    3b54:	d1 f7       	brne	.-12     	; 0x3b4a <isotpi_receive_multi+0xb0>
					can_free_mob(j);
				}
				uint16_t out_size;
				uint8_t ret;
				return isotp_receive(&g_link, payload, payload_size, &out_size);
    3b56:	47 2d       	mov	r20, r7
    3b58:	50 e0       	ldi	r21, 0x00	; 0
    3b5a:	9e 01       	movw	r18, r28
    3b5c:	23 5f       	subi	r18, 0xF3	; 243
    3b5e:	3f 4f       	sbci	r19, 0xFF	; 255
    3b60:	b5 01       	movw	r22, r10
    3b62:	82 e6       	ldi	r24, 0x62	; 98
    3b64:	97 e0       	ldi	r25, 0x07	; 7
    3b66:	2c dd       	rcall	.-1448   	; 0x35c0 <isotp_receive>
			}
		} 
	}
	
}
    3b68:	2f 96       	adiw	r28, 0x0f	; 15
    3b6a:	0f b6       	in	r0, 0x3f	; 63
    3b6c:	f8 94       	cli
    3b6e:	de bf       	out	0x3e, r29	; 62
    3b70:	0f be       	out	0x3f, r0	; 63
    3b72:	cd bf       	out	0x3d, r28	; 61
    3b74:	df 91       	pop	r29
    3b76:	cf 91       	pop	r28
    3b78:	1f 91       	pop	r17
    3b7a:	0f 91       	pop	r16
    3b7c:	ff 90       	pop	r15
    3b7e:	ef 90       	pop	r14
    3b80:	df 90       	pop	r13
    3b82:	cf 90       	pop	r12
    3b84:	bf 90       	pop	r11
    3b86:	af 90       	pop	r10
    3b88:	9f 90       	pop	r9
    3b8a:	8f 90       	pop	r8
    3b8c:	7f 90       	pop	r7
    3b8e:	08 95       	ret

00003b90 <get_public_key>:
	return 1;
}

// Retrieve the appropriate public key from memory
static void get_public_key(uint8_t role, uint8_t public[64]){
	switch (role)
    3b90:	82 30       	cpi	r24, 0x02	; 2
    3b92:	b9 f0       	breq	.+46     	; 0x3bc2 <get_public_key+0x32>
    3b94:	28 f4       	brcc	.+10     	; 0x3ba0 <get_public_key+0x10>
    3b96:	88 23       	and	r24, r24
    3b98:	41 f0       	breq	.+16     	; 0x3baa <get_public_key+0x1a>
    3b9a:	81 30       	cpi	r24, 0x01	; 1
    3b9c:	61 f0       	breq	.+24     	; 0x3bb6 <get_public_key+0x26>
    3b9e:	08 95       	ret
    3ba0:	83 30       	cpi	r24, 0x03	; 3
    3ba2:	a9 f0       	breq	.+42     	; 0x3bce <get_public_key+0x3e>
    3ba4:	84 30       	cpi	r24, 0x04	; 4
    3ba6:	c9 f0       	breq	.+50     	; 0x3bda <get_public_key+0x4a>
    3ba8:	08 95       	ret
	{
		case ADMIN_ROLE :
		hex_to_bytes(public_key1_hex, 128, public);
    3baa:	ab 01       	movw	r20, r22
    3bac:	60 e8       	ldi	r22, 0x80	; 128
    3bae:	8c ec       	ldi	r24, 0xCC	; 204
    3bb0:	95 e0       	ldi	r25, 0x05	; 5
    3bb2:	30 ca       	rjmp	.-2976   	; 0x3014 <hex_to_bytes>
		break;
    3bb4:	08 95       	ret
		case OEM_ROLE :
		hex_to_bytes(public_key2_hex, 128, public);
    3bb6:	ab 01       	movw	r20, r22
    3bb8:	60 e8       	ldi	r22, 0x80	; 128
    3bba:	8c e4       	ldi	r24, 0x4C	; 76
    3bbc:	95 e0       	ldi	r25, 0x05	; 5
    3bbe:	2a ca       	rjmp	.-2988   	; 0x3014 <hex_to_bytes>
		break;
    3bc0:	08 95       	ret
		case POLICEMAN_ROLE :
		hex_to_bytes(public_key3_hex, 128, public);
    3bc2:	ab 01       	movw	r20, r22
    3bc4:	60 e8       	ldi	r22, 0x80	; 128
    3bc6:	8c ec       	ldi	r24, 0xCC	; 204
    3bc8:	94 e0       	ldi	r25, 0x04	; 4
    3bca:	24 ca       	rjmp	.-3000   	; 0x3014 <hex_to_bytes>
		break;
    3bcc:	08 95       	ret
		case REPAIRMAN_ROLE :
		hex_to_bytes(public_key4_hex, 128, public);
    3bce:	ab 01       	movw	r20, r22
    3bd0:	60 e8       	ldi	r22, 0x80	; 128
    3bd2:	8c e4       	ldi	r24, 0x4C	; 76
    3bd4:	94 e0       	ldi	r25, 0x04	; 4
    3bd6:	1e ca       	rjmp	.-3012   	; 0x3014 <hex_to_bytes>
		break;
    3bd8:	08 95       	ret
		case OWNER_ROLE :
		hex_to_bytes(public_key5_hex, 128, public);
    3bda:	ab 01       	movw	r20, r22
    3bdc:	60 e8       	ldi	r22, 0x80	; 128
    3bde:	8c ec       	ldi	r24, 0xCC	; 204
    3be0:	93 e0       	ldi	r25, 0x03	; 3
    3be2:	18 ca       	rjmp	.-3024   	; 0x3014 <hex_to_bytes>
    3be4:	08 95       	ret

00003be6 <RNG>:

Note:	The RNG implemented here is only of demonstrative purposes.
		For use in cryptographic operations, this would have to be implemented
		using some inherently random input (e.g. noise). 
*/
static int RNG(uint8_t *dest, unsigned size) {
    3be6:	ff 92       	push	r15
    3be8:	0f 93       	push	r16
    3bea:	1f 93       	push	r17
    3bec:	cf 93       	push	r28
    3bee:	df 93       	push	r29
    3bf0:	ec 01       	movw	r28, r24
    3bf2:	8b 01       	movw	r16, r22
	while(size){
    3bf4:	67 2b       	or	r22, r23
    3bf6:	51 f0       	breq	.+20     	; 0x3c0c <RNG+0x26>
		uint8_t val = (uint8_t) rand() + rand();
    3bf8:	0e 94 64 33 	call	0x66c8	; 0x66c8 <rand>
    3bfc:	f8 2e       	mov	r15, r24
    3bfe:	0e 94 64 33 	call	0x66c8	; 0x66c8 <rand>
		*dest = val;
    3c02:	8f 0d       	add	r24, r15
    3c04:	89 93       	st	Y+, r24
		++dest;
		--size;
    3c06:	01 50       	subi	r16, 0x01	; 1
    3c08:	11 09       	sbc	r17, r1
Note:	The RNG implemented here is only of demonstrative purposes.
		For use in cryptographic operations, this would have to be implemented
		using some inherently random input (e.g. noise). 
*/
static int RNG(uint8_t *dest, unsigned size) {
	while(size){
    3c0a:	b1 f7       	brne	.-20     	; 0x3bf8 <RNG+0x12>
		*dest = val;
		++dest;
		--size;
	}
	return 1;
}
    3c0c:	81 e0       	ldi	r24, 0x01	; 1
    3c0e:	90 e0       	ldi	r25, 0x00	; 0
    3c10:	df 91       	pop	r29
    3c12:	cf 91       	pop	r28
    3c14:	1f 91       	pop	r17
    3c16:	0f 91       	pop	r16
    3c18:	ff 90       	pop	r15
    3c1a:	08 95       	ret

00003c1c <verify_signature>:
		hex_to_bytes(public_key5_hex, 128, public);
		break;
	}
}

int verify_signature(uint8_t challenge[64], uint8_t signature[64], role_t role){
    3c1c:	af 92       	push	r10
    3c1e:	bf 92       	push	r11
    3c20:	df 92       	push	r13
    3c22:	ef 92       	push	r14
    3c24:	ff 92       	push	r15
    3c26:	0f 93       	push	r16
    3c28:	1f 93       	push	r17
    3c2a:	cf 93       	push	r28
    3c2c:	df 93       	push	r29
    3c2e:	cd b7       	in	r28, 0x3d	; 61
    3c30:	de b7       	in	r29, 0x3e	; 62
    3c32:	c0 58       	subi	r28, 0x80	; 128
    3c34:	d1 09       	sbc	r29, r1
    3c36:	0f b6       	in	r0, 0x3f	; 63
    3c38:	f8 94       	cli
    3c3a:	de bf       	out	0x3e, r29	; 62
    3c3c:	0f be       	out	0x3f, r0	; 63
    3c3e:	cd bf       	out	0x3d, r28	; 61
    3c40:	5c 01       	movw	r10, r24
    3c42:	7b 01       	movw	r14, r22
    3c44:	d4 2e       	mov	r13, r20
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    3c46:	0e 94 de 13 	call	0x27bc	; 0x27bc <uECC_secp256r1>
    3c4a:	8c 01       	movw	r16, r24
	int result;
	
	//Hash first for added security.
	uint8_t hash[64];
	sha512(hash, challenge,512);
    3c4c:	20 e0       	ldi	r18, 0x00	; 0
    3c4e:	32 e0       	ldi	r19, 0x02	; 2
    3c50:	40 e0       	ldi	r20, 0x00	; 0
    3c52:	50 e0       	ldi	r21, 0x00	; 0
    3c54:	b5 01       	movw	r22, r10
    3c56:	ce 01       	movw	r24, r28
    3c58:	01 96       	adiw	r24, 0x01	; 1
    3c5a:	0e 94 b6 30 	call	0x616c	; 0x616c <sha512>
	uint8_t public[64];
	
	//Retrieve appropriate public key.
	get_public_key(role, public);
    3c5e:	be 01       	movw	r22, r28
    3c60:	6f 5b       	subi	r22, 0xBF	; 191
    3c62:	7f 4f       	sbci	r23, 0xFF	; 255
    3c64:	8d 2d       	mov	r24, r13
    3c66:	94 df       	rcall	.-216    	; 0x3b90 <get_public_key>
	
	//Verify ECDSA signature
	result = uECC_verify(public, hash, 64, signature, curve);
    3c68:	97 01       	movw	r18, r14
    3c6a:	40 e4       	ldi	r20, 0x40	; 64
    3c6c:	50 e0       	ldi	r21, 0x00	; 0
    3c6e:	be 01       	movw	r22, r28
    3c70:	6f 5f       	subi	r22, 0xFF	; 255
    3c72:	7f 4f       	sbci	r23, 0xFF	; 255
    3c74:	ce 01       	movw	r24, r28
    3c76:	8f 5b       	subi	r24, 0xBF	; 191
    3c78:	9f 4f       	sbci	r25, 0xFF	; 255
    3c7a:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <uECC_verify>
	return result;
}
    3c7e:	c0 58       	subi	r28, 0x80	; 128
    3c80:	df 4f       	sbci	r29, 0xFF	; 255
    3c82:	0f b6       	in	r0, 0x3f	; 63
    3c84:	f8 94       	cli
    3c86:	de bf       	out	0x3e, r29	; 62
    3c88:	0f be       	out	0x3f, r0	; 63
    3c8a:	cd bf       	out	0x3d, r28	; 61
    3c8c:	df 91       	pop	r29
    3c8e:	cf 91       	pop	r28
    3c90:	1f 91       	pop	r17
    3c92:	0f 91       	pop	r16
    3c94:	ff 90       	pop	r15
    3c96:	ef 90       	pop	r14
    3c98:	df 90       	pop	r13
    3c9a:	bf 90       	pop	r11
    3c9c:	af 90       	pop	r10
    3c9e:	08 95       	ret

00003ca0 <authenticated_key_agreement>:
	Inputs:
		role	- The role that the user wishes to authenticate as.
	Outputs:
		secret	- The ECDH shared secret that was calculated.
*/
int authenticated_key_agreement(role_t role, uint8_t *secret){
    3ca0:	cf 92       	push	r12
    3ca2:	df 92       	push	r13
    3ca4:	ef 92       	push	r14
    3ca6:	ff 92       	push	r15
    3ca8:	1f 93       	push	r17
    3caa:	cf 93       	push	r28
    3cac:	df 93       	push	r29
    3cae:	cd b7       	in	r28, 0x3d	; 61
    3cb0:	de b7       	in	r29, 0x3e	; 62
    3cb2:	c3 50       	subi	r28, 0x03	; 3
    3cb4:	d1 40       	sbci	r29, 0x01	; 1
    3cb6:	0f b6       	in	r0, 0x3f	; 63
    3cb8:	f8 94       	cli
    3cba:	de bf       	out	0x3e, r29	; 62
    3cbc:	0f be       	out	0x3f, r0	; 63
    3cbe:	cd bf       	out	0x3d, r28	; 61
    3cc0:	18 2f       	mov	r17, r24
    3cc2:	6b 01       	movw	r12, r22
	
	//Start protocol by calculating new private/public key pair for shared secret establishment.
	volatile uint8_t result;
	uart_puts("authentication started");
    3cc4:	8a ea       	ldi	r24, 0xAA	; 170
    3cc6:	92 e0       	ldi	r25, 0x02	; 2
    3cc8:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	uECC_set_rng(RNG);
    3ccc:	83 ef       	ldi	r24, 0xF3	; 243
    3cce:	9d e1       	ldi	r25, 0x1D	; 29
    3cd0:	0e 94 d9 13 	call	0x27b2	; 0x27b2 <uECC_set_rng>
	volatile uint8_t private2[32];
	volatile uint8_t public2[64];
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    3cd4:	0e 94 de 13 	call	0x27bc	; 0x27bc <uECC_secp256r1>
    3cd8:	7c 01       	movw	r14, r24
	result = uECC_make_key(public2, private2, curve);
    3cda:	ac 01       	movw	r20, r24
    3cdc:	be 01       	movw	r22, r28
    3cde:	6e 5f       	subi	r22, 0xFE	; 254
    3ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    3ce2:	ce 01       	movw	r24, r28
    3ce4:	82 96       	adiw	r24, 0x22	; 34
    3ce6:	0e 94 e1 13 	call	0x27c2	; 0x27c2 <uECC_make_key>
    3cea:	89 83       	std	Y+1, r24	; 0x01
	uint8_t secret_unhashed[32];
	uint8_t public[64];
	get_public_key(role, public);
    3cec:	be 01       	movw	r22, r28
    3cee:	6e 57       	subi	r22, 0x7E	; 126
    3cf0:	7f 4f       	sbci	r23, 0xFF	; 255
    3cf2:	81 2f       	mov	r24, r17
    3cf4:	4d df       	rcall	.-358    	; 0x3b90 <get_public_key>
	
	//Send new public key.
	isotpi_send_multi(default_id, 64, public2);
    3cf6:	ae 01       	movw	r20, r28
    3cf8:	4e 5d       	subi	r20, 0xDE	; 222
    3cfa:	5f 4f       	sbci	r21, 0xFF	; 255
    3cfc:	60 e4       	ldi	r22, 0x40	; 64
    3cfe:	70 e0       	ldi	r23, 0x00	; 0
    3d00:	8a ec       	ldi	r24, 0xCA	; 202
    3d02:	93 e0       	ldi	r25, 0x03	; 3
    3d04:	52 de       	rcall	.-860    	; 0x39aa <isotpi_send_multi>
	uart_puts("public key sent");
    3d06:	81 ec       	ldi	r24, 0xC1	; 193
    3d08:	92 e0       	ldi	r25, 0x02	; 2
    3d0a:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	
	//Wait for Signature.
	uint8_t signature[64];
	can_id_t idtmp;
	isotpi_receive_multi(default_id, idtmp, 64, signature);
    3d0e:	9e 01       	movw	r18, r28
    3d10:	2e 53       	subi	r18, 0x3E	; 62
    3d12:	3f 4f       	sbci	r19, 0xFF	; 255
    3d14:	40 e4       	ldi	r20, 0x40	; 64
    3d16:	be 01       	movw	r22, r28
    3d18:	6e 5f       	subi	r22, 0xFE	; 254
    3d1a:	7e 4f       	sbci	r23, 0xFE	; 254
    3d1c:	8a ec       	ldi	r24, 0xCA	; 202
    3d1e:	93 e0       	ldi	r25, 0x03	; 3
    3d20:	bc de       	rcall	.-648    	; 0x3a9a <isotpi_receive_multi>
	uart_puts("signature received");
    3d22:	81 ed       	ldi	r24, 0xD1	; 209
    3d24:	92 e0       	ldi	r25, 0x02	; 2
    3d26:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	
	//Verify Signature.
	result = verify_signature(public2, signature, role);
    3d2a:	41 2f       	mov	r20, r17
    3d2c:	be 01       	movw	r22, r28
    3d2e:	6e 53       	subi	r22, 0x3E	; 62
    3d30:	7f 4f       	sbci	r23, 0xFF	; 255
    3d32:	ce 01       	movw	r24, r28
    3d34:	82 96       	adiw	r24, 0x22	; 34
    3d36:	72 df       	rcall	.-284    	; 0x3c1c <verify_signature>
    3d38:	89 83       	std	Y+1, r24	; 0x01
	
	//Handle result of signature verification
	can_msg_t ack;
	if(result==1) {
    3d3a:	89 81       	ldd	r24, Y+1	; 0x01
    3d3c:	81 30       	cpi	r24, 0x01	; 1
    3d3e:	19 f5       	brne	.+70     	; 0x3d86 <authenticated_key_agreement+0xe6>
		uart_puts("signature is valid");
    3d40:	84 ee       	ldi	r24, 0xE4	; 228
    3d42:	92 e0       	ldi	r25, 0x02	; 2
    3d44:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
		
		//calculate shared secret.
		result = uECC_shared_secret(public, private2, secret_unhashed, curve);
    3d48:	97 01       	movw	r18, r14
    3d4a:	ae 01       	movw	r20, r28
    3d4c:	4e 59       	subi	r20, 0x9E	; 158
    3d4e:	5f 4f       	sbci	r21, 0xFF	; 255
    3d50:	be 01       	movw	r22, r28
    3d52:	6e 5f       	subi	r22, 0xFE	; 254
    3d54:	7f 4f       	sbci	r23, 0xFF	; 255
    3d56:	ce 01       	movw	r24, r28
    3d58:	8e 57       	subi	r24, 0x7E	; 126
    3d5a:	9f 4f       	sbci	r25, 0xFF	; 255
    3d5c:	0e 94 67 14 	call	0x28ce	; 0x28ce <uECC_shared_secret>
    3d60:	89 83       	std	Y+1, r24	; 0x01
		uint32_t len = 256;
		sha256(secret, secret_unhashed, len);
    3d62:	20 e0       	ldi	r18, 0x00	; 0
    3d64:	31 e0       	ldi	r19, 0x01	; 1
    3d66:	40 e0       	ldi	r20, 0x00	; 0
    3d68:	50 e0       	ldi	r21, 0x00	; 0
    3d6a:	be 01       	movw	r22, r28
    3d6c:	6e 59       	subi	r22, 0x9E	; 158
    3d6e:	7f 4f       	sbci	r23, 0xFF	; 255
    3d70:	c6 01       	movw	r24, r12
    3d72:	ae d3       	rcall	.+1884   	; 0x44d0 <sha256>
		
		isotpi_send(default_id, 7, ack_pos);
    3d74:	42 ec       	ldi	r20, 0xC2	; 194
    3d76:	53 e0       	ldi	r21, 0x03	; 3
    3d78:	67 e0       	ldi	r22, 0x07	; 7
    3d7a:	8a ec       	ldi	r24, 0xCA	; 202
    3d7c:	93 e0       	ldi	r25, 0x03	; 3
    3d7e:	6b dd       	rcall	.-1322   	; 0x3856 <isotpi_send>
		uart_puts("signature is false!");
		
		isotpi_send(default_id, 7, ack_neg);
		return 1;
	} 
	return 0;
    3d80:	80 e0       	ldi	r24, 0x00	; 0
    3d82:	90 e0       	ldi	r25, 0x00	; 0
    3d84:	0c c0       	rjmp	.+24     	; 0x3d9e <authenticated_key_agreement+0xfe>
		uint32_t len = 256;
		sha256(secret, secret_unhashed, len);
		
		isotpi_send(default_id, 7, ack_pos);
	}else{
		uart_puts("signature is false!");
    3d86:	87 ef       	ldi	r24, 0xF7	; 247
    3d88:	92 e0       	ldi	r25, 0x02	; 2
    3d8a:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
		
		isotpi_send(default_id, 7, ack_neg);
    3d8e:	4a eb       	ldi	r20, 0xBA	; 186
    3d90:	53 e0       	ldi	r21, 0x03	; 3
    3d92:	67 e0       	ldi	r22, 0x07	; 7
    3d94:	8a ec       	ldi	r24, 0xCA	; 202
    3d96:	93 e0       	ldi	r25, 0x03	; 3
    3d98:	5e dd       	rcall	.-1348   	; 0x3856 <isotpi_send>
		return 1;
    3d9a:	81 e0       	ldi	r24, 0x01	; 1
    3d9c:	90 e0       	ldi	r25, 0x00	; 0
	} 
	return 0;
}
    3d9e:	cd 5f       	subi	r28, 0xFD	; 253
    3da0:	de 4f       	sbci	r29, 0xFE	; 254
    3da2:	0f b6       	in	r0, 0x3f	; 63
    3da4:	f8 94       	cli
    3da6:	de bf       	out	0x3e, r29	; 62
    3da8:	0f be       	out	0x3f, r0	; 63
    3daa:	cd bf       	out	0x3d, r28	; 61
    3dac:	df 91       	pop	r29
    3dae:	cf 91       	pop	r28
    3db0:	1f 91       	pop	r17
    3db2:	ff 90       	pop	r15
    3db4:	ef 90       	pop	r14
    3db6:	df 90       	pop	r13
    3db8:	cf 90       	pop	r12
    3dba:	08 95       	ret

00003dbc <forward_message>:
	return 0;
	
}

// In a real gateway, this function would forward the message to the appropriate subnetwork.
void forward_message(can_msg_t msg, can_id_t id){
    3dbc:	ef 92       	push	r14
    3dbe:	ff 92       	push	r15
    3dc0:	0f 93       	push	r16
    3dc2:	1f 93       	push	r17
    3dc4:	cf 93       	push	r28
    3dc6:	df 93       	push	r29
    3dc8:	cd b7       	in	r28, 0x3d	; 61
    3dca:	de b7       	in	r29, 0x3e	; 62
    3dcc:	64 97       	sbiw	r28, 0x14	; 20
    3dce:	0f b6       	in	r0, 0x3f	; 63
    3dd0:	f8 94       	cli
    3dd2:	de bf       	out	0x3e, r29	; 62
    3dd4:	0f be       	out	0x3f, r0	; 63
    3dd6:	cd bf       	out	0x3d, r28	; 61
    3dd8:	7c 01       	movw	r14, r24
    3dda:	8b 01       	movw	r16, r22
	char idl[2];
	char idh[2];
	bytes_to_hex(id, 1, idl);
    3ddc:	ae 01       	movw	r20, r28
    3dde:	4f 5f       	subi	r20, 0xFF	; 255
    3de0:	5f 4f       	sbci	r21, 0xFF	; 255
    3de2:	61 e0       	ldi	r22, 0x01	; 1
    3de4:	c8 01       	movw	r24, r16
    3de6:	f6 d8       	rcall	.-3604   	; 0x2fd4 <bytes_to_hex>
	id++;
	bytes_to_hex(id, 1, idh);
    3de8:	ae 01       	movw	r20, r28
    3dea:	4d 5f       	subi	r20, 0xFD	; 253
    3dec:	5f 4f       	sbci	r21, 0xFF	; 255
    3dee:	61 e0       	ldi	r22, 0x01	; 1
    3df0:	c8 01       	movw	r24, r16
    3df2:	01 96       	adiw	r24, 0x01	; 1
    3df4:	ef d8       	rcall	.-3618   	; 0x2fd4 <bytes_to_hex>
	uart_puts("---MESSAGE FORWARDED ONTO NETWORK---");
    3df6:	8b e0       	ldi	r24, 0x0B	; 11
    3df8:	93 e0       	ldi	r25, 0x03	; 3
    3dfa:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	uart_puts("IDL:");
    3dfe:	80 e3       	ldi	r24, 0x30	; 48
    3e00:	93 e0       	ldi	r25, 0x03	; 3
    3e02:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	uart_putd(idl,2);
    3e06:	62 e0       	ldi	r22, 0x02	; 2
    3e08:	ce 01       	movw	r24, r28
    3e0a:	01 96       	adiw	r24, 0x01	; 1
    3e0c:	0e 94 7a 31 	call	0x62f4	; 0x62f4 <uart_putd>
	uart_puts("IDH:");
    3e10:	85 e3       	ldi	r24, 0x35	; 53
    3e12:	93 e0       	ldi	r25, 0x03	; 3
    3e14:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	uart_putd(idh,2);
    3e18:	62 e0       	ldi	r22, 0x02	; 2
    3e1a:	ce 01       	movw	r24, r28
    3e1c:	03 96       	adiw	r24, 0x03	; 3
    3e1e:	0e 94 7a 31 	call	0x62f4	; 0x62f4 <uart_putd>
	char msghex[16];
	bytes_to_hex(msg, 8, msghex);
    3e22:	ae 01       	movw	r20, r28
    3e24:	4b 5f       	subi	r20, 0xFB	; 251
    3e26:	5f 4f       	sbci	r21, 0xFF	; 255
    3e28:	68 e0       	ldi	r22, 0x08	; 8
    3e2a:	c7 01       	movw	r24, r14
    3e2c:	d3 d8       	rcall	.-3674   	; 0x2fd4 <bytes_to_hex>
	uart_puts("MESSAGE:");
    3e2e:	8a e3       	ldi	r24, 0x3A	; 58
    3e30:	93 e0       	ldi	r25, 0x03	; 3
    3e32:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	uart_putd(msghex, 16);
    3e36:	60 e1       	ldi	r22, 0x10	; 16
    3e38:	ce 01       	movw	r24, r28
    3e3a:	05 96       	adiw	r24, 0x05	; 5
    3e3c:	0e 94 7a 31 	call	0x62f4	; 0x62f4 <uart_putd>
	uart_puts("------------------------------------");
    3e40:	83 e4       	ldi	r24, 0x43	; 67
    3e42:	93 e0       	ldi	r25, 0x03	; 3
    3e44:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
}
    3e48:	64 96       	adiw	r28, 0x14	; 20
    3e4a:	0f b6       	in	r0, 0x3f	; 63
    3e4c:	f8 94       	cli
    3e4e:	de bf       	out	0x3e, r29	; 62
    3e50:	0f be       	out	0x3f, r0	; 63
    3e52:	cd bf       	out	0x3d, r28	; 61
    3e54:	df 91       	pop	r29
    3e56:	cf 91       	pop	r28
    3e58:	1f 91       	pop	r17
    3e5a:	0f 91       	pop	r16
    3e5c:	ff 90       	pop	r15
    3e5e:	ef 90       	pop	r14
    3e60:	08 95       	ret

00003e62 <message_authentication>:

	Inputs:
		role	- The role that the user wishes to authenticate as.
		secret	- The ECDH shared secret used to secure the session.
*/
int message_authentication(role_t role, uint8_t	secret[32]){
    3e62:	cf 93       	push	r28
    3e64:	df 93       	push	r29
    3e66:	cd b7       	in	r28, 0x3d	; 61
    3e68:	de b7       	in	r29, 0x3e	; 62
    3e6a:	cc 54       	subi	r28, 0x4C	; 76
    3e6c:	d1 09       	sbc	r29, r1
    3e6e:	0f b6       	in	r0, 0x3f	; 63
    3e70:	f8 94       	cli
    3e72:	de bf       	out	0x3e, r29	; 62
    3e74:	0f be       	out	0x3f, r0	; 63
    3e76:	cd bf       	out	0x3d, r28	; 61
    3e78:	d8 2e       	mov	r13, r24
    3e7a:	5b 01       	movw	r10, r22
	while(1){
		can_id_t id;
		can_msg_t message;
		uint8_t len;
		// Receive the message that the tester wants to send to the network.
		isotpi_receive_multi(default_id, id, 8, message);
    3e7c:	9e 01       	movw	r18, r28
    3e7e:	2f 5b       	subi	r18, 0xBF	; 191
    3e80:	3f 4f       	sbci	r19, 0xFF	; 255
    3e82:	48 e0       	ldi	r20, 0x08	; 8
    3e84:	be 01       	movw	r22, r28
    3e86:	65 5b       	subi	r22, 0xB5	; 181
    3e88:	7f 4f       	sbci	r23, 0xFF	; 255
    3e8a:	8a ec       	ldi	r24, 0xCA	; 202
    3e8c:	93 e0       	ldi	r25, 0x03	; 3
    3e8e:	05 de       	rcall	.-1014   	; 0x3a9a <isotpi_receive_multi>
		
		//Check + acknwoledge the permission check.
		if(check_permission(id, role) == 0){
    3e90:	6d 2d       	mov	r22, r13
    3e92:	ce 01       	movw	r24, r28
    3e94:	85 5b       	subi	r24, 0xB5	; 181
    3e96:	9f 4f       	sbci	r25, 0xFF	; 255
    3e98:	a6 d1       	rcall	.+844    	; 0x41e6 <check_permission>
    3e9a:	89 2b       	or	r24, r25
    3e9c:	71 f5       	brne	.+92     	; 0x3efa <message_authentication+0x98>
			uart_puts("Permission granted");
    3e9e:	88 e6       	ldi	r24, 0x68	; 104
    3ea0:	93 e0       	ldi	r25, 0x03	; 3
    3ea2:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
			isotpi_send(default_id, 7, ack_pos);
    3ea6:	42 ec       	ldi	r20, 0xC2	; 194
    3ea8:	53 e0       	ldi	r21, 0x03	; 3
    3eaa:	67 e0       	ldi	r22, 0x07	; 7
    3eac:	8a ec       	ldi	r24, 0xCA	; 202
    3eae:	93 e0       	ldi	r25, 0x03	; 3
    3eb0:	d2 dc       	rcall	.-1628   	; 0x3856 <isotpi_send>
		}
		
		// Receive the MAC of the message
		can_id_t idtmp;
		uint8_t mac[32];
		isotpi_receive_multi(default_id, idtmp, 32, mac);
    3eb2:	9e 01       	movw	r18, r28
    3eb4:	2f 5d       	subi	r18, 0xDF	; 223
    3eb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3eb8:	40 e2       	ldi	r20, 0x20	; 32
    3eba:	be 01       	movw	r22, r28
    3ebc:	67 5b       	subi	r22, 0xB7	; 183
    3ebe:	7f 4f       	sbci	r23, 0xFF	; 255
    3ec0:	8a ec       	ldi	r24, 0xCA	; 202
    3ec2:	93 e0       	ldi	r25, 0x03	; 3
    3ec4:	ea dd       	rcall	.-1068   	; 0x3a9a <isotpi_receive_multi>
		
		// Calculate MAC
		uint8_t mac2[32];
		uint16_t klen = 256;
		uint32_t msglen = 64;
		hmac_sha256(mac2, secret, klen ,message , msglen);
    3ec6:	10 e4       	ldi	r17, 0x40	; 64
    3ec8:	e1 2e       	mov	r14, r17
    3eca:	f1 2c       	mov	r15, r1
    3ecc:	00 e0       	ldi	r16, 0x00	; 0
    3ece:	10 e0       	ldi	r17, 0x00	; 0
    3ed0:	9e 01       	movw	r18, r28
    3ed2:	2f 5b       	subi	r18, 0xBF	; 191
    3ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ed6:	40 e0       	ldi	r20, 0x00	; 0
    3ed8:	51 e0       	ldi	r21, 0x01	; 1
    3eda:	b5 01       	movw	r22, r10
    3edc:	ce 01       	movw	r24, r28
    3ede:	01 96       	adiw	r24, 0x01	; 1
    3ee0:	df d1       	rcall	.+958    	; 0x42a0 <hmac_sha256>
		
		//Check the MAC.
		if(memcmp(mac, mac2, 32) == 0){
    3ee2:	40 e2       	ldi	r20, 0x20	; 32
    3ee4:	50 e0       	ldi	r21, 0x00	; 0
    3ee6:	be 01       	movw	r22, r28
    3ee8:	6f 5f       	subi	r22, 0xFF	; 255
    3eea:	7f 4f       	sbci	r23, 0xFF	; 255
    3eec:	ce 01       	movw	r24, r28
    3eee:	81 96       	adiw	r24, 0x21	; 33
    3ef0:	0e 94 7f 33 	call	0x66fe	; 0x66fe <memcmp>
    3ef4:	89 2b       	or	r24, r25
    3ef6:	61 f0       	breq	.+24     	; 0x3f10 <message_authentication+0xae>
    3ef8:	1d c0       	rjmp	.+58     	; 0x3f34 <message_authentication+0xd2>
		//Check + acknwoledge the permission check.
		if(check_permission(id, role) == 0){
			uart_puts("Permission granted");
			isotpi_send(default_id, 7, ack_pos);
		}else{
			uart_puts("Permission denied");
    3efa:	8b e7       	ldi	r24, 0x7B	; 123
    3efc:	93 e0       	ldi	r25, 0x03	; 3
    3efe:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
			isotpi_send(default_id, 7, ack_neg);
    3f02:	4a eb       	ldi	r20, 0xBA	; 186
    3f04:	53 e0       	ldi	r21, 0x03	; 3
    3f06:	67 e0       	ldi	r22, 0x07	; 7
    3f08:	8a ec       	ldi	r24, 0xCA	; 202
    3f0a:	93 e0       	ldi	r25, 0x03	; 3
    3f0c:	a4 dc       	rcall	.-1720   	; 0x3856 <isotpi_send>
			continue;
    3f0e:	b6 cf       	rjmp	.-148    	; 0x3e7c <message_authentication+0x1a>
		uint32_t msglen = 64;
		hmac_sha256(mac2, secret, klen ,message , msglen);
		
		//Check the MAC.
		if(memcmp(mac, mac2, 32) == 0){
			uart_puts("Authentication Ok");
    3f10:	8d e8       	ldi	r24, 0x8D	; 141
    3f12:	93 e0       	ldi	r25, 0x03	; 3
    3f14:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
			isotpi_send(default_id, 7, ack_pos);
    3f18:	42 ec       	ldi	r20, 0xC2	; 194
    3f1a:	53 e0       	ldi	r21, 0x03	; 3
    3f1c:	67 e0       	ldi	r22, 0x07	; 7
    3f1e:	8a ec       	ldi	r24, 0xCA	; 202
    3f20:	93 e0       	ldi	r25, 0x03	; 3
			isotpi_send(default_id, 7, ack_neg);
			continue;
		}
		
		//Forward the message to the internal vehicle network.
		forward_message(message, id);
    3f22:	99 dc       	rcall	.-1742   	; 0x3856 <isotpi_send>
    3f24:	be 01       	movw	r22, r28
    3f26:	65 5b       	subi	r22, 0xB5	; 181
    3f28:	7f 4f       	sbci	r23, 0xFF	; 255
    3f2a:	ce 01       	movw	r24, r28
    3f2c:	8f 5b       	subi	r24, 0xBF	; 191
    3f2e:	9f 4f       	sbci	r25, 0xFF	; 255
    3f30:	45 df       	rcall	.-374    	; 0x3dbc <forward_message>
    3f32:	a4 cf       	rjmp	.-184    	; 0x3e7c <message_authentication+0x1a>
		//Check the MAC.
		if(memcmp(mac, mac2, 32) == 0){
			uart_puts("Authentication Ok");
			isotpi_send(default_id, 7, ack_pos);
		}else{
			uart_puts("Authentication Failed");
    3f34:	8f e9       	ldi	r24, 0x9F	; 159
    3f36:	93 e0       	ldi	r25, 0x03	; 3
    3f38:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
			isotpi_send(default_id, 7, ack_neg);
    3f3c:	4a eb       	ldi	r20, 0xBA	; 186
    3f3e:	53 e0       	ldi	r21, 0x03	; 3
    3f40:	67 e0       	ldi	r22, 0x07	; 7
    3f42:	8a ec       	ldi	r24, 0xCA	; 202
    3f44:	93 e0       	ldi	r25, 0x03	; 3
    3f46:	87 dc       	rcall	.-1778   	; 0x3856 <isotpi_send>
			continue;
    3f48:	99 cf       	rjmp	.-206    	; 0x3e7c <message_authentication+0x1a>

00003f4a <main>:
	uart_putd(msghex, 16);
	uart_puts("------------------------------------");
}

 int main()
 {
    3f4a:	cf 93       	push	r28
    3f4c:	df 93       	push	r29
    3f4e:	cd b7       	in	r28, 0x3d	; 61
    3f50:	de b7       	in	r29, 0x3e	; 62
    3f52:	a8 97       	sbiw	r28, 0x28	; 40
    3f54:	0f b6       	in	r0, 0x3f	; 63
    3f56:	f8 94       	cli
    3f58:	de bf       	out	0x3e, r29	; 62
    3f5a:	0f be       	out	0x3f, r0	; 63
    3f5c:	cd bf       	out	0x3d, r28	; 61
	uart_init();
    3f5e:	0e 94 2c 31 	call	0x6258	; 0x6258 <uart_init>
	can_init();
    3f62:	0e 94 46 03 	call	0x68c	; 0x68c <can_init>
	init_permissions_table();
    3f66:	5f d1       	rcall	.+702    	; 0x4226 <init_permissions_table>
	uart_puts("idle");
    3f68:	85 eb       	ldi	r24, 0xB5	; 181
    3f6a:	93 e0       	ldi	r25, 0x03	; 3
    3f6c:	0e 94 38 31 	call	0x6270	; 0x6270 <uart_puts>
	clock_Init();
    3f70:	0e 94 74 04 	call	0x8e8	; 0x8e8 <clock_Init>
   	
	can_msg_t init;
	uint8_t secret[32];
	while(1){
		isotpi_receive(default_id, 7, init);
    3f74:	ae 01       	movw	r20, r28
    3f76:	4f 5f       	subi	r20, 0xFF	; 255
    3f78:	5f 4f       	sbci	r21, 0xFF	; 255
    3f7a:	67 e0       	ldi	r22, 0x07	; 7
    3f7c:	8a ec       	ldi	r24, 0xCA	; 202
    3f7e:	93 e0       	ldi	r25, 0x03	; 3
    3f80:	af dc       	rcall	.-1698   	; 0x38e0 <isotpi_receive>
		if(authenticated_key_agreement(init[0],secret)) return 0;
    3f82:	be 01       	movw	r22, r28
    3f84:	67 5f       	subi	r22, 0xF7	; 247
    3f86:	7f 4f       	sbci	r23, 0xFF	; 255
    3f88:	89 81       	ldd	r24, Y+1	; 0x01
    3f8a:	8a de       	rcall	.-748    	; 0x3ca0 <authenticated_key_agreement>
    3f8c:	89 2b       	or	r24, r25
    3f8e:	29 f4       	brne	.+10     	; 0x3f9a <main+0x50>
		if(message_authentication(init[0],secret)) return 0;
    3f90:	be 01       	movw	r22, r28
    3f92:	67 5f       	subi	r22, 0xF7	; 247
    3f94:	7f 4f       	sbci	r23, 0xFF	; 255
    3f96:	89 81       	ldd	r24, Y+1	; 0x01
    3f98:	64 df       	rcall	.-312    	; 0x3e62 <message_authentication>
	}
	
 }
    3f9a:	80 e0       	ldi	r24, 0x00	; 0
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	a8 96       	adiw	r28, 0x28	; 40
    3fa0:	0f b6       	in	r0, 0x3f	; 63
    3fa2:	f8 94       	cli
    3fa4:	de bf       	out	0x3e, r29	; 62
    3fa6:	0f be       	out	0x3f, r0	; 63
    3fa8:	cd bf       	out	0x3d, r28	; 61
    3faa:	df 91       	pop	r29
    3fac:	cf 91       	pop	r28
    3fae:	08 95       	ret

00003fb0 <entrycmp>:
	}
	return 0;
}
	

int entrycmp(entry_t *entry, can_id_t msg_id){
    3fb0:	cf 93       	push	r28
    3fb2:	df 93       	push	r29
    3fb4:	1f 92       	push	r1
    3fb6:	cd b7       	in	r28, 0x3d	; 61
    3fb8:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t res =  memcmp(entry->id, msg_id, 2);
    3fba:	42 e0       	ldi	r20, 0x02	; 2
    3fbc:	50 e0       	ldi	r21, 0x00	; 0
    3fbe:	0e 94 7f 33 	call	0x66fe	; 0x66fe <memcmp>
    3fc2:	89 83       	std	Y+1, r24	; 0x01
	return res;
    3fc4:	89 81       	ldd	r24, Y+1	; 0x01
}
    3fc6:	90 e0       	ldi	r25, 0x00	; 0
    3fc8:	0f 90       	pop	r0
    3fca:	df 91       	pop	r29
    3fcc:	cf 91       	pop	r28
    3fce:	08 95       	ret

00003fd0 <add_entry>:
	hex_to_bytes(hex, 4, id);
	add_entry(id);
	return 0;
}

int add_entry(can_id_t id){
    3fd0:	ef 92       	push	r14
    3fd2:	ff 92       	push	r15
    3fd4:	0f 93       	push	r16
    3fd6:	1f 93       	push	r17
    3fd8:	cf 93       	push	r28
    3fda:	df 93       	push	r29
    3fdc:	8c 01       	movw	r16, r24
	entry_t *new_entry; 
	new_entry = malloc(sizeof(entry_t));
    3fde:	86 e0       	ldi	r24, 0x06	; 6
    3fe0:	90 e0       	ldi	r25, 0x00	; 0
    3fe2:	0e 94 fc 31 	call	0x63f8	; 0x63f8 <malloc>
    3fe6:	7c 01       	movw	r14, r24
	new_entry->permissions = NULL;
    3fe8:	fc 01       	movw	r30, r24
    3fea:	13 82       	std	Z+3, r1	; 0x03
    3fec:	12 82       	std	Z+2, r1	; 0x02
	new_entry->successor = NULL;
    3fee:	15 82       	std	Z+5, r1	; 0x05
    3ff0:	14 82       	std	Z+4, r1	; 0x04
	memcpy(new_entry->id, id, sizeof(can_id_t));
    3ff2:	f8 01       	movw	r30, r16
    3ff4:	80 81       	ld	r24, Z
    3ff6:	91 81       	ldd	r25, Z+1	; 0x01
    3ff8:	f7 01       	movw	r30, r14
    3ffa:	91 83       	std	Z+1, r25	; 0x01
    3ffc:	80 83       	st	Z, r24
	entry_t *curr = permission_table->head;
    3ffe:	e0 91 93 07 	lds	r30, 0x0793	; 0x800793 <permission_table>
    4002:	f0 91 94 07 	lds	r31, 0x0794	; 0x800794 <permission_table+0x1>
    4006:	c0 81       	ld	r28, Z
    4008:	d1 81       	ldd	r29, Z+1	; 0x01
	if(curr != NULL){
    400a:	20 97       	sbiw	r28, 0x00	; 0
    400c:	d1 f0       	breq	.+52     	; 0x4042 <add_entry+0x72>
		while(curr->successor != NULL){
    400e:	8c 81       	ldd	r24, Y+4	; 0x04
    4010:	9d 81       	ldd	r25, Y+5	; 0x05
    4012:	89 2b       	or	r24, r25
    4014:	61 f0       	breq	.+24     	; 0x402e <add_entry+0x5e>
			if(entrycmp(curr, id) == 0) return 1;
    4016:	b8 01       	movw	r22, r16
    4018:	ce 01       	movw	r24, r28
    401a:	ca df       	rcall	.-108    	; 0x3fb0 <entrycmp>
    401c:	89 2b       	or	r24, r25
    401e:	b1 f0       	breq	.+44     	; 0x404c <add_entry+0x7c>
			curr = curr->successor;
    4020:	0c 80       	ldd	r0, Y+4	; 0x04
    4022:	dd 81       	ldd	r29, Y+5	; 0x05
    4024:	c0 2d       	mov	r28, r0
	new_entry->permissions = NULL;
	new_entry->successor = NULL;
	memcpy(new_entry->id, id, sizeof(can_id_t));
	entry_t *curr = permission_table->head;
	if(curr != NULL){
		while(curr->successor != NULL){
    4026:	8c 81       	ldd	r24, Y+4	; 0x04
    4028:	9d 81       	ldd	r25, Y+5	; 0x05
    402a:	89 2b       	or	r24, r25
    402c:	a1 f7       	brne	.-24     	; 0x4016 <add_entry+0x46>
			if(entrycmp(curr, id) == 0) return 1;
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
    402e:	b8 01       	movw	r22, r16
    4030:	ce 01       	movw	r24, r28
    4032:	be df       	rcall	.-132    	; 0x3fb0 <entrycmp>
    4034:	89 2b       	or	r24, r25
    4036:	69 f0       	breq	.+26     	; 0x4052 <add_entry+0x82>
		curr->successor = new_entry;
    4038:	fd 82       	std	Y+5, r15	; 0x05
    403a:	ec 82       	std	Y+4, r14	; 0x04
	}else{
		permission_table->head = new_entry;
	}
	return 0;
    403c:	80 e0       	ldi	r24, 0x00	; 0
    403e:	90 e0       	ldi	r25, 0x00	; 0
    4040:	0a c0       	rjmp	.+20     	; 0x4056 <add_entry+0x86>
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
		curr->successor = new_entry;
	}else{
		permission_table->head = new_entry;
    4042:	f1 82       	std	Z+1, r15	; 0x01
    4044:	e0 82       	st	Z, r14
	}
	return 0;
    4046:	80 e0       	ldi	r24, 0x00	; 0
    4048:	90 e0       	ldi	r25, 0x00	; 0
    404a:	05 c0       	rjmp	.+10     	; 0x4056 <add_entry+0x86>
	new_entry->successor = NULL;
	memcpy(new_entry->id, id, sizeof(can_id_t));
	entry_t *curr = permission_table->head;
	if(curr != NULL){
		while(curr->successor != NULL){
			if(entrycmp(curr, id) == 0) return 1;
    404c:	81 e0       	ldi	r24, 0x01	; 1
    404e:	90 e0       	ldi	r25, 0x00	; 0
    4050:	02 c0       	rjmp	.+4      	; 0x4056 <add_entry+0x86>
			curr = curr->successor;
		}
		if(entrycmp(curr, id) == 0) return 1;
    4052:	81 e0       	ldi	r24, 0x01	; 1
    4054:	90 e0       	ldi	r25, 0x00	; 0
		curr->successor = new_entry;
	}else{
		permission_table->head = new_entry;
	}
	return 0;
}
    4056:	df 91       	pop	r29
    4058:	cf 91       	pop	r28
    405a:	1f 91       	pop	r17
    405c:	0f 91       	pop	r16
    405e:	ff 90       	pop	r15
    4060:	ef 90       	pop	r14
    4062:	08 95       	ret

00004064 <add_entry_hex>:
	can_id_t id;
	hex_to_bytes(hex,4,id);
	return add_permission(id,role);
}

int add_entry_hex(char *hex){
    4064:	cf 93       	push	r28
    4066:	df 93       	push	r29
    4068:	00 d0       	rcall	.+0      	; 0x406a <add_entry_hex+0x6>
    406a:	cd b7       	in	r28, 0x3d	; 61
    406c:	de b7       	in	r29, 0x3e	; 62
	can_id_t id;
	hex_to_bytes(hex, 4, id);
    406e:	ae 01       	movw	r20, r28
    4070:	4f 5f       	subi	r20, 0xFF	; 255
    4072:	5f 4f       	sbci	r21, 0xFF	; 255
    4074:	64 e0       	ldi	r22, 0x04	; 4
    4076:	0e 94 0a 18 	call	0x3014	; 0x3014 <hex_to_bytes>
	add_entry(id);
    407a:	ce 01       	movw	r24, r28
    407c:	01 96       	adiw	r24, 0x01	; 1
    407e:	a8 df       	rcall	.-176    	; 0x3fd0 <add_entry>
	return 0;
}
    4080:	80 e0       	ldi	r24, 0x00	; 0
    4082:	90 e0       	ldi	r25, 0x00	; 0
    4084:	0f 90       	pop	r0
    4086:	0f 90       	pop	r0
    4088:	df 91       	pop	r29
    408a:	cf 91       	pop	r28
    408c:	08 95       	ret

0000408e <find_entry>:
int entrycmp(entry_t *entry, can_id_t msg_id){
	volatile uint8_t res =  memcmp(entry->id, msg_id, 2);
	return res;
}

int find_entry(can_id_t msg_id, entry_t **dest){
    408e:	ef 92       	push	r14
    4090:	ff 92       	push	r15
    4092:	0f 93       	push	r16
    4094:	1f 93       	push	r17
    4096:	cf 93       	push	r28
    4098:	df 93       	push	r29
    409a:	8c 01       	movw	r16, r24
    409c:	7b 01       	movw	r14, r22
	entry_t *curr = permission_table->head;
    409e:	e0 91 93 07 	lds	r30, 0x0793	; 0x800793 <permission_table>
    40a2:	f0 91 94 07 	lds	r31, 0x0794	; 0x800794 <permission_table+0x1>
    40a6:	c0 81       	ld	r28, Z
    40a8:	d1 81       	ldd	r29, Z+1	; 0x01
	while(curr != NULL){
    40aa:	20 97       	sbiw	r28, 0x00	; 0
    40ac:	89 f0       	breq	.+34     	; 0x40d0 <find_entry+0x42>
		if(entrycmp(curr, msg_id) == 0){
    40ae:	b8 01       	movw	r22, r16
    40b0:	ce 01       	movw	r24, r28
    40b2:	7e df       	rcall	.-260    	; 0x3fb0 <entrycmp>
    40b4:	00 97       	sbiw	r24, 0x00	; 0
    40b6:	21 f4       	brne	.+8      	; 0x40c0 <find_entry+0x32>
			*dest = curr;
    40b8:	f7 01       	movw	r30, r14
    40ba:	d1 83       	std	Z+1, r29	; 0x01
    40bc:	c0 83       	st	Z, r28
			return 0;
    40be:	0a c0       	rjmp	.+20     	; 0x40d4 <find_entry+0x46>
		}else{
			curr = curr->successor;
    40c0:	0c 80       	ldd	r0, Y+4	; 0x04
    40c2:	dd 81       	ldd	r29, Y+5	; 0x05
    40c4:	c0 2d       	mov	r28, r0
	return res;
}

int find_entry(can_id_t msg_id, entry_t **dest){
	entry_t *curr = permission_table->head;
	while(curr != NULL){
    40c6:	20 97       	sbiw	r28, 0x00	; 0
    40c8:	91 f7       	brne	.-28     	; 0x40ae <find_entry+0x20>
			return 0;
		}else{
			curr = curr->successor;
		}
	}
	return 1;
    40ca:	81 e0       	ldi	r24, 0x01	; 1
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	02 c0       	rjmp	.+4      	; 0x40d4 <find_entry+0x46>
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	90 e0       	ldi	r25, 0x00	; 0
}
    40d4:	df 91       	pop	r29
    40d6:	cf 91       	pop	r28
    40d8:	1f 91       	pop	r17
    40da:	0f 91       	pop	r16
    40dc:	ff 90       	pop	r15
    40de:	ef 90       	pop	r14
    40e0:	08 95       	ret

000040e2 <add_permission>:
		permission_table->head = new_entry;
	}
	return 0;
}

int add_permission(can_id_t id, role_t role){
    40e2:	cf 92       	push	r12
    40e4:	df 92       	push	r13
    40e6:	ef 92       	push	r14
    40e8:	ff 92       	push	r15
    40ea:	1f 93       	push	r17
    40ec:	cf 93       	push	r28
    40ee:	df 93       	push	r29
    40f0:	00 d0       	rcall	.+0      	; 0x40f2 <add_permission+0x10>
    40f2:	cd b7       	in	r28, 0x3d	; 61
    40f4:	de b7       	in	r29, 0x3e	; 62
    40f6:	6c 01       	movw	r12, r24
    40f8:	16 2f       	mov	r17, r22
	volatile permission_t *new_permission;
	new_permission = malloc(sizeof(permission_t));
    40fa:	83 e0       	ldi	r24, 0x03	; 3
    40fc:	90 e0       	ldi	r25, 0x00	; 0
    40fe:	0e 94 fc 31 	call	0x63f8	; 0x63f8 <malloc>
    4102:	7c 01       	movw	r14, r24
	new_permission->successor = NULL;
    4104:	fc 01       	movw	r30, r24
    4106:	12 82       	std	Z+2, r1	; 0x02
    4108:	11 82       	std	Z+1, r1	; 0x01
	new_permission->role = role;
    410a:	10 83       	st	Z, r17
	entry_t *entry;
	if(find_entry(id, &entry)) return 1;
    410c:	be 01       	movw	r22, r28
    410e:	6f 5f       	subi	r22, 0xFF	; 255
    4110:	7f 4f       	sbci	r23, 0xFF	; 255
    4112:	c6 01       	movw	r24, r12
    4114:	bc df       	rcall	.-136    	; 0x408e <find_entry>
    4116:	ac 01       	movw	r20, r24
    4118:	89 2b       	or	r24, r25
    411a:	e1 f4       	brne	.+56     	; 0x4154 <add_permission+0x72>
	if(entry->permissions == NULL){
    411c:	a9 81       	ldd	r26, Y+1	; 0x01
    411e:	ba 81       	ldd	r27, Y+2	; 0x02
    4120:	12 96       	adiw	r26, 0x02	; 2
    4122:	ed 91       	ld	r30, X+
    4124:	fc 91       	ld	r31, X
    4126:	13 97       	sbiw	r26, 0x03	; 3
    4128:	30 97       	sbiw	r30, 0x00	; 0
    412a:	49 f4       	brne	.+18     	; 0x413e <add_permission+0x5c>
		entry->permissions = new_permission;
    412c:	13 96       	adiw	r26, 0x03	; 3
    412e:	fc 92       	st	X, r15
    4130:	ee 92       	st	-X, r14
    4132:	12 97       	sbiw	r26, 0x02	; 2
		return 0;
    4134:	17 c0       	rjmp	.+46     	; 0x4164 <add_permission+0x82>
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    4136:	90 81       	ld	r25, Z
			curr = curr->successor;
    4138:	f9 01       	movw	r30, r18
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    413a:	19 17       	cp	r17, r25
    413c:	71 f0       	breq	.+28     	; 0x415a <add_permission+0x78>
	if(entry->permissions == NULL){
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
    413e:	21 81       	ldd	r18, Z+1	; 0x01
    4140:	32 81       	ldd	r19, Z+2	; 0x02
    4142:	21 15       	cp	r18, r1
    4144:	31 05       	cpc	r19, r1
    4146:	b9 f7       	brne	.-18     	; 0x4136 <add_permission+0x54>
			if(role == curr->role) return 2;
			curr = curr->successor;
		}
		if(role == curr->role) return 2;
    4148:	80 81       	ld	r24, Z
    414a:	18 17       	cp	r17, r24
    414c:	49 f0       	breq	.+18     	; 0x4160 <add_permission+0x7e>
		curr->successor = new_permission;		
    414e:	f2 82       	std	Z+2, r15	; 0x02
    4150:	e1 82       	std	Z+1, r14	; 0x01
	}
	return 0;
    4152:	08 c0       	rjmp	.+16     	; 0x4164 <add_permission+0x82>
	volatile permission_t *new_permission;
	new_permission = malloc(sizeof(permission_t));
	new_permission->successor = NULL;
	new_permission->role = role;
	entry_t *entry;
	if(find_entry(id, &entry)) return 1;
    4154:	41 e0       	ldi	r20, 0x01	; 1
    4156:	50 e0       	ldi	r21, 0x00	; 0
    4158:	05 c0       	rjmp	.+10     	; 0x4164 <add_permission+0x82>
		entry->permissions = new_permission;
		return 0;
	}else{
		permission_t *curr = entry->permissions;
		while(curr->successor != NULL){
			if(role == curr->role) return 2;
    415a:	42 e0       	ldi	r20, 0x02	; 2
    415c:	50 e0       	ldi	r21, 0x00	; 0
    415e:	02 c0       	rjmp	.+4      	; 0x4164 <add_permission+0x82>
			curr = curr->successor;
		}
		if(role == curr->role) return 2;
    4160:	42 e0       	ldi	r20, 0x02	; 2
    4162:	50 e0       	ldi	r21, 0x00	; 0
		curr->successor = new_permission;		
	}
	return 0;
}
    4164:	ca 01       	movw	r24, r20
    4166:	0f 90       	pop	r0
    4168:	0f 90       	pop	r0
    416a:	df 91       	pop	r29
    416c:	cf 91       	pop	r28
    416e:	1f 91       	pop	r17
    4170:	ff 90       	pop	r15
    4172:	ef 90       	pop	r14
    4174:	df 90       	pop	r13
    4176:	cf 90       	pop	r12
    4178:	08 95       	ret

0000417a <add_permission_hex>:
#include <stdlib.h>
#include <string.h>

permission_table_t *permission_table; 

int add_permission_hex(char *hex, role_t role){
    417a:	1f 93       	push	r17
    417c:	cf 93       	push	r28
    417e:	df 93       	push	r29
    4180:	00 d0       	rcall	.+0      	; 0x4182 <add_permission_hex+0x8>
    4182:	cd b7       	in	r28, 0x3d	; 61
    4184:	de b7       	in	r29, 0x3e	; 62
    4186:	16 2f       	mov	r17, r22
	can_id_t id;
	hex_to_bytes(hex,4,id);
    4188:	ae 01       	movw	r20, r28
    418a:	4f 5f       	subi	r20, 0xFF	; 255
    418c:	5f 4f       	sbci	r21, 0xFF	; 255
    418e:	64 e0       	ldi	r22, 0x04	; 4
    4190:	0e 94 0a 18 	call	0x3014	; 0x3014 <hex_to_bytes>
	return add_permission(id,role);
    4194:	61 2f       	mov	r22, r17
    4196:	ce 01       	movw	r24, r28
    4198:	01 96       	adiw	r24, 0x01	; 1
    419a:	a3 df       	rcall	.-186    	; 0x40e2 <add_permission>
}
    419c:	0f 90       	pop	r0
    419e:	0f 90       	pop	r0
    41a0:	df 91       	pop	r29
    41a2:	cf 91       	pop	r28
    41a4:	1f 91       	pop	r17
    41a6:	08 95       	ret

000041a8 <find_permission>:
	}
	return 1;
}

int find_permission(entry_t *entry, role_t role, permission_t **dest){
	permission_t *curr = entry->permissions;
    41a8:	dc 01       	movw	r26, r24
    41aa:	12 96       	adiw	r26, 0x02	; 2
    41ac:	ed 91       	ld	r30, X+
    41ae:	fc 91       	ld	r31, X
    41b0:	13 97       	sbiw	r26, 0x03	; 3
	while(curr != NULL){
    41b2:	30 97       	sbiw	r30, 0x00	; 0
    41b4:	a9 f0       	breq	.+42     	; 0x41e0 <find_permission+0x38>
		if(role == curr->role){
    41b6:	80 81       	ld	r24, Z
    41b8:	68 13       	cpse	r22, r24
    41ba:	0a c0       	rjmp	.+20     	; 0x41d0 <find_permission+0x28>
    41bc:	03 c0       	rjmp	.+6      	; 0x41c4 <find_permission+0x1c>
    41be:	80 81       	ld	r24, Z
    41c0:	86 13       	cpse	r24, r22
    41c2:	06 c0       	rjmp	.+12     	; 0x41d0 <find_permission+0x28>
			*dest = curr;
    41c4:	da 01       	movw	r26, r20
    41c6:	ed 93       	st	X+, r30
    41c8:	fc 93       	st	X, r31
			return 0;
    41ca:	80 e0       	ldi	r24, 0x00	; 0
    41cc:	90 e0       	ldi	r25, 0x00	; 0
    41ce:	08 95       	ret
		}
		curr = curr->successor;
    41d0:	01 80       	ldd	r0, Z+1	; 0x01
    41d2:	f2 81       	ldd	r31, Z+2	; 0x02
    41d4:	e0 2d       	mov	r30, r0
	return 1;
}

int find_permission(entry_t *entry, role_t role, permission_t **dest){
	permission_t *curr = entry->permissions;
	while(curr != NULL){
    41d6:	30 97       	sbiw	r30, 0x00	; 0
    41d8:	91 f7       	brne	.-28     	; 0x41be <find_permission+0x16>
			*dest = curr;
			return 0;
		}
		curr = curr->successor;
	}
	return 1;
    41da:	81 e0       	ldi	r24, 0x01	; 1
    41dc:	90 e0       	ldi	r25, 0x00	; 0
    41de:	08 95       	ret
    41e0:	81 e0       	ldi	r24, 0x01	; 1
    41e2:	90 e0       	ldi	r25, 0x00	; 0
}
    41e4:	08 95       	ret

000041e6 <check_permission>:

int check_permission(can_id_t id, role_t role){
    41e6:	1f 93       	push	r17
    41e8:	cf 93       	push	r28
    41ea:	df 93       	push	r29
    41ec:	00 d0       	rcall	.+0      	; 0x41ee <check_permission+0x8>
    41ee:	00 d0       	rcall	.+0      	; 0x41f0 <check_permission+0xa>
    41f0:	cd b7       	in	r28, 0x3d	; 61
    41f2:	de b7       	in	r29, 0x3e	; 62
    41f4:	16 2f       	mov	r17, r22
	entry_t *entry;
	if(find_entry(id, &entry)) return 2;
    41f6:	be 01       	movw	r22, r28
    41f8:	6f 5f       	subi	r22, 0xFF	; 255
    41fa:	7f 4f       	sbci	r23, 0xFF	; 255
    41fc:	48 df       	rcall	.-368    	; 0x408e <find_entry>
    41fe:	89 2b       	or	r24, r25
    4200:	41 f4       	brne	.+16     	; 0x4212 <check_permission+0x2c>
	permission_t *p;
	return find_permission(entry, role, &p);
    4202:	ae 01       	movw	r20, r28
    4204:	4d 5f       	subi	r20, 0xFD	; 253
    4206:	5f 4f       	sbci	r21, 0xFF	; 255
    4208:	61 2f       	mov	r22, r17
    420a:	89 81       	ldd	r24, Y+1	; 0x01
    420c:	9a 81       	ldd	r25, Y+2	; 0x02
    420e:	cc df       	rcall	.-104    	; 0x41a8 <find_permission>
    4210:	02 c0       	rjmp	.+4      	; 0x4216 <check_permission+0x30>
	return 1;
}

int check_permission(can_id_t id, role_t role){
	entry_t *entry;
	if(find_entry(id, &entry)) return 2;
    4212:	82 e0       	ldi	r24, 0x02	; 2
    4214:	90 e0       	ldi	r25, 0x00	; 0
	permission_t *p;
	return find_permission(entry, role, &p);
}
    4216:	0f 90       	pop	r0
    4218:	0f 90       	pop	r0
    421a:	0f 90       	pop	r0
    421c:	0f 90       	pop	r0
    421e:	df 91       	pop	r29
    4220:	cf 91       	pop	r28
    4222:	1f 91       	pop	r17
    4224:	08 95       	ret

00004226 <init_permissions_table>:

void init_permissions_table(){
	permission_table = malloc(sizeof(permission_table_t));
    4226:	82 e0       	ldi	r24, 0x02	; 2
    4228:	90 e0       	ldi	r25, 0x00	; 0
    422a:	0e 94 fc 31 	call	0x63f8	; 0x63f8 <malloc>
    422e:	90 93 94 07 	sts	0x0794, r25	; 0x800794 <permission_table+0x1>
    4232:	80 93 93 07 	sts	0x0793, r24	; 0x800793 <permission_table>
	permission_table->head = NULL;
    4236:	fc 01       	movw	r30, r24
    4238:	11 82       	std	Z+1, r1	; 0x01
    423a:	10 82       	st	Z, r1
	add_entry_hex("0201");
    423c:	8c e4       	ldi	r24, 0x4C	; 76
    423e:	96 e0       	ldi	r25, 0x06	; 6
    4240:	11 df       	rcall	.-478    	; 0x4064 <add_entry_hex>
	add_permission_hex("0201", ADMIN_ROLE);
    4242:	60 e0       	ldi	r22, 0x00	; 0
    4244:	8c e4       	ldi	r24, 0x4C	; 76
    4246:	96 e0       	ldi	r25, 0x06	; 6
    4248:	98 df       	rcall	.-208    	; 0x417a <add_permission_hex>
	add_permission_hex("0201", OEM_ROLE);
    424a:	61 e0       	ldi	r22, 0x01	; 1
    424c:	8c e4       	ldi	r24, 0x4C	; 76
    424e:	96 e0       	ldi	r25, 0x06	; 6
    4250:	94 df       	rcall	.-216    	; 0x417a <add_permission_hex>
	add_permission_hex("0201", POLICEMAN_ROLE);
    4252:	62 e0       	ldi	r22, 0x02	; 2
    4254:	8c e4       	ldi	r24, 0x4C	; 76
    4256:	96 e0       	ldi	r25, 0x06	; 6
    4258:	90 df       	rcall	.-224    	; 0x417a <add_permission_hex>
	add_permission_hex("0201", REPAIRMAN_ROLE);
    425a:	63 e0       	ldi	r22, 0x03	; 3
    425c:	8c e4       	ldi	r24, 0x4C	; 76
    425e:	96 e0       	ldi	r25, 0x06	; 6
    4260:	8c df       	rcall	.-232    	; 0x417a <add_permission_hex>
	add_permission_hex("0201", OWNER_ROLE);
    4262:	64 e0       	ldi	r22, 0x04	; 4
    4264:	8c e4       	ldi	r24, 0x4C	; 76
    4266:	96 e0       	ldi	r25, 0x06	; 6
    4268:	88 df       	rcall	.-240    	; 0x417a <add_permission_hex>
	add_entry_hex("0402");
    426a:	81 e5       	ldi	r24, 0x51	; 81
    426c:	96 e0       	ldi	r25, 0x06	; 6
    426e:	fa de       	rcall	.-524    	; 0x4064 <add_entry_hex>
	add_permission_hex("0402", ADMIN_ROLE);
    4270:	60 e0       	ldi	r22, 0x00	; 0
    4272:	81 e5       	ldi	r24, 0x51	; 81
    4274:	96 e0       	ldi	r25, 0x06	; 6
    4276:	81 df       	rcall	.-254    	; 0x417a <add_permission_hex>
	add_permission_hex("0402", OEM_ROLE);
    4278:	61 e0       	ldi	r22, 0x01	; 1
    427a:	81 e5       	ldi	r24, 0x51	; 81
    427c:	96 e0       	ldi	r25, 0x06	; 6
    427e:	7d df       	rcall	.-262    	; 0x417a <add_permission_hex>
	add_permission_hex("0402", REPAIRMAN_ROLE);
    4280:	63 e0       	ldi	r22, 0x03	; 3
    4282:	81 e5       	ldi	r24, 0x51	; 81
    4284:	96 e0       	ldi	r25, 0x06	; 6
    4286:	79 df       	rcall	.-270    	; 0x417a <add_permission_hex>
	add_entry_hex("0000");
    4288:	86 e5       	ldi	r24, 0x56	; 86
    428a:	96 e0       	ldi	r25, 0x06	; 6
    428c:	eb de       	rcall	.-554    	; 0x4064 <add_entry_hex>
	add_permission_hex("0000", ADMIN_ROLE);
    428e:	60 e0       	ldi	r22, 0x00	; 0
    4290:	86 e5       	ldi	r24, 0x56	; 86
    4292:	96 e0       	ldi	r25, 0x06	; 6
    4294:	72 df       	rcall	.-284    	; 0x417a <add_permission_hex>
    4296:	61 e0       	ldi	r22, 0x01	; 1
	add_permission_hex("0000", OEM_ROLE);
    4298:	86 e5       	ldi	r24, 0x56	; 86
    429a:	96 e0       	ldi	r25, 0x06	; 6
    429c:	6e cf       	rjmp	.-292    	; 0x417a <add_permission_hex>
    429e:	08 95       	ret

000042a0 <hmac_sha256>:
    42a0:	2f 92       	push	r2
    42a2:	3f 92       	push	r3
    42a4:	4f 92       	push	r4
    42a6:	5f 92       	push	r5
    42a8:	6f 92       	push	r6
    42aa:	7f 92       	push	r7
    42ac:	8f 92       	push	r8
    42ae:	9f 92       	push	r9
    42b0:	af 92       	push	r10
    42b2:	bf 92       	push	r11
    42b4:	cf 92       	push	r12
    42b6:	df 92       	push	r13
    42b8:	ef 92       	push	r14
    42ba:	ff 92       	push	r15
    42bc:	0f 93       	push	r16
    42be:	1f 93       	push	r17
    42c0:	cf 93       	push	r28
    42c2:	df 93       	push	r29
    42c4:	cd b7       	in	r28, 0x3d	; 61
    42c6:	de b7       	in	r29, 0x3e	; 62
    42c8:	c8 56       	subi	r28, 0x68	; 104
    42ca:	d1 09       	sbc	r29, r1
    42cc:	0f b6       	in	r0, 0x3f	; 63
    42ce:	f8 94       	cli
    42d0:	de bf       	out	0x3e, r29	; 62
    42d2:	0f be       	out	0x3f, r0	; 63
    42d4:	cd bf       	out	0x3d, r28	; 61
    42d6:	1c 01       	movw	r2, r24
    42d8:	49 01       	movw	r8, r18
    42da:	a9 96       	adiw	r28, 0x29	; 41
    42dc:	ec ae       	std	Y+60, r14	; 0x3c
    42de:	fd ae       	std	Y+61, r15	; 0x3d
    42e0:	0e af       	std	Y+62, r16	; 0x3e
    42e2:	1f af       	std	Y+63, r17	; 0x3f
    42e4:	a9 97       	sbiw	r28, 0x29	; 41
    42e6:	fe 01       	movw	r30, r28
    42e8:	b5 96       	adiw	r30, 0x25	; 37
    42ea:	80 e4       	ldi	r24, 0x40	; 64
    42ec:	df 01       	movw	r26, r30
    42ee:	1d 92       	st	X+, r1
    42f0:	8a 95       	dec	r24
    42f2:	e9 f7       	brne	.-6      	; 0x42ee <hmac_sha256+0x4e>
    42f4:	41 30       	cpi	r20, 0x01	; 1
    42f6:	b2 e0       	ldi	r27, 0x02	; 2
    42f8:	5b 07       	cpc	r21, r27
    42fa:	30 f0       	brcs	.+12     	; 0x4308 <hmac_sha256+0x68>
    42fc:	9a 01       	movw	r18, r20
    42fe:	40 e0       	ldi	r20, 0x00	; 0
    4300:	50 e0       	ldi	r21, 0x00	; 0
    4302:	cf 01       	movw	r24, r30
    4304:	e5 d0       	rcall	.+458    	; 0x44d0 <sha256>
    4306:	96 c0       	rjmp	.+300    	; 0x4434 <hmac_sha256+0x194>
    4308:	49 5f       	subi	r20, 0xF9	; 249
    430a:	5f 4f       	sbci	r21, 0xFF	; 255
    430c:	56 95       	lsr	r21
    430e:	47 95       	ror	r20
    4310:	56 95       	lsr	r21
    4312:	47 95       	ror	r20
    4314:	56 95       	lsr	r21
    4316:	47 95       	ror	r20
    4318:	ce 01       	movw	r24, r28
    431a:	85 96       	adiw	r24, 0x25	; 37
    431c:	0e 94 8c 33 	call	0x6718	; 0x6718 <memcpy>
    4320:	89 c0       	rjmp	.+274    	; 0x4434 <hmac_sha256+0x194>
    4322:	80 81       	ld	r24, Z
    4324:	89 27       	eor	r24, r25
    4326:	81 93       	st	Z+, r24
    4328:	ec 15       	cp	r30, r12
    432a:	fd 05       	cpc	r31, r13
    432c:	d1 f7       	brne	.-12     	; 0x4322 <hmac_sha256+0x82>
    432e:	ce 01       	movw	r24, r28
    4330:	01 96       	adiw	r24, 0x01	; 1
    4332:	a4 d0       	rcall	.+328    	; 0x447c <sha256_init>
    4334:	be 01       	movw	r22, r28
    4336:	6b 5d       	subi	r22, 0xDB	; 219
    4338:	7f 4f       	sbci	r23, 0xFF	; 255
    433a:	ce 01       	movw	r24, r28
    433c:	01 96       	adiw	r24, 0x01	; 1
    433e:	aa d0       	rcall	.+340    	; 0x4494 <sha256_nextBlock>
    4340:	a9 96       	adiw	r28, 0x29	; 41
    4342:	8c ad       	ldd	r24, Y+60	; 0x3c
    4344:	9d ad       	ldd	r25, Y+61	; 0x3d
    4346:	ae ad       	ldd	r26, Y+62	; 0x3e
    4348:	bf ad       	ldd	r27, Y+63	; 0x3f
    434a:	a9 97       	sbiw	r28, 0x29	; 41
    434c:	81 15       	cp	r24, r1
    434e:	e2 e0       	ldi	r30, 0x02	; 2
    4350:	9e 07       	cpc	r25, r30
    4352:	a1 05       	cpc	r26, r1
    4354:	b1 05       	cpc	r27, r1
    4356:	08 f4       	brcc	.+2      	; 0x435a <hmac_sha256+0xba>
    4358:	41 c0       	rjmp	.+130    	; 0x43dc <hmac_sha256+0x13c>
    435a:	2c 01       	movw	r4, r24
    435c:	3d 01       	movw	r6, r26
    435e:	54 01       	movw	r10, r8
    4360:	b5 01       	movw	r22, r10
    4362:	ce 01       	movw	r24, r28
    4364:	01 96       	adiw	r24, 0x01	; 1
    4366:	96 d0       	rcall	.+300    	; 0x4494 <sha256_nextBlock>
    4368:	f0 e4       	ldi	r31, 0x40	; 64
    436a:	af 0e       	add	r10, r31
    436c:	b1 1c       	adc	r11, r1
    436e:	22 e0       	ldi	r18, 0x02	; 2
    4370:	52 1a       	sub	r5, r18
    4372:	61 08       	sbc	r6, r1
    4374:	71 08       	sbc	r7, r1
    4376:	41 14       	cp	r4, r1
    4378:	82 e0       	ldi	r24, 0x02	; 2
    437a:	58 06       	cpc	r5, r24
    437c:	61 04       	cpc	r6, r1
    437e:	71 04       	cpc	r7, r1
    4380:	78 f7       	brcc	.-34     	; 0x4360 <hmac_sha256+0xc0>
    4382:	a9 96       	adiw	r28, 0x29	; 41
    4384:	8c ad       	ldd	r24, Y+60	; 0x3c
    4386:	9d ad       	ldd	r25, Y+61	; 0x3d
    4388:	ae ad       	ldd	r26, Y+62	; 0x3e
    438a:	bf ad       	ldd	r27, Y+63	; 0x3f
    438c:	a9 97       	sbiw	r28, 0x29	; 41
    438e:	92 50       	subi	r25, 0x02	; 2
    4390:	a1 09       	sbc	r26, r1
    4392:	b1 09       	sbc	r27, r1
    4394:	07 2e       	mov	r0, r23
    4396:	79 e0       	ldi	r23, 0x09	; 9
    4398:	b6 95       	lsr	r27
    439a:	a7 95       	ror	r26
    439c:	97 95       	ror	r25
    439e:	87 95       	ror	r24
    43a0:	7a 95       	dec	r23
    43a2:	d1 f7       	brne	.-12     	; 0x4398 <hmac_sha256+0xf8>
    43a4:	70 2d       	mov	r23, r0
    43a6:	01 96       	adiw	r24, 0x01	; 1
    43a8:	00 24       	eor	r0, r0
    43aa:	96 95       	lsr	r25
    43ac:	87 95       	ror	r24
    43ae:	07 94       	ror	r0
    43b0:	96 95       	lsr	r25
    43b2:	87 95       	ror	r24
    43b4:	07 94       	ror	r0
    43b6:	98 2f       	mov	r25, r24
    43b8:	80 2d       	mov	r24, r0
    43ba:	88 0e       	add	r8, r24
    43bc:	99 1e       	adc	r9, r25
    43be:	a9 96       	adiw	r28, 0x29	; 41
    43c0:	8c ad       	ldd	r24, Y+60	; 0x3c
    43c2:	9d ad       	ldd	r25, Y+61	; 0x3d
    43c4:	ae ad       	ldd	r26, Y+62	; 0x3e
    43c6:	bf ad       	ldd	r27, Y+63	; 0x3f
    43c8:	a9 97       	sbiw	r28, 0x29	; 41
    43ca:	91 70       	andi	r25, 0x01	; 1
    43cc:	aa 27       	eor	r26, r26
    43ce:	bb 27       	eor	r27, r27
    43d0:	a9 96       	adiw	r28, 0x29	; 41
    43d2:	8c af       	std	Y+60, r24	; 0x3c
    43d4:	9d af       	std	Y+61, r25	; 0x3d
    43d6:	ae af       	std	Y+62, r26	; 0x3e
    43d8:	bf af       	std	Y+63, r27	; 0x3f
    43da:	a9 97       	sbiw	r28, 0x29	; 41
    43dc:	a7 96       	adiw	r28, 0x27	; 39
    43de:	4e ad       	ldd	r20, Y+62	; 0x3e
    43e0:	5f ad       	ldd	r21, Y+63	; 0x3f
    43e2:	a7 97       	sbiw	r28, 0x27	; 39
    43e4:	b4 01       	movw	r22, r8
    43e6:	ce 01       	movw	r24, r28
    43e8:	01 96       	adiw	r24, 0x01	; 1
    43ea:	57 d0       	rcall	.+174    	; 0x449a <sha256_lastBlock>
    43ec:	9a e6       	ldi	r25, 0x6A	; 106
    43ee:	d8 01       	movw	r26, r16
    43f0:	8c 91       	ld	r24, X
    43f2:	89 27       	eor	r24, r25
    43f4:	f8 01       	movw	r30, r16
    43f6:	81 93       	st	Z+, r24
    43f8:	8f 01       	movw	r16, r30
    43fa:	ec 15       	cp	r30, r12
    43fc:	fd 05       	cpc	r31, r13
    43fe:	b9 f7       	brne	.-18     	; 0x43ee <hmac_sha256+0x14e>
    4400:	be 01       	movw	r22, r28
    4402:	6f 5f       	subi	r22, 0xFF	; 255
    4404:	7f 4f       	sbci	r23, 0xFF	; 255
    4406:	c1 01       	movw	r24, r2
    4408:	4b d0       	rcall	.+150    	; 0x44a0 <sha256_ctx2hash>
    440a:	ce 01       	movw	r24, r28
    440c:	01 96       	adiw	r24, 0x01	; 1
    440e:	36 d0       	rcall	.+108    	; 0x447c <sha256_init>
    4410:	be 01       	movw	r22, r28
    4412:	6b 5d       	subi	r22, 0xDB	; 219
    4414:	7f 4f       	sbci	r23, 0xFF	; 255
    4416:	ce 01       	movw	r24, r28
    4418:	01 96       	adiw	r24, 0x01	; 1
    441a:	3c d0       	rcall	.+120    	; 0x4494 <sha256_nextBlock>
    441c:	40 e0       	ldi	r20, 0x00	; 0
    441e:	51 e0       	ldi	r21, 0x01	; 1
    4420:	b1 01       	movw	r22, r2
    4422:	ce 01       	movw	r24, r28
    4424:	01 96       	adiw	r24, 0x01	; 1
    4426:	39 d0       	rcall	.+114    	; 0x449a <sha256_lastBlock>
    4428:	be 01       	movw	r22, r28
    442a:	6f 5f       	subi	r22, 0xFF	; 255
    442c:	7f 4f       	sbci	r23, 0xFF	; 255
    442e:	c1 01       	movw	r24, r2
    4430:	37 d0       	rcall	.+110    	; 0x44a0 <sha256_ctx2hash>
    4432:	0a c0       	rjmp	.+20     	; 0x4448 <hmac_sha256+0x1a8>
    4434:	8e 01       	movw	r16, r28
    4436:	0b 5d       	subi	r16, 0xDB	; 219
    4438:	1f 4f       	sbci	r17, 0xFF	; 255
    443a:	6e 01       	movw	r12, r28
    443c:	f5 e6       	ldi	r31, 0x65	; 101
    443e:	cf 0e       	add	r12, r31
    4440:	d1 1c       	adc	r13, r1
    4442:	f8 01       	movw	r30, r16
    4444:	96 e3       	ldi	r25, 0x36	; 54
    4446:	6d cf       	rjmp	.-294    	; 0x4322 <hmac_sha256+0x82>
    4448:	c8 59       	subi	r28, 0x98	; 152
    444a:	df 4f       	sbci	r29, 0xFF	; 255
    444c:	0f b6       	in	r0, 0x3f	; 63
    444e:	f8 94       	cli
    4450:	de bf       	out	0x3e, r29	; 62
    4452:	0f be       	out	0x3f, r0	; 63
    4454:	cd bf       	out	0x3d, r28	; 61
    4456:	df 91       	pop	r29
    4458:	cf 91       	pop	r28
    445a:	1f 91       	pop	r17
    445c:	0f 91       	pop	r16
    445e:	ff 90       	pop	r15
    4460:	ef 90       	pop	r14
    4462:	df 90       	pop	r13
    4464:	cf 90       	pop	r12
    4466:	bf 90       	pop	r11
    4468:	af 90       	pop	r10
    446a:	9f 90       	pop	r9
    446c:	8f 90       	pop	r8
    446e:	7f 90       	pop	r7
    4470:	6f 90       	pop	r6
    4472:	5f 90       	pop	r5
    4474:	4f 90       	pop	r4
    4476:	3f 90       	pop	r3
    4478:	2f 90       	pop	r2
    447a:	08 95       	ret

0000447c <sha256_init>:
    447c:	fc 01       	movw	r30, r24
    447e:	10 a2       	std	Z+32, r1	; 0x20
    4480:	11 a2       	std	Z+33, r1	; 0x21
    4482:	12 a2       	std	Z+34, r1	; 0x22
    4484:	13 a2       	std	Z+35, r1	; 0x23
    4486:	40 e2       	ldi	r20, 0x20	; 32
    4488:	50 e0       	ldi	r21, 0x00	; 0
    448a:	64 e9       	ldi	r22, 0x94	; 148
    448c:	70 e0       	ldi	r23, 0x00	; 0
    448e:	0c 94 76 33 	jmp	0x66ec	; 0x66ec <memcpy_P>
    4492:	08 95       	ret

00004494 <sha256_nextBlock>:
    4494:	0c 94 a9 2c 	jmp	0x5952	; 0x5952 <sha2_small_common_nextBlock>
    4498:	08 95       	ret

0000449a <sha256_lastBlock>:
    449a:	0c 94 b9 2f 	jmp	0x5f72	; 0x5f72 <sha2_small_common_lastBlock>
    449e:	08 95       	ret

000044a0 <sha256_ctx2hash>:
    44a0:	cf 93       	push	r28
    44a2:	df 93       	push	r29
    44a4:	ac 01       	movw	r20, r24
    44a6:	ec 01       	movw	r28, r24
    44a8:	a0 96       	adiw	r28, 0x20	; 32
    44aa:	fa 01       	movw	r30, r20
    44ac:	93 e0       	ldi	r25, 0x03	; 3
    44ae:	db 01       	movw	r26, r22
    44b0:	a9 0f       	add	r26, r25
    44b2:	b1 1d       	adc	r27, r1
    44b4:	2c 91       	ld	r18, X
    44b6:	21 93       	st	Z+, r18
    44b8:	91 50       	subi	r25, 0x01	; 1
    44ba:	c8 f7       	brcc	.-14     	; 0x44ae <sha256_ctx2hash+0xe>
    44bc:	4c 5f       	subi	r20, 0xFC	; 252
    44be:	5f 4f       	sbci	r21, 0xFF	; 255
    44c0:	6c 5f       	subi	r22, 0xFC	; 252
    44c2:	7f 4f       	sbci	r23, 0xFF	; 255
    44c4:	4c 17       	cp	r20, r28
    44c6:	5d 07       	cpc	r21, r29
    44c8:	81 f7       	brne	.-32     	; 0x44aa <sha256_ctx2hash+0xa>
    44ca:	df 91       	pop	r29
    44cc:	cf 91       	pop	r28
    44ce:	08 95       	ret

000044d0 <sha256>:
    44d0:	4f 92       	push	r4
    44d2:	5f 92       	push	r5
    44d4:	6f 92       	push	r6
    44d6:	7f 92       	push	r7
    44d8:	8f 92       	push	r8
    44da:	9f 92       	push	r9
    44dc:	af 92       	push	r10
    44de:	bf 92       	push	r11
    44e0:	cf 92       	push	r12
    44e2:	df 92       	push	r13
    44e4:	ef 92       	push	r14
    44e6:	ff 92       	push	r15
    44e8:	0f 93       	push	r16
    44ea:	1f 93       	push	r17
    44ec:	cf 93       	push	r28
    44ee:	df 93       	push	r29
    44f0:	cd b7       	in	r28, 0x3d	; 61
    44f2:	de b7       	in	r29, 0x3e	; 62
    44f4:	a4 97       	sbiw	r28, 0x24	; 36
    44f6:	0f b6       	in	r0, 0x3f	; 63
    44f8:	f8 94       	cli
    44fa:	de bf       	out	0x3e, r29	; 62
    44fc:	0f be       	out	0x3f, r0	; 63
    44fe:	cd bf       	out	0x3d, r28	; 61
    4500:	4c 01       	movw	r8, r24
    4502:	5b 01       	movw	r10, r22
    4504:	69 01       	movw	r12, r18
    4506:	7a 01       	movw	r14, r20
    4508:	ce 01       	movw	r24, r28
    450a:	01 96       	adiw	r24, 0x01	; 1
    450c:	b7 df       	rcall	.-146    	; 0x447c <sha256_init>
    450e:	c1 14       	cp	r12, r1
    4510:	82 e0       	ldi	r24, 0x02	; 2
    4512:	d8 06       	cpc	r13, r24
    4514:	e1 04       	cpc	r14, r1
    4516:	f1 04       	cpc	r15, r1
    4518:	90 f1       	brcs	.+100    	; 0x457e <sha256+0xae>
    451a:	26 01       	movw	r4, r12
    451c:	37 01       	movw	r6, r14
    451e:	85 01       	movw	r16, r10
    4520:	b8 01       	movw	r22, r16
    4522:	ce 01       	movw	r24, r28
    4524:	01 96       	adiw	r24, 0x01	; 1
    4526:	0e 94 a9 2c 	call	0x5952	; 0x5952 <sha2_small_common_nextBlock>
    452a:	00 5c       	subi	r16, 0xC0	; 192
    452c:	1f 4f       	sbci	r17, 0xFF	; 255
    452e:	82 e0       	ldi	r24, 0x02	; 2
    4530:	58 1a       	sub	r5, r24
    4532:	61 08       	sbc	r6, r1
    4534:	71 08       	sbc	r7, r1
    4536:	41 14       	cp	r4, r1
    4538:	82 e0       	ldi	r24, 0x02	; 2
    453a:	58 06       	cpc	r5, r24
    453c:	61 04       	cpc	r6, r1
    453e:	71 04       	cpc	r7, r1
    4540:	78 f7       	brcc	.-34     	; 0x4520 <sha256+0x50>
    4542:	d7 01       	movw	r26, r14
    4544:	c6 01       	movw	r24, r12
    4546:	92 50       	subi	r25, 0x02	; 2
    4548:	a1 09       	sbc	r26, r1
    454a:	b1 09       	sbc	r27, r1
    454c:	07 2e       	mov	r0, r23
    454e:	79 e0       	ldi	r23, 0x09	; 9
    4550:	b6 95       	lsr	r27
    4552:	a7 95       	ror	r26
    4554:	97 95       	ror	r25
    4556:	87 95       	ror	r24
    4558:	7a 95       	dec	r23
    455a:	d1 f7       	brne	.-12     	; 0x4550 <sha256+0x80>
    455c:	70 2d       	mov	r23, r0
    455e:	01 96       	adiw	r24, 0x01	; 1
    4560:	00 24       	eor	r0, r0
    4562:	96 95       	lsr	r25
    4564:	87 95       	ror	r24
    4566:	07 94       	ror	r0
    4568:	96 95       	lsr	r25
    456a:	87 95       	ror	r24
    456c:	07 94       	ror	r0
    456e:	98 2f       	mov	r25, r24
    4570:	80 2d       	mov	r24, r0
    4572:	a8 0e       	add	r10, r24
    4574:	b9 1e       	adc	r11, r25
    4576:	81 e0       	ldi	r24, 0x01	; 1
    4578:	d8 22       	and	r13, r24
    457a:	ee 24       	eor	r14, r14
    457c:	ff 24       	eor	r15, r15
    457e:	a6 01       	movw	r20, r12
    4580:	b5 01       	movw	r22, r10
    4582:	ce 01       	movw	r24, r28
    4584:	01 96       	adiw	r24, 0x01	; 1
    4586:	0e 94 b9 2f 	call	0x5f72	; 0x5f72 <sha2_small_common_lastBlock>
    458a:	be 01       	movw	r22, r28
    458c:	6f 5f       	subi	r22, 0xFF	; 255
    458e:	7f 4f       	sbci	r23, 0xFF	; 255
    4590:	c4 01       	movw	r24, r8
    4592:	86 df       	rcall	.-244    	; 0x44a0 <sha256_ctx2hash>
    4594:	a4 96       	adiw	r28, 0x24	; 36
    4596:	0f b6       	in	r0, 0x3f	; 63
    4598:	f8 94       	cli
    459a:	de bf       	out	0x3e, r29	; 62
    459c:	0f be       	out	0x3f, r0	; 63
    459e:	cd bf       	out	0x3d, r28	; 61
    45a0:	df 91       	pop	r29
    45a2:	cf 91       	pop	r28
    45a4:	1f 91       	pop	r17
    45a6:	0f 91       	pop	r16
    45a8:	ff 90       	pop	r15
    45aa:	ef 90       	pop	r14
    45ac:	df 90       	pop	r13
    45ae:	cf 90       	pop	r12
    45b0:	bf 90       	pop	r11
    45b2:	af 90       	pop	r10
    45b4:	9f 90       	pop	r9
    45b6:	8f 90       	pop	r8
    45b8:	7f 90       	pop	r7
    45ba:	6f 90       	pop	r6
    45bc:	5f 90       	pop	r5
    45be:	4f 90       	pop	r4
    45c0:	08 95       	ret

000045c2 <sha2_large_common_nextBlock>:
    45c2:	2f 92       	push	r2
    45c4:	3f 92       	push	r3
    45c6:	4f 92       	push	r4
    45c8:	5f 92       	push	r5
    45ca:	6f 92       	push	r6
    45cc:	7f 92       	push	r7
    45ce:	8f 92       	push	r8
    45d0:	9f 92       	push	r9
    45d2:	af 92       	push	r10
    45d4:	bf 92       	push	r11
    45d6:	cf 92       	push	r12
    45d8:	df 92       	push	r13
    45da:	ef 92       	push	r14
    45dc:	ff 92       	push	r15
    45de:	0f 93       	push	r16
    45e0:	1f 93       	push	r17
    45e2:	cf 93       	push	r28
    45e4:	df 93       	push	r29
    45e6:	cd b7       	in	r28, 0x3d	; 61
    45e8:	de b7       	in	r29, 0x3e	; 62
    45ea:	ca 5e       	subi	r28, 0xEA	; 234
    45ec:	d1 09       	sbc	r29, r1
    45ee:	0f b6       	in	r0, 0x3f	; 63
    45f0:	f8 94       	cli
    45f2:	de bf       	out	0x3e, r29	; 62
    45f4:	0f be       	out	0x3f, r0	; 63
    45f6:	cd bf       	out	0x3d, r28	; 61
    45f8:	c7 51       	subi	r28, 0x17	; 23
    45fa:	df 4f       	sbci	r29, 0xFF	; 255
    45fc:	99 83       	std	Y+1, r25	; 0x01
    45fe:	88 83       	st	Y, r24
    4600:	c9 5e       	subi	r28, 0xE9	; 233
    4602:	d0 40       	sbci	r29, 0x00	; 0
    4604:	ce 01       	movw	r24, r28
    4606:	01 96       	adiw	r24, 0x01	; 1
    4608:	c5 52       	subi	r28, 0x25	; 37
    460a:	df 4f       	sbci	r29, 0xFF	; 255
    460c:	99 83       	std	Y+1, r25	; 0x01
    460e:	88 83       	st	Y, r24
    4610:	cb 5d       	subi	r28, 0xDB	; 219
    4612:	d0 40       	sbci	r29, 0x00	; 0
    4614:	fe 01       	movw	r30, r28
    4616:	ef 57       	subi	r30, 0x7F	; 127
    4618:	ff 4f       	sbci	r31, 0xFF	; 255
    461a:	c7 53       	subi	r28, 0x37	; 55
    461c:	df 4f       	sbci	r29, 0xFF	; 255
    461e:	f9 83       	std	Y+1, r31	; 0x01
    4620:	e8 83       	st	Y, r30
    4622:	c9 5c       	subi	r28, 0xC9	; 201
    4624:	d0 40       	sbci	r29, 0x00	; 0
    4626:	2c 01       	movw	r4, r24
    4628:	c9 51       	subi	r28, 0x19	; 25
    462a:	df 4f       	sbci	r29, 0xFF	; 255
    462c:	79 83       	std	Y+1, r23	; 0x01
    462e:	68 83       	st	Y, r22
    4630:	c7 5e       	subi	r28, 0xE7	; 231
    4632:	d0 40       	sbci	r29, 0x00	; 0
    4634:	c9 51       	subi	r28, 0x19	; 25
    4636:	df 4f       	sbci	r29, 0xFF	; 255
    4638:	a8 81       	ld	r26, Y
    463a:	b9 81       	ldd	r27, Y+1	; 0x01
    463c:	c7 5e       	subi	r28, 0xE7	; 231
    463e:	d0 40       	sbci	r29, 0x00	; 0
    4640:	bc 91       	ld	r27, X
    4642:	c5 53       	subi	r28, 0x35	; 53
    4644:	df 4f       	sbci	r29, 0xFF	; 255
    4646:	b8 83       	st	Y, r27
    4648:	cb 5c       	subi	r28, 0xCB	; 203
    464a:	d0 40       	sbci	r29, 0x00	; 0
    464c:	c9 51       	subi	r28, 0x19	; 25
    464e:	df 4f       	sbci	r29, 0xFF	; 255
    4650:	e8 81       	ld	r30, Y
    4652:	f9 81       	ldd	r31, Y+1	; 0x01
    4654:	c7 5e       	subi	r28, 0xE7	; 231
    4656:	d0 40       	sbci	r29, 0x00	; 0
    4658:	71 80       	ldd	r7, Z+1	; 0x01
    465a:	82 80       	ldd	r8, Z+2	; 0x02
    465c:	93 80       	ldd	r9, Z+3	; 0x03
    465e:	a4 80       	ldd	r10, Z+4	; 0x04
    4660:	b5 80       	ldd	r11, Z+5	; 0x05
    4662:	a6 81       	ldd	r26, Z+6	; 0x06
    4664:	b7 81       	ldd	r27, Z+7	; 0x07
    4666:	38 96       	adiw	r30, 0x08	; 8
    4668:	c9 51       	subi	r28, 0x19	; 25
    466a:	df 4f       	sbci	r29, 0xFF	; 255
    466c:	f9 83       	std	Y+1, r31	; 0x01
    466e:	e8 83       	st	Y, r30
    4670:	c7 5e       	subi	r28, 0xE7	; 231
    4672:	d0 40       	sbci	r29, 0x00	; 0
    4674:	68 94       	set
    4676:	66 24       	eor	r6, r6
    4678:	63 f8       	bld	r6, 3
    467a:	c1 2c       	mov	r12, r1
    467c:	d1 2c       	mov	r13, r1
    467e:	e1 2c       	mov	r14, r1
    4680:	f1 2c       	mov	r15, r1
    4682:	10 e0       	ldi	r17, 0x00	; 0
    4684:	f0 e0       	ldi	r31, 0x00	; 0
    4686:	21 2c       	mov	r2, r1
    4688:	31 2c       	mov	r3, r1
    468a:	2c 2d       	mov	r18, r12
    468c:	3d 2d       	mov	r19, r13
    468e:	4e 2d       	mov	r20, r14
    4690:	5f 2d       	mov	r21, r15
    4692:	61 2f       	mov	r22, r17
    4694:	7f 2f       	mov	r23, r31
    4696:	82 2d       	mov	r24, r2
    4698:	93 2d       	mov	r25, r3
    469a:	08 e0       	ldi	r16, 0x08	; 8
    469c:	0e 94 a1 31 	call	0x6342	; 0x6342 <__ashldi3>
    46a0:	c5 53       	subi	r28, 0x35	; 53
    46a2:	df 4f       	sbci	r29, 0xFF	; 255
    46a4:	c8 80       	ld	r12, Y
    46a6:	cb 5c       	subi	r28, 0xCB	; 203
    46a8:	d0 40       	sbci	r29, 0x00	; 0
    46aa:	c2 2a       	or	r12, r18
    46ac:	d3 2e       	mov	r13, r19
    46ae:	e4 2e       	mov	r14, r20
    46b0:	f5 2e       	mov	r15, r21
    46b2:	16 2f       	mov	r17, r22
    46b4:	f7 2f       	mov	r31, r23
    46b6:	28 2e       	mov	r2, r24
    46b8:	39 2e       	mov	r3, r25
    46ba:	c5 53       	subi	r28, 0x35	; 53
    46bc:	df 4f       	sbci	r29, 0xFF	; 255
    46be:	28 81       	ld	r18, Y
    46c0:	cb 5c       	subi	r28, 0xCB	; 203
    46c2:	d0 40       	sbci	r29, 0x00	; 0
    46c4:	37 2d       	mov	r19, r7
    46c6:	48 2d       	mov	r20, r8
    46c8:	59 2d       	mov	r21, r9
    46ca:	6a 2d       	mov	r22, r10
    46cc:	7b 2d       	mov	r23, r11
    46ce:	8a 2f       	mov	r24, r26
    46d0:	9b 2f       	mov	r25, r27
    46d2:	0e 94 bc 31 	call	0x6378	; 0x6378 <__lshrdi3>
    46d6:	c5 53       	subi	r28, 0x35	; 53
    46d8:	df 4f       	sbci	r29, 0xFF	; 255
    46da:	28 83       	st	Y, r18
    46dc:	cb 5c       	subi	r28, 0xCB	; 203
    46de:	d0 40       	sbci	r29, 0x00	; 0
    46e0:	73 2e       	mov	r7, r19
    46e2:	84 2e       	mov	r8, r20
    46e4:	95 2e       	mov	r9, r21
    46e6:	a6 2e       	mov	r10, r22
    46e8:	b7 2e       	mov	r11, r23
    46ea:	a8 2f       	mov	r26, r24
    46ec:	b9 2f       	mov	r27, r25
    46ee:	6a 94       	dec	r6
    46f0:	61 10       	cpse	r6, r1
    46f2:	cb cf       	rjmp	.-106    	; 0x468a <sha2_large_common_nextBlock+0xc8>
    46f4:	d2 01       	movw	r26, r4
    46f6:	cc 92       	st	X, r12
    46f8:	11 96       	adiw	r26, 0x01	; 1
    46fa:	dc 92       	st	X, r13
    46fc:	11 97       	sbiw	r26, 0x01	; 1
    46fe:	12 96       	adiw	r26, 0x02	; 2
    4700:	ec 92       	st	X, r14
    4702:	12 97       	sbiw	r26, 0x02	; 2
    4704:	13 96       	adiw	r26, 0x03	; 3
    4706:	fc 92       	st	X, r15
    4708:	13 97       	sbiw	r26, 0x03	; 3
    470a:	14 96       	adiw	r26, 0x04	; 4
    470c:	1c 93       	st	X, r17
    470e:	14 97       	sbiw	r26, 0x04	; 4
    4710:	15 96       	adiw	r26, 0x05	; 5
    4712:	fc 93       	st	X, r31
    4714:	15 97       	sbiw	r26, 0x05	; 5
    4716:	16 96       	adiw	r26, 0x06	; 6
    4718:	2c 92       	st	X, r2
    471a:	16 97       	sbiw	r26, 0x06	; 6
    471c:	17 96       	adiw	r26, 0x07	; 7
    471e:	3c 92       	st	X, r3
    4720:	b8 e0       	ldi	r27, 0x08	; 8
    4722:	4b 0e       	add	r4, r27
    4724:	51 1c       	adc	r5, r1
    4726:	c7 53       	subi	r28, 0x37	; 55
    4728:	df 4f       	sbci	r29, 0xFF	; 255
    472a:	e8 81       	ld	r30, Y
    472c:	f9 81       	ldd	r31, Y+1	; 0x01
    472e:	c9 5c       	subi	r28, 0xC9	; 201
    4730:	d0 40       	sbci	r29, 0x00	; 0
    4732:	e4 15       	cp	r30, r4
    4734:	f5 05       	cpc	r31, r5
    4736:	09 f0       	breq	.+2      	; 0x473a <sha2_large_common_nextBlock+0x178>
    4738:	7d cf       	rjmp	.-262    	; 0x4634 <sha2_large_common_nextBlock+0x72>
    473a:	80 e4       	ldi	r24, 0x40	; 64
    473c:	c7 51       	subi	r28, 0x17	; 23
    473e:	df 4f       	sbci	r29, 0xFF	; 255
    4740:	e8 81       	ld	r30, Y
    4742:	f9 81       	ldd	r31, Y+1	; 0x01
    4744:	c9 5e       	subi	r28, 0xE9	; 233
    4746:	d0 40       	sbci	r29, 0x00	; 0
    4748:	de 01       	movw	r26, r28
    474a:	af 57       	subi	r26, 0x7F	; 127
    474c:	bf 4f       	sbci	r27, 0xFF	; 255
    474e:	01 90       	ld	r0, Z+
    4750:	0d 92       	st	X+, r0
    4752:	8a 95       	dec	r24
    4754:	e1 f7       	brne	.-8      	; 0x474e <sha2_large_common_nextBlock+0x18c>
    4756:	84 eb       	ldi	r24, 0xB4	; 180
    4758:	90 e0       	ldi	r25, 0x00	; 0
    475a:	cf 52       	subi	r28, 0x2F	; 47
    475c:	df 4f       	sbci	r29, 0xFF	; 255
    475e:	99 83       	std	Y+1, r25	; 0x01
    4760:	88 83       	st	Y, r24
    4762:	c1 5d       	subi	r28, 0xD1	; 209
    4764:	d0 40       	sbci	r29, 0x00	; 0
    4766:	c0 53       	subi	r28, 0x30	; 48
    4768:	df 4f       	sbci	r29, 0xFF	; 255
    476a:	18 82       	st	Y, r1
    476c:	c0 5d       	subi	r28, 0xD0	; 208
    476e:	d0 40       	sbci	r29, 0x00	; 0
    4770:	a1 e8       	ldi	r26, 0x81	; 129
    4772:	b0 e0       	ldi	r27, 0x00	; 0
    4774:	ac 0f       	add	r26, r28
    4776:	bd 1f       	adc	r27, r29
    4778:	18 96       	adiw	r26, 0x08	; 8
    477a:	c9 51       	subi	r28, 0x19	; 25
    477c:	df 4f       	sbci	r29, 0xFF	; 255
    477e:	b9 83       	std	Y+1, r27	; 0x01
    4780:	a8 83       	st	Y, r26
    4782:	c7 5e       	subi	r28, 0xE7	; 231
    4784:	d0 40       	sbci	r29, 0x00	; 0
    4786:	c0 53       	subi	r28, 0x30	; 48
    4788:	df 4f       	sbci	r29, 0xFF	; 255
    478a:	b8 81       	ld	r27, Y
    478c:	c0 5d       	subi	r28, 0xD0	; 208
    478e:	d0 40       	sbci	r29, 0x00	; 0
    4790:	b0 31       	cpi	r27, 0x10	; 16
    4792:	08 f0       	brcs	.+2      	; 0x4796 <sha2_large_common_nextBlock+0x1d4>
    4794:	60 c0       	rjmp	.+192    	; 0x4856 <sha2_large_common_nextBlock+0x294>
    4796:	c5 52       	subi	r28, 0x25	; 37
    4798:	df 4f       	sbci	r29, 0xFF	; 255
    479a:	e8 81       	ld	r30, Y
    479c:	f9 81       	ldd	r31, Y+1	; 0x01
    479e:	cb 5d       	subi	r28, 0xDB	; 219
    47a0:	d0 40       	sbci	r29, 0x00	; 0
    47a2:	f0 81       	ld	r31, Z
    47a4:	c5 53       	subi	r28, 0x35	; 53
    47a6:	df 4f       	sbci	r29, 0xFF	; 255
    47a8:	f8 83       	st	Y, r31
    47aa:	cb 5c       	subi	r28, 0xCB	; 203
    47ac:	d0 40       	sbci	r29, 0x00	; 0
    47ae:	c5 52       	subi	r28, 0x25	; 37
    47b0:	df 4f       	sbci	r29, 0xFF	; 255
    47b2:	a8 81       	ld	r26, Y
    47b4:	b9 81       	ldd	r27, Y+1	; 0x01
    47b6:	cb 5d       	subi	r28, 0xDB	; 219
    47b8:	d0 40       	sbci	r29, 0x00	; 0
    47ba:	11 96       	adiw	r26, 0x01	; 1
    47bc:	bc 91       	ld	r27, X
    47be:	c4 53       	subi	r28, 0x34	; 52
    47c0:	df 4f       	sbci	r29, 0xFF	; 255
    47c2:	b8 83       	st	Y, r27
    47c4:	cc 5c       	subi	r28, 0xCC	; 204
    47c6:	d0 40       	sbci	r29, 0x00	; 0
    47c8:	c5 52       	subi	r28, 0x25	; 37
    47ca:	df 4f       	sbci	r29, 0xFF	; 255
    47cc:	e8 81       	ld	r30, Y
    47ce:	f9 81       	ldd	r31, Y+1	; 0x01
    47d0:	cb 5d       	subi	r28, 0xDB	; 219
    47d2:	d0 40       	sbci	r29, 0x00	; 0
    47d4:	f2 81       	ldd	r31, Z+2	; 0x02
    47d6:	c3 53       	subi	r28, 0x33	; 51
    47d8:	df 4f       	sbci	r29, 0xFF	; 255
    47da:	f8 83       	st	Y, r31
    47dc:	cd 5c       	subi	r28, 0xCD	; 205
    47de:	d0 40       	sbci	r29, 0x00	; 0
    47e0:	c5 52       	subi	r28, 0x25	; 37
    47e2:	df 4f       	sbci	r29, 0xFF	; 255
    47e4:	a8 81       	ld	r26, Y
    47e6:	b9 81       	ldd	r27, Y+1	; 0x01
    47e8:	cb 5d       	subi	r28, 0xDB	; 219
    47ea:	d0 40       	sbci	r29, 0x00	; 0
    47ec:	13 96       	adiw	r26, 0x03	; 3
    47ee:	bc 91       	ld	r27, X
    47f0:	c2 53       	subi	r28, 0x32	; 50
    47f2:	df 4f       	sbci	r29, 0xFF	; 255
    47f4:	b8 83       	st	Y, r27
    47f6:	ce 5c       	subi	r28, 0xCE	; 206
    47f8:	d0 40       	sbci	r29, 0x00	; 0
    47fa:	c5 52       	subi	r28, 0x25	; 37
    47fc:	df 4f       	sbci	r29, 0xFF	; 255
    47fe:	e8 81       	ld	r30, Y
    4800:	f9 81       	ldd	r31, Y+1	; 0x01
    4802:	cb 5d       	subi	r28, 0xDB	; 219
    4804:	d0 40       	sbci	r29, 0x00	; 0
    4806:	f4 81       	ldd	r31, Z+4	; 0x04
    4808:	c1 53       	subi	r28, 0x31	; 49
    480a:	df 4f       	sbci	r29, 0xFF	; 255
    480c:	f8 83       	st	Y, r31
    480e:	cf 5c       	subi	r28, 0xCF	; 207
    4810:	d0 40       	sbci	r29, 0x00	; 0
    4812:	c5 52       	subi	r28, 0x25	; 37
    4814:	df 4f       	sbci	r29, 0xFF	; 255
    4816:	a8 81       	ld	r26, Y
    4818:	b9 81       	ldd	r27, Y+1	; 0x01
    481a:	cb 5d       	subi	r28, 0xDB	; 219
    481c:	d0 40       	sbci	r29, 0x00	; 0
    481e:	15 96       	adiw	r26, 0x05	; 5
    4820:	bc 91       	ld	r27, X
    4822:	cd 52       	subi	r28, 0x2D	; 45
    4824:	df 4f       	sbci	r29, 0xFF	; 255
    4826:	b8 83       	st	Y, r27
    4828:	c3 5d       	subi	r28, 0xD3	; 211
    482a:	d0 40       	sbci	r29, 0x00	; 0
    482c:	c5 52       	subi	r28, 0x25	; 37
    482e:	df 4f       	sbci	r29, 0xFF	; 255
    4830:	e8 81       	ld	r30, Y
    4832:	f9 81       	ldd	r31, Y+1	; 0x01
    4834:	cb 5d       	subi	r28, 0xDB	; 219
    4836:	d0 40       	sbci	r29, 0x00	; 0
    4838:	f6 81       	ldd	r31, Z+6	; 0x06
    483a:	cc 52       	subi	r28, 0x2C	; 44
    483c:	df 4f       	sbci	r29, 0xFF	; 255
    483e:	f8 83       	st	Y, r31
    4840:	c4 5d       	subi	r28, 0xD4	; 212
    4842:	d0 40       	sbci	r29, 0x00	; 0
    4844:	c5 52       	subi	r28, 0x25	; 37
    4846:	df 4f       	sbci	r29, 0xFF	; 255
    4848:	a8 81       	ld	r26, Y
    484a:	b9 81       	ldd	r27, Y+1	; 0x01
    484c:	cb 5d       	subi	r28, 0xDB	; 219
    484e:	d0 40       	sbci	r29, 0x00	; 0
    4850:	17 96       	adiw	r26, 0x07	; 7
    4852:	4c 90       	ld	r4, X
    4854:	db c1       	rjmp	.+950    	; 0x4c0c <sha2_large_common_nextBlock+0x64a>
    4856:	e2 96       	adiw	r28, 0x32	; 50
    4858:	5f ac       	ldd	r5, Y+63	; 0x3f
    485a:	e2 97       	sbiw	r28, 0x32	; 50
    485c:	e3 96       	adiw	r28, 0x33	; 51
    485e:	6f ac       	ldd	r6, Y+63	; 0x3f
    4860:	e3 97       	sbiw	r28, 0x33	; 51
    4862:	e4 96       	adiw	r28, 0x34	; 52
    4864:	7f ac       	ldd	r7, Y+63	; 0x3f
    4866:	e4 97       	sbiw	r28, 0x34	; 52
    4868:	e5 96       	adiw	r28, 0x35	; 53
    486a:	8f ac       	ldd	r8, Y+63	; 0x3f
    486c:	e5 97       	sbiw	r28, 0x35	; 53
    486e:	e6 96       	adiw	r28, 0x36	; 54
    4870:	9f ac       	ldd	r9, Y+63	; 0x3f
    4872:	e6 97       	sbiw	r28, 0x36	; 54
    4874:	e7 96       	adiw	r28, 0x37	; 55
    4876:	bf ad       	ldd	r27, Y+63	; 0x3f
    4878:	e7 97       	sbiw	r28, 0x37	; 55
    487a:	e8 96       	adiw	r28, 0x38	; 56
    487c:	af ad       	ldd	r26, Y+63	; 0x3f
    487e:	e8 97       	sbiw	r28, 0x38	; 56
    4880:	e9 96       	adiw	r28, 0x39	; 57
    4882:	ff ad       	ldd	r31, Y+63	; 0x3f
    4884:	e9 97       	sbiw	r28, 0x39	; 57
    4886:	e9 85       	ldd	r30, Y+9	; 0x09
    4888:	c5 53       	subi	r28, 0x35	; 53
    488a:	df 4f       	sbci	r29, 0xFF	; 255
    488c:	e8 83       	st	Y, r30
    488e:	cb 5c       	subi	r28, 0xCB	; 203
    4890:	d0 40       	sbci	r29, 0x00	; 0
    4892:	ea 85       	ldd	r30, Y+10	; 0x0a
    4894:	c4 53       	subi	r28, 0x34	; 52
    4896:	df 4f       	sbci	r29, 0xFF	; 255
    4898:	e8 83       	st	Y, r30
    489a:	cc 5c       	subi	r28, 0xCC	; 204
    489c:	d0 40       	sbci	r29, 0x00	; 0
    489e:	eb 85       	ldd	r30, Y+11	; 0x0b
    48a0:	c3 53       	subi	r28, 0x33	; 51
    48a2:	df 4f       	sbci	r29, 0xFF	; 255
    48a4:	e8 83       	st	Y, r30
    48a6:	cd 5c       	subi	r28, 0xCD	; 205
    48a8:	d0 40       	sbci	r29, 0x00	; 0
    48aa:	ec 85       	ldd	r30, Y+12	; 0x0c
    48ac:	c2 53       	subi	r28, 0x32	; 50
    48ae:	df 4f       	sbci	r29, 0xFF	; 255
    48b0:	e8 83       	st	Y, r30
    48b2:	ce 5c       	subi	r28, 0xCE	; 206
    48b4:	d0 40       	sbci	r29, 0x00	; 0
    48b6:	ed 85       	ldd	r30, Y+13	; 0x0d
    48b8:	c1 53       	subi	r28, 0x31	; 49
    48ba:	df 4f       	sbci	r29, 0xFF	; 255
    48bc:	e8 83       	st	Y, r30
    48be:	cf 5c       	subi	r28, 0xCF	; 207
    48c0:	d0 40       	sbci	r29, 0x00	; 0
    48c2:	2e 84       	ldd	r2, Y+14	; 0x0e
    48c4:	3f 84       	ldd	r3, Y+15	; 0x0f
    48c6:	48 88       	ldd	r4, Y+16	; 0x10
    48c8:	2a 96       	adiw	r28, 0x0a	; 10
    48ca:	2f ad       	ldd	r18, Y+63	; 0x3f
    48cc:	2a 97       	sbiw	r28, 0x0a	; 10
    48ce:	2b 96       	adiw	r28, 0x0b	; 11
    48d0:	3f ad       	ldd	r19, Y+63	; 0x3f
    48d2:	2b 97       	sbiw	r28, 0x0b	; 11
    48d4:	2c 96       	adiw	r28, 0x0c	; 12
    48d6:	4f ad       	ldd	r20, Y+63	; 0x3f
    48d8:	2c 97       	sbiw	r28, 0x0c	; 12
    48da:	2d 96       	adiw	r28, 0x0d	; 13
    48dc:	5f ad       	ldd	r21, Y+63	; 0x3f
    48de:	2d 97       	sbiw	r28, 0x0d	; 13
    48e0:	2e 96       	adiw	r28, 0x0e	; 14
    48e2:	6f ad       	ldd	r22, Y+63	; 0x3f
    48e4:	2e 97       	sbiw	r28, 0x0e	; 14
    48e6:	2f 96       	adiw	r28, 0x0f	; 15
    48e8:	7f ad       	ldd	r23, Y+63	; 0x3f
    48ea:	2f 97       	sbiw	r28, 0x0f	; 15
    48ec:	60 96       	adiw	r28, 0x10	; 16
    48ee:	8f ad       	ldd	r24, Y+63	; 0x3f
    48f0:	60 97       	sbiw	r28, 0x10	; 16
    48f2:	61 96       	adiw	r28, 0x11	; 17
    48f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    48f6:	61 97       	sbiw	r28, 0x11	; 17
    48f8:	a9 80       	ldd	r10, Y+1	; 0x01
    48fa:	ba 80       	ldd	r11, Y+2	; 0x02
    48fc:	cb 80       	ldd	r12, Y+3	; 0x03
    48fe:	dc 80       	ldd	r13, Y+4	; 0x04
    4900:	ed 80       	ldd	r14, Y+5	; 0x05
    4902:	fe 80       	ldd	r15, Y+6	; 0x06
    4904:	0f 81       	ldd	r16, Y+7	; 0x07
    4906:	18 85       	ldd	r17, Y+8	; 0x08
    4908:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    490c:	cd 52       	subi	r28, 0x2D	; 45
    490e:	df 4f       	sbci	r29, 0xFF	; 255
    4910:	28 83       	st	Y, r18
    4912:	c3 5d       	subi	r28, 0xD3	; 211
    4914:	d0 40       	sbci	r29, 0x00	; 0
    4916:	cc 52       	subi	r28, 0x2C	; 44
    4918:	df 4f       	sbci	r29, 0xFF	; 255
    491a:	38 83       	st	Y, r19
    491c:	c4 5d       	subi	r28, 0xD4	; 212
    491e:	d0 40       	sbci	r29, 0x00	; 0
    4920:	cb 52       	subi	r28, 0x2B	; 43
    4922:	df 4f       	sbci	r29, 0xFF	; 255
    4924:	48 83       	st	Y, r20
    4926:	c5 5d       	subi	r28, 0xD5	; 213
    4928:	d0 40       	sbci	r29, 0x00	; 0
    492a:	ca 52       	subi	r28, 0x2A	; 42
    492c:	df 4f       	sbci	r29, 0xFF	; 255
    492e:	58 83       	st	Y, r21
    4930:	c6 5d       	subi	r28, 0xD6	; 214
    4932:	d0 40       	sbci	r29, 0x00	; 0
    4934:	c9 52       	subi	r28, 0x29	; 41
    4936:	df 4f       	sbci	r29, 0xFF	; 255
    4938:	68 83       	st	Y, r22
    493a:	c7 5d       	subi	r28, 0xD7	; 215
    493c:	d0 40       	sbci	r29, 0x00	; 0
    493e:	c8 52       	subi	r28, 0x28	; 40
    4940:	df 4f       	sbci	r29, 0xFF	; 255
    4942:	78 83       	st	Y, r23
    4944:	c8 5d       	subi	r28, 0xD8	; 216
    4946:	d0 40       	sbci	r29, 0x00	; 0
    4948:	c7 52       	subi	r28, 0x27	; 39
    494a:	df 4f       	sbci	r29, 0xFF	; 255
    494c:	88 83       	st	Y, r24
    494e:	c9 5d       	subi	r28, 0xD9	; 217
    4950:	d0 40       	sbci	r29, 0x00	; 0
    4952:	c6 52       	subi	r28, 0x26	; 38
    4954:	df 4f       	sbci	r29, 0xFF	; 255
    4956:	98 83       	st	Y, r25
    4958:	ca 5d       	subi	r28, 0xDA	; 218
    495a:	d0 40       	sbci	r29, 0x00	; 0
    495c:	25 2d       	mov	r18, r5
    495e:	36 2d       	mov	r19, r6
    4960:	47 2d       	mov	r20, r7
    4962:	58 2d       	mov	r21, r8
    4964:	69 2d       	mov	r22, r9
    4966:	7b 2f       	mov	r23, r27
    4968:	8a 2f       	mov	r24, r26
    496a:	9f 2f       	mov	r25, r31
    496c:	03 e0       	ldi	r16, 0x03	; 3
    496e:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4972:	a2 2e       	mov	r10, r18
    4974:	b3 2e       	mov	r11, r19
    4976:	c4 2e       	mov	r12, r20
    4978:	d5 2e       	mov	r13, r21
    497a:	e6 2e       	mov	r14, r22
    497c:	f7 2e       	mov	r15, r23
    497e:	e8 2f       	mov	r30, r24
    4980:	19 2f       	mov	r17, r25
    4982:	25 2d       	mov	r18, r5
    4984:	36 2d       	mov	r19, r6
    4986:	47 2d       	mov	r20, r7
    4988:	58 2d       	mov	r21, r8
    498a:	69 2d       	mov	r22, r9
    498c:	7b 2f       	mov	r23, r27
    498e:	8a 2f       	mov	r24, r26
    4990:	9f 2f       	mov	r25, r31
    4992:	0d e2       	ldi	r16, 0x2D	; 45
    4994:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4998:	a2 26       	eor	r10, r18
    499a:	b3 26       	eor	r11, r19
    499c:	c4 26       	eor	r12, r20
    499e:	d5 26       	eor	r13, r21
    49a0:	e6 26       	eor	r14, r22
    49a2:	f7 26       	eor	r15, r23
    49a4:	e8 27       	eor	r30, r24
    49a6:	19 27       	eor	r17, r25
    49a8:	25 2d       	mov	r18, r5
    49aa:	36 2d       	mov	r19, r6
    49ac:	47 2d       	mov	r20, r7
    49ae:	58 2d       	mov	r21, r8
    49b0:	69 2d       	mov	r22, r9
    49b2:	7b 2f       	mov	r23, r27
    49b4:	8a 2f       	mov	r24, r26
    49b6:	9f 2f       	mov	r25, r31
    49b8:	06 e0       	ldi	r16, 0x06	; 6
    49ba:	0e 94 bc 31 	call	0x6378	; 0x6378 <__lshrdi3>
    49be:	a2 26       	eor	r10, r18
    49c0:	b3 26       	eor	r11, r19
    49c2:	c4 26       	eor	r12, r20
    49c4:	d5 26       	eor	r13, r21
    49c6:	e6 26       	eor	r14, r22
    49c8:	f7 26       	eor	r15, r23
    49ca:	0e 2f       	mov	r16, r30
    49cc:	08 27       	eor	r16, r24
    49ce:	19 27       	eor	r17, r25
    49d0:	cd 52       	subi	r28, 0x2D	; 45
    49d2:	df 4f       	sbci	r29, 0xFF	; 255
    49d4:	28 81       	ld	r18, Y
    49d6:	c3 5d       	subi	r28, 0xD3	; 211
    49d8:	d0 40       	sbci	r29, 0x00	; 0
    49da:	cc 52       	subi	r28, 0x2C	; 44
    49dc:	df 4f       	sbci	r29, 0xFF	; 255
    49de:	38 81       	ld	r19, Y
    49e0:	c4 5d       	subi	r28, 0xD4	; 212
    49e2:	d0 40       	sbci	r29, 0x00	; 0
    49e4:	cb 52       	subi	r28, 0x2B	; 43
    49e6:	df 4f       	sbci	r29, 0xFF	; 255
    49e8:	48 81       	ld	r20, Y
    49ea:	c5 5d       	subi	r28, 0xD5	; 213
    49ec:	d0 40       	sbci	r29, 0x00	; 0
    49ee:	ca 52       	subi	r28, 0x2A	; 42
    49f0:	df 4f       	sbci	r29, 0xFF	; 255
    49f2:	58 81       	ld	r21, Y
    49f4:	c6 5d       	subi	r28, 0xD6	; 214
    49f6:	d0 40       	sbci	r29, 0x00	; 0
    49f8:	c9 52       	subi	r28, 0x29	; 41
    49fa:	df 4f       	sbci	r29, 0xFF	; 255
    49fc:	68 81       	ld	r22, Y
    49fe:	c7 5d       	subi	r28, 0xD7	; 215
    4a00:	d0 40       	sbci	r29, 0x00	; 0
    4a02:	c8 52       	subi	r28, 0x28	; 40
    4a04:	df 4f       	sbci	r29, 0xFF	; 255
    4a06:	78 81       	ld	r23, Y
    4a08:	c8 5d       	subi	r28, 0xD8	; 216
    4a0a:	d0 40       	sbci	r29, 0x00	; 0
    4a0c:	c7 52       	subi	r28, 0x27	; 39
    4a0e:	df 4f       	sbci	r29, 0xFF	; 255
    4a10:	88 81       	ld	r24, Y
    4a12:	c9 5d       	subi	r28, 0xD9	; 217
    4a14:	d0 40       	sbci	r29, 0x00	; 0
    4a16:	c6 52       	subi	r28, 0x26	; 38
    4a18:	df 4f       	sbci	r29, 0xFF	; 255
    4a1a:	98 81       	ld	r25, Y
    4a1c:	ca 5d       	subi	r28, 0xDA	; 218
    4a1e:	d0 40       	sbci	r29, 0x00	; 0
    4a20:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    4a24:	62 2e       	mov	r6, r18
    4a26:	73 2e       	mov	r7, r19
    4a28:	84 2e       	mov	r8, r20
    4a2a:	95 2e       	mov	r9, r21
    4a2c:	b6 2f       	mov	r27, r22
    4a2e:	a7 2f       	mov	r26, r23
    4a30:	f8 2f       	mov	r31, r24
    4a32:	e9 2f       	mov	r30, r25
    4a34:	c5 53       	subi	r28, 0x35	; 53
    4a36:	df 4f       	sbci	r29, 0xFF	; 255
    4a38:	28 81       	ld	r18, Y
    4a3a:	cb 5c       	subi	r28, 0xCB	; 203
    4a3c:	d0 40       	sbci	r29, 0x00	; 0
    4a3e:	c4 53       	subi	r28, 0x34	; 52
    4a40:	df 4f       	sbci	r29, 0xFF	; 255
    4a42:	38 81       	ld	r19, Y
    4a44:	cc 5c       	subi	r28, 0xCC	; 204
    4a46:	d0 40       	sbci	r29, 0x00	; 0
    4a48:	c3 53       	subi	r28, 0x33	; 51
    4a4a:	df 4f       	sbci	r29, 0xFF	; 255
    4a4c:	48 81       	ld	r20, Y
    4a4e:	cd 5c       	subi	r28, 0xCD	; 205
    4a50:	d0 40       	sbci	r29, 0x00	; 0
    4a52:	c2 53       	subi	r28, 0x32	; 50
    4a54:	df 4f       	sbci	r29, 0xFF	; 255
    4a56:	58 81       	ld	r21, Y
    4a58:	ce 5c       	subi	r28, 0xCE	; 206
    4a5a:	d0 40       	sbci	r29, 0x00	; 0
    4a5c:	c1 53       	subi	r28, 0x31	; 49
    4a5e:	df 4f       	sbci	r29, 0xFF	; 255
    4a60:	68 81       	ld	r22, Y
    4a62:	cf 5c       	subi	r28, 0xCF	; 207
    4a64:	d0 40       	sbci	r29, 0x00	; 0
    4a66:	72 2d       	mov	r23, r2
    4a68:	83 2d       	mov	r24, r3
    4a6a:	94 2d       	mov	r25, r4
    4a6c:	08 e3       	ldi	r16, 0x38	; 56
    4a6e:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4a72:	a2 2e       	mov	r10, r18
    4a74:	b3 2e       	mov	r11, r19
    4a76:	c4 2e       	mov	r12, r20
    4a78:	d5 2e       	mov	r13, r21
    4a7a:	e6 2e       	mov	r14, r22
    4a7c:	f7 2e       	mov	r15, r23
    4a7e:	58 2e       	mov	r5, r24
    4a80:	19 2f       	mov	r17, r25
    4a82:	c5 53       	subi	r28, 0x35	; 53
    4a84:	df 4f       	sbci	r29, 0xFF	; 255
    4a86:	28 81       	ld	r18, Y
    4a88:	cb 5c       	subi	r28, 0xCB	; 203
    4a8a:	d0 40       	sbci	r29, 0x00	; 0
    4a8c:	c4 53       	subi	r28, 0x34	; 52
    4a8e:	df 4f       	sbci	r29, 0xFF	; 255
    4a90:	38 81       	ld	r19, Y
    4a92:	cc 5c       	subi	r28, 0xCC	; 204
    4a94:	d0 40       	sbci	r29, 0x00	; 0
    4a96:	c3 53       	subi	r28, 0x33	; 51
    4a98:	df 4f       	sbci	r29, 0xFF	; 255
    4a9a:	48 81       	ld	r20, Y
    4a9c:	cd 5c       	subi	r28, 0xCD	; 205
    4a9e:	d0 40       	sbci	r29, 0x00	; 0
    4aa0:	c2 53       	subi	r28, 0x32	; 50
    4aa2:	df 4f       	sbci	r29, 0xFF	; 255
    4aa4:	58 81       	ld	r21, Y
    4aa6:	ce 5c       	subi	r28, 0xCE	; 206
    4aa8:	d0 40       	sbci	r29, 0x00	; 0
    4aaa:	c1 53       	subi	r28, 0x31	; 49
    4aac:	df 4f       	sbci	r29, 0xFF	; 255
    4aae:	68 81       	ld	r22, Y
    4ab0:	cf 5c       	subi	r28, 0xCF	; 207
    4ab2:	d0 40       	sbci	r29, 0x00	; 0
    4ab4:	72 2d       	mov	r23, r2
    4ab6:	83 2d       	mov	r24, r3
    4ab8:	94 2d       	mov	r25, r4
    4aba:	0f e3       	ldi	r16, 0x3F	; 63
    4abc:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4ac0:	a2 26       	eor	r10, r18
    4ac2:	b3 26       	eor	r11, r19
    4ac4:	c4 26       	eor	r12, r20
    4ac6:	d5 26       	eor	r13, r21
    4ac8:	e6 26       	eor	r14, r22
    4aca:	f7 26       	eor	r15, r23
    4acc:	58 26       	eor	r5, r24
    4ace:	19 27       	eor	r17, r25
    4ad0:	c5 53       	subi	r28, 0x35	; 53
    4ad2:	df 4f       	sbci	r29, 0xFF	; 255
    4ad4:	28 81       	ld	r18, Y
    4ad6:	cb 5c       	subi	r28, 0xCB	; 203
    4ad8:	d0 40       	sbci	r29, 0x00	; 0
    4ada:	c4 53       	subi	r28, 0x34	; 52
    4adc:	df 4f       	sbci	r29, 0xFF	; 255
    4ade:	38 81       	ld	r19, Y
    4ae0:	cc 5c       	subi	r28, 0xCC	; 204
    4ae2:	d0 40       	sbci	r29, 0x00	; 0
    4ae4:	c3 53       	subi	r28, 0x33	; 51
    4ae6:	df 4f       	sbci	r29, 0xFF	; 255
    4ae8:	48 81       	ld	r20, Y
    4aea:	cd 5c       	subi	r28, 0xCD	; 205
    4aec:	d0 40       	sbci	r29, 0x00	; 0
    4aee:	c2 53       	subi	r28, 0x32	; 50
    4af0:	df 4f       	sbci	r29, 0xFF	; 255
    4af2:	58 81       	ld	r21, Y
    4af4:	ce 5c       	subi	r28, 0xCE	; 206
    4af6:	d0 40       	sbci	r29, 0x00	; 0
    4af8:	c1 53       	subi	r28, 0x31	; 49
    4afa:	df 4f       	sbci	r29, 0xFF	; 255
    4afc:	68 81       	ld	r22, Y
    4afe:	cf 5c       	subi	r28, 0xCF	; 207
    4b00:	d0 40       	sbci	r29, 0x00	; 0
    4b02:	72 2d       	mov	r23, r2
    4b04:	83 2d       	mov	r24, r3
    4b06:	94 2d       	mov	r25, r4
    4b08:	07 e0       	ldi	r16, 0x07	; 7
    4b0a:	0e 94 bc 31 	call	0x6378	; 0x6378 <__lshrdi3>
    4b0e:	a2 26       	eor	r10, r18
    4b10:	b3 26       	eor	r11, r19
    4b12:	c4 26       	eor	r12, r20
    4b14:	d5 26       	eor	r13, r21
    4b16:	e6 26       	eor	r14, r22
    4b18:	f7 26       	eor	r15, r23
    4b1a:	05 2d       	mov	r16, r5
    4b1c:	08 27       	eor	r16, r24
    4b1e:	19 27       	eor	r17, r25
    4b20:	26 2d       	mov	r18, r6
    4b22:	37 2d       	mov	r19, r7
    4b24:	48 2d       	mov	r20, r8
    4b26:	59 2d       	mov	r21, r9
    4b28:	6b 2f       	mov	r22, r27
    4b2a:	7a 2f       	mov	r23, r26
    4b2c:	8f 2f       	mov	r24, r31
    4b2e:	9e 2f       	mov	r25, r30
    4b30:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    4b34:	c5 53       	subi	r28, 0x35	; 53
    4b36:	df 4f       	sbci	r29, 0xFF	; 255
    4b38:	28 83       	st	Y, r18
    4b3a:	cb 5c       	subi	r28, 0xCB	; 203
    4b3c:	d0 40       	sbci	r29, 0x00	; 0
    4b3e:	c4 53       	subi	r28, 0x34	; 52
    4b40:	df 4f       	sbci	r29, 0xFF	; 255
    4b42:	38 83       	st	Y, r19
    4b44:	cc 5c       	subi	r28, 0xCC	; 204
    4b46:	d0 40       	sbci	r29, 0x00	; 0
    4b48:	c3 53       	subi	r28, 0x33	; 51
    4b4a:	df 4f       	sbci	r29, 0xFF	; 255
    4b4c:	48 83       	st	Y, r20
    4b4e:	cd 5c       	subi	r28, 0xCD	; 205
    4b50:	d0 40       	sbci	r29, 0x00	; 0
    4b52:	c2 53       	subi	r28, 0x32	; 50
    4b54:	df 4f       	sbci	r29, 0xFF	; 255
    4b56:	58 83       	st	Y, r21
    4b58:	ce 5c       	subi	r28, 0xCE	; 206
    4b5a:	d0 40       	sbci	r29, 0x00	; 0
    4b5c:	c1 53       	subi	r28, 0x31	; 49
    4b5e:	df 4f       	sbci	r29, 0xFF	; 255
    4b60:	68 83       	st	Y, r22
    4b62:	cf 5c       	subi	r28, 0xCF	; 207
    4b64:	d0 40       	sbci	r29, 0x00	; 0
    4b66:	cd 52       	subi	r28, 0x2D	; 45
    4b68:	df 4f       	sbci	r29, 0xFF	; 255
    4b6a:	78 83       	st	Y, r23
    4b6c:	c3 5d       	subi	r28, 0xD3	; 211
    4b6e:	d0 40       	sbci	r29, 0x00	; 0
    4b70:	cc 52       	subi	r28, 0x2C	; 44
    4b72:	df 4f       	sbci	r29, 0xFF	; 255
    4b74:	88 83       	st	Y, r24
    4b76:	c4 5d       	subi	r28, 0xD4	; 212
    4b78:	d0 40       	sbci	r29, 0x00	; 0
    4b7a:	49 2e       	mov	r4, r25
    4b7c:	48 e7       	ldi	r20, 0x78	; 120
    4b7e:	50 e0       	ldi	r21, 0x00	; 0
    4b80:	be 01       	movw	r22, r28
    4b82:	67 5f       	subi	r22, 0xF7	; 247
    4b84:	7f 4f       	sbci	r23, 0xFF	; 255
    4b86:	ce 01       	movw	r24, r28
    4b88:	01 96       	adiw	r24, 0x01	; 1
    4b8a:	0e 94 95 33 	call	0x672a	; 0x672a <memmove>
    4b8e:	c5 53       	subi	r28, 0x35	; 53
    4b90:	df 4f       	sbci	r29, 0xFF	; 255
    4b92:	f8 81       	ld	r31, Y
    4b94:	cb 5c       	subi	r28, 0xCB	; 203
    4b96:	d0 40       	sbci	r29, 0x00	; 0
    4b98:	ea 96       	adiw	r28, 0x3a	; 58
    4b9a:	ff af       	std	Y+63, r31	; 0x3f
    4b9c:	ea 97       	sbiw	r28, 0x3a	; 58
    4b9e:	c4 53       	subi	r28, 0x34	; 52
    4ba0:	df 4f       	sbci	r29, 0xFF	; 255
    4ba2:	18 81       	ld	r17, Y
    4ba4:	cc 5c       	subi	r28, 0xCC	; 204
    4ba6:	d0 40       	sbci	r29, 0x00	; 0
    4ba8:	eb 96       	adiw	r28, 0x3b	; 59
    4baa:	1f af       	std	Y+63, r17	; 0x3f
    4bac:	eb 97       	sbiw	r28, 0x3b	; 59
    4bae:	c3 53       	subi	r28, 0x33	; 51
    4bb0:	df 4f       	sbci	r29, 0xFF	; 255
    4bb2:	88 81       	ld	r24, Y
    4bb4:	cd 5c       	subi	r28, 0xCD	; 205
    4bb6:	d0 40       	sbci	r29, 0x00	; 0
    4bb8:	ec 96       	adiw	r28, 0x3c	; 60
    4bba:	8f af       	std	Y+63, r24	; 0x3f
    4bbc:	ec 97       	sbiw	r28, 0x3c	; 60
    4bbe:	c2 53       	subi	r28, 0x32	; 50
    4bc0:	df 4f       	sbci	r29, 0xFF	; 255
    4bc2:	98 81       	ld	r25, Y
    4bc4:	ce 5c       	subi	r28, 0xCE	; 206
    4bc6:	d0 40       	sbci	r29, 0x00	; 0
    4bc8:	ed 96       	adiw	r28, 0x3d	; 61
    4bca:	9f af       	std	Y+63, r25	; 0x3f
    4bcc:	ed 97       	sbiw	r28, 0x3d	; 61
    4bce:	c1 53       	subi	r28, 0x31	; 49
    4bd0:	df 4f       	sbci	r29, 0xFF	; 255
    4bd2:	a8 81       	ld	r26, Y
    4bd4:	cf 5c       	subi	r28, 0xCF	; 207
    4bd6:	d0 40       	sbci	r29, 0x00	; 0
    4bd8:	ee 96       	adiw	r28, 0x3e	; 62
    4bda:	af af       	std	Y+63, r26	; 0x3f
    4bdc:	ee 97       	sbiw	r28, 0x3e	; 62
    4bde:	cd 52       	subi	r28, 0x2D	; 45
    4be0:	df 4f       	sbci	r29, 0xFF	; 255
    4be2:	b8 81       	ld	r27, Y
    4be4:	c3 5d       	subi	r28, 0xD3	; 211
    4be6:	d0 40       	sbci	r29, 0x00	; 0
    4be8:	ef 96       	adiw	r28, 0x3f	; 63
    4bea:	bf af       	std	Y+63, r27	; 0x3f
    4bec:	ef 97       	sbiw	r28, 0x3f	; 63
    4bee:	cc 52       	subi	r28, 0x2C	; 44
    4bf0:	df 4f       	sbci	r29, 0xFF	; 255
    4bf2:	e8 81       	ld	r30, Y
    4bf4:	c4 5d       	subi	r28, 0xD4	; 212
    4bf6:	d0 40       	sbci	r29, 0x00	; 0
    4bf8:	c1 58       	subi	r28, 0x81	; 129
    4bfa:	df 4f       	sbci	r29, 0xFF	; 255
    4bfc:	e8 83       	st	Y, r30
    4bfe:	cf 57       	subi	r28, 0x7F	; 127
    4c00:	d0 40       	sbci	r29, 0x00	; 0
    4c02:	c0 58       	subi	r28, 0x80	; 128
    4c04:	df 4f       	sbci	r29, 0xFF	; 255
    4c06:	48 82       	st	Y, r4
    4c08:	c0 58       	subi	r28, 0x80	; 128
    4c0a:	d0 40       	sbci	r29, 0x00	; 0
    4c0c:	c7 54       	subi	r28, 0x47	; 71
    4c0e:	df 4f       	sbci	r29, 0xFF	; 255
    4c10:	18 81       	ld	r17, Y
    4c12:	c9 5b       	subi	r28, 0xB9	; 185
    4c14:	d0 40       	sbci	r29, 0x00	; 0
    4c16:	cb 52       	subi	r28, 0x2B	; 43
    4c18:	df 4f       	sbci	r29, 0xFF	; 255
    4c1a:	18 83       	st	Y, r17
    4c1c:	c5 5d       	subi	r28, 0xD5	; 213
    4c1e:	d0 40       	sbci	r29, 0x00	; 0
    4c20:	c6 54       	subi	r28, 0x46	; 70
    4c22:	df 4f       	sbci	r29, 0xFF	; 255
    4c24:	a8 81       	ld	r26, Y
    4c26:	ca 5b       	subi	r28, 0xBA	; 186
    4c28:	d0 40       	sbci	r29, 0x00	; 0
    4c2a:	ca 52       	subi	r28, 0x2A	; 42
    4c2c:	df 4f       	sbci	r29, 0xFF	; 255
    4c2e:	a8 83       	st	Y, r26
    4c30:	c6 5d       	subi	r28, 0xD6	; 214
    4c32:	d0 40       	sbci	r29, 0x00	; 0
    4c34:	c5 54       	subi	r28, 0x45	; 69
    4c36:	df 4f       	sbci	r29, 0xFF	; 255
    4c38:	b8 81       	ld	r27, Y
    4c3a:	cb 5b       	subi	r28, 0xBB	; 187
    4c3c:	d0 40       	sbci	r29, 0x00	; 0
    4c3e:	c9 52       	subi	r28, 0x29	; 41
    4c40:	df 4f       	sbci	r29, 0xFF	; 255
    4c42:	b8 83       	st	Y, r27
    4c44:	c7 5d       	subi	r28, 0xD7	; 215
    4c46:	d0 40       	sbci	r29, 0x00	; 0
    4c48:	c4 54       	subi	r28, 0x44	; 68
    4c4a:	df 4f       	sbci	r29, 0xFF	; 255
    4c4c:	18 81       	ld	r17, Y
    4c4e:	cc 5b       	subi	r28, 0xBC	; 188
    4c50:	d0 40       	sbci	r29, 0x00	; 0
    4c52:	c8 52       	subi	r28, 0x28	; 40
    4c54:	df 4f       	sbci	r29, 0xFF	; 255
    4c56:	18 83       	st	Y, r17
    4c58:	c8 5d       	subi	r28, 0xD8	; 216
    4c5a:	d0 40       	sbci	r29, 0x00	; 0
    4c5c:	c3 54       	subi	r28, 0x43	; 67
    4c5e:	df 4f       	sbci	r29, 0xFF	; 255
    4c60:	a8 81       	ld	r26, Y
    4c62:	cd 5b       	subi	r28, 0xBD	; 189
    4c64:	d0 40       	sbci	r29, 0x00	; 0
    4c66:	c7 52       	subi	r28, 0x27	; 39
    4c68:	df 4f       	sbci	r29, 0xFF	; 255
    4c6a:	a8 83       	st	Y, r26
    4c6c:	c9 5d       	subi	r28, 0xD9	; 217
    4c6e:	d0 40       	sbci	r29, 0x00	; 0
    4c70:	c2 54       	subi	r28, 0x42	; 66
    4c72:	df 4f       	sbci	r29, 0xFF	; 255
    4c74:	b8 81       	ld	r27, Y
    4c76:	ce 5b       	subi	r28, 0xBE	; 190
    4c78:	d0 40       	sbci	r29, 0x00	; 0
    4c7a:	c6 52       	subi	r28, 0x26	; 38
    4c7c:	df 4f       	sbci	r29, 0xFF	; 255
    4c7e:	b8 83       	st	Y, r27
    4c80:	ca 5d       	subi	r28, 0xDA	; 218
    4c82:	d0 40       	sbci	r29, 0x00	; 0
    4c84:	c1 54       	subi	r28, 0x41	; 65
    4c86:	df 4f       	sbci	r29, 0xFF	; 255
    4c88:	18 81       	ld	r17, Y
    4c8a:	cf 5b       	subi	r28, 0xBF	; 191
    4c8c:	d0 40       	sbci	r29, 0x00	; 0
    4c8e:	c3 52       	subi	r28, 0x23	; 35
    4c90:	df 4f       	sbci	r29, 0xFF	; 255
    4c92:	18 83       	st	Y, r17
    4c94:	cd 5d       	subi	r28, 0xDD	; 221
    4c96:	d0 40       	sbci	r29, 0x00	; 0
    4c98:	c0 54       	subi	r28, 0x40	; 64
    4c9a:	df 4f       	sbci	r29, 0xFF	; 255
    4c9c:	a8 81       	ld	r26, Y
    4c9e:	c0 5c       	subi	r28, 0xC0	; 192
    4ca0:	d0 40       	sbci	r29, 0x00	; 0
    4ca2:	c2 52       	subi	r28, 0x22	; 34
    4ca4:	df 4f       	sbci	r29, 0xFF	; 255
    4ca6:	a8 83       	st	Y, r26
    4ca8:	ce 5d       	subi	r28, 0xDE	; 222
    4caa:	d0 40       	sbci	r29, 0x00	; 0
    4cac:	cf 55       	subi	r28, 0x5F	; 95
    4cae:	df 4f       	sbci	r29, 0xFF	; 255
    4cb0:	98 80       	ld	r9, Y
    4cb2:	c1 5a       	subi	r28, 0xA1	; 161
    4cb4:	d0 40       	sbci	r29, 0x00	; 0
    4cb6:	ce 55       	subi	r28, 0x5E	; 94
    4cb8:	df 4f       	sbci	r29, 0xFF	; 255
    4cba:	b8 80       	ld	r11, Y
    4cbc:	c2 5a       	subi	r28, 0xA2	; 162
    4cbe:	d0 40       	sbci	r29, 0x00	; 0
    4cc0:	cd 55       	subi	r28, 0x5D	; 93
    4cc2:	df 4f       	sbci	r29, 0xFF	; 255
    4cc4:	c8 80       	ld	r12, Y
    4cc6:	c3 5a       	subi	r28, 0xA3	; 163
    4cc8:	d0 40       	sbci	r29, 0x00	; 0
    4cca:	cc 55       	subi	r28, 0x5C	; 92
    4ccc:	df 4f       	sbci	r29, 0xFF	; 255
    4cce:	d8 80       	ld	r13, Y
    4cd0:	c4 5a       	subi	r28, 0xA4	; 164
    4cd2:	d0 40       	sbci	r29, 0x00	; 0
    4cd4:	cb 55       	subi	r28, 0x5B	; 91
    4cd6:	df 4f       	sbci	r29, 0xFF	; 255
    4cd8:	f8 80       	ld	r15, Y
    4cda:	c5 5a       	subi	r28, 0xA5	; 165
    4cdc:	d0 40       	sbci	r29, 0x00	; 0
    4cde:	ca 55       	subi	r28, 0x5A	; 90
    4ce0:	df 4f       	sbci	r29, 0xFF	; 255
    4ce2:	18 81       	ld	r17, Y
    4ce4:	c6 5a       	subi	r28, 0xA6	; 166
    4ce6:	d0 40       	sbci	r29, 0x00	; 0
    4ce8:	c9 55       	subi	r28, 0x59	; 89
    4cea:	df 4f       	sbci	r29, 0xFF	; 255
    4cec:	b8 81       	ld	r27, Y
    4cee:	c7 5a       	subi	r28, 0xA7	; 167
    4cf0:	d0 40       	sbci	r29, 0x00	; 0
    4cf2:	c8 55       	subi	r28, 0x58	; 88
    4cf4:	df 4f       	sbci	r29, 0xFF	; 255
    4cf6:	a8 81       	ld	r26, Y
    4cf8:	c8 5a       	subi	r28, 0xA8	; 168
    4cfa:	d0 40       	sbci	r29, 0x00	; 0
    4cfc:	79 2d       	mov	r23, r9
    4cfe:	70 95       	com	r23
    4d00:	6b 2d       	mov	r22, r11
    4d02:	60 95       	com	r22
    4d04:	5c 2d       	mov	r21, r12
    4d06:	50 95       	com	r21
    4d08:	4d 2d       	mov	r20, r13
    4d0a:	40 95       	com	r20
    4d0c:	3f 2d       	mov	r19, r15
    4d0e:	30 95       	com	r19
    4d10:	21 2f       	mov	r18, r17
    4d12:	20 95       	com	r18
    4d14:	9b 2f       	mov	r25, r27
    4d16:	90 95       	com	r25
    4d18:	8a 2f       	mov	r24, r26
    4d1a:	80 95       	com	r24
    4d1c:	cf 54       	subi	r28, 0x4F	; 79
    4d1e:	df 4f       	sbci	r29, 0xFF	; 255
    4d20:	68 80       	ld	r6, Y
    4d22:	c1 5b       	subi	r28, 0xB1	; 177
    4d24:	d0 40       	sbci	r29, 0x00	; 0
    4d26:	67 22       	and	r6, r23
    4d28:	ce 54       	subi	r28, 0x4E	; 78
    4d2a:	df 4f       	sbci	r29, 0xFF	; 255
    4d2c:	88 80       	ld	r8, Y
    4d2e:	c2 5b       	subi	r28, 0xB2	; 178
    4d30:	d0 40       	sbci	r29, 0x00	; 0
    4d32:	86 22       	and	r8, r22
    4d34:	cd 54       	subi	r28, 0x4D	; 77
    4d36:	df 4f       	sbci	r29, 0xFF	; 255
    4d38:	e8 80       	ld	r14, Y
    4d3a:	c3 5b       	subi	r28, 0xB3	; 179
    4d3c:	d0 40       	sbci	r29, 0x00	; 0
    4d3e:	e5 22       	and	r14, r21
    4d40:	cc 54       	subi	r28, 0x4C	; 76
    4d42:	df 4f       	sbci	r29, 0xFF	; 255
    4d44:	f8 81       	ld	r31, Y
    4d46:	c4 5b       	subi	r28, 0xB4	; 180
    4d48:	d0 40       	sbci	r29, 0x00	; 0
    4d4a:	f4 23       	and	r31, r20
    4d4c:	cb 54       	subi	r28, 0x4B	; 75
    4d4e:	df 4f       	sbci	r29, 0xFF	; 255
    4d50:	78 81       	ld	r23, Y
    4d52:	c5 5b       	subi	r28, 0xB5	; 181
    4d54:	d0 40       	sbci	r29, 0x00	; 0
    4d56:	73 23       	and	r23, r19
    4d58:	ca 54       	subi	r28, 0x4A	; 74
    4d5a:	df 4f       	sbci	r29, 0xFF	; 255
    4d5c:	58 81       	ld	r21, Y
    4d5e:	c6 5b       	subi	r28, 0xB6	; 182
    4d60:	d0 40       	sbci	r29, 0x00	; 0
    4d62:	52 23       	and	r21, r18
    4d64:	c9 54       	subi	r28, 0x49	; 73
    4d66:	df 4f       	sbci	r29, 0xFF	; 255
    4d68:	38 81       	ld	r19, Y
    4d6a:	c7 5b       	subi	r28, 0xB7	; 183
    4d6c:	d0 40       	sbci	r29, 0x00	; 0
    4d6e:	39 23       	and	r19, r25
    4d70:	c8 54       	subi	r28, 0x48	; 72
    4d72:	df 4f       	sbci	r29, 0xFF	; 255
    4d74:	98 81       	ld	r25, Y
    4d76:	c8 5b       	subi	r28, 0xB8	; 184
    4d78:	d0 40       	sbci	r29, 0x00	; 0
    4d7a:	98 23       	and	r25, r24
    4d7c:	c7 55       	subi	r28, 0x57	; 87
    4d7e:	df 4f       	sbci	r29, 0xFF	; 255
    4d80:	78 80       	ld	r7, Y
    4d82:	c9 5a       	subi	r28, 0xA9	; 169
    4d84:	d0 40       	sbci	r29, 0x00	; 0
    4d86:	79 20       	and	r7, r9
    4d88:	c6 55       	subi	r28, 0x56	; 86
    4d8a:	df 4f       	sbci	r29, 0xFF	; 255
    4d8c:	a8 80       	ld	r10, Y
    4d8e:	ca 5a       	subi	r28, 0xAA	; 170
    4d90:	d0 40       	sbci	r29, 0x00	; 0
    4d92:	ab 20       	and	r10, r11
    4d94:	c5 55       	subi	r28, 0x55	; 85
    4d96:	df 4f       	sbci	r29, 0xFF	; 255
    4d98:	08 81       	ld	r16, Y
    4d9a:	cb 5a       	subi	r28, 0xAB	; 171
    4d9c:	d0 40       	sbci	r29, 0x00	; 0
    4d9e:	0c 21       	and	r16, r12
    4da0:	c4 55       	subi	r28, 0x54	; 84
    4da2:	df 4f       	sbci	r29, 0xFF	; 255
    4da4:	e8 81       	ld	r30, Y
    4da6:	cc 5a       	subi	r28, 0xAC	; 172
    4da8:	d0 40       	sbci	r29, 0x00	; 0
    4daa:	ed 21       	and	r30, r13
    4dac:	c3 55       	subi	r28, 0x53	; 83
    4dae:	df 4f       	sbci	r29, 0xFF	; 255
    4db0:	68 81       	ld	r22, Y
    4db2:	cd 5a       	subi	r28, 0xAD	; 173
    4db4:	d0 40       	sbci	r29, 0x00	; 0
    4db6:	6f 21       	and	r22, r15
    4db8:	c2 55       	subi	r28, 0x52	; 82
    4dba:	df 4f       	sbci	r29, 0xFF	; 255
    4dbc:	48 81       	ld	r20, Y
    4dbe:	ce 5a       	subi	r28, 0xAE	; 174
    4dc0:	d0 40       	sbci	r29, 0x00	; 0
    4dc2:	41 23       	and	r20, r17
    4dc4:	c1 55       	subi	r28, 0x51	; 81
    4dc6:	df 4f       	sbci	r29, 0xFF	; 255
    4dc8:	28 81       	ld	r18, Y
    4dca:	cf 5a       	subi	r28, 0xAF	; 175
    4dcc:	d0 40       	sbci	r29, 0x00	; 0
    4dce:	2b 23       	and	r18, r27
    4dd0:	c0 55       	subi	r28, 0x50	; 80
    4dd2:	df 4f       	sbci	r29, 0xFF	; 255
    4dd4:	88 81       	ld	r24, Y
    4dd6:	c0 5b       	subi	r28, 0xB0	; 176
    4dd8:	d0 40       	sbci	r29, 0x00	; 0
    4dda:	8a 23       	and	r24, r26
    4ddc:	67 24       	eor	r6, r7
    4dde:	c1 52       	subi	r28, 0x21	; 33
    4de0:	df 4f       	sbci	r29, 0xFF	; 255
    4de2:	68 82       	st	Y, r6
    4de4:	cf 5d       	subi	r28, 0xDF	; 223
    4de6:	d0 40       	sbci	r29, 0x00	; 0
    4de8:	8a 24       	eor	r8, r10
    4dea:	c0 52       	subi	r28, 0x20	; 32
    4dec:	df 4f       	sbci	r29, 0xFF	; 255
    4dee:	88 82       	st	Y, r8
    4df0:	c0 5e       	subi	r28, 0xE0	; 224
    4df2:	d0 40       	sbci	r29, 0x00	; 0
    4df4:	e0 26       	eor	r14, r16
    4df6:	cf 51       	subi	r28, 0x1F	; 31
    4df8:	df 4f       	sbci	r29, 0xFF	; 255
    4dfa:	e8 82       	st	Y, r14
    4dfc:	c1 5e       	subi	r28, 0xE1	; 225
    4dfe:	d0 40       	sbci	r29, 0x00	; 0
    4e00:	fe 27       	eor	r31, r30
    4e02:	ce 51       	subi	r28, 0x1E	; 30
    4e04:	df 4f       	sbci	r29, 0xFF	; 255
    4e06:	f8 83       	st	Y, r31
    4e08:	c2 5e       	subi	r28, 0xE2	; 226
    4e0a:	d0 40       	sbci	r29, 0x00	; 0
    4e0c:	76 27       	eor	r23, r22
    4e0e:	cd 51       	subi	r28, 0x1D	; 29
    4e10:	df 4f       	sbci	r29, 0xFF	; 255
    4e12:	78 83       	st	Y, r23
    4e14:	c3 5e       	subi	r28, 0xE3	; 227
    4e16:	d0 40       	sbci	r29, 0x00	; 0
    4e18:	54 27       	eor	r21, r20
    4e1a:	cc 51       	subi	r28, 0x1C	; 28
    4e1c:	df 4f       	sbci	r29, 0xFF	; 255
    4e1e:	58 83       	st	Y, r21
    4e20:	c4 5e       	subi	r28, 0xE4	; 228
    4e22:	d0 40       	sbci	r29, 0x00	; 0
    4e24:	32 27       	eor	r19, r18
    4e26:	cb 51       	subi	r28, 0x1B	; 27
    4e28:	df 4f       	sbci	r29, 0xFF	; 255
    4e2a:	38 83       	st	Y, r19
    4e2c:	c5 5e       	subi	r28, 0xE5	; 229
    4e2e:	d0 40       	sbci	r29, 0x00	; 0
    4e30:	98 27       	eor	r25, r24
    4e32:	ca 51       	subi	r28, 0x1A	; 26
    4e34:	df 4f       	sbci	r29, 0xFF	; 255
    4e36:	98 83       	st	Y, r25
    4e38:	c6 5e       	subi	r28, 0xE6	; 230
    4e3a:	d0 40       	sbci	r29, 0x00	; 0
    4e3c:	cf 52       	subi	r28, 0x2F	; 47
    4e3e:	df 4f       	sbci	r29, 0xFF	; 255
    4e40:	e8 81       	ld	r30, Y
    4e42:	f9 81       	ldd	r31, Y+1	; 0x01
    4e44:	c1 5d       	subi	r28, 0xD1	; 209
    4e46:	d0 40       	sbci	r29, 0x00	; 0
    4e48:	45 91       	lpm	r20, Z+
    4e4a:	55 91       	lpm	r21, Z+
    4e4c:	65 91       	lpm	r22, Z+
    4e4e:	74 91       	lpm	r23, Z
    4e50:	a4 2e       	mov	r10, r20
    4e52:	cf 53       	subi	r28, 0x3F	; 63
    4e54:	df 4f       	sbci	r29, 0xFF	; 255
    4e56:	48 83       	st	Y, r20
    4e58:	59 83       	std	Y+1, r21	; 0x01
    4e5a:	6a 83       	std	Y+2, r22	; 0x02
    4e5c:	7b 83       	std	Y+3, r23	; 0x03
    4e5e:	c1 5c       	subi	r28, 0xC1	; 193
    4e60:	d0 40       	sbci	r29, 0x00	; 0
    4e62:	cf 52       	subi	r28, 0x2F	; 47
    4e64:	df 4f       	sbci	r29, 0xFF	; 255
    4e66:	e8 81       	ld	r30, Y
    4e68:	f9 81       	ldd	r31, Y+1	; 0x01
    4e6a:	c1 5d       	subi	r28, 0xD1	; 209
    4e6c:	d0 40       	sbci	r29, 0x00	; 0
    4e6e:	34 96       	adiw	r30, 0x04	; 4
    4e70:	45 91       	lpm	r20, Z+
    4e72:	55 91       	lpm	r21, Z+
    4e74:	65 91       	lpm	r22, Z+
    4e76:	74 91       	lpm	r23, Z
    4e78:	e4 2e       	mov	r14, r20
    4e7a:	cb 53       	subi	r28, 0x3B	; 59
    4e7c:	df 4f       	sbci	r29, 0xFF	; 255
    4e7e:	48 83       	st	Y, r20
    4e80:	59 83       	std	Y+1, r21	; 0x01
    4e82:	6a 83       	std	Y+2, r22	; 0x02
    4e84:	7b 83       	std	Y+3, r23	; 0x03
    4e86:	c5 5c       	subi	r28, 0xC5	; 197
    4e88:	d0 40       	sbci	r29, 0x00	; 0
    4e8a:	29 2d       	mov	r18, r9
    4e8c:	3b 2d       	mov	r19, r11
    4e8e:	4c 2d       	mov	r20, r12
    4e90:	5d 2d       	mov	r21, r13
    4e92:	6f 2d       	mov	r22, r15
    4e94:	71 2f       	mov	r23, r17
    4e96:	8b 2f       	mov	r24, r27
    4e98:	9a 2f       	mov	r25, r26
    4e9a:	0e e2       	ldi	r16, 0x2E	; 46
    4e9c:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4ea0:	22 2e       	mov	r2, r18
    4ea2:	33 2e       	mov	r3, r19
    4ea4:	54 2e       	mov	r5, r20
    4ea6:	65 2e       	mov	r6, r21
    4ea8:	76 2e       	mov	r7, r22
    4eaa:	87 2e       	mov	r8, r23
    4eac:	f8 2f       	mov	r31, r24
    4eae:	e9 2f       	mov	r30, r25
    4eb0:	29 2d       	mov	r18, r9
    4eb2:	3b 2d       	mov	r19, r11
    4eb4:	4c 2d       	mov	r20, r12
    4eb6:	5d 2d       	mov	r21, r13
    4eb8:	6f 2d       	mov	r22, r15
    4eba:	71 2f       	mov	r23, r17
    4ebc:	8b 2f       	mov	r24, r27
    4ebe:	9a 2f       	mov	r25, r26
    4ec0:	02 e3       	ldi	r16, 0x32	; 50
    4ec2:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4ec6:	22 26       	eor	r2, r18
    4ec8:	33 26       	eor	r3, r19
    4eca:	54 26       	eor	r5, r20
    4ecc:	65 26       	eor	r6, r21
    4ece:	76 26       	eor	r7, r22
    4ed0:	87 26       	eor	r8, r23
    4ed2:	f8 27       	eor	r31, r24
    4ed4:	e9 27       	eor	r30, r25
    4ed6:	29 2d       	mov	r18, r9
    4ed8:	3b 2d       	mov	r19, r11
    4eda:	4c 2d       	mov	r20, r12
    4edc:	5d 2d       	mov	r21, r13
    4ede:	6f 2d       	mov	r22, r15
    4ee0:	71 2f       	mov	r23, r17
    4ee2:	8b 2f       	mov	r24, r27
    4ee4:	9a 2f       	mov	r25, r26
    4ee6:	07 e1       	ldi	r16, 0x17	; 23
    4ee8:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    4eec:	22 26       	eor	r2, r18
    4eee:	33 26       	eor	r3, r19
    4ef0:	54 26       	eor	r5, r20
    4ef2:	65 26       	eor	r6, r21
    4ef4:	76 26       	eor	r7, r22
    4ef6:	87 26       	eor	r8, r23
    4ef8:	f8 27       	eor	r31, r24
    4efa:	e9 27       	eor	r30, r25
    4efc:	cb 52       	subi	r28, 0x2B	; 43
    4efe:	df 4f       	sbci	r29, 0xFF	; 255
    4f00:	28 81       	ld	r18, Y
    4f02:	c5 5d       	subi	r28, 0xD5	; 213
    4f04:	d0 40       	sbci	r29, 0x00	; 0
    4f06:	ca 52       	subi	r28, 0x2A	; 42
    4f08:	df 4f       	sbci	r29, 0xFF	; 255
    4f0a:	38 81       	ld	r19, Y
    4f0c:	c6 5d       	subi	r28, 0xD6	; 214
    4f0e:	d0 40       	sbci	r29, 0x00	; 0
    4f10:	c9 52       	subi	r28, 0x29	; 41
    4f12:	df 4f       	sbci	r29, 0xFF	; 255
    4f14:	48 81       	ld	r20, Y
    4f16:	c7 5d       	subi	r28, 0xD7	; 215
    4f18:	d0 40       	sbci	r29, 0x00	; 0
    4f1a:	c8 52       	subi	r28, 0x28	; 40
    4f1c:	df 4f       	sbci	r29, 0xFF	; 255
    4f1e:	58 81       	ld	r21, Y
    4f20:	c8 5d       	subi	r28, 0xD8	; 216
    4f22:	d0 40       	sbci	r29, 0x00	; 0
    4f24:	c7 52       	subi	r28, 0x27	; 39
    4f26:	df 4f       	sbci	r29, 0xFF	; 255
    4f28:	68 81       	ld	r22, Y
    4f2a:	c9 5d       	subi	r28, 0xD9	; 217
    4f2c:	d0 40       	sbci	r29, 0x00	; 0
    4f2e:	c6 52       	subi	r28, 0x26	; 38
    4f30:	df 4f       	sbci	r29, 0xFF	; 255
    4f32:	78 81       	ld	r23, Y
    4f34:	ca 5d       	subi	r28, 0xDA	; 218
    4f36:	d0 40       	sbci	r29, 0x00	; 0
    4f38:	c3 52       	subi	r28, 0x23	; 35
    4f3a:	df 4f       	sbci	r29, 0xFF	; 255
    4f3c:	88 81       	ld	r24, Y
    4f3e:	cd 5d       	subi	r28, 0xDD	; 221
    4f40:	d0 40       	sbci	r29, 0x00	; 0
    4f42:	c2 52       	subi	r28, 0x22	; 34
    4f44:	df 4f       	sbci	r29, 0xFF	; 255
    4f46:	98 81       	ld	r25, Y
    4f48:	ce 5d       	subi	r28, 0xDE	; 222
    4f4a:	d0 40       	sbci	r29, 0x00	; 0
    4f4c:	ce 53       	subi	r28, 0x3E	; 62
    4f4e:	df 4f       	sbci	r29, 0xFF	; 255
    4f50:	b8 80       	ld	r11, Y
    4f52:	c2 5c       	subi	r28, 0xC2	; 194
    4f54:	d0 40       	sbci	r29, 0x00	; 0
    4f56:	cd 53       	subi	r28, 0x3D	; 61
    4f58:	df 4f       	sbci	r29, 0xFF	; 255
    4f5a:	c8 80       	ld	r12, Y
    4f5c:	c3 5c       	subi	r28, 0xC3	; 195
    4f5e:	d0 40       	sbci	r29, 0x00	; 0
    4f60:	cc 53       	subi	r28, 0x3C	; 60
    4f62:	df 4f       	sbci	r29, 0xFF	; 255
    4f64:	d8 80       	ld	r13, Y
    4f66:	c4 5c       	subi	r28, 0xC4	; 196
    4f68:	d0 40       	sbci	r29, 0x00	; 0
    4f6a:	ca 53       	subi	r28, 0x3A	; 58
    4f6c:	df 4f       	sbci	r29, 0xFF	; 255
    4f6e:	f8 80       	ld	r15, Y
    4f70:	c6 5c       	subi	r28, 0xC6	; 198
    4f72:	d0 40       	sbci	r29, 0x00	; 0
    4f74:	c9 53       	subi	r28, 0x39	; 57
    4f76:	df 4f       	sbci	r29, 0xFF	; 255
    4f78:	08 81       	ld	r16, Y
    4f7a:	c7 5c       	subi	r28, 0xC7	; 199
    4f7c:	d0 40       	sbci	r29, 0x00	; 0
    4f7e:	c8 53       	subi	r28, 0x38	; 56
    4f80:	df 4f       	sbci	r29, 0xFF	; 255
    4f82:	18 81       	ld	r17, Y
    4f84:	c8 5c       	subi	r28, 0xC8	; 200
    4f86:	d0 40       	sbci	r29, 0x00	; 0
    4f88:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    4f8c:	a2 2e       	mov	r10, r18
    4f8e:	b3 2e       	mov	r11, r19
    4f90:	c4 2e       	mov	r12, r20
    4f92:	d5 2e       	mov	r13, r21
    4f94:	e6 2e       	mov	r14, r22
    4f96:	f7 2e       	mov	r15, r23
    4f98:	08 2f       	mov	r16, r24
    4f9a:	19 2f       	mov	r17, r25
    4f9c:	22 2d       	mov	r18, r2
    4f9e:	33 2d       	mov	r19, r3
    4fa0:	45 2d       	mov	r20, r5
    4fa2:	56 2d       	mov	r21, r6
    4fa4:	67 2d       	mov	r22, r7
    4fa6:	78 2d       	mov	r23, r8
    4fa8:	8f 2f       	mov	r24, r31
    4faa:	9e 2f       	mov	r25, r30
    4fac:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    4fb0:	c1 52       	subi	r28, 0x21	; 33
    4fb2:	df 4f       	sbci	r29, 0xFF	; 255
    4fb4:	a8 80       	ld	r10, Y
    4fb6:	cf 5d       	subi	r28, 0xDF	; 223
    4fb8:	d0 40       	sbci	r29, 0x00	; 0
    4fba:	c0 52       	subi	r28, 0x20	; 32
    4fbc:	df 4f       	sbci	r29, 0xFF	; 255
    4fbe:	b8 80       	ld	r11, Y
    4fc0:	c0 5e       	subi	r28, 0xE0	; 224
    4fc2:	d0 40       	sbci	r29, 0x00	; 0
    4fc4:	cf 51       	subi	r28, 0x1F	; 31
    4fc6:	df 4f       	sbci	r29, 0xFF	; 255
    4fc8:	c8 80       	ld	r12, Y
    4fca:	c1 5e       	subi	r28, 0xE1	; 225
    4fcc:	d0 40       	sbci	r29, 0x00	; 0
    4fce:	ce 51       	subi	r28, 0x1E	; 30
    4fd0:	df 4f       	sbci	r29, 0xFF	; 255
    4fd2:	d8 80       	ld	r13, Y
    4fd4:	c2 5e       	subi	r28, 0xE2	; 226
    4fd6:	d0 40       	sbci	r29, 0x00	; 0
    4fd8:	cd 51       	subi	r28, 0x1D	; 29
    4fda:	df 4f       	sbci	r29, 0xFF	; 255
    4fdc:	e8 80       	ld	r14, Y
    4fde:	c3 5e       	subi	r28, 0xE3	; 227
    4fe0:	d0 40       	sbci	r29, 0x00	; 0
    4fe2:	cc 51       	subi	r28, 0x1C	; 28
    4fe4:	df 4f       	sbci	r29, 0xFF	; 255
    4fe6:	f8 80       	ld	r15, Y
    4fe8:	c4 5e       	subi	r28, 0xE4	; 228
    4fea:	d0 40       	sbci	r29, 0x00	; 0
    4fec:	cb 51       	subi	r28, 0x1B	; 27
    4fee:	df 4f       	sbci	r29, 0xFF	; 255
    4ff0:	08 81       	ld	r16, Y
    4ff2:	c5 5e       	subi	r28, 0xE5	; 229
    4ff4:	d0 40       	sbci	r29, 0x00	; 0
    4ff6:	ca 51       	subi	r28, 0x1A	; 26
    4ff8:	df 4f       	sbci	r29, 0xFF	; 255
    4ffa:	18 81       	ld	r17, Y
    4ffc:	c6 5e       	subi	r28, 0xE6	; 230
    4ffe:	d0 40       	sbci	r29, 0x00	; 0
    5000:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    5004:	c5 53       	subi	r28, 0x35	; 53
    5006:	df 4f       	sbci	r29, 0xFF	; 255
    5008:	a8 80       	ld	r10, Y
    500a:	cb 5c       	subi	r28, 0xCB	; 203
    500c:	d0 40       	sbci	r29, 0x00	; 0
    500e:	c4 53       	subi	r28, 0x34	; 52
    5010:	df 4f       	sbci	r29, 0xFF	; 255
    5012:	b8 80       	ld	r11, Y
    5014:	cc 5c       	subi	r28, 0xCC	; 204
    5016:	d0 40       	sbci	r29, 0x00	; 0
    5018:	c3 53       	subi	r28, 0x33	; 51
    501a:	df 4f       	sbci	r29, 0xFF	; 255
    501c:	c8 80       	ld	r12, Y
    501e:	cd 5c       	subi	r28, 0xCD	; 205
    5020:	d0 40       	sbci	r29, 0x00	; 0
    5022:	c2 53       	subi	r28, 0x32	; 50
    5024:	df 4f       	sbci	r29, 0xFF	; 255
    5026:	d8 80       	ld	r13, Y
    5028:	ce 5c       	subi	r28, 0xCE	; 206
    502a:	d0 40       	sbci	r29, 0x00	; 0
    502c:	c1 53       	subi	r28, 0x31	; 49
    502e:	df 4f       	sbci	r29, 0xFF	; 255
    5030:	e8 80       	ld	r14, Y
    5032:	cf 5c       	subi	r28, 0xCF	; 207
    5034:	d0 40       	sbci	r29, 0x00	; 0
    5036:	cd 52       	subi	r28, 0x2D	; 45
    5038:	df 4f       	sbci	r29, 0xFF	; 255
    503a:	f8 80       	ld	r15, Y
    503c:	c3 5d       	subi	r28, 0xD3	; 211
    503e:	d0 40       	sbci	r29, 0x00	; 0
    5040:	cc 52       	subi	r28, 0x2C	; 44
    5042:	df 4f       	sbci	r29, 0xFF	; 255
    5044:	08 81       	ld	r16, Y
    5046:	c4 5d       	subi	r28, 0xD4	; 212
    5048:	d0 40       	sbci	r29, 0x00	; 0
    504a:	14 2d       	mov	r17, r4
    504c:	0e 94 f3 31 	call	0x63e6	; 0x63e6 <__adddi3>
    5050:	c5 53       	subi	r28, 0x35	; 53
    5052:	df 4f       	sbci	r29, 0xFF	; 255
    5054:	28 83       	st	Y, r18
    5056:	cb 5c       	subi	r28, 0xCB	; 203
    5058:	d0 40       	sbci	r29, 0x00	; 0
    505a:	c4 53       	subi	r28, 0x34	; 52
    505c:	df 4f       	sbci	r29, 0xFF	; 255
    505e:	38 83       	st	Y, r19
    5060:	cc 5c       	subi	r28, 0xCC	; 204
    5062:	d0 40       	sbci	r29, 0x00	; 0
    5064:	c3 53       	subi	r28, 0x33	; 51
    5066:	df 4f       	sbci	r29, 0xFF	; 255
    5068:	48 83       	st	Y, r20
    506a:	cd 5c       	subi	r28, 0xCD	; 205
    506c:	d0 40       	sbci	r29, 0x00	; 0
    506e:	c2 53       	subi	r28, 0x32	; 50
    5070:	df 4f       	sbci	r29, 0xFF	; 255
    5072:	58 83       	st	Y, r21
    5074:	ce 5c       	subi	r28, 0xCE	; 206
    5076:	d0 40       	sbci	r29, 0x00	; 0
    5078:	c1 53       	subi	r28, 0x31	; 49
    507a:	df 4f       	sbci	r29, 0xFF	; 255
    507c:	68 83       	st	Y, r22
    507e:	cf 5c       	subi	r28, 0xCF	; 207
    5080:	d0 40       	sbci	r29, 0x00	; 0
    5082:	cd 52       	subi	r28, 0x2D	; 45
    5084:	df 4f       	sbci	r29, 0xFF	; 255
    5086:	78 83       	st	Y, r23
    5088:	c3 5d       	subi	r28, 0xD3	; 211
    508a:	d0 40       	sbci	r29, 0x00	; 0
    508c:	cc 52       	subi	r28, 0x2C	; 44
    508e:	df 4f       	sbci	r29, 0xFF	; 255
    5090:	88 83       	st	Y, r24
    5092:	c4 5d       	subi	r28, 0xD4	; 212
    5094:	d0 40       	sbci	r29, 0x00	; 0
    5096:	cb 52       	subi	r28, 0x2B	; 43
    5098:	df 4f       	sbci	r29, 0xFF	; 255
    509a:	98 83       	st	Y, r25
    509c:	c5 5d       	subi	r28, 0xD5	; 213
    509e:	d0 40       	sbci	r29, 0x00	; 0
    50a0:	cf 57       	subi	r28, 0x7F	; 127
    50a2:	df 4f       	sbci	r29, 0xFF	; 255
    50a4:	a8 80       	ld	r10, Y
    50a6:	c1 58       	subi	r28, 0x81	; 129
    50a8:	d0 40       	sbci	r29, 0x00	; 0
    50aa:	ce 57       	subi	r28, 0x7E	; 126
    50ac:	df 4f       	sbci	r29, 0xFF	; 255
    50ae:	b8 80       	ld	r11, Y
    50b0:	c2 58       	subi	r28, 0x82	; 130
    50b2:	d0 40       	sbci	r29, 0x00	; 0
    50b4:	cd 57       	subi	r28, 0x7D	; 125
    50b6:	df 4f       	sbci	r29, 0xFF	; 255
    50b8:	78 80       	ld	r7, Y
    50ba:	c3 58       	subi	r28, 0x83	; 131
    50bc:	d0 40       	sbci	r29, 0x00	; 0
    50be:	cc 57       	subi	r28, 0x7C	; 124
    50c0:	df 4f       	sbci	r29, 0xFF	; 255
    50c2:	68 80       	ld	r6, Y
    50c4:	c4 58       	subi	r28, 0x84	; 132
    50c6:	d0 40       	sbci	r29, 0x00	; 0
    50c8:	cb 57       	subi	r28, 0x7B	; 123
    50ca:	df 4f       	sbci	r29, 0xFF	; 255
    50cc:	58 80       	ld	r5, Y
    50ce:	c5 58       	subi	r28, 0x85	; 133
    50d0:	d0 40       	sbci	r29, 0x00	; 0
    50d2:	ca 57       	subi	r28, 0x7A	; 122
    50d4:	df 4f       	sbci	r29, 0xFF	; 255
    50d6:	48 80       	ld	r4, Y
    50d8:	c6 58       	subi	r28, 0x86	; 134
    50da:	d0 40       	sbci	r29, 0x00	; 0
    50dc:	c9 57       	subi	r28, 0x79	; 121
    50de:	df 4f       	sbci	r29, 0xFF	; 255
    50e0:	38 80       	ld	r3, Y
    50e2:	c7 58       	subi	r28, 0x87	; 135
    50e4:	d0 40       	sbci	r29, 0x00	; 0
    50e6:	c8 57       	subi	r28, 0x78	; 120
    50e8:	df 4f       	sbci	r29, 0xFF	; 255
    50ea:	28 80       	ld	r2, Y
    50ec:	c8 58       	subi	r28, 0x88	; 136
    50ee:	d0 40       	sbci	r29, 0x00	; 0
    50f0:	c7 57       	subi	r28, 0x77	; 119
    50f2:	df 4f       	sbci	r29, 0xFF	; 255
    50f4:	18 81       	ld	r17, Y
    50f6:	c9 58       	subi	r28, 0x89	; 137
    50f8:	d0 40       	sbci	r29, 0x00	; 0
    50fa:	ca 52       	subi	r28, 0x2A	; 42
    50fc:	df 4f       	sbci	r29, 0xFF	; 255
    50fe:	18 83       	st	Y, r17
    5100:	c6 5d       	subi	r28, 0xD6	; 214
    5102:	d0 40       	sbci	r29, 0x00	; 0
    5104:	c6 57       	subi	r28, 0x76	; 118
    5106:	df 4f       	sbci	r29, 0xFF	; 255
    5108:	18 81       	ld	r17, Y
    510a:	ca 58       	subi	r28, 0x8A	; 138
    510c:	d0 40       	sbci	r29, 0x00	; 0
    510e:	c9 52       	subi	r28, 0x29	; 41
    5110:	df 4f       	sbci	r29, 0xFF	; 255
    5112:	18 83       	st	Y, r17
    5114:	c7 5d       	subi	r28, 0xD7	; 215
    5116:	d0 40       	sbci	r29, 0x00	; 0
    5118:	c5 57       	subi	r28, 0x75	; 117
    511a:	df 4f       	sbci	r29, 0xFF	; 255
    511c:	18 81       	ld	r17, Y
    511e:	cb 58       	subi	r28, 0x8B	; 139
    5120:	d0 40       	sbci	r29, 0x00	; 0
    5122:	c8 52       	subi	r28, 0x28	; 40
    5124:	df 4f       	sbci	r29, 0xFF	; 255
    5126:	18 83       	st	Y, r17
    5128:	c8 5d       	subi	r28, 0xD8	; 216
    512a:	d0 40       	sbci	r29, 0x00	; 0
    512c:	c4 57       	subi	r28, 0x74	; 116
    512e:	df 4f       	sbci	r29, 0xFF	; 255
    5130:	18 81       	ld	r17, Y
    5132:	cc 58       	subi	r28, 0x8C	; 140
    5134:	d0 40       	sbci	r29, 0x00	; 0
    5136:	c7 52       	subi	r28, 0x27	; 39
    5138:	df 4f       	sbci	r29, 0xFF	; 255
    513a:	18 83       	st	Y, r17
    513c:	c9 5d       	subi	r28, 0xD9	; 217
    513e:	d0 40       	sbci	r29, 0x00	; 0
    5140:	c3 57       	subi	r28, 0x73	; 115
    5142:	df 4f       	sbci	r29, 0xFF	; 255
    5144:	18 81       	ld	r17, Y
    5146:	cd 58       	subi	r28, 0x8D	; 141
    5148:	d0 40       	sbci	r29, 0x00	; 0
    514a:	c6 52       	subi	r28, 0x26	; 38
    514c:	df 4f       	sbci	r29, 0xFF	; 255
    514e:	18 83       	st	Y, r17
    5150:	ca 5d       	subi	r28, 0xDA	; 218
    5152:	d0 40       	sbci	r29, 0x00	; 0
    5154:	c2 57       	subi	r28, 0x72	; 114
    5156:	df 4f       	sbci	r29, 0xFF	; 255
    5158:	18 81       	ld	r17, Y
    515a:	ce 58       	subi	r28, 0x8E	; 142
    515c:	d0 40       	sbci	r29, 0x00	; 0
    515e:	c3 52       	subi	r28, 0x23	; 35
    5160:	df 4f       	sbci	r29, 0xFF	; 255
    5162:	18 83       	st	Y, r17
    5164:	cd 5d       	subi	r28, 0xDD	; 221
    5166:	d0 40       	sbci	r29, 0x00	; 0
    5168:	c1 57       	subi	r28, 0x71	; 113
    516a:	df 4f       	sbci	r29, 0xFF	; 255
    516c:	18 81       	ld	r17, Y
    516e:	cf 58       	subi	r28, 0x8F	; 143
    5170:	d0 40       	sbci	r29, 0x00	; 0
    5172:	c2 52       	subi	r28, 0x22	; 34
    5174:	df 4f       	sbci	r29, 0xFF	; 255
    5176:	18 83       	st	Y, r17
    5178:	ce 5d       	subi	r28, 0xDE	; 222
    517a:	d0 40       	sbci	r29, 0x00	; 0
    517c:	c0 57       	subi	r28, 0x70	; 112
    517e:	df 4f       	sbci	r29, 0xFF	; 255
    5180:	88 80       	ld	r8, Y
    5182:	c0 59       	subi	r28, 0x90	; 144
    5184:	d0 40       	sbci	r29, 0x00	; 0
    5186:	cf 56       	subi	r28, 0x6F	; 111
    5188:	df 4f       	sbci	r29, 0xFF	; 255
    518a:	18 81       	ld	r17, Y
    518c:	c1 59       	subi	r28, 0x91	; 145
    518e:	d0 40       	sbci	r29, 0x00	; 0
    5190:	c1 52       	subi	r28, 0x21	; 33
    5192:	df 4f       	sbci	r29, 0xFF	; 255
    5194:	18 83       	st	Y, r17
    5196:	cf 5d       	subi	r28, 0xDF	; 223
    5198:	d0 40       	sbci	r29, 0x00	; 0
    519a:	ce 56       	subi	r28, 0x6E	; 110
    519c:	df 4f       	sbci	r29, 0xFF	; 255
    519e:	18 81       	ld	r17, Y
    51a0:	c2 59       	subi	r28, 0x92	; 146
    51a2:	d0 40       	sbci	r29, 0x00	; 0
    51a4:	c0 52       	subi	r28, 0x20	; 32
    51a6:	df 4f       	sbci	r29, 0xFF	; 255
    51a8:	18 83       	st	Y, r17
    51aa:	c0 5e       	subi	r28, 0xE0	; 224
    51ac:	d0 40       	sbci	r29, 0x00	; 0
    51ae:	cd 56       	subi	r28, 0x6D	; 109
    51b0:	df 4f       	sbci	r29, 0xFF	; 255
    51b2:	18 81       	ld	r17, Y
    51b4:	c3 59       	subi	r28, 0x93	; 147
    51b6:	d0 40       	sbci	r29, 0x00	; 0
    51b8:	cf 51       	subi	r28, 0x1F	; 31
    51ba:	df 4f       	sbci	r29, 0xFF	; 255
    51bc:	18 83       	st	Y, r17
    51be:	c1 5e       	subi	r28, 0xE1	; 225
    51c0:	d0 40       	sbci	r29, 0x00	; 0
    51c2:	cc 56       	subi	r28, 0x6C	; 108
    51c4:	df 4f       	sbci	r29, 0xFF	; 255
    51c6:	18 81       	ld	r17, Y
    51c8:	c4 59       	subi	r28, 0x94	; 148
    51ca:	d0 40       	sbci	r29, 0x00	; 0
    51cc:	ce 51       	subi	r28, 0x1E	; 30
    51ce:	df 4f       	sbci	r29, 0xFF	; 255
    51d0:	18 83       	st	Y, r17
    51d2:	c2 5e       	subi	r28, 0xE2	; 226
    51d4:	d0 40       	sbci	r29, 0x00	; 0
    51d6:	cb 56       	subi	r28, 0x6B	; 107
    51d8:	df 4f       	sbci	r29, 0xFF	; 255
    51da:	18 81       	ld	r17, Y
    51dc:	c5 59       	subi	r28, 0x95	; 149
    51de:	d0 40       	sbci	r29, 0x00	; 0
    51e0:	cd 51       	subi	r28, 0x1D	; 29
    51e2:	df 4f       	sbci	r29, 0xFF	; 255
    51e4:	18 83       	st	Y, r17
    51e6:	c3 5e       	subi	r28, 0xE3	; 227
    51e8:	d0 40       	sbci	r29, 0x00	; 0
    51ea:	ca 56       	subi	r28, 0x6A	; 106
    51ec:	df 4f       	sbci	r29, 0xFF	; 255
    51ee:	18 81       	ld	r17, Y
    51f0:	c6 59       	subi	r28, 0x96	; 150
    51f2:	d0 40       	sbci	r29, 0x00	; 0
    51f4:	cc 51       	subi	r28, 0x1C	; 28
    51f6:	df 4f       	sbci	r29, 0xFF	; 255
    51f8:	18 83       	st	Y, r17
    51fa:	c4 5e       	subi	r28, 0xE4	; 228
    51fc:	d0 40       	sbci	r29, 0x00	; 0
    51fe:	c9 56       	subi	r28, 0x69	; 105
    5200:	df 4f       	sbci	r29, 0xFF	; 255
    5202:	18 81       	ld	r17, Y
    5204:	c7 59       	subi	r28, 0x97	; 151
    5206:	d0 40       	sbci	r29, 0x00	; 0
    5208:	cb 51       	subi	r28, 0x1B	; 27
    520a:	df 4f       	sbci	r29, 0xFF	; 255
    520c:	18 83       	st	Y, r17
    520e:	c5 5e       	subi	r28, 0xE5	; 229
    5210:	d0 40       	sbci	r29, 0x00	; 0
    5212:	c8 56       	subi	r28, 0x68	; 104
    5214:	df 4f       	sbci	r29, 0xFF	; 255
    5216:	98 80       	ld	r9, Y
    5218:	c8 59       	subi	r28, 0x98	; 152
    521a:	d0 40       	sbci	r29, 0x00	; 0
    521c:	48 e3       	ldi	r20, 0x38	; 56
    521e:	50 e0       	ldi	r21, 0x00	; 0
    5220:	be 01       	movw	r22, r28
    5222:	6f 57       	subi	r22, 0x7F	; 127
    5224:	7f 4f       	sbci	r23, 0xFF	; 255
    5226:	c9 51       	subi	r28, 0x19	; 25
    5228:	df 4f       	sbci	r29, 0xFF	; 255
    522a:	88 81       	ld	r24, Y
    522c:	99 81       	ldd	r25, Y+1	; 0x01
    522e:	c7 5e       	subi	r28, 0xE7	; 231
    5230:	d0 40       	sbci	r29, 0x00	; 0
    5232:	0e 94 95 33 	call	0x672a	; 0x672a <memmove>
    5236:	2a 2d       	mov	r18, r10
    5238:	3b 2d       	mov	r19, r11
    523a:	47 2d       	mov	r20, r7
    523c:	56 2d       	mov	r21, r6
    523e:	65 2d       	mov	r22, r5
    5240:	74 2d       	mov	r23, r4
    5242:	83 2d       	mov	r24, r3
    5244:	92 2d       	mov	r25, r2
    5246:	0e e1       	ldi	r16, 0x1E	; 30
    5248:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    524c:	d2 2e       	mov	r13, r18
    524e:	e3 2e       	mov	r14, r19
    5250:	f4 2e       	mov	r15, r20
    5252:	15 2f       	mov	r17, r21
    5254:	b6 2f       	mov	r27, r22
    5256:	e7 2f       	mov	r30, r23
    5258:	a8 2f       	mov	r26, r24
    525a:	f9 2f       	mov	r31, r25
    525c:	2a 2d       	mov	r18, r10
    525e:	3b 2d       	mov	r19, r11
    5260:	47 2d       	mov	r20, r7
    5262:	56 2d       	mov	r21, r6
    5264:	65 2d       	mov	r22, r5
    5266:	74 2d       	mov	r23, r4
    5268:	83 2d       	mov	r24, r3
    526a:	92 2d       	mov	r25, r2
    526c:	04 e2       	ldi	r16, 0x24	; 36
    526e:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    5272:	d2 26       	eor	r13, r18
    5274:	e3 26       	eor	r14, r19
    5276:	f4 26       	eor	r15, r20
    5278:	15 27       	eor	r17, r21
    527a:	b6 27       	eor	r27, r22
    527c:	e7 27       	eor	r30, r23
    527e:	a8 27       	eor	r26, r24
    5280:	f9 27       	eor	r31, r25
    5282:	2a 2d       	mov	r18, r10
    5284:	3b 2d       	mov	r19, r11
    5286:	47 2d       	mov	r20, r7
    5288:	56 2d       	mov	r21, r6
    528a:	65 2d       	mov	r22, r5
    528c:	74 2d       	mov	r23, r4
    528e:	83 2d       	mov	r24, r3
    5290:	92 2d       	mov	r25, r2
    5292:	09 e1       	ldi	r16, 0x19	; 25
    5294:	0e 94 d8 31 	call	0x63b0	; 0x63b0 <__rotldi3>
    5298:	2d 25       	eor	r18, r13
    529a:	3e 25       	eor	r19, r14
    529c:	4f 25       	eor	r20, r15
    529e:	51 27       	eor	r21, r17
    52a0:	6b 27       	eor	r22, r27
    52a2:	7e 27       	eor	r23, r30
    52a4:	c1 52       	subi	r28, 0x21	; 33
    52a6:	df 4f       	sbci	r29, 0xFF	; 255
    52a8:	b8 81       	ld	r27, Y
    52aa:	cf 5d       	subi	r28, 0xDF	; 223
    52ac:	d0 40       	sbci	r29, 0x00	; 0
    52ae:	ca 52       	subi	r28, 0x2A	; 42
    52b0:	df 4f       	sbci	r29, 0xFF	; 255
    52b2:	18 81       	ld	r17, Y
    52b4:	c6 5d       	subi	r28, 0xD6	; 214
    52b6:	d0 40       	sbci	r29, 0x00	; 0
    52b8:	b1 27       	eor	r27, r17
    52ba:	c0 52       	subi	r28, 0x20	; 32
    52bc:	df 4f       	sbci	r29, 0xFF	; 255
    52be:	e8 81       	ld	r30, Y
    52c0:	c0 5e       	subi	r28, 0xE0	; 224
    52c2:	d0 40       	sbci	r29, 0x00	; 0
    52c4:	c9 52       	subi	r28, 0x29	; 41
    52c6:	df 4f       	sbci	r29, 0xFF	; 255
    52c8:	18 81       	ld	r17, Y
    52ca:	c7 5d       	subi	r28, 0xD7	; 215
    52cc:	d0 40       	sbci	r29, 0x00	; 0
    52ce:	e1 27       	eor	r30, r17
    52d0:	cf 51       	subi	r28, 0x1F	; 31
    52d2:	df 4f       	sbci	r29, 0xFF	; 255
    52d4:	c8 80       	ld	r12, Y
    52d6:	c1 5e       	subi	r28, 0xE1	; 225
    52d8:	d0 40       	sbci	r29, 0x00	; 0
    52da:	c8 52       	subi	r28, 0x28	; 40
    52dc:	df 4f       	sbci	r29, 0xFF	; 255
    52de:	18 81       	ld	r17, Y
    52e0:	c8 5d       	subi	r28, 0xD8	; 216
    52e2:	d0 40       	sbci	r29, 0x00	; 0
    52e4:	c1 26       	eor	r12, r17
    52e6:	ce 51       	subi	r28, 0x1E	; 30
    52e8:	df 4f       	sbci	r29, 0xFF	; 255
    52ea:	d8 80       	ld	r13, Y
    52ec:	c2 5e       	subi	r28, 0xE2	; 226
    52ee:	d0 40       	sbci	r29, 0x00	; 0
    52f0:	c7 52       	subi	r28, 0x27	; 39
    52f2:	df 4f       	sbci	r29, 0xFF	; 255
    52f4:	18 81       	ld	r17, Y
    52f6:	c9 5d       	subi	r28, 0xD9	; 217
    52f8:	d0 40       	sbci	r29, 0x00	; 0
    52fa:	d1 26       	eor	r13, r17
    52fc:	cd 51       	subi	r28, 0x1D	; 29
    52fe:	df 4f       	sbci	r29, 0xFF	; 255
    5300:	e8 80       	ld	r14, Y
    5302:	c3 5e       	subi	r28, 0xE3	; 227
    5304:	d0 40       	sbci	r29, 0x00	; 0
    5306:	c6 52       	subi	r28, 0x26	; 38
    5308:	df 4f       	sbci	r29, 0xFF	; 255
    530a:	18 81       	ld	r17, Y
    530c:	ca 5d       	subi	r28, 0xDA	; 218
    530e:	d0 40       	sbci	r29, 0x00	; 0
    5310:	e1 26       	eor	r14, r17
    5312:	cc 51       	subi	r28, 0x1C	; 28
    5314:	df 4f       	sbci	r29, 0xFF	; 255
    5316:	f8 80       	ld	r15, Y
    5318:	c4 5e       	subi	r28, 0xE4	; 228
    531a:	d0 40       	sbci	r29, 0x00	; 0
    531c:	c3 52       	subi	r28, 0x23	; 35
    531e:	df 4f       	sbci	r29, 0xFF	; 255
    5320:	18 81       	ld	r17, Y
    5322:	cd 5d       	subi	r28, 0xDD	; 221
    5324:	d0 40       	sbci	r29, 0x00	; 0
    5326:	f1 26       	eor	r15, r17
    5328:	cb 51       	subi	r28, 0x1B	; 27
    532a:	df 4f       	sbci	r29, 0xFF	; 255
    532c:	08 81       	ld	r16, Y
    532e:	c5 5e       	subi	r28, 0xE5	; 229
    5330:	d0 40       	sbci	r29, 0x00	; 0
    5332:	c2 52       	subi	r28, 0x22	; 34
    5334:	df 4f       	sbci	r29, 0xFF	; 255
    5336:	18 81       	ld	r17, Y
    5338:	ce 5d       	subi	r28, 0xDE	; 222
    533a:	d0 40       	sbci	r29, 0x00	; 0
    533c:	01 27       	eor	r16, r17
    533e:	19 2d       	mov	r17, r9
    5340:	18 25       	eor	r17, r8
    5342:	ab 22       	and	r10, r27
    5344:	be 22       	and	r11, r30
    5346:	c7 20       	and	r12, r7
    5348:	d6 20       	and	r13, r6
    534a:	e5 20       	and	r14, r5
    534c:	f4 20       	and	r15, r4
    534e:	03 21       	and	r16, r3
    5350:	12 21       	and	r17, r2
    5352:	ca 52       	subi	r28, 0x2A	; 42
    5354:	df 4f       	sbci	r29, 0xFF	; 255
    5356:	e8 81       	ld	r30, Y
    5358:	c6 5d       	subi	r28, 0xD6	; 214
    535a:	d0 40       	sbci	r29, 0x00	; 0
    535c:	c1 52       	subi	r28, 0x21	; 33
    535e:	df 4f       	sbci	r29, 0xFF	; 255
    5360:	b8 81       	ld	r27, Y
    5362:	cf 5d       	subi	r28, 0xDF	; 223
    5364:	d0 40       	sbci	r29, 0x00	; 0
    5366:	eb 23       	and	r30, r27
    5368:	c9 52       	subi	r28, 0x29	; 41
    536a:	df 4f       	sbci	r29, 0xFF	; 255
    536c:	28 80       	ld	r2, Y
    536e:	c7 5d       	subi	r28, 0xD7	; 215
    5370:	d0 40       	sbci	r29, 0x00	; 0
    5372:	c0 52       	subi	r28, 0x20	; 32
    5374:	df 4f       	sbci	r29, 0xFF	; 255
    5376:	b8 81       	ld	r27, Y
    5378:	c0 5e       	subi	r28, 0xE0	; 224
    537a:	d0 40       	sbci	r29, 0x00	; 0
    537c:	2b 22       	and	r2, r27
    537e:	c8 52       	subi	r28, 0x28	; 40
    5380:	df 4f       	sbci	r29, 0xFF	; 255
    5382:	38 80       	ld	r3, Y
    5384:	c8 5d       	subi	r28, 0xD8	; 216
    5386:	d0 40       	sbci	r29, 0x00	; 0
    5388:	cf 51       	subi	r28, 0x1F	; 31
    538a:	df 4f       	sbci	r29, 0xFF	; 255
    538c:	b8 81       	ld	r27, Y
    538e:	c1 5e       	subi	r28, 0xE1	; 225
    5390:	d0 40       	sbci	r29, 0x00	; 0
    5392:	3b 22       	and	r3, r27
    5394:	c7 52       	subi	r28, 0x27	; 39
    5396:	df 4f       	sbci	r29, 0xFF	; 255
    5398:	48 80       	ld	r4, Y
    539a:	c9 5d       	subi	r28, 0xD9	; 217
    539c:	d0 40       	sbci	r29, 0x00	; 0
    539e:	ce 51       	subi	r28, 0x1E	; 30
    53a0:	df 4f       	sbci	r29, 0xFF	; 255
    53a2:	b8 81       	ld	r27, Y
    53a4:	c2 5e       	subi	r28, 0xE2	; 226
    53a6:	d0 40       	sbci	r29, 0x00	; 0
    53a8:	4b 22       	and	r4, r27
    53aa:	c6 52       	subi	r28, 0x26	; 38
    53ac:	df 4f       	sbci	r29, 0xFF	; 255
    53ae:	58 80       	ld	r5, Y
    53b0:	ca 5d       	subi	r28, 0xDA	; 218
    53b2:	d0 40       	sbci	r29, 0x00	; 0
    53b4:	cd 51       	subi	r28, 0x1D	; 29
    53b6:	df 4f       	sbci	r29, 0xFF	; 255
    53b8:	b8 81       	ld	r27, Y
    53ba:	c3 5e       	subi	r28, 0xE3	; 227
    53bc:	d0 40       	sbci	r29, 0x00	; 0
    53be:	5b 22       	and	r5, r27
    53c0:	c3 52       	subi	r28, 0x23	; 35
    53c2:	df 4f       	sbci	r29, 0xFF	; 255
    53c4:	68 80       	ld	r6, Y
    53c6:	cd 5d       	subi	r28, 0xDD	; 221
    53c8:	d0 40       	sbci	r29, 0x00	; 0
    53ca:	cc 51       	subi	r28, 0x1C	; 28
    53cc:	df 4f       	sbci	r29, 0xFF	; 255
    53ce:	b8 81       	ld	r27, Y
    53d0:	c4 5e       	subi	r28, 0xE4	; 228
    53d2:	d0 40       	sbci	r29, 0x00	; 0
    53d4:	6b 22       	and	r6, r27
    53d6:	c2 52       	subi	r28, 0x22	; 34
    53d8:	df 4f       	sbci	r29, 0xFF	; 255
    53da:	78 80       	ld	r7, Y
    53dc:	ce 5d       	subi	r28, 0xDE	; 222
    53de:	d0 40       	sbci	r29, 0x00	; 0
    53e0:	cb 51       	subi	r28, 0x1B	; 27
    53e2:	df 4f       	sbci	r29, 0xFF	; 255
    53e4:	b8 81       	ld	r27, Y
    53e6:	c5 5e       	subi	r28, 0xE5	; 229
    53e8:	d0 40       	sbci	r29, 0x00	; 0
    53ea:	7b 22       	and	r7, r27
    53ec:	b8 2d       	mov	r27, r8
    53ee:	b9 21       	and	r27, r9
    53f0:	ae 26       	eor	r10, r30
    53f2:	b2 24       	eor	r11, r2
    53f4:	c3 24       	eor	r12, r3
    53f6:	d4 24       	eor	r13, r4
    53f8:	e5 24       	eor	r14, r5
    53fa:	f6 24       	eor	r15, r6
    53fc:	07 25       	eor	r16, r7
    53fe:	1b 27       	eor	r17, r27
    5400:	8a 27       	eor	r24, r26
    5402:	9f 27       	eor	r25, r31
    5404:	f0 d7       	rcall	.+4064   	; 0x63e6 <__adddi3>
    5406:	c5 53       	subi	r28, 0x35	; 53
    5408:	df 4f       	sbci	r29, 0xFF	; 255
    540a:	a8 80       	ld	r10, Y
    540c:	cb 5c       	subi	r28, 0xCB	; 203
    540e:	d0 40       	sbci	r29, 0x00	; 0
    5410:	c4 53       	subi	r28, 0x34	; 52
    5412:	df 4f       	sbci	r29, 0xFF	; 255
    5414:	b8 80       	ld	r11, Y
    5416:	cc 5c       	subi	r28, 0xCC	; 204
    5418:	d0 40       	sbci	r29, 0x00	; 0
    541a:	c3 53       	subi	r28, 0x33	; 51
    541c:	df 4f       	sbci	r29, 0xFF	; 255
    541e:	c8 80       	ld	r12, Y
    5420:	cd 5c       	subi	r28, 0xCD	; 205
    5422:	d0 40       	sbci	r29, 0x00	; 0
    5424:	c2 53       	subi	r28, 0x32	; 50
    5426:	df 4f       	sbci	r29, 0xFF	; 255
    5428:	d8 80       	ld	r13, Y
    542a:	ce 5c       	subi	r28, 0xCE	; 206
    542c:	d0 40       	sbci	r29, 0x00	; 0
    542e:	c1 53       	subi	r28, 0x31	; 49
    5430:	df 4f       	sbci	r29, 0xFF	; 255
    5432:	e8 80       	ld	r14, Y
    5434:	cf 5c       	subi	r28, 0xCF	; 207
    5436:	d0 40       	sbci	r29, 0x00	; 0
    5438:	cd 52       	subi	r28, 0x2D	; 45
    543a:	df 4f       	sbci	r29, 0xFF	; 255
    543c:	f8 80       	ld	r15, Y
    543e:	c3 5d       	subi	r28, 0xD3	; 211
    5440:	d0 40       	sbci	r29, 0x00	; 0
    5442:	cc 52       	subi	r28, 0x2C	; 44
    5444:	df 4f       	sbci	r29, 0xFF	; 255
    5446:	08 81       	ld	r16, Y
    5448:	c4 5d       	subi	r28, 0xD4	; 212
    544a:	d0 40       	sbci	r29, 0x00	; 0
    544c:	cb 52       	subi	r28, 0x2B	; 43
    544e:	df 4f       	sbci	r29, 0xFF	; 255
    5450:	18 81       	ld	r17, Y
    5452:	c5 5d       	subi	r28, 0xD5	; 213
    5454:	d0 40       	sbci	r29, 0x00	; 0
    5456:	c7 d7       	rcall	.+3982   	; 0x63e6 <__adddi3>
    5458:	cf 57       	subi	r28, 0x7F	; 127
    545a:	df 4f       	sbci	r29, 0xFF	; 255
    545c:	28 83       	st	Y, r18
    545e:	c1 58       	subi	r28, 0x81	; 129
    5460:	d0 40       	sbci	r29, 0x00	; 0
    5462:	ce 57       	subi	r28, 0x7E	; 126
    5464:	df 4f       	sbci	r29, 0xFF	; 255
    5466:	38 83       	st	Y, r19
    5468:	c2 58       	subi	r28, 0x82	; 130
    546a:	d0 40       	sbci	r29, 0x00	; 0
    546c:	cd 57       	subi	r28, 0x7D	; 125
    546e:	df 4f       	sbci	r29, 0xFF	; 255
    5470:	48 83       	st	Y, r20
    5472:	c3 58       	subi	r28, 0x83	; 131
    5474:	d0 40       	sbci	r29, 0x00	; 0
    5476:	cc 57       	subi	r28, 0x7C	; 124
    5478:	df 4f       	sbci	r29, 0xFF	; 255
    547a:	58 83       	st	Y, r21
    547c:	c4 58       	subi	r28, 0x84	; 132
    547e:	d0 40       	sbci	r29, 0x00	; 0
    5480:	cb 57       	subi	r28, 0x7B	; 123
    5482:	df 4f       	sbci	r29, 0xFF	; 255
    5484:	68 83       	st	Y, r22
    5486:	c5 58       	subi	r28, 0x85	; 133
    5488:	d0 40       	sbci	r29, 0x00	; 0
    548a:	ca 57       	subi	r28, 0x7A	; 122
    548c:	df 4f       	sbci	r29, 0xFF	; 255
    548e:	78 83       	st	Y, r23
    5490:	c6 58       	subi	r28, 0x86	; 134
    5492:	d0 40       	sbci	r29, 0x00	; 0
    5494:	c9 57       	subi	r28, 0x79	; 121
    5496:	df 4f       	sbci	r29, 0xFF	; 255
    5498:	88 83       	st	Y, r24
    549a:	c7 58       	subi	r28, 0x87	; 135
    549c:	d0 40       	sbci	r29, 0x00	; 0
    549e:	c8 57       	subi	r28, 0x78	; 120
    54a0:	df 4f       	sbci	r29, 0xFF	; 255
    54a2:	98 83       	st	Y, r25
    54a4:	c8 58       	subi	r28, 0x88	; 136
    54a6:	d0 40       	sbci	r29, 0x00	; 0
    54a8:	2a 2d       	mov	r18, r10
    54aa:	3b 2d       	mov	r19, r11
    54ac:	4c 2d       	mov	r20, r12
    54ae:	5d 2d       	mov	r21, r13
    54b0:	6e 2d       	mov	r22, r14
    54b2:	7f 2d       	mov	r23, r15
    54b4:	80 2f       	mov	r24, r16
    54b6:	91 2f       	mov	r25, r17
    54b8:	cf 55       	subi	r28, 0x5F	; 95
    54ba:	df 4f       	sbci	r29, 0xFF	; 255
    54bc:	a8 80       	ld	r10, Y
    54be:	c1 5a       	subi	r28, 0xA1	; 161
    54c0:	d0 40       	sbci	r29, 0x00	; 0
    54c2:	ce 55       	subi	r28, 0x5E	; 94
    54c4:	df 4f       	sbci	r29, 0xFF	; 255
    54c6:	b8 80       	ld	r11, Y
    54c8:	c2 5a       	subi	r28, 0xA2	; 162
    54ca:	d0 40       	sbci	r29, 0x00	; 0
    54cc:	cd 55       	subi	r28, 0x5D	; 93
    54ce:	df 4f       	sbci	r29, 0xFF	; 255
    54d0:	c8 80       	ld	r12, Y
    54d2:	c3 5a       	subi	r28, 0xA3	; 163
    54d4:	d0 40       	sbci	r29, 0x00	; 0
    54d6:	cc 55       	subi	r28, 0x5C	; 92
    54d8:	df 4f       	sbci	r29, 0xFF	; 255
    54da:	d8 80       	ld	r13, Y
    54dc:	c4 5a       	subi	r28, 0xA4	; 164
    54de:	d0 40       	sbci	r29, 0x00	; 0
    54e0:	cb 55       	subi	r28, 0x5B	; 91
    54e2:	df 4f       	sbci	r29, 0xFF	; 255
    54e4:	e8 80       	ld	r14, Y
    54e6:	c5 5a       	subi	r28, 0xA5	; 165
    54e8:	d0 40       	sbci	r29, 0x00	; 0
    54ea:	ca 55       	subi	r28, 0x5A	; 90
    54ec:	df 4f       	sbci	r29, 0xFF	; 255
    54ee:	f8 80       	ld	r15, Y
    54f0:	c6 5a       	subi	r28, 0xA6	; 166
    54f2:	d0 40       	sbci	r29, 0x00	; 0
    54f4:	c9 55       	subi	r28, 0x59	; 89
    54f6:	df 4f       	sbci	r29, 0xFF	; 255
    54f8:	08 81       	ld	r16, Y
    54fa:	c7 5a       	subi	r28, 0xA7	; 167
    54fc:	d0 40       	sbci	r29, 0x00	; 0
    54fe:	c8 55       	subi	r28, 0x58	; 88
    5500:	df 4f       	sbci	r29, 0xFF	; 255
    5502:	18 81       	ld	r17, Y
    5504:	c8 5a       	subi	r28, 0xA8	; 168
    5506:	d0 40       	sbci	r29, 0x00	; 0
    5508:	6e d7       	rcall	.+3804   	; 0x63e6 <__adddi3>
    550a:	cf 55       	subi	r28, 0x5F	; 95
    550c:	df 4f       	sbci	r29, 0xFF	; 255
    550e:	28 83       	st	Y, r18
    5510:	c1 5a       	subi	r28, 0xA1	; 161
    5512:	d0 40       	sbci	r29, 0x00	; 0
    5514:	ce 55       	subi	r28, 0x5E	; 94
    5516:	df 4f       	sbci	r29, 0xFF	; 255
    5518:	38 83       	st	Y, r19
    551a:	c2 5a       	subi	r28, 0xA2	; 162
    551c:	d0 40       	sbci	r29, 0x00	; 0
    551e:	cd 55       	subi	r28, 0x5D	; 93
    5520:	df 4f       	sbci	r29, 0xFF	; 255
    5522:	48 83       	st	Y, r20
    5524:	c3 5a       	subi	r28, 0xA3	; 163
    5526:	d0 40       	sbci	r29, 0x00	; 0
    5528:	cc 55       	subi	r28, 0x5C	; 92
    552a:	df 4f       	sbci	r29, 0xFF	; 255
    552c:	58 83       	st	Y, r21
    552e:	c4 5a       	subi	r28, 0xA4	; 164
    5530:	d0 40       	sbci	r29, 0x00	; 0
    5532:	cb 55       	subi	r28, 0x5B	; 91
    5534:	df 4f       	sbci	r29, 0xFF	; 255
    5536:	68 83       	st	Y, r22
    5538:	c5 5a       	subi	r28, 0xA5	; 165
    553a:	d0 40       	sbci	r29, 0x00	; 0
    553c:	ca 55       	subi	r28, 0x5A	; 90
    553e:	df 4f       	sbci	r29, 0xFF	; 255
    5540:	78 83       	st	Y, r23
    5542:	c6 5a       	subi	r28, 0xA6	; 166
    5544:	d0 40       	sbci	r29, 0x00	; 0
    5546:	c9 55       	subi	r28, 0x59	; 89
    5548:	df 4f       	sbci	r29, 0xFF	; 255
    554a:	88 83       	st	Y, r24
    554c:	c7 5a       	subi	r28, 0xA7	; 167
    554e:	d0 40       	sbci	r29, 0x00	; 0
    5550:	c8 55       	subi	r28, 0x58	; 88
    5552:	df 4f       	sbci	r29, 0xFF	; 255
    5554:	98 83       	st	Y, r25
    5556:	c8 5a       	subi	r28, 0xA8	; 168
    5558:	d0 40       	sbci	r29, 0x00	; 0
    555a:	c0 53       	subi	r28, 0x30	; 48
    555c:	df 4f       	sbci	r29, 0xFF	; 255
    555e:	e8 81       	ld	r30, Y
    5560:	c0 5d       	subi	r28, 0xD0	; 208
    5562:	d0 40       	sbci	r29, 0x00	; 0
    5564:	ef 5f       	subi	r30, 0xFF	; 255
    5566:	c0 53       	subi	r28, 0x30	; 48
    5568:	df 4f       	sbci	r29, 0xFF	; 255
    556a:	e8 83       	st	Y, r30
    556c:	c0 5d       	subi	r28, 0xD0	; 208
    556e:	d0 40       	sbci	r29, 0x00	; 0
    5570:	c5 52       	subi	r28, 0x25	; 37
    5572:	df 4f       	sbci	r29, 0xFF	; 255
    5574:	88 81       	ld	r24, Y
    5576:	99 81       	ldd	r25, Y+1	; 0x01
    5578:	cb 5d       	subi	r28, 0xDB	; 219
    557a:	d0 40       	sbci	r29, 0x00	; 0
    557c:	08 96       	adiw	r24, 0x08	; 8
    557e:	c5 52       	subi	r28, 0x25	; 37
    5580:	df 4f       	sbci	r29, 0xFF	; 255
    5582:	99 83       	std	Y+1, r25	; 0x01
    5584:	88 83       	st	Y, r24
    5586:	cb 5d       	subi	r28, 0xDB	; 219
    5588:	d0 40       	sbci	r29, 0x00	; 0
    558a:	cf 52       	subi	r28, 0x2F	; 47
    558c:	df 4f       	sbci	r29, 0xFF	; 255
    558e:	a8 81       	ld	r26, Y
    5590:	b9 81       	ldd	r27, Y+1	; 0x01
    5592:	c1 5d       	subi	r28, 0xD1	; 209
    5594:	d0 40       	sbci	r29, 0x00	; 0
    5596:	18 96       	adiw	r26, 0x08	; 8
    5598:	cf 52       	subi	r28, 0x2F	; 47
    559a:	df 4f       	sbci	r29, 0xFF	; 255
    559c:	b9 83       	std	Y+1, r27	; 0x01
    559e:	a8 83       	st	Y, r26
    55a0:	c1 5d       	subi	r28, 0xD1	; 209
    55a2:	d0 40       	sbci	r29, 0x00	; 0
    55a4:	e0 35       	cpi	r30, 0x50	; 80
    55a6:	09 f0       	breq	.+2      	; 0x55aa <sha2_large_common_nextBlock+0xfe8>
    55a8:	ee c8       	rjmp	.-3620   	; 0x4786 <sha2_large_common_nextBlock+0x1c4>
    55aa:	0f 2e       	mov	r0, r31
    55ac:	f7 e0       	ldi	r31, 0x07	; 7
    55ae:	9f 2e       	mov	r9, r31
    55b0:	f0 2d       	mov	r31, r0
    55b2:	79 2c       	mov	r7, r9
    55b4:	c7 51       	subi	r28, 0x17	; 23
    55b6:	df 4f       	sbci	r29, 0xFF	; 255
    55b8:	88 80       	ld	r8, Y
    55ba:	99 80       	ldd	r9, Y+1	; 0x01
    55bc:	c9 5e       	subi	r28, 0xE9	; 233
    55be:	d0 40       	sbci	r29, 0x00	; 0
    55c0:	a7 2d       	mov	r26, r7
    55c2:	b0 e0       	ldi	r27, 0x00	; 0
    55c4:	aa 0f       	add	r26, r26
    55c6:	bb 1f       	adc	r27, r27
    55c8:	aa 0f       	add	r26, r26
    55ca:	bb 1f       	adc	r27, r27
    55cc:	aa 0f       	add	r26, r26
    55ce:	bb 1f       	adc	r27, r27
    55d0:	f4 01       	movw	r30, r8
    55d2:	ea 0f       	add	r30, r26
    55d4:	fb 1f       	adc	r31, r27
    55d6:	81 e8       	ldi	r24, 0x81	; 129
    55d8:	90 e0       	ldi	r25, 0x00	; 0
    55da:	8c 0f       	add	r24, r28
    55dc:	9d 1f       	adc	r25, r29
    55de:	a8 0f       	add	r26, r24
    55e0:	b9 1f       	adc	r27, r25
    55e2:	20 81       	ld	r18, Z
    55e4:	31 81       	ldd	r19, Z+1	; 0x01
    55e6:	42 81       	ldd	r20, Z+2	; 0x02
    55e8:	53 81       	ldd	r21, Z+3	; 0x03
    55ea:	64 81       	ldd	r22, Z+4	; 0x04
    55ec:	75 81       	ldd	r23, Z+5	; 0x05
    55ee:	86 81       	ldd	r24, Z+6	; 0x06
    55f0:	97 81       	ldd	r25, Z+7	; 0x07
    55f2:	ac 90       	ld	r10, X
    55f4:	11 96       	adiw	r26, 0x01	; 1
    55f6:	bc 90       	ld	r11, X
    55f8:	11 97       	sbiw	r26, 0x01	; 1
    55fa:	12 96       	adiw	r26, 0x02	; 2
    55fc:	cc 90       	ld	r12, X
    55fe:	12 97       	sbiw	r26, 0x02	; 2
    5600:	13 96       	adiw	r26, 0x03	; 3
    5602:	dc 90       	ld	r13, X
    5604:	13 97       	sbiw	r26, 0x03	; 3
    5606:	14 96       	adiw	r26, 0x04	; 4
    5608:	ec 90       	ld	r14, X
    560a:	14 97       	sbiw	r26, 0x04	; 4
    560c:	15 96       	adiw	r26, 0x05	; 5
    560e:	fc 90       	ld	r15, X
    5610:	15 97       	sbiw	r26, 0x05	; 5
    5612:	16 96       	adiw	r26, 0x06	; 6
    5614:	0c 91       	ld	r16, X
    5616:	16 97       	sbiw	r26, 0x06	; 6
    5618:	17 96       	adiw	r26, 0x07	; 7
    561a:	1c 91       	ld	r17, X
    561c:	e4 d6       	rcall	.+3528   	; 0x63e6 <__adddi3>
    561e:	20 83       	st	Z, r18
    5620:	31 83       	std	Z+1, r19	; 0x01
    5622:	42 83       	std	Z+2, r20	; 0x02
    5624:	53 83       	std	Z+3, r21	; 0x03
    5626:	64 83       	std	Z+4, r22	; 0x04
    5628:	75 83       	std	Z+5, r23	; 0x05
    562a:	86 83       	std	Z+6, r24	; 0x06
    562c:	97 83       	std	Z+7, r25	; 0x07
    562e:	7a 94       	dec	r7
    5630:	9f ef       	ldi	r25, 0xFF	; 255
    5632:	79 12       	cpse	r7, r25
    5634:	c5 cf       	rjmp	.-118    	; 0x55c0 <sha2_large_common_nextBlock+0xffe>
    5636:	c7 51       	subi	r28, 0x17	; 23
    5638:	df 4f       	sbci	r29, 0xFF	; 255
    563a:	e8 81       	ld	r30, Y
    563c:	f9 81       	ldd	r31, Y+1	; 0x01
    563e:	c9 5e       	subi	r28, 0xE9	; 233
    5640:	d0 40       	sbci	r29, 0x00	; 0
    5642:	e0 5c       	subi	r30, 0xC0	; 192
    5644:	ff 4f       	sbci	r31, 0xFF	; 255
    5646:	80 81       	ld	r24, Z
    5648:	91 81       	ldd	r25, Z+1	; 0x01
    564a:	a2 81       	ldd	r26, Z+2	; 0x02
    564c:	b3 81       	ldd	r27, Z+3	; 0x03
    564e:	01 96       	adiw	r24, 0x01	; 1
    5650:	a1 1d       	adc	r26, r1
    5652:	b1 1d       	adc	r27, r1
    5654:	80 83       	st	Z, r24
    5656:	91 83       	std	Z+1, r25	; 0x01
    5658:	a2 83       	std	Z+2, r26	; 0x02
    565a:	b3 83       	std	Z+3, r27	; 0x03
    565c:	c6 51       	subi	r28, 0x16	; 22
    565e:	df 4f       	sbci	r29, 0xFF	; 255
    5660:	0f b6       	in	r0, 0x3f	; 63
    5662:	f8 94       	cli
    5664:	de bf       	out	0x3e, r29	; 62
    5666:	0f be       	out	0x3f, r0	; 63
    5668:	cd bf       	out	0x3d, r28	; 61
    566a:	df 91       	pop	r29
    566c:	cf 91       	pop	r28
    566e:	1f 91       	pop	r17
    5670:	0f 91       	pop	r16
    5672:	ff 90       	pop	r15
    5674:	ef 90       	pop	r14
    5676:	df 90       	pop	r13
    5678:	cf 90       	pop	r12
    567a:	bf 90       	pop	r11
    567c:	af 90       	pop	r10
    567e:	9f 90       	pop	r9
    5680:	8f 90       	pop	r8
    5682:	7f 90       	pop	r7
    5684:	6f 90       	pop	r6
    5686:	5f 90       	pop	r5
    5688:	4f 90       	pop	r4
    568a:	3f 90       	pop	r3
    568c:	2f 90       	pop	r2
    568e:	08 95       	ret

00005690 <sha2_large_common_lastBlock>:
    5690:	2f 92       	push	r2
    5692:	3f 92       	push	r3
    5694:	4f 92       	push	r4
    5696:	5f 92       	push	r5
    5698:	6f 92       	push	r6
    569a:	7f 92       	push	r7
    569c:	8f 92       	push	r8
    569e:	9f 92       	push	r9
    56a0:	af 92       	push	r10
    56a2:	bf 92       	push	r11
    56a4:	cf 92       	push	r12
    56a6:	df 92       	push	r13
    56a8:	ef 92       	push	r14
    56aa:	ff 92       	push	r15
    56ac:	0f 93       	push	r16
    56ae:	1f 93       	push	r17
    56b0:	cf 93       	push	r28
    56b2:	df 93       	push	r29
    56b4:	cd b7       	in	r28, 0x3d	; 61
    56b6:	de b7       	in	r29, 0x3e	; 62
    56b8:	cc 58       	subi	r28, 0x8C	; 140
    56ba:	d1 09       	sbc	r29, r1
    56bc:	0f b6       	in	r0, 0x3f	; 63
    56be:	f8 94       	cli
    56c0:	de bf       	out	0x3e, r29	; 62
    56c2:	0f be       	out	0x3f, r0	; 63
    56c4:	cd bf       	out	0x3d, r28	; 61
    56c6:	cf 57       	subi	r28, 0x7F	; 127
    56c8:	df 4f       	sbci	r29, 0xFF	; 255
    56ca:	99 83       	std	Y+1, r25	; 0x01
    56cc:	88 83       	st	Y, r24
    56ce:	c1 58       	subi	r28, 0x81	; 129
    56d0:	d0 40       	sbci	r29, 0x00	; 0
    56d2:	c5 57       	subi	r28, 0x75	; 117
    56d4:	df 4f       	sbci	r29, 0xFF	; 255
    56d6:	79 83       	std	Y+1, r23	; 0x01
    56d8:	68 83       	st	Y, r22
    56da:	cb 58       	subi	r28, 0x8B	; 139
    56dc:	d0 40       	sbci	r29, 0x00	; 0
    56de:	4a 01       	movw	r8, r20
    56e0:	41 15       	cp	r20, r1
    56e2:	24 e0       	ldi	r18, 0x04	; 4
    56e4:	52 07       	cpc	r21, r18
    56e6:	78 f1       	brcs	.+94     	; 0x5746 <sha2_large_common_lastBlock+0xb6>
    56e8:	7a 01       	movw	r14, r20
    56ea:	8b 01       	movw	r16, r22
    56ec:	b8 01       	movw	r22, r16
    56ee:	cf 57       	subi	r28, 0x7F	; 127
    56f0:	df 4f       	sbci	r29, 0xFF	; 255
    56f2:	88 81       	ld	r24, Y
    56f4:	99 81       	ldd	r25, Y+1	; 0x01
    56f6:	c1 58       	subi	r28, 0x81	; 129
    56f8:	d0 40       	sbci	r29, 0x00	; 0
    56fa:	0e 94 e1 22 	call	0x45c2	; 0x45c2 <sha2_large_common_nextBlock>
    56fe:	00 58       	subi	r16, 0x80	; 128
    5700:	1f 4f       	sbci	r17, 0xFF	; 255
    5702:	34 e0       	ldi	r19, 0x04	; 4
    5704:	f3 1a       	sub	r15, r19
    5706:	e1 14       	cp	r14, r1
    5708:	84 e0       	ldi	r24, 0x04	; 4
    570a:	f8 06       	cpc	r15, r24
    570c:	78 f7       	brcc	.-34     	; 0x56ec <sha2_large_common_lastBlock+0x5c>
    570e:	c4 01       	movw	r24, r8
    5710:	94 50       	subi	r25, 0x04	; 4
    5712:	89 2f       	mov	r24, r25
    5714:	99 27       	eor	r25, r25
    5716:	86 95       	lsr	r24
    5718:	86 95       	lsr	r24
    571a:	01 96       	adiw	r24, 0x01	; 1
    571c:	96 95       	lsr	r25
    571e:	98 2f       	mov	r25, r24
    5720:	88 27       	eor	r24, r24
    5722:	97 95       	ror	r25
    5724:	87 95       	ror	r24
    5726:	c5 57       	subi	r28, 0x75	; 117
    5728:	df 4f       	sbci	r29, 0xFF	; 255
    572a:	e8 81       	ld	r30, Y
    572c:	f9 81       	ldd	r31, Y+1	; 0x01
    572e:	cb 58       	subi	r28, 0x8B	; 139
    5730:	d0 40       	sbci	r29, 0x00	; 0
    5732:	e8 0f       	add	r30, r24
    5734:	f9 1f       	adc	r31, r25
    5736:	c5 57       	subi	r28, 0x75	; 117
    5738:	df 4f       	sbci	r29, 0xFF	; 255
    573a:	f9 83       	std	Y+1, r31	; 0x01
    573c:	e8 83       	st	Y, r30
    573e:	cb 58       	subi	r28, 0x8B	; 139
    5740:	d0 40       	sbci	r29, 0x00	; 0
    5742:	f3 e0       	ldi	r31, 0x03	; 3
    5744:	9f 22       	and	r9, r31
    5746:	cf 57       	subi	r28, 0x7F	; 127
    5748:	df 4f       	sbci	r29, 0xFF	; 255
    574a:	e8 81       	ld	r30, Y
    574c:	f9 81       	ldd	r31, Y+1	; 0x01
    574e:	c1 58       	subi	r28, 0x81	; 129
    5750:	d0 40       	sbci	r29, 0x00	; 0
    5752:	e0 5c       	subi	r30, 0xC0	; 192
    5754:	ff 4f       	sbci	r31, 0xFF	; 255
    5756:	80 81       	ld	r24, Z
    5758:	91 81       	ldd	r25, Z+1	; 0x01
    575a:	a2 81       	ldd	r26, Z+2	; 0x02
    575c:	b3 81       	ldd	r27, Z+3	; 0x03
    575e:	5c 01       	movw	r10, r24
    5760:	6d 01       	movw	r12, r26
    5762:	28 2f       	mov	r18, r24
    5764:	3b 2d       	mov	r19, r11
    5766:	4c 2d       	mov	r20, r12
    5768:	5d 2d       	mov	r21, r13
    576a:	60 e0       	ldi	r22, 0x00	; 0
    576c:	70 e0       	ldi	r23, 0x00	; 0
    576e:	80 e0       	ldi	r24, 0x00	; 0
    5770:	90 e0       	ldi	r25, 0x00	; 0
    5772:	0a e0       	ldi	r16, 0x0A	; 10
    5774:	e6 d5       	rcall	.+3020   	; 0x6342 <__ashldi3>
    5776:	54 01       	movw	r10, r8
    5778:	c1 2c       	mov	r12, r1
    577a:	d1 2c       	mov	r13, r1
    577c:	e1 2c       	mov	r14, r1
    577e:	f1 2c       	mov	r15, r1
    5780:	87 01       	movw	r16, r14
    5782:	cd 57       	subi	r28, 0x7D	; 125
    5784:	df 4f       	sbci	r29, 0xFF	; 255
    5786:	88 82       	st	Y, r8
    5788:	c3 58       	subi	r28, 0x83	; 131
    578a:	d0 40       	sbci	r29, 0x00	; 0
    578c:	cc 57       	subi	r28, 0x7C	; 124
    578e:	df 4f       	sbci	r29, 0xFF	; 255
    5790:	b8 82       	st	Y, r11
    5792:	c4 58       	subi	r28, 0x84	; 132
    5794:	d0 40       	sbci	r29, 0x00	; 0
    5796:	cb 57       	subi	r28, 0x7B	; 123
    5798:	df 4f       	sbci	r29, 0xFF	; 255
    579a:	c8 82       	st	Y, r12
    579c:	c5 58       	subi	r28, 0x85	; 133
    579e:	d0 40       	sbci	r29, 0x00	; 0
    57a0:	ca 57       	subi	r28, 0x7A	; 122
    57a2:	df 4f       	sbci	r29, 0xFF	; 255
    57a4:	d8 82       	st	Y, r13
    57a6:	c6 58       	subi	r28, 0x86	; 134
    57a8:	d0 40       	sbci	r29, 0x00	; 0
    57aa:	c9 57       	subi	r28, 0x79	; 121
    57ac:	df 4f       	sbci	r29, 0xFF	; 255
    57ae:	e8 82       	st	Y, r14
    57b0:	c7 58       	subi	r28, 0x87	; 135
    57b2:	d0 40       	sbci	r29, 0x00	; 0
    57b4:	c8 57       	subi	r28, 0x78	; 120
    57b6:	df 4f       	sbci	r29, 0xFF	; 255
    57b8:	f8 82       	st	Y, r15
    57ba:	c8 58       	subi	r28, 0x88	; 136
    57bc:	d0 40       	sbci	r29, 0x00	; 0
    57be:	c7 57       	subi	r28, 0x77	; 119
    57c0:	df 4f       	sbci	r29, 0xFF	; 255
    57c2:	08 83       	st	Y, r16
    57c4:	c9 58       	subi	r28, 0x89	; 137
    57c6:	d0 40       	sbci	r29, 0x00	; 0
    57c8:	c6 57       	subi	r28, 0x76	; 118
    57ca:	df 4f       	sbci	r29, 0xFF	; 255
    57cc:	18 83       	st	Y, r17
    57ce:	ca 58       	subi	r28, 0x8A	; 138
    57d0:	d0 40       	sbci	r29, 0x00	; 0
    57d2:	c1 2c       	mov	r12, r1
    57d4:	d1 2c       	mov	r13, r1
    57d6:	e1 2c       	mov	r14, r1
    57d8:	f1 2c       	mov	r15, r1
    57da:	00 e0       	ldi	r16, 0x00	; 0
    57dc:	10 e0       	ldi	r17, 0x00	; 0
    57de:	03 d6       	rcall	.+3078   	; 0x63e6 <__adddi3>
    57e0:	e2 2f       	mov	r30, r18
    57e2:	a3 2e       	mov	r10, r19
    57e4:	b4 2e       	mov	r11, r20
    57e6:	b5 2f       	mov	r27, r21
    57e8:	a6 2f       	mov	r26, r22
    57ea:	f7 2f       	mov	r31, r23
    57ec:	28 2e       	mov	r2, r24
    57ee:	39 2e       	mov	r3, r25
    57f0:	68 94       	set
    57f2:	44 24       	eor	r4, r4
    57f4:	43 f8       	bld	r4, 3
    57f6:	71 2c       	mov	r7, r1
    57f8:	51 2c       	mov	r5, r1
    57fa:	61 2c       	mov	r6, r1
    57fc:	27 2d       	mov	r18, r7
    57fe:	3c 2d       	mov	r19, r12
    5800:	4d 2d       	mov	r20, r13
    5802:	5e 2d       	mov	r21, r14
    5804:	6f 2d       	mov	r22, r15
    5806:	71 2f       	mov	r23, r17
    5808:	85 2d       	mov	r24, r5
    580a:	96 2d       	mov	r25, r6
    580c:	08 e0       	ldi	r16, 0x08	; 8
    580e:	99 d5       	rcall	.+2866   	; 0x6342 <__ashldi3>
    5810:	7e 2e       	mov	r7, r30
    5812:	72 2a       	or	r7, r18
    5814:	c3 2e       	mov	r12, r19
    5816:	d4 2e       	mov	r13, r20
    5818:	e5 2e       	mov	r14, r21
    581a:	f6 2e       	mov	r15, r22
    581c:	17 2f       	mov	r17, r23
    581e:	58 2e       	mov	r5, r24
    5820:	69 2e       	mov	r6, r25
    5822:	2e 2f       	mov	r18, r30
    5824:	3a 2d       	mov	r19, r10
    5826:	4b 2d       	mov	r20, r11
    5828:	5b 2f       	mov	r21, r27
    582a:	6a 2f       	mov	r22, r26
    582c:	7f 2f       	mov	r23, r31
    582e:	82 2d       	mov	r24, r2
    5830:	93 2d       	mov	r25, r3
    5832:	a2 d5       	rcall	.+2884   	; 0x6378 <__lshrdi3>
    5834:	e2 2f       	mov	r30, r18
    5836:	a3 2e       	mov	r10, r19
    5838:	b4 2e       	mov	r11, r20
    583a:	b5 2f       	mov	r27, r21
    583c:	a6 2f       	mov	r26, r22
    583e:	f7 2f       	mov	r31, r23
    5840:	28 2e       	mov	r2, r24
    5842:	39 2e       	mov	r3, r25
    5844:	4a 94       	dec	r4
    5846:	41 10       	cpse	r4, r1
    5848:	d9 cf       	rjmp	.-78     	; 0x57fc <sha2_large_common_lastBlock+0x16c>
    584a:	9e 01       	movw	r18, r28
    584c:	2f 5f       	subi	r18, 0xFF	; 255
    584e:	3f 4f       	sbci	r19, 0xFF	; 255
    5850:	59 01       	movw	r10, r18
    5852:	80 e8       	ldi	r24, 0x80	; 128
    5854:	f9 01       	movw	r30, r18
    5856:	11 92       	st	Z+, r1
    5858:	8a 95       	dec	r24
    585a:	e9 f7       	brne	.-6      	; 0x5856 <sha2_large_common_lastBlock+0x1c6>
    585c:	a4 01       	movw	r20, r8
    585e:	49 5f       	subi	r20, 0xF9	; 249
    5860:	5f 4f       	sbci	r21, 0xFF	; 255
    5862:	56 95       	lsr	r21
    5864:	47 95       	ror	r20
    5866:	56 95       	lsr	r21
    5868:	47 95       	ror	r20
    586a:	56 95       	lsr	r21
    586c:	47 95       	ror	r20
    586e:	c5 57       	subi	r28, 0x75	; 117
    5870:	df 4f       	sbci	r29, 0xFF	; 255
    5872:	68 81       	ld	r22, Y
    5874:	79 81       	ldd	r23, Y+1	; 0x01
    5876:	cb 58       	subi	r28, 0x8B	; 139
    5878:	d0 40       	sbci	r29, 0x00	; 0
    587a:	c9 01       	movw	r24, r18
    587c:	4d d7       	rcall	.+3738   	; 0x6718 <memcpy>
    587e:	f4 01       	movw	r30, r8
    5880:	f6 95       	lsr	r31
    5882:	e7 95       	ror	r30
    5884:	f6 95       	lsr	r31
    5886:	e7 95       	ror	r30
    5888:	f6 95       	lsr	r31
    588a:	e7 95       	ror	r30
    588c:	ea 0d       	add	r30, r10
    588e:	fb 1d       	adc	r31, r11
    5890:	94 01       	movw	r18, r8
    5892:	27 70       	andi	r18, 0x07	; 7
    5894:	33 27       	eor	r19, r19
    5896:	80 e8       	ldi	r24, 0x80	; 128
    5898:	90 e0       	ldi	r25, 0x00	; 0
    589a:	02 c0       	rjmp	.+4      	; 0x58a0 <sha2_large_common_lastBlock+0x210>
    589c:	95 95       	asr	r25
    589e:	87 95       	ror	r24
    58a0:	2a 95       	dec	r18
    58a2:	e2 f7       	brpl	.-8      	; 0x589c <sha2_large_common_lastBlock+0x20c>
    58a4:	90 81       	ld	r25, Z
    58a6:	89 2b       	or	r24, r25
    58a8:	80 83       	st	Z, r24
    58aa:	f0 e8       	ldi	r31, 0x80	; 128
    58ac:	8f 16       	cp	r8, r31
    58ae:	f3 e0       	ldi	r31, 0x03	; 3
    58b0:	9f 06       	cpc	r9, r31
    58b2:	70 f0       	brcs	.+28     	; 0x58d0 <sha2_large_common_lastBlock+0x240>
    58b4:	b5 01       	movw	r22, r10
    58b6:	cf 57       	subi	r28, 0x7F	; 127
    58b8:	df 4f       	sbci	r29, 0xFF	; 255
    58ba:	88 81       	ld	r24, Y
    58bc:	99 81       	ldd	r25, Y+1	; 0x01
    58be:	c1 58       	subi	r28, 0x81	; 129
    58c0:	d0 40       	sbci	r29, 0x00	; 0
    58c2:	0e 94 e1 22 	call	0x45c2	; 0x45c2 <sha2_large_common_nextBlock>
    58c6:	88 e7       	ldi	r24, 0x78	; 120
    58c8:	f5 01       	movw	r30, r10
    58ca:	11 92       	st	Z+, r1
    58cc:	8a 95       	dec	r24
    58ce:	e9 f7       	brne	.-6      	; 0x58ca <sha2_large_common_lastBlock+0x23a>
    58d0:	ea 96       	adiw	r28, 0x3a	; 58
    58d2:	7f ae       	std	Y+63, r7	; 0x3f
    58d4:	ea 97       	sbiw	r28, 0x3a	; 58
    58d6:	eb 96       	adiw	r28, 0x3b	; 59
    58d8:	cf ae       	std	Y+63, r12	; 0x3f
    58da:	eb 97       	sbiw	r28, 0x3b	; 59
    58dc:	ec 96       	adiw	r28, 0x3c	; 60
    58de:	df ae       	std	Y+63, r13	; 0x3f
    58e0:	ec 97       	sbiw	r28, 0x3c	; 60
    58e2:	ed 96       	adiw	r28, 0x3d	; 61
    58e4:	ef ae       	std	Y+63, r14	; 0x3f
    58e6:	ed 97       	sbiw	r28, 0x3d	; 61
    58e8:	ee 96       	adiw	r28, 0x3e	; 62
    58ea:	ff ae       	std	Y+63, r15	; 0x3f
    58ec:	ee 97       	sbiw	r28, 0x3e	; 62
    58ee:	ef 96       	adiw	r28, 0x3f	; 63
    58f0:	1f af       	std	Y+63, r17	; 0x3f
    58f2:	ef 97       	sbiw	r28, 0x3f	; 63
    58f4:	c1 58       	subi	r28, 0x81	; 129
    58f6:	df 4f       	sbci	r29, 0xFF	; 255
    58f8:	58 82       	st	Y, r5
    58fa:	cf 57       	subi	r28, 0x7F	; 127
    58fc:	d0 40       	sbci	r29, 0x00	; 0
    58fe:	c0 58       	subi	r28, 0x80	; 128
    5900:	df 4f       	sbci	r29, 0xFF	; 255
    5902:	68 82       	st	Y, r6
    5904:	c0 58       	subi	r28, 0x80	; 128
    5906:	d0 40       	sbci	r29, 0x00	; 0
    5908:	be 01       	movw	r22, r28
    590a:	6f 5f       	subi	r22, 0xFF	; 255
    590c:	7f 4f       	sbci	r23, 0xFF	; 255
    590e:	cf 57       	subi	r28, 0x7F	; 127
    5910:	df 4f       	sbci	r29, 0xFF	; 255
    5912:	88 81       	ld	r24, Y
    5914:	99 81       	ldd	r25, Y+1	; 0x01
    5916:	c1 58       	subi	r28, 0x81	; 129
    5918:	d0 40       	sbci	r29, 0x00	; 0
    591a:	0e 94 e1 22 	call	0x45c2	; 0x45c2 <sha2_large_common_nextBlock>
    591e:	c4 57       	subi	r28, 0x74	; 116
    5920:	df 4f       	sbci	r29, 0xFF	; 255
    5922:	0f b6       	in	r0, 0x3f	; 63
    5924:	f8 94       	cli
    5926:	de bf       	out	0x3e, r29	; 62
    5928:	0f be       	out	0x3f, r0	; 63
    592a:	cd bf       	out	0x3d, r28	; 61
    592c:	df 91       	pop	r29
    592e:	cf 91       	pop	r28
    5930:	1f 91       	pop	r17
    5932:	0f 91       	pop	r16
    5934:	ff 90       	pop	r15
    5936:	ef 90       	pop	r14
    5938:	df 90       	pop	r13
    593a:	cf 90       	pop	r12
    593c:	bf 90       	pop	r11
    593e:	af 90       	pop	r10
    5940:	9f 90       	pop	r9
    5942:	8f 90       	pop	r8
    5944:	7f 90       	pop	r7
    5946:	6f 90       	pop	r6
    5948:	5f 90       	pop	r5
    594a:	4f 90       	pop	r4
    594c:	3f 90       	pop	r3
    594e:	2f 90       	pop	r2
    5950:	08 95       	ret

00005952 <sha2_small_common_nextBlock>:
    5952:	2f 92       	push	r2
    5954:	3f 92       	push	r3
    5956:	4f 92       	push	r4
    5958:	5f 92       	push	r5
    595a:	6f 92       	push	r6
    595c:	7f 92       	push	r7
    595e:	8f 92       	push	r8
    5960:	9f 92       	push	r9
    5962:	af 92       	push	r10
    5964:	bf 92       	push	r11
    5966:	cf 92       	push	r12
    5968:	df 92       	push	r13
    596a:	ef 92       	push	r14
    596c:	ff 92       	push	r15
    596e:	0f 93       	push	r16
    5970:	1f 93       	push	r17
    5972:	cf 93       	push	r28
    5974:	df 93       	push	r29
    5976:	cd b7       	in	r28, 0x3d	; 61
    5978:	de b7       	in	r29, 0x3e	; 62
    597a:	cb 56       	subi	r28, 0x6B	; 107
    597c:	d1 09       	sbc	r29, r1
    597e:	0f b6       	in	r0, 0x3f	; 63
    5980:	f8 94       	cli
    5982:	de bf       	out	0x3e, r29	; 62
    5984:	0f be       	out	0x3f, r0	; 63
    5986:	cd bf       	out	0x3d, r28	; 61
    5988:	ac 96       	adiw	r28, 0x2c	; 44
    598a:	9f af       	std	Y+63, r25	; 0x3f
    598c:	8e af       	std	Y+62, r24	; 0x3e
    598e:	ac 97       	sbiw	r28, 0x2c	; 44
    5990:	9e 01       	movw	r18, r28
    5992:	2f 5f       	subi	r18, 0xFF	; 255
    5994:	3f 4f       	sbci	r19, 0xFF	; 255
    5996:	a8 96       	adiw	r28, 0x28	; 40
    5998:	3f af       	std	Y+63, r19	; 0x3f
    599a:	2e af       	std	Y+62, r18	; 0x3e
    599c:	a8 97       	sbiw	r28, 0x28	; 40
    599e:	20 5c       	subi	r18, 0xC0	; 192
    59a0:	3f 4f       	sbci	r19, 0xFF	; 255
    59a2:	a8 96       	adiw	r28, 0x28	; 40
    59a4:	ee ad       	ldd	r30, Y+62	; 0x3e
    59a6:	ff ad       	ldd	r31, Y+63	; 0x3f
    59a8:	a8 97       	sbiw	r28, 0x28	; 40
    59aa:	af 01       	movw	r20, r30
    59ac:	fb 01       	movw	r30, r22
    59ae:	81 91       	ld	r24, Z+
    59b0:	91 91       	ld	r25, Z+
    59b2:	a1 91       	ld	r26, Z+
    59b4:	b1 91       	ld	r27, Z+
    59b6:	bf 01       	movw	r22, r30
    59b8:	b8 2e       	mov	r11, r24
    59ba:	aa 24       	eor	r10, r10
    59bc:	99 24       	eor	r9, r9
    59be:	88 24       	eor	r8, r8
    59c0:	cb 2e       	mov	r12, r27
    59c2:	dd 24       	eor	r13, r13
    59c4:	ee 24       	eor	r14, r14
    59c6:	ff 24       	eor	r15, r15
    59c8:	c8 28       	or	r12, r8
    59ca:	d9 28       	or	r13, r9
    59cc:	ea 28       	or	r14, r10
    59ce:	fb 28       	or	r15, r11
    59d0:	4c 01       	movw	r8, r24
    59d2:	5d 01       	movw	r10, r26
    59d4:	88 24       	eor	r8, r8
    59d6:	aa 24       	eor	r10, r10
    59d8:	bb 24       	eor	r11, r11
    59da:	ba 2c       	mov	r11, r10
    59dc:	a9 2c       	mov	r10, r9
    59de:	98 2c       	mov	r9, r8
    59e0:	88 24       	eor	r8, r8
    59e2:	c8 28       	or	r12, r8
    59e4:	d9 28       	or	r13, r9
    59e6:	ea 28       	or	r14, r10
    59e8:	fb 28       	or	r15, r11
    59ea:	88 27       	eor	r24, r24
    59ec:	99 27       	eor	r25, r25
    59ee:	bb 27       	eor	r27, r27
    59f0:	89 2f       	mov	r24, r25
    59f2:	9a 2f       	mov	r25, r26
    59f4:	ab 2f       	mov	r26, r27
    59f6:	bb 27       	eor	r27, r27
    59f8:	8c 29       	or	r24, r12
    59fa:	9d 29       	or	r25, r13
    59fc:	ae 29       	or	r26, r14
    59fe:	bf 29       	or	r27, r15
    5a00:	fa 01       	movw	r30, r20
    5a02:	81 93       	st	Z+, r24
    5a04:	91 93       	st	Z+, r25
    5a06:	a1 93       	st	Z+, r26
    5a08:	b1 93       	st	Z+, r27
    5a0a:	af 01       	movw	r20, r30
    5a0c:	e2 17       	cp	r30, r18
    5a0e:	f3 07       	cpc	r31, r19
    5a10:	69 f6       	brne	.-102    	; 0x59ac <sha2_small_common_nextBlock+0x5a>
    5a12:	80 e2       	ldi	r24, 0x20	; 32
    5a14:	ac 96       	adiw	r28, 0x2c	; 44
    5a16:	ee ad       	ldd	r30, Y+62	; 0x3e
    5a18:	ff ad       	ldd	r31, Y+63	; 0x3f
    5a1a:	ac 97       	sbiw	r28, 0x2c	; 44
    5a1c:	de 01       	movw	r26, r28
    5a1e:	af 5b       	subi	r26, 0xBF	; 191
    5a20:	bf 4f       	sbci	r27, 0xFF	; 255
    5a22:	01 90       	ld	r0, Z+
    5a24:	0d 92       	st	X+, r0
    5a26:	8a 95       	dec	r24
    5a28:	e1 f7       	brne	.-8      	; 0x5a22 <sha2_small_common_nextBlock+0xd0>
    5a2a:	0f 2e       	mov	r0, r31
    5a2c:	f4 e3       	ldi	r31, 0x34	; 52
    5a2e:	2f 2e       	mov	r2, r31
    5a30:	f3 e0       	ldi	r31, 0x03	; 3
    5a32:	3f 2e       	mov	r3, r31
    5a34:	f0 2d       	mov	r31, r0
    5a36:	a6 96       	adiw	r28, 0x26	; 38
    5a38:	1f ae       	std	Y+63, r1	; 0x3f
    5a3a:	a6 97       	sbiw	r28, 0x26	; 38
    5a3c:	21 e4       	ldi	r18, 0x41	; 65
    5a3e:	30 e0       	ldi	r19, 0x00	; 0
    5a40:	2c 0f       	add	r18, r28
    5a42:	3d 1f       	adc	r19, r29
    5a44:	2c 5f       	subi	r18, 0xFC	; 252
    5a46:	3f 4f       	sbci	r19, 0xFF	; 255
    5a48:	aa 96       	adiw	r28, 0x2a	; 42
    5a4a:	3f af       	std	Y+63, r19	; 0x3f
    5a4c:	2e af       	std	Y+62, r18	; 0x3e
    5a4e:	aa 97       	sbiw	r28, 0x2a	; 42
    5a50:	a6 96       	adiw	r28, 0x26	; 38
    5a52:	3f ad       	ldd	r19, Y+63	; 0x3f
    5a54:	a6 97       	sbiw	r28, 0x26	; 38
    5a56:	30 31       	cpi	r19, 0x10	; 16
    5a58:	48 f4       	brcc	.+18     	; 0x5a6c <sha2_small_common_nextBlock+0x11a>
    5a5a:	a8 96       	adiw	r28, 0x28	; 40
    5a5c:	ae ad       	ldd	r26, Y+62	; 0x3e
    5a5e:	bf ad       	ldd	r27, Y+63	; 0x3f
    5a60:	a8 97       	sbiw	r28, 0x28	; 40
    5a62:	cd 90       	ld	r12, X+
    5a64:	dd 90       	ld	r13, X+
    5a66:	ed 90       	ld	r14, X+
    5a68:	fc 90       	ld	r15, X
    5a6a:	b8 c0       	rjmp	.+368    	; 0x5bdc <sha2_small_common_nextBlock+0x28a>
    5a6c:	89 ad       	ldd	r24, Y+57	; 0x39
    5a6e:	9a ad       	ldd	r25, Y+58	; 0x3a
    5a70:	ab ad       	ldd	r26, Y+59	; 0x3b
    5a72:	bc ad       	ldd	r27, Y+60	; 0x3c
    5a74:	8d 80       	ldd	r8, Y+5	; 0x05
    5a76:	9e 80       	ldd	r9, Y+6	; 0x06
    5a78:	af 80       	ldd	r10, Y+7	; 0x07
    5a7a:	b8 84       	ldd	r11, Y+8	; 0x08
    5a7c:	6c 01       	movw	r12, r24
    5a7e:	7d 01       	movw	r14, r26
    5a80:	0b 2e       	mov	r0, r27
    5a82:	bd e0       	ldi	r27, 0x0D	; 13
    5a84:	cc 0c       	add	r12, r12
    5a86:	dd 1c       	adc	r13, r13
    5a88:	ee 1c       	adc	r14, r14
    5a8a:	ff 1c       	adc	r15, r15
    5a8c:	ba 95       	dec	r27
    5a8e:	d1 f7       	brne	.-12     	; 0x5a84 <sha2_small_common_nextBlock+0x132>
    5a90:	b0 2d       	mov	r27, r0
    5a92:	ac 01       	movw	r20, r24
    5a94:	bd 01       	movw	r22, r26
    5a96:	03 2e       	mov	r0, r19
    5a98:	33 e1       	ldi	r19, 0x13	; 19
    5a9a:	76 95       	lsr	r23
    5a9c:	67 95       	ror	r22
    5a9e:	57 95       	ror	r21
    5aa0:	47 95       	ror	r20
    5aa2:	3a 95       	dec	r19
    5aa4:	d1 f7       	brne	.-12     	; 0x5a9a <sha2_small_common_nextBlock+0x148>
    5aa6:	30 2d       	mov	r19, r0
    5aa8:	97 01       	movw	r18, r14
    5aaa:	86 01       	movw	r16, r12
    5aac:	04 2b       	or	r16, r20
    5aae:	15 2b       	or	r17, r21
    5ab0:	26 2b       	or	r18, r22
    5ab2:	37 2b       	or	r19, r23
    5ab4:	6c 01       	movw	r12, r24
    5ab6:	7d 01       	movw	r14, r26
    5ab8:	0b 2e       	mov	r0, r27
    5aba:	bf e0       	ldi	r27, 0x0F	; 15
    5abc:	cc 0c       	add	r12, r12
    5abe:	dd 1c       	adc	r13, r13
    5ac0:	ee 1c       	adc	r14, r14
    5ac2:	ff 1c       	adc	r15, r15
    5ac4:	ba 95       	dec	r27
    5ac6:	d1 f7       	brne	.-12     	; 0x5abc <sha2_small_common_nextBlock+0x16a>
    5ac8:	b0 2d       	mov	r27, r0
    5aca:	ac 01       	movw	r20, r24
    5acc:	bd 01       	movw	r22, r26
    5ace:	03 2e       	mov	r0, r19
    5ad0:	31 e1       	ldi	r19, 0x11	; 17
    5ad2:	76 95       	lsr	r23
    5ad4:	67 95       	ror	r22
    5ad6:	57 95       	ror	r21
    5ad8:	47 95       	ror	r20
    5ada:	3a 95       	dec	r19
    5adc:	d1 f7       	brne	.-12     	; 0x5ad2 <sha2_small_common_nextBlock+0x180>
    5ade:	30 2d       	mov	r19, r0
    5ae0:	4c 29       	or	r20, r12
    5ae2:	5d 29       	or	r21, r13
    5ae4:	6e 29       	or	r22, r14
    5ae6:	7f 29       	or	r23, r15
    5ae8:	68 01       	movw	r12, r16
    5aea:	79 01       	movw	r14, r18
    5aec:	c4 26       	eor	r12, r20
    5aee:	d5 26       	eor	r13, r21
    5af0:	e6 26       	eor	r14, r22
    5af2:	f7 26       	eor	r15, r23
    5af4:	07 2e       	mov	r0, r23
    5af6:	7a e0       	ldi	r23, 0x0A	; 10
    5af8:	b6 95       	lsr	r27
    5afa:	a7 95       	ror	r26
    5afc:	97 95       	ror	r25
    5afe:	87 95       	ror	r24
    5b00:	7a 95       	dec	r23
    5b02:	d1 f7       	brne	.-12     	; 0x5af8 <sha2_small_common_nextBlock+0x1a6>
    5b04:	70 2d       	mov	r23, r0
    5b06:	8c 25       	eor	r24, r12
    5b08:	9d 25       	eor	r25, r13
    5b0a:	ae 25       	eor	r26, r14
    5b0c:	bf 25       	eor	r27, r15
    5b0e:	cd a0       	ldd	r12, Y+37	; 0x25
    5b10:	de a0       	ldd	r13, Y+38	; 0x26
    5b12:	ef a0       	ldd	r14, Y+39	; 0x27
    5b14:	f8 a4       	ldd	r15, Y+40	; 0x28
    5b16:	49 81       	ldd	r20, Y+1	; 0x01
    5b18:	5a 81       	ldd	r21, Y+2	; 0x02
    5b1a:	6b 81       	ldd	r22, Y+3	; 0x03
    5b1c:	7c 81       	ldd	r23, Y+4	; 0x04
    5b1e:	c4 0e       	add	r12, r20
    5b20:	d5 1e       	adc	r13, r21
    5b22:	e6 1e       	adc	r14, r22
    5b24:	f7 1e       	adc	r15, r23
    5b26:	8c 0d       	add	r24, r12
    5b28:	9d 1d       	adc	r25, r13
    5b2a:	ae 1d       	adc	r26, r14
    5b2c:	bf 1d       	adc	r27, r15
    5b2e:	75 01       	movw	r14, r10
    5b30:	64 01       	movw	r12, r8
    5b32:	0b 2e       	mov	r0, r27
    5b34:	be e0       	ldi	r27, 0x0E	; 14
    5b36:	cc 0c       	add	r12, r12
    5b38:	dd 1c       	adc	r13, r13
    5b3a:	ee 1c       	adc	r14, r14
    5b3c:	ff 1c       	adc	r15, r15
    5b3e:	ba 95       	dec	r27
    5b40:	d1 f7       	brne	.-12     	; 0x5b36 <sha2_small_common_nextBlock+0x1e4>
    5b42:	b0 2d       	mov	r27, r0
    5b44:	b5 01       	movw	r22, r10
    5b46:	a4 01       	movw	r20, r8
    5b48:	03 2e       	mov	r0, r19
    5b4a:	32 e1       	ldi	r19, 0x12	; 18
    5b4c:	76 95       	lsr	r23
    5b4e:	67 95       	ror	r22
    5b50:	57 95       	ror	r21
    5b52:	47 95       	ror	r20
    5b54:	3a 95       	dec	r19
    5b56:	d1 f7       	brne	.-12     	; 0x5b4c <sha2_small_common_nextBlock+0x1fa>
    5b58:	30 2d       	mov	r19, r0
    5b5a:	c4 2a       	or	r12, r20
    5b5c:	d5 2a       	or	r13, r21
    5b5e:	e6 2a       	or	r14, r22
    5b60:	f7 2a       	or	r15, r23
    5b62:	b5 01       	movw	r22, r10
    5b64:	a4 01       	movw	r20, r8
    5b66:	68 94       	set
    5b68:	16 f8       	bld	r1, 6
    5b6a:	76 95       	lsr	r23
    5b6c:	67 95       	ror	r22
    5b6e:	57 95       	ror	r21
    5b70:	47 95       	ror	r20
    5b72:	16 94       	lsr	r1
    5b74:	d1 f7       	brne	.-12     	; 0x5b6a <sha2_small_common_nextBlock+0x218>
    5b76:	95 01       	movw	r18, r10
    5b78:	84 01       	movw	r16, r8
    5b7a:	0f 2e       	mov	r0, r31
    5b7c:	f9 e1       	ldi	r31, 0x19	; 25
    5b7e:	00 0f       	add	r16, r16
    5b80:	11 1f       	adc	r17, r17
    5b82:	22 1f       	adc	r18, r18
    5b84:	33 1f       	adc	r19, r19
    5b86:	fa 95       	dec	r31
    5b88:	d1 f7       	brne	.-12     	; 0x5b7e <sha2_small_common_nextBlock+0x22c>
    5b8a:	f0 2d       	mov	r31, r0
    5b8c:	40 2b       	or	r20, r16
    5b8e:	51 2b       	or	r21, r17
    5b90:	62 2b       	or	r22, r18
    5b92:	73 2b       	or	r23, r19
    5b94:	c4 26       	eor	r12, r20
    5b96:	d5 26       	eor	r13, r21
    5b98:	e6 26       	eor	r14, r22
    5b9a:	f7 26       	eor	r15, r23
    5b9c:	68 94       	set
    5b9e:	12 f8       	bld	r1, 2
    5ba0:	b6 94       	lsr	r11
    5ba2:	a7 94       	ror	r10
    5ba4:	97 94       	ror	r9
    5ba6:	87 94       	ror	r8
    5ba8:	16 94       	lsr	r1
    5baa:	d1 f7       	brne	.-12     	; 0x5ba0 <sha2_small_common_nextBlock+0x24e>
    5bac:	8c 24       	eor	r8, r12
    5bae:	9d 24       	eor	r9, r13
    5bb0:	ae 24       	eor	r10, r14
    5bb2:	bf 24       	eor	r11, r15
    5bb4:	6c 01       	movw	r12, r24
    5bb6:	7d 01       	movw	r14, r26
    5bb8:	c8 0c       	add	r12, r8
    5bba:	d9 1c       	adc	r13, r9
    5bbc:	ea 1c       	adc	r14, r10
    5bbe:	fb 1c       	adc	r15, r11
    5bc0:	4c e3       	ldi	r20, 0x3C	; 60
    5bc2:	50 e0       	ldi	r21, 0x00	; 0
    5bc4:	be 01       	movw	r22, r28
    5bc6:	6b 5f       	subi	r22, 0xFB	; 251
    5bc8:	7f 4f       	sbci	r23, 0xFF	; 255
    5bca:	ce 01       	movw	r24, r28
    5bcc:	01 96       	adiw	r24, 0x01	; 1
    5bce:	ad d5       	rcall	.+2906   	; 0x672a <memmove>
    5bd0:	21 96       	adiw	r28, 0x01	; 1
    5bd2:	cc ae       	std	Y+60, r12	; 0x3c
    5bd4:	dd ae       	std	Y+61, r13	; 0x3d
    5bd6:	ee ae       	std	Y+62, r14	; 0x3e
    5bd8:	ff ae       	std	Y+63, r15	; 0x3f
    5bda:	21 97       	sbiw	r28, 0x01	; 1
    5bdc:	65 96       	adiw	r28, 0x15	; 21
    5bde:	8c ad       	ldd	r24, Y+60	; 0x3c
    5be0:	9d ad       	ldd	r25, Y+61	; 0x3d
    5be2:	ae ad       	ldd	r26, Y+62	; 0x3e
    5be4:	bf ad       	ldd	r27, Y+63	; 0x3f
    5be6:	65 97       	sbiw	r28, 0x15	; 21
    5be8:	f1 01       	movw	r30, r2
    5bea:	25 91       	lpm	r18, Z+
    5bec:	35 91       	lpm	r19, Z+
    5bee:	45 91       	lpm	r20, Z+
    5bf0:	54 91       	lpm	r21, Z
    5bf2:	a5 96       	adiw	r28, 0x25	; 37
    5bf4:	2c af       	std	Y+60, r18	; 0x3c
    5bf6:	3d af       	std	Y+61, r19	; 0x3d
    5bf8:	4e af       	std	Y+62, r20	; 0x3e
    5bfa:	5f af       	std	Y+63, r21	; 0x3f
    5bfc:	a5 97       	sbiw	r28, 0x25	; 37
    5bfe:	4c 01       	movw	r8, r24
    5c00:	5d 01       	movw	r10, r26
    5c02:	80 94       	com	r8
    5c04:	90 94       	com	r9
    5c06:	a0 94       	com	r10
    5c08:	b0 94       	com	r11
    5c0a:	6d 96       	adiw	r28, 0x1d	; 29
    5c0c:	4c ad       	ldd	r20, Y+60	; 0x3c
    5c0e:	5d ad       	ldd	r21, Y+61	; 0x3d
    5c10:	6e ad       	ldd	r22, Y+62	; 0x3e
    5c12:	7f ad       	ldd	r23, Y+63	; 0x3f
    5c14:	6d 97       	sbiw	r28, 0x1d	; 29
    5c16:	84 22       	and	r8, r20
    5c18:	95 22       	and	r9, r21
    5c1a:	a6 22       	and	r10, r22
    5c1c:	b7 22       	and	r11, r23
    5c1e:	69 96       	adiw	r28, 0x19	; 25
    5c20:	4c ad       	ldd	r20, Y+60	; 0x3c
    5c22:	5d ad       	ldd	r21, Y+61	; 0x3d
    5c24:	6e ad       	ldd	r22, Y+62	; 0x3e
    5c26:	7f ad       	ldd	r23, Y+63	; 0x3f
    5c28:	69 97       	sbiw	r28, 0x19	; 25
    5c2a:	8c 01       	movw	r16, r24
    5c2c:	9d 01       	movw	r18, r26
    5c2e:	04 23       	and	r16, r20
    5c30:	15 23       	and	r17, r21
    5c32:	26 23       	and	r18, r22
    5c34:	37 23       	and	r19, r23
    5c36:	b5 01       	movw	r22, r10
    5c38:	a4 01       	movw	r20, r8
    5c3a:	40 27       	eor	r20, r16
    5c3c:	51 27       	eor	r21, r17
    5c3e:	62 27       	eor	r22, r18
    5c40:	73 27       	eor	r23, r19
    5c42:	4c 01       	movw	r8, r24
    5c44:	5d 01       	movw	r10, r26
    5c46:	07 2e       	mov	r0, r23
    5c48:	7b e0       	ldi	r23, 0x0B	; 11
    5c4a:	b6 94       	lsr	r11
    5c4c:	a7 94       	ror	r10
    5c4e:	97 94       	ror	r9
    5c50:	87 94       	ror	r8
    5c52:	7a 95       	dec	r23
    5c54:	d1 f7       	brne	.-12     	; 0x5c4a <sha2_small_common_nextBlock+0x2f8>
    5c56:	70 2d       	mov	r23, r0
    5c58:	8c 01       	movw	r16, r24
    5c5a:	9d 01       	movw	r18, r26
    5c5c:	0f 2e       	mov	r0, r31
    5c5e:	f5 e1       	ldi	r31, 0x15	; 21
    5c60:	00 0f       	add	r16, r16
    5c62:	11 1f       	adc	r17, r17
    5c64:	22 1f       	adc	r18, r18
    5c66:	33 1f       	adc	r19, r19
    5c68:	fa 95       	dec	r31
    5c6a:	d1 f7       	brne	.-12     	; 0x5c60 <sha2_small_common_nextBlock+0x30e>
    5c6c:	f0 2d       	mov	r31, r0
    5c6e:	80 2a       	or	r8, r16
    5c70:	91 2a       	or	r9, r17
    5c72:	a2 2a       	or	r10, r18
    5c74:	b3 2a       	or	r11, r19
    5c76:	2c 01       	movw	r4, r24
    5c78:	3d 01       	movw	r6, r26
    5c7a:	68 94       	set
    5c7c:	15 f8       	bld	r1, 5
    5c7e:	76 94       	lsr	r7
    5c80:	67 94       	ror	r6
    5c82:	57 94       	ror	r5
    5c84:	47 94       	ror	r4
    5c86:	16 94       	lsr	r1
    5c88:	d1 f7       	brne	.-12     	; 0x5c7e <sha2_small_common_nextBlock+0x32c>
    5c8a:	8c 01       	movw	r16, r24
    5c8c:	9d 01       	movw	r18, r26
    5c8e:	0f 2e       	mov	r0, r31
    5c90:	fa e1       	ldi	r31, 0x1A	; 26
    5c92:	00 0f       	add	r16, r16
    5c94:	11 1f       	adc	r17, r17
    5c96:	22 1f       	adc	r18, r18
    5c98:	33 1f       	adc	r19, r19
    5c9a:	fa 95       	dec	r31
    5c9c:	d1 f7       	brne	.-12     	; 0x5c92 <sha2_small_common_nextBlock+0x340>
    5c9e:	f0 2d       	mov	r31, r0
    5ca0:	04 29       	or	r16, r4
    5ca2:	15 29       	or	r17, r5
    5ca4:	26 29       	or	r18, r6
    5ca6:	37 29       	or	r19, r7
    5ca8:	08 25       	eor	r16, r8
    5caa:	19 25       	eor	r17, r9
    5cac:	2a 25       	eor	r18, r10
    5cae:	3b 25       	eor	r19, r11
    5cb0:	4c 01       	movw	r8, r24
    5cb2:	5d 01       	movw	r10, r26
    5cb4:	88 0c       	add	r8, r8
    5cb6:	99 1c       	adc	r9, r9
    5cb8:	aa 1c       	adc	r10, r10
    5cba:	bb 1c       	adc	r11, r11
    5cbc:	88 0c       	add	r8, r8
    5cbe:	99 1c       	adc	r9, r9
    5cc0:	aa 1c       	adc	r10, r10
    5cc2:	bb 1c       	adc	r11, r11
    5cc4:	88 0c       	add	r8, r8
    5cc6:	99 1c       	adc	r9, r9
    5cc8:	aa 1c       	adc	r10, r10
    5cca:	bb 1c       	adc	r11, r11
    5ccc:	88 0c       	add	r8, r8
    5cce:	99 1c       	adc	r9, r9
    5cd0:	aa 1c       	adc	r10, r10
    5cd2:	bb 1c       	adc	r11, r11
    5cd4:	88 0c       	add	r8, r8
    5cd6:	99 1c       	adc	r9, r9
    5cd8:	aa 1c       	adc	r10, r10
    5cda:	bb 1c       	adc	r11, r11
    5cdc:	88 0c       	add	r8, r8
    5cde:	99 1c       	adc	r9, r9
    5ce0:	aa 1c       	adc	r10, r10
    5ce2:	bb 1c       	adc	r11, r11
    5ce4:	88 0c       	add	r8, r8
    5ce6:	99 1c       	adc	r9, r9
    5ce8:	aa 1c       	adc	r10, r10
    5cea:	bb 1c       	adc	r11, r11
    5cec:	07 2e       	mov	r0, r23
    5cee:	79 e1       	ldi	r23, 0x19	; 25
    5cf0:	b6 95       	lsr	r27
    5cf2:	a7 95       	ror	r26
    5cf4:	97 95       	ror	r25
    5cf6:	87 95       	ror	r24
    5cf8:	7a 95       	dec	r23
    5cfa:	d1 f7       	brne	.-12     	; 0x5cf0 <sha2_small_common_nextBlock+0x39e>
    5cfc:	70 2d       	mov	r23, r0
    5cfe:	88 29       	or	r24, r8
    5d00:	99 29       	or	r25, r9
    5d02:	aa 29       	or	r26, r10
    5d04:	bb 29       	or	r27, r11
    5d06:	08 27       	eor	r16, r24
    5d08:	19 27       	eor	r17, r25
    5d0a:	2a 27       	eor	r18, r26
    5d0c:	3b 27       	eor	r19, r27
    5d0e:	40 0f       	add	r20, r16
    5d10:	51 1f       	adc	r21, r17
    5d12:	62 1f       	adc	r22, r18
    5d14:	73 1f       	adc	r23, r19
    5d16:	a1 96       	adiw	r28, 0x21	; 33
    5d18:	0c ad       	ldd	r16, Y+60	; 0x3c
    5d1a:	1d ad       	ldd	r17, Y+61	; 0x3d
    5d1c:	2e ad       	ldd	r18, Y+62	; 0x3e
    5d1e:	3f ad       	ldd	r19, Y+63	; 0x3f
    5d20:	a1 97       	sbiw	r28, 0x21	; 33
    5d22:	40 0f       	add	r20, r16
    5d24:	51 1f       	adc	r21, r17
    5d26:	62 1f       	adc	r22, r18
    5d28:	73 1f       	adc	r23, r19
    5d2a:	c4 0e       	add	r12, r20
    5d2c:	d5 1e       	adc	r13, r21
    5d2e:	e6 1e       	adc	r14, r22
    5d30:	f7 1e       	adc	r15, r23
    5d32:	a5 96       	adiw	r28, 0x25	; 37
    5d34:	8c ad       	ldd	r24, Y+60	; 0x3c
    5d36:	9d ad       	ldd	r25, Y+61	; 0x3d
    5d38:	ae ad       	ldd	r26, Y+62	; 0x3e
    5d3a:	bf ad       	ldd	r27, Y+63	; 0x3f
    5d3c:	a5 97       	sbiw	r28, 0x25	; 37
    5d3e:	8c 0d       	add	r24, r12
    5d40:	9d 1d       	adc	r25, r13
    5d42:	ae 1d       	adc	r26, r14
    5d44:	bf 1d       	adc	r27, r15
    5d46:	a5 96       	adiw	r28, 0x25	; 37
    5d48:	8c af       	std	Y+60, r24	; 0x3c
    5d4a:	9d af       	std	Y+61, r25	; 0x3d
    5d4c:	ae af       	std	Y+62, r26	; 0x3e
    5d4e:	bf af       	std	Y+63, r27	; 0x3f
    5d50:	a5 97       	sbiw	r28, 0x25	; 37
    5d52:	25 96       	adiw	r28, 0x05	; 5
    5d54:	8c ac       	ldd	r8, Y+60	; 0x3c
    5d56:	9d ac       	ldd	r9, Y+61	; 0x3d
    5d58:	ae ac       	ldd	r10, Y+62	; 0x3e
    5d5a:	bf ac       	ldd	r11, Y+63	; 0x3f
    5d5c:	25 97       	sbiw	r28, 0x05	; 5
    5d5e:	29 96       	adiw	r28, 0x09	; 9
    5d60:	4c ac       	ldd	r4, Y+60	; 0x3c
    5d62:	5d ac       	ldd	r5, Y+61	; 0x3d
    5d64:	6e ac       	ldd	r6, Y+62	; 0x3e
    5d66:	7f ac       	ldd	r7, Y+63	; 0x3f
    5d68:	29 97       	sbiw	r28, 0x09	; 9
    5d6a:	2d 96       	adiw	r28, 0x0d	; 13
    5d6c:	cc ac       	ldd	r12, Y+60	; 0x3c
    5d6e:	dd ac       	ldd	r13, Y+61	; 0x3d
    5d70:	ee ac       	ldd	r14, Y+62	; 0x3e
    5d72:	ff ac       	ldd	r15, Y+63	; 0x3f
    5d74:	2d 97       	sbiw	r28, 0x0d	; 13
    5d76:	4c e1       	ldi	r20, 0x1C	; 28
    5d78:	50 e0       	ldi	r21, 0x00	; 0
    5d7a:	be 01       	movw	r22, r28
    5d7c:	6f 5b       	subi	r22, 0xBF	; 191
    5d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    5d80:	aa 96       	adiw	r28, 0x2a	; 42
    5d82:	8e ad       	ldd	r24, Y+62	; 0x3e
    5d84:	9f ad       	ldd	r25, Y+63	; 0x3f
    5d86:	aa 97       	sbiw	r28, 0x2a	; 42
    5d88:	d0 d4       	rcall	.+2464   	; 0x672a <memmove>
    5d8a:	65 96       	adiw	r28, 0x15	; 21
    5d8c:	8c ad       	ldd	r24, Y+60	; 0x3c
    5d8e:	9d ad       	ldd	r25, Y+61	; 0x3d
    5d90:	ae ad       	ldd	r26, Y+62	; 0x3e
    5d92:	bf ad       	ldd	r27, Y+63	; 0x3f
    5d94:	65 97       	sbiw	r28, 0x15	; 21
    5d96:	a5 96       	adiw	r28, 0x25	; 37
    5d98:	2c ad       	ldd	r18, Y+60	; 0x3c
    5d9a:	3d ad       	ldd	r19, Y+61	; 0x3d
    5d9c:	4e ad       	ldd	r20, Y+62	; 0x3e
    5d9e:	5f ad       	ldd	r21, Y+63	; 0x3f
    5da0:	a5 97       	sbiw	r28, 0x25	; 37
    5da2:	82 0f       	add	r24, r18
    5da4:	93 1f       	adc	r25, r19
    5da6:	a4 1f       	adc	r26, r20
    5da8:	b5 1f       	adc	r27, r21
    5daa:	65 96       	adiw	r28, 0x15	; 21
    5dac:	8c af       	std	Y+60, r24	; 0x3c
    5dae:	9d af       	std	Y+61, r25	; 0x3d
    5db0:	ae af       	std	Y+62, r26	; 0x3e
    5db2:	bf af       	std	Y+63, r27	; 0x3f
    5db4:	65 97       	sbiw	r28, 0x15	; 21
    5db6:	b5 01       	movw	r22, r10
    5db8:	a4 01       	movw	r20, r8
    5dba:	03 2e       	mov	r0, r19
    5dbc:	3d e0       	ldi	r19, 0x0D	; 13
    5dbe:	76 95       	lsr	r23
    5dc0:	67 95       	ror	r22
    5dc2:	57 95       	ror	r21
    5dc4:	47 95       	ror	r20
    5dc6:	3a 95       	dec	r19
    5dc8:	d1 f7       	brne	.-12     	; 0x5dbe <sha2_small_common_nextBlock+0x46c>
    5dca:	30 2d       	mov	r19, r0
    5dcc:	d5 01       	movw	r26, r10
    5dce:	c4 01       	movw	r24, r8
    5dd0:	07 2e       	mov	r0, r23
    5dd2:	73 e1       	ldi	r23, 0x13	; 19
    5dd4:	88 0f       	add	r24, r24
    5dd6:	99 1f       	adc	r25, r25
    5dd8:	aa 1f       	adc	r26, r26
    5dda:	bb 1f       	adc	r27, r27
    5ddc:	7a 95       	dec	r23
    5dde:	d1 f7       	brne	.-12     	; 0x5dd4 <sha2_small_common_nextBlock+0x482>
    5de0:	70 2d       	mov	r23, r0
    5de2:	84 2b       	or	r24, r20
    5de4:	95 2b       	or	r25, r21
    5de6:	a6 2b       	or	r26, r22
    5de8:	b7 2b       	or	r27, r23
    5dea:	b5 01       	movw	r22, r10
    5dec:	a4 01       	movw	r20, r8
    5dee:	76 95       	lsr	r23
    5df0:	67 95       	ror	r22
    5df2:	57 95       	ror	r21
    5df4:	47 95       	ror	r20
    5df6:	76 95       	lsr	r23
    5df8:	67 95       	ror	r22
    5dfa:	57 95       	ror	r21
    5dfc:	47 95       	ror	r20
    5dfe:	95 01       	movw	r18, r10
    5e00:	84 01       	movw	r16, r8
    5e02:	0f 2e       	mov	r0, r31
    5e04:	fe e1       	ldi	r31, 0x1E	; 30
    5e06:	00 0f       	add	r16, r16
    5e08:	11 1f       	adc	r17, r17
    5e0a:	22 1f       	adc	r18, r18
    5e0c:	33 1f       	adc	r19, r19
    5e0e:	fa 95       	dec	r31
    5e10:	d1 f7       	brne	.-12     	; 0x5e06 <sha2_small_common_nextBlock+0x4b4>
    5e12:	f0 2d       	mov	r31, r0
    5e14:	40 2b       	or	r20, r16
    5e16:	51 2b       	or	r21, r17
    5e18:	62 2b       	or	r22, r18
    5e1a:	73 2b       	or	r23, r19
    5e1c:	48 27       	eor	r20, r24
    5e1e:	59 27       	eor	r21, r25
    5e20:	6a 27       	eor	r22, r26
    5e22:	7b 27       	eor	r23, r27
    5e24:	95 01       	movw	r18, r10
    5e26:	84 01       	movw	r16, r8
    5e28:	0f 2e       	mov	r0, r31
    5e2a:	fa e0       	ldi	r31, 0x0A	; 10
    5e2c:	00 0f       	add	r16, r16
    5e2e:	11 1f       	adc	r17, r17
    5e30:	22 1f       	adc	r18, r18
    5e32:	33 1f       	adc	r19, r19
    5e34:	fa 95       	dec	r31
    5e36:	d1 f7       	brne	.-12     	; 0x5e2c <sha2_small_common_nextBlock+0x4da>
    5e38:	f0 2d       	mov	r31, r0
    5e3a:	d5 01       	movw	r26, r10
    5e3c:	c4 01       	movw	r24, r8
    5e3e:	07 2e       	mov	r0, r23
    5e40:	76 e1       	ldi	r23, 0x16	; 22
    5e42:	b6 95       	lsr	r27
    5e44:	a7 95       	ror	r26
    5e46:	97 95       	ror	r25
    5e48:	87 95       	ror	r24
    5e4a:	7a 95       	dec	r23
    5e4c:	d1 f7       	brne	.-12     	; 0x5e42 <sha2_small_common_nextBlock+0x4f0>
    5e4e:	70 2d       	mov	r23, r0
    5e50:	80 2b       	or	r24, r16
    5e52:	91 2b       	or	r25, r17
    5e54:	a2 2b       	or	r26, r18
    5e56:	b3 2b       	or	r27, r19
    5e58:	48 27       	eor	r20, r24
    5e5a:	59 27       	eor	r21, r25
    5e5c:	6a 27       	eor	r22, r26
    5e5e:	7b 27       	eor	r23, r27
    5e60:	97 01       	movw	r18, r14
    5e62:	86 01       	movw	r16, r12
    5e64:	04 25       	eor	r16, r4
    5e66:	15 25       	eor	r17, r5
    5e68:	26 25       	eor	r18, r6
    5e6a:	37 25       	eor	r19, r7
    5e6c:	80 22       	and	r8, r16
    5e6e:	91 22       	and	r9, r17
    5e70:	a2 22       	and	r10, r18
    5e72:	b3 22       	and	r11, r19
    5e74:	c4 20       	and	r12, r4
    5e76:	d5 20       	and	r13, r5
    5e78:	e6 20       	and	r14, r6
    5e7a:	f7 20       	and	r15, r7
    5e7c:	95 01       	movw	r18, r10
    5e7e:	84 01       	movw	r16, r8
    5e80:	0c 25       	eor	r16, r12
    5e82:	1d 25       	eor	r17, r13
    5e84:	2e 25       	eor	r18, r14
    5e86:	3f 25       	eor	r19, r15
    5e88:	40 0f       	add	r20, r16
    5e8a:	51 1f       	adc	r21, r17
    5e8c:	62 1f       	adc	r22, r18
    5e8e:	73 1f       	adc	r23, r19
    5e90:	a5 96       	adiw	r28, 0x25	; 37
    5e92:	8c ad       	ldd	r24, Y+60	; 0x3c
    5e94:	9d ad       	ldd	r25, Y+61	; 0x3d
    5e96:	ae ad       	ldd	r26, Y+62	; 0x3e
    5e98:	bf ad       	ldd	r27, Y+63	; 0x3f
    5e9a:	a5 97       	sbiw	r28, 0x25	; 37
    5e9c:	48 0f       	add	r20, r24
    5e9e:	59 1f       	adc	r21, r25
    5ea0:	6a 1f       	adc	r22, r26
    5ea2:	7b 1f       	adc	r23, r27
    5ea4:	25 96       	adiw	r28, 0x05	; 5
    5ea6:	4c af       	std	Y+60, r20	; 0x3c
    5ea8:	5d af       	std	Y+61, r21	; 0x3d
    5eaa:	6e af       	std	Y+62, r22	; 0x3e
    5eac:	7f af       	std	Y+63, r23	; 0x3f
    5eae:	25 97       	sbiw	r28, 0x05	; 5
    5eb0:	a6 96       	adiw	r28, 0x26	; 38
    5eb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    5eb4:	a6 97       	sbiw	r28, 0x26	; 38
    5eb6:	9f 5f       	subi	r25, 0xFF	; 255
    5eb8:	a6 96       	adiw	r28, 0x26	; 38
    5eba:	9f af       	std	Y+63, r25	; 0x3f
    5ebc:	a6 97       	sbiw	r28, 0x26	; 38
    5ebe:	a4 e0       	ldi	r26, 0x04	; 4
    5ec0:	2a 0e       	add	r2, r26
    5ec2:	31 1c       	adc	r3, r1
    5ec4:	a8 96       	adiw	r28, 0x28	; 40
    5ec6:	ee ad       	ldd	r30, Y+62	; 0x3e
    5ec8:	ff ad       	ldd	r31, Y+63	; 0x3f
    5eca:	a8 97       	sbiw	r28, 0x28	; 40
    5ecc:	34 96       	adiw	r30, 0x04	; 4
    5ece:	a8 96       	adiw	r28, 0x28	; 40
    5ed0:	ff af       	std	Y+63, r31	; 0x3f
    5ed2:	ee af       	std	Y+62, r30	; 0x3e
    5ed4:	a8 97       	sbiw	r28, 0x28	; 40
    5ed6:	90 34       	cpi	r25, 0x40	; 64
    5ed8:	09 f0       	breq	.+2      	; 0x5edc <sha2_small_common_nextBlock+0x58a>
    5eda:	ba cd       	rjmp	.-1164   	; 0x5a50 <sha2_small_common_nextBlock+0xfe>
    5edc:	fe 01       	movw	r30, r28
    5ede:	ef 5b       	subi	r30, 0xBF	; 191
    5ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    5ee2:	ac 96       	adiw	r28, 0x2c	; 44
    5ee4:	2e ad       	ldd	r18, Y+62	; 0x3e
    5ee6:	3f ad       	ldd	r19, Y+63	; 0x3f
    5ee8:	ac 97       	sbiw	r28, 0x2c	; 44
    5eea:	af 01       	movw	r20, r30
    5eec:	40 5e       	subi	r20, 0xE0	; 224
    5eee:	5f 4f       	sbci	r21, 0xFF	; 255
    5ef0:	bf 01       	movw	r22, r30
    5ef2:	fb 01       	movw	r30, r22
    5ef4:	81 91       	ld	r24, Z+
    5ef6:	91 91       	ld	r25, Z+
    5ef8:	a1 91       	ld	r26, Z+
    5efa:	b1 91       	ld	r27, Z+
    5efc:	bf 01       	movw	r22, r30
    5efe:	f9 01       	movw	r30, r18
    5f00:	c0 80       	ld	r12, Z
    5f02:	d1 80       	ldd	r13, Z+1	; 0x01
    5f04:	e2 80       	ldd	r14, Z+2	; 0x02
    5f06:	f3 80       	ldd	r15, Z+3	; 0x03
    5f08:	8c 0d       	add	r24, r12
    5f0a:	9d 1d       	adc	r25, r13
    5f0c:	ae 1d       	adc	r26, r14
    5f0e:	bf 1d       	adc	r27, r15
    5f10:	81 93       	st	Z+, r24
    5f12:	91 93       	st	Z+, r25
    5f14:	a1 93       	st	Z+, r26
    5f16:	b1 93       	st	Z+, r27
    5f18:	9f 01       	movw	r18, r30
    5f1a:	64 17       	cp	r22, r20
    5f1c:	75 07       	cpc	r23, r21
    5f1e:	49 f7       	brne	.-46     	; 0x5ef2 <sha2_small_common_nextBlock+0x5a0>
    5f20:	ac 96       	adiw	r28, 0x2c	; 44
    5f22:	ee ad       	ldd	r30, Y+62	; 0x3e
    5f24:	ff ad       	ldd	r31, Y+63	; 0x3f
    5f26:	ac 97       	sbiw	r28, 0x2c	; 44
    5f28:	80 a1       	ldd	r24, Z+32	; 0x20
    5f2a:	91 a1       	ldd	r25, Z+33	; 0x21
    5f2c:	a2 a1       	ldd	r26, Z+34	; 0x22
    5f2e:	b3 a1       	ldd	r27, Z+35	; 0x23
    5f30:	01 96       	adiw	r24, 0x01	; 1
    5f32:	a1 1d       	adc	r26, r1
    5f34:	b1 1d       	adc	r27, r1
    5f36:	80 a3       	std	Z+32, r24	; 0x20
    5f38:	91 a3       	std	Z+33, r25	; 0x21
    5f3a:	a2 a3       	std	Z+34, r26	; 0x22
    5f3c:	b3 a3       	std	Z+35, r27	; 0x23
    5f3e:	c5 59       	subi	r28, 0x95	; 149
    5f40:	df 4f       	sbci	r29, 0xFF	; 255
    5f42:	0f b6       	in	r0, 0x3f	; 63
    5f44:	f8 94       	cli
    5f46:	de bf       	out	0x3e, r29	; 62
    5f48:	0f be       	out	0x3f, r0	; 63
    5f4a:	cd bf       	out	0x3d, r28	; 61
    5f4c:	df 91       	pop	r29
    5f4e:	cf 91       	pop	r28
    5f50:	1f 91       	pop	r17
    5f52:	0f 91       	pop	r16
    5f54:	ff 90       	pop	r15
    5f56:	ef 90       	pop	r14
    5f58:	df 90       	pop	r13
    5f5a:	cf 90       	pop	r12
    5f5c:	bf 90       	pop	r11
    5f5e:	af 90       	pop	r10
    5f60:	9f 90       	pop	r9
    5f62:	8f 90       	pop	r8
    5f64:	7f 90       	pop	r7
    5f66:	6f 90       	pop	r6
    5f68:	5f 90       	pop	r5
    5f6a:	4f 90       	pop	r4
    5f6c:	3f 90       	pop	r3
    5f6e:	2f 90       	pop	r2
    5f70:	08 95       	ret

00005f72 <sha2_small_common_lastBlock>:
    5f72:	8f 92       	push	r8
    5f74:	9f 92       	push	r9
    5f76:	af 92       	push	r10
    5f78:	bf 92       	push	r11
    5f7a:	cf 92       	push	r12
    5f7c:	df 92       	push	r13
    5f7e:	ef 92       	push	r14
    5f80:	ff 92       	push	r15
    5f82:	0f 93       	push	r16
    5f84:	1f 93       	push	r17
    5f86:	cf 93       	push	r28
    5f88:	df 93       	push	r29
    5f8a:	cd b7       	in	r28, 0x3d	; 61
    5f8c:	de b7       	in	r29, 0x3e	; 62
    5f8e:	c8 54       	subi	r28, 0x48	; 72
    5f90:	d1 09       	sbc	r29, r1
    5f92:	0f b6       	in	r0, 0x3f	; 63
    5f94:	f8 94       	cli
    5f96:	de bf       	out	0x3e, r29	; 62
    5f98:	0f be       	out	0x3f, r0	; 63
    5f9a:	cd bf       	out	0x3d, r28	; 61
    5f9c:	8c 01       	movw	r16, r24
    5f9e:	4b 01       	movw	r8, r22
    5fa0:	5a 01       	movw	r10, r20
    5fa2:	41 15       	cp	r20, r1
    5fa4:	62 e0       	ldi	r22, 0x02	; 2
    5fa6:	56 07       	cpc	r21, r22
    5fa8:	28 f1       	brcs	.+74     	; 0x5ff4 <sha2_small_common_lastBlock+0x82>
    5faa:	6a 01       	movw	r12, r20
    5fac:	74 01       	movw	r14, r8
    5fae:	b7 01       	movw	r22, r14
    5fb0:	c8 01       	movw	r24, r16
    5fb2:	cf dc       	rcall	.-1634   	; 0x5952 <sha2_small_common_nextBlock>
    5fb4:	72 e0       	ldi	r23, 0x02	; 2
    5fb6:	d7 1a       	sub	r13, r23
    5fb8:	80 e4       	ldi	r24, 0x40	; 64
    5fba:	e8 0e       	add	r14, r24
    5fbc:	f1 1c       	adc	r15, r1
    5fbe:	c1 14       	cp	r12, r1
    5fc0:	92 e0       	ldi	r25, 0x02	; 2
    5fc2:	d9 06       	cpc	r13, r25
    5fc4:	a0 f7       	brcc	.-24     	; 0x5fae <sha2_small_common_lastBlock+0x3c>
    5fc6:	75 01       	movw	r14, r10
    5fc8:	e1 e0       	ldi	r30, 0x01	; 1
    5fca:	fe 22       	and	r15, r30
    5fcc:	f2 e0       	ldi	r31, 0x02	; 2
    5fce:	bf 1a       	sub	r11, r31
    5fd0:	ab 2c       	mov	r10, r11
    5fd2:	bb 24       	eor	r11, r11
    5fd4:	a6 94       	lsr	r10
    5fd6:	6f ef       	ldi	r22, 0xFF	; 255
    5fd8:	a6 1a       	sub	r10, r22
    5fda:	b6 0a       	sbc	r11, r22
    5fdc:	00 24       	eor	r0, r0
    5fde:	b6 94       	lsr	r11
    5fe0:	a7 94       	ror	r10
    5fe2:	07 94       	ror	r0
    5fe4:	b6 94       	lsr	r11
    5fe6:	a7 94       	ror	r10
    5fe8:	07 94       	ror	r0
    5fea:	ba 2c       	mov	r11, r10
    5fec:	a0 2c       	mov	r10, r0
    5fee:	8a 0c       	add	r8, r10
    5ff0:	9b 1c       	adc	r9, r11
    5ff2:	01 c0       	rjmp	.+2      	; 0x5ff6 <sha2_small_common_lastBlock+0x84>
    5ff4:	7a 01       	movw	r14, r20
    5ff6:	f8 01       	movw	r30, r16
    5ff8:	80 a1       	ldd	r24, Z+32	; 0x20
    5ffa:	91 a1       	ldd	r25, Z+33	; 0x21
    5ffc:	a2 a1       	ldd	r26, Z+34	; 0x22
    5ffe:	b3 a1       	ldd	r27, Z+35	; 0x23
    6000:	07 2e       	mov	r0, r23
    6002:	79 e0       	ldi	r23, 0x09	; 9
    6004:	88 0f       	add	r24, r24
    6006:	99 1f       	adc	r25, r25
    6008:	aa 1f       	adc	r26, r26
    600a:	bb 1f       	adc	r27, r27
    600c:	7a 95       	dec	r23
    600e:	d1 f7       	brne	.-12     	; 0x6004 <sha2_small_common_lastBlock+0x92>
    6010:	70 2d       	mov	r23, r0
    6012:	8e 0d       	add	r24, r14
    6014:	9f 1d       	adc	r25, r15
    6016:	a1 1d       	adc	r26, r1
    6018:	b1 1d       	adc	r27, r1
    601a:	9c 01       	movw	r18, r24
    601c:	ad 01       	movw	r20, r26
    601e:	22 96       	adiw	r28, 0x02	; 2
    6020:	2f af       	std	Y+63, r18	; 0x3f
    6022:	22 97       	sbiw	r28, 0x02	; 2
    6024:	23 96       	adiw	r28, 0x03	; 3
    6026:	3f af       	std	Y+63, r19	; 0x3f
    6028:	23 97       	sbiw	r28, 0x03	; 3
    602a:	24 96       	adiw	r28, 0x04	; 4
    602c:	4f af       	std	Y+63, r20	; 0x3f
    602e:	24 97       	sbiw	r28, 0x04	; 4
    6030:	25 96       	adiw	r28, 0x05	; 5
    6032:	5f af       	std	Y+63, r21	; 0x3f
    6034:	25 97       	sbiw	r28, 0x05	; 5
    6036:	26 96       	adiw	r28, 0x06	; 6
    6038:	1f ae       	std	Y+63, r1	; 0x3f
    603a:	26 97       	sbiw	r28, 0x06	; 6
    603c:	27 96       	adiw	r28, 0x07	; 7
    603e:	1f ae       	std	Y+63, r1	; 0x3f
    6040:	27 97       	sbiw	r28, 0x07	; 7
    6042:	28 96       	adiw	r28, 0x08	; 8
    6044:	1f ae       	std	Y+63, r1	; 0x3f
    6046:	28 97       	sbiw	r28, 0x08	; 8
    6048:	29 96       	adiw	r28, 0x09	; 9
    604a:	1f ae       	std	Y+63, r1	; 0x3f
    604c:	29 97       	sbiw	r28, 0x09	; 9
    604e:	be 01       	movw	r22, r28
    6050:	6f 5f       	subi	r22, 0xFF	; 255
    6052:	7f 4f       	sbci	r23, 0xFF	; 255
    6054:	6b 01       	movw	r12, r22
    6056:	80 e4       	ldi	r24, 0x40	; 64
    6058:	fb 01       	movw	r30, r22
    605a:	11 92       	st	Z+, r1
    605c:	8a 95       	dec	r24
    605e:	e9 f7       	brne	.-6      	; 0x605a <sha2_small_common_lastBlock+0xe8>
    6060:	a7 01       	movw	r20, r14
    6062:	49 5f       	subi	r20, 0xF9	; 249
    6064:	5f 4f       	sbci	r21, 0xFF	; 255
    6066:	56 95       	lsr	r21
    6068:	47 95       	ror	r20
    606a:	56 95       	lsr	r21
    606c:	47 95       	ror	r20
    606e:	56 95       	lsr	r21
    6070:	47 95       	ror	r20
    6072:	b4 01       	movw	r22, r8
    6074:	c6 01       	movw	r24, r12
    6076:	50 d3       	rcall	.+1696   	; 0x6718 <memcpy>
    6078:	f7 01       	movw	r30, r14
    607a:	f6 95       	lsr	r31
    607c:	e7 95       	ror	r30
    607e:	f6 95       	lsr	r31
    6080:	e7 95       	ror	r30
    6082:	f6 95       	lsr	r31
    6084:	e7 95       	ror	r30
    6086:	ec 0d       	add	r30, r12
    6088:	fd 1d       	adc	r31, r13
    608a:	c7 01       	movw	r24, r14
    608c:	87 70       	andi	r24, 0x07	; 7
    608e:	99 27       	eor	r25, r25
    6090:	20 e8       	ldi	r18, 0x80	; 128
    6092:	30 e0       	ldi	r19, 0x00	; 0
    6094:	02 c0       	rjmp	.+4      	; 0x609a <sha2_small_common_lastBlock+0x128>
    6096:	35 95       	asr	r19
    6098:	27 95       	ror	r18
    609a:	8a 95       	dec	r24
    609c:	e2 f7       	brpl	.-8      	; 0x6096 <sha2_small_common_lastBlock+0x124>
    609e:	80 81       	ld	r24, Z
    60a0:	28 2b       	or	r18, r24
    60a2:	20 83       	st	Z, r18
    60a4:	f0 ec       	ldi	r31, 0xC0	; 192
    60a6:	ef 16       	cp	r14, r31
    60a8:	f1 e0       	ldi	r31, 0x01	; 1
    60aa:	ff 06       	cpc	r15, r31
    60ac:	40 f0       	brcs	.+16     	; 0x60be <sha2_small_common_lastBlock+0x14c>
    60ae:	b6 01       	movw	r22, r12
    60b0:	c8 01       	movw	r24, r16
    60b2:	4f dc       	rcall	.-1890   	; 0x5952 <sha2_small_common_nextBlock>
    60b4:	80 e4       	ldi	r24, 0x40	; 64
    60b6:	f6 01       	movw	r30, r12
    60b8:	11 92       	st	Z+, r1
    60ba:	8a 95       	dec	r24
    60bc:	e9 f7       	brne	.-6      	; 0x60b8 <sha2_small_common_lastBlock+0x146>
    60be:	27 e0       	ldi	r18, 0x07	; 7
    60c0:	4f e3       	ldi	r20, 0x3F	; 63
    60c2:	50 e0       	ldi	r21, 0x00	; 0
    60c4:	82 2f       	mov	r24, r18
    60c6:	90 e0       	ldi	r25, 0x00	; 0
    60c8:	fa 01       	movw	r30, r20
    60ca:	e8 1b       	sub	r30, r24
    60cc:	f9 0b       	sbc	r31, r25
    60ce:	61 e0       	ldi	r22, 0x01	; 1
    60d0:	70 e0       	ldi	r23, 0x00	; 0
    60d2:	6c 0f       	add	r22, r28
    60d4:	7d 1f       	adc	r23, r29
    60d6:	e6 0f       	add	r30, r22
    60d8:	f7 1f       	adc	r31, r23
    60da:	a1 e4       	ldi	r26, 0x41	; 65
    60dc:	b0 e0       	ldi	r27, 0x00	; 0
    60de:	ac 0f       	add	r26, r28
    60e0:	bd 1f       	adc	r27, r29
    60e2:	a8 0f       	add	r26, r24
    60e4:	b9 1f       	adc	r27, r25
    60e6:	8c 91       	ld	r24, X
    60e8:	80 83       	st	Z, r24
    60ea:	21 50       	subi	r18, 0x01	; 1
    60ec:	58 f7       	brcc	.-42     	; 0x60c4 <sha2_small_common_lastBlock+0x152>
    60ee:	be 01       	movw	r22, r28
    60f0:	6f 5f       	subi	r22, 0xFF	; 255
    60f2:	7f 4f       	sbci	r23, 0xFF	; 255
    60f4:	c8 01       	movw	r24, r16
    60f6:	2d dc       	rcall	.-1958   	; 0x5952 <sha2_small_common_nextBlock>
    60f8:	c8 5b       	subi	r28, 0xB8	; 184
    60fa:	df 4f       	sbci	r29, 0xFF	; 255
    60fc:	0f b6       	in	r0, 0x3f	; 63
    60fe:	f8 94       	cli
    6100:	de bf       	out	0x3e, r29	; 62
    6102:	0f be       	out	0x3f, r0	; 63
    6104:	cd bf       	out	0x3d, r28	; 61
    6106:	df 91       	pop	r29
    6108:	cf 91       	pop	r28
    610a:	1f 91       	pop	r17
    610c:	0f 91       	pop	r16
    610e:	ff 90       	pop	r15
    6110:	ef 90       	pop	r14
    6112:	df 90       	pop	r13
    6114:	cf 90       	pop	r12
    6116:	bf 90       	pop	r11
    6118:	af 90       	pop	r10
    611a:	9f 90       	pop	r9
    611c:	8f 90       	pop	r8
    611e:	08 95       	ret

00006120 <sha512_init>:
    6120:	fc 01       	movw	r30, r24
    6122:	e0 5c       	subi	r30, 0xC0	; 192
    6124:	ff 4f       	sbci	r31, 0xFF	; 255
    6126:	10 82       	st	Z, r1
    6128:	11 82       	std	Z+1, r1	; 0x01
    612a:	12 82       	std	Z+2, r1	; 0x02
    612c:	13 82       	std	Z+3, r1	; 0x03
    612e:	40 e4       	ldi	r20, 0x40	; 64
    6130:	50 e0       	ldi	r21, 0x00	; 0
    6132:	64 e3       	ldi	r22, 0x34	; 52
    6134:	74 e0       	ldi	r23, 0x04	; 4
    6136:	da c2       	rjmp	.+1460   	; 0x66ec <memcpy_P>
    6138:	08 95       	ret

0000613a <sha512_ctx2hash>:
    613a:	cf 93       	push	r28
    613c:	df 93       	push	r29
    613e:	ac 01       	movw	r20, r24
    6140:	ec 01       	movw	r28, r24
    6142:	c0 5c       	subi	r28, 0xC0	; 192
    6144:	df 4f       	sbci	r29, 0xFF	; 255
    6146:	fa 01       	movw	r30, r20
    6148:	97 e0       	ldi	r25, 0x07	; 7
    614a:	db 01       	movw	r26, r22
    614c:	a9 0f       	add	r26, r25
    614e:	b1 1d       	adc	r27, r1
    6150:	2c 91       	ld	r18, X
    6152:	21 93       	st	Z+, r18
    6154:	91 50       	subi	r25, 0x01	; 1
    6156:	c8 f7       	brcc	.-14     	; 0x614a <sha512_ctx2hash+0x10>
    6158:	48 5f       	subi	r20, 0xF8	; 248
    615a:	5f 4f       	sbci	r21, 0xFF	; 255
    615c:	68 5f       	subi	r22, 0xF8	; 248
    615e:	7f 4f       	sbci	r23, 0xFF	; 255
    6160:	4c 17       	cp	r20, r28
    6162:	5d 07       	cpc	r21, r29
    6164:	81 f7       	brne	.-32     	; 0x6146 <sha512_ctx2hash+0xc>
    6166:	df 91       	pop	r29
    6168:	cf 91       	pop	r28
    616a:	08 95       	ret

0000616c <sha512>:
    616c:	4f 92       	push	r4
    616e:	5f 92       	push	r5
    6170:	6f 92       	push	r6
    6172:	7f 92       	push	r7
    6174:	8f 92       	push	r8
    6176:	9f 92       	push	r9
    6178:	af 92       	push	r10
    617a:	bf 92       	push	r11
    617c:	cf 92       	push	r12
    617e:	df 92       	push	r13
    6180:	ef 92       	push	r14
    6182:	ff 92       	push	r15
    6184:	0f 93       	push	r16
    6186:	1f 93       	push	r17
    6188:	cf 93       	push	r28
    618a:	df 93       	push	r29
    618c:	cd b7       	in	r28, 0x3d	; 61
    618e:	de b7       	in	r29, 0x3e	; 62
    6190:	c4 54       	subi	r28, 0x44	; 68
    6192:	d1 09       	sbc	r29, r1
    6194:	0f b6       	in	r0, 0x3f	; 63
    6196:	f8 94       	cli
    6198:	de bf       	out	0x3e, r29	; 62
    619a:	0f be       	out	0x3f, r0	; 63
    619c:	cd bf       	out	0x3d, r28	; 61
    619e:	4c 01       	movw	r8, r24
    61a0:	5b 01       	movw	r10, r22
    61a2:	69 01       	movw	r12, r18
    61a4:	7a 01       	movw	r14, r20
    61a6:	ce 01       	movw	r24, r28
    61a8:	01 96       	adiw	r24, 0x01	; 1
    61aa:	ba df       	rcall	.-140    	; 0x6120 <sha512_init>
    61ac:	c1 14       	cp	r12, r1
    61ae:	84 e0       	ldi	r24, 0x04	; 4
    61b0:	d8 06       	cpc	r13, r24
    61b2:	e1 04       	cpc	r14, r1
    61b4:	f1 04       	cpc	r15, r1
    61b6:	70 f1       	brcs	.+92     	; 0x6214 <sha512+0xa8>
    61b8:	26 01       	movw	r4, r12
    61ba:	37 01       	movw	r6, r14
    61bc:	85 01       	movw	r16, r10
    61be:	b8 01       	movw	r22, r16
    61c0:	ce 01       	movw	r24, r28
    61c2:	01 96       	adiw	r24, 0x01	; 1
    61c4:	0e 94 e1 22 	call	0x45c2	; 0x45c2 <sha2_large_common_nextBlock>
    61c8:	00 58       	subi	r16, 0x80	; 128
    61ca:	1f 4f       	sbci	r17, 0xFF	; 255
    61cc:	84 e0       	ldi	r24, 0x04	; 4
    61ce:	58 1a       	sub	r5, r24
    61d0:	61 08       	sbc	r6, r1
    61d2:	71 08       	sbc	r7, r1
    61d4:	41 14       	cp	r4, r1
    61d6:	84 e0       	ldi	r24, 0x04	; 4
    61d8:	58 06       	cpc	r5, r24
    61da:	61 04       	cpc	r6, r1
    61dc:	71 04       	cpc	r7, r1
    61de:	78 f7       	brcc	.-34     	; 0x61be <sha512+0x52>
    61e0:	d7 01       	movw	r26, r14
    61e2:	c6 01       	movw	r24, r12
    61e4:	94 50       	subi	r25, 0x04	; 4
    61e6:	a1 09       	sbc	r26, r1
    61e8:	b1 09       	sbc	r27, r1
    61ea:	07 2e       	mov	r0, r23
    61ec:	7a e0       	ldi	r23, 0x0A	; 10
    61ee:	b6 95       	lsr	r27
    61f0:	a7 95       	ror	r26
    61f2:	97 95       	ror	r25
    61f4:	87 95       	ror	r24
    61f6:	7a 95       	dec	r23
    61f8:	d1 f7       	brne	.-12     	; 0x61ee <sha512+0x82>
    61fa:	70 2d       	mov	r23, r0
    61fc:	01 96       	adiw	r24, 0x01	; 1
    61fe:	96 95       	lsr	r25
    6200:	98 2f       	mov	r25, r24
    6202:	88 27       	eor	r24, r24
    6204:	97 95       	ror	r25
    6206:	87 95       	ror	r24
    6208:	a8 0e       	add	r10, r24
    620a:	b9 1e       	adc	r11, r25
    620c:	83 e0       	ldi	r24, 0x03	; 3
    620e:	d8 22       	and	r13, r24
    6210:	ee 24       	eor	r14, r14
    6212:	ff 24       	eor	r15, r15
    6214:	a6 01       	movw	r20, r12
    6216:	b5 01       	movw	r22, r10
    6218:	ce 01       	movw	r24, r28
    621a:	01 96       	adiw	r24, 0x01	; 1
    621c:	39 da       	rcall	.-2958   	; 0x5690 <sha2_large_common_lastBlock>
    621e:	be 01       	movw	r22, r28
    6220:	6f 5f       	subi	r22, 0xFF	; 255
    6222:	7f 4f       	sbci	r23, 0xFF	; 255
    6224:	c4 01       	movw	r24, r8
    6226:	89 df       	rcall	.-238    	; 0x613a <sha512_ctx2hash>
    6228:	cc 5b       	subi	r28, 0xBC	; 188
    622a:	df 4f       	sbci	r29, 0xFF	; 255
    622c:	0f b6       	in	r0, 0x3f	; 63
    622e:	f8 94       	cli
    6230:	de bf       	out	0x3e, r29	; 62
    6232:	0f be       	out	0x3f, r0	; 63
    6234:	cd bf       	out	0x3d, r28	; 61
    6236:	df 91       	pop	r29
    6238:	cf 91       	pop	r28
    623a:	1f 91       	pop	r17
    623c:	0f 91       	pop	r16
    623e:	ff 90       	pop	r15
    6240:	ef 90       	pop	r14
    6242:	df 90       	pop	r13
    6244:	cf 90       	pop	r12
    6246:	bf 90       	pop	r11
    6248:	af 90       	pop	r10
    624a:	9f 90       	pop	r9
    624c:	8f 90       	pop	r8
    624e:	7f 90       	pop	r7
    6250:	6f 90       	pop	r6
    6252:	5f 90       	pop	r5
    6254:	4f 90       	pop	r4
    6256:	08 95       	ret

00006258 <uart_init>:
#include "uart_f.h"
#include "types.h"


void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    6258:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    625c:	83 e3       	ldi	r24, 0x33	; 51
    625e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    6262:	8e e0       	ldi	r24, 0x0E	; 14
    6264:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    6268:	88 e1       	ldi	r24, 0x18	; 24
    626a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    626e:	08 95       	ret

00006270 <uart_puts>:
}

void uart_puts(char* s){
    6270:	0f 93       	push	r16
    6272:	1f 93       	push	r17
    6274:	cf 93       	push	r28
    6276:	df 93       	push	r29
    6278:	1f 92       	push	r1
    627a:	cd b7       	in	r28, 0x3d	; 61
    627c:	de b7       	in	r29, 0x3e	; 62
    627e:	bc 01       	movw	r22, r24
	volatile uint8_t i;
	int len = strlen(s);
    6280:	fc 01       	movw	r30, r24
    6282:	01 90       	ld	r0, Z+
    6284:	00 20       	and	r0, r0
    6286:	e9 f7       	brne	.-6      	; 0x6282 <uart_puts+0x12>
    6288:	31 97       	sbiw	r30, 0x01	; 1
    628a:	af 01       	movw	r20, r30
    628c:	48 1b       	sub	r20, r24
    628e:	59 0b       	sbc	r21, r25
	for (i = 0; i < len; i++){
    6290:	19 82       	std	Y+1, r1	; 0x01
    6292:	89 81       	ldd	r24, Y+1	; 0x01
    6294:	90 e0       	ldi	r25, 0x00	; 0
    6296:	84 17       	cp	r24, r20
    6298:	95 07       	cpc	r25, r21
    629a:	b4 f4       	brge	.+44     	; 0x62c8 <uart_puts+0x58>
		while(!( UCSR0A & 0X20));
    629c:	e0 ec       	ldi	r30, 0xC0	; 192
    629e:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    62a0:	06 ec       	ldi	r16, 0xC6	; 198
    62a2:	10 e0       	ldi	r17, 0x00	; 0

void uart_puts(char* s){
	volatile uint8_t i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    62a4:	90 81       	ld	r25, Z
    62a6:	95 ff       	sbrs	r25, 5
    62a8:	fd cf       	rjmp	.-6      	; 0x62a4 <uart_puts+0x34>
		UDR0=s[i];
    62aa:	89 81       	ldd	r24, Y+1	; 0x01
    62ac:	db 01       	movw	r26, r22
    62ae:	a8 0f       	add	r26, r24
    62b0:	b1 1d       	adc	r27, r1
    62b2:	9c 91       	ld	r25, X
    62b4:	d8 01       	movw	r26, r16
    62b6:	9c 93       	st	X, r25
}

void uart_puts(char* s){
	volatile uint8_t i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    62b8:	99 81       	ldd	r25, Y+1	; 0x01
    62ba:	9f 5f       	subi	r25, 0xFF	; 255
    62bc:	99 83       	std	Y+1, r25	; 0x01
    62be:	29 81       	ldd	r18, Y+1	; 0x01
    62c0:	30 e0       	ldi	r19, 0x00	; 0
    62c2:	24 17       	cp	r18, r20
    62c4:	35 07       	cpc	r19, r21
    62c6:	74 f3       	brlt	.-36     	; 0x62a4 <uart_puts+0x34>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    62c8:	e0 ec       	ldi	r30, 0xC0	; 192
    62ca:	f0 e0       	ldi	r31, 0x00	; 0
    62cc:	80 81       	ld	r24, Z
    62ce:	85 ff       	sbrs	r24, 5
    62d0:	fd cf       	rjmp	.-6      	; 0x62cc <uart_puts+0x5c>
	UDR0 = 13;
    62d2:	8d e0       	ldi	r24, 0x0D	; 13
    62d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    62d8:	e0 ec       	ldi	r30, 0xC0	; 192
    62da:	f0 e0       	ldi	r31, 0x00	; 0
    62dc:	80 81       	ld	r24, Z
    62de:	85 ff       	sbrs	r24, 5
    62e0:	fd cf       	rjmp	.-6      	; 0x62dc <uart_puts+0x6c>
	UDR0 = 10;
    62e2:	8a e0       	ldi	r24, 0x0A	; 10
    62e4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    62e8:	0f 90       	pop	r0
    62ea:	df 91       	pop	r29
    62ec:	cf 91       	pop	r28
    62ee:	1f 91       	pop	r17
    62f0:	0f 91       	pop	r16
    62f2:	08 95       	ret

000062f4 <uart_putd>:

void uart_putd(char* s, uint8_t len){
    62f4:	cf 93       	push	r28
    62f6:	df 93       	push	r29
	int i;
	for (i = 0; i < len; i++){
    62f8:	66 23       	and	r22, r22
    62fa:	81 f0       	breq	.+32     	; 0x631c <uart_putd+0x28>
    62fc:	dc 01       	movw	r26, r24
    62fe:	9c 01       	movw	r18, r24
    6300:	26 0f       	add	r18, r22
    6302:	31 1d       	adc	r19, r1
		while(!( UCSR0A & 0X20));
    6304:	e0 ec       	ldi	r30, 0xC0	; 192
    6306:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    6308:	c6 ec       	ldi	r28, 0xC6	; 198
    630a:	d0 e0       	ldi	r29, 0x00	; 0
}

void uart_putd(char* s, uint8_t len){
	int i;
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    630c:	90 81       	ld	r25, Z
    630e:	95 ff       	sbrs	r25, 5
    6310:	fd cf       	rjmp	.-6      	; 0x630c <uart_putd+0x18>
		UDR0=s[i];
    6312:	9d 91       	ld	r25, X+
    6314:	98 83       	st	Y, r25
	UDR0 = 10;
}

void uart_putd(char* s, uint8_t len){
	int i;
	for (i = 0; i < len; i++){
    6316:	a2 17       	cp	r26, r18
    6318:	b3 07       	cpc	r27, r19
    631a:	c1 f7       	brne	.-16     	; 0x630c <uart_putd+0x18>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    631c:	e0 ec       	ldi	r30, 0xC0	; 192
    631e:	f0 e0       	ldi	r31, 0x00	; 0
    6320:	80 81       	ld	r24, Z
    6322:	85 ff       	sbrs	r24, 5
    6324:	fd cf       	rjmp	.-6      	; 0x6320 <uart_putd+0x2c>
	UDR0 = 13;
    6326:	8d e0       	ldi	r24, 0x0D	; 13
    6328:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    632c:	e0 ec       	ldi	r30, 0xC0	; 192
    632e:	f0 e0       	ldi	r31, 0x00	; 0
    6330:	80 81       	ld	r24, Z
    6332:	85 ff       	sbrs	r24, 5
    6334:	fd cf       	rjmp	.-6      	; 0x6330 <uart_putd+0x3c>
	UDR0 = 10;
    6336:	8a e0       	ldi	r24, 0x0A	; 10
    6338:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    633c:	df 91       	pop	r29
    633e:	cf 91       	pop	r28
    6340:	08 95       	ret

00006342 <__ashldi3>:
    6342:	0f 93       	push	r16
    6344:	08 30       	cpi	r16, 0x08	; 8
    6346:	90 f0       	brcs	.+36     	; 0x636c <__ashldi3+0x2a>
    6348:	98 2f       	mov	r25, r24
    634a:	87 2f       	mov	r24, r23
    634c:	76 2f       	mov	r23, r22
    634e:	65 2f       	mov	r22, r21
    6350:	54 2f       	mov	r21, r20
    6352:	43 2f       	mov	r20, r19
    6354:	32 2f       	mov	r19, r18
    6356:	22 27       	eor	r18, r18
    6358:	08 50       	subi	r16, 0x08	; 8
    635a:	f4 cf       	rjmp	.-24     	; 0x6344 <__ashldi3+0x2>
    635c:	22 0f       	add	r18, r18
    635e:	33 1f       	adc	r19, r19
    6360:	44 1f       	adc	r20, r20
    6362:	55 1f       	adc	r21, r21
    6364:	66 1f       	adc	r22, r22
    6366:	77 1f       	adc	r23, r23
    6368:	88 1f       	adc	r24, r24
    636a:	99 1f       	adc	r25, r25
    636c:	0a 95       	dec	r16
    636e:	b2 f7       	brpl	.-20     	; 0x635c <__ashldi3+0x1a>
    6370:	0f 91       	pop	r16
    6372:	08 95       	ret

00006374 <__ashrdi3>:
    6374:	97 fb       	bst	r25, 7
    6376:	10 f8       	bld	r1, 0

00006378 <__lshrdi3>:
    6378:	16 94       	lsr	r1
    637a:	00 08       	sbc	r0, r0
    637c:	0f 93       	push	r16
    637e:	08 30       	cpi	r16, 0x08	; 8
    6380:	98 f0       	brcs	.+38     	; 0x63a8 <__lshrdi3+0x30>
    6382:	08 50       	subi	r16, 0x08	; 8
    6384:	23 2f       	mov	r18, r19
    6386:	34 2f       	mov	r19, r20
    6388:	45 2f       	mov	r20, r21
    638a:	56 2f       	mov	r21, r22
    638c:	67 2f       	mov	r22, r23
    638e:	78 2f       	mov	r23, r24
    6390:	89 2f       	mov	r24, r25
    6392:	90 2d       	mov	r25, r0
    6394:	f4 cf       	rjmp	.-24     	; 0x637e <__lshrdi3+0x6>
    6396:	05 94       	asr	r0
    6398:	97 95       	ror	r25
    639a:	87 95       	ror	r24
    639c:	77 95       	ror	r23
    639e:	67 95       	ror	r22
    63a0:	57 95       	ror	r21
    63a2:	47 95       	ror	r20
    63a4:	37 95       	ror	r19
    63a6:	27 95       	ror	r18
    63a8:	0a 95       	dec	r16
    63aa:	aa f7       	brpl	.-22     	; 0x6396 <__lshrdi3+0x1e>
    63ac:	0f 91       	pop	r16
    63ae:	08 95       	ret

000063b0 <__rotldi3>:
    63b0:	0f 93       	push	r16
    63b2:	08 30       	cpi	r16, 0x08	; 8
    63b4:	a0 f0       	brcs	.+40     	; 0x63de <__rotldi3+0x2e>
    63b6:	08 50       	subi	r16, 0x08	; 8
    63b8:	09 2e       	mov	r0, r25
    63ba:	98 2f       	mov	r25, r24
    63bc:	87 2f       	mov	r24, r23
    63be:	76 2f       	mov	r23, r22
    63c0:	65 2f       	mov	r22, r21
    63c2:	54 2f       	mov	r21, r20
    63c4:	43 2f       	mov	r20, r19
    63c6:	32 2f       	mov	r19, r18
    63c8:	20 2d       	mov	r18, r0
    63ca:	f3 cf       	rjmp	.-26     	; 0x63b2 <__rotldi3+0x2>
    63cc:	22 0f       	add	r18, r18
    63ce:	33 1f       	adc	r19, r19
    63d0:	44 1f       	adc	r20, r20
    63d2:	55 1f       	adc	r21, r21
    63d4:	66 1f       	adc	r22, r22
    63d6:	77 1f       	adc	r23, r23
    63d8:	88 1f       	adc	r24, r24
    63da:	99 1f       	adc	r25, r25
    63dc:	21 1d       	adc	r18, r1
    63de:	0a 95       	dec	r16
    63e0:	aa f7       	brpl	.-22     	; 0x63cc <__rotldi3+0x1c>
    63e2:	0f 91       	pop	r16
    63e4:	08 95       	ret

000063e6 <__adddi3>:
    63e6:	2a 0d       	add	r18, r10
    63e8:	3b 1d       	adc	r19, r11
    63ea:	4c 1d       	adc	r20, r12
    63ec:	5d 1d       	adc	r21, r13
    63ee:	6e 1d       	adc	r22, r14
    63f0:	7f 1d       	adc	r23, r15
    63f2:	80 1f       	adc	r24, r16
    63f4:	91 1f       	adc	r25, r17
    63f6:	08 95       	ret

000063f8 <malloc>:
    63f8:	0f 93       	push	r16
    63fa:	1f 93       	push	r17
    63fc:	cf 93       	push	r28
    63fe:	df 93       	push	r29
    6400:	82 30       	cpi	r24, 0x02	; 2
    6402:	91 05       	cpc	r25, r1
    6404:	10 f4       	brcc	.+4      	; 0x640a <malloc+0x12>
    6406:	82 e0       	ldi	r24, 0x02	; 2
    6408:	90 e0       	ldi	r25, 0x00	; 0
    640a:	e0 91 97 07 	lds	r30, 0x0797	; 0x800797 <__flp>
    640e:	f0 91 98 07 	lds	r31, 0x0798	; 0x800798 <__flp+0x1>
    6412:	20 e0       	ldi	r18, 0x00	; 0
    6414:	30 e0       	ldi	r19, 0x00	; 0
    6416:	a0 e0       	ldi	r26, 0x00	; 0
    6418:	b0 e0       	ldi	r27, 0x00	; 0
    641a:	30 97       	sbiw	r30, 0x00	; 0
    641c:	19 f1       	breq	.+70     	; 0x6464 <malloc+0x6c>
    641e:	40 81       	ld	r20, Z
    6420:	51 81       	ldd	r21, Z+1	; 0x01
    6422:	02 81       	ldd	r16, Z+2	; 0x02
    6424:	13 81       	ldd	r17, Z+3	; 0x03
    6426:	48 17       	cp	r20, r24
    6428:	59 07       	cpc	r21, r25
    642a:	c8 f0       	brcs	.+50     	; 0x645e <malloc+0x66>
    642c:	84 17       	cp	r24, r20
    642e:	95 07       	cpc	r25, r21
    6430:	69 f4       	brne	.+26     	; 0x644c <malloc+0x54>
    6432:	10 97       	sbiw	r26, 0x00	; 0
    6434:	31 f0       	breq	.+12     	; 0x6442 <malloc+0x4a>
    6436:	12 96       	adiw	r26, 0x02	; 2
    6438:	0c 93       	st	X, r16
    643a:	12 97       	sbiw	r26, 0x02	; 2
    643c:	13 96       	adiw	r26, 0x03	; 3
    643e:	1c 93       	st	X, r17
    6440:	27 c0       	rjmp	.+78     	; 0x6490 <malloc+0x98>
    6442:	00 93 97 07 	sts	0x0797, r16	; 0x800797 <__flp>
    6446:	10 93 98 07 	sts	0x0798, r17	; 0x800798 <__flp+0x1>
    644a:	22 c0       	rjmp	.+68     	; 0x6490 <malloc+0x98>
    644c:	21 15       	cp	r18, r1
    644e:	31 05       	cpc	r19, r1
    6450:	19 f0       	breq	.+6      	; 0x6458 <malloc+0x60>
    6452:	42 17       	cp	r20, r18
    6454:	53 07       	cpc	r21, r19
    6456:	18 f4       	brcc	.+6      	; 0x645e <malloc+0x66>
    6458:	9a 01       	movw	r18, r20
    645a:	bd 01       	movw	r22, r26
    645c:	ef 01       	movw	r28, r30
    645e:	df 01       	movw	r26, r30
    6460:	f8 01       	movw	r30, r16
    6462:	db cf       	rjmp	.-74     	; 0x641a <malloc+0x22>
    6464:	21 15       	cp	r18, r1
    6466:	31 05       	cpc	r19, r1
    6468:	f9 f0       	breq	.+62     	; 0x64a8 <malloc+0xb0>
    646a:	28 1b       	sub	r18, r24
    646c:	39 0b       	sbc	r19, r25
    646e:	24 30       	cpi	r18, 0x04	; 4
    6470:	31 05       	cpc	r19, r1
    6472:	80 f4       	brcc	.+32     	; 0x6494 <malloc+0x9c>
    6474:	8a 81       	ldd	r24, Y+2	; 0x02
    6476:	9b 81       	ldd	r25, Y+3	; 0x03
    6478:	61 15       	cp	r22, r1
    647a:	71 05       	cpc	r23, r1
    647c:	21 f0       	breq	.+8      	; 0x6486 <malloc+0x8e>
    647e:	fb 01       	movw	r30, r22
    6480:	93 83       	std	Z+3, r25	; 0x03
    6482:	82 83       	std	Z+2, r24	; 0x02
    6484:	04 c0       	rjmp	.+8      	; 0x648e <malloc+0x96>
    6486:	90 93 98 07 	sts	0x0798, r25	; 0x800798 <__flp+0x1>
    648a:	80 93 97 07 	sts	0x0797, r24	; 0x800797 <__flp>
    648e:	fe 01       	movw	r30, r28
    6490:	32 96       	adiw	r30, 0x02	; 2
    6492:	44 c0       	rjmp	.+136    	; 0x651c <malloc+0x124>
    6494:	fe 01       	movw	r30, r28
    6496:	e2 0f       	add	r30, r18
    6498:	f3 1f       	adc	r31, r19
    649a:	81 93       	st	Z+, r24
    649c:	91 93       	st	Z+, r25
    649e:	22 50       	subi	r18, 0x02	; 2
    64a0:	31 09       	sbc	r19, r1
    64a2:	39 83       	std	Y+1, r19	; 0x01
    64a4:	28 83       	st	Y, r18
    64a6:	3a c0       	rjmp	.+116    	; 0x651c <malloc+0x124>
    64a8:	20 91 95 07 	lds	r18, 0x0795	; 0x800795 <__brkval>
    64ac:	30 91 96 07 	lds	r19, 0x0796	; 0x800796 <__brkval+0x1>
    64b0:	23 2b       	or	r18, r19
    64b2:	41 f4       	brne	.+16     	; 0x64c4 <malloc+0xcc>
    64b4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    64b8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    64bc:	30 93 96 07 	sts	0x0796, r19	; 0x800796 <__brkval+0x1>
    64c0:	20 93 95 07 	sts	0x0795, r18	; 0x800795 <__brkval>
    64c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    64c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    64cc:	21 15       	cp	r18, r1
    64ce:	31 05       	cpc	r19, r1
    64d0:	41 f4       	brne	.+16     	; 0x64e2 <malloc+0xea>
    64d2:	2d b7       	in	r18, 0x3d	; 61
    64d4:	3e b7       	in	r19, 0x3e	; 62
    64d6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    64da:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    64de:	24 1b       	sub	r18, r20
    64e0:	35 0b       	sbc	r19, r21
    64e2:	e0 91 95 07 	lds	r30, 0x0795	; 0x800795 <__brkval>
    64e6:	f0 91 96 07 	lds	r31, 0x0796	; 0x800796 <__brkval+0x1>
    64ea:	e2 17       	cp	r30, r18
    64ec:	f3 07       	cpc	r31, r19
    64ee:	a0 f4       	brcc	.+40     	; 0x6518 <malloc+0x120>
    64f0:	2e 1b       	sub	r18, r30
    64f2:	3f 0b       	sbc	r19, r31
    64f4:	28 17       	cp	r18, r24
    64f6:	39 07       	cpc	r19, r25
    64f8:	78 f0       	brcs	.+30     	; 0x6518 <malloc+0x120>
    64fa:	ac 01       	movw	r20, r24
    64fc:	4e 5f       	subi	r20, 0xFE	; 254
    64fe:	5f 4f       	sbci	r21, 0xFF	; 255
    6500:	24 17       	cp	r18, r20
    6502:	35 07       	cpc	r19, r21
    6504:	48 f0       	brcs	.+18     	; 0x6518 <malloc+0x120>
    6506:	4e 0f       	add	r20, r30
    6508:	5f 1f       	adc	r21, r31
    650a:	50 93 96 07 	sts	0x0796, r21	; 0x800796 <__brkval+0x1>
    650e:	40 93 95 07 	sts	0x0795, r20	; 0x800795 <__brkval>
    6512:	81 93       	st	Z+, r24
    6514:	91 93       	st	Z+, r25
    6516:	02 c0       	rjmp	.+4      	; 0x651c <malloc+0x124>
    6518:	e0 e0       	ldi	r30, 0x00	; 0
    651a:	f0 e0       	ldi	r31, 0x00	; 0
    651c:	cf 01       	movw	r24, r30
    651e:	df 91       	pop	r29
    6520:	cf 91       	pop	r28
    6522:	1f 91       	pop	r17
    6524:	0f 91       	pop	r16
    6526:	08 95       	ret

00006528 <free>:
    6528:	cf 93       	push	r28
    652a:	df 93       	push	r29
    652c:	00 97       	sbiw	r24, 0x00	; 0
    652e:	09 f4       	brne	.+2      	; 0x6532 <free+0xa>
    6530:	81 c0       	rjmp	.+258    	; 0x6634 <free+0x10c>
    6532:	fc 01       	movw	r30, r24
    6534:	32 97       	sbiw	r30, 0x02	; 2
    6536:	13 82       	std	Z+3, r1	; 0x03
    6538:	12 82       	std	Z+2, r1	; 0x02
    653a:	a0 91 97 07 	lds	r26, 0x0797	; 0x800797 <__flp>
    653e:	b0 91 98 07 	lds	r27, 0x0798	; 0x800798 <__flp+0x1>
    6542:	10 97       	sbiw	r26, 0x00	; 0
    6544:	81 f4       	brne	.+32     	; 0x6566 <free+0x3e>
    6546:	20 81       	ld	r18, Z
    6548:	31 81       	ldd	r19, Z+1	; 0x01
    654a:	82 0f       	add	r24, r18
    654c:	93 1f       	adc	r25, r19
    654e:	20 91 95 07 	lds	r18, 0x0795	; 0x800795 <__brkval>
    6552:	30 91 96 07 	lds	r19, 0x0796	; 0x800796 <__brkval+0x1>
    6556:	28 17       	cp	r18, r24
    6558:	39 07       	cpc	r19, r25
    655a:	51 f5       	brne	.+84     	; 0x65b0 <free+0x88>
    655c:	f0 93 96 07 	sts	0x0796, r31	; 0x800796 <__brkval+0x1>
    6560:	e0 93 95 07 	sts	0x0795, r30	; 0x800795 <__brkval>
    6564:	67 c0       	rjmp	.+206    	; 0x6634 <free+0x10c>
    6566:	ed 01       	movw	r28, r26
    6568:	20 e0       	ldi	r18, 0x00	; 0
    656a:	30 e0       	ldi	r19, 0x00	; 0
    656c:	ce 17       	cp	r28, r30
    656e:	df 07       	cpc	r29, r31
    6570:	40 f4       	brcc	.+16     	; 0x6582 <free+0x5a>
    6572:	4a 81       	ldd	r20, Y+2	; 0x02
    6574:	5b 81       	ldd	r21, Y+3	; 0x03
    6576:	9e 01       	movw	r18, r28
    6578:	41 15       	cp	r20, r1
    657a:	51 05       	cpc	r21, r1
    657c:	f1 f0       	breq	.+60     	; 0x65ba <free+0x92>
    657e:	ea 01       	movw	r28, r20
    6580:	f5 cf       	rjmp	.-22     	; 0x656c <free+0x44>
    6582:	d3 83       	std	Z+3, r29	; 0x03
    6584:	c2 83       	std	Z+2, r28	; 0x02
    6586:	40 81       	ld	r20, Z
    6588:	51 81       	ldd	r21, Z+1	; 0x01
    658a:	84 0f       	add	r24, r20
    658c:	95 1f       	adc	r25, r21
    658e:	c8 17       	cp	r28, r24
    6590:	d9 07       	cpc	r29, r25
    6592:	59 f4       	brne	.+22     	; 0x65aa <free+0x82>
    6594:	88 81       	ld	r24, Y
    6596:	99 81       	ldd	r25, Y+1	; 0x01
    6598:	84 0f       	add	r24, r20
    659a:	95 1f       	adc	r25, r21
    659c:	02 96       	adiw	r24, 0x02	; 2
    659e:	91 83       	std	Z+1, r25	; 0x01
    65a0:	80 83       	st	Z, r24
    65a2:	8a 81       	ldd	r24, Y+2	; 0x02
    65a4:	9b 81       	ldd	r25, Y+3	; 0x03
    65a6:	93 83       	std	Z+3, r25	; 0x03
    65a8:	82 83       	std	Z+2, r24	; 0x02
    65aa:	21 15       	cp	r18, r1
    65ac:	31 05       	cpc	r19, r1
    65ae:	29 f4       	brne	.+10     	; 0x65ba <free+0x92>
    65b0:	f0 93 98 07 	sts	0x0798, r31	; 0x800798 <__flp+0x1>
    65b4:	e0 93 97 07 	sts	0x0797, r30	; 0x800797 <__flp>
    65b8:	3d c0       	rjmp	.+122    	; 0x6634 <free+0x10c>
    65ba:	e9 01       	movw	r28, r18
    65bc:	fb 83       	std	Y+3, r31	; 0x03
    65be:	ea 83       	std	Y+2, r30	; 0x02
    65c0:	49 91       	ld	r20, Y+
    65c2:	59 91       	ld	r21, Y+
    65c4:	c4 0f       	add	r28, r20
    65c6:	d5 1f       	adc	r29, r21
    65c8:	ec 17       	cp	r30, r28
    65ca:	fd 07       	cpc	r31, r29
    65cc:	61 f4       	brne	.+24     	; 0x65e6 <free+0xbe>
    65ce:	80 81       	ld	r24, Z
    65d0:	91 81       	ldd	r25, Z+1	; 0x01
    65d2:	84 0f       	add	r24, r20
    65d4:	95 1f       	adc	r25, r21
    65d6:	02 96       	adiw	r24, 0x02	; 2
    65d8:	e9 01       	movw	r28, r18
    65da:	99 83       	std	Y+1, r25	; 0x01
    65dc:	88 83       	st	Y, r24
    65de:	82 81       	ldd	r24, Z+2	; 0x02
    65e0:	93 81       	ldd	r25, Z+3	; 0x03
    65e2:	9b 83       	std	Y+3, r25	; 0x03
    65e4:	8a 83       	std	Y+2, r24	; 0x02
    65e6:	e0 e0       	ldi	r30, 0x00	; 0
    65e8:	f0 e0       	ldi	r31, 0x00	; 0
    65ea:	12 96       	adiw	r26, 0x02	; 2
    65ec:	8d 91       	ld	r24, X+
    65ee:	9c 91       	ld	r25, X
    65f0:	13 97       	sbiw	r26, 0x03	; 3
    65f2:	00 97       	sbiw	r24, 0x00	; 0
    65f4:	19 f0       	breq	.+6      	; 0x65fc <free+0xd4>
    65f6:	fd 01       	movw	r30, r26
    65f8:	dc 01       	movw	r26, r24
    65fa:	f7 cf       	rjmp	.-18     	; 0x65ea <free+0xc2>
    65fc:	8d 91       	ld	r24, X+
    65fe:	9c 91       	ld	r25, X
    6600:	11 97       	sbiw	r26, 0x01	; 1
    6602:	9d 01       	movw	r18, r26
    6604:	2e 5f       	subi	r18, 0xFE	; 254
    6606:	3f 4f       	sbci	r19, 0xFF	; 255
    6608:	82 0f       	add	r24, r18
    660a:	93 1f       	adc	r25, r19
    660c:	20 91 95 07 	lds	r18, 0x0795	; 0x800795 <__brkval>
    6610:	30 91 96 07 	lds	r19, 0x0796	; 0x800796 <__brkval+0x1>
    6614:	28 17       	cp	r18, r24
    6616:	39 07       	cpc	r19, r25
    6618:	69 f4       	brne	.+26     	; 0x6634 <free+0x10c>
    661a:	30 97       	sbiw	r30, 0x00	; 0
    661c:	29 f4       	brne	.+10     	; 0x6628 <free+0x100>
    661e:	10 92 98 07 	sts	0x0798, r1	; 0x800798 <__flp+0x1>
    6622:	10 92 97 07 	sts	0x0797, r1	; 0x800797 <__flp>
    6626:	02 c0       	rjmp	.+4      	; 0x662c <free+0x104>
    6628:	13 82       	std	Z+3, r1	; 0x03
    662a:	12 82       	std	Z+2, r1	; 0x02
    662c:	b0 93 96 07 	sts	0x0796, r27	; 0x800796 <__brkval+0x1>
    6630:	a0 93 95 07 	sts	0x0795, r26	; 0x800795 <__brkval>
    6634:	df 91       	pop	r29
    6636:	cf 91       	pop	r28
    6638:	08 95       	ret

0000663a <do_rand>:
    663a:	8f 92       	push	r8
    663c:	9f 92       	push	r9
    663e:	af 92       	push	r10
    6640:	bf 92       	push	r11
    6642:	cf 92       	push	r12
    6644:	df 92       	push	r13
    6646:	ef 92       	push	r14
    6648:	ff 92       	push	r15
    664a:	cf 93       	push	r28
    664c:	df 93       	push	r29
    664e:	ec 01       	movw	r28, r24
    6650:	68 81       	ld	r22, Y
    6652:	79 81       	ldd	r23, Y+1	; 0x01
    6654:	8a 81       	ldd	r24, Y+2	; 0x02
    6656:	9b 81       	ldd	r25, Y+3	; 0x03
    6658:	61 15       	cp	r22, r1
    665a:	71 05       	cpc	r23, r1
    665c:	81 05       	cpc	r24, r1
    665e:	91 05       	cpc	r25, r1
    6660:	21 f4       	brne	.+8      	; 0x666a <do_rand+0x30>
    6662:	64 e2       	ldi	r22, 0x24	; 36
    6664:	79 ed       	ldi	r23, 0xD9	; 217
    6666:	8b e5       	ldi	r24, 0x5B	; 91
    6668:	97 e0       	ldi	r25, 0x07	; 7
    666a:	2d e1       	ldi	r18, 0x1D	; 29
    666c:	33 ef       	ldi	r19, 0xF3	; 243
    666e:	41 e0       	ldi	r20, 0x01	; 1
    6670:	50 e0       	ldi	r21, 0x00	; 0
    6672:	73 d0       	rcall	.+230    	; 0x675a <__divmodsi4>
    6674:	49 01       	movw	r8, r18
    6676:	5a 01       	movw	r10, r20
    6678:	9b 01       	movw	r18, r22
    667a:	ac 01       	movw	r20, r24
    667c:	a7 ea       	ldi	r26, 0xA7	; 167
    667e:	b1 e4       	ldi	r27, 0x41	; 65
    6680:	88 d0       	rcall	.+272    	; 0x6792 <__muluhisi3>
    6682:	6b 01       	movw	r12, r22
    6684:	7c 01       	movw	r14, r24
    6686:	ac ee       	ldi	r26, 0xEC	; 236
    6688:	b4 ef       	ldi	r27, 0xF4	; 244
    668a:	a5 01       	movw	r20, r10
    668c:	94 01       	movw	r18, r8
    668e:	8d d0       	rcall	.+282    	; 0x67aa <__mulohisi3>
    6690:	dc 01       	movw	r26, r24
    6692:	cb 01       	movw	r24, r22
    6694:	8c 0d       	add	r24, r12
    6696:	9d 1d       	adc	r25, r13
    6698:	ae 1d       	adc	r26, r14
    669a:	bf 1d       	adc	r27, r15
    669c:	b7 ff       	sbrs	r27, 7
    669e:	03 c0       	rjmp	.+6      	; 0x66a6 <do_rand+0x6c>
    66a0:	01 97       	sbiw	r24, 0x01	; 1
    66a2:	a1 09       	sbc	r26, r1
    66a4:	b0 48       	sbci	r27, 0x80	; 128
    66a6:	88 83       	st	Y, r24
    66a8:	99 83       	std	Y+1, r25	; 0x01
    66aa:	aa 83       	std	Y+2, r26	; 0x02
    66ac:	bb 83       	std	Y+3, r27	; 0x03
    66ae:	9f 77       	andi	r25, 0x7F	; 127
    66b0:	df 91       	pop	r29
    66b2:	cf 91       	pop	r28
    66b4:	ff 90       	pop	r15
    66b6:	ef 90       	pop	r14
    66b8:	df 90       	pop	r13
    66ba:	cf 90       	pop	r12
    66bc:	bf 90       	pop	r11
    66be:	af 90       	pop	r10
    66c0:	9f 90       	pop	r9
    66c2:	8f 90       	pop	r8
    66c4:	08 95       	ret

000066c6 <rand_r>:
    66c6:	b9 cf       	rjmp	.-142    	; 0x663a <do_rand>

000066c8 <rand>:
    66c8:	86 e0       	ldi	r24, 0x06	; 6
    66ca:	91 e0       	ldi	r25, 0x01	; 1
    66cc:	b6 cf       	rjmp	.-148    	; 0x663a <do_rand>

000066ce <srand>:
    66ce:	a0 e0       	ldi	r26, 0x00	; 0
    66d0:	b0 e0       	ldi	r27, 0x00	; 0
    66d2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    66d6:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    66da:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    66de:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    66e2:	08 95       	ret

000066e4 <abort>:
    66e4:	81 e0       	ldi	r24, 0x01	; 1
    66e6:	90 e0       	ldi	r25, 0x00	; 0
    66e8:	f8 94       	cli
    66ea:	94 c0       	rjmp	.+296    	; 0x6814 <_exit>

000066ec <memcpy_P>:
    66ec:	fb 01       	movw	r30, r22
    66ee:	dc 01       	movw	r26, r24
    66f0:	02 c0       	rjmp	.+4      	; 0x66f6 <memcpy_P+0xa>
    66f2:	05 90       	lpm	r0, Z+
    66f4:	0d 92       	st	X+, r0
    66f6:	41 50       	subi	r20, 0x01	; 1
    66f8:	50 40       	sbci	r21, 0x00	; 0
    66fa:	d8 f7       	brcc	.-10     	; 0x66f2 <memcpy_P+0x6>
    66fc:	08 95       	ret

000066fe <memcmp>:
    66fe:	fb 01       	movw	r30, r22
    6700:	dc 01       	movw	r26, r24
    6702:	04 c0       	rjmp	.+8      	; 0x670c <memcmp+0xe>
    6704:	8d 91       	ld	r24, X+
    6706:	01 90       	ld	r0, Z+
    6708:	80 19       	sub	r24, r0
    670a:	21 f4       	brne	.+8      	; 0x6714 <memcmp+0x16>
    670c:	41 50       	subi	r20, 0x01	; 1
    670e:	50 40       	sbci	r21, 0x00	; 0
    6710:	c8 f7       	brcc	.-14     	; 0x6704 <memcmp+0x6>
    6712:	88 1b       	sub	r24, r24
    6714:	99 0b       	sbc	r25, r25
    6716:	08 95       	ret

00006718 <memcpy>:
    6718:	fb 01       	movw	r30, r22
    671a:	dc 01       	movw	r26, r24
    671c:	02 c0       	rjmp	.+4      	; 0x6722 <memcpy+0xa>
    671e:	01 90       	ld	r0, Z+
    6720:	0d 92       	st	X+, r0
    6722:	41 50       	subi	r20, 0x01	; 1
    6724:	50 40       	sbci	r21, 0x00	; 0
    6726:	d8 f7       	brcc	.-10     	; 0x671e <memcpy+0x6>
    6728:	08 95       	ret

0000672a <memmove>:
    672a:	68 17       	cp	r22, r24
    672c:	79 07       	cpc	r23, r25
    672e:	68 f4       	brcc	.+26     	; 0x674a <memmove+0x20>
    6730:	fb 01       	movw	r30, r22
    6732:	dc 01       	movw	r26, r24
    6734:	e4 0f       	add	r30, r20
    6736:	f5 1f       	adc	r31, r21
    6738:	a4 0f       	add	r26, r20
    673a:	b5 1f       	adc	r27, r21
    673c:	02 c0       	rjmp	.+4      	; 0x6742 <memmove+0x18>
    673e:	02 90       	ld	r0, -Z
    6740:	0e 92       	st	-X, r0
    6742:	41 50       	subi	r20, 0x01	; 1
    6744:	50 40       	sbci	r21, 0x00	; 0
    6746:	d8 f7       	brcc	.-10     	; 0x673e <memmove+0x14>
    6748:	08 95       	ret
    674a:	e6 cf       	rjmp	.-52     	; 0x6718 <memcpy>

0000674c <memset>:
    674c:	dc 01       	movw	r26, r24
    674e:	01 c0       	rjmp	.+2      	; 0x6752 <memset+0x6>
    6750:	6d 93       	st	X+, r22
    6752:	41 50       	subi	r20, 0x01	; 1
    6754:	50 40       	sbci	r21, 0x00	; 0
    6756:	e0 f7       	brcc	.-8      	; 0x6750 <memset+0x4>
    6758:	08 95       	ret

0000675a <__divmodsi4>:
    675a:	05 2e       	mov	r0, r21
    675c:	97 fb       	bst	r25, 7
    675e:	16 f4       	brtc	.+4      	; 0x6764 <__divmodsi4+0xa>
    6760:	00 94       	com	r0
    6762:	0f d0       	rcall	.+30     	; 0x6782 <__negsi2>
    6764:	57 fd       	sbrc	r21, 7
    6766:	05 d0       	rcall	.+10     	; 0x6772 <__divmodsi4_neg2>
    6768:	24 d0       	rcall	.+72     	; 0x67b2 <__udivmodsi4>
    676a:	07 fc       	sbrc	r0, 7
    676c:	02 d0       	rcall	.+4      	; 0x6772 <__divmodsi4_neg2>
    676e:	46 f4       	brtc	.+16     	; 0x6780 <__divmodsi4_exit>
    6770:	08 c0       	rjmp	.+16     	; 0x6782 <__negsi2>

00006772 <__divmodsi4_neg2>:
    6772:	50 95       	com	r21
    6774:	40 95       	com	r20
    6776:	30 95       	com	r19
    6778:	21 95       	neg	r18
    677a:	3f 4f       	sbci	r19, 0xFF	; 255
    677c:	4f 4f       	sbci	r20, 0xFF	; 255
    677e:	5f 4f       	sbci	r21, 0xFF	; 255

00006780 <__divmodsi4_exit>:
    6780:	08 95       	ret

00006782 <__negsi2>:
    6782:	90 95       	com	r25
    6784:	80 95       	com	r24
    6786:	70 95       	com	r23
    6788:	61 95       	neg	r22
    678a:	7f 4f       	sbci	r23, 0xFF	; 255
    678c:	8f 4f       	sbci	r24, 0xFF	; 255
    678e:	9f 4f       	sbci	r25, 0xFF	; 255
    6790:	08 95       	ret

00006792 <__muluhisi3>:
    6792:	31 d0       	rcall	.+98     	; 0x67f6 <__umulhisi3>
    6794:	a5 9f       	mul	r26, r21
    6796:	90 0d       	add	r25, r0
    6798:	b4 9f       	mul	r27, r20
    679a:	90 0d       	add	r25, r0
    679c:	a4 9f       	mul	r26, r20
    679e:	80 0d       	add	r24, r0
    67a0:	91 1d       	adc	r25, r1
    67a2:	11 24       	eor	r1, r1
    67a4:	08 95       	ret

000067a6 <__mulshisi3>:
    67a6:	b7 ff       	sbrs	r27, 7
    67a8:	f4 cf       	rjmp	.-24     	; 0x6792 <__muluhisi3>

000067aa <__mulohisi3>:
    67aa:	f3 df       	rcall	.-26     	; 0x6792 <__muluhisi3>
    67ac:	82 1b       	sub	r24, r18
    67ae:	93 0b       	sbc	r25, r19
    67b0:	08 95       	ret

000067b2 <__udivmodsi4>:
    67b2:	a1 e2       	ldi	r26, 0x21	; 33
    67b4:	1a 2e       	mov	r1, r26
    67b6:	aa 1b       	sub	r26, r26
    67b8:	bb 1b       	sub	r27, r27
    67ba:	fd 01       	movw	r30, r26
    67bc:	0d c0       	rjmp	.+26     	; 0x67d8 <__udivmodsi4_ep>

000067be <__udivmodsi4_loop>:
    67be:	aa 1f       	adc	r26, r26
    67c0:	bb 1f       	adc	r27, r27
    67c2:	ee 1f       	adc	r30, r30
    67c4:	ff 1f       	adc	r31, r31
    67c6:	a2 17       	cp	r26, r18
    67c8:	b3 07       	cpc	r27, r19
    67ca:	e4 07       	cpc	r30, r20
    67cc:	f5 07       	cpc	r31, r21
    67ce:	20 f0       	brcs	.+8      	; 0x67d8 <__udivmodsi4_ep>
    67d0:	a2 1b       	sub	r26, r18
    67d2:	b3 0b       	sbc	r27, r19
    67d4:	e4 0b       	sbc	r30, r20
    67d6:	f5 0b       	sbc	r31, r21

000067d8 <__udivmodsi4_ep>:
    67d8:	66 1f       	adc	r22, r22
    67da:	77 1f       	adc	r23, r23
    67dc:	88 1f       	adc	r24, r24
    67de:	99 1f       	adc	r25, r25
    67e0:	1a 94       	dec	r1
    67e2:	69 f7       	brne	.-38     	; 0x67be <__udivmodsi4_loop>
    67e4:	60 95       	com	r22
    67e6:	70 95       	com	r23
    67e8:	80 95       	com	r24
    67ea:	90 95       	com	r25
    67ec:	9b 01       	movw	r18, r22
    67ee:	ac 01       	movw	r20, r24
    67f0:	bd 01       	movw	r22, r26
    67f2:	cf 01       	movw	r24, r30
    67f4:	08 95       	ret

000067f6 <__umulhisi3>:
    67f6:	a2 9f       	mul	r26, r18
    67f8:	b0 01       	movw	r22, r0
    67fa:	b3 9f       	mul	r27, r19
    67fc:	c0 01       	movw	r24, r0
    67fe:	a3 9f       	mul	r26, r19
    6800:	70 0d       	add	r23, r0
    6802:	81 1d       	adc	r24, r1
    6804:	11 24       	eor	r1, r1
    6806:	91 1d       	adc	r25, r1
    6808:	b2 9f       	mul	r27, r18
    680a:	70 0d       	add	r23, r0
    680c:	81 1d       	adc	r24, r1
    680e:	11 24       	eor	r1, r1
    6810:	91 1d       	adc	r25, r1
    6812:	08 95       	ret

00006814 <_exit>:
    6814:	f8 94       	cli

00006816 <__stop_program>:
    6816:	ff cf       	rjmp	.-2      	; 0x6816 <__stop_program>
