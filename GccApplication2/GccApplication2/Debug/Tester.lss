
Tester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001d2  00800100  00002926  000029ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002926  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  008002d2  008002d2  00002b8c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002b8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002bbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000330  00000000  00000000  00002bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008751  00000000  00000000  00002f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000012c7  00000000  00000000  0000b67d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000236d  00000000  00000000  0000c944  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000117c  00000000  00000000  0000ecb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ec2  00000000  00000000  0000fe30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006208  00000000  00000000  00010cf2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000340  00000000  00000000  00016efa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	49 c0       	rjmp	.+146    	; 0x94 <__ctors_end>
       2:	00 00       	nop
       4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
       6:	00 00       	nop
       8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
       a:	00 00       	nop
       c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
       e:	00 00       	nop
      10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
      12:	00 00       	nop
      14:	0c 94 de 12 	jmp	0x25bc	; 0x25bc <__vector_5>
      18:	0c 94 0a 13 	jmp	0x2614	; 0x2614 <__vector_6>
      1c:	0c 94 40 13 	jmp	0x2680	; 0x2680 <__vector_7>
      20:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__vector_8>
      24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
      26:	00 00       	nop
      28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
      32:	00 00       	nop
      34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
      36:	00 00       	nop
      38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
      42:	00 00       	nop
      44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
      46:	00 00       	nop
      48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
      52:	00 00       	nop
      54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
      56:	00 00       	nop
      58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
      62:	00 00       	nop
      64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
      66:	00 00       	nop
      68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
      72:	00 00       	nop
      74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
      76:	00 00       	nop
      78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
      82:	00 00       	nop
      84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
      86:	00 00       	nop
      88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
	...

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	12 e0       	ldi	r17, 0x02	; 2
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e6 e2       	ldi	r30, 0x26	; 38
      a8:	f9 e2       	ldi	r31, 0x29	; 41
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a2 3d       	cpi	r26, 0xD2	; 210
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	22 e0       	ldi	r18, 0x02	; 2
      bc:	a2 ed       	ldi	r26, 0xD2	; 210
      be:	b2 e0       	ldi	r27, 0x02	; 2
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a5 3d       	cpi	r26, 0xD5	; 213
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	0e 94 4a 14 	call	0x2894	; 0x2894 <main>
      ce:	0c 94 91 14 	jmp	0x2922	; 0x2922 <_exit>

000000d2 <__bad_interrupt>:
      d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <can_init>:
void can_init_mask (uint8_t mask){
	CANIDM1 = mask << 5;
	CANIDM2 = mask >> 3;
	// RTRMSK = 0 : We don't use remote frames ever.
	// IDEMSK = 0 : we don't use the extended format.
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	f8 94       	cli
      da:	81 e0       	ldi	r24, 0x01	; 1
      dc:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
      e0:	84 e3       	ldi	r24, 0x34	; 52
      e2:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
      e6:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
      ea:	80 e0       	ldi	r24, 0x00	; 0
      ec:	cd ee       	ldi	r28, 0xED	; 237
      ee:	d0 e0       	ldi	r29, 0x00	; 0
      f0:	af ee       	ldi	r26, 0xEF	; 239
      f2:	b0 e0       	ldi	r27, 0x00	; 0
      f4:	ee ee       	ldi	r30, 0xEE	; 238
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	98 2f       	mov	r25, r24
      fa:	92 95       	swap	r25
      fc:	90 7f       	andi	r25, 0xF0	; 240
      fe:	98 83       	st	Y, r25
     100:	1c 92       	st	X, r1
     102:	10 82       	st	Z, r1
     104:	8f 5f       	subi	r24, 0xFF	; 255
     106:	8f 30       	cpi	r24, 0x0F	; 15
     108:	b9 f7       	brne	.-18     	; 0xf8 <can_init+0x24>
     10a:	86 e0       	ldi	r24, 0x06	; 6
     10c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     110:	8c e0       	ldi	r24, 0x0C	; 12
     112:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     116:	87 e3       	ldi	r24, 0x37	; 55
     118:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     11c:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
     120:	82 e0       	ldi	r24, 0x02	; 2
     122:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     126:	78 94       	sei
     128:	df 91       	pop	r29
     12a:	cf 91       	pop	r28
     12c:	08 95       	ret

0000012e <can_get_message>:
     12e:	fb 01       	movw	r30, r22
     130:	82 95       	swap	r24
     132:	80 7f       	andi	r24, 0xF0	; 240
     134:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     138:	9b 01       	movw	r18, r22
     13a:	28 5f       	subi	r18, 0xF8	; 248
     13c:	3f 4f       	sbci	r19, 0xFF	; 255
     13e:	aa ef       	ldi	r26, 0xFA	; 250
     140:	b0 e0       	ldi	r27, 0x00	; 0
     142:	8c 91       	ld	r24, X
     144:	81 93       	st	Z+, r24
     146:	2e 17       	cp	r18, r30
     148:	3f 07       	cpc	r19, r31
     14a:	d9 f7       	brne	.-10     	; 0x142 <can_get_message+0x14>
     14c:	08 95       	ret

0000014e <can_get_frame_buffer>:
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	8c 01       	movw	r16, r24
     156:	c0 e0       	ldi	r28, 0x00	; 0
     158:	b8 01       	movw	r22, r16
     15a:	8c 2f       	mov	r24, r28
     15c:	e8 df       	rcall	.-48     	; 0x12e <can_get_message>
     15e:	08 5f       	subi	r16, 0xF8	; 248
     160:	1f 4f       	sbci	r17, 0xFF	; 255
     162:	cf 5f       	subi	r28, 0xFF	; 255
     164:	c8 30       	cpi	r28, 0x08	; 8
     166:	c1 f7       	brne	.-16     	; 0x158 <can_get_frame_buffer+0xa>
     168:	cf 91       	pop	r28
     16a:	1f 91       	pop	r17
     16c:	0f 91       	pop	r16
     16e:	08 95       	ret

00000170 <can_init_id>:
     170:	98 2f       	mov	r25, r24
     172:	92 95       	swap	r25
     174:	99 0f       	add	r25, r25
     176:	90 7e       	andi	r25, 0xE0	; 224
     178:	90 93 f3 00 	sts	0x00F3, r25	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     17c:	86 95       	lsr	r24
     17e:	86 95       	lsr	r24
     180:	86 95       	lsr	r24
     182:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     186:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     18a:	08 95       	ret

0000018c <can_init_mask_def>:
     18c:	8f ef       	ldi	r24, 0xFF	; 255
     18e:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
     192:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
     196:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
     19a:	08 95       	ret

0000019c <can_init_message>:
}

void can_init_message( uint8_t *message ){
     19c:	fc 01       	movw	r30, r24
     19e:	9c 01       	movw	r18, r24
     1a0:	28 5f       	subi	r18, 0xF8	; 248
     1a2:	3f 4f       	sbci	r19, 0xFF	; 255
	uint8_t j;
	for(j=0; j<8; j++){
		CANMSG = *message;
     1a4:	aa ef       	ldi	r26, 0xFA	; 250
     1a6:	b0 e0       	ldi	r27, 0x00	; 0
     1a8:	81 91       	ld	r24, Z+
     1aa:	8c 93       	st	X, r24
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}

void can_init_message( uint8_t *message ){
	uint8_t j;
	for(j=0; j<8; j++){
     1ac:	2e 17       	cp	r18, r30
     1ae:	3f 07       	cpc	r19, r31
     1b0:	d9 f7       	brne	.-10     	; 0x1a8 <can_init_message+0xc>
		CANMSG = *message;
		message++;
	}
}
     1b2:	08 95       	ret

000001b4 <can_send_message>:

int can_send_message( uint8_t mobnr , uint8_t id, uint8_t *message ){
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	ea 01       	movw	r28, r20
	//select mob.
	CANPAGE = (mobnr << 4);
     1ba:	82 95       	swap	r24
     1bc:	80 7f       	andi	r24, 0xF0	; 240
     1be:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	//copy ID.
	can_init_id(id);
     1c2:	86 2f       	mov	r24, r22
     1c4:	d5 df       	rcall	.-86     	; 0x170 <can_init_id>
	//copy message.
	can_init_message(message);
     1c6:	ce 01       	movw	r24, r28
     1c8:	e9 df       	rcall	.-46     	; 0x19c <can_init_message>
	//enable transmission
	CANCDMOB = (1 << CONMOB0) | (1 << DLC3);
     1ca:	88 e4       	ldi	r24, 0x48	; 72
     1cc:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	
	return 0;
}
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	08 95       	ret

000001da <can_receive_message>:

int can_receive_message( uint8_t mobnr, uint8_t id, uint8_t mask, uint8_t *message){
     1da:	ef 92       	push	r14
     1dc:	ff 92       	push	r15
     1de:	0f 93       	push	r16
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	08 2f       	mov	r16, r24
     1e8:	86 2f       	mov	r24, r22
     1ea:	79 01       	movw	r14, r18
	CANPAGE = (mobnr << 4);
     1ec:	10 2f       	mov	r17, r16
     1ee:	12 95       	swap	r17
     1f0:	10 7f       	andi	r17, 0xF0	; 240
     1f2:	cd ee       	ldi	r28, 0xED	; 237
     1f4:	d0 e0       	ldi	r29, 0x00	; 0
     1f6:	18 83       	st	Y, r17
	CANIE2 = (1 << mobnr);
     1f8:	21 e0       	ldi	r18, 0x01	; 1
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	00 2e       	mov	r0, r16
     1fe:	02 c0       	rjmp	.+4      	; 0x204 <can_receive_message+0x2a>
     200:	22 0f       	add	r18, r18
     202:	33 1f       	adc	r19, r19
     204:	0a 94       	dec	r0
     206:	e2 f7       	brpl	.-8      	; 0x200 <can_receive_message+0x26>
     208:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	can_init_id(id);
     20c:	b1 df       	rcall	.-158    	; 0x170 <can_init_id>
	can_init_mask_def();
     20e:	be df       	rcall	.-132    	; 0x18c <can_init_mask_def>
     210:	88 e8       	ldi	r24, 0x88	; 136
	//CAN standard rev 2.0 A (identifiers length = 11 bits)
	CANCDMOB = (1 << CONMOB1) | (1 << DLC3); //enable reception and data length code = 8 bytes
     212:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     216:	18 83       	st	Y, r17
	
	CANPAGE = (mobnr << 4);
     218:	18 83       	st	Y, r17
	CANPAGE = (mobnr << 4);
     21a:	ea ed       	ldi	r30, 0xDA	; 218
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	80 81       	ld	r24, Z
     220:	88 23       	and	r24, r24
     222:	ec f7       	brge	.-6      	; 0x21e <can_receive_message+0x44>
     224:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     228:	85 ff       	sbrs	r24, 5
     22a:	0e c0       	rjmp	.+28     	; 0x248 <can_receive_message+0x6e>
     22c:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	//reset mob RXOK flag.
	CANSTMOB = 0x00;
     230:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	//reset interrupt enable
	CANIE2 = 0x00;
     234:	ea ed       	ldi	r30, 0xDA	; 218
	//reset interrupt register.
	CANGIT = CANGIT;
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	80 83       	st	Z, r24
     23c:	b7 01       	movw	r22, r14
	//retrieve message.
	can_get_message(mobnr, message);
     23e:	80 2f       	mov	r24, r16
     240:	76 df       	rcall	.-276    	; 0x12e <can_get_message>
     242:	80 e0       	ldi	r24, 0x00	; 0
	return 0;
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	02 c0       	rjmp	.+4      	; 0x24c <can_receive_message+0x72>
     248:	81 e0       	ldi	r24, 0x01	; 1
	CANPAGE = (mobnr << 4);
	CANPAGE = (mobnr << 4);
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	df 91       	pop	r29
	//reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_message(mobnr, message);
	return 0;
}
     24e:	cf 91       	pop	r28
     250:	1f 91       	pop	r17
     252:	0f 91       	pop	r16
     254:	ff 90       	pop	r15
     256:	ef 90       	pop	r14
     258:	08 95       	ret

0000025a <can_send_frame_buffer>:
     25a:	0f 93       	push	r16

int can_send_frame_buffer( uint8_t *message ){
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	8c 01       	movw	r16, r24
	uint8_t j;
	for(j=0; j<8; j++){
     262:	c0 e0       	ldi	r28, 0x00	; 0
		can_send_message(j,j,message);
     264:	a8 01       	movw	r20, r16
     266:	6c 2f       	mov	r22, r28
     268:	8c 2f       	mov	r24, r28
     26a:	a4 df       	rcall	.-184    	; 0x1b4 <can_send_message>
		message = message + 8;
     26c:	08 5f       	subi	r16, 0xF8	; 248
     26e:	1f 4f       	sbci	r17, 0xFF	; 255
	return 0;
}

int can_send_frame_buffer( uint8_t *message ){
	uint8_t j;
	for(j=0; j<8; j++){
     270:	cf 5f       	subi	r28, 0xFF	; 255
     272:	c8 30       	cpi	r28, 0x08	; 8
     274:	b9 f7       	brne	.-18     	; 0x264 <can_send_frame_buffer+0xa>
		can_send_message(j,j,message);
		message = message + 8;
	}
	return 0;
}
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	cf 91       	pop	r28
     27c:	1f 91       	pop	r17
     27e:	0f 91       	pop	r16
     280:	08 95       	ret

00000282 <can_receive_frame_buffer>:

int can_receive_frame_buffer( uint8_t *message ){
     282:	cf 92       	push	r12
     284:	df 92       	push	r13
     286:	ef 92       	push	r14
     288:	ff 92       	push	r15
     28a:	0f 93       	push	r16
     28c:	1f 93       	push	r17
     28e:	cf 93       	push	r28
     290:	df 93       	push	r29
     292:	7c 01       	movw	r14, r24
	//Enable buffer receive interrupt.
	CANGIE |= 1 << ENBX ;
     294:	eb ed       	ldi	r30, 0xDB	; 219
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	84 60       	ori	r24, 0x04	; 4
     29c:	80 83       	st	Z, r24
	uint8_t j;
	for(j=0; j<8; j++){
     29e:	c0 e0       	ldi	r28, 0x00	; 0
		CANPAGE = (j << 4);
     2a0:	0f 2e       	mov	r0, r31
     2a2:	fd ee       	ldi	r31, 0xED	; 237
     2a4:	cf 2e       	mov	r12, r31
     2a6:	d1 2c       	mov	r13, r1
     2a8:	f0 2d       	mov	r31, r0
		can_init_id(j);
		// Mask = 255
		can_init_mask_def();
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     2aa:	0f ee       	ldi	r16, 0xEF	; 239
     2ac:	10 e0       	ldi	r17, 0x00	; 0
     2ae:	d8 ec       	ldi	r29, 0xC8	; 200
int can_receive_frame_buffer( uint8_t *message ){
	//Enable buffer receive interrupt.
	CANGIE |= 1 << ENBX ;
	uint8_t j;
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     2b0:	8c 2f       	mov	r24, r28
     2b2:	82 95       	swap	r24
     2b4:	80 7f       	andi	r24, 0xF0	; 240
     2b6:	f6 01       	movw	r30, r12
     2b8:	80 83       	st	Z, r24
		can_init_id(j);
     2ba:	8c 2f       	mov	r24, r28
     2bc:	59 df       	rcall	.-334    	; 0x170 <can_init_id>
		// Mask = 255
		can_init_mask_def();
     2be:	66 df       	rcall	.-308    	; 0x18c <can_init_mask_def>
     2c0:	f8 01       	movw	r30, r16
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     2c2:	d0 83       	st	Z, r29
     2c4:	cf 5f       	subi	r28, 0xFF	; 255

int can_receive_frame_buffer( uint8_t *message ){
	//Enable buffer receive interrupt.
	CANGIE |= 1 << ENBX ;
	uint8_t j;
	for(j=0; j<8; j++){
     2c6:	c8 30       	cpi	r28, 0x08	; 8
     2c8:	99 f7       	brne	.-26     	; 0x2b0 <can_receive_frame_buffer+0x2e>
     2ca:	ea ed       	ldi	r30, 0xDA	; 218
		can_init_mask_def();
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	88 23       	and	r24, r24
     2d2:	ec f7       	brge	.-6      	; 0x2ce <can_receive_frame_buffer+0x4c>
     2d4:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     2d8:	84 ff       	sbrs	r24, 4
     2da:	19 c0       	rjmp	.+50     	; 0x30e <can_receive_frame_buffer+0x8c>
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	cd ee       	ldi	r28, 0xED	; 237
	//reset mob RXOK flags
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     2e0:	d0 e0       	ldi	r29, 0x00	; 0
     2e2:	af ee       	ldi	r26, 0xEF	; 239
		CANCDMOB = 0x00;
     2e4:	b0 e0       	ldi	r27, 0x00	; 0
     2e6:	ee ee       	ldi	r30, 0xEE	; 238
		CANSTMOB = 0x00;
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	98 2f       	mov	r25, r24
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     2ec:	92 95       	swap	r25
     2ee:	90 7f       	andi	r25, 0xF0	; 240
     2f0:	98 83       	st	Y, r25
     2f2:	1c 92       	st	X, r1
		CANCDMOB = 0x00;
     2f4:	10 82       	st	Z, r1
		CANSTMOB = 0x00;
     2f6:	8f 5f       	subi	r24, 0xFF	; 255
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<8; j++){
     2f8:	88 30       	cpi	r24, 0x08	; 8
     2fa:	b9 f7       	brne	.-18     	; 0x2ea <can_receive_frame_buffer+0x68>
     2fc:	ea ed       	ldi	r30, 0xDA	; 218
		CANPAGE = (j << 4);
		CANCDMOB = 0x00;
		CANSTMOB = 0x00;
	}
	//Reset interrupt register.
	CANGIT = CANGIT;
     2fe:	f0 e0       	ldi	r31, 0x00	; 0
     300:	80 81       	ld	r24, Z
     302:	80 83       	st	Z, r24
	//retrieve message.
	can_get_frame_buffer(message);
     304:	c7 01       	movw	r24, r14
     306:	23 df       	rcall	.-442    	; 0x14e <can_get_frame_buffer>
     308:	80 e0       	ldi	r24, 0x00	; 0
	return 0;
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	02 c0       	rjmp	.+4      	; 0x312 <can_receive_frame_buffer+0x90>
     30e:	81 e0       	ldi	r24, 0x01	; 1
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	df 91       	pop	r29
	//Reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_frame_buffer(message);
	return 0;
}
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	0f 91       	pop	r16
     31a:	ff 90       	pop	r15
     31c:	ef 90       	pop	r14
     31e:	df 90       	pop	r13
     320:	cf 90       	pop	r12
     322:	08 95       	ret

00000324 <uECC_vli_clear>:
     324:	dc 01       	movw	r26, r24
    uECC_vli_nativeToBytes(public_key, curve->num_bytes, _public);
    uECC_vli_nativeToBytes(
        public_key + curve->num_bytes, curve->num_bytes, _public + curve->num_words);
#endif
    return 1;
}
     326:	e8 eb       	ldi	r30, 0xB8	; 184
     328:	f1 e0       	ldi	r31, 0x01	; 1
     32a:	e6 1b       	sub	r30, r22
     32c:	f1 09       	sbc	r31, r1
     32e:	09 94       	ijmp
     330:	1d 92       	st	X+, r1
     332:	1d 92       	st	X+, r1
     334:	1d 92       	st	X+, r1
     336:	1d 92       	st	X+, r1
     338:	1d 92       	st	X+, r1
     33a:	1d 92       	st	X+, r1
     33c:	1d 92       	st	X+, r1
     33e:	1d 92       	st	X+, r1
     340:	1d 92       	st	X+, r1
     342:	1d 92       	st	X+, r1
     344:	1d 92       	st	X+, r1
     346:	1d 92       	st	X+, r1
     348:	1d 92       	st	X+, r1
     34a:	1d 92       	st	X+, r1
     34c:	1d 92       	st	X+, r1
     34e:	1d 92       	st	X+, r1
     350:	1d 92       	st	X+, r1
     352:	1d 92       	st	X+, r1
     354:	1d 92       	st	X+, r1
     356:	1d 92       	st	X+, r1
     358:	1d 92       	st	X+, r1
     35a:	1d 92       	st	X+, r1
     35c:	1d 92       	st	X+, r1
     35e:	1d 92       	st	X+, r1
     360:	1d 92       	st	X+, r1
     362:	1d 92       	st	X+, r1
     364:	1d 92       	st	X+, r1
     366:	1d 92       	st	X+, r1
     368:	1d 92       	st	X+, r1
     36a:	1d 92       	st	X+, r1
     36c:	1d 92       	st	X+, r1
     36e:	1d 92       	st	X+, r1
     370:	08 95       	ret

00000372 <uECC_vli_set>:
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	44 0f       	add	r20, r20
     378:	eb 01       	movw	r28, r22
     37a:	dc 01       	movw	r26, r24
     37c:	e3 e0       	ldi	r30, 0x03	; 3
     37e:	f2 e0       	ldi	r31, 0x02	; 2
     380:	e4 1b       	sub	r30, r20
     382:	f1 09       	sbc	r31, r1
     384:	09 94       	ijmp
     386:	09 90       	ld	r0, Y+
     388:	0d 92       	st	X+, r0
     38a:	09 90       	ld	r0, Y+
     38c:	0d 92       	st	X+, r0
     38e:	09 90       	ld	r0, Y+
     390:	0d 92       	st	X+, r0
     392:	09 90       	ld	r0, Y+
     394:	0d 92       	st	X+, r0
     396:	09 90       	ld	r0, Y+
     398:	0d 92       	st	X+, r0
     39a:	09 90       	ld	r0, Y+
     39c:	0d 92       	st	X+, r0
     39e:	09 90       	ld	r0, Y+
     3a0:	0d 92       	st	X+, r0
     3a2:	09 90       	ld	r0, Y+
     3a4:	0d 92       	st	X+, r0
     3a6:	09 90       	ld	r0, Y+
     3a8:	0d 92       	st	X+, r0
     3aa:	09 90       	ld	r0, Y+
     3ac:	0d 92       	st	X+, r0
     3ae:	09 90       	ld	r0, Y+
     3b0:	0d 92       	st	X+, r0
     3b2:	09 90       	ld	r0, Y+
     3b4:	0d 92       	st	X+, r0
     3b6:	09 90       	ld	r0, Y+
     3b8:	0d 92       	st	X+, r0
     3ba:	09 90       	ld	r0, Y+
     3bc:	0d 92       	st	X+, r0
     3be:	09 90       	ld	r0, Y+
     3c0:	0d 92       	st	X+, r0
     3c2:	09 90       	ld	r0, Y+
     3c4:	0d 92       	st	X+, r0
     3c6:	09 90       	ld	r0, Y+
     3c8:	0d 92       	st	X+, r0
     3ca:	09 90       	ld	r0, Y+
     3cc:	0d 92       	st	X+, r0
     3ce:	09 90       	ld	r0, Y+
     3d0:	0d 92       	st	X+, r0
     3d2:	09 90       	ld	r0, Y+
     3d4:	0d 92       	st	X+, r0
     3d6:	09 90       	ld	r0, Y+
     3d8:	0d 92       	st	X+, r0
     3da:	09 90       	ld	r0, Y+
     3dc:	0d 92       	st	X+, r0
     3de:	09 90       	ld	r0, Y+
     3e0:	0d 92       	st	X+, r0
     3e2:	09 90       	ld	r0, Y+
     3e4:	0d 92       	st	X+, r0
     3e6:	09 90       	ld	r0, Y+
     3e8:	0d 92       	st	X+, r0
     3ea:	09 90       	ld	r0, Y+
     3ec:	0d 92       	st	X+, r0
     3ee:	09 90       	ld	r0, Y+
     3f0:	0d 92       	st	X+, r0
     3f2:	09 90       	ld	r0, Y+
     3f4:	0d 92       	st	X+, r0
     3f6:	09 90       	ld	r0, Y+
     3f8:	0d 92       	st	X+, r0
     3fa:	09 90       	ld	r0, Y+
     3fc:	0d 92       	st	X+, r0
     3fe:	09 90       	ld	r0, Y+
     400:	0d 92       	st	X+, r0
     402:	09 90       	ld	r0, Y+
     404:	0d 92       	st	X+, r0
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <uECC_vli_rshift1>:
     40c:	26 2f       	mov	r18, r22
     40e:	06 2e       	mov	r0, r22
     410:	00 0c       	add	r0, r0
     412:	33 0b       	sbc	r19, r19
     414:	21 50       	subi	r18, 0x01	; 1
     416:	31 09       	sbc	r19, r1
     418:	32 2f       	mov	r19, r18
     41a:	33 0f       	add	r19, r19
     41c:	23 0f       	add	r18, r19
     41e:	dc 01       	movw	r26, r24
     420:	e7 e7       	ldi	r30, 0x77	; 119
     422:	f2 e0       	ldi	r31, 0x02	; 2
     424:	e2 1b       	sub	r30, r18
     426:	f1 09       	sbc	r31, r1
     428:	a6 0f       	add	r26, r22
     42a:	b1 1d       	adc	r27, r1
     42c:	0e 90       	ld	r0, -X
     42e:	06 94       	lsr	r0
     430:	0c 92       	st	X, r0
     432:	09 94       	ijmp
     434:	0e 90       	ld	r0, -X
     436:	07 94       	ror	r0
     438:	0c 92       	st	X, r0
     43a:	0e 90       	ld	r0, -X
     43c:	07 94       	ror	r0
     43e:	0c 92       	st	X, r0
     440:	0e 90       	ld	r0, -X
     442:	07 94       	ror	r0
     444:	0c 92       	st	X, r0
     446:	0e 90       	ld	r0, -X
     448:	07 94       	ror	r0
     44a:	0c 92       	st	X, r0
     44c:	0e 90       	ld	r0, -X
     44e:	07 94       	ror	r0
     450:	0c 92       	st	X, r0
     452:	0e 90       	ld	r0, -X
     454:	07 94       	ror	r0
     456:	0c 92       	st	X, r0
     458:	0e 90       	ld	r0, -X
     45a:	07 94       	ror	r0
     45c:	0c 92       	st	X, r0
     45e:	0e 90       	ld	r0, -X
     460:	07 94       	ror	r0
     462:	0c 92       	st	X, r0
     464:	0e 90       	ld	r0, -X
     466:	07 94       	ror	r0
     468:	0c 92       	st	X, r0
     46a:	0e 90       	ld	r0, -X
     46c:	07 94       	ror	r0
     46e:	0c 92       	st	X, r0
     470:	0e 90       	ld	r0, -X
     472:	07 94       	ror	r0
     474:	0c 92       	st	X, r0
     476:	0e 90       	ld	r0, -X
     478:	07 94       	ror	r0
     47a:	0c 92       	st	X, r0
     47c:	0e 90       	ld	r0, -X
     47e:	07 94       	ror	r0
     480:	0c 92       	st	X, r0
     482:	0e 90       	ld	r0, -X
     484:	07 94       	ror	r0
     486:	0c 92       	st	X, r0
     488:	0e 90       	ld	r0, -X
     48a:	07 94       	ror	r0
     48c:	0c 92       	st	X, r0
     48e:	0e 90       	ld	r0, -X
     490:	07 94       	ror	r0
     492:	0c 92       	st	X, r0
     494:	0e 90       	ld	r0, -X
     496:	07 94       	ror	r0
     498:	0c 92       	st	X, r0
     49a:	0e 90       	ld	r0, -X
     49c:	07 94       	ror	r0
     49e:	0c 92       	st	X, r0
     4a0:	0e 90       	ld	r0, -X
     4a2:	07 94       	ror	r0
     4a4:	0c 92       	st	X, r0
     4a6:	0e 90       	ld	r0, -X
     4a8:	07 94       	ror	r0
     4aa:	0c 92       	st	X, r0
     4ac:	0e 90       	ld	r0, -X
     4ae:	07 94       	ror	r0
     4b0:	0c 92       	st	X, r0
     4b2:	0e 90       	ld	r0, -X
     4b4:	07 94       	ror	r0
     4b6:	0c 92       	st	X, r0
     4b8:	0e 90       	ld	r0, -X
     4ba:	07 94       	ror	r0
     4bc:	0c 92       	st	X, r0
     4be:	0e 90       	ld	r0, -X
     4c0:	07 94       	ror	r0
     4c2:	0c 92       	st	X, r0
     4c4:	0e 90       	ld	r0, -X
     4c6:	07 94       	ror	r0
     4c8:	0c 92       	st	X, r0
     4ca:	0e 90       	ld	r0, -X
     4cc:	07 94       	ror	r0
     4ce:	0c 92       	st	X, r0
     4d0:	0e 90       	ld	r0, -X
     4d2:	07 94       	ror	r0
     4d4:	0c 92       	st	X, r0
     4d6:	0e 90       	ld	r0, -X
     4d8:	07 94       	ror	r0
     4da:	0c 92       	st	X, r0
     4dc:	0e 90       	ld	r0, -X
     4de:	07 94       	ror	r0
     4e0:	0c 92       	st	X, r0
     4e2:	0e 90       	ld	r0, -X
     4e4:	07 94       	ror	r0
     4e6:	0c 92       	st	X, r0
     4e8:	0e 90       	ld	r0, -X
     4ea:	07 94       	ror	r0
     4ec:	0c 92       	st	X, r0
     4ee:	08 95       	ret

000004f0 <uECC_vli_add>:
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	22 0f       	add	r18, r18
     4f6:	db 01       	movw	r26, r22
     4f8:	ea 01       	movw	r28, r20
     4fa:	ac 01       	movw	r20, r24
     4fc:	e4 ec       	ldi	r30, 0xC4	; 196
     4fe:	f2 e0       	ldi	r31, 0x02	; 2
     500:	e2 1b       	sub	r30, r18
     502:	f1 09       	sbc	r31, r1
     504:	88 94       	clc
     506:	09 94       	ijmp
     508:	fa 01       	movw	r30, r20
     50a:	3e c0       	rjmp	.+124    	; 0x588 <add_89_32>
     50c:	fa 01       	movw	r30, r20
     50e:	40 c0       	rjmp	.+128    	; 0x590 <add_89_31>
     510:	fa 01       	movw	r30, r20
     512:	42 c0       	rjmp	.+132    	; 0x598 <add_89_30>
     514:	fa 01       	movw	r30, r20
     516:	44 c0       	rjmp	.+136    	; 0x5a0 <add_89_29>
     518:	fa 01       	movw	r30, r20
     51a:	46 c0       	rjmp	.+140    	; 0x5a8 <add_89_28>
     51c:	fa 01       	movw	r30, r20
     51e:	48 c0       	rjmp	.+144    	; 0x5b0 <add_89_27>
     520:	fa 01       	movw	r30, r20
     522:	4a c0       	rjmp	.+148    	; 0x5b8 <add_89_26>
     524:	fa 01       	movw	r30, r20
     526:	4c c0       	rjmp	.+152    	; 0x5c0 <add_89_25>
     528:	fa 01       	movw	r30, r20
     52a:	4e c0       	rjmp	.+156    	; 0x5c8 <add_89_24>
     52c:	fa 01       	movw	r30, r20
     52e:	50 c0       	rjmp	.+160    	; 0x5d0 <add_89_23>
     530:	fa 01       	movw	r30, r20
     532:	52 c0       	rjmp	.+164    	; 0x5d8 <add_89_22>
     534:	fa 01       	movw	r30, r20
     536:	54 c0       	rjmp	.+168    	; 0x5e0 <add_89_21>
     538:	fa 01       	movw	r30, r20
     53a:	56 c0       	rjmp	.+172    	; 0x5e8 <add_89_20>
     53c:	fa 01       	movw	r30, r20
     53e:	58 c0       	rjmp	.+176    	; 0x5f0 <add_89_19>
     540:	fa 01       	movw	r30, r20
     542:	5a c0       	rjmp	.+180    	; 0x5f8 <add_89_18>
     544:	fa 01       	movw	r30, r20
     546:	5c c0       	rjmp	.+184    	; 0x600 <add_89_17>
     548:	fa 01       	movw	r30, r20
     54a:	5e c0       	rjmp	.+188    	; 0x608 <add_89_16>
     54c:	fa 01       	movw	r30, r20
     54e:	60 c0       	rjmp	.+192    	; 0x610 <add_89_15>
     550:	fa 01       	movw	r30, r20
     552:	62 c0       	rjmp	.+196    	; 0x618 <add_89_14>
     554:	fa 01       	movw	r30, r20
     556:	64 c0       	rjmp	.+200    	; 0x620 <add_89_13>
     558:	fa 01       	movw	r30, r20
     55a:	66 c0       	rjmp	.+204    	; 0x628 <add_89_12>
     55c:	fa 01       	movw	r30, r20
     55e:	68 c0       	rjmp	.+208    	; 0x630 <add_89_11>
     560:	fa 01       	movw	r30, r20
     562:	6a c0       	rjmp	.+212    	; 0x638 <add_89_10>
     564:	fa 01       	movw	r30, r20
     566:	6c c0       	rjmp	.+216    	; 0x640 <add_89_9>
     568:	fa 01       	movw	r30, r20
     56a:	6e c0       	rjmp	.+220    	; 0x648 <add_89_8>
     56c:	fa 01       	movw	r30, r20
     56e:	70 c0       	rjmp	.+224    	; 0x650 <add_89_7>
     570:	fa 01       	movw	r30, r20
     572:	72 c0       	rjmp	.+228    	; 0x658 <add_89_6>
     574:	fa 01       	movw	r30, r20
     576:	74 c0       	rjmp	.+232    	; 0x660 <add_89_5>
     578:	fa 01       	movw	r30, r20
     57a:	76 c0       	rjmp	.+236    	; 0x668 <add_89_4>
     57c:	fa 01       	movw	r30, r20
     57e:	78 c0       	rjmp	.+240    	; 0x670 <add_89_3>
     580:	fa 01       	movw	r30, r20
     582:	7a c0       	rjmp	.+244    	; 0x678 <add_89_2>
     584:	fa 01       	movw	r30, r20
     586:	7c c0       	rjmp	.+248    	; 0x680 <add_89_1>

00000588 <add_89_32>:
     588:	8d 91       	ld	r24, X+
     58a:	99 91       	ld	r25, Y+
     58c:	89 1f       	adc	r24, r25
     58e:	81 93       	st	Z+, r24

00000590 <add_89_31>:
     590:	8d 91       	ld	r24, X+
     592:	99 91       	ld	r25, Y+
     594:	89 1f       	adc	r24, r25
     596:	81 93       	st	Z+, r24

00000598 <add_89_30>:
     598:	8d 91       	ld	r24, X+
     59a:	99 91       	ld	r25, Y+
     59c:	89 1f       	adc	r24, r25
     59e:	81 93       	st	Z+, r24

000005a0 <add_89_29>:
     5a0:	8d 91       	ld	r24, X+
     5a2:	99 91       	ld	r25, Y+
     5a4:	89 1f       	adc	r24, r25
     5a6:	81 93       	st	Z+, r24

000005a8 <add_89_28>:
     5a8:	8d 91       	ld	r24, X+
     5aa:	99 91       	ld	r25, Y+
     5ac:	89 1f       	adc	r24, r25
     5ae:	81 93       	st	Z+, r24

000005b0 <add_89_27>:
     5b0:	8d 91       	ld	r24, X+
     5b2:	99 91       	ld	r25, Y+
     5b4:	89 1f       	adc	r24, r25
     5b6:	81 93       	st	Z+, r24

000005b8 <add_89_26>:
     5b8:	8d 91       	ld	r24, X+
     5ba:	99 91       	ld	r25, Y+
     5bc:	89 1f       	adc	r24, r25
     5be:	81 93       	st	Z+, r24

000005c0 <add_89_25>:
     5c0:	8d 91       	ld	r24, X+
     5c2:	99 91       	ld	r25, Y+
     5c4:	89 1f       	adc	r24, r25
     5c6:	81 93       	st	Z+, r24

000005c8 <add_89_24>:
     5c8:	8d 91       	ld	r24, X+
     5ca:	99 91       	ld	r25, Y+
     5cc:	89 1f       	adc	r24, r25
     5ce:	81 93       	st	Z+, r24

000005d0 <add_89_23>:
     5d0:	8d 91       	ld	r24, X+
     5d2:	99 91       	ld	r25, Y+
     5d4:	89 1f       	adc	r24, r25
     5d6:	81 93       	st	Z+, r24

000005d8 <add_89_22>:
     5d8:	8d 91       	ld	r24, X+
     5da:	99 91       	ld	r25, Y+
     5dc:	89 1f       	adc	r24, r25
     5de:	81 93       	st	Z+, r24

000005e0 <add_89_21>:
     5e0:	8d 91       	ld	r24, X+
     5e2:	99 91       	ld	r25, Y+
     5e4:	89 1f       	adc	r24, r25
     5e6:	81 93       	st	Z+, r24

000005e8 <add_89_20>:
     5e8:	8d 91       	ld	r24, X+
     5ea:	99 91       	ld	r25, Y+
     5ec:	89 1f       	adc	r24, r25
     5ee:	81 93       	st	Z+, r24

000005f0 <add_89_19>:
     5f0:	8d 91       	ld	r24, X+
     5f2:	99 91       	ld	r25, Y+
     5f4:	89 1f       	adc	r24, r25
     5f6:	81 93       	st	Z+, r24

000005f8 <add_89_18>:
     5f8:	8d 91       	ld	r24, X+
     5fa:	99 91       	ld	r25, Y+
     5fc:	89 1f       	adc	r24, r25
     5fe:	81 93       	st	Z+, r24

00000600 <add_89_17>:
     600:	8d 91       	ld	r24, X+
     602:	99 91       	ld	r25, Y+
     604:	89 1f       	adc	r24, r25
     606:	81 93       	st	Z+, r24

00000608 <add_89_16>:
     608:	8d 91       	ld	r24, X+
     60a:	99 91       	ld	r25, Y+
     60c:	89 1f       	adc	r24, r25
     60e:	81 93       	st	Z+, r24

00000610 <add_89_15>:
     610:	8d 91       	ld	r24, X+
     612:	99 91       	ld	r25, Y+
     614:	89 1f       	adc	r24, r25
     616:	81 93       	st	Z+, r24

00000618 <add_89_14>:
     618:	8d 91       	ld	r24, X+
     61a:	99 91       	ld	r25, Y+
     61c:	89 1f       	adc	r24, r25
     61e:	81 93       	st	Z+, r24

00000620 <add_89_13>:
     620:	8d 91       	ld	r24, X+
     622:	99 91       	ld	r25, Y+
     624:	89 1f       	adc	r24, r25
     626:	81 93       	st	Z+, r24

00000628 <add_89_12>:
     628:	8d 91       	ld	r24, X+
     62a:	99 91       	ld	r25, Y+
     62c:	89 1f       	adc	r24, r25
     62e:	81 93       	st	Z+, r24

00000630 <add_89_11>:
     630:	8d 91       	ld	r24, X+
     632:	99 91       	ld	r25, Y+
     634:	89 1f       	adc	r24, r25
     636:	81 93       	st	Z+, r24

00000638 <add_89_10>:
     638:	8d 91       	ld	r24, X+
     63a:	99 91       	ld	r25, Y+
     63c:	89 1f       	adc	r24, r25
     63e:	81 93       	st	Z+, r24

00000640 <add_89_9>:
     640:	8d 91       	ld	r24, X+
     642:	99 91       	ld	r25, Y+
     644:	89 1f       	adc	r24, r25
     646:	81 93       	st	Z+, r24

00000648 <add_89_8>:
     648:	8d 91       	ld	r24, X+
     64a:	99 91       	ld	r25, Y+
     64c:	89 1f       	adc	r24, r25
     64e:	81 93       	st	Z+, r24

00000650 <add_89_7>:
     650:	8d 91       	ld	r24, X+
     652:	99 91       	ld	r25, Y+
     654:	89 1f       	adc	r24, r25
     656:	81 93       	st	Z+, r24

00000658 <add_89_6>:
     658:	8d 91       	ld	r24, X+
     65a:	99 91       	ld	r25, Y+
     65c:	89 1f       	adc	r24, r25
     65e:	81 93       	st	Z+, r24

00000660 <add_89_5>:
     660:	8d 91       	ld	r24, X+
     662:	99 91       	ld	r25, Y+
     664:	89 1f       	adc	r24, r25
     666:	81 93       	st	Z+, r24

00000668 <add_89_4>:
     668:	8d 91       	ld	r24, X+
     66a:	99 91       	ld	r25, Y+
     66c:	89 1f       	adc	r24, r25
     66e:	81 93       	st	Z+, r24

00000670 <add_89_3>:
     670:	8d 91       	ld	r24, X+
     672:	99 91       	ld	r25, Y+
     674:	89 1f       	adc	r24, r25
     676:	81 93       	st	Z+, r24

00000678 <add_89_2>:
     678:	8d 91       	ld	r24, X+
     67a:	99 91       	ld	r25, Y+
     67c:	89 1f       	adc	r24, r25
     67e:	81 93       	st	Z+, r24

00000680 <add_89_1>:
     680:	8d 91       	ld	r24, X+
     682:	99 91       	ld	r25, Y+
     684:	89 1f       	adc	r24, r25
     686:	81 93       	st	Z+, r24
     688:	81 2d       	mov	r24, r1
     68a:	88 1f       	adc	r24, r24
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	08 95       	ret

00000692 <uECC_vli_sub>:
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	22 0f       	add	r18, r18
     698:	db 01       	movw	r26, r22
     69a:	ea 01       	movw	r28, r20
     69c:	ac 01       	movw	r20, r24
     69e:	e5 e9       	ldi	r30, 0x95	; 149
     6a0:	f3 e0       	ldi	r31, 0x03	; 3
     6a2:	e2 1b       	sub	r30, r18
     6a4:	f1 09       	sbc	r31, r1
     6a6:	88 94       	clc
     6a8:	09 94       	ijmp
     6aa:	fa 01       	movw	r30, r20
     6ac:	3e c0       	rjmp	.+124    	; 0x72a <sub_129_32>
     6ae:	fa 01       	movw	r30, r20
     6b0:	40 c0       	rjmp	.+128    	; 0x732 <sub_129_31>
     6b2:	fa 01       	movw	r30, r20
     6b4:	42 c0       	rjmp	.+132    	; 0x73a <sub_129_30>
     6b6:	fa 01       	movw	r30, r20
     6b8:	44 c0       	rjmp	.+136    	; 0x742 <sub_129_29>
     6ba:	fa 01       	movw	r30, r20
     6bc:	46 c0       	rjmp	.+140    	; 0x74a <sub_129_28>
     6be:	fa 01       	movw	r30, r20
     6c0:	48 c0       	rjmp	.+144    	; 0x752 <sub_129_27>
     6c2:	fa 01       	movw	r30, r20
     6c4:	4a c0       	rjmp	.+148    	; 0x75a <sub_129_26>
     6c6:	fa 01       	movw	r30, r20
     6c8:	4c c0       	rjmp	.+152    	; 0x762 <sub_129_25>
     6ca:	fa 01       	movw	r30, r20
     6cc:	4e c0       	rjmp	.+156    	; 0x76a <sub_129_24>
     6ce:	fa 01       	movw	r30, r20
     6d0:	50 c0       	rjmp	.+160    	; 0x772 <sub_129_23>
     6d2:	fa 01       	movw	r30, r20
     6d4:	52 c0       	rjmp	.+164    	; 0x77a <sub_129_22>
     6d6:	fa 01       	movw	r30, r20
     6d8:	54 c0       	rjmp	.+168    	; 0x782 <sub_129_21>
     6da:	fa 01       	movw	r30, r20
     6dc:	56 c0       	rjmp	.+172    	; 0x78a <sub_129_20>
     6de:	fa 01       	movw	r30, r20
     6e0:	58 c0       	rjmp	.+176    	; 0x792 <sub_129_19>
     6e2:	fa 01       	movw	r30, r20
     6e4:	5a c0       	rjmp	.+180    	; 0x79a <sub_129_18>
     6e6:	fa 01       	movw	r30, r20
     6e8:	5c c0       	rjmp	.+184    	; 0x7a2 <sub_129_17>
     6ea:	fa 01       	movw	r30, r20
     6ec:	5e c0       	rjmp	.+188    	; 0x7aa <sub_129_16>
     6ee:	fa 01       	movw	r30, r20
     6f0:	60 c0       	rjmp	.+192    	; 0x7b2 <sub_129_15>
     6f2:	fa 01       	movw	r30, r20
     6f4:	62 c0       	rjmp	.+196    	; 0x7ba <sub_129_14>
     6f6:	fa 01       	movw	r30, r20
     6f8:	64 c0       	rjmp	.+200    	; 0x7c2 <sub_129_13>
     6fa:	fa 01       	movw	r30, r20
     6fc:	66 c0       	rjmp	.+204    	; 0x7ca <sub_129_12>
     6fe:	fa 01       	movw	r30, r20
     700:	68 c0       	rjmp	.+208    	; 0x7d2 <sub_129_11>
     702:	fa 01       	movw	r30, r20
     704:	6a c0       	rjmp	.+212    	; 0x7da <sub_129_10>
     706:	fa 01       	movw	r30, r20
     708:	6c c0       	rjmp	.+216    	; 0x7e2 <sub_129_9>
     70a:	fa 01       	movw	r30, r20
     70c:	6e c0       	rjmp	.+220    	; 0x7ea <sub_129_8>
     70e:	fa 01       	movw	r30, r20
     710:	70 c0       	rjmp	.+224    	; 0x7f2 <sub_129_7>
     712:	fa 01       	movw	r30, r20
     714:	72 c0       	rjmp	.+228    	; 0x7fa <sub_129_6>
     716:	fa 01       	movw	r30, r20
     718:	74 c0       	rjmp	.+232    	; 0x802 <sub_129_5>
     71a:	fa 01       	movw	r30, r20
     71c:	76 c0       	rjmp	.+236    	; 0x80a <sub_129_4>
     71e:	fa 01       	movw	r30, r20
     720:	78 c0       	rjmp	.+240    	; 0x812 <sub_129_3>
     722:	fa 01       	movw	r30, r20
     724:	7a c0       	rjmp	.+244    	; 0x81a <sub_129_2>
     726:	fa 01       	movw	r30, r20
     728:	7c c0       	rjmp	.+248    	; 0x822 <sub_129_1>

0000072a <sub_129_32>:
     72a:	8d 91       	ld	r24, X+
     72c:	99 91       	ld	r25, Y+
     72e:	89 0b       	sbc	r24, r25
     730:	81 93       	st	Z+, r24

00000732 <sub_129_31>:
     732:	8d 91       	ld	r24, X+
     734:	99 91       	ld	r25, Y+
     736:	89 0b       	sbc	r24, r25
     738:	81 93       	st	Z+, r24

0000073a <sub_129_30>:
     73a:	8d 91       	ld	r24, X+
     73c:	99 91       	ld	r25, Y+
     73e:	89 0b       	sbc	r24, r25
     740:	81 93       	st	Z+, r24

00000742 <sub_129_29>:
     742:	8d 91       	ld	r24, X+
     744:	99 91       	ld	r25, Y+
     746:	89 0b       	sbc	r24, r25
     748:	81 93       	st	Z+, r24

0000074a <sub_129_28>:
     74a:	8d 91       	ld	r24, X+
     74c:	99 91       	ld	r25, Y+
     74e:	89 0b       	sbc	r24, r25
     750:	81 93       	st	Z+, r24

00000752 <sub_129_27>:
     752:	8d 91       	ld	r24, X+
     754:	99 91       	ld	r25, Y+
     756:	89 0b       	sbc	r24, r25
     758:	81 93       	st	Z+, r24

0000075a <sub_129_26>:
     75a:	8d 91       	ld	r24, X+
     75c:	99 91       	ld	r25, Y+
     75e:	89 0b       	sbc	r24, r25
     760:	81 93       	st	Z+, r24

00000762 <sub_129_25>:
     762:	8d 91       	ld	r24, X+
     764:	99 91       	ld	r25, Y+
     766:	89 0b       	sbc	r24, r25
     768:	81 93       	st	Z+, r24

0000076a <sub_129_24>:
     76a:	8d 91       	ld	r24, X+
     76c:	99 91       	ld	r25, Y+
     76e:	89 0b       	sbc	r24, r25
     770:	81 93       	st	Z+, r24

00000772 <sub_129_23>:
     772:	8d 91       	ld	r24, X+
     774:	99 91       	ld	r25, Y+
     776:	89 0b       	sbc	r24, r25
     778:	81 93       	st	Z+, r24

0000077a <sub_129_22>:
     77a:	8d 91       	ld	r24, X+
     77c:	99 91       	ld	r25, Y+
     77e:	89 0b       	sbc	r24, r25
     780:	81 93       	st	Z+, r24

00000782 <sub_129_21>:
     782:	8d 91       	ld	r24, X+
     784:	99 91       	ld	r25, Y+
     786:	89 0b       	sbc	r24, r25
     788:	81 93       	st	Z+, r24

0000078a <sub_129_20>:
     78a:	8d 91       	ld	r24, X+
     78c:	99 91       	ld	r25, Y+
     78e:	89 0b       	sbc	r24, r25
     790:	81 93       	st	Z+, r24

00000792 <sub_129_19>:
     792:	8d 91       	ld	r24, X+
     794:	99 91       	ld	r25, Y+
     796:	89 0b       	sbc	r24, r25
     798:	81 93       	st	Z+, r24

0000079a <sub_129_18>:
     79a:	8d 91       	ld	r24, X+
     79c:	99 91       	ld	r25, Y+
     79e:	89 0b       	sbc	r24, r25
     7a0:	81 93       	st	Z+, r24

000007a2 <sub_129_17>:
     7a2:	8d 91       	ld	r24, X+
     7a4:	99 91       	ld	r25, Y+
     7a6:	89 0b       	sbc	r24, r25
     7a8:	81 93       	st	Z+, r24

000007aa <sub_129_16>:
     7aa:	8d 91       	ld	r24, X+
     7ac:	99 91       	ld	r25, Y+
     7ae:	89 0b       	sbc	r24, r25
     7b0:	81 93       	st	Z+, r24

000007b2 <sub_129_15>:
     7b2:	8d 91       	ld	r24, X+
     7b4:	99 91       	ld	r25, Y+
     7b6:	89 0b       	sbc	r24, r25
     7b8:	81 93       	st	Z+, r24

000007ba <sub_129_14>:
     7ba:	8d 91       	ld	r24, X+
     7bc:	99 91       	ld	r25, Y+
     7be:	89 0b       	sbc	r24, r25
     7c0:	81 93       	st	Z+, r24

000007c2 <sub_129_13>:
     7c2:	8d 91       	ld	r24, X+
     7c4:	99 91       	ld	r25, Y+
     7c6:	89 0b       	sbc	r24, r25
     7c8:	81 93       	st	Z+, r24

000007ca <sub_129_12>:
     7ca:	8d 91       	ld	r24, X+
     7cc:	99 91       	ld	r25, Y+
     7ce:	89 0b       	sbc	r24, r25
     7d0:	81 93       	st	Z+, r24

000007d2 <sub_129_11>:
     7d2:	8d 91       	ld	r24, X+
     7d4:	99 91       	ld	r25, Y+
     7d6:	89 0b       	sbc	r24, r25
     7d8:	81 93       	st	Z+, r24

000007da <sub_129_10>:
     7da:	8d 91       	ld	r24, X+
     7dc:	99 91       	ld	r25, Y+
     7de:	89 0b       	sbc	r24, r25
     7e0:	81 93       	st	Z+, r24

000007e2 <sub_129_9>:
     7e2:	8d 91       	ld	r24, X+
     7e4:	99 91       	ld	r25, Y+
     7e6:	89 0b       	sbc	r24, r25
     7e8:	81 93       	st	Z+, r24

000007ea <sub_129_8>:
     7ea:	8d 91       	ld	r24, X+
     7ec:	99 91       	ld	r25, Y+
     7ee:	89 0b       	sbc	r24, r25
     7f0:	81 93       	st	Z+, r24

000007f2 <sub_129_7>:
     7f2:	8d 91       	ld	r24, X+
     7f4:	99 91       	ld	r25, Y+
     7f6:	89 0b       	sbc	r24, r25
     7f8:	81 93       	st	Z+, r24

000007fa <sub_129_6>:
     7fa:	8d 91       	ld	r24, X+
     7fc:	99 91       	ld	r25, Y+
     7fe:	89 0b       	sbc	r24, r25
     800:	81 93       	st	Z+, r24

00000802 <sub_129_5>:
     802:	8d 91       	ld	r24, X+
     804:	99 91       	ld	r25, Y+
     806:	89 0b       	sbc	r24, r25
     808:	81 93       	st	Z+, r24

0000080a <sub_129_4>:
     80a:	8d 91       	ld	r24, X+
     80c:	99 91       	ld	r25, Y+
     80e:	89 0b       	sbc	r24, r25
     810:	81 93       	st	Z+, r24

00000812 <sub_129_3>:
     812:	8d 91       	ld	r24, X+
     814:	99 91       	ld	r25, Y+
     816:	89 0b       	sbc	r24, r25
     818:	81 93       	st	Z+, r24

0000081a <sub_129_2>:
     81a:	8d 91       	ld	r24, X+
     81c:	99 91       	ld	r25, Y+
     81e:	89 0b       	sbc	r24, r25
     820:	81 93       	st	Z+, r24

00000822 <sub_129_1>:
     822:	8d 91       	ld	r24, X+
     824:	99 91       	ld	r25, Y+
     826:	89 0b       	sbc	r24, r25
     828:	81 93       	st	Z+, r24
     82a:	81 2d       	mov	r24, r1
     82c:	88 1f       	adc	r24, r24
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	08 95       	ret

00000834 <uECC_vli_mult>:
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	fc 01       	movw	r30, r24
     83a:	db 01       	movw	r26, r22
     83c:	ea 01       	movw	r28, r20
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	89 2f       	mov	r24, r25
     842:	39 2f       	mov	r19, r25
     844:	49 2f       	mov	r20, r25
     846:	51 e0       	ldi	r21, 0x01	; 1
     848:	60 e0       	ldi	r22, 0x00	; 0
     84a:	c5 0f       	add	r28, r21
     84c:	d4 1f       	adc	r29, r20
     84e:	0d 90       	ld	r0, X+
     850:	1a 90       	ld	r1, -Y
     852:	01 9c       	mul	r0, r1
     854:	90 0d       	add	r25, r0
     856:	81 1d       	adc	r24, r1
     858:	34 1f       	adc	r19, r20
     85a:	63 95       	inc	r22
     85c:	65 17       	cp	r22, r21
     85e:	b8 f3       	brcs	.-18     	; 0x84e <uECC_vli_mult+0x1a>
     860:	a5 1b       	sub	r26, r21
     862:	b4 0b       	sbc	r27, r20
     864:	91 93       	st	Z+, r25
     866:	98 2f       	mov	r25, r24
     868:	83 2f       	mov	r24, r19
     86a:	34 2f       	mov	r19, r20
     86c:	53 95       	inc	r21
     86e:	52 17       	cp	r21, r18
     870:	58 f3       	brcs	.-42     	; 0x848 <uECC_vli_mult+0x14>
     872:	52 2f       	mov	r21, r18
     874:	c2 0f       	add	r28, r18
     876:	d4 1f       	adc	r29, r20
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	0d 90       	ld	r0, X+
     87c:	1a 90       	ld	r1, -Y
     87e:	01 9c       	mul	r0, r1
     880:	90 0d       	add	r25, r0
     882:	81 1d       	adc	r24, r1
     884:	34 1f       	adc	r19, r20
     886:	63 95       	inc	r22
     888:	65 17       	cp	r22, r21
     88a:	b8 f3       	brcs	.-18     	; 0x87a <uECC_vli_mult+0x46>
     88c:	c5 0f       	add	r28, r21
     88e:	d4 1f       	adc	r29, r20
     890:	91 93       	st	Z+, r25
     892:	98 2f       	mov	r25, r24
     894:	83 2f       	mov	r24, r19
     896:	34 2f       	mov	r19, r20
     898:	5a 95       	dec	r21
     89a:	a5 1b       	sub	r26, r21
     89c:	b4 0b       	sbc	r27, r20
     89e:	54 17       	cp	r21, r20
     8a0:	59 f7       	brne	.-42     	; 0x878 <uECC_vli_mult+0x44>
     8a2:	91 93       	st	Z+, r25
     8a4:	11 24       	eor	r1, r1
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	08 95       	ret

000008ac <uECC_vli_isZero>:
     8ac:	16 16       	cp	r1, r22
     8ae:	7c f4       	brge	.+30     	; 0x8ce <uECC_vli_isZero+0x22>
     8b0:	fc 01       	movw	r30, r24
     8b2:	61 50       	subi	r22, 0x01	; 1
     8b4:	46 2f       	mov	r20, r22
     8b6:	50 e0       	ldi	r21, 0x00	; 0
     8b8:	4f 5f       	subi	r20, 0xFF	; 255
     8ba:	5f 4f       	sbci	r21, 0xFF	; 255
     8bc:	48 0f       	add	r20, r24
     8be:	59 1f       	adc	r21, r25
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	21 91       	ld	r18, Z+
     8c4:	92 2b       	or	r25, r18
     8c6:	e4 17       	cp	r30, r20
     8c8:	f5 07       	cpc	r31, r21
     8ca:	d9 f7       	brne	.-10     	; 0x8c2 <uECC_vli_isZero+0x16>
     8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <uECC_vli_isZero+0x24>
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	91 11       	cpse	r25, r1
     8d4:	80 e0       	ldi	r24, 0x00	; 0
     8d6:	08 95       	ret

000008d8 <uECC_vli_testBit>:
     8d8:	9b 01       	movw	r18, r22
     8da:	35 95       	asr	r19
     8dc:	27 95       	ror	r18
     8de:	35 95       	asr	r19
     8e0:	27 95       	ror	r18
     8e2:	35 95       	asr	r19
     8e4:	27 95       	ror	r18
     8e6:	82 0f       	add	r24, r18
     8e8:	93 1f       	adc	r25, r19
     8ea:	67 70       	andi	r22, 0x07	; 7
     8ec:	77 27       	eor	r23, r23
     8ee:	21 e0       	ldi	r18, 0x01	; 1
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <uECC_vli_testBit+0x20>
     8f4:	22 0f       	add	r18, r18
     8f6:	33 1f       	adc	r19, r19
     8f8:	6a 95       	dec	r22
     8fa:	e2 f7       	brpl	.-8      	; 0x8f4 <uECC_vli_testBit+0x1c>
     8fc:	fc 01       	movw	r30, r24
     8fe:	80 81       	ld	r24, Z
     900:	82 23       	and	r24, r18
     902:	08 95       	ret

00000904 <uECC_vli_numBits>:
     904:	9c 01       	movw	r18, r24
     906:	61 50       	subi	r22, 0x01	; 1
     908:	92 f0       	brmi	.+36     	; 0x92e <uECC_vli_numBits+0x2a>
     90a:	fc 01       	movw	r30, r24
     90c:	e6 0f       	add	r30, r22
     90e:	f1 1d       	adc	r31, r1
     910:	67 fd       	sbrc	r22, 7
     912:	fa 95       	dec	r31
     914:	80 81       	ld	r24, Z
     916:	81 11       	cpse	r24, r1
     918:	0a c0       	rjmp	.+20     	; 0x92e <uECC_vli_numBits+0x2a>
     91a:	61 50       	subi	r22, 0x01	; 1
     91c:	42 f0       	brmi	.+16     	; 0x92e <uECC_vli_numBits+0x2a>
     91e:	f9 01       	movw	r30, r18
     920:	e6 0f       	add	r30, r22
     922:	f1 1d       	adc	r31, r1
     924:	67 fd       	sbrc	r22, 7
     926:	fa 95       	dec	r31
     928:	90 81       	ld	r25, Z
     92a:	99 23       	and	r25, r25
     92c:	b1 f3       	breq	.-20     	; 0x91a <uECC_vli_numBits+0x16>
     92e:	6f 5f       	subi	r22, 0xFF	; 255
     930:	e9 f0       	breq	.+58     	; 0x96c <uECC_vli_numBits+0x68>
     932:	26 0f       	add	r18, r22
     934:	31 1d       	adc	r19, r1
     936:	67 fd       	sbrc	r22, 7
     938:	3a 95       	dec	r19
     93a:	f9 01       	movw	r30, r18
     93c:	31 97       	sbiw	r30, 0x01	; 1
     93e:	80 81       	ld	r24, Z
     940:	88 23       	and	r24, r24
     942:	31 f0       	breq	.+12     	; 0x950 <uECC_vli_numBits+0x4c>
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	86 95       	lsr	r24
     948:	2f 5f       	subi	r18, 0xFF	; 255
     94a:	81 11       	cpse	r24, r1
     94c:	fc cf       	rjmp	.-8      	; 0x946 <uECC_vli_numBits+0x42>
     94e:	01 c0       	rjmp	.+2      	; 0x952 <uECC_vli_numBits+0x4e>
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	86 2f       	mov	r24, r22
     954:	66 0f       	add	r22, r22
     956:	99 0b       	sbc	r25, r25
     958:	01 97       	sbiw	r24, 0x01	; 1
     95a:	88 0f       	add	r24, r24
     95c:	99 1f       	adc	r25, r25
     95e:	88 0f       	add	r24, r24
     960:	99 1f       	adc	r25, r25
     962:	88 0f       	add	r24, r24
     964:	99 1f       	adc	r25, r25
     966:	82 0f       	add	r24, r18
     968:	91 1d       	adc	r25, r1
     96a:	08 95       	ret
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	08 95       	ret

00000972 <uECC_vli_cmp_unsafe>:
     972:	dc 01       	movw	r26, r24
     974:	41 50       	subi	r20, 0x01	; 1
     976:	2a f1       	brmi	.+74     	; 0x9c2 <uECC_vli_cmp_unsafe+0x50>
     978:	84 2f       	mov	r24, r20
     97a:	04 2e       	mov	r0, r20
     97c:	00 0c       	add	r0, r0
     97e:	99 0b       	sbc	r25, r25
     980:	fd 01       	movw	r30, r26
     982:	e8 0f       	add	r30, r24
     984:	f9 1f       	adc	r31, r25
     986:	20 81       	ld	r18, Z
     988:	fb 01       	movw	r30, r22
     98a:	e8 0f       	add	r30, r24
     98c:	f9 1f       	adc	r31, r25
     98e:	80 81       	ld	r24, Z
     990:	82 17       	cp	r24, r18
     992:	c8 f0       	brcs	.+50     	; 0x9c6 <uECC_vli_cmp_unsafe+0x54>
     994:	28 17       	cp	r18, r24
     996:	88 f4       	brcc	.+34     	; 0x9ba <uECC_vli_cmp_unsafe+0x48>
     998:	18 c0       	rjmp	.+48     	; 0x9ca <uECC_vli_cmp_unsafe+0x58>
     99a:	24 2f       	mov	r18, r20
     99c:	04 2e       	mov	r0, r20
     99e:	00 0c       	add	r0, r0
     9a0:	33 0b       	sbc	r19, r19
     9a2:	fd 01       	movw	r30, r26
     9a4:	e2 0f       	add	r30, r18
     9a6:	f3 1f       	adc	r31, r19
     9a8:	50 81       	ld	r21, Z
     9aa:	fb 01       	movw	r30, r22
     9ac:	e2 0f       	add	r30, r18
     9ae:	f3 1f       	adc	r31, r19
     9b0:	90 81       	ld	r25, Z
     9b2:	95 17       	cp	r25, r21
     9b4:	60 f0       	brcs	.+24     	; 0x9ce <uECC_vli_cmp_unsafe+0x5c>
     9b6:	59 17       	cp	r21, r25
     9b8:	60 f0       	brcs	.+24     	; 0x9d2 <uECC_vli_cmp_unsafe+0x60>
     9ba:	41 50       	subi	r20, 0x01	; 1
     9bc:	72 f7       	brpl	.-36     	; 0x99a <uECC_vli_cmp_unsafe+0x28>
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	08 95       	ret
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	08 95       	ret
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	08 95       	ret
     9ca:	8f ef       	ldi	r24, 0xFF	; 255
     9cc:	08 95       	ret
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	08 95       	ret
     9d2:	8f ef       	ldi	r24, 0xFF	; 255
     9d4:	08 95       	ret

000009d6 <vli_mmod_fast_secp256k1>:
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	ec 01       	movw	r28, r24
     9de:	db 01       	movw	r26, r22
     9e0:	10 e0       	ldi	r17, 0x00	; 0
     9e2:	ed b7       	in	r30, 0x3d	; 61
     9e4:	fe b7       	in	r31, 0x3e	; 62
     9e6:	b5 97       	sbiw	r30, 0x25	; 37
     9e8:	0f b6       	in	r0, 0x3f	; 63
     9ea:	f8 94       	cli
     9ec:	fe bf       	out	0x3e, r31	; 62
     9ee:	0f be       	out	0x3f, r0	; 63
     9f0:	ed bf       	out	0x3d, r30	; 61
     9f2:	31 96       	adiw	r30, 0x01	; 1
     9f4:	90 96       	adiw	r26, 0x20	; 32
     9f6:	93 e0       	ldi	r25, 0x03	; 3
     9f8:	81 ed       	ldi	r24, 0xD1	; 209
     9fa:	2d 91       	ld	r18, X+
     9fc:	3d 91       	ld	r19, X+
     9fe:	4d 91       	ld	r20, X+
     a00:	5d 91       	ld	r21, X+
     a02:	82 9f       	mul	r24, r18
     a04:	01 92       	st	Z+, r0
     a06:	61 2d       	mov	r22, r1
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	83 9f       	mul	r24, r19
     a0c:	60 0d       	add	r22, r0
     a0e:	71 1d       	adc	r23, r1
     a10:	92 9f       	mul	r25, r18
     a12:	60 0d       	add	r22, r0
     a14:	71 1d       	adc	r23, r1
     a16:	61 93       	st	Z+, r22
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	84 9f       	mul	r24, r20
     a1c:	70 0d       	add	r23, r0
     a1e:	61 1d       	adc	r22, r1
     a20:	93 9f       	mul	r25, r19
     a22:	70 0d       	add	r23, r0
     a24:	61 1d       	adc	r22, r1
     a26:	71 93       	st	Z+, r23
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	85 9f       	mul	r24, r21
     a2c:	60 0d       	add	r22, r0
     a2e:	71 1d       	adc	r23, r1
     a30:	94 9f       	mul	r25, r20
     a32:	60 0d       	add	r22, r0
     a34:	71 1d       	adc	r23, r1
     a36:	61 93       	st	Z+, r22
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	72 0f       	add	r23, r18
     a3c:	66 1f       	adc	r22, r22
     a3e:	2d 91       	ld	r18, X+
     a40:	82 9f       	mul	r24, r18
     a42:	70 0d       	add	r23, r0
     a44:	61 1d       	adc	r22, r1
     a46:	95 9f       	mul	r25, r21
     a48:	70 0d       	add	r23, r0
     a4a:	61 1d       	adc	r22, r1
     a4c:	71 93       	st	Z+, r23
     a4e:	70 e0       	ldi	r23, 0x00	; 0
     a50:	63 0f       	add	r22, r19
     a52:	77 1f       	adc	r23, r23
     a54:	3d 91       	ld	r19, X+
     a56:	83 9f       	mul	r24, r19
     a58:	60 0d       	add	r22, r0
     a5a:	71 1d       	adc	r23, r1
     a5c:	92 9f       	mul	r25, r18
     a5e:	60 0d       	add	r22, r0
     a60:	71 1d       	adc	r23, r1
     a62:	61 93       	st	Z+, r22
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	74 0f       	add	r23, r20
     a68:	66 1f       	adc	r22, r22
     a6a:	4d 91       	ld	r20, X+
     a6c:	84 9f       	mul	r24, r20
     a6e:	70 0d       	add	r23, r0
     a70:	61 1d       	adc	r22, r1
     a72:	93 9f       	mul	r25, r19
     a74:	70 0d       	add	r23, r0
     a76:	61 1d       	adc	r22, r1
     a78:	71 93       	st	Z+, r23
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	65 0f       	add	r22, r21
     a7e:	77 1f       	adc	r23, r23
     a80:	5d 91       	ld	r21, X+
     a82:	85 9f       	mul	r24, r21
     a84:	60 0d       	add	r22, r0
     a86:	71 1d       	adc	r23, r1
     a88:	94 9f       	mul	r25, r20
     a8a:	60 0d       	add	r22, r0
     a8c:	71 1d       	adc	r23, r1
     a8e:	61 93       	st	Z+, r22
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	72 0f       	add	r23, r18
     a94:	66 1f       	adc	r22, r22
     a96:	2d 91       	ld	r18, X+
     a98:	82 9f       	mul	r24, r18
     a9a:	70 0d       	add	r23, r0
     a9c:	61 1d       	adc	r22, r1
     a9e:	95 9f       	mul	r25, r21
     aa0:	70 0d       	add	r23, r0
     aa2:	61 1d       	adc	r22, r1
     aa4:	71 93       	st	Z+, r23
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	63 0f       	add	r22, r19
     aaa:	77 1f       	adc	r23, r23
     aac:	3d 91       	ld	r19, X+
     aae:	83 9f       	mul	r24, r19
     ab0:	60 0d       	add	r22, r0
     ab2:	71 1d       	adc	r23, r1
     ab4:	92 9f       	mul	r25, r18
     ab6:	60 0d       	add	r22, r0
     ab8:	71 1d       	adc	r23, r1
     aba:	61 93       	st	Z+, r22
     abc:	60 e0       	ldi	r22, 0x00	; 0
     abe:	74 0f       	add	r23, r20
     ac0:	66 1f       	adc	r22, r22
     ac2:	4d 91       	ld	r20, X+
     ac4:	84 9f       	mul	r24, r20
     ac6:	70 0d       	add	r23, r0
     ac8:	61 1d       	adc	r22, r1
     aca:	93 9f       	mul	r25, r19
     acc:	70 0d       	add	r23, r0
     ace:	61 1d       	adc	r22, r1
     ad0:	71 93       	st	Z+, r23
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	65 0f       	add	r22, r21
     ad6:	77 1f       	adc	r23, r23
     ad8:	5d 91       	ld	r21, X+
     ada:	85 9f       	mul	r24, r21
     adc:	60 0d       	add	r22, r0
     ade:	71 1d       	adc	r23, r1
     ae0:	94 9f       	mul	r25, r20
     ae2:	60 0d       	add	r22, r0
     ae4:	71 1d       	adc	r23, r1
     ae6:	61 93       	st	Z+, r22
     ae8:	60 e0       	ldi	r22, 0x00	; 0
     aea:	72 0f       	add	r23, r18
     aec:	66 1f       	adc	r22, r22
     aee:	2d 91       	ld	r18, X+
     af0:	82 9f       	mul	r24, r18
     af2:	70 0d       	add	r23, r0
     af4:	61 1d       	adc	r22, r1
     af6:	95 9f       	mul	r25, r21
     af8:	70 0d       	add	r23, r0
     afa:	61 1d       	adc	r22, r1
     afc:	71 93       	st	Z+, r23
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	63 0f       	add	r22, r19
     b02:	77 1f       	adc	r23, r23
     b04:	3d 91       	ld	r19, X+
     b06:	83 9f       	mul	r24, r19
     b08:	60 0d       	add	r22, r0
     b0a:	71 1d       	adc	r23, r1
     b0c:	92 9f       	mul	r25, r18
     b0e:	60 0d       	add	r22, r0
     b10:	71 1d       	adc	r23, r1
     b12:	61 93       	st	Z+, r22
     b14:	60 e0       	ldi	r22, 0x00	; 0
     b16:	74 0f       	add	r23, r20
     b18:	66 1f       	adc	r22, r22
     b1a:	4d 91       	ld	r20, X+
     b1c:	84 9f       	mul	r24, r20
     b1e:	70 0d       	add	r23, r0
     b20:	61 1d       	adc	r22, r1
     b22:	93 9f       	mul	r25, r19
     b24:	70 0d       	add	r23, r0
     b26:	61 1d       	adc	r22, r1
     b28:	71 93       	st	Z+, r23
     b2a:	70 e0       	ldi	r23, 0x00	; 0
     b2c:	65 0f       	add	r22, r21
     b2e:	77 1f       	adc	r23, r23
     b30:	5d 91       	ld	r21, X+
     b32:	85 9f       	mul	r24, r21
     b34:	60 0d       	add	r22, r0
     b36:	71 1d       	adc	r23, r1
     b38:	94 9f       	mul	r25, r20
     b3a:	60 0d       	add	r22, r0
     b3c:	71 1d       	adc	r23, r1
     b3e:	61 93       	st	Z+, r22
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	72 0f       	add	r23, r18
     b44:	66 1f       	adc	r22, r22
     b46:	2d 91       	ld	r18, X+
     b48:	82 9f       	mul	r24, r18
     b4a:	70 0d       	add	r23, r0
     b4c:	61 1d       	adc	r22, r1
     b4e:	95 9f       	mul	r25, r21
     b50:	70 0d       	add	r23, r0
     b52:	61 1d       	adc	r22, r1
     b54:	71 93       	st	Z+, r23
     b56:	70 e0       	ldi	r23, 0x00	; 0
     b58:	63 0f       	add	r22, r19
     b5a:	77 1f       	adc	r23, r23
     b5c:	3d 91       	ld	r19, X+
     b5e:	83 9f       	mul	r24, r19
     b60:	60 0d       	add	r22, r0
     b62:	71 1d       	adc	r23, r1
     b64:	92 9f       	mul	r25, r18
     b66:	60 0d       	add	r22, r0
     b68:	71 1d       	adc	r23, r1
     b6a:	61 93       	st	Z+, r22
     b6c:	60 e0       	ldi	r22, 0x00	; 0
     b6e:	74 0f       	add	r23, r20
     b70:	66 1f       	adc	r22, r22
     b72:	4d 91       	ld	r20, X+
     b74:	84 9f       	mul	r24, r20
     b76:	70 0d       	add	r23, r0
     b78:	61 1d       	adc	r22, r1
     b7a:	93 9f       	mul	r25, r19
     b7c:	70 0d       	add	r23, r0
     b7e:	61 1d       	adc	r22, r1
     b80:	71 93       	st	Z+, r23
     b82:	70 e0       	ldi	r23, 0x00	; 0
     b84:	65 0f       	add	r22, r21
     b86:	77 1f       	adc	r23, r23
     b88:	5d 91       	ld	r21, X+
     b8a:	85 9f       	mul	r24, r21
     b8c:	60 0d       	add	r22, r0
     b8e:	71 1d       	adc	r23, r1
     b90:	94 9f       	mul	r25, r20
     b92:	60 0d       	add	r22, r0
     b94:	71 1d       	adc	r23, r1
     b96:	61 93       	st	Z+, r22
     b98:	60 e0       	ldi	r22, 0x00	; 0
     b9a:	72 0f       	add	r23, r18
     b9c:	66 1f       	adc	r22, r22
     b9e:	2d 91       	ld	r18, X+
     ba0:	82 9f       	mul	r24, r18
     ba2:	70 0d       	add	r23, r0
     ba4:	61 1d       	adc	r22, r1
     ba6:	95 9f       	mul	r25, r21
     ba8:	70 0d       	add	r23, r0
     baa:	61 1d       	adc	r22, r1
     bac:	71 93       	st	Z+, r23
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	63 0f       	add	r22, r19
     bb2:	77 1f       	adc	r23, r23
     bb4:	3d 91       	ld	r19, X+
     bb6:	83 9f       	mul	r24, r19
     bb8:	60 0d       	add	r22, r0
     bba:	71 1d       	adc	r23, r1
     bbc:	92 9f       	mul	r25, r18
     bbe:	60 0d       	add	r22, r0
     bc0:	71 1d       	adc	r23, r1
     bc2:	61 93       	st	Z+, r22
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	74 0f       	add	r23, r20
     bc8:	66 1f       	adc	r22, r22
     bca:	4d 91       	ld	r20, X+
     bcc:	84 9f       	mul	r24, r20
     bce:	70 0d       	add	r23, r0
     bd0:	61 1d       	adc	r22, r1
     bd2:	93 9f       	mul	r25, r19
     bd4:	70 0d       	add	r23, r0
     bd6:	61 1d       	adc	r22, r1
     bd8:	71 93       	st	Z+, r23
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	65 0f       	add	r22, r21
     bde:	77 1f       	adc	r23, r23
     be0:	5d 91       	ld	r21, X+
     be2:	85 9f       	mul	r24, r21
     be4:	60 0d       	add	r22, r0
     be6:	71 1d       	adc	r23, r1
     be8:	94 9f       	mul	r25, r20
     bea:	60 0d       	add	r22, r0
     bec:	71 1d       	adc	r23, r1
     bee:	61 93       	st	Z+, r22
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	72 0f       	add	r23, r18
     bf4:	66 1f       	adc	r22, r22
     bf6:	2d 91       	ld	r18, X+
     bf8:	82 9f       	mul	r24, r18
     bfa:	70 0d       	add	r23, r0
     bfc:	61 1d       	adc	r22, r1
     bfe:	95 9f       	mul	r25, r21
     c00:	70 0d       	add	r23, r0
     c02:	61 1d       	adc	r22, r1
     c04:	71 93       	st	Z+, r23
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	63 0f       	add	r22, r19
     c0a:	77 1f       	adc	r23, r23
     c0c:	3d 91       	ld	r19, X+
     c0e:	83 9f       	mul	r24, r19
     c10:	60 0d       	add	r22, r0
     c12:	71 1d       	adc	r23, r1
     c14:	92 9f       	mul	r25, r18
     c16:	60 0d       	add	r22, r0
     c18:	71 1d       	adc	r23, r1
     c1a:	61 93       	st	Z+, r22
     c1c:	60 e0       	ldi	r22, 0x00	; 0
     c1e:	74 0f       	add	r23, r20
     c20:	66 1f       	adc	r22, r22
     c22:	4d 91       	ld	r20, X+
     c24:	84 9f       	mul	r24, r20
     c26:	70 0d       	add	r23, r0
     c28:	61 1d       	adc	r22, r1
     c2a:	93 9f       	mul	r25, r19
     c2c:	70 0d       	add	r23, r0
     c2e:	61 1d       	adc	r22, r1
     c30:	71 93       	st	Z+, r23
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	65 0f       	add	r22, r21
     c36:	77 1f       	adc	r23, r23
     c38:	5d 91       	ld	r21, X+
     c3a:	85 9f       	mul	r24, r21
     c3c:	60 0d       	add	r22, r0
     c3e:	71 1d       	adc	r23, r1
     c40:	94 9f       	mul	r25, r20
     c42:	60 0d       	add	r22, r0
     c44:	71 1d       	adc	r23, r1
     c46:	61 93       	st	Z+, r22
     c48:	60 e0       	ldi	r22, 0x00	; 0
     c4a:	72 0f       	add	r23, r18
     c4c:	66 1f       	adc	r22, r22
     c4e:	2d 91       	ld	r18, X+
     c50:	82 9f       	mul	r24, r18
     c52:	70 0d       	add	r23, r0
     c54:	61 1d       	adc	r22, r1
     c56:	95 9f       	mul	r25, r21
     c58:	70 0d       	add	r23, r0
     c5a:	61 1d       	adc	r22, r1
     c5c:	71 93       	st	Z+, r23
     c5e:	70 e0       	ldi	r23, 0x00	; 0
     c60:	63 0f       	add	r22, r19
     c62:	77 1f       	adc	r23, r23
     c64:	3d 91       	ld	r19, X+
     c66:	83 9f       	mul	r24, r19
     c68:	60 0d       	add	r22, r0
     c6a:	71 1d       	adc	r23, r1
     c6c:	92 9f       	mul	r25, r18
     c6e:	60 0d       	add	r22, r0
     c70:	71 1d       	adc	r23, r1
     c72:	61 93       	st	Z+, r22
     c74:	60 e0       	ldi	r22, 0x00	; 0
     c76:	74 0f       	add	r23, r20
     c78:	66 1f       	adc	r22, r22
     c7a:	4d 91       	ld	r20, X+
     c7c:	84 9f       	mul	r24, r20
     c7e:	70 0d       	add	r23, r0
     c80:	61 1d       	adc	r22, r1
     c82:	93 9f       	mul	r25, r19
     c84:	70 0d       	add	r23, r0
     c86:	61 1d       	adc	r22, r1
     c88:	71 93       	st	Z+, r23
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	65 0f       	add	r22, r21
     c8e:	77 1f       	adc	r23, r23
     c90:	5d 91       	ld	r21, X+
     c92:	85 9f       	mul	r24, r21
     c94:	60 0d       	add	r22, r0
     c96:	71 1d       	adc	r23, r1
     c98:	94 9f       	mul	r25, r20
     c9a:	60 0d       	add	r22, r0
     c9c:	71 1d       	adc	r23, r1
     c9e:	61 93       	st	Z+, r22
     ca0:	60 e0       	ldi	r22, 0x00	; 0
     ca2:	72 0f       	add	r23, r18
     ca4:	66 1f       	adc	r22, r22
     ca6:	95 9f       	mul	r25, r21
     ca8:	70 0d       	add	r23, r0
     caa:	61 1d       	adc	r22, r1
     cac:	71 93       	st	Z+, r23
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	63 0f       	add	r22, r19
     cb2:	77 1f       	adc	r23, r23
     cb4:	61 93       	st	Z+, r22
     cb6:	60 e0       	ldi	r22, 0x00	; 0
     cb8:	74 0f       	add	r23, r20
     cba:	66 1f       	adc	r22, r22
     cbc:	71 93       	st	Z+, r23
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	65 0f       	add	r22, r21
     cc2:	77 1f       	adc	r23, r23
     cc4:	61 93       	st	Z+, r22
     cc6:	71 93       	st	Z+, r23
     cc8:	11 24       	eor	r1, r1
     cca:	b5 97       	sbiw	r30, 0x25	; 37
     ccc:	a0 54       	subi	r26, 0x40	; 64
     cce:	b1 09       	sbc	r27, r1
     cd0:	21 91       	ld	r18, Z+
     cd2:	3d 91       	ld	r19, X+
     cd4:	23 0f       	add	r18, r19
     cd6:	29 93       	st	Y+, r18
     cd8:	21 91       	ld	r18, Z+
     cda:	3d 91       	ld	r19, X+
     cdc:	23 1f       	adc	r18, r19
     cde:	29 93       	st	Y+, r18
     ce0:	21 91       	ld	r18, Z+
     ce2:	3d 91       	ld	r19, X+
     ce4:	23 1f       	adc	r18, r19
     ce6:	29 93       	st	Y+, r18
     ce8:	21 91       	ld	r18, Z+
     cea:	3d 91       	ld	r19, X+
     cec:	23 1f       	adc	r18, r19
     cee:	29 93       	st	Y+, r18
     cf0:	21 91       	ld	r18, Z+
     cf2:	3d 91       	ld	r19, X+
     cf4:	23 1f       	adc	r18, r19
     cf6:	29 93       	st	Y+, r18
     cf8:	21 91       	ld	r18, Z+
     cfa:	3d 91       	ld	r19, X+
     cfc:	23 1f       	adc	r18, r19
     cfe:	29 93       	st	Y+, r18
     d00:	21 91       	ld	r18, Z+
     d02:	3d 91       	ld	r19, X+
     d04:	23 1f       	adc	r18, r19
     d06:	29 93       	st	Y+, r18
     d08:	21 91       	ld	r18, Z+
     d0a:	3d 91       	ld	r19, X+
     d0c:	23 1f       	adc	r18, r19
     d0e:	29 93       	st	Y+, r18
     d10:	21 91       	ld	r18, Z+
     d12:	3d 91       	ld	r19, X+
     d14:	23 1f       	adc	r18, r19
     d16:	29 93       	st	Y+, r18
     d18:	21 91       	ld	r18, Z+
     d1a:	3d 91       	ld	r19, X+
     d1c:	23 1f       	adc	r18, r19
     d1e:	29 93       	st	Y+, r18
     d20:	21 91       	ld	r18, Z+
     d22:	3d 91       	ld	r19, X+
     d24:	23 1f       	adc	r18, r19
     d26:	29 93       	st	Y+, r18
     d28:	21 91       	ld	r18, Z+
     d2a:	3d 91       	ld	r19, X+
     d2c:	23 1f       	adc	r18, r19
     d2e:	29 93       	st	Y+, r18
     d30:	21 91       	ld	r18, Z+
     d32:	3d 91       	ld	r19, X+
     d34:	23 1f       	adc	r18, r19
     d36:	29 93       	st	Y+, r18
     d38:	21 91       	ld	r18, Z+
     d3a:	3d 91       	ld	r19, X+
     d3c:	23 1f       	adc	r18, r19
     d3e:	29 93       	st	Y+, r18
     d40:	21 91       	ld	r18, Z+
     d42:	3d 91       	ld	r19, X+
     d44:	23 1f       	adc	r18, r19
     d46:	29 93       	st	Y+, r18
     d48:	21 91       	ld	r18, Z+
     d4a:	3d 91       	ld	r19, X+
     d4c:	23 1f       	adc	r18, r19
     d4e:	29 93       	st	Y+, r18
     d50:	21 91       	ld	r18, Z+
     d52:	3d 91       	ld	r19, X+
     d54:	23 1f       	adc	r18, r19
     d56:	29 93       	st	Y+, r18
     d58:	21 91       	ld	r18, Z+
     d5a:	3d 91       	ld	r19, X+
     d5c:	23 1f       	adc	r18, r19
     d5e:	29 93       	st	Y+, r18
     d60:	21 91       	ld	r18, Z+
     d62:	3d 91       	ld	r19, X+
     d64:	23 1f       	adc	r18, r19
     d66:	29 93       	st	Y+, r18
     d68:	21 91       	ld	r18, Z+
     d6a:	3d 91       	ld	r19, X+
     d6c:	23 1f       	adc	r18, r19
     d6e:	29 93       	st	Y+, r18
     d70:	21 91       	ld	r18, Z+
     d72:	3d 91       	ld	r19, X+
     d74:	23 1f       	adc	r18, r19
     d76:	29 93       	st	Y+, r18
     d78:	21 91       	ld	r18, Z+
     d7a:	3d 91       	ld	r19, X+
     d7c:	23 1f       	adc	r18, r19
     d7e:	29 93       	st	Y+, r18
     d80:	21 91       	ld	r18, Z+
     d82:	3d 91       	ld	r19, X+
     d84:	23 1f       	adc	r18, r19
     d86:	29 93       	st	Y+, r18
     d88:	21 91       	ld	r18, Z+
     d8a:	3d 91       	ld	r19, X+
     d8c:	23 1f       	adc	r18, r19
     d8e:	29 93       	st	Y+, r18
     d90:	21 91       	ld	r18, Z+
     d92:	3d 91       	ld	r19, X+
     d94:	23 1f       	adc	r18, r19
     d96:	29 93       	st	Y+, r18
     d98:	21 91       	ld	r18, Z+
     d9a:	3d 91       	ld	r19, X+
     d9c:	23 1f       	adc	r18, r19
     d9e:	29 93       	st	Y+, r18
     da0:	21 91       	ld	r18, Z+
     da2:	3d 91       	ld	r19, X+
     da4:	23 1f       	adc	r18, r19
     da6:	29 93       	st	Y+, r18
     da8:	21 91       	ld	r18, Z+
     daa:	3d 91       	ld	r19, X+
     dac:	23 1f       	adc	r18, r19
     dae:	29 93       	st	Y+, r18
     db0:	21 91       	ld	r18, Z+
     db2:	3d 91       	ld	r19, X+
     db4:	23 1f       	adc	r18, r19
     db6:	29 93       	st	Y+, r18
     db8:	21 91       	ld	r18, Z+
     dba:	3d 91       	ld	r19, X+
     dbc:	23 1f       	adc	r18, r19
     dbe:	29 93       	st	Y+, r18
     dc0:	21 91       	ld	r18, Z+
     dc2:	3d 91       	ld	r19, X+
     dc4:	23 1f       	adc	r18, r19
     dc6:	29 93       	st	Y+, r18
     dc8:	21 91       	ld	r18, Z+
     dca:	3d 91       	ld	r19, X+
     dcc:	23 1f       	adc	r18, r19
     dce:	29 93       	st	Y+, r18
     dd0:	11 1d       	adc	r17, r1
     dd2:	a0 97       	sbiw	r28, 0x20	; 32
     dd4:	90 97       	sbiw	r26, 0x20	; 32
     dd6:	21 91       	ld	r18, Z+
     dd8:	31 91       	ld	r19, Z+
     dda:	41 91       	ld	r20, Z+
     ddc:	51 91       	ld	r21, Z+
     dde:	82 9f       	mul	r24, r18
     de0:	0d 92       	st	X+, r0
     de2:	61 2d       	mov	r22, r1
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	83 9f       	mul	r24, r19
     de8:	60 0d       	add	r22, r0
     dea:	71 1d       	adc	r23, r1
     dec:	92 9f       	mul	r25, r18
     dee:	60 0d       	add	r22, r0
     df0:	71 1d       	adc	r23, r1
     df2:	6d 93       	st	X+, r22
     df4:	60 e0       	ldi	r22, 0x00	; 0
     df6:	84 9f       	mul	r24, r20
     df8:	70 0d       	add	r23, r0
     dfa:	61 1d       	adc	r22, r1
     dfc:	93 9f       	mul	r25, r19
     dfe:	70 0d       	add	r23, r0
     e00:	61 1d       	adc	r22, r1
     e02:	7d 93       	st	X+, r23
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	85 9f       	mul	r24, r21
     e08:	60 0d       	add	r22, r0
     e0a:	71 1d       	adc	r23, r1
     e0c:	94 9f       	mul	r25, r20
     e0e:	60 0d       	add	r22, r0
     e10:	71 1d       	adc	r23, r1
     e12:	6d 93       	st	X+, r22
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	72 0f       	add	r23, r18
     e18:	66 1f       	adc	r22, r22
     e1a:	21 91       	ld	r18, Z+
     e1c:	82 9f       	mul	r24, r18
     e1e:	70 0d       	add	r23, r0
     e20:	61 1d       	adc	r22, r1
     e22:	95 9f       	mul	r25, r21
     e24:	70 0d       	add	r23, r0
     e26:	61 1d       	adc	r22, r1
     e28:	7d 93       	st	X+, r23
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	63 0f       	add	r22, r19
     e2e:	77 1f       	adc	r23, r23
     e30:	92 9f       	mul	r25, r18
     e32:	60 0d       	add	r22, r0
     e34:	71 1d       	adc	r23, r1
     e36:	6d 93       	st	X+, r22
     e38:	60 e0       	ldi	r22, 0x00	; 0
     e3a:	74 0f       	add	r23, r20
     e3c:	66 1f       	adc	r22, r22
     e3e:	7d 93       	st	X+, r23
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	65 0f       	add	r22, r21
     e44:	77 1f       	adc	r23, r23
     e46:	6d 93       	st	X+, r22
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	72 0f       	add	r23, r18
     e4c:	66 1f       	adc	r22, r22
     e4e:	7d 93       	st	X+, r23
     e50:	6d 93       	st	X+, r22
     e52:	11 24       	eor	r1, r1
     e54:	1a 97       	sbiw	r26, 0x0a	; 10
     e56:	2d 91       	ld	r18, X+
     e58:	38 81       	ld	r19, Y
     e5a:	23 0f       	add	r18, r19
     e5c:	29 93       	st	Y+, r18
     e5e:	2d 91       	ld	r18, X+
     e60:	38 81       	ld	r19, Y
     e62:	23 1f       	adc	r18, r19
     e64:	29 93       	st	Y+, r18
     e66:	2d 91       	ld	r18, X+
     e68:	38 81       	ld	r19, Y
     e6a:	23 1f       	adc	r18, r19
     e6c:	29 93       	st	Y+, r18
     e6e:	2d 91       	ld	r18, X+
     e70:	38 81       	ld	r19, Y
     e72:	23 1f       	adc	r18, r19
     e74:	29 93       	st	Y+, r18
     e76:	2d 91       	ld	r18, X+
     e78:	38 81       	ld	r19, Y
     e7a:	23 1f       	adc	r18, r19
     e7c:	29 93       	st	Y+, r18
     e7e:	2d 91       	ld	r18, X+
     e80:	38 81       	ld	r19, Y
     e82:	23 1f       	adc	r18, r19
     e84:	29 93       	st	Y+, r18
     e86:	2d 91       	ld	r18, X+
     e88:	38 81       	ld	r19, Y
     e8a:	23 1f       	adc	r18, r19
     e8c:	29 93       	st	Y+, r18
     e8e:	2d 91       	ld	r18, X+
     e90:	38 81       	ld	r19, Y
     e92:	23 1f       	adc	r18, r19
     e94:	29 93       	st	Y+, r18
     e96:	2d 91       	ld	r18, X+
     e98:	38 81       	ld	r19, Y
     e9a:	23 1f       	adc	r18, r19
     e9c:	29 93       	st	Y+, r18
     e9e:	2d 91       	ld	r18, X+
     ea0:	38 81       	ld	r19, Y
     ea2:	23 1f       	adc	r18, r19
     ea4:	29 93       	st	Y+, r18
     ea6:	28 81       	ld	r18, Y
     ea8:	21 1d       	adc	r18, r1
     eaa:	29 93       	st	Y+, r18
     eac:	28 81       	ld	r18, Y
     eae:	21 1d       	adc	r18, r1
     eb0:	29 93       	st	Y+, r18
     eb2:	28 81       	ld	r18, Y
     eb4:	21 1d       	adc	r18, r1
     eb6:	29 93       	st	Y+, r18
     eb8:	28 81       	ld	r18, Y
     eba:	21 1d       	adc	r18, r1
     ebc:	29 93       	st	Y+, r18
     ebe:	28 81       	ld	r18, Y
     ec0:	21 1d       	adc	r18, r1
     ec2:	29 93       	st	Y+, r18
     ec4:	28 81       	ld	r18, Y
     ec6:	21 1d       	adc	r18, r1
     ec8:	29 93       	st	Y+, r18
     eca:	28 81       	ld	r18, Y
     ecc:	21 1d       	adc	r18, r1
     ece:	29 93       	st	Y+, r18
     ed0:	28 81       	ld	r18, Y
     ed2:	21 1d       	adc	r18, r1
     ed4:	29 93       	st	Y+, r18
     ed6:	28 81       	ld	r18, Y
     ed8:	21 1d       	adc	r18, r1
     eda:	29 93       	st	Y+, r18
     edc:	28 81       	ld	r18, Y
     ede:	21 1d       	adc	r18, r1
     ee0:	29 93       	st	Y+, r18
     ee2:	28 81       	ld	r18, Y
     ee4:	21 1d       	adc	r18, r1
     ee6:	29 93       	st	Y+, r18
     ee8:	28 81       	ld	r18, Y
     eea:	21 1d       	adc	r18, r1
     eec:	29 93       	st	Y+, r18
     eee:	28 81       	ld	r18, Y
     ef0:	21 1d       	adc	r18, r1
     ef2:	29 93       	st	Y+, r18
     ef4:	28 81       	ld	r18, Y
     ef6:	21 1d       	adc	r18, r1
     ef8:	29 93       	st	Y+, r18
     efa:	28 81       	ld	r18, Y
     efc:	21 1d       	adc	r18, r1
     efe:	29 93       	st	Y+, r18
     f00:	28 81       	ld	r18, Y
     f02:	21 1d       	adc	r18, r1
     f04:	29 93       	st	Y+, r18
     f06:	28 81       	ld	r18, Y
     f08:	21 1d       	adc	r18, r1
     f0a:	29 93       	st	Y+, r18
     f0c:	28 81       	ld	r18, Y
     f0e:	21 1d       	adc	r18, r1
     f10:	29 93       	st	Y+, r18
     f12:	28 81       	ld	r18, Y
     f14:	21 1d       	adc	r18, r1
     f16:	29 93       	st	Y+, r18
     f18:	28 81       	ld	r18, Y
     f1a:	21 1d       	adc	r18, r1
     f1c:	29 93       	st	Y+, r18
     f1e:	28 81       	ld	r18, Y
     f20:	21 1d       	adc	r18, r1
     f22:	29 93       	st	Y+, r18
     f24:	28 81       	ld	r18, Y
     f26:	21 1d       	adc	r18, r1
     f28:	29 93       	st	Y+, r18
     f2a:	11 1d       	adc	r17, r1
     f2c:	a0 97       	sbiw	r28, 0x20	; 32
     f2e:	31 97       	sbiw	r30, 0x01	; 1
     f30:	0f b6       	in	r0, 0x3f	; 63
     f32:	f8 94       	cli
     f34:	fe bf       	out	0x3e, r31	; 62
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	ed bf       	out	0x3d, r30	; 61
     f3a:	11 23       	and	r17, r17
     f3c:	71 f0       	breq	.+28     	; 0xf5a <vli_mmod_fast_secp256k1+0x584>
     f3e:	20 e2       	ldi	r18, 0x20	; 32
     f40:	44 ec       	ldi	r20, 0xC4	; 196
     f42:	51 e0       	ldi	r21, 0x01	; 1
     f44:	be 01       	movw	r22, r28
     f46:	ce 01       	movw	r24, r28
     f48:	a4 db       	rcall	.-2232   	; 0x692 <uECC_vli_sub>
     f4a:	11 30       	cpi	r17, 0x01	; 1
     f4c:	31 f0       	breq	.+12     	; 0xf5a <vli_mmod_fast_secp256k1+0x584>
     f4e:	20 e2       	ldi	r18, 0x20	; 32
     f50:	44 ec       	ldi	r20, 0xC4	; 196
     f52:	51 e0       	ldi	r21, 0x01	; 1
     f54:	be 01       	movw	r22, r28
     f56:	ce 01       	movw	r24, r28
     f58:	9c db       	rcall	.-2248   	; 0x692 <uECC_vli_sub>
     f5a:	40 e2       	ldi	r20, 0x20	; 32
     f5c:	64 ec       	ldi	r22, 0xC4	; 196
     f5e:	71 e0       	ldi	r23, 0x01	; 1
     f60:	ce 01       	movw	r24, r28
     f62:	07 dd       	rcall	.-1522   	; 0x972 <uECC_vli_cmp_unsafe>
     f64:	18 16       	cp	r1, r24
     f66:	34 f4       	brge	.+12     	; 0xf74 <vli_mmod_fast_secp256k1+0x59e>
     f68:	20 e2       	ldi	r18, 0x20	; 32
     f6a:	44 ec       	ldi	r20, 0xC4	; 196
     f6c:	51 e0       	ldi	r21, 0x01	; 1
     f6e:	be 01       	movw	r22, r28
     f70:	ce 01       	movw	r24, r28
     f72:	8f db       	rcall	.-2274   	; 0x692 <uECC_vli_sub>
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	08 95       	ret

00000f7c <uECC_vli_cmp>:
     f7c:	0f 93       	push	r16
     f7e:	1f 93       	push	r17
     f80:	cf 93       	push	r28
     f82:	df 93       	push	r29
     f84:	cd b7       	in	r28, 0x3d	; 61
     f86:	de b7       	in	r29, 0x3e	; 62
     f88:	a0 97       	sbiw	r28, 0x20	; 32
     f8a:	0f b6       	in	r0, 0x3f	; 63
     f8c:	f8 94       	cli
     f8e:	de bf       	out	0x3e, r29	; 62
     f90:	0f be       	out	0x3f, r0	; 63
     f92:	cd bf       	out	0x3d, r28	; 61
     f94:	14 2f       	mov	r17, r20
     f96:	24 2f       	mov	r18, r20
     f98:	ab 01       	movw	r20, r22
     f9a:	bc 01       	movw	r22, r24
     f9c:	ce 01       	movw	r24, r28
     f9e:	01 96       	adiw	r24, 0x01	; 1
     fa0:	78 db       	rcall	.-2320   	; 0x692 <uECC_vli_sub>
     fa2:	08 2f       	mov	r16, r24
     fa4:	61 2f       	mov	r22, r17
     fa6:	ce 01       	movw	r24, r28
     fa8:	01 96       	adiw	r24, 0x01	; 1
     faa:	80 dc       	rcall	.-1792   	; 0x8ac <uECC_vli_isZero>
     fac:	91 e0       	ldi	r25, 0x01	; 1
     fae:	81 11       	cpse	r24, r1
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	01 11       	cpse	r16, r1
     fb6:	01 c0       	rjmp	.+2      	; 0xfba <uECC_vli_cmp+0x3e>
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	88 0f       	add	r24, r24
     fbc:	98 1b       	sub	r25, r24
     fbe:	89 2f       	mov	r24, r25
     fc0:	a0 96       	adiw	r28, 0x20	; 32
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	08 95       	ret

00000fd6 <uECC_vli_modAdd>:
     fd6:	ef 92       	push	r14
     fd8:	ff 92       	push	r15
     fda:	0f 93       	push	r16
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	ec 01       	movw	r28, r24
     fe2:	79 01       	movw	r14, r18
     fe4:	20 2f       	mov	r18, r16
     fe6:	84 da       	rcall	.-2808   	; 0x4f0 <uECC_vli_add>
     fe8:	81 11       	cpse	r24, r1
     fea:	06 c0       	rjmp	.+12     	; 0xff8 <uECC_vli_modAdd+0x22>
     fec:	40 2f       	mov	r20, r16
     fee:	be 01       	movw	r22, r28
     ff0:	c7 01       	movw	r24, r14
     ff2:	bf dc       	rcall	.-1666   	; 0x972 <uECC_vli_cmp_unsafe>
     ff4:	81 30       	cpi	r24, 0x01	; 1
     ff6:	29 f0       	breq	.+10     	; 0x1002 <uECC_vli_modAdd+0x2c>
     ff8:	20 2f       	mov	r18, r16
     ffa:	a7 01       	movw	r20, r14
     ffc:	be 01       	movw	r22, r28
     ffe:	ce 01       	movw	r24, r28
    1000:	48 db       	rcall	.-2416   	; 0x692 <uECC_vli_sub>
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	0f 91       	pop	r16
    1008:	ff 90       	pop	r15
    100a:	ef 90       	pop	r14
    100c:	08 95       	ret

0000100e <uECC_vli_modSub>:
    100e:	ef 92       	push	r14
    1010:	ff 92       	push	r15
    1012:	0f 93       	push	r16
    1014:	cf 93       	push	r28
    1016:	df 93       	push	r29
    1018:	ec 01       	movw	r28, r24
    101a:	79 01       	movw	r14, r18
    101c:	20 2f       	mov	r18, r16
    101e:	39 db       	rcall	.-2446   	; 0x692 <uECC_vli_sub>
    1020:	88 23       	and	r24, r24
    1022:	29 f0       	breq	.+10     	; 0x102e <uECC_vli_modSub+0x20>
    1024:	20 2f       	mov	r18, r16
    1026:	a7 01       	movw	r20, r14
    1028:	be 01       	movw	r22, r28
    102a:	ce 01       	movw	r24, r28
    102c:	61 da       	rcall	.-2878   	; 0x4f0 <uECC_vli_add>
    102e:	df 91       	pop	r29
    1030:	cf 91       	pop	r28
    1032:	0f 91       	pop	r16
    1034:	ff 90       	pop	r15
    1036:	ef 90       	pop	r14
    1038:	08 95       	ret

0000103a <uECC_vli_modMult>:
    103a:	2f 92       	push	r2
    103c:	3f 92       	push	r3
    103e:	4f 92       	push	r4
    1040:	5f 92       	push	r5
    1042:	6f 92       	push	r6
    1044:	7f 92       	push	r7
    1046:	8f 92       	push	r8
    1048:	9f 92       	push	r9
    104a:	af 92       	push	r10
    104c:	bf 92       	push	r11
    104e:	cf 92       	push	r12
    1050:	df 92       	push	r13
    1052:	ef 92       	push	r14
    1054:	ff 92       	push	r15
    1056:	0f 93       	push	r16
    1058:	1f 93       	push	r17
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	cc 5c       	subi	r28, 0xCC	; 204
    1064:	d1 09       	sbc	r29, r1
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	c7 53       	subi	r28, 0x37	; 55
    1072:	df 4f       	sbci	r29, 0xFF	; 255
    1074:	99 83       	std	Y+1, r25	; 0x01
    1076:	88 83       	st	Y, r24
    1078:	c9 5c       	subi	r28, 0xC9	; 201
    107a:	d0 40       	sbci	r29, 0x00	; 0
    107c:	c2 2e       	mov	r12, r18
    107e:	d3 2e       	mov	r13, r19
    1080:	a0 2e       	mov	r10, r16
    1082:	20 2f       	mov	r18, r16
    1084:	8e 01       	movw	r16, r28
    1086:	0f 5f       	subi	r16, 0xFF	; 255
    1088:	1f 4f       	sbci	r17, 0xFF	; 255
    108a:	c8 01       	movw	r24, r16
    108c:	d3 db       	rcall	.-2138   	; 0x834 <uECC_vli_mult>
    108e:	ce 01       	movw	r24, r28
    1090:	8f 5b       	subi	r24, 0xBF	; 191
    1092:	9f 4f       	sbci	r25, 0xFF	; 255
    1094:	cf 53       	subi	r28, 0x3F	; 63
    1096:	df 4f       	sbci	r29, 0xFF	; 255
    1098:	99 83       	std	Y+1, r25	; 0x01
    109a:	88 83       	st	Y, r24
    109c:	c1 5c       	subi	r28, 0xC1	; 193
    109e:	d0 40       	sbci	r29, 0x00	; 0
    10a0:	cd 53       	subi	r28, 0x3D	; 61
    10a2:	df 4f       	sbci	r29, 0xFF	; 255
    10a4:	19 83       	std	Y+1, r17	; 0x01
    10a6:	08 83       	st	Y, r16
    10a8:	c3 5c       	subi	r28, 0xC3	; 195
    10aa:	d0 40       	sbci	r29, 0x00	; 0
    10ac:	8a 2c       	mov	r8, r10
    10ae:	0a 2c       	mov	r0, r10
    10b0:	00 0c       	add	r0, r0
    10b2:	99 08       	sbc	r9, r9
    10b4:	6a 2d       	mov	r22, r10
    10b6:	8c 2d       	mov	r24, r12
    10b8:	9d 2d       	mov	r25, r13
    10ba:	24 dc       	rcall	.-1976   	; 0x904 <uECC_vli_numBits>
    10bc:	34 01       	movw	r6, r8
    10be:	66 0c       	add	r6, r6
    10c0:	77 1c       	adc	r7, r7
    10c2:	66 0c       	add	r6, r6
    10c4:	77 1c       	adc	r7, r7
    10c6:	66 0c       	add	r6, r6
    10c8:	77 1c       	adc	r7, r7
    10ca:	66 0c       	add	r6, r6
    10cc:	77 1c       	adc	r7, r7
    10ce:	68 1a       	sub	r6, r24
    10d0:	79 0a       	sbc	r7, r25
    10d2:	73 01       	movw	r14, r6
    10d4:	1a f4       	brpl	.+6      	; 0x10dc <uECC_vli_modMult+0xa2>
    10d6:	27 e0       	ldi	r18, 0x07	; 7
    10d8:	e2 0e       	add	r14, r18
    10da:	f1 1c       	adc	r15, r1
    10dc:	f5 94       	asr	r15
    10de:	e7 94       	ror	r14
    10e0:	f5 94       	asr	r15
    10e2:	e7 94       	ror	r14
    10e4:	f5 94       	asr	r15
    10e6:	e7 94       	ror	r14
    10e8:	c3 01       	movw	r24, r6
    10ea:	87 70       	andi	r24, 0x07	; 7
    10ec:	90 78       	andi	r25, 0x80	; 128
    10ee:	99 23       	and	r25, r25
    10f0:	24 f4       	brge	.+8      	; 0x10fa <uECC_vli_modMult+0xc0>
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	88 6f       	ori	r24, 0xF8	; 248
    10f6:	9f 6f       	ori	r25, 0xFF	; 255
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	18 2f       	mov	r17, r24
    10fc:	6e 2d       	mov	r22, r14
    10fe:	ce 01       	movw	r24, r28
    1100:	8f 57       	subi	r24, 0x7F	; 127
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	0f d9       	rcall	.-3554   	; 0x324 <uECC_vli_clear>
    1106:	11 16       	cp	r1, r17
    1108:	c4 f5       	brge	.+112    	; 0x117a <__stack+0x7b>
    110a:	aa 20       	and	r10, r10
    110c:	09 f4       	brne	.+2      	; 0x1110 <__stack+0x11>
    110e:	41 c0       	rjmp	.+130    	; 0x1192 <__stack+0x93>
    1110:	ac 2d       	mov	r26, r12
    1112:	bd 2d       	mov	r27, r13
    1114:	0e 2c       	mov	r0, r14
    1116:	00 0c       	add	r0, r0
    1118:	ff 08       	sbc	r15, r15
    111a:	e1 e8       	ldi	r30, 0x81	; 129
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	ec 0f       	add	r30, r28
    1120:	fd 1f       	adc	r31, r29
    1122:	ee 0d       	add	r30, r14
    1124:	ff 1d       	adc	r31, r15
    1126:	8f ef       	ldi	r24, 0xFF	; 255
    1128:	8a 0d       	add	r24, r10
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	01 96       	adiw	r24, 0x01	; 1
    112e:	e8 0e       	add	r14, r24
    1130:	f9 1e       	adc	r15, r25
    1132:	41 e8       	ldi	r20, 0x81	; 129
    1134:	50 e0       	ldi	r21, 0x00	; 0
    1136:	4c 0f       	add	r20, r28
    1138:	5d 1f       	adc	r21, r29
    113a:	4e 0d       	add	r20, r14
    113c:	5f 1d       	adc	r21, r15
    113e:	00 e0       	ldi	r16, 0x00	; 0
    1140:	68 e0       	ldi	r22, 0x08	; 8
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	61 1b       	sub	r22, r17
    1146:	71 09       	sbc	r23, r1
    1148:	17 fd       	sbrc	r17, 7
    114a:	73 95       	inc	r23
    114c:	9d 91       	ld	r25, X+
    114e:	89 2f       	mov	r24, r25
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	9c 01       	movw	r18, r24
    1154:	01 2e       	mov	r0, r17
    1156:	02 c0       	rjmp	.+4      	; 0x115c <__stack+0x5d>
    1158:	22 0f       	add	r18, r18
    115a:	33 1f       	adc	r19, r19
    115c:	0a 94       	dec	r0
    115e:	e2 f7       	brpl	.-8      	; 0x1158 <__stack+0x59>
    1160:	20 2b       	or	r18, r16
    1162:	21 93       	st	Z+, r18
    1164:	06 2e       	mov	r0, r22
    1166:	02 c0       	rjmp	.+4      	; 0x116c <__stack+0x6d>
    1168:	95 95       	asr	r25
    116a:	87 95       	ror	r24
    116c:	0a 94       	dec	r0
    116e:	e2 f7       	brpl	.-8      	; 0x1168 <__stack+0x69>
    1170:	08 2f       	mov	r16, r24
    1172:	e4 17       	cp	r30, r20
    1174:	f5 07       	cpc	r31, r21
    1176:	51 f7       	brne	.-44     	; 0x114c <__stack+0x4d>
    1178:	0c c0       	rjmp	.+24     	; 0x1192 <__stack+0x93>
    117a:	4a 2d       	mov	r20, r10
    117c:	6c 2d       	mov	r22, r12
    117e:	7d 2d       	mov	r23, r13
    1180:	81 e8       	ldi	r24, 0x81	; 129
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	8c 0f       	add	r24, r28
    1186:	9d 1f       	adc	r25, r29
    1188:	8e 0d       	add	r24, r14
    118a:	91 1d       	adc	r25, r1
    118c:	e7 fc       	sbrc	r14, 7
    118e:	9a 95       	dec	r25
    1190:	f0 d8       	rcall	.-3616   	; 0x372 <uECC_vli_set>
    1192:	77 20       	and	r7, r7
    1194:	0c f4       	brge	.+2      	; 0x1198 <__stack+0x99>
    1196:	a6 c0       	rjmp	.+332    	; 0x12e4 <__stack+0x1e5>
    1198:	84 01       	movw	r16, r8
    119a:	00 0f       	add	r16, r16
    119c:	11 1f       	adc	r17, r17
    119e:	bb 24       	eor	r11, r11
    11a0:	b3 94       	inc	r11
    11a2:	44 24       	eor	r4, r4
    11a4:	43 94       	inc	r4
    11a6:	51 2c       	mov	r5, r1
    11a8:	7e 01       	movw	r14, r28
    11aa:	31 e8       	ldi	r19, 0x81	; 129
    11ac:	e3 0e       	add	r14, r19
    11ae:	f1 1c       	adc	r15, r1
    11b0:	c9 53       	subi	r28, 0x39	; 57
    11b2:	df 4f       	sbci	r29, 0xFF	; 255
    11b4:	e8 82       	st	Y, r14
    11b6:	c7 5c       	subi	r28, 0xC7	; 199
    11b8:	d0 40       	sbci	r29, 0x00	; 0
    11ba:	c8 53       	subi	r28, 0x38	; 56
    11bc:	df 4f       	sbci	r29, 0xFF	; 255
    11be:	f8 82       	st	Y, r15
    11c0:	c8 5c       	subi	r28, 0xC8	; 200
    11c2:	d0 40       	sbci	r29, 0x00	; 0
    11c4:	dd 24       	eor	r13, r13
    11c6:	d3 94       	inc	r13
    11c8:	c1 2c       	mov	r12, r1
    11ca:	c4 01       	movw	r24, r8
    11cc:	01 97       	sbiw	r24, 0x01	; 1
    11ce:	17 01       	movw	r2, r14
    11d0:	28 0e       	add	r2, r24
    11d2:	39 1e       	adc	r3, r25
    11d4:	8e 0c       	add	r8, r14
    11d6:	9f 1c       	adc	r9, r15
    11d8:	c7 01       	movw	r24, r14
    11da:	8a 0d       	add	r24, r10
    11dc:	91 1d       	adc	r25, r1
    11de:	a7 fc       	sbrc	r10, 7
    11e0:	9a 95       	dec	r25
    11e2:	cb 53       	subi	r28, 0x3B	; 59
    11e4:	df 4f       	sbci	r29, 0xFF	; 255
    11e6:	99 83       	std	Y+1, r25	; 0x01
    11e8:	88 83       	st	Y, r24
    11ea:	c5 5c       	subi	r28, 0xC5	; 197
    11ec:	d0 40       	sbci	r29, 0x00	; 0
    11ee:	57 c0       	rjmp	.+174    	; 0x129e <__stack+0x19f>
    11f0:	e6 2f       	mov	r30, r22
    11f2:	06 2e       	mov	r0, r22
    11f4:	00 0c       	add	r0, r0
    11f6:	ff 0b       	sbc	r31, r31
    11f8:	da 01       	movw	r26, r20
    11fa:	ae 0f       	add	r26, r30
    11fc:	bf 1f       	adc	r27, r31
    11fe:	bc 90       	ld	r11, X
    1200:	c5 53       	subi	r28, 0x35	; 53
    1202:	df 4f       	sbci	r29, 0xFF	; 255
    1204:	b8 82       	st	Y, r11
    1206:	cb 5c       	subi	r28, 0xCB	; 203
    1208:	d0 40       	sbci	r29, 0x00	; 0
    120a:	8e 0d       	add	r24, r14
    120c:	9f 1d       	adc	r25, r15
    120e:	dc 01       	movw	r26, r24
    1210:	8c 91       	ld	r24, X
    1212:	b8 1a       	sub	r11, r24
    1214:	8b 2d       	mov	r24, r11
    1216:	87 1b       	sub	r24, r23
    1218:	c5 53       	subi	r28, 0x35	; 53
    121a:	df 4f       	sbci	r29, 0xFF	; 255
    121c:	b8 81       	ld	r27, Y
    121e:	cb 5c       	subi	r28, 0xCB	; 203
    1220:	d0 40       	sbci	r29, 0x00	; 0
    1222:	b8 17       	cp	r27, r24
    1224:	21 f0       	breq	.+8      	; 0x122e <__stack+0x12f>
    1226:	7d 2d       	mov	r23, r13
    1228:	b8 17       	cp	r27, r24
    122a:	08 f0       	brcs	.+2      	; 0x122e <__stack+0x12f>
    122c:	7c 2d       	mov	r23, r12
    122e:	e2 0f       	add	r30, r18
    1230:	f3 1f       	adc	r31, r19
    1232:	80 83       	st	Z, r24
    1234:	6f 5f       	subi	r22, 0xFF	; 255
    1236:	86 2f       	mov	r24, r22
    1238:	06 2e       	mov	r0, r22
    123a:	00 0c       	add	r0, r0
    123c:	99 0b       	sbc	r25, r25
    123e:	80 17       	cp	r24, r16
    1240:	91 07       	cpc	r25, r17
    1242:	b4 f2       	brlt	.-84     	; 0x11f0 <__stack+0xf1>
    1244:	c4 53       	subi	r28, 0x34	; 52
    1246:	df 4f       	sbci	r29, 0xFF	; 255
    1248:	b8 80       	ld	r11, Y
    124a:	cc 5c       	subi	r28, 0xCC	; 204
    124c:	d0 40       	sbci	r29, 0x00	; 0
    124e:	01 c0       	rjmp	.+2      	; 0x1252 <__stack+0x153>
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	81 e0       	ldi	r24, 0x01	; 1
    1254:	b7 12       	cpse	r11, r23
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	b8 2e       	mov	r11, r24
    125a:	6a 2d       	mov	r22, r10
    125c:	c9 53       	subi	r28, 0x39	; 57
    125e:	df 4f       	sbci	r29, 0xFF	; 255
    1260:	88 81       	ld	r24, Y
    1262:	c7 5c       	subi	r28, 0xC7	; 199
    1264:	d0 40       	sbci	r29, 0x00	; 0
    1266:	c8 53       	subi	r28, 0x38	; 56
    1268:	df 4f       	sbci	r29, 0xFF	; 255
    126a:	98 81       	ld	r25, Y
    126c:	c8 5c       	subi	r28, 0xC8	; 200
    126e:	d0 40       	sbci	r29, 0x00	; 0
    1270:	cd d8       	rcall	.-3686   	; 0x40c <uECC_vli_rshift1>
    1272:	f4 01       	movw	r30, r8
    1274:	80 81       	ld	r24, Z
    1276:	f0 e8       	ldi	r31, 0x80	; 128
    1278:	8f 9f       	mul	r24, r31
    127a:	c0 01       	movw	r24, r0
    127c:	11 24       	eor	r1, r1
    127e:	d1 01       	movw	r26, r2
    1280:	9c 91       	ld	r25, X
    1282:	89 2b       	or	r24, r25
    1284:	8c 93       	st	X, r24
    1286:	6a 2d       	mov	r22, r10
    1288:	cb 53       	subi	r28, 0x3B	; 59
    128a:	df 4f       	sbci	r29, 0xFF	; 255
    128c:	88 81       	ld	r24, Y
    128e:	99 81       	ldd	r25, Y+1	; 0x01
    1290:	c5 5c       	subi	r28, 0xC5	; 197
    1292:	d0 40       	sbci	r29, 0x00	; 0
    1294:	bb d8       	rcall	.-3722   	; 0x40c <uECC_vli_rshift1>
    1296:	b1 e0       	ldi	r27, 0x01	; 1
    1298:	6b 1a       	sub	r6, r27
    129a:	71 08       	sbc	r7, r1
    129c:	28 f1       	brcs	.+74     	; 0x12e8 <__stack+0x1e9>
    129e:	10 16       	cp	r1, r16
    12a0:	11 06       	cpc	r1, r17
    12a2:	b4 f6       	brge	.-84     	; 0x1250 <__stack+0x151>
    12a4:	8b 2d       	mov	r24, r11
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	fc 01       	movw	r30, r24
    12aa:	ee 0f       	add	r30, r30
    12ac:	ff 1f       	adc	r31, r31
    12ae:	21 ec       	ldi	r18, 0xC1	; 193
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	2c 0f       	add	r18, r28
    12b4:	3d 1f       	adc	r19, r29
    12b6:	e2 0f       	add	r30, r18
    12b8:	f3 1f       	adc	r31, r19
    12ba:	40 81       	ld	r20, Z
    12bc:	51 81       	ldd	r21, Z+1	; 0x01
    12be:	f2 01       	movw	r30, r4
    12c0:	e8 1b       	sub	r30, r24
    12c2:	f9 0b       	sbc	r31, r25
    12c4:	ee 0f       	add	r30, r30
    12c6:	ff 1f       	adc	r31, r31
    12c8:	e2 0f       	add	r30, r18
    12ca:	f3 1f       	adc	r31, r19
    12cc:	20 81       	ld	r18, Z
    12ce:	31 81       	ldd	r19, Z+1	; 0x01
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	60 e0       	ldi	r22, 0x00	; 0
    12d8:	c4 53       	subi	r28, 0x34	; 52
    12da:	df 4f       	sbci	r29, 0xFF	; 255
    12dc:	b8 82       	st	Y, r11
    12de:	cc 5c       	subi	r28, 0xCC	; 204
    12e0:	d0 40       	sbci	r29, 0x00	; 0
    12e2:	86 cf       	rjmp	.-244    	; 0x11f0 <__stack+0xf1>
    12e4:	bb 24       	eor	r11, r11
    12e6:	b3 94       	inc	r11
    12e8:	eb 2d       	mov	r30, r11
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	ee 0f       	add	r30, r30
    12ee:	ff 1f       	adc	r31, r31
    12f0:	81 ec       	ldi	r24, 0xC1	; 193
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	8c 0f       	add	r24, r28
    12f6:	9d 1f       	adc	r25, r29
    12f8:	e8 0f       	add	r30, r24
    12fa:	f9 1f       	adc	r31, r25
    12fc:	60 81       	ld	r22, Z
    12fe:	71 81       	ldd	r23, Z+1	; 0x01
    1300:	4a 2d       	mov	r20, r10
    1302:	c7 53       	subi	r28, 0x37	; 55
    1304:	df 4f       	sbci	r29, 0xFF	; 255
    1306:	88 81       	ld	r24, Y
    1308:	99 81       	ldd	r25, Y+1	; 0x01
    130a:	c9 5c       	subi	r28, 0xC9	; 201
    130c:	d0 40       	sbci	r29, 0x00	; 0
    130e:	31 d8       	rcall	.-3998   	; 0x372 <uECC_vli_set>
    1310:	c4 53       	subi	r28, 0x34	; 52
    1312:	df 4f       	sbci	r29, 0xFF	; 255
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	de bf       	out	0x3e, r29	; 62
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	cd bf       	out	0x3d, r28	; 61
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	0f 91       	pop	r16
    1326:	ff 90       	pop	r15
    1328:	ef 90       	pop	r14
    132a:	df 90       	pop	r13
    132c:	cf 90       	pop	r12
    132e:	bf 90       	pop	r11
    1330:	af 90       	pop	r10
    1332:	9f 90       	pop	r9
    1334:	8f 90       	pop	r8
    1336:	7f 90       	pop	r7
    1338:	6f 90       	pop	r6
    133a:	5f 90       	pop	r5
    133c:	4f 90       	pop	r4
    133e:	3f 90       	pop	r3
    1340:	2f 90       	pop	r2
    1342:	08 95       	ret

00001344 <uECC_vli_modMult_fast>:
    1344:	ef 92       	push	r14
    1346:	ff 92       	push	r15
    1348:	0f 93       	push	r16
    134a:	1f 93       	push	r17
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	cd b7       	in	r28, 0x3d	; 61
    1352:	de b7       	in	r29, 0x3e	; 62
    1354:	c0 54       	subi	r28, 0x40	; 64
    1356:	d1 09       	sbc	r29, r1
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	f8 94       	cli
    135c:	de bf       	out	0x3e, r29	; 62
    135e:	0f be       	out	0x3f, r0	; 63
    1360:	cd bf       	out	0x3d, r28	; 61
    1362:	7c 01       	movw	r14, r24
    1364:	89 01       	movw	r16, r18
    1366:	f9 01       	movw	r30, r18
    1368:	20 81       	ld	r18, Z
    136a:	ce 01       	movw	r24, r28
    136c:	01 96       	adiw	r24, 0x01	; 1
    136e:	62 da       	rcall	.-2876   	; 0x834 <uECC_vli_mult>
    1370:	f8 01       	movw	r30, r16
    1372:	e6 55       	subi	r30, 0x56	; 86
    1374:	ff 4f       	sbci	r31, 0xFF	; 255
    1376:	01 90       	ld	r0, Z+
    1378:	f0 81       	ld	r31, Z
    137a:	e0 2d       	mov	r30, r0
    137c:	be 01       	movw	r22, r28
    137e:	6f 5f       	subi	r22, 0xFF	; 255
    1380:	7f 4f       	sbci	r23, 0xFF	; 255
    1382:	c7 01       	movw	r24, r14
    1384:	09 95       	icall
    1386:	c0 5c       	subi	r28, 0xC0	; 192
    1388:	df 4f       	sbci	r29, 0xFF	; 255
    138a:	0f b6       	in	r0, 0x3f	; 63
    138c:	f8 94       	cli
    138e:	de bf       	out	0x3e, r29	; 62
    1390:	0f be       	out	0x3f, r0	; 63
    1392:	cd bf       	out	0x3d, r28	; 61
    1394:	df 91       	pop	r29
    1396:	cf 91       	pop	r28
    1398:	1f 91       	pop	r17
    139a:	0f 91       	pop	r16
    139c:	ff 90       	pop	r15
    139e:	ef 90       	pop	r14
    13a0:	08 95       	ret

000013a2 <uECC_vli_modSquare_fast>:
    13a2:	9a 01       	movw	r18, r20
    13a4:	ab 01       	movw	r20, r22
    13a6:	ce cf       	rjmp	.-100    	; 0x1344 <uECC_vli_modMult_fast>
    13a8:	08 95       	ret

000013aa <vli_modInv_update>:
    13aa:	0f 93       	push	r16
    13ac:	1f 93       	push	r17
    13ae:	cf 93       	push	r28
    13b0:	df 93       	push	r29
    13b2:	8c 01       	movw	r16, r24
    13b4:	c4 2f       	mov	r28, r20
    13b6:	fc 01       	movw	r30, r24
    13b8:	80 81       	ld	r24, Z
    13ba:	80 ff       	sbrs	r24, 0
    13bc:	15 c0       	rjmp	.+42     	; 0x13e8 <vli_modInv_update+0x3e>
    13be:	24 2f       	mov	r18, r20
    13c0:	ab 01       	movw	r20, r22
    13c2:	b8 01       	movw	r22, r16
    13c4:	c8 01       	movw	r24, r16
    13c6:	94 d8       	rcall	.-3800   	; 0x4f0 <uECC_vli_add>
    13c8:	d8 2f       	mov	r29, r24
    13ca:	6c 2f       	mov	r22, r28
    13cc:	c8 01       	movw	r24, r16
    13ce:	1e d8       	rcall	.-4036   	; 0x40c <uECC_vli_rshift1>
    13d0:	dd 23       	and	r29, r29
    13d2:	69 f0       	breq	.+26     	; 0x13ee <vli_modInv_update+0x44>
    13d4:	ec 2f       	mov	r30, r28
    13d6:	cc 0f       	add	r28, r28
    13d8:	ff 0b       	sbc	r31, r31
    13da:	31 97       	sbiw	r30, 0x01	; 1
    13dc:	e0 0f       	add	r30, r16
    13de:	f1 1f       	adc	r31, r17
    13e0:	80 81       	ld	r24, Z
    13e2:	80 68       	ori	r24, 0x80	; 128
    13e4:	80 83       	st	Z, r24
    13e6:	03 c0       	rjmp	.+6      	; 0x13ee <vli_modInv_update+0x44>
    13e8:	64 2f       	mov	r22, r20
    13ea:	c8 01       	movw	r24, r16
    13ec:	0f d8       	rcall	.-4066   	; 0x40c <uECC_vli_rshift1>
    13ee:	df 91       	pop	r29
    13f0:	cf 91       	pop	r28
    13f2:	1f 91       	pop	r17
    13f4:	0f 91       	pop	r16
    13f6:	08 95       	ret

000013f8 <uECC_vli_modInv>:
    13f8:	af 92       	push	r10
    13fa:	bf 92       	push	r11
    13fc:	cf 92       	push	r12
    13fe:	df 92       	push	r13
    1400:	ef 92       	push	r14
    1402:	ff 92       	push	r15
    1404:	1f 93       	push	r17
    1406:	cf 93       	push	r28
    1408:	df 93       	push	r29
    140a:	cd b7       	in	r28, 0x3d	; 61
    140c:	de b7       	in	r29, 0x3e	; 62
    140e:	c0 58       	subi	r28, 0x80	; 128
    1410:	d1 09       	sbc	r29, r1
    1412:	0f b6       	in	r0, 0x3f	; 63
    1414:	f8 94       	cli
    1416:	de bf       	out	0x3e, r29	; 62
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	cd bf       	out	0x3d, r28	; 61
    141c:	5c 01       	movw	r10, r24
    141e:	6b 01       	movw	r12, r22
    1420:	7a 01       	movw	r14, r20
    1422:	12 2f       	mov	r17, r18
    1424:	62 2f       	mov	r22, r18
    1426:	c6 01       	movw	r24, r12
    1428:	41 da       	rcall	.-2942   	; 0x8ac <uECC_vli_isZero>
    142a:	88 23       	and	r24, r24
    142c:	29 f0       	breq	.+10     	; 0x1438 <uECC_vli_modInv+0x40>
    142e:	61 2f       	mov	r22, r17
    1430:	c5 01       	movw	r24, r10
    1432:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    1436:	ab c0       	rjmp	.+342    	; 0x158e <uECC_vli_modInv+0x196>
    1438:	41 2f       	mov	r20, r17
    143a:	b6 01       	movw	r22, r12
    143c:	ce 01       	movw	r24, r28
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1444:	41 2f       	mov	r20, r17
    1446:	b7 01       	movw	r22, r14
    1448:	ce 01       	movw	r24, r28
    144a:	81 96       	adiw	r24, 0x21	; 33
    144c:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1450:	61 2f       	mov	r22, r17
    1452:	ce 01       	movw	r24, r28
    1454:	8f 5b       	subi	r24, 0xBF	; 191
    1456:	9f 4f       	sbci	r25, 0xFF	; 255
    1458:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    145c:	81 e0       	ldi	r24, 0x01	; 1
    145e:	22 96       	adiw	r28, 0x02	; 2
    1460:	8f af       	std	Y+63, r24	; 0x3f
    1462:	22 97       	sbiw	r28, 0x02	; 2
    1464:	61 2f       	mov	r22, r17
    1466:	ce 01       	movw	r24, r28
    1468:	8f 59       	subi	r24, 0x9F	; 159
    146a:	9f 4f       	sbci	r25, 0xFF	; 255
    146c:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    1470:	7e c0       	rjmp	.+252    	; 0x156e <uECC_vli_modInv+0x176>
    1472:	99 81       	ldd	r25, Y+1	; 0x01
    1474:	90 fd       	sbrc	r25, 0
    1476:	0c c0       	rjmp	.+24     	; 0x1490 <uECC_vli_modInv+0x98>
    1478:	61 2f       	mov	r22, r17
    147a:	ce 01       	movw	r24, r28
    147c:	01 96       	adiw	r24, 0x01	; 1
    147e:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    1482:	41 2f       	mov	r20, r17
    1484:	b7 01       	movw	r22, r14
    1486:	ce 01       	movw	r24, r28
    1488:	8f 5b       	subi	r24, 0xBF	; 191
    148a:	9f 4f       	sbci	r25, 0xFF	; 255
    148c:	8e df       	rcall	.-228    	; 0x13aa <vli_modInv_update>
    148e:	6f c0       	rjmp	.+222    	; 0x156e <uECC_vli_modInv+0x176>
    1490:	99 a1       	ldd	r25, Y+33	; 0x21
    1492:	90 fd       	sbrc	r25, 0
    1494:	0c c0       	rjmp	.+24     	; 0x14ae <uECC_vli_modInv+0xb6>
    1496:	61 2f       	mov	r22, r17
    1498:	ce 01       	movw	r24, r28
    149a:	81 96       	adiw	r24, 0x21	; 33
    149c:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    14a0:	41 2f       	mov	r20, r17
    14a2:	b7 01       	movw	r22, r14
    14a4:	ce 01       	movw	r24, r28
    14a6:	8f 59       	subi	r24, 0x9F	; 159
    14a8:	9f 4f       	sbci	r25, 0xFF	; 255
    14aa:	7f df       	rcall	.-258    	; 0x13aa <vli_modInv_update>
    14ac:	60 c0       	rjmp	.+192    	; 0x156e <uECC_vli_modInv+0x176>
    14ae:	18 16       	cp	r1, r24
    14b0:	7c f5       	brge	.+94     	; 0x1510 <uECC_vli_modInv+0x118>
    14b2:	21 2f       	mov	r18, r17
    14b4:	ae 01       	movw	r20, r28
    14b6:	4f 5d       	subi	r20, 0xDF	; 223
    14b8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ba:	be 01       	movw	r22, r28
    14bc:	6f 5f       	subi	r22, 0xFF	; 255
    14be:	7f 4f       	sbci	r23, 0xFF	; 255
    14c0:	cb 01       	movw	r24, r22
    14c2:	e7 d8       	rcall	.-3634   	; 0x692 <uECC_vli_sub>
    14c4:	61 2f       	mov	r22, r17
    14c6:	ce 01       	movw	r24, r28
    14c8:	01 96       	adiw	r24, 0x01	; 1
    14ca:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    14ce:	41 2f       	mov	r20, r17
    14d0:	be 01       	movw	r22, r28
    14d2:	6f 59       	subi	r22, 0x9F	; 159
    14d4:	7f 4f       	sbci	r23, 0xFF	; 255
    14d6:	ce 01       	movw	r24, r28
    14d8:	8f 5b       	subi	r24, 0xBF	; 191
    14da:	9f 4f       	sbci	r25, 0xFF	; 255
    14dc:	4a da       	rcall	.-2924   	; 0x972 <uECC_vli_cmp_unsafe>
    14de:	88 23       	and	r24, r24
    14e0:	3c f4       	brge	.+14     	; 0x14f0 <uECC_vli_modInv+0xf8>
    14e2:	21 2f       	mov	r18, r17
    14e4:	a7 01       	movw	r20, r14
    14e6:	be 01       	movw	r22, r28
    14e8:	6f 5b       	subi	r22, 0xBF	; 191
    14ea:	7f 4f       	sbci	r23, 0xFF	; 255
    14ec:	cb 01       	movw	r24, r22
    14ee:	00 d8       	rcall	.-4096   	; 0x4f0 <uECC_vli_add>
    14f0:	21 2f       	mov	r18, r17
    14f2:	ae 01       	movw	r20, r28
    14f4:	4f 59       	subi	r20, 0x9F	; 159
    14f6:	5f 4f       	sbci	r21, 0xFF	; 255
    14f8:	be 01       	movw	r22, r28
    14fa:	6f 5b       	subi	r22, 0xBF	; 191
    14fc:	7f 4f       	sbci	r23, 0xFF	; 255
    14fe:	cb 01       	movw	r24, r22
    1500:	c8 d8       	rcall	.-3696   	; 0x692 <uECC_vli_sub>
    1502:	41 2f       	mov	r20, r17
    1504:	b7 01       	movw	r22, r14
    1506:	ce 01       	movw	r24, r28
    1508:	8f 5b       	subi	r24, 0xBF	; 191
    150a:	9f 4f       	sbci	r25, 0xFF	; 255
    150c:	4e df       	rcall	.-356    	; 0x13aa <vli_modInv_update>
    150e:	2f c0       	rjmp	.+94     	; 0x156e <uECC_vli_modInv+0x176>
    1510:	21 2f       	mov	r18, r17
    1512:	ae 01       	movw	r20, r28
    1514:	4f 5f       	subi	r20, 0xFF	; 255
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	be 01       	movw	r22, r28
    151a:	6f 5d       	subi	r22, 0xDF	; 223
    151c:	7f 4f       	sbci	r23, 0xFF	; 255
    151e:	cb 01       	movw	r24, r22
    1520:	b8 d8       	rcall	.-3728   	; 0x692 <uECC_vli_sub>
    1522:	61 2f       	mov	r22, r17
    1524:	ce 01       	movw	r24, r28
    1526:	81 96       	adiw	r24, 0x21	; 33
    1528:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    152c:	41 2f       	mov	r20, r17
    152e:	be 01       	movw	r22, r28
    1530:	6f 5b       	subi	r22, 0xBF	; 191
    1532:	7f 4f       	sbci	r23, 0xFF	; 255
    1534:	ce 01       	movw	r24, r28
    1536:	8f 59       	subi	r24, 0x9F	; 159
    1538:	9f 4f       	sbci	r25, 0xFF	; 255
    153a:	1b da       	rcall	.-3018   	; 0x972 <uECC_vli_cmp_unsafe>
    153c:	88 23       	and	r24, r24
    153e:	44 f4       	brge	.+16     	; 0x1550 <uECC_vli_modInv+0x158>
    1540:	21 2f       	mov	r18, r17
    1542:	a7 01       	movw	r20, r14
    1544:	be 01       	movw	r22, r28
    1546:	6f 59       	subi	r22, 0x9F	; 159
    1548:	7f 4f       	sbci	r23, 0xFF	; 255
    154a:	cb 01       	movw	r24, r22
    154c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <uECC_vli_add>
    1550:	21 2f       	mov	r18, r17
    1552:	ae 01       	movw	r20, r28
    1554:	4f 5b       	subi	r20, 0xBF	; 191
    1556:	5f 4f       	sbci	r21, 0xFF	; 255
    1558:	be 01       	movw	r22, r28
    155a:	6f 59       	subi	r22, 0x9F	; 159
    155c:	7f 4f       	sbci	r23, 0xFF	; 255
    155e:	cb 01       	movw	r24, r22
    1560:	98 d8       	rcall	.-3792   	; 0x692 <uECC_vli_sub>
    1562:	41 2f       	mov	r20, r17
    1564:	b7 01       	movw	r22, r14
    1566:	ce 01       	movw	r24, r28
    1568:	8f 59       	subi	r24, 0x9F	; 159
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	1e df       	rcall	.-452    	; 0x13aa <vli_modInv_update>
    156e:	41 2f       	mov	r20, r17
    1570:	be 01       	movw	r22, r28
    1572:	6f 5d       	subi	r22, 0xDF	; 223
    1574:	7f 4f       	sbci	r23, 0xFF	; 255
    1576:	ce 01       	movw	r24, r28
    1578:	01 96       	adiw	r24, 0x01	; 1
    157a:	fb d9       	rcall	.-3082   	; 0x972 <uECC_vli_cmp_unsafe>
    157c:	81 11       	cpse	r24, r1
    157e:	79 cf       	rjmp	.-270    	; 0x1472 <uECC_vli_modInv+0x7a>
    1580:	41 2f       	mov	r20, r17
    1582:	be 01       	movw	r22, r28
    1584:	6f 5b       	subi	r22, 0xBF	; 191
    1586:	7f 4f       	sbci	r23, 0xFF	; 255
    1588:	c5 01       	movw	r24, r10
    158a:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    158e:	c0 58       	subi	r28, 0x80	; 128
    1590:	df 4f       	sbci	r29, 0xFF	; 255
    1592:	0f b6       	in	r0, 0x3f	; 63
    1594:	f8 94       	cli
    1596:	de bf       	out	0x3e, r29	; 62
    1598:	0f be       	out	0x3f, r0	; 63
    159a:	cd bf       	out	0x3d, r28	; 61
    159c:	df 91       	pop	r29
    159e:	cf 91       	pop	r28
    15a0:	1f 91       	pop	r17
    15a2:	ff 90       	pop	r15
    15a4:	ef 90       	pop	r14
    15a6:	df 90       	pop	r13
    15a8:	cf 90       	pop	r12
    15aa:	bf 90       	pop	r11
    15ac:	af 90       	pop	r10
    15ae:	08 95       	ret

000015b0 <mod_sqrt_default>:
    15b0:	bf 92       	push	r11
    15b2:	cf 92       	push	r12
    15b4:	df 92       	push	r13
    15b6:	ef 92       	push	r14
    15b8:	ff 92       	push	r15
    15ba:	0f 93       	push	r16
    15bc:	1f 93       	push	r17
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	cd b7       	in	r28, 0x3d	; 61
    15c4:	de b7       	in	r29, 0x3e	; 62
    15c6:	c0 54       	subi	r28, 0x40	; 64
    15c8:	d1 09       	sbc	r29, r1
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	f8 94       	cli
    15ce:	de bf       	out	0x3e, r29	; 62
    15d0:	0f be       	out	0x3f, r0	; 63
    15d2:	cd bf       	out	0x3d, r28	; 61
    15d4:	6c 01       	movw	r12, r24
    15d6:	7b 01       	movw	r14, r22
    15d8:	90 e2       	ldi	r25, 0x20	; 32
    15da:	8e 01       	movw	r16, r28
    15dc:	0f 5f       	subi	r16, 0xFF	; 255
    15de:	1f 4f       	sbci	r17, 0xFF	; 255
    15e0:	d8 01       	movw	r26, r16
    15e2:	e9 2f       	mov	r30, r25
    15e4:	1d 92       	st	X+, r1
    15e6:	ea 95       	dec	r30
    15e8:	e9 f7       	brne	.-6      	; 0x15e4 <mod_sqrt_default+0x34>
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	89 83       	std	Y+1, r24	; 0x01
    15ee:	fe 01       	movw	r30, r28
    15f0:	b1 96       	adiw	r30, 0x21	; 33
    15f2:	df 01       	movw	r26, r30
    15f4:	1d 92       	st	X+, r1
    15f6:	9a 95       	dec	r25
    15f8:	e9 f7       	brne	.-6      	; 0x15f4 <mod_sqrt_default+0x44>
    15fa:	89 a3       	std	Y+33, r24	; 0x21
    15fc:	fb 01       	movw	r30, r22
    15fe:	b0 80       	ld	r11, Z
    1600:	6c 5f       	subi	r22, 0xFC	; 252
    1602:	7f 4f       	sbci	r23, 0xFF	; 255
    1604:	2b 2d       	mov	r18, r11
    1606:	a8 01       	movw	r20, r16
    1608:	c8 01       	movw	r24, r16
    160a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <uECC_vli_add>
    160e:	6b 2d       	mov	r22, r11
    1610:	c8 01       	movw	r24, r16
    1612:	78 d9       	rcall	.-3344   	; 0x904 <uECC_vli_numBits>
    1614:	8c 01       	movw	r16, r24
    1616:	01 50       	subi	r16, 0x01	; 1
    1618:	11 09       	sbc	r17, r1
    161a:	02 30       	cpi	r16, 0x02	; 2
    161c:	11 05       	cpc	r17, r1
    161e:	c4 f0       	brlt	.+48     	; 0x1650 <mod_sqrt_default+0xa0>
    1620:	a7 01       	movw	r20, r14
    1622:	be 01       	movw	r22, r28
    1624:	6f 5d       	subi	r22, 0xDF	; 223
    1626:	7f 4f       	sbci	r23, 0xFF	; 255
    1628:	cb 01       	movw	r24, r22
    162a:	bb de       	rcall	.-650    	; 0x13a2 <uECC_vli_modSquare_fast>
    162c:	b8 01       	movw	r22, r16
    162e:	ce 01       	movw	r24, r28
    1630:	01 96       	adiw	r24, 0x01	; 1
    1632:	52 d9       	rcall	.-3420   	; 0x8d8 <uECC_vli_testBit>
    1634:	88 23       	and	r24, r24
    1636:	39 f0       	breq	.+14     	; 0x1646 <mod_sqrt_default+0x96>
    1638:	97 01       	movw	r18, r14
    163a:	a6 01       	movw	r20, r12
    163c:	be 01       	movw	r22, r28
    163e:	6f 5d       	subi	r22, 0xDF	; 223
    1640:	7f 4f       	sbci	r23, 0xFF	; 255
    1642:	cb 01       	movw	r24, r22
    1644:	7f de       	rcall	.-770    	; 0x1344 <uECC_vli_modMult_fast>
    1646:	01 50       	subi	r16, 0x01	; 1
    1648:	11 09       	sbc	r17, r1
    164a:	01 30       	cpi	r16, 0x01	; 1
    164c:	11 05       	cpc	r17, r1
    164e:	41 f7       	brne	.-48     	; 0x1620 <mod_sqrt_default+0x70>
    1650:	4b 2d       	mov	r20, r11
    1652:	be 01       	movw	r22, r28
    1654:	6f 5d       	subi	r22, 0xDF	; 223
    1656:	7f 4f       	sbci	r23, 0xFF	; 255
    1658:	c6 01       	movw	r24, r12
    165a:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    165e:	c0 5c       	subi	r28, 0xC0	; 192
    1660:	df 4f       	sbci	r29, 0xFF	; 255
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	f8 94       	cli
    1666:	de bf       	out	0x3e, r29	; 62
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	cd bf       	out	0x3d, r28	; 61
    166c:	df 91       	pop	r29
    166e:	cf 91       	pop	r28
    1670:	1f 91       	pop	r17
    1672:	0f 91       	pop	r16
    1674:	ff 90       	pop	r15
    1676:	ef 90       	pop	r14
    1678:	df 90       	pop	r13
    167a:	cf 90       	pop	r12
    167c:	bf 90       	pop	r11
    167e:	08 95       	ret

00001680 <double_jacobian_secp256k1>:
    1680:	8f 92       	push	r8
    1682:	9f 92       	push	r9
    1684:	af 92       	push	r10
    1686:	bf 92       	push	r11
    1688:	cf 92       	push	r12
    168a:	df 92       	push	r13
    168c:	ef 92       	push	r14
    168e:	ff 92       	push	r15
    1690:	0f 93       	push	r16
    1692:	1f 93       	push	r17
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	cd b7       	in	r28, 0x3d	; 61
    169a:	de b7       	in	r29, 0x3e	; 62
    169c:	c0 54       	subi	r28, 0x40	; 64
    169e:	d1 09       	sbc	r29, r1
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	f8 94       	cli
    16a4:	de bf       	out	0x3e, r29	; 62
    16a6:	0f be       	out	0x3f, r0	; 63
    16a8:	cd bf       	out	0x3d, r28	; 61
    16aa:	6c 01       	movw	r12, r24
    16ac:	7b 01       	movw	r14, r22
    16ae:	8a 01       	movw	r16, r20
    16b0:	59 01       	movw	r10, r18
    16b2:	60 e2       	ldi	r22, 0x20	; 32
    16b4:	ca 01       	movw	r24, r20
    16b6:	fa d8       	rcall	.-3596   	; 0x8ac <uECC_vli_isZero>
    16b8:	81 11       	cpse	r24, r1
    16ba:	71 c0       	rjmp	.+226    	; 0x179e <double_jacobian_secp256k1+0x11e>
    16bc:	a5 01       	movw	r20, r10
    16be:	b7 01       	movw	r22, r14
    16c0:	ce 01       	movw	r24, r28
    16c2:	81 96       	adiw	r24, 0x21	; 33
    16c4:	6e de       	rcall	.-804    	; 0x13a2 <uECC_vli_modSquare_fast>
    16c6:	95 01       	movw	r18, r10
    16c8:	ae 01       	movw	r20, r28
    16ca:	4f 5d       	subi	r20, 0xDF	; 223
    16cc:	5f 4f       	sbci	r21, 0xFF	; 255
    16ce:	b6 01       	movw	r22, r12
    16d0:	ce 01       	movw	r24, r28
    16d2:	01 96       	adiw	r24, 0x01	; 1
    16d4:	37 de       	rcall	.-914    	; 0x1344 <uECC_vli_modMult_fast>
    16d6:	a5 01       	movw	r20, r10
    16d8:	b6 01       	movw	r22, r12
    16da:	c6 01       	movw	r24, r12
    16dc:	62 de       	rcall	.-828    	; 0x13a2 <uECC_vli_modSquare_fast>
    16de:	a5 01       	movw	r20, r10
    16e0:	be 01       	movw	r22, r28
    16e2:	6f 5d       	subi	r22, 0xDF	; 223
    16e4:	7f 4f       	sbci	r23, 0xFF	; 255
    16e6:	cb 01       	movw	r24, r22
    16e8:	5c de       	rcall	.-840    	; 0x13a2 <uECC_vli_modSquare_fast>
    16ea:	95 01       	movw	r18, r10
    16ec:	a8 01       	movw	r20, r16
    16ee:	b7 01       	movw	r22, r14
    16f0:	c8 01       	movw	r24, r16
    16f2:	28 de       	rcall	.-944    	; 0x1344 <uECC_vli_modMult_fast>
    16f4:	45 01       	movw	r8, r10
    16f6:	24 e0       	ldi	r18, 0x04	; 4
    16f8:	82 0e       	add	r8, r18
    16fa:	91 1c       	adc	r9, r1
    16fc:	00 e2       	ldi	r16, 0x20	; 32
    16fe:	94 01       	movw	r18, r8
    1700:	a6 01       	movw	r20, r12
    1702:	b6 01       	movw	r22, r12
    1704:	c7 01       	movw	r24, r14
    1706:	67 dc       	rcall	.-1842   	; 0xfd6 <uECC_vli_modAdd>
    1708:	94 01       	movw	r18, r8
    170a:	a6 01       	movw	r20, r12
    170c:	b7 01       	movw	r22, r14
    170e:	c7 01       	movw	r24, r14
    1710:	62 dc       	rcall	.-1852   	; 0xfd6 <uECC_vli_modAdd>
    1712:	60 e0       	ldi	r22, 0x00	; 0
    1714:	70 e0       	ldi	r23, 0x00	; 0
    1716:	c7 01       	movw	r24, r14
    1718:	df d8       	rcall	.-3650   	; 0x8d8 <uECC_vli_testBit>
    171a:	88 23       	and	r24, r24
    171c:	a1 f0       	breq	.+40     	; 0x1746 <double_jacobian_secp256k1+0xc6>
    171e:	20 e2       	ldi	r18, 0x20	; 32
    1720:	a4 01       	movw	r20, r8
    1722:	b7 01       	movw	r22, r14
    1724:	c7 01       	movw	r24, r14
    1726:	0e 94 78 02 	call	0x4f0	; 0x4f0 <uECC_vli_add>
    172a:	18 2f       	mov	r17, r24
    172c:	60 e2       	ldi	r22, 0x20	; 32
    172e:	c7 01       	movw	r24, r14
    1730:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    1734:	e0 e8       	ldi	r30, 0x80	; 128
    1736:	1e 9f       	mul	r17, r30
    1738:	c0 01       	movw	r24, r0
    173a:	11 24       	eor	r1, r1
    173c:	f7 01       	movw	r30, r14
    173e:	97 8d       	ldd	r25, Z+31	; 0x1f
    1740:	89 2b       	or	r24, r25
    1742:	87 8f       	std	Z+31, r24	; 0x1f
    1744:	04 c0       	rjmp	.+8      	; 0x174e <double_jacobian_secp256k1+0xce>
    1746:	60 e2       	ldi	r22, 0x20	; 32
    1748:	c7 01       	movw	r24, r14
    174a:	0e 94 06 02 	call	0x40c	; 0x40c <uECC_vli_rshift1>
    174e:	a5 01       	movw	r20, r10
    1750:	b7 01       	movw	r22, r14
    1752:	c6 01       	movw	r24, r12
    1754:	26 de       	rcall	.-948    	; 0x13a2 <uECC_vli_modSquare_fast>
    1756:	00 e2       	ldi	r16, 0x20	; 32
    1758:	94 01       	movw	r18, r8
    175a:	ae 01       	movw	r20, r28
    175c:	4f 5f       	subi	r20, 0xFF	; 255
    175e:	5f 4f       	sbci	r21, 0xFF	; 255
    1760:	b6 01       	movw	r22, r12
    1762:	c6 01       	movw	r24, r12
    1764:	54 dc       	rcall	.-1880   	; 0x100e <uECC_vli_modSub>
    1766:	94 01       	movw	r18, r8
    1768:	ae 01       	movw	r20, r28
    176a:	4f 5f       	subi	r20, 0xFF	; 255
    176c:	5f 4f       	sbci	r21, 0xFF	; 255
    176e:	b6 01       	movw	r22, r12
    1770:	c6 01       	movw	r24, r12
    1772:	4d dc       	rcall	.-1894   	; 0x100e <uECC_vli_modSub>
    1774:	94 01       	movw	r18, r8
    1776:	a6 01       	movw	r20, r12
    1778:	be 01       	movw	r22, r28
    177a:	6f 5f       	subi	r22, 0xFF	; 255
    177c:	7f 4f       	sbci	r23, 0xFF	; 255
    177e:	cb 01       	movw	r24, r22
    1780:	46 dc       	rcall	.-1908   	; 0x100e <uECC_vli_modSub>
    1782:	95 01       	movw	r18, r10
    1784:	ae 01       	movw	r20, r28
    1786:	4f 5f       	subi	r20, 0xFF	; 255
    1788:	5f 4f       	sbci	r21, 0xFF	; 255
    178a:	b7 01       	movw	r22, r14
    178c:	c7 01       	movw	r24, r14
    178e:	da dd       	rcall	.-1100   	; 0x1344 <uECC_vli_modMult_fast>
    1790:	94 01       	movw	r18, r8
    1792:	ae 01       	movw	r20, r28
    1794:	4f 5d       	subi	r20, 0xDF	; 223
    1796:	5f 4f       	sbci	r21, 0xFF	; 255
    1798:	b7 01       	movw	r22, r14
    179a:	c7 01       	movw	r24, r14
    179c:	38 dc       	rcall	.-1936   	; 0x100e <uECC_vli_modSub>
    179e:	c0 5c       	subi	r28, 0xC0	; 192
    17a0:	df 4f       	sbci	r29, 0xFF	; 255
    17a2:	0f b6       	in	r0, 0x3f	; 63
    17a4:	f8 94       	cli
    17a6:	de bf       	out	0x3e, r29	; 62
    17a8:	0f be       	out	0x3f, r0	; 63
    17aa:	cd bf       	out	0x3d, r28	; 61
    17ac:	df 91       	pop	r29
    17ae:	cf 91       	pop	r28
    17b0:	1f 91       	pop	r17
    17b2:	0f 91       	pop	r16
    17b4:	ff 90       	pop	r15
    17b6:	ef 90       	pop	r14
    17b8:	df 90       	pop	r13
    17ba:	cf 90       	pop	r12
    17bc:	bf 90       	pop	r11
    17be:	af 90       	pop	r10
    17c0:	9f 90       	pop	r9
    17c2:	8f 90       	pop	r8
    17c4:	08 95       	ret

000017c6 <x_side_secp256k1>:
    17c6:	ef 92       	push	r14
    17c8:	ff 92       	push	r15
    17ca:	0f 93       	push	r16
    17cc:	1f 93       	push	r17
    17ce:	cf 93       	push	r28
    17d0:	df 93       	push	r29
    17d2:	7c 01       	movw	r14, r24
    17d4:	8b 01       	movw	r16, r22
    17d6:	ea 01       	movw	r28, r20
    17d8:	e4 dd       	rcall	.-1080   	; 0x13a2 <uECC_vli_modSquare_fast>
    17da:	9e 01       	movw	r18, r28
    17dc:	a8 01       	movw	r20, r16
    17de:	b7 01       	movw	r22, r14
    17e0:	c7 01       	movw	r24, r14
    17e2:	b0 dd       	rcall	.-1184   	; 0x1344 <uECC_vli_modMult_fast>
    17e4:	9e 01       	movw	r18, r28
    17e6:	2c 5f       	subi	r18, 0xFC	; 252
    17e8:	3f 4f       	sbci	r19, 0xFF	; 255
    17ea:	ae 01       	movw	r20, r28
    17ec:	4c 57       	subi	r20, 0x7C	; 124
    17ee:	5f 4f       	sbci	r21, 0xFF	; 255
    17f0:	00 e2       	ldi	r16, 0x20	; 32
    17f2:	b7 01       	movw	r22, r14
    17f4:	c7 01       	movw	r24, r14
    17f6:	ef db       	rcall	.-2082   	; 0xfd6 <uECC_vli_modAdd>
    17f8:	df 91       	pop	r29
    17fa:	cf 91       	pop	r28
    17fc:	1f 91       	pop	r17
    17fe:	0f 91       	pop	r16
    1800:	ff 90       	pop	r15
    1802:	ef 90       	pop	r14
    1804:	08 95       	ret

00001806 <apply_z>:
    1806:	af 92       	push	r10
    1808:	bf 92       	push	r11
    180a:	cf 92       	push	r12
    180c:	df 92       	push	r13
    180e:	ef 92       	push	r14
    1810:	ff 92       	push	r15
    1812:	0f 93       	push	r16
    1814:	1f 93       	push	r17
    1816:	cf 93       	push	r28
    1818:	df 93       	push	r29
    181a:	cd b7       	in	r28, 0x3d	; 61
    181c:	de b7       	in	r29, 0x3e	; 62
    181e:	a0 97       	sbiw	r28, 0x20	; 32
    1820:	0f b6       	in	r0, 0x3f	; 63
    1822:	f8 94       	cli
    1824:	de bf       	out	0x3e, r29	; 62
    1826:	0f be       	out	0x3f, r0	; 63
    1828:	cd bf       	out	0x3d, r28	; 61
    182a:	5c 01       	movw	r10, r24
    182c:	7b 01       	movw	r14, r22
    182e:	6a 01       	movw	r12, r20
    1830:	89 01       	movw	r16, r18
    1832:	a9 01       	movw	r20, r18
    1834:	b6 01       	movw	r22, r12
    1836:	ce 01       	movw	r24, r28
    1838:	01 96       	adiw	r24, 0x01	; 1
    183a:	b3 dd       	rcall	.-1178   	; 0x13a2 <uECC_vli_modSquare_fast>
    183c:	98 01       	movw	r18, r16
    183e:	ae 01       	movw	r20, r28
    1840:	4f 5f       	subi	r20, 0xFF	; 255
    1842:	5f 4f       	sbci	r21, 0xFF	; 255
    1844:	b5 01       	movw	r22, r10
    1846:	c5 01       	movw	r24, r10
    1848:	7d dd       	rcall	.-1286   	; 0x1344 <uECC_vli_modMult_fast>
    184a:	98 01       	movw	r18, r16
    184c:	a6 01       	movw	r20, r12
    184e:	be 01       	movw	r22, r28
    1850:	6f 5f       	subi	r22, 0xFF	; 255
    1852:	7f 4f       	sbci	r23, 0xFF	; 255
    1854:	cb 01       	movw	r24, r22
    1856:	76 dd       	rcall	.-1300   	; 0x1344 <uECC_vli_modMult_fast>
    1858:	98 01       	movw	r18, r16
    185a:	ae 01       	movw	r20, r28
    185c:	4f 5f       	subi	r20, 0xFF	; 255
    185e:	5f 4f       	sbci	r21, 0xFF	; 255
    1860:	b7 01       	movw	r22, r14
    1862:	c7 01       	movw	r24, r14
    1864:	6f dd       	rcall	.-1314   	; 0x1344 <uECC_vli_modMult_fast>
    1866:	a0 96       	adiw	r28, 0x20	; 32
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	de bf       	out	0x3e, r29	; 62
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	cd bf       	out	0x3d, r28	; 61
    1872:	df 91       	pop	r29
    1874:	cf 91       	pop	r28
    1876:	1f 91       	pop	r17
    1878:	0f 91       	pop	r16
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	df 90       	pop	r13
    1880:	cf 90       	pop	r12
    1882:	bf 90       	pop	r11
    1884:	af 90       	pop	r10
    1886:	08 95       	ret

00001888 <XYcZ_add>:
    1888:	4f 92       	push	r4
    188a:	5f 92       	push	r5
    188c:	6f 92       	push	r6
    188e:	7f 92       	push	r7
    1890:	8f 92       	push	r8
    1892:	9f 92       	push	r9
    1894:	af 92       	push	r10
    1896:	bf 92       	push	r11
    1898:	cf 92       	push	r12
    189a:	df 92       	push	r13
    189c:	ef 92       	push	r14
    189e:	ff 92       	push	r15
    18a0:	0f 93       	push	r16
    18a2:	1f 93       	push	r17
    18a4:	cf 93       	push	r28
    18a6:	df 93       	push	r29
    18a8:	cd b7       	in	r28, 0x3d	; 61
    18aa:	de b7       	in	r29, 0x3e	; 62
    18ac:	a0 97       	sbiw	r28, 0x20	; 32
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	f8 94       	cli
    18b2:	de bf       	out	0x3e, r29	; 62
    18b4:	0f be       	out	0x3f, r0	; 63
    18b6:	cd bf       	out	0x3d, r28	; 61
    18b8:	3c 01       	movw	r6, r24
    18ba:	2b 01       	movw	r4, r22
    18bc:	7a 01       	movw	r14, r20
    18be:	59 01       	movw	r10, r18
    18c0:	68 01       	movw	r12, r16
    18c2:	f8 01       	movw	r30, r16
    18c4:	10 81       	ld	r17, Z
    18c6:	46 01       	movw	r8, r12
    18c8:	f4 e0       	ldi	r31, 0x04	; 4
    18ca:	8f 0e       	add	r8, r31
    18cc:	91 1c       	adc	r9, r1
    18ce:	01 2f       	mov	r16, r17
    18d0:	94 01       	movw	r18, r8
    18d2:	ac 01       	movw	r20, r24
    18d4:	b7 01       	movw	r22, r14
    18d6:	ce 01       	movw	r24, r28
    18d8:	01 96       	adiw	r24, 0x01	; 1
    18da:	99 db       	rcall	.-2254   	; 0x100e <uECC_vli_modSub>
    18dc:	a6 01       	movw	r20, r12
    18de:	be 01       	movw	r22, r28
    18e0:	6f 5f       	subi	r22, 0xFF	; 255
    18e2:	7f 4f       	sbci	r23, 0xFF	; 255
    18e4:	cb 01       	movw	r24, r22
    18e6:	5d dd       	rcall	.-1350   	; 0x13a2 <uECC_vli_modSquare_fast>
    18e8:	96 01       	movw	r18, r12
    18ea:	ae 01       	movw	r20, r28
    18ec:	4f 5f       	subi	r20, 0xFF	; 255
    18ee:	5f 4f       	sbci	r21, 0xFF	; 255
    18f0:	b3 01       	movw	r22, r6
    18f2:	c3 01       	movw	r24, r6
    18f4:	27 dd       	rcall	.-1458   	; 0x1344 <uECC_vli_modMult_fast>
    18f6:	96 01       	movw	r18, r12
    18f8:	ae 01       	movw	r20, r28
    18fa:	4f 5f       	subi	r20, 0xFF	; 255
    18fc:	5f 4f       	sbci	r21, 0xFF	; 255
    18fe:	b7 01       	movw	r22, r14
    1900:	c7 01       	movw	r24, r14
    1902:	20 dd       	rcall	.-1472   	; 0x1344 <uECC_vli_modMult_fast>
    1904:	94 01       	movw	r18, r8
    1906:	a2 01       	movw	r20, r4
    1908:	b5 01       	movw	r22, r10
    190a:	c5 01       	movw	r24, r10
    190c:	80 db       	rcall	.-2304   	; 0x100e <uECC_vli_modSub>
    190e:	a6 01       	movw	r20, r12
    1910:	b5 01       	movw	r22, r10
    1912:	ce 01       	movw	r24, r28
    1914:	01 96       	adiw	r24, 0x01	; 1
    1916:	45 dd       	rcall	.-1398   	; 0x13a2 <uECC_vli_modSquare_fast>
    1918:	94 01       	movw	r18, r8
    191a:	a3 01       	movw	r20, r6
    191c:	be 01       	movw	r22, r28
    191e:	6f 5f       	subi	r22, 0xFF	; 255
    1920:	7f 4f       	sbci	r23, 0xFF	; 255
    1922:	cb 01       	movw	r24, r22
    1924:	74 db       	rcall	.-2328   	; 0x100e <uECC_vli_modSub>
    1926:	94 01       	movw	r18, r8
    1928:	a7 01       	movw	r20, r14
    192a:	be 01       	movw	r22, r28
    192c:	6f 5f       	subi	r22, 0xFF	; 255
    192e:	7f 4f       	sbci	r23, 0xFF	; 255
    1930:	cb 01       	movw	r24, r22
    1932:	6d db       	rcall	.-2342   	; 0x100e <uECC_vli_modSub>
    1934:	94 01       	movw	r18, r8
    1936:	a3 01       	movw	r20, r6
    1938:	b7 01       	movw	r22, r14
    193a:	c7 01       	movw	r24, r14
    193c:	68 db       	rcall	.-2352   	; 0x100e <uECC_vli_modSub>
    193e:	96 01       	movw	r18, r12
    1940:	a7 01       	movw	r20, r14
    1942:	b2 01       	movw	r22, r4
    1944:	c2 01       	movw	r24, r4
    1946:	fe dc       	rcall	.-1540   	; 0x1344 <uECC_vli_modMult_fast>
    1948:	94 01       	movw	r18, r8
    194a:	ae 01       	movw	r20, r28
    194c:	4f 5f       	subi	r20, 0xFF	; 255
    194e:	5f 4f       	sbci	r21, 0xFF	; 255
    1950:	b3 01       	movw	r22, r6
    1952:	c7 01       	movw	r24, r14
    1954:	5c db       	rcall	.-2376   	; 0x100e <uECC_vli_modSub>
    1956:	96 01       	movw	r18, r12
    1958:	a7 01       	movw	r20, r14
    195a:	b5 01       	movw	r22, r10
    195c:	c5 01       	movw	r24, r10
    195e:	f2 dc       	rcall	.-1564   	; 0x1344 <uECC_vli_modMult_fast>
    1960:	94 01       	movw	r18, r8
    1962:	a2 01       	movw	r20, r4
    1964:	b5 01       	movw	r22, r10
    1966:	c5 01       	movw	r24, r10
    1968:	52 db       	rcall	.-2396   	; 0x100e <uECC_vli_modSub>
    196a:	41 2f       	mov	r20, r17
    196c:	be 01       	movw	r22, r28
    196e:	6f 5f       	subi	r22, 0xFF	; 255
    1970:	7f 4f       	sbci	r23, 0xFF	; 255
    1972:	c7 01       	movw	r24, r14
    1974:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1978:	a0 96       	adiw	r28, 0x20	; 32
    197a:	0f b6       	in	r0, 0x3f	; 63
    197c:	f8 94       	cli
    197e:	de bf       	out	0x3e, r29	; 62
    1980:	0f be       	out	0x3f, r0	; 63
    1982:	cd bf       	out	0x3d, r28	; 61
    1984:	df 91       	pop	r29
    1986:	cf 91       	pop	r28
    1988:	1f 91       	pop	r17
    198a:	0f 91       	pop	r16
    198c:	ff 90       	pop	r15
    198e:	ef 90       	pop	r14
    1990:	df 90       	pop	r13
    1992:	cf 90       	pop	r12
    1994:	bf 90       	pop	r11
    1996:	af 90       	pop	r10
    1998:	9f 90       	pop	r9
    199a:	8f 90       	pop	r8
    199c:	7f 90       	pop	r7
    199e:	6f 90       	pop	r6
    19a0:	5f 90       	pop	r5
    19a2:	4f 90       	pop	r4
    19a4:	08 95       	ret

000019a6 <XYcZ_addC>:
    19a6:	4f 92       	push	r4
    19a8:	5f 92       	push	r5
    19aa:	6f 92       	push	r6
    19ac:	7f 92       	push	r7
    19ae:	8f 92       	push	r8
    19b0:	9f 92       	push	r9
    19b2:	af 92       	push	r10
    19b4:	bf 92       	push	r11
    19b6:	cf 92       	push	r12
    19b8:	df 92       	push	r13
    19ba:	ef 92       	push	r14
    19bc:	ff 92       	push	r15
    19be:	0f 93       	push	r16
    19c0:	1f 93       	push	r17
    19c2:	cf 93       	push	r28
    19c4:	df 93       	push	r29
    19c6:	cd b7       	in	r28, 0x3d	; 61
    19c8:	de b7       	in	r29, 0x3e	; 62
    19ca:	c0 56       	subi	r28, 0x60	; 96
    19cc:	d1 09       	sbc	r29, r1
    19ce:	0f b6       	in	r0, 0x3f	; 63
    19d0:	f8 94       	cli
    19d2:	de bf       	out	0x3e, r29	; 62
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	cd bf       	out	0x3d, r28	; 61
    19d8:	4c 01       	movw	r8, r24
    19da:	2b 01       	movw	r4, r22
    19dc:	5a 01       	movw	r10, r20
    19de:	39 01       	movw	r6, r18
    19e0:	68 01       	movw	r12, r16
    19e2:	f8 01       	movw	r30, r16
    19e4:	10 81       	ld	r17, Z
    19e6:	76 01       	movw	r14, r12
    19e8:	f4 e0       	ldi	r31, 0x04	; 4
    19ea:	ef 0e       	add	r14, r31
    19ec:	f1 1c       	adc	r15, r1
    19ee:	01 2f       	mov	r16, r17
    19f0:	97 01       	movw	r18, r14
    19f2:	ac 01       	movw	r20, r24
    19f4:	b5 01       	movw	r22, r10
    19f6:	ce 01       	movw	r24, r28
    19f8:	01 96       	adiw	r24, 0x01	; 1
    19fa:	09 db       	rcall	.-2542   	; 0x100e <uECC_vli_modSub>
    19fc:	a6 01       	movw	r20, r12
    19fe:	be 01       	movw	r22, r28
    1a00:	6f 5f       	subi	r22, 0xFF	; 255
    1a02:	7f 4f       	sbci	r23, 0xFF	; 255
    1a04:	cb 01       	movw	r24, r22
    1a06:	cd dc       	rcall	.-1638   	; 0x13a2 <uECC_vli_modSquare_fast>
    1a08:	96 01       	movw	r18, r12
    1a0a:	ae 01       	movw	r20, r28
    1a0c:	4f 5f       	subi	r20, 0xFF	; 255
    1a0e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a10:	b4 01       	movw	r22, r8
    1a12:	c4 01       	movw	r24, r8
    1a14:	97 dc       	rcall	.-1746   	; 0x1344 <uECC_vli_modMult_fast>
    1a16:	96 01       	movw	r18, r12
    1a18:	ae 01       	movw	r20, r28
    1a1a:	4f 5f       	subi	r20, 0xFF	; 255
    1a1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a1e:	b5 01       	movw	r22, r10
    1a20:	c5 01       	movw	r24, r10
    1a22:	90 dc       	rcall	.-1760   	; 0x1344 <uECC_vli_modMult_fast>
    1a24:	97 01       	movw	r18, r14
    1a26:	a2 01       	movw	r20, r4
    1a28:	b3 01       	movw	r22, r6
    1a2a:	ce 01       	movw	r24, r28
    1a2c:	01 96       	adiw	r24, 0x01	; 1
    1a2e:	d3 da       	rcall	.-2650   	; 0xfd6 <uECC_vli_modAdd>
    1a30:	97 01       	movw	r18, r14
    1a32:	a2 01       	movw	r20, r4
    1a34:	b3 01       	movw	r22, r6
    1a36:	c3 01       	movw	r24, r6
    1a38:	ea da       	rcall	.-2604   	; 0x100e <uECC_vli_modSub>
    1a3a:	97 01       	movw	r18, r14
    1a3c:	a4 01       	movw	r20, r8
    1a3e:	b5 01       	movw	r22, r10
    1a40:	ce 01       	movw	r24, r28
    1a42:	81 96       	adiw	r24, 0x21	; 33
    1a44:	e4 da       	rcall	.-2616   	; 0x100e <uECC_vli_modSub>
    1a46:	96 01       	movw	r18, r12
    1a48:	ae 01       	movw	r20, r28
    1a4a:	4f 5d       	subi	r20, 0xDF	; 223
    1a4c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a4e:	b2 01       	movw	r22, r4
    1a50:	c2 01       	movw	r24, r4
    1a52:	78 dc       	rcall	.-1808   	; 0x1344 <uECC_vli_modMult_fast>
    1a54:	97 01       	movw	r18, r14
    1a56:	a5 01       	movw	r20, r10
    1a58:	b4 01       	movw	r22, r8
    1a5a:	ce 01       	movw	r24, r28
    1a5c:	81 96       	adiw	r24, 0x21	; 33
    1a5e:	bb da       	rcall	.-2698   	; 0xfd6 <uECC_vli_modAdd>
    1a60:	a6 01       	movw	r20, r12
    1a62:	b3 01       	movw	r22, r6
    1a64:	c5 01       	movw	r24, r10
    1a66:	9d dc       	rcall	.-1734   	; 0x13a2 <uECC_vli_modSquare_fast>
    1a68:	97 01       	movw	r18, r14
    1a6a:	ae 01       	movw	r20, r28
    1a6c:	4f 5d       	subi	r20, 0xDF	; 223
    1a6e:	5f 4f       	sbci	r21, 0xFF	; 255
    1a70:	b5 01       	movw	r22, r10
    1a72:	c5 01       	movw	r24, r10
    1a74:	cc da       	rcall	.-2664   	; 0x100e <uECC_vli_modSub>
    1a76:	97 01       	movw	r18, r14
    1a78:	a5 01       	movw	r20, r10
    1a7a:	b4 01       	movw	r22, r8
    1a7c:	ce 01       	movw	r24, r28
    1a7e:	8f 5b       	subi	r24, 0xBF	; 191
    1a80:	9f 4f       	sbci	r25, 0xFF	; 255
    1a82:	c5 da       	rcall	.-2678   	; 0x100e <uECC_vli_modSub>
    1a84:	96 01       	movw	r18, r12
    1a86:	ae 01       	movw	r20, r28
    1a88:	4f 5b       	subi	r20, 0xBF	; 191
    1a8a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a8c:	b3 01       	movw	r22, r6
    1a8e:	c3 01       	movw	r24, r6
    1a90:	59 dc       	rcall	.-1870   	; 0x1344 <uECC_vli_modMult_fast>
    1a92:	97 01       	movw	r18, r14
    1a94:	a2 01       	movw	r20, r4
    1a96:	b3 01       	movw	r22, r6
    1a98:	c3 01       	movw	r24, r6
    1a9a:	b9 da       	rcall	.-2702   	; 0x100e <uECC_vli_modSub>
    1a9c:	a6 01       	movw	r20, r12
    1a9e:	be 01       	movw	r22, r28
    1aa0:	6f 5f       	subi	r22, 0xFF	; 255
    1aa2:	7f 4f       	sbci	r23, 0xFF	; 255
    1aa4:	ce 01       	movw	r24, r28
    1aa6:	8f 5b       	subi	r24, 0xBF	; 191
    1aa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aaa:	7b dc       	rcall	.-1802   	; 0x13a2 <uECC_vli_modSquare_fast>
    1aac:	97 01       	movw	r18, r14
    1aae:	ae 01       	movw	r20, r28
    1ab0:	4f 5d       	subi	r20, 0xDF	; 223
    1ab2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ab4:	be 01       	movw	r22, r28
    1ab6:	6f 5b       	subi	r22, 0xBF	; 191
    1ab8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aba:	cb 01       	movw	r24, r22
    1abc:	a8 da       	rcall	.-2736   	; 0x100e <uECC_vli_modSub>
    1abe:	97 01       	movw	r18, r14
    1ac0:	a4 01       	movw	r20, r8
    1ac2:	be 01       	movw	r22, r28
    1ac4:	6f 5b       	subi	r22, 0xBF	; 191
    1ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac8:	ce 01       	movw	r24, r28
    1aca:	81 96       	adiw	r24, 0x21	; 33
    1acc:	a0 da       	rcall	.-2752   	; 0x100e <uECC_vli_modSub>
    1ace:	96 01       	movw	r18, r12
    1ad0:	ae 01       	movw	r20, r28
    1ad2:	4f 5f       	subi	r20, 0xFF	; 255
    1ad4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ad6:	be 01       	movw	r22, r28
    1ad8:	6f 5d       	subi	r22, 0xDF	; 223
    1ada:	7f 4f       	sbci	r23, 0xFF	; 255
    1adc:	cb 01       	movw	r24, r22
    1ade:	32 dc       	rcall	.-1948   	; 0x1344 <uECC_vli_modMult_fast>
    1ae0:	97 01       	movw	r18, r14
    1ae2:	a2 01       	movw	r20, r4
    1ae4:	be 01       	movw	r22, r28
    1ae6:	6f 5d       	subi	r22, 0xDF	; 223
    1ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aea:	c2 01       	movw	r24, r4
    1aec:	90 da       	rcall	.-2784   	; 0x100e <uECC_vli_modSub>
    1aee:	41 2f       	mov	r20, r17
    1af0:	be 01       	movw	r22, r28
    1af2:	6f 5b       	subi	r22, 0xBF	; 191
    1af4:	7f 4f       	sbci	r23, 0xFF	; 255
    1af6:	c4 01       	movw	r24, r8
    1af8:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1afc:	c0 5a       	subi	r28, 0xA0	; 160
    1afe:	df 4f       	sbci	r29, 0xFF	; 255
    1b00:	0f b6       	in	r0, 0x3f	; 63
    1b02:	f8 94       	cli
    1b04:	de bf       	out	0x3e, r29	; 62
    1b06:	0f be       	out	0x3f, r0	; 63
    1b08:	cd bf       	out	0x3d, r28	; 61
    1b0a:	df 91       	pop	r29
    1b0c:	cf 91       	pop	r28
    1b0e:	1f 91       	pop	r17
    1b10:	0f 91       	pop	r16
    1b12:	ff 90       	pop	r15
    1b14:	ef 90       	pop	r14
    1b16:	df 90       	pop	r13
    1b18:	cf 90       	pop	r12
    1b1a:	bf 90       	pop	r11
    1b1c:	af 90       	pop	r10
    1b1e:	9f 90       	pop	r9
    1b20:	8f 90       	pop	r8
    1b22:	7f 90       	pop	r7
    1b24:	6f 90       	pop	r6
    1b26:	5f 90       	pop	r5
    1b28:	4f 90       	pop	r4
    1b2a:	08 95       	ret

00001b2c <EccPoint_mult>:
    1b2c:	2f 92       	push	r2
    1b2e:	3f 92       	push	r3
    1b30:	4f 92       	push	r4
    1b32:	5f 92       	push	r5
    1b34:	6f 92       	push	r6
    1b36:	7f 92       	push	r7
    1b38:	8f 92       	push	r8
    1b3a:	9f 92       	push	r9
    1b3c:	af 92       	push	r10
    1b3e:	bf 92       	push	r11
    1b40:	cf 92       	push	r12
    1b42:	df 92       	push	r13
    1b44:	ef 92       	push	r14
    1b46:	ff 92       	push	r15
    1b48:	0f 93       	push	r16
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	cb 5c       	subi	r28, 0xCB	; 203
    1b56:	d1 09       	sbc	r29, r1
    1b58:	0f b6       	in	r0, 0x3f	; 63
    1b5a:	f8 94       	cli
    1b5c:	de bf       	out	0x3e, r29	; 62
    1b5e:	0f be       	out	0x3f, r0	; 63
    1b60:	cd bf       	out	0x3d, r28	; 61
    1b62:	c6 53       	subi	r28, 0x36	; 54
    1b64:	df 4f       	sbci	r29, 0xFF	; 255
    1b66:	99 83       	std	Y+1, r25	; 0x01
    1b68:	88 83       	st	Y, r24
    1b6a:	ca 5c       	subi	r28, 0xCA	; 202
    1b6c:	d0 40       	sbci	r29, 0x00	; 0
    1b6e:	cc 53       	subi	r28, 0x3C	; 60
    1b70:	df 4f       	sbci	r29, 0xFF	; 255
    1b72:	79 83       	std	Y+1, r23	; 0x01
    1b74:	68 83       	st	Y, r22
    1b76:	c4 5c       	subi	r28, 0xC4	; 196
    1b78:	d0 40       	sbci	r29, 0x00	; 0
    1b7a:	cf 53       	subi	r28, 0x3F	; 63
    1b7c:	df 4f       	sbci	r29, 0xFF	; 255
    1b7e:	59 83       	std	Y+1, r21	; 0x01
    1b80:	48 83       	st	Y, r20
    1b82:	c1 5c       	subi	r28, 0xC1	; 193
    1b84:	d0 40       	sbci	r29, 0x00	; 0
    1b86:	69 01       	movw	r12, r18
    1b88:	17 01       	movw	r2, r14
    1b8a:	f7 01       	movw	r30, r14
    1b8c:	f0 81       	ld	r31, Z
    1b8e:	cd 53       	subi	r28, 0x3D	; 61
    1b90:	df 4f       	sbci	r29, 0xFF	; 255
    1b92:	f8 83       	st	Y, r31
    1b94:	c3 5c       	subi	r28, 0xC3	; 195
    1b96:	d0 40       	sbci	r29, 0x00	; 0
    1b98:	4f 2f       	mov	r20, r31
    1b9a:	ce 01       	movw	r24, r28
    1b9c:	81 96       	adiw	r24, 0x21	; 33
    1b9e:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1ba2:	cd 53       	subi	r28, 0x3D	; 61
    1ba4:	df 4f       	sbci	r29, 0xFF	; 255
    1ba6:	28 81       	ld	r18, Y
    1ba8:	c3 5c       	subi	r28, 0xC3	; 195
    1baa:	d0 40       	sbci	r29, 0x00	; 0
    1bac:	02 2e       	mov	r0, r18
    1bae:	00 0c       	add	r0, r0
    1bb0:	33 0b       	sbc	r19, r19
    1bb2:	ca 53       	subi	r28, 0x3A	; 58
    1bb4:	df 4f       	sbci	r29, 0xFF	; 255
    1bb6:	39 83       	std	Y+1, r19	; 0x01
    1bb8:	28 83       	st	Y, r18
    1bba:	c6 5c       	subi	r28, 0xC6	; 198
    1bbc:	d0 40       	sbci	r29, 0x00	; 0
    1bbe:	cc 53       	subi	r28, 0x3C	; 60
    1bc0:	df 4f       	sbci	r29, 0xFF	; 255
    1bc2:	88 81       	ld	r24, Y
    1bc4:	99 81       	ldd	r25, Y+1	; 0x01
    1bc6:	c4 5c       	subi	r28, 0xC4	; 196
    1bc8:	d0 40       	sbci	r29, 0x00	; 0
    1bca:	82 0f       	add	r24, r18
    1bcc:	93 1f       	adc	r25, r19
    1bce:	c8 53       	subi	r28, 0x38	; 56
    1bd0:	df 4f       	sbci	r29, 0xFF	; 255
    1bd2:	99 83       	std	Y+1, r25	; 0x01
    1bd4:	88 83       	st	Y, r24
    1bd6:	c8 5c       	subi	r28, 0xC8	; 200
    1bd8:	d0 40       	sbci	r29, 0x00	; 0
    1bda:	cd 53       	subi	r28, 0x3D	; 61
    1bdc:	df 4f       	sbci	r29, 0xFF	; 255
    1bde:	48 81       	ld	r20, Y
    1be0:	c3 5c       	subi	r28, 0xC3	; 195
    1be2:	d0 40       	sbci	r29, 0x00	; 0
    1be4:	bc 01       	movw	r22, r24
    1be6:	ce 01       	movw	r24, r28
    1be8:	8f 59       	subi	r24, 0x9F	; 159
    1bea:	9f 4f       	sbci	r25, 0xFF	; 255
    1bec:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1bf0:	f7 01       	movw	r30, r14
    1bf2:	b0 80       	ld	r11, Z
    1bf4:	c1 14       	cp	r12, r1
    1bf6:	d1 04       	cpc	r13, r1
    1bf8:	41 f0       	breq	.+16     	; 0x1c0a <EccPoint_mult+0xde>
    1bfa:	4b 2d       	mov	r20, r11
    1bfc:	b6 01       	movw	r22, r12
    1bfe:	ce 01       	movw	r24, r28
    1c00:	8f 55       	subi	r24, 0x5F	; 95
    1c02:	9f 4f       	sbci	r25, 0xFF	; 255
    1c04:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1c08:	0c c0       	rjmp	.+24     	; 0x1c22 <EccPoint_mult+0xf6>
    1c0a:	6b 2d       	mov	r22, r11
    1c0c:	ce 01       	movw	r24, r28
    1c0e:	8f 55       	subi	r24, 0x5F	; 95
    1c10:	9f 4f       	sbci	r25, 0xFF	; 255
    1c12:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    1c16:	81 e0       	ldi	r24, 0x01	; 1
    1c18:	cf 55       	subi	r28, 0x5F	; 95
    1c1a:	df 4f       	sbci	r29, 0xFF	; 255
    1c1c:	88 83       	st	Y, r24
    1c1e:	c1 5a       	subi	r28, 0xA1	; 161
    1c20:	d0 40       	sbci	r29, 0x00	; 0
    1c22:	4b 2d       	mov	r20, r11
    1c24:	be 01       	movw	r22, r28
    1c26:	6f 5d       	subi	r22, 0xDF	; 223
    1c28:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2a:	ce 01       	movw	r24, r28
    1c2c:	01 96       	adiw	r24, 0x01	; 1
    1c2e:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1c32:	0f 2e       	mov	r0, r31
    1c34:	f1 e4       	ldi	r31, 0x41	; 65
    1c36:	ef 2e       	mov	r14, r31
    1c38:	f1 2c       	mov	r15, r1
    1c3a:	f0 2d       	mov	r31, r0
    1c3c:	ec 0e       	add	r14, r28
    1c3e:	fd 1e       	adc	r15, r29
    1c40:	f0 e2       	ldi	r31, 0x20	; 32
    1c42:	ef 0e       	add	r14, r31
    1c44:	f1 1c       	adc	r15, r1
    1c46:	4b 2d       	mov	r20, r11
    1c48:	b7 01       	movw	r22, r14
    1c4a:	ce 01       	movw	r24, r28
    1c4c:	8f 5b       	subi	r24, 0xBF	; 191
    1c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c50:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1c54:	91 01       	movw	r18, r2
    1c56:	ae 01       	movw	r20, r28
    1c58:	4f 55       	subi	r20, 0x5F	; 95
    1c5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1c5c:	b7 01       	movw	r22, r14
    1c5e:	ce 01       	movw	r24, r28
    1c60:	81 96       	adiw	r24, 0x21	; 33
    1c62:	d1 dd       	rcall	.-1118   	; 0x1806 <apply_z>
    1c64:	f1 01       	movw	r30, r2
    1c66:	ec 55       	subi	r30, 0x5C	; 92
    1c68:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6a:	01 90       	ld	r0, Z+
    1c6c:	f0 81       	ld	r31, Z
    1c6e:	e0 2d       	mov	r30, r0
    1c70:	91 01       	movw	r18, r2
    1c72:	ae 01       	movw	r20, r28
    1c74:	4f 55       	subi	r20, 0x5F	; 95
    1c76:	5f 4f       	sbci	r21, 0xFF	; 255
    1c78:	b7 01       	movw	r22, r14
    1c7a:	ce 01       	movw	r24, r28
    1c7c:	81 96       	adiw	r24, 0x21	; 33
    1c7e:	09 95       	icall
    1c80:	91 01       	movw	r18, r2
    1c82:	ae 01       	movw	r20, r28
    1c84:	4f 55       	subi	r20, 0x5F	; 95
    1c86:	5f 4f       	sbci	r21, 0xFF	; 255
    1c88:	be 01       	movw	r22, r28
    1c8a:	6f 5b       	subi	r22, 0xBF	; 191
    1c8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8e:	ce 01       	movw	r24, r28
    1c90:	01 96       	adiw	r24, 0x01	; 1
    1c92:	b9 dd       	rcall	.-1166   	; 0x1806 <apply_z>
    1c94:	58 01       	movw	r10, r16
    1c96:	22 e0       	ldi	r18, 0x02	; 2
    1c98:	a2 1a       	sub	r10, r18
    1c9a:	b1 08       	sbc	r11, r1
    1c9c:	1a 14       	cp	r1, r10
    1c9e:	1b 04       	cpc	r1, r11
    1ca0:	0c f0       	brlt	.+2      	; 0x1ca4 <EccPoint_mult+0x178>
    1ca2:	53 c0       	rjmp	.+166    	; 0x1d4a <EccPoint_mult+0x21e>
    1ca4:	44 24       	eor	r4, r4
    1ca6:	43 94       	inc	r4
    1ca8:	51 2c       	mov	r5, r1
    1caa:	b5 01       	movw	r22, r10
    1cac:	cf 53       	subi	r28, 0x3F	; 63
    1cae:	df 4f       	sbci	r29, 0xFF	; 255
    1cb0:	88 81       	ld	r24, Y
    1cb2:	99 81       	ldd	r25, Y+1	; 0x01
    1cb4:	c1 5c       	subi	r28, 0xC1	; 193
    1cb6:	d0 40       	sbci	r29, 0x00	; 0
    1cb8:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <uECC_vli_testBit>
    1cbc:	92 01       	movw	r18, r4
    1cbe:	88 23       	and	r24, r24
    1cc0:	11 f0       	breq	.+4      	; 0x1cc6 <EccPoint_mult+0x19a>
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	39 01       	movw	r6, r18
    1cc8:	66 0c       	add	r6, r6
    1cca:	77 1c       	adc	r7, r7
    1ccc:	66 0c       	add	r6, r6
    1cce:	77 1c       	adc	r7, r7
    1cd0:	66 0c       	add	r6, r6
    1cd2:	77 1c       	adc	r7, r7
    1cd4:	66 0c       	add	r6, r6
    1cd6:	77 1c       	adc	r7, r7
    1cd8:	66 0c       	add	r6, r6
    1cda:	77 1c       	adc	r7, r7
    1cdc:	0f 2e       	mov	r0, r31
    1cde:	f1 e4       	ldi	r31, 0x41	; 65
    1ce0:	cf 2e       	mov	r12, r31
    1ce2:	d1 2c       	mov	r13, r1
    1ce4:	f0 2d       	mov	r31, r0
    1ce6:	cc 0e       	add	r12, r28
    1ce8:	dd 1e       	adc	r13, r29
    1cea:	c6 0c       	add	r12, r6
    1cec:	d7 1c       	adc	r13, r7
    1cee:	81 e0       	ldi	r24, 0x01	; 1
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	8c 0f       	add	r24, r28
    1cf4:	9d 1f       	adc	r25, r29
    1cf6:	68 0e       	add	r6, r24
    1cf8:	79 1e       	adc	r7, r25
    1cfa:	72 01       	movw	r14, r4
    1cfc:	e2 1a       	sub	r14, r18
    1cfe:	f3 0a       	sbc	r15, r19
    1d00:	ee 0c       	add	r14, r14
    1d02:	ff 1c       	adc	r15, r15
    1d04:	ee 0c       	add	r14, r14
    1d06:	ff 1c       	adc	r15, r15
    1d08:	ee 0c       	add	r14, r14
    1d0a:	ff 1c       	adc	r15, r15
    1d0c:	ee 0c       	add	r14, r14
    1d0e:	ff 1c       	adc	r15, r15
    1d10:	ee 0c       	add	r14, r14
    1d12:	ff 1c       	adc	r15, r15
    1d14:	0f 2e       	mov	r0, r31
    1d16:	f1 e4       	ldi	r31, 0x41	; 65
    1d18:	8f 2e       	mov	r8, r31
    1d1a:	91 2c       	mov	r9, r1
    1d1c:	f0 2d       	mov	r31, r0
    1d1e:	8c 0e       	add	r8, r28
    1d20:	9d 1e       	adc	r9, r29
    1d22:	8e 0c       	add	r8, r14
    1d24:	9f 1c       	adc	r9, r15
    1d26:	e8 0e       	add	r14, r24
    1d28:	f9 1e       	adc	r15, r25
    1d2a:	81 01       	movw	r16, r2
    1d2c:	96 01       	movw	r18, r12
    1d2e:	a3 01       	movw	r20, r6
    1d30:	b4 01       	movw	r22, r8
    1d32:	c7 01       	movw	r24, r14
    1d34:	38 de       	rcall	.-912    	; 0x19a6 <XYcZ_addC>
    1d36:	94 01       	movw	r18, r8
    1d38:	a7 01       	movw	r20, r14
    1d3a:	b6 01       	movw	r22, r12
    1d3c:	c3 01       	movw	r24, r6
    1d3e:	a4 dd       	rcall	.-1208   	; 0x1888 <XYcZ_add>
    1d40:	91 e0       	ldi	r25, 0x01	; 1
    1d42:	a9 1a       	sub	r10, r25
    1d44:	b1 08       	sbc	r11, r1
    1d46:	09 f0       	breq	.+2      	; 0x1d4a <EccPoint_mult+0x21e>
    1d48:	b0 cf       	rjmp	.-160    	; 0x1caa <EccPoint_mult+0x17e>
    1d4a:	60 e0       	ldi	r22, 0x00	; 0
    1d4c:	70 e0       	ldi	r23, 0x00	; 0
    1d4e:	cf 53       	subi	r28, 0x3F	; 63
    1d50:	df 4f       	sbci	r29, 0xFF	; 255
    1d52:	88 81       	ld	r24, Y
    1d54:	99 81       	ldd	r25, Y+1	; 0x01
    1d56:	c1 5c       	subi	r28, 0xC1	; 193
    1d58:	d0 40       	sbci	r29, 0x00	; 0
    1d5a:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <uECC_vli_testBit>
    1d5e:	21 e0       	ldi	r18, 0x01	; 1
    1d60:	30 e0       	ldi	r19, 0x00	; 0
    1d62:	88 23       	and	r24, r24
    1d64:	11 f0       	breq	.+4      	; 0x1d6a <EccPoint_mult+0x23e>
    1d66:	20 e0       	ldi	r18, 0x00	; 0
    1d68:	30 e0       	ldi	r19, 0x00	; 0
    1d6a:	69 01       	movw	r12, r18
    1d6c:	cc 0c       	add	r12, r12
    1d6e:	dd 1c       	adc	r13, r13
    1d70:	cc 0c       	add	r12, r12
    1d72:	dd 1c       	adc	r13, r13
    1d74:	cc 0c       	add	r12, r12
    1d76:	dd 1c       	adc	r13, r13
    1d78:	cc 0c       	add	r12, r12
    1d7a:	dd 1c       	adc	r13, r13
    1d7c:	cc 0c       	add	r12, r12
    1d7e:	dd 1c       	adc	r13, r13
    1d80:	0f 2e       	mov	r0, r31
    1d82:	f1 e4       	ldi	r31, 0x41	; 65
    1d84:	8f 2e       	mov	r8, r31
    1d86:	91 2c       	mov	r9, r1
    1d88:	f0 2d       	mov	r31, r0
    1d8a:	8c 0e       	add	r8, r28
    1d8c:	9d 1e       	adc	r9, r29
    1d8e:	8c 0c       	add	r8, r12
    1d90:	9d 1c       	adc	r9, r13
    1d92:	e1 e0       	ldi	r30, 0x01	; 1
    1d94:	f0 e0       	ldi	r31, 0x00	; 0
    1d96:	ec 0f       	add	r30, r28
    1d98:	fd 1f       	adc	r31, r29
    1d9a:	ce 0e       	add	r12, r30
    1d9c:	df 1e       	adc	r13, r31
    1d9e:	81 e0       	ldi	r24, 0x01	; 1
    1da0:	90 e0       	ldi	r25, 0x00	; 0
    1da2:	7c 01       	movw	r14, r24
    1da4:	e2 1a       	sub	r14, r18
    1da6:	f3 0a       	sbc	r15, r19
    1da8:	ee 0c       	add	r14, r14
    1daa:	ff 1c       	adc	r15, r15
    1dac:	ee 0c       	add	r14, r14
    1dae:	ff 1c       	adc	r15, r15
    1db0:	ee 0c       	add	r14, r14
    1db2:	ff 1c       	adc	r15, r15
    1db4:	ee 0c       	add	r14, r14
    1db6:	ff 1c       	adc	r15, r15
    1db8:	ee 0c       	add	r14, r14
    1dba:	ff 1c       	adc	r15, r15
    1dbc:	0f 2e       	mov	r0, r31
    1dbe:	f1 e4       	ldi	r31, 0x41	; 65
    1dc0:	af 2e       	mov	r10, r31
    1dc2:	b1 2c       	mov	r11, r1
    1dc4:	f0 2d       	mov	r31, r0
    1dc6:	ac 0e       	add	r10, r28
    1dc8:	bd 1e       	adc	r11, r29
    1dca:	ae 0c       	add	r10, r14
    1dcc:	bf 1c       	adc	r11, r15
    1dce:	ee 0e       	add	r14, r30
    1dd0:	ff 1e       	adc	r15, r31
    1dd2:	81 01       	movw	r16, r2
    1dd4:	94 01       	movw	r18, r8
    1dd6:	a6 01       	movw	r20, r12
    1dd8:	b5 01       	movw	r22, r10
    1dda:	c7 01       	movw	r24, r14
    1ddc:	e4 dd       	rcall	.-1080   	; 0x19a6 <XYcZ_addC>
    1dde:	31 01       	movw	r6, r2
    1de0:	f4 e0       	ldi	r31, 0x04	; 4
    1de2:	6f 0e       	add	r6, r31
    1de4:	71 1c       	adc	r7, r1
    1de6:	cd 53       	subi	r28, 0x3D	; 61
    1de8:	df 4f       	sbci	r29, 0xFF	; 255
    1dea:	08 81       	ld	r16, Y
    1dec:	c3 5c       	subi	r28, 0xC3	; 195
    1dee:	d0 40       	sbci	r29, 0x00	; 0
    1df0:	93 01       	movw	r18, r6
    1df2:	ae 01       	movw	r20, r28
    1df4:	4f 5f       	subi	r20, 0xFF	; 255
    1df6:	5f 4f       	sbci	r21, 0xFF	; 255
    1df8:	be 01       	movw	r22, r28
    1dfa:	6f 5d       	subi	r22, 0xDF	; 223
    1dfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfe:	ce 01       	movw	r24, r28
    1e00:	8f 57       	subi	r24, 0x7F	; 127
    1e02:	9f 4f       	sbci	r25, 0xFF	; 255
    1e04:	04 d9       	rcall	.-3576   	; 0x100e <uECC_vli_modSub>
    1e06:	91 01       	movw	r18, r2
    1e08:	a5 01       	movw	r20, r10
    1e0a:	be 01       	movw	r22, r28
    1e0c:	6f 57       	subi	r22, 0x7F	; 127
    1e0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e10:	cb 01       	movw	r24, r22
    1e12:	98 da       	rcall	.-2768   	; 0x1344 <uECC_vli_modMult_fast>
    1e14:	91 01       	movw	r18, r2
    1e16:	cc 53       	subi	r28, 0x3C	; 60
    1e18:	df 4f       	sbci	r29, 0xFF	; 255
    1e1a:	48 81       	ld	r20, Y
    1e1c:	59 81       	ldd	r21, Y+1	; 0x01
    1e1e:	c4 5c       	subi	r28, 0xC4	; 196
    1e20:	d0 40       	sbci	r29, 0x00	; 0
    1e22:	be 01       	movw	r22, r28
    1e24:	6f 57       	subi	r22, 0x7F	; 127
    1e26:	7f 4f       	sbci	r23, 0xFF	; 255
    1e28:	cb 01       	movw	r24, r22
    1e2a:	8c da       	rcall	.-2792   	; 0x1344 <uECC_vli_modMult_fast>
    1e2c:	cd 53       	subi	r28, 0x3D	; 61
    1e2e:	df 4f       	sbci	r29, 0xFF	; 255
    1e30:	28 81       	ld	r18, Y
    1e32:	c3 5c       	subi	r28, 0xC3	; 195
    1e34:	d0 40       	sbci	r29, 0x00	; 0
    1e36:	a3 01       	movw	r20, r6
    1e38:	be 01       	movw	r22, r28
    1e3a:	6f 57       	subi	r22, 0x7F	; 127
    1e3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e3e:	cb 01       	movw	r24, r22
    1e40:	db da       	rcall	.-2634   	; 0x13f8 <uECC_vli_modInv>
    1e42:	91 01       	movw	r18, r2
    1e44:	c8 53       	subi	r28, 0x38	; 56
    1e46:	df 4f       	sbci	r29, 0xFF	; 255
    1e48:	48 81       	ld	r20, Y
    1e4a:	59 81       	ldd	r21, Y+1	; 0x01
    1e4c:	c8 5c       	subi	r28, 0xC8	; 200
    1e4e:	d0 40       	sbci	r29, 0x00	; 0
    1e50:	be 01       	movw	r22, r28
    1e52:	6f 57       	subi	r22, 0x7F	; 127
    1e54:	7f 4f       	sbci	r23, 0xFF	; 255
    1e56:	cb 01       	movw	r24, r22
    1e58:	75 da       	rcall	.-2838   	; 0x1344 <uECC_vli_modMult_fast>
    1e5a:	91 01       	movw	r18, r2
    1e5c:	a7 01       	movw	r20, r14
    1e5e:	be 01       	movw	r22, r28
    1e60:	6f 57       	subi	r22, 0x7F	; 127
    1e62:	7f 4f       	sbci	r23, 0xFF	; 255
    1e64:	cb 01       	movw	r24, r22
    1e66:	6e da       	rcall	.-2852   	; 0x1344 <uECC_vli_modMult_fast>
    1e68:	81 01       	movw	r16, r2
    1e6a:	95 01       	movw	r18, r10
    1e6c:	a7 01       	movw	r20, r14
    1e6e:	b4 01       	movw	r22, r8
    1e70:	c6 01       	movw	r24, r12
    1e72:	0a dd       	rcall	.-1516   	; 0x1888 <XYcZ_add>
    1e74:	91 01       	movw	r18, r2
    1e76:	ae 01       	movw	r20, r28
    1e78:	4f 57       	subi	r20, 0x7F	; 127
    1e7a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e7c:	be 01       	movw	r22, r28
    1e7e:	6f 5b       	subi	r22, 0xBF	; 191
    1e80:	7f 4f       	sbci	r23, 0xFF	; 255
    1e82:	ce 01       	movw	r24, r28
    1e84:	01 96       	adiw	r24, 0x01	; 1
    1e86:	bf dc       	rcall	.-1666   	; 0x1806 <apply_z>
    1e88:	cd 53       	subi	r28, 0x3D	; 61
    1e8a:	df 4f       	sbci	r29, 0xFF	; 255
    1e8c:	48 81       	ld	r20, Y
    1e8e:	c3 5c       	subi	r28, 0xC3	; 195
    1e90:	d0 40       	sbci	r29, 0x00	; 0
    1e92:	be 01       	movw	r22, r28
    1e94:	6f 5f       	subi	r22, 0xFF	; 255
    1e96:	7f 4f       	sbci	r23, 0xFF	; 255
    1e98:	c6 53       	subi	r28, 0x36	; 54
    1e9a:	df 4f       	sbci	r29, 0xFF	; 255
    1e9c:	88 81       	ld	r24, Y
    1e9e:	99 81       	ldd	r25, Y+1	; 0x01
    1ea0:	ca 5c       	subi	r28, 0xCA	; 202
    1ea2:	d0 40       	sbci	r29, 0x00	; 0
    1ea4:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1ea8:	cd 53       	subi	r28, 0x3D	; 61
    1eaa:	df 4f       	sbci	r29, 0xFF	; 255
    1eac:	48 81       	ld	r20, Y
    1eae:	c3 5c       	subi	r28, 0xC3	; 195
    1eb0:	d0 40       	sbci	r29, 0x00	; 0
    1eb2:	be 01       	movw	r22, r28
    1eb4:	6f 5b       	subi	r22, 0xBF	; 191
    1eb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1eb8:	c6 53       	subi	r28, 0x36	; 54
    1eba:	df 4f       	sbci	r29, 0xFF	; 255
    1ebc:	88 81       	ld	r24, Y
    1ebe:	99 81       	ldd	r25, Y+1	; 0x01
    1ec0:	ca 5c       	subi	r28, 0xCA	; 202
    1ec2:	d0 40       	sbci	r29, 0x00	; 0
    1ec4:	ca 53       	subi	r28, 0x3A	; 58
    1ec6:	df 4f       	sbci	r29, 0xFF	; 255
    1ec8:	28 81       	ld	r18, Y
    1eca:	39 81       	ldd	r19, Y+1	; 0x01
    1ecc:	c6 5c       	subi	r28, 0xC6	; 198
    1ece:	d0 40       	sbci	r29, 0x00	; 0
    1ed0:	82 0f       	add	r24, r18
    1ed2:	93 1f       	adc	r25, r19
    1ed4:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    1ed8:	c5 53       	subi	r28, 0x35	; 53
    1eda:	df 4f       	sbci	r29, 0xFF	; 255
    1edc:	0f b6       	in	r0, 0x3f	; 63
    1ede:	f8 94       	cli
    1ee0:	de bf       	out	0x3e, r29	; 62
    1ee2:	0f be       	out	0x3f, r0	; 63
    1ee4:	cd bf       	out	0x3d, r28	; 61
    1ee6:	df 91       	pop	r29
    1ee8:	cf 91       	pop	r28
    1eea:	1f 91       	pop	r17
    1eec:	0f 91       	pop	r16
    1eee:	ff 90       	pop	r15
    1ef0:	ef 90       	pop	r14
    1ef2:	df 90       	pop	r13
    1ef4:	cf 90       	pop	r12
    1ef6:	bf 90       	pop	r11
    1ef8:	af 90       	pop	r10
    1efa:	9f 90       	pop	r9
    1efc:	8f 90       	pop	r8
    1efe:	7f 90       	pop	r7
    1f00:	6f 90       	pop	r6
    1f02:	5f 90       	pop	r5
    1f04:	4f 90       	pop	r4
    1f06:	3f 90       	pop	r3
    1f08:	2f 90       	pop	r2
    1f0a:	08 95       	ret

00001f0c <regularize_k>:
    1f0c:	af 92       	push	r10
    1f0e:	bf 92       	push	r11
    1f10:	cf 92       	push	r12
    1f12:	df 92       	push	r13
    1f14:	ef 92       	push	r14
    1f16:	ff 92       	push	r15
    1f18:	0f 93       	push	r16
    1f1a:	1f 93       	push	r17
    1f1c:	cf 93       	push	r28
    1f1e:	df 93       	push	r29
    1f20:	7b 01       	movw	r14, r22
    1f22:	5a 01       	movw	r10, r20
    1f24:	f9 01       	movw	r30, r18
    1f26:	c2 80       	ldd	r12, Z+2	; 0x02
    1f28:	d3 80       	ldd	r13, Z+3	; 0x03
    1f2a:	a6 01       	movw	r20, r12
    1f2c:	49 5f       	subi	r20, 0xF9	; 249
    1f2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f30:	ea 01       	movw	r28, r20
    1f32:	dd 23       	and	r29, r29
    1f34:	0c f4       	brge	.+2      	; 0x1f38 <regularize_k+0x2c>
    1f36:	27 96       	adiw	r28, 0x07	; 7
    1f38:	d5 95       	asr	r29
    1f3a:	c7 95       	ror	r28
    1f3c:	d5 95       	asr	r29
    1f3e:	c7 95       	ror	r28
    1f40:	d5 95       	asr	r29
    1f42:	c7 95       	ror	r28
    1f44:	89 01       	movw	r16, r18
    1f46:	0c 5d       	subi	r16, 0xDC	; 220
    1f48:	1f 4f       	sbci	r17, 0xFF	; 255
    1f4a:	2c 2f       	mov	r18, r28
    1f4c:	a8 01       	movw	r20, r16
    1f4e:	bc 01       	movw	r22, r24
    1f50:	c7 01       	movw	r24, r14
    1f52:	0e 94 78 02 	call	0x4f0	; 0x4f0 <uECC_vli_add>
    1f56:	81 11       	cpse	r24, r1
    1f58:	11 c0       	rjmp	.+34     	; 0x1f7c <regularize_k+0x70>
    1f5a:	28 e0       	ldi	r18, 0x08	; 8
    1f5c:	c2 02       	muls	r28, r18
    1f5e:	c0 01       	movw	r24, r0
    1f60:	11 24       	eor	r1, r1
    1f62:	c8 16       	cp	r12, r24
    1f64:	d9 06       	cpc	r13, r25
    1f66:	6c f4       	brge	.+26     	; 0x1f82 <regularize_k+0x76>
    1f68:	b6 01       	movw	r22, r12
    1f6a:	c7 01       	movw	r24, r14
    1f6c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <uECC_vli_testBit>
    1f70:	91 e0       	ldi	r25, 0x01	; 1
    1f72:	81 11       	cpse	r24, r1
    1f74:	01 c0       	rjmp	.+2      	; 0x1f78 <regularize_k+0x6c>
    1f76:	90 e0       	ldi	r25, 0x00	; 0
    1f78:	d9 2e       	mov	r13, r25
    1f7a:	04 c0       	rjmp	.+8      	; 0x1f84 <regularize_k+0x78>
    1f7c:	dd 24       	eor	r13, r13
    1f7e:	d3 94       	inc	r13
    1f80:	01 c0       	rjmp	.+2      	; 0x1f84 <regularize_k+0x78>
    1f82:	d1 2c       	mov	r13, r1
    1f84:	2c 2f       	mov	r18, r28
    1f86:	a8 01       	movw	r20, r16
    1f88:	b7 01       	movw	r22, r14
    1f8a:	c5 01       	movw	r24, r10
    1f8c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <uECC_vli_add>
    1f90:	8d 2d       	mov	r24, r13
    1f92:	df 91       	pop	r29
    1f94:	cf 91       	pop	r28
    1f96:	1f 91       	pop	r17
    1f98:	0f 91       	pop	r16
    1f9a:	ff 90       	pop	r15
    1f9c:	ef 90       	pop	r14
    1f9e:	df 90       	pop	r13
    1fa0:	cf 90       	pop	r12
    1fa2:	bf 90       	pop	r11
    1fa4:	af 90       	pop	r10
    1fa6:	08 95       	ret

00001fa8 <uECC_vli_nativeToBytes>:
    1fa8:	cf 93       	push	r28
    1faa:	df 93       	push	r29
    1fac:	dc 01       	movw	r26, r24
    1fae:	16 16       	cp	r1, r22
    1fb0:	17 06       	cpc	r1, r23
    1fb2:	cc f4       	brge	.+50     	; 0x1fe6 <uECC_vli_nativeToBytes+0x3e>
    1fb4:	20 e0       	ldi	r18, 0x00	; 0
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	eb 01       	movw	r28, r22
    1fbc:	21 97       	sbiw	r28, 0x01	; 1
    1fbe:	fe 01       	movw	r30, r28
    1fc0:	e2 1b       	sub	r30, r18
    1fc2:	f3 0b       	sbc	r31, r19
    1fc4:	e4 0f       	add	r30, r20
    1fc6:	f5 1f       	adc	r31, r21
    1fc8:	20 81       	ld	r18, Z
    1fca:	fd 01       	movw	r30, r26
    1fcc:	e9 0f       	add	r30, r25
    1fce:	f1 1d       	adc	r31, r1
    1fd0:	97 fd       	sbrc	r25, 7
    1fd2:	fa 95       	dec	r31
    1fd4:	20 83       	st	Z, r18
    1fd6:	9f 5f       	subi	r25, 0xFF	; 255
    1fd8:	29 2f       	mov	r18, r25
    1fda:	09 2e       	mov	r0, r25
    1fdc:	00 0c       	add	r0, r0
    1fde:	33 0b       	sbc	r19, r19
    1fe0:	26 17       	cp	r18, r22
    1fe2:	37 07       	cpc	r19, r23
    1fe4:	64 f3       	brlt	.-40     	; 0x1fbe <uECC_vli_nativeToBytes+0x16>
    1fe6:	df 91       	pop	r29
    1fe8:	cf 91       	pop	r28
    1fea:	08 95       	ret

00001fec <uECC_generate_random_int>:
    1fec:	9f 92       	push	r9
    1fee:	af 92       	push	r10
    1ff0:	bf 92       	push	r11
    1ff2:	cf 92       	push	r12
    1ff4:	df 92       	push	r13
    1ff6:	ef 92       	push	r14
    1ff8:	ff 92       	push	r15
    1ffa:	0f 93       	push	r16
    1ffc:	1f 93       	push	r17
    1ffe:	cf 93       	push	r28
    2000:	df 93       	push	r29
    2002:	8c 01       	movw	r16, r24
    2004:	5b 01       	movw	r10, r22
    2006:	d4 2f       	mov	r29, r20
    2008:	64 2f       	mov	r22, r20
    200a:	c5 01       	movw	r24, r10
    200c:	0e 94 82 04 	call	0x904	; 0x904 <uECC_vli_numBits>
    2010:	20 91 d2 02 	lds	r18, 0x02D2	; 0x8002d2 <__data_end>
    2014:	30 91 d3 02 	lds	r19, 0x02D3	; 0x8002d3 <__data_end+0x1>
    2018:	23 2b       	or	r18, r19
    201a:	c1 f1       	breq	.+112    	; 0x208c <uECC_generate_random_int+0xa0>
    201c:	48 e0       	ldi	r20, 0x08	; 8
    201e:	d4 02       	muls	r29, r20
    2020:	90 01       	movw	r18, r0
    2022:	11 24       	eor	r1, r1
    2024:	28 1b       	sub	r18, r24
    2026:	39 0b       	sbc	r19, r25
    2028:	8f ef       	ldi	r24, 0xFF	; 255
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	02 c0       	rjmp	.+4      	; 0x2032 <uECC_generate_random_int+0x46>
    202e:	95 95       	asr	r25
    2030:	87 95       	ror	r24
    2032:	2a 95       	dec	r18
    2034:	e2 f7       	brpl	.-8      	; 0x202e <uECC_generate_random_int+0x42>
    2036:	98 2e       	mov	r9, r24
    2038:	c0 e4       	ldi	r28, 0x40	; 64
    203a:	cd 2e       	mov	r12, r29
    203c:	0d 2e       	mov	r0, r29
    203e:	00 0c       	add	r0, r0
    2040:	dd 08       	sbc	r13, r13
    2042:	76 01       	movw	r14, r12
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	e8 1a       	sub	r14, r24
    2048:	f1 08       	sbc	r15, r1
    204a:	e0 0e       	add	r14, r16
    204c:	f1 1e       	adc	r15, r17
    204e:	e0 91 d2 02 	lds	r30, 0x02D2	; 0x8002d2 <__data_end>
    2052:	f0 91 d3 02 	lds	r31, 0x02D3	; 0x8002d3 <__data_end+0x1>
    2056:	b6 01       	movw	r22, r12
    2058:	c8 01       	movw	r24, r16
    205a:	09 95       	icall
    205c:	00 97       	sbiw	r24, 0x00	; 0
    205e:	d9 f0       	breq	.+54     	; 0x2096 <uECC_generate_random_int+0xaa>
    2060:	f7 01       	movw	r30, r14
    2062:	80 81       	ld	r24, Z
    2064:	89 21       	and	r24, r9
    2066:	80 83       	st	Z, r24
    2068:	6d 2f       	mov	r22, r29
    206a:	c8 01       	movw	r24, r16
    206c:	0e 94 56 04 	call	0x8ac	; 0x8ac <uECC_vli_isZero>
    2070:	81 11       	cpse	r24, r1
    2072:	07 c0       	rjmp	.+14     	; 0x2082 <uECC_generate_random_int+0x96>
    2074:	4d 2f       	mov	r20, r29
    2076:	b8 01       	movw	r22, r16
    2078:	c5 01       	movw	r24, r10
    207a:	0e 94 be 07 	call	0xf7c	; 0xf7c <uECC_vli_cmp>
    207e:	81 30       	cpi	r24, 0x01	; 1
    2080:	41 f0       	breq	.+16     	; 0x2092 <uECC_generate_random_int+0xa6>
    2082:	c1 50       	subi	r28, 0x01	; 1
    2084:	21 f7       	brne	.-56     	; 0x204e <uECC_generate_random_int+0x62>
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	05 c0       	rjmp	.+10     	; 0x2096 <uECC_generate_random_int+0xaa>
    208c:	80 e0       	ldi	r24, 0x00	; 0
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	02 c0       	rjmp	.+4      	; 0x2096 <uECC_generate_random_int+0xaa>
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	df 91       	pop	r29
    2098:	cf 91       	pop	r28
    209a:	1f 91       	pop	r17
    209c:	0f 91       	pop	r16
    209e:	ff 90       	pop	r15
    20a0:	ef 90       	pop	r14
    20a2:	df 90       	pop	r13
    20a4:	cf 90       	pop	r12
    20a6:	bf 90       	pop	r11
    20a8:	af 90       	pop	r10
    20aa:	9f 90       	pop	r9
    20ac:	08 95       	ret

000020ae <bits2int>:
    20ae:	8f 92       	push	r8
    20b0:	9f 92       	push	r9
    20b2:	af 92       	push	r10
    20b4:	bf 92       	push	r11
    20b6:	cf 92       	push	r12
    20b8:	df 92       	push	r13
    20ba:	ef 92       	push	r14
    20bc:	ff 92       	push	r15
    20be:	0f 93       	push	r16
    20c0:	1f 93       	push	r17
    20c2:	cf 93       	push	r28
    20c4:	df 93       	push	r29
    20c6:	8c 01       	movw	r16, r24
    20c8:	4b 01       	movw	r8, r22
    20ca:	79 01       	movw	r14, r18
    20cc:	f9 01       	movw	r30, r18
    20ce:	82 81       	ldd	r24, Z+2	; 0x02
    20d0:	93 81       	ldd	r25, Z+3	; 0x03
    20d2:	07 96       	adiw	r24, 0x07	; 7
    20d4:	ec 01       	movw	r28, r24
    20d6:	0a f4       	brpl	.+2      	; 0x20da <bits2int+0x2c>
    20d8:	27 96       	adiw	r28, 0x07	; 7
    20da:	d5 95       	asr	r29
    20dc:	c7 95       	ror	r28
    20de:	d5 95       	asr	r29
    20e0:	c7 95       	ror	r28
    20e2:	d5 95       	asr	r29
    20e4:	c7 95       	ror	r28
    20e6:	cc 2e       	mov	r12, r28
    20e8:	dd 2e       	mov	r13, r29
    20ea:	56 01       	movw	r10, r12
    20ec:	4c 15       	cp	r20, r12
    20ee:	5d 05       	cpc	r21, r13
    20f0:	08 f4       	brcc	.+2      	; 0x20f4 <bits2int+0x46>
    20f2:	5a 01       	movw	r10, r20
    20f4:	6c 2f       	mov	r22, r28
    20f6:	c8 01       	movw	r24, r16
    20f8:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    20fc:	a4 01       	movw	r20, r8
    20fe:	b5 01       	movw	r22, r10
    2100:	c8 01       	movw	r24, r16
    2102:	52 df       	rcall	.-348    	; 0x1fa8 <uECC_vli_nativeToBytes>
    2104:	aa 0c       	add	r10, r10
    2106:	bb 1c       	adc	r11, r11
    2108:	aa 0c       	add	r10, r10
    210a:	bb 1c       	adc	r11, r11
    210c:	aa 0c       	add	r10, r10
    210e:	bb 1c       	adc	r11, r11
    2110:	f7 01       	movw	r30, r14
    2112:	82 81       	ldd	r24, Z+2	; 0x02
    2114:	93 81       	ldd	r25, Z+3	; 0x03
    2116:	8a 15       	cp	r24, r10
    2118:	9b 05       	cpc	r25, r11
    211a:	a0 f5       	brcc	.+104    	; 0x2184 <bits2int+0xd6>
    211c:	b5 01       	movw	r22, r10
    211e:	68 1b       	sub	r22, r24
    2120:	79 0b       	sbc	r23, r25
    2122:	f8 01       	movw	r30, r16
    2124:	ec 0d       	add	r30, r12
    2126:	fd 1d       	adc	r31, r13
    2128:	0e 17       	cp	r16, r30
    212a:	1f 07       	cpc	r17, r31
    212c:	d8 f4       	brcc	.+54     	; 0x2164 <bits2int+0xb6>
    212e:	d8 01       	movw	r26, r16
    2130:	d1 2c       	mov	r13, r1
    2132:	48 e0       	ldi	r20, 0x08	; 8
    2134:	50 e0       	ldi	r21, 0x00	; 0
    2136:	46 1b       	sub	r20, r22
    2138:	57 0b       	sbc	r21, r23
    213a:	92 91       	ld	r25, -Z
    213c:	29 2f       	mov	r18, r25
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	c9 01       	movw	r24, r18
    2142:	06 2e       	mov	r0, r22
    2144:	02 c0       	rjmp	.+4      	; 0x214a <bits2int+0x9c>
    2146:	95 95       	asr	r25
    2148:	87 95       	ror	r24
    214a:	0a 94       	dec	r0
    214c:	e2 f7       	brpl	.-8      	; 0x2146 <bits2int+0x98>
    214e:	8d 29       	or	r24, r13
    2150:	80 83       	st	Z, r24
    2152:	04 2e       	mov	r0, r20
    2154:	01 c0       	rjmp	.+2      	; 0x2158 <bits2int+0xaa>
    2156:	22 0f       	add	r18, r18
    2158:	0a 94       	dec	r0
    215a:	ea f7       	brpl	.-6      	; 0x2156 <bits2int+0xa8>
    215c:	d2 2e       	mov	r13, r18
    215e:	ae 17       	cp	r26, r30
    2160:	bf 07       	cpc	r27, r31
    2162:	59 f7       	brne	.-42     	; 0x213a <bits2int+0x8c>
    2164:	f4 e2       	ldi	r31, 0x24	; 36
    2166:	ef 0e       	add	r14, r31
    2168:	f1 1c       	adc	r15, r1
    216a:	4c 2f       	mov	r20, r28
    216c:	b8 01       	movw	r22, r16
    216e:	c7 01       	movw	r24, r14
    2170:	0e 94 b9 04 	call	0x972	; 0x972 <uECC_vli_cmp_unsafe>
    2174:	81 30       	cpi	r24, 0x01	; 1
    2176:	31 f0       	breq	.+12     	; 0x2184 <bits2int+0xd6>
    2178:	2c 2f       	mov	r18, r28
    217a:	a7 01       	movw	r20, r14
    217c:	b8 01       	movw	r22, r16
    217e:	c8 01       	movw	r24, r16
    2180:	0e 94 49 03 	call	0x692	; 0x692 <uECC_vli_sub>
    2184:	df 91       	pop	r29
    2186:	cf 91       	pop	r28
    2188:	1f 91       	pop	r17
    218a:	0f 91       	pop	r16
    218c:	ff 90       	pop	r15
    218e:	ef 90       	pop	r14
    2190:	df 90       	pop	r13
    2192:	cf 90       	pop	r12
    2194:	bf 90       	pop	r11
    2196:	af 90       	pop	r10
    2198:	9f 90       	pop	r9
    219a:	8f 90       	pop	r8
    219c:	08 95       	ret

0000219e <uECC_sign_with_k>:
    219e:	3f 92       	push	r3
    21a0:	4f 92       	push	r4
    21a2:	5f 92       	push	r5
    21a4:	6f 92       	push	r6
    21a6:	7f 92       	push	r7
    21a8:	8f 92       	push	r8
    21aa:	9f 92       	push	r9
    21ac:	af 92       	push	r10
    21ae:	bf 92       	push	r11
    21b0:	cf 92       	push	r12
    21b2:	df 92       	push	r13
    21b4:	ef 92       	push	r14
    21b6:	ff 92       	push	r15
    21b8:	0f 93       	push	r16
    21ba:	1f 93       	push	r17
    21bc:	cf 93       	push	r28
    21be:	df 93       	push	r29
    21c0:	cd b7       	in	r28, 0x3d	; 61
    21c2:	de b7       	in	r29, 0x3e	; 62
    21c4:	ca 58       	subi	r28, 0x8A	; 138
    21c6:	d1 09       	sbc	r29, r1
    21c8:	0f b6       	in	r0, 0x3f	; 63
    21ca:	f8 94       	cli
    21cc:	de bf       	out	0x3e, r29	; 62
    21ce:	0f be       	out	0x3f, r0	; 63
    21d0:	cd bf       	out	0x3d, r28	; 61
    21d2:	cb 57       	subi	r28, 0x7B	; 123
    21d4:	df 4f       	sbci	r29, 0xFF	; 255
    21d6:	99 83       	std	Y+1, r25	; 0x01
    21d8:	88 83       	st	Y, r24
    21da:	c5 58       	subi	r28, 0x85	; 133
    21dc:	d0 40       	sbci	r29, 0x00	; 0
    21de:	c9 57       	subi	r28, 0x79	; 121
    21e0:	df 4f       	sbci	r29, 0xFF	; 255
    21e2:	79 83       	std	Y+1, r23	; 0x01
    21e4:	68 83       	st	Y, r22
    21e6:	c7 58       	subi	r28, 0x87	; 135
    21e8:	d0 40       	sbci	r29, 0x00	; 0
    21ea:	c7 57       	subi	r28, 0x77	; 119
    21ec:	df 4f       	sbci	r29, 0xFF	; 255
    21ee:	59 83       	std	Y+1, r21	; 0x01
    21f0:	48 83       	st	Y, r20
    21f2:	c9 58       	subi	r28, 0x89	; 137
    21f4:	d0 40       	sbci	r29, 0x00	; 0
    21f6:	59 01       	movw	r10, r18
    21f8:	28 01       	movw	r4, r16
    21fa:	67 01       	movw	r12, r14
    21fc:	ce 01       	movw	r24, r28
    21fe:	01 96       	adiw	r24, 0x01	; 1
    2200:	23 96       	adiw	r28, 0x03	; 3
    2202:	9f af       	std	Y+63, r25	; 0x3f
    2204:	8e af       	std	Y+62, r24	; 0x3e
    2206:	23 97       	sbiw	r28, 0x03	; 3
    2208:	80 96       	adiw	r24, 0x20	; 32
    220a:	25 96       	adiw	r28, 0x05	; 5
    220c:	9f af       	std	Y+63, r25	; 0x3f
    220e:	8e af       	std	Y+62, r24	; 0x3e
    2210:	25 97       	sbiw	r28, 0x05	; 5
    2212:	f7 01       	movw	r30, r14
    2214:	30 80       	ld	r3, Z
    2216:	63 2d       	mov	r22, r3
    2218:	c9 01       	movw	r24, r18
    221a:	0e 94 56 04 	call	0x8ac	; 0x8ac <uECC_vli_isZero>
    221e:	81 11       	cpse	r24, r1
    2220:	f3 c0       	rjmp	.+486    	; 0x2408 <uECC_sign_with_k+0x26a>
    2222:	f7 01       	movw	r30, r14
    2224:	02 81       	ldd	r16, Z+2	; 0x02
    2226:	13 81       	ldd	r17, Z+3	; 0x03
    2228:	98 01       	movw	r18, r16
    222a:	29 5f       	subi	r18, 0xF9	; 249
    222c:	3f 4f       	sbci	r19, 0xFF	; 255
    222e:	c9 01       	movw	r24, r18
    2230:	99 23       	and	r25, r25
    2232:	0c f4       	brge	.+2      	; 0x2236 <uECC_sign_with_k+0x98>
    2234:	07 96       	adiw	r24, 0x07	; 7
    2236:	4c 01       	movw	r8, r24
    2238:	95 94       	asr	r9
    223a:	87 94       	ror	r8
    223c:	95 94       	asr	r9
    223e:	87 94       	ror	r8
    2240:	95 94       	asr	r9
    2242:	87 94       	ror	r8
    2244:	36 01       	movw	r6, r12
    2246:	f4 e2       	ldi	r31, 0x24	; 36
    2248:	6f 0e       	add	r6, r31
    224a:	71 1c       	adc	r7, r1
    224c:	48 2d       	mov	r20, r8
    224e:	b5 01       	movw	r22, r10
    2250:	c3 01       	movw	r24, r6
    2252:	0e 94 be 07 	call	0xf7c	; 0xf7c <uECC_vli_cmp>
    2256:	81 30       	cpi	r24, 0x01	; 1
    2258:	09 f0       	breq	.+2      	; 0x225c <uECC_sign_with_k+0xbe>
    225a:	d9 c0       	rjmp	.+434    	; 0x240e <uECC_sign_with_k+0x270>
    225c:	96 01       	movw	r18, r12
    225e:	ae 01       	movw	r20, r28
    2260:	4f 5d       	subi	r20, 0xDF	; 223
    2262:	5f 4f       	sbci	r21, 0xFF	; 255
    2264:	be 01       	movw	r22, r28
    2266:	6f 5f       	subi	r22, 0xFF	; 255
    2268:	7f 4f       	sbci	r23, 0xFF	; 255
    226a:	c5 01       	movw	r24, r10
    226c:	4f de       	rcall	.-866    	; 0x1f0c <regularize_k>
    226e:	0f 5f       	subi	r16, 0xFF	; 255
    2270:	1f 4f       	sbci	r17, 0xFF	; 255
    2272:	21 e0       	ldi	r18, 0x01	; 1
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	88 23       	and	r24, r24
    2278:	11 f0       	breq	.+4      	; 0x227e <uECC_sign_with_k+0xe0>
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	30 e0       	ldi	r19, 0x00	; 0
    227e:	22 0f       	add	r18, r18
    2280:	33 1f       	adc	r19, r19
    2282:	e1 e4       	ldi	r30, 0x41	; 65
    2284:	f0 e0       	ldi	r31, 0x00	; 0
    2286:	ec 0f       	add	r30, r28
    2288:	fd 1f       	adc	r31, r29
    228a:	e2 0f       	add	r30, r18
    228c:	f3 1f       	adc	r31, r19
    228e:	40 81       	ld	r20, Z
    2290:	51 81       	ldd	r21, Z+1	; 0x01
    2292:	76 01       	movw	r14, r12
    2294:	20 e0       	ldi	r18, 0x00	; 0
    2296:	30 e0       	ldi	r19, 0x00	; 0
    2298:	b6 01       	movw	r22, r12
    229a:	6c 5b       	subi	r22, 0xBC	; 188
    229c:	7f 4f       	sbci	r23, 0xFF	; 255
    229e:	ce 01       	movw	r24, r28
    22a0:	8b 5b       	subi	r24, 0xBB	; 187
    22a2:	9f 4f       	sbci	r25, 0xFF	; 255
    22a4:	43 dc       	rcall	.-1914   	; 0x1b2c <EccPoint_mult>
    22a6:	63 2d       	mov	r22, r3
    22a8:	ce 01       	movw	r24, r28
    22aa:	8b 5b       	subi	r24, 0xBB	; 187
    22ac:	9f 4f       	sbci	r25, 0xFF	; 255
    22ae:	0e 94 56 04 	call	0x8ac	; 0x8ac <uECC_vli_isZero>
    22b2:	81 11       	cpse	r24, r1
    22b4:	af c0       	rjmp	.+350    	; 0x2414 <uECC_sign_with_k+0x276>
    22b6:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <__data_end>
    22ba:	90 91 d3 02 	lds	r25, 0x02D3	; 0x8002d3 <__data_end+0x1>
    22be:	89 2b       	or	r24, r25
    22c0:	41 f4       	brne	.+16     	; 0x22d2 <uECC_sign_with_k+0x134>
    22c2:	68 2d       	mov	r22, r8
    22c4:	ce 01       	movw	r24, r28
    22c6:	01 96       	adiw	r24, 0x01	; 1
    22c8:	0e 94 92 01 	call	0x324	; 0x324 <uECC_vli_clear>
    22cc:	81 e0       	ldi	r24, 0x01	; 1
    22ce:	89 83       	std	Y+1, r24	; 0x01
    22d0:	08 c0       	rjmp	.+16     	; 0x22e2 <uECC_sign_with_k+0x144>
    22d2:	48 2d       	mov	r20, r8
    22d4:	b3 01       	movw	r22, r6
    22d6:	ce 01       	movw	r24, r28
    22d8:	01 96       	adiw	r24, 0x01	; 1
    22da:	88 de       	rcall	.-752    	; 0x1fec <uECC_generate_random_int>
    22dc:	00 97       	sbiw	r24, 0x00	; 0
    22de:	09 f4       	brne	.+2      	; 0x22e2 <uECC_sign_with_k+0x144>
    22e0:	9e c0       	rjmp	.+316    	; 0x241e <uECC_sign_with_k+0x280>
    22e2:	08 2d       	mov	r16, r8
    22e4:	93 01       	movw	r18, r6
    22e6:	ae 01       	movw	r20, r28
    22e8:	4f 5f       	subi	r20, 0xFF	; 255
    22ea:	5f 4f       	sbci	r21, 0xFF	; 255
    22ec:	b5 01       	movw	r22, r10
    22ee:	c5 01       	movw	r24, r10
    22f0:	0e 94 1d 08 	call	0x103a	; 0x103a <uECC_vli_modMult>
    22f4:	28 2d       	mov	r18, r8
    22f6:	a3 01       	movw	r20, r6
    22f8:	b5 01       	movw	r22, r10
    22fa:	c5 01       	movw	r24, r10
    22fc:	7d d8       	rcall	.-3846   	; 0x13f8 <uECC_vli_modInv>
    22fe:	93 01       	movw	r18, r6
    2300:	ae 01       	movw	r20, r28
    2302:	4f 5f       	subi	r20, 0xFF	; 255
    2304:	5f 4f       	sbci	r21, 0xFF	; 255
    2306:	b5 01       	movw	r22, r10
    2308:	c5 01       	movw	r24, r10
    230a:	0e 94 1d 08 	call	0x103a	; 0x103a <uECC_vli_modMult>
    230e:	f6 01       	movw	r30, r12
    2310:	61 81       	ldd	r22, Z+1	; 0x01
    2312:	06 2e       	mov	r0, r22
    2314:	00 0c       	add	r0, r0
    2316:	77 0b       	sbc	r23, r23
    2318:	ae 01       	movw	r20, r28
    231a:	4b 5b       	subi	r20, 0xBB	; 187
    231c:	5f 4f       	sbci	r21, 0xFF	; 255
    231e:	c2 01       	movw	r24, r4
    2320:	43 de       	rcall	.-890    	; 0x1fa8 <uECC_vli_nativeToBytes>
    2322:	f6 01       	movw	r30, r12
    2324:	82 81       	ldd	r24, Z+2	; 0x02
    2326:	93 81       	ldd	r25, Z+3	; 0x03
    2328:	07 96       	adiw	r24, 0x07	; 7
    232a:	bc 01       	movw	r22, r24
    232c:	12 f4       	brpl	.+4      	; 0x2332 <uECC_sign_with_k+0x194>
    232e:	69 5f       	subi	r22, 0xF9	; 249
    2330:	7f 4f       	sbci	r23, 0xFF	; 255
    2332:	75 95       	asr	r23
    2334:	67 95       	ror	r22
    2336:	75 95       	asr	r23
    2338:	67 95       	ror	r22
    233a:	75 95       	asr	r23
    233c:	67 95       	ror	r22
    233e:	cb 57       	subi	r28, 0x7B	; 123
    2340:	df 4f       	sbci	r29, 0xFF	; 255
    2342:	48 81       	ld	r20, Y
    2344:	59 81       	ldd	r21, Y+1	; 0x01
    2346:	c5 58       	subi	r28, 0x85	; 133
    2348:	d0 40       	sbci	r29, 0x00	; 0
    234a:	ce 01       	movw	r24, r28
    234c:	01 96       	adiw	r24, 0x01	; 1
    234e:	2c de       	rcall	.-936    	; 0x1fa8 <uECC_vli_nativeToBytes>
    2350:	fe 01       	movw	r30, r28
    2352:	e8 0d       	add	r30, r8
    2354:	f1 1d       	adc	r31, r1
    2356:	87 fc       	sbrc	r8, 7
    2358:	fa 95       	dec	r31
    235a:	10 a2       	std	Z+32, r1	; 0x20
    235c:	43 2d       	mov	r20, r3
    235e:	be 01       	movw	r22, r28
    2360:	6b 5b       	subi	r22, 0xBB	; 187
    2362:	7f 4f       	sbci	r23, 0xFF	; 255
    2364:	ce 01       	movw	r24, r28
    2366:	81 96       	adiw	r24, 0x21	; 33
    2368:	0e 94 b9 01 	call	0x372	; 0x372 <uECC_vli_set>
    236c:	08 2d       	mov	r16, r8
    236e:	93 01       	movw	r18, r6
    2370:	ae 01       	movw	r20, r28
    2372:	4f 5d       	subi	r20, 0xDF	; 223
    2374:	5f 4f       	sbci	r21, 0xFF	; 255
    2376:	be 01       	movw	r22, r28
    2378:	6f 5f       	subi	r22, 0xFF	; 255
    237a:	7f 4f       	sbci	r23, 0xFF	; 255
    237c:	ca 01       	movw	r24, r20
    237e:	0e 94 1d 08 	call	0x103a	; 0x103a <uECC_vli_modMult>
    2382:	96 01       	movw	r18, r12
    2384:	c7 57       	subi	r28, 0x77	; 119
    2386:	df 4f       	sbci	r29, 0xFF	; 255
    2388:	48 81       	ld	r20, Y
    238a:	59 81       	ldd	r21, Y+1	; 0x01
    238c:	c9 58       	subi	r28, 0x89	; 137
    238e:	d0 40       	sbci	r29, 0x00	; 0
    2390:	c9 57       	subi	r28, 0x79	; 121
    2392:	df 4f       	sbci	r29, 0xFF	; 255
    2394:	68 81       	ld	r22, Y
    2396:	79 81       	ldd	r23, Y+1	; 0x01
    2398:	c7 58       	subi	r28, 0x87	; 135
    239a:	d0 40       	sbci	r29, 0x00	; 0
    239c:	ce 01       	movw	r24, r28
    239e:	01 96       	adiw	r24, 0x01	; 1
    23a0:	86 de       	rcall	.-756    	; 0x20ae <bits2int>
    23a2:	93 01       	movw	r18, r6
    23a4:	ae 01       	movw	r20, r28
    23a6:	4f 5d       	subi	r20, 0xDF	; 223
    23a8:	5f 4f       	sbci	r21, 0xFF	; 255
    23aa:	be 01       	movw	r22, r28
    23ac:	6f 5f       	subi	r22, 0xFF	; 255
    23ae:	7f 4f       	sbci	r23, 0xFF	; 255
    23b0:	ca 01       	movw	r24, r20
    23b2:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <uECC_vli_modAdd>
    23b6:	93 01       	movw	r18, r6
    23b8:	a5 01       	movw	r20, r10
    23ba:	be 01       	movw	r22, r28
    23bc:	6f 5d       	subi	r22, 0xDF	; 223
    23be:	7f 4f       	sbci	r23, 0xFF	; 255
    23c0:	cb 01       	movw	r24, r22
    23c2:	0e 94 1d 08 	call	0x103a	; 0x103a <uECC_vli_modMult>
    23c6:	68 2d       	mov	r22, r8
    23c8:	ce 01       	movw	r24, r28
    23ca:	81 96       	adiw	r24, 0x21	; 33
    23cc:	0e 94 82 04 	call	0x904	; 0x904 <uECC_vli_numBits>
    23d0:	f6 01       	movw	r30, r12
    23d2:	21 81       	ldd	r18, Z+1	; 0x01
    23d4:	62 2f       	mov	r22, r18
    23d6:	02 2e       	mov	r0, r18
    23d8:	00 0c       	add	r0, r0
    23da:	77 0b       	sbc	r23, r23
    23dc:	ab 01       	movw	r20, r22
    23de:	44 0f       	add	r20, r20
    23e0:	55 1f       	adc	r21, r21
    23e2:	44 0f       	add	r20, r20
    23e4:	55 1f       	adc	r21, r21
    23e6:	44 0f       	add	r20, r20
    23e8:	55 1f       	adc	r21, r21
    23ea:	48 17       	cp	r20, r24
    23ec:	59 07       	cpc	r21, r25
    23ee:	ac f0       	brlt	.+42     	; 0x241a <uECC_sign_with_k+0x27c>
    23f0:	ae 01       	movw	r20, r28
    23f2:	4f 5d       	subi	r20, 0xDF	; 223
    23f4:	5f 4f       	sbci	r21, 0xFF	; 255
    23f6:	c2 01       	movw	r24, r4
    23f8:	82 0f       	add	r24, r18
    23fa:	91 1d       	adc	r25, r1
    23fc:	27 fd       	sbrc	r18, 7
    23fe:	9a 95       	dec	r25
    2400:	d3 dd       	rcall	.-1114   	; 0x1fa8 <uECC_vli_nativeToBytes>
    2402:	81 e0       	ldi	r24, 0x01	; 1
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	0b c0       	rjmp	.+22     	; 0x241e <uECC_sign_with_k+0x280>
    2408:	80 e0       	ldi	r24, 0x00	; 0
    240a:	90 e0       	ldi	r25, 0x00	; 0
    240c:	08 c0       	rjmp	.+16     	; 0x241e <uECC_sign_with_k+0x280>
    240e:	80 e0       	ldi	r24, 0x00	; 0
    2410:	90 e0       	ldi	r25, 0x00	; 0
    2412:	05 c0       	rjmp	.+10     	; 0x241e <uECC_sign_with_k+0x280>
    2414:	80 e0       	ldi	r24, 0x00	; 0
    2416:	90 e0       	ldi	r25, 0x00	; 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <uECC_sign_with_k+0x280>
    241a:	80 e0       	ldi	r24, 0x00	; 0
    241c:	90 e0       	ldi	r25, 0x00	; 0
    241e:	c6 57       	subi	r28, 0x76	; 118
    2420:	df 4f       	sbci	r29, 0xFF	; 255
    2422:	0f b6       	in	r0, 0x3f	; 63
    2424:	f8 94       	cli
    2426:	de bf       	out	0x3e, r29	; 62
    2428:	0f be       	out	0x3f, r0	; 63
    242a:	cd bf       	out	0x3d, r28	; 61
    242c:	df 91       	pop	r29
    242e:	cf 91       	pop	r28
    2430:	1f 91       	pop	r17
    2432:	0f 91       	pop	r16
    2434:	ff 90       	pop	r15
    2436:	ef 90       	pop	r14
    2438:	df 90       	pop	r13
    243a:	cf 90       	pop	r12
    243c:	bf 90       	pop	r11
    243e:	af 90       	pop	r10
    2440:	9f 90       	pop	r9
    2442:	8f 90       	pop	r8
    2444:	7f 90       	pop	r7
    2446:	6f 90       	pop	r6
    2448:	5f 90       	pop	r5
    244a:	4f 90       	pop	r4
    244c:	3f 90       	pop	r3
    244e:	08 95       	ret

00002450 <uECC_secp256k1>:
    2450:	80 ec       	ldi	r24, 0xC0	; 192
    2452:	91 e0       	ldi	r25, 0x01	; 1
    2454:	08 95       	ret

00002456 <uECC_sign>:

int uECC_sign(const uint8_t *private_key,
              const uint8_t *message_hash,
              unsigned hash_size,
              uint8_t *signature,
              uECC_Curve curve) {
    2456:	3f 92       	push	r3
    2458:	4f 92       	push	r4
    245a:	5f 92       	push	r5
    245c:	6f 92       	push	r6
    245e:	7f 92       	push	r7
    2460:	8f 92       	push	r8
    2462:	9f 92       	push	r9
    2464:	af 92       	push	r10
    2466:	bf 92       	push	r11
    2468:	cf 92       	push	r12
    246a:	df 92       	push	r13
    246c:	ef 92       	push	r14
    246e:	ff 92       	push	r15
    2470:	0f 93       	push	r16
    2472:	1f 93       	push	r17
    2474:	cf 93       	push	r28
    2476:	df 93       	push	r29
    2478:	cd b7       	in	r28, 0x3d	; 61
    247a:	de b7       	in	r29, 0x3e	; 62
    247c:	a2 97       	sbiw	r28, 0x22	; 34
    247e:	0f b6       	in	r0, 0x3f	; 63
    2480:	f8 94       	cli
    2482:	de bf       	out	0x3e, r29	; 62
    2484:	0f be       	out	0x3f, r0	; 63
    2486:	cd bf       	out	0x3d, r28	; 61
    2488:	3c 01       	movw	r6, r24
    248a:	4b 01       	movw	r8, r22
    248c:	5a 01       	movw	r10, r20
    248e:	3a a3       	std	Y+34, r19	; 0x22
    2490:	29 a3       	std	Y+33, r18	; 0x21
    2492:	68 01       	movw	r12, r16
    2494:	68 94       	set
    2496:	33 24       	eor	r3, r3
    2498:	36 f8       	bld	r3, 6
    uECC_word_t k[uECC_MAX_WORDS];
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
        if (!uECC_generate_random_int(k, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
    249a:	28 01       	movw	r4, r16
    249c:	84 e2       	ldi	r24, 0x24	; 36
    249e:	48 0e       	add	r4, r24
    24a0:	51 1c       	adc	r5, r1
    24a2:	f6 01       	movw	r30, r12
    24a4:	82 81       	ldd	r24, Z+2	; 0x02
    24a6:	93 81       	ldd	r25, Z+3	; 0x03
    24a8:	07 96       	adiw	r24, 0x07	; 7
    24aa:	ac 01       	movw	r20, r24
    24ac:	12 f4       	brpl	.+4      	; 0x24b2 <uECC_sign+0x5c>
    24ae:	49 5f       	subi	r20, 0xF9	; 249
    24b0:	5f 4f       	sbci	r21, 0xFF	; 255
    24b2:	55 95       	asr	r21
    24b4:	47 95       	ror	r20
    24b6:	55 95       	asr	r21
    24b8:	47 95       	ror	r20
    24ba:	55 95       	asr	r21
    24bc:	47 95       	ror	r20
    24be:	b2 01       	movw	r22, r4
    24c0:	ce 01       	movw	r24, r28
    24c2:	01 96       	adiw	r24, 0x01	; 1
    24c4:	93 dd       	rcall	.-1242   	; 0x1fec <uECC_generate_random_int>
    24c6:	00 97       	sbiw	r24, 0x00	; 0
    24c8:	91 f0       	breq	.+36     	; 0x24ee <uECC_sign+0x98>
            return 0;
        }

        if (uECC_sign_with_k(private_key, message_hash, hash_size, k, signature, curve)) {
    24ca:	76 01       	movw	r14, r12
    24cc:	09 a1       	ldd	r16, Y+33	; 0x21
    24ce:	1a a1       	ldd	r17, Y+34	; 0x22
    24d0:	9e 01       	movw	r18, r28
    24d2:	2f 5f       	subi	r18, 0xFF	; 255
    24d4:	3f 4f       	sbci	r19, 0xFF	; 255
    24d6:	a5 01       	movw	r20, r10
    24d8:	b4 01       	movw	r22, r8
    24da:	c3 01       	movw	r24, r6
    24dc:	60 de       	rcall	.-832    	; 0x219e <uECC_sign_with_k>
    24de:	00 97       	sbiw	r24, 0x00	; 0
    24e0:	21 f4       	brne	.+8      	; 0x24ea <uECC_sign+0x94>
    24e2:	3a 94       	dec	r3
              uint8_t *signature,
              uECC_Curve curve) {
    uECC_word_t k[uECC_MAX_WORDS];
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
    24e4:	31 10       	cpse	r3, r1
    24e6:	dd cf       	rjmp	.-70     	; 0x24a2 <uECC_sign+0x4c>
    24e8:	02 c0       	rjmp	.+4      	; 0x24ee <uECC_sign+0x98>
        if (!uECC_generate_random_int(k, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
            return 0;
        }

        if (uECC_sign_with_k(private_key, message_hash, hash_size, k, signature, curve)) {
            return 1;
    24ea:	81 e0       	ldi	r24, 0x01	; 1
    24ec:	90 e0       	ldi	r25, 0x00	; 0
        }
    }
    return 0;
}
    24ee:	a2 96       	adiw	r28, 0x22	; 34
    24f0:	0f b6       	in	r0, 0x3f	; 63
    24f2:	f8 94       	cli
    24f4:	de bf       	out	0x3e, r29	; 62
    24f6:	0f be       	out	0x3f, r0	; 63
    24f8:	cd bf       	out	0x3d, r28	; 61
    24fa:	df 91       	pop	r29
    24fc:	cf 91       	pop	r28
    24fe:	1f 91       	pop	r17
    2500:	0f 91       	pop	r16
    2502:	ff 90       	pop	r15
    2504:	ef 90       	pop	r14
    2506:	df 90       	pop	r13
    2508:	cf 90       	pop	r12
    250a:	bf 90       	pop	r11
    250c:	af 90       	pop	r10
    250e:	9f 90       	pop	r9
    2510:	8f 90       	pop	r8
    2512:	7f 90       	pop	r7
    2514:	6f 90       	pop	r6
    2516:	5f 90       	pop	r5
    2518:	4f 90       	pop	r4
    251a:	3f 90       	pop	r3
    251c:	08 95       	ret

0000251e <hex_to_bytes>:
		*dest++ = table[c >> 4];
		*dest++ = table[c & 0x0f];
	}
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t* dest) {
    251e:	1f 93       	push	r17
    2520:	cf 93       	push	r28
    2522:	df 93       	push	r29

	uint8_t index = 0;
	while (index < slength) {
    2524:	66 23       	and	r22, r22
    2526:	f1 f1       	breq	.+124    	; 0x25a4 <hex_to_bytes+0x86>
    2528:	a8 2f       	mov	r26, r24
    252a:	b9 2f       	mov	r27, r25
    252c:	e0 e0       	ldi	r30, 0x00	; 0
    252e:	f0 e0       	ldi	r31, 0x00	; 0
		char c = src[index];
		int value = 0;
    2530:	10 e0       	ldi	r17, 0x00	; 0
    2532:	70 e0       	ldi	r23, 0x00	; 0
    2534:	2e 2f       	mov	r18, r30

void hex_to_bytes(char* src, uint8_t slength, uint8_t* dest) {

	uint8_t index = 0;
	while (index < slength) {
		char c = src[index];
    2536:	8d 91       	ld	r24, X+
    2538:	31 96       	adiw	r30, 0x01	; 1
		int value = 0;
		if(c >= '0' && c <= '9')
    253a:	90 ed       	ldi	r25, 0xD0	; 208
    253c:	98 0f       	add	r25, r24
    253e:	9a 30       	cpi	r25, 0x0A	; 10
    2540:	18 f4       	brcc	.+6      	; 0x2548 <hex_to_bytes+0x2a>
		value = (c - '0');
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	c0 97       	sbiw	r24, 0x30	; 48
    2546:	11 c0       	rjmp	.+34     	; 0x256a <hex_to_bytes+0x4c>
		else if (c >= 'A' && c <= 'F')
    2548:	9f eb       	ldi	r25, 0xBF	; 191
    254a:	98 0f       	add	r25, r24
    254c:	96 30       	cpi	r25, 0x06	; 6
    254e:	18 f4       	brcc	.+6      	; 0x2556 <hex_to_bytes+0x38>
		value = (10 + (c - 'A'));
    2550:	90 e0       	ldi	r25, 0x00	; 0
    2552:	c7 97       	sbiw	r24, 0x37	; 55
    2554:	0a c0       	rjmp	.+20     	; 0x256a <hex_to_bytes+0x4c>
		else if (c >= 'a' && c <= 'f')
    2556:	9f e9       	ldi	r25, 0x9F	; 159
    2558:	98 0f       	add	r25, r24
    255a:	96 30       	cpi	r25, 0x06	; 6
    255c:	20 f4       	brcc	.+8      	; 0x2566 <hex_to_bytes+0x48>
		value = (10 + (c - 'a'));
    255e:	90 e0       	ldi	r25, 0x00	; 0
    2560:	87 55       	subi	r24, 0x57	; 87
    2562:	91 09       	sbc	r25, r1
    2564:	02 c0       	rjmp	.+4      	; 0x256a <hex_to_bytes+0x4c>
void hex_to_bytes(char* src, uint8_t slength, uint8_t* dest) {

	uint8_t index = 0;
	while (index < slength) {
		char c = src[index];
		int value = 0;
    2566:	81 2f       	mov	r24, r17
    2568:	97 2f       	mov	r25, r23
		else if (c >= 'A' && c <= 'F')
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
		value = (10 + (c - 'a'));

		dest[(index/2)] += value << (((index + 1) % 2) * 4);
    256a:	26 95       	lsr	r18
    256c:	ea 01       	movw	r28, r20
    256e:	c2 0f       	add	r28, r18
    2570:	d1 1d       	adc	r29, r1
    2572:	9f 01       	movw	r18, r30
    2574:	21 70       	andi	r18, 0x01	; 1
    2576:	30 78       	andi	r19, 0x80	; 128
    2578:	33 23       	and	r19, r19
    257a:	34 f4       	brge	.+12     	; 0x2588 <hex_to_bytes+0x6a>
    257c:	21 50       	subi	r18, 0x01	; 1
    257e:	31 09       	sbc	r19, r1
    2580:	2e 6f       	ori	r18, 0xFE	; 254
    2582:	3f 6f       	ori	r19, 0xFF	; 255
    2584:	2f 5f       	subi	r18, 0xFF	; 255
    2586:	3f 4f       	sbci	r19, 0xFF	; 255
    2588:	22 0f       	add	r18, r18
    258a:	33 1f       	adc	r19, r19
    258c:	22 0f       	add	r18, r18
    258e:	33 1f       	adc	r19, r19
    2590:	02 c0       	rjmp	.+4      	; 0x2596 <hex_to_bytes+0x78>
    2592:	88 0f       	add	r24, r24
    2594:	99 1f       	adc	r25, r25
    2596:	2a 95       	dec	r18
    2598:	e2 f7       	brpl	.-8      	; 0x2592 <hex_to_bytes+0x74>
    259a:	98 81       	ld	r25, Y
    259c:	89 0f       	add	r24, r25
    259e:	88 83       	st	Y, r24
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t* dest) {

	uint8_t index = 0;
	while (index < slength) {
    25a0:	e6 17       	cp	r30, r22
    25a2:	40 f2       	brcs	.-112    	; 0x2534 <hex_to_bytes+0x16>

		dest[(index/2)] += value << (((index + 1) % 2) * 4);

		index++;
	}
}
    25a4:	df 91       	pop	r29
    25a6:	cf 91       	pop	r28
    25a8:	1f 91       	pop	r17
    25aa:	08 95       	ret

000025ac <buttons_init>:

volatile run_t run_scenario = NOTHING;
		
		
void buttons_init(){
	DDRE = 0x00;
    25ac:	1d b8       	out	0x0d, r1	; 13
	PORTE = 1 << PE4 | 1 << PE5 | 1 << PE6 | 1 << PE7;
    25ae:	80 ef       	ldi	r24, 0xF0	; 240
    25b0:	8e b9       	out	0x0e, r24	; 14
	EICRB = 1 << ISC40 | 1 << ISC41 | 1 << ISC50 | 1 << ISC51 | 1 << ISC60 | 1 << ISC61 | 1 << ISC70 | 1 << ISC71; // set interrupt on falling edge.
    25b2:	9f ef       	ldi	r25, 0xFF	; 255
    25b4:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
    25b8:	8d bb       	out	0x1d, r24	; 29
    25ba:	08 95       	ret

000025bc <__vector_5>:
*/



	
ISR(INT4_vect){
    25bc:	1f 92       	push	r1
    25be:	0f 92       	push	r0
    25c0:	0f b6       	in	r0, 0x3f	; 63
    25c2:	0f 92       	push	r0
    25c4:	11 24       	eor	r1, r1
    25c6:	0b b6       	in	r0, 0x3b	; 59
    25c8:	0f 92       	push	r0
    25ca:	2f 93       	push	r18
    25cc:	3f 93       	push	r19
    25ce:	4f 93       	push	r20
    25d0:	5f 93       	push	r21
    25d2:	6f 93       	push	r22
    25d4:	7f 93       	push	r23
    25d6:	8f 93       	push	r24
    25d8:	9f 93       	push	r25
    25da:	af 93       	push	r26
    25dc:	bf 93       	push	r27
    25de:	ef 93       	push	r30
    25e0:	ff 93       	push	r31
	uart_puts("running scenario");
    25e2:	8c e6       	ldi	r24, 0x6C	; 108
    25e4:	92 e0       	ldi	r25, 0x02	; 2
    25e6:	6e d1       	rcall	.+732    	; 0x28c4 <uart_puts>
	run_scenario = SCENARIO1;
    25e8:	81 e0       	ldi	r24, 0x01	; 1
    25ea:	80 93 d4 02 	sts	0x02D4, r24	; 0x8002d4 <run_scenario>
}
    25ee:	ff 91       	pop	r31
    25f0:	ef 91       	pop	r30
    25f2:	bf 91       	pop	r27
    25f4:	af 91       	pop	r26
    25f6:	9f 91       	pop	r25
    25f8:	8f 91       	pop	r24
    25fa:	7f 91       	pop	r23
    25fc:	6f 91       	pop	r22
    25fe:	5f 91       	pop	r21
    2600:	4f 91       	pop	r20
    2602:	3f 91       	pop	r19
    2604:	2f 91       	pop	r18
    2606:	0f 90       	pop	r0
    2608:	0b be       	out	0x3b, r0	; 59
    260a:	0f 90       	pop	r0
    260c:	0f be       	out	0x3f, r0	; 63
    260e:	0f 90       	pop	r0
    2610:	1f 90       	pop	r1
    2612:	18 95       	reti

00002614 <__vector_6>:

ISR(INT5_vect){
    2614:	1f 92       	push	r1
    2616:	0f 92       	push	r0
    2618:	0f b6       	in	r0, 0x3f	; 63
    261a:	0f 92       	push	r0
    261c:	11 24       	eor	r1, r1
    261e:	0b b6       	in	r0, 0x3b	; 59
    2620:	0f 92       	push	r0
    2622:	2f 93       	push	r18
    2624:	3f 93       	push	r19
    2626:	4f 93       	push	r20
    2628:	5f 93       	push	r21
    262a:	6f 93       	push	r22
    262c:	7f 93       	push	r23
    262e:	8f 93       	push	r24
    2630:	9f 93       	push	r25
    2632:	af 93       	push	r26
    2634:	bf 93       	push	r27
    2636:	ef 93       	push	r30
    2638:	ff 93       	push	r31
    263a:	cf 93       	push	r28
    263c:	df 93       	push	r29
    263e:	00 d0       	rcall	.+0      	; 0x2640 <__vector_6+0x2c>
    2640:	cd b7       	in	r28, 0x3d	; 61
    2642:	de b7       	in	r29, 0x3e	; 62
	char target[] = "5";
    2644:	85 e3       	ldi	r24, 0x35	; 53
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	9a 83       	std	Y+2, r25	; 0x02
    264a:	89 83       	std	Y+1, r24	; 0x01
	uart_puts(target);
    264c:	ce 01       	movw	r24, r28
    264e:	01 96       	adiw	r24, 0x01	; 1
    2650:	39 d1       	rcall	.+626    	; 0x28c4 <uart_puts>
	//SendByMOb2();
}
    2652:	0f 90       	pop	r0
    2654:	0f 90       	pop	r0
    2656:	df 91       	pop	r29
    2658:	cf 91       	pop	r28
    265a:	ff 91       	pop	r31
    265c:	ef 91       	pop	r30
    265e:	bf 91       	pop	r27
    2660:	af 91       	pop	r26
    2662:	9f 91       	pop	r25
    2664:	8f 91       	pop	r24
    2666:	7f 91       	pop	r23
    2668:	6f 91       	pop	r22
    266a:	5f 91       	pop	r21
    266c:	4f 91       	pop	r20
    266e:	3f 91       	pop	r19
    2670:	2f 91       	pop	r18
    2672:	0f 90       	pop	r0
    2674:	0b be       	out	0x3b, r0	; 59
    2676:	0f 90       	pop	r0
    2678:	0f be       	out	0x3f, r0	; 63
    267a:	0f 90       	pop	r0
    267c:	1f 90       	pop	r1
    267e:	18 95       	reti

00002680 <__vector_7>:

ISR(INT6_vect){
    2680:	1f 92       	push	r1
    2682:	0f 92       	push	r0
    2684:	0f b6       	in	r0, 0x3f	; 63
    2686:	0f 92       	push	r0
    2688:	11 24       	eor	r1, r1
    268a:	0b b6       	in	r0, 0x3b	; 59
    268c:	0f 92       	push	r0
    268e:	2f 93       	push	r18
    2690:	3f 93       	push	r19
    2692:	4f 93       	push	r20
    2694:	5f 93       	push	r21
    2696:	6f 93       	push	r22
    2698:	7f 93       	push	r23
    269a:	8f 93       	push	r24
    269c:	9f 93       	push	r25
    269e:	af 93       	push	r26
    26a0:	bf 93       	push	r27
    26a2:	ef 93       	push	r30
    26a4:	ff 93       	push	r31
    26a6:	cf 93       	push	r28
    26a8:	df 93       	push	r29
    26aa:	00 d0       	rcall	.+0      	; 0x26ac <__vector_7+0x2c>
    26ac:	cd b7       	in	r28, 0x3d	; 61
    26ae:	de b7       	in	r29, 0x3e	; 62
	char target[] = "6";
    26b0:	86 e3       	ldi	r24, 0x36	; 54
    26b2:	90 e0       	ldi	r25, 0x00	; 0
    26b4:	9a 83       	std	Y+2, r25	; 0x02
    26b6:	89 83       	std	Y+1, r24	; 0x01
	uart_puts(target);
    26b8:	ce 01       	movw	r24, r28
    26ba:	01 96       	adiw	r24, 0x01	; 1
    26bc:	03 d1       	rcall	.+518    	; 0x28c4 <uart_puts>
	//SendByMOb2();
}
    26be:	0f 90       	pop	r0
    26c0:	0f 90       	pop	r0
    26c2:	df 91       	pop	r29
    26c4:	cf 91       	pop	r28
    26c6:	ff 91       	pop	r31
    26c8:	ef 91       	pop	r30
    26ca:	bf 91       	pop	r27
    26cc:	af 91       	pop	r26
    26ce:	9f 91       	pop	r25
    26d0:	8f 91       	pop	r24
    26d2:	7f 91       	pop	r23
    26d4:	6f 91       	pop	r22
    26d6:	5f 91       	pop	r21
    26d8:	4f 91       	pop	r20
    26da:	3f 91       	pop	r19
    26dc:	2f 91       	pop	r18
    26de:	0f 90       	pop	r0
    26e0:	0b be       	out	0x3b, r0	; 59
    26e2:	0f 90       	pop	r0
    26e4:	0f be       	out	0x3f, r0	; 63
    26e6:	0f 90       	pop	r0
    26e8:	1f 90       	pop	r1
    26ea:	18 95       	reti

000026ec <__vector_8>:

ISR(INT7_vect){
    26ec:	1f 92       	push	r1
    26ee:	0f 92       	push	r0
    26f0:	0f b6       	in	r0, 0x3f	; 63
    26f2:	0f 92       	push	r0
    26f4:	11 24       	eor	r1, r1
    26f6:	0b b6       	in	r0, 0x3b	; 59
    26f8:	0f 92       	push	r0
    26fa:	2f 93       	push	r18
    26fc:	3f 93       	push	r19
    26fe:	4f 93       	push	r20
    2700:	5f 93       	push	r21
    2702:	6f 93       	push	r22
    2704:	7f 93       	push	r23
    2706:	8f 93       	push	r24
    2708:	9f 93       	push	r25
    270a:	af 93       	push	r26
    270c:	bf 93       	push	r27
    270e:	ef 93       	push	r30
    2710:	ff 93       	push	r31
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	00 d0       	rcall	.+0      	; 0x2718 <__vector_8+0x2c>
    2718:	cd b7       	in	r28, 0x3d	; 61
    271a:	de b7       	in	r29, 0x3e	; 62
	char target[] = "7";
    271c:	87 e3       	ldi	r24, 0x37	; 55
    271e:	90 e0       	ldi	r25, 0x00	; 0
    2720:	9a 83       	std	Y+2, r25	; 0x02
    2722:	89 83       	std	Y+1, r24	; 0x01
	uart_puts(target);
    2724:	ce 01       	movw	r24, r28
    2726:	01 96       	adiw	r24, 0x01	; 1
    2728:	cd d0       	rcall	.+410    	; 0x28c4 <uart_puts>
	//SendByMOb2();
}
    272a:	0f 90       	pop	r0
    272c:	0f 90       	pop	r0
    272e:	df 91       	pop	r29
    2730:	cf 91       	pop	r28
    2732:	ff 91       	pop	r31
    2734:	ef 91       	pop	r30
    2736:	bf 91       	pop	r27
    2738:	af 91       	pop	r26
    273a:	9f 91       	pop	r25
    273c:	8f 91       	pop	r24
    273e:	7f 91       	pop	r23
    2740:	6f 91       	pop	r22
    2742:	5f 91       	pop	r21
    2744:	4f 91       	pop	r20
    2746:	3f 91       	pop	r19
    2748:	2f 91       	pop	r18
    274a:	0f 90       	pop	r0
    274c:	0b be       	out	0x3b, r0	; 59
    274e:	0f 90       	pop	r0
    2750:	0f be       	out	0x3f, r0	; 63
    2752:	0f 90       	pop	r0
    2754:	1f 90       	pop	r1
    2756:	18 95       	reti

00002758 <sign_challenge>:

int sign_challenge(uint8_t challenge[64], uint8_t signature[64]){
    2758:	af 92       	push	r10
    275a:	bf 92       	push	r11
    275c:	cf 92       	push	r12
    275e:	df 92       	push	r13
    2760:	ef 92       	push	r14
    2762:	ff 92       	push	r15
    2764:	0f 93       	push	r16
    2766:	1f 93       	push	r17
    2768:	cf 93       	push	r28
    276a:	df 93       	push	r29
    276c:	cd b7       	in	r28, 0x3d	; 61
    276e:	de b7       	in	r29, 0x3e	; 62
    2770:	c0 5a       	subi	r28, 0xA0	; 160
    2772:	d1 09       	sbc	r29, r1
    2774:	0f b6       	in	r0, 0x3f	; 63
    2776:	f8 94       	cli
    2778:	de bf       	out	0x3e, r29	; 62
    277a:	0f be       	out	0x3f, r0	; 63
    277c:	cd bf       	out	0x3d, r28	; 61
    277e:	5b 01       	movw	r10, r22
	const struct uECC_Curve_t *curve = uECC_secp256k1();
    2780:	67 de       	rcall	.-818    	; 0x2450 <uECC_secp256k1>
    2782:	8c 01       	movw	r16, r24
	uint8_t hash[64];
	uint8_t private2[32] = {0};
    2784:	7e 01       	movw	r14, r28
    2786:	81 e4       	ldi	r24, 0x41	; 65
    2788:	e8 0e       	add	r14, r24
    278a:	f1 1c       	adc	r15, r1
    278c:	80 e2       	ldi	r24, 0x20	; 32
    278e:	f7 01       	movw	r30, r14
    2790:	11 92       	st	Z+, r1
    2792:	8a 95       	dec	r24
    2794:	e9 f7       	brne	.-6      	; 0x2790 <sign_challenge+0x38>
	uint8_t public2[64] = {0};
    2796:	6e 01       	movw	r12, r28
    2798:	f1 e6       	ldi	r31, 0x61	; 97
    279a:	cf 0e       	add	r12, r31
    279c:	d1 1c       	adc	r13, r1
    279e:	80 e4       	ldi	r24, 0x40	; 64
    27a0:	f6 01       	movw	r30, r12
    27a2:	11 92       	st	Z+, r1
    27a4:	8a 95       	dec	r24
    27a6:	e9 f7       	brne	.-6      	; 0x27a2 <sign_challenge+0x4a>
	hex_to_bytes(private_key_hex, 64, private2);
    27a8:	a7 01       	movw	r20, r14
    27aa:	60 e4       	ldi	r22, 0x40	; 64
    27ac:	80 e8       	ldi	r24, 0x80	; 128
    27ae:	91 e0       	ldi	r25, 0x01	; 1
    27b0:	b6 de       	rcall	.-660    	; 0x251e <hex_to_bytes>
	hex_to_bytes(public_key_hex, 128, public2);
    27b2:	a6 01       	movw	r20, r12
    27b4:	60 e8       	ldi	r22, 0x80	; 128
    27b6:	80 e0       	ldi	r24, 0x00	; 0
    27b8:	91 e0       	ldi	r25, 0x01	; 1
    27ba:	b1 de       	rcall	.-670    	; 0x251e <hex_to_bytes>
	memcpy(hash, public2, sizeof(hash));
    27bc:	80 e4       	ldi	r24, 0x40	; 64
    27be:	f6 01       	movw	r30, r12
    27c0:	de 01       	movw	r26, r28
    27c2:	11 96       	adiw	r26, 0x01	; 1
    27c4:	01 90       	ld	r0, Z+
    27c6:	0d 92       	st	X+, r0
    27c8:	8a 95       	dec	r24
    27ca:	e1 f7       	brne	.-8      	; 0x27c4 <sign_challenge+0x6c>
	if (!uECC_sign(private2, hash, sizeof(hash), signature, curve)) {
    27cc:	95 01       	movw	r18, r10
    27ce:	40 e4       	ldi	r20, 0x40	; 64
    27d0:	50 e0       	ldi	r21, 0x00	; 0
    27d2:	be 01       	movw	r22, r28
    27d4:	6f 5f       	subi	r22, 0xFF	; 255
    27d6:	7f 4f       	sbci	r23, 0xFF	; 255
    27d8:	c7 01       	movw	r24, r14
    27da:	3d de       	rcall	.-902    	; 0x2456 <uECC_sign>
    27dc:	89 2b       	or	r24, r25
		uart_puts("sign failed");
    27de:	31 f4       	brne	.+12     	; 0x27ec <sign_challenge+0x94>
    27e0:	8d e7       	ldi	r24, 0x7D	; 125
    27e2:	92 e0       	ldi	r25, 0x02	; 2
    27e4:	6f d0       	rcall	.+222    	; 0x28c4 <uart_puts>
		return 1;
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	90 e0       	ldi	r25, 0x00	; 0
    27ea:	02 c0       	rjmp	.+4      	; 0x27f0 <sign_challenge+0x98>
	}
	
	return 0;
    27ec:	80 e0       	ldi	r24, 0x00	; 0
    27ee:	90 e0       	ldi	r25, 0x00	; 0
}
    27f0:	c0 56       	subi	r28, 0x60	; 96
    27f2:	df 4f       	sbci	r29, 0xFF	; 255
    27f4:	0f b6       	in	r0, 0x3f	; 63
    27f6:	f8 94       	cli
    27f8:	de bf       	out	0x3e, r29	; 62
    27fa:	0f be       	out	0x3f, r0	; 63
    27fc:	cd bf       	out	0x3d, r28	; 61
    27fe:	df 91       	pop	r29
    2800:	cf 91       	pop	r28
    2802:	1f 91       	pop	r17
    2804:	0f 91       	pop	r16
    2806:	ff 90       	pop	r15
    2808:	ef 90       	pop	r14
    280a:	df 90       	pop	r13
    280c:	cf 90       	pop	r12
    280e:	bf 90       	pop	r11
    2810:	af 90       	pop	r10
    2812:	08 95       	ret

00002814 <run_1>:

int run_1(){
    2814:	cf 93       	push	r28
    2816:	df 93       	push	r29
    2818:	cd b7       	in	r28, 0x3d	; 61
    281a:	de b7       	in	r29, 0x3e	; 62
    281c:	c0 5c       	subi	r28, 0xC0	; 192
    281e:	d1 09       	sbc	r29, r1
    2820:	0f b6       	in	r0, 0x3f	; 63
    2822:	f8 94       	cli
    2824:	de bf       	out	0x3e, r29	; 62
    2826:	0f be       	out	0x3f, r0	; 63
    2828:	cd bf       	out	0x3d, r28	; 61
	uart_puts("starting authentication");
    282a:	89 e8       	ldi	r24, 0x89	; 137
    282c:	92 e0       	ldi	r25, 0x02	; 2
    282e:	4a d0       	rcall	.+148    	; 0x28c4 <uart_puts>
	uint8_t challenge[64];
	//init authentication.
	can_send_message(0, 0x00, 0);
    2830:	40 e0       	ldi	r20, 0x00	; 0
    2832:	50 e0       	ldi	r21, 0x00	; 0
    2834:	60 e0       	ldi	r22, 0x00	; 0
    2836:	80 e0       	ldi	r24, 0x00	; 0
    2838:	0e 94 da 00 	call	0x1b4	; 0x1b4 <can_send_message>
	//wait for challenge.
	can_receive_frame_buffer(challenge);
    283c:	ce 01       	movw	r24, r28
    283e:	01 96       	adiw	r24, 0x01	; 1
    2840:	0e 94 41 01 	call	0x282	; 0x282 <can_receive_frame_buffer>
	uart_puts("challenge received");
    2844:	81 ea       	ldi	r24, 0xA1	; 161
    2846:	92 e0       	ldi	r25, 0x02	; 2
    2848:	3d d0       	rcall	.+122    	; 0x28c4 <uart_puts>
	uint8_t signature[64];
	sign_challenge(challenge, signature);
    284a:	be 01       	movw	r22, r28
    284c:	6f 5b       	subi	r22, 0xBF	; 191
    284e:	7f 4f       	sbci	r23, 0xFF	; 255
    2850:	ce 01       	movw	r24, r28
    2852:	01 96       	adiw	r24, 0x01	; 1
    2854:	81 df       	rcall	.-254    	; 0x2758 <sign_challenge>
	//Send signature.
	can_send_frame_buffer(signature);
    2856:	ce 01       	movw	r24, r28
    2858:	8f 5b       	subi	r24, 0xBF	; 191
    285a:	9f 4f       	sbci	r25, 0xFF	; 255
    285c:	0e 94 2d 01 	call	0x25a	; 0x25a <can_send_frame_buffer>
	uart_puts("signature sent");
    2860:	84 eb       	ldi	r24, 0xB4	; 180
    2862:	92 e0       	ldi	r25, 0x02	; 2
    2864:	2f d0       	rcall	.+94     	; 0x28c4 <uart_puts>
	uint8_t message[64];
	//Wait for authentication acknowledgement.
	can_receive_message(0, 0x00, 0x00,  message);
    2866:	9e 01       	movw	r18, r28
    2868:	2f 57       	subi	r18, 0x7F	; 127
    286a:	3f 4f       	sbci	r19, 0xFF	; 255
    286c:	40 e0       	ldi	r20, 0x00	; 0
    286e:	60 e0       	ldi	r22, 0x00	; 0
    2870:	80 e0       	ldi	r24, 0x00	; 0
    2872:	0e 94 ed 00 	call	0x1da	; 0x1da <can_receive_message>
	uart_puts("authenticated!");
    2876:	83 ec       	ldi	r24, 0xC3	; 195
    2878:	92 e0       	ldi	r25, 0x02	; 2
    287a:	24 d0       	rcall	.+72     	; 0x28c4 <uart_puts>
	return 0;
}
    287c:	80 e0       	ldi	r24, 0x00	; 0
    287e:	90 e0       	ldi	r25, 0x00	; 0
    2880:	c0 54       	subi	r28, 0x40	; 64
    2882:	df 4f       	sbci	r29, 0xFF	; 255
    2884:	0f b6       	in	r0, 0x3f	; 63
    2886:	f8 94       	cli
    2888:	de bf       	out	0x3e, r29	; 62
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	cd bf       	out	0x3d, r28	; 61
    288e:	df 91       	pop	r29
    2890:	cf 91       	pop	r28
    2892:	08 95       	ret

00002894 <main>:

 int main()
 {	
	 
	 uart_init();
    2894:	0b d0       	rcall	.+22     	; 0x28ac <uart_init>
	 buttons_init();
    2896:	8a de       	rcall	.-748    	; 0x25ac <buttons_init>
    2898:	0e 94 6a 00 	call	0xd4	; 0xd4 <can_init>
	 can_init();
    289c:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <run_scenario>
	 
	 while(1){
		run_t runlcl = run_scenario;
    28a0:	81 30       	cpi	r24, 0x01	; 1
		switch(runlcl){
    28a2:	e1 f7       	brne	.-8      	; 0x289c <main+0x8>
    28a4:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <run_scenario>
			case NOTHING :
				break;
			case SCENARIO1 :
				run_scenario = NOTHING;
				run_1();
    28a8:	b5 df       	rcall	.-150    	; 0x2814 <run_1>
    28aa:	f8 cf       	rjmp	.-16     	; 0x289c <main+0x8>

000028ac <uart_init>:

#include <avr/io.h>
#include "uart_f.h"

void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    28ac:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    28b0:	83 e3       	ldi	r24, 0x33	; 51
    28b2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    28b6:	8e e0       	ldi	r24, 0x0E	; 14
    28b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    28bc:	88 e1       	ldi	r24, 0x18	; 24
    28be:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    28c2:	08 95       	ret

000028c4 <uart_puts>:
}

void uart_puts(char* s){
    28c4:	cf 93       	push	r28
    28c6:	df 93       	push	r29
	int i;
	int len = strlen(s);
    28c8:	fc 01       	movw	r30, r24
    28ca:	01 90       	ld	r0, Z+
    28cc:	00 20       	and	r0, r0
    28ce:	e9 f7       	brne	.-6      	; 0x28ca <uart_puts+0x6>
    28d0:	31 97       	sbiw	r30, 0x01	; 1
    28d2:	e8 1b       	sub	r30, r24
    28d4:	f9 0b       	sbc	r31, r25
	for (i = 0; i < len; i++){
    28d6:	1e 16       	cp	r1, r30
    28d8:	1f 06       	cpc	r1, r31
    28da:	84 f4       	brge	.+32     	; 0x28fc <uart_puts+0x38>
    28dc:	dc 01       	movw	r26, r24
    28de:	9c 01       	movw	r18, r24
    28e0:	2e 0f       	add	r18, r30
    28e2:	3f 1f       	adc	r19, r31
		while(!( UCSR0A & 0X20));
    28e4:	e0 ec       	ldi	r30, 0xC0	; 192
    28e6:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    28e8:	c6 ec       	ldi	r28, 0xC6	; 198
    28ea:	d0 e0       	ldi	r29, 0x00	; 0

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    28ec:	90 81       	ld	r25, Z
    28ee:	95 ff       	sbrs	r25, 5
    28f0:	fd cf       	rjmp	.-6      	; 0x28ec <uart_puts+0x28>
		UDR0=s[i];
    28f2:	9d 91       	ld	r25, X+
    28f4:	98 83       	st	Y, r25
}

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    28f6:	a2 17       	cp	r26, r18
    28f8:	b3 07       	cpc	r27, r19
    28fa:	c1 f7       	brne	.-16     	; 0x28ec <uart_puts+0x28>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20)); 
    28fc:	e0 ec       	ldi	r30, 0xC0	; 192
    28fe:	f0 e0       	ldi	r31, 0x00	; 0
    2900:	80 81       	ld	r24, Z
    2902:	85 ff       	sbrs	r24, 5
    2904:	fd cf       	rjmp	.-6      	; 0x2900 <uart_puts+0x3c>
	UDR0 = 13;
    2906:	8d e0       	ldi	r24, 0x0D	; 13
    2908:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    290c:	e0 ec       	ldi	r30, 0xC0	; 192
    290e:	f0 e0       	ldi	r31, 0x00	; 0
    2910:	80 81       	ld	r24, Z
    2912:	85 ff       	sbrs	r24, 5
    2914:	fd cf       	rjmp	.-6      	; 0x2910 <uart_puts+0x4c>
	UDR0 = 10;
    2916:	8a e0       	ldi	r24, 0x0A	; 10
    2918:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    291c:	df 91       	pop	r29
    291e:	cf 91       	pop	r28
    2920:	08 95       	ret

00002922 <_exit>:
    2922:	f8 94       	cli

00002924 <__stop_program>:
    2924:	ff cf       	rjmp	.-2      	; 0x2924 <__stop_program>
