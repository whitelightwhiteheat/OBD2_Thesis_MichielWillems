
Gateway.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000182  00800100  00002bfa  00002c8e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002bfa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800282  00800282  00002e10  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002e10  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002e40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000398  00000000  00000000  00002e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000957f  00000000  00000000  00003218  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000167e  00000000  00000000  0000c797  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002868  00000000  00000000  0000de15  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000122c  00000000  00000000  00010680  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010b8  00000000  00000000  000118ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000068ba  00000000  00000000  00012964  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000388  00000000  00000000  0001921e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d9 c0       	rjmp	.+434    	; 0x1b4 <__ctors_end>
       2:	00 00       	nop
       4:	f6 c0       	rjmp	.+492    	; 0x1f2 <__bad_interrupt>
       6:	00 00       	nop
       8:	f4 c0       	rjmp	.+488    	; 0x1f2 <__bad_interrupt>
       a:	00 00       	nop
       c:	f2 c0       	rjmp	.+484    	; 0x1f2 <__bad_interrupt>
       e:	00 00       	nop
      10:	f0 c0       	rjmp	.+480    	; 0x1f2 <__bad_interrupt>
      12:	00 00       	nop
      14:	ee c0       	rjmp	.+476    	; 0x1f2 <__bad_interrupt>
      16:	00 00       	nop
      18:	ec c0       	rjmp	.+472    	; 0x1f2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ea c0       	rjmp	.+468    	; 0x1f2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	e8 c0       	rjmp	.+464    	; 0x1f2 <__bad_interrupt>
      22:	00 00       	nop
      24:	e6 c0       	rjmp	.+460    	; 0x1f2 <__bad_interrupt>
      26:	00 00       	nop
      28:	e4 c0       	rjmp	.+456    	; 0x1f2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	e2 c0       	rjmp	.+452    	; 0x1f2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	e0 c0       	rjmp	.+448    	; 0x1f2 <__bad_interrupt>
      32:	00 00       	nop
      34:	de c0       	rjmp	.+444    	; 0x1f2 <__bad_interrupt>
      36:	00 00       	nop
      38:	dc c0       	rjmp	.+440    	; 0x1f2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	da c0       	rjmp	.+436    	; 0x1f2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	d8 c0       	rjmp	.+432    	; 0x1f2 <__bad_interrupt>
      42:	00 00       	nop
      44:	d6 c0       	rjmp	.+428    	; 0x1f2 <__bad_interrupt>
      46:	00 00       	nop
      48:	d4 c0       	rjmp	.+424    	; 0x1f2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d2 c0       	rjmp	.+420    	; 0x1f2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d0 c0       	rjmp	.+416    	; 0x1f2 <__bad_interrupt>
      52:	00 00       	nop
      54:	ce c0       	rjmp	.+412    	; 0x1f2 <__bad_interrupt>
      56:	00 00       	nop
      58:	cc c0       	rjmp	.+408    	; 0x1f2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ca c0       	rjmp	.+404    	; 0x1f2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	c8 c0       	rjmp	.+400    	; 0x1f2 <__bad_interrupt>
      62:	00 00       	nop
      64:	c6 c0       	rjmp	.+396    	; 0x1f2 <__bad_interrupt>
      66:	00 00       	nop
      68:	c4 c0       	rjmp	.+392    	; 0x1f2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c2 c0       	rjmp	.+388    	; 0x1f2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c0 c0       	rjmp	.+384    	; 0x1f2 <__bad_interrupt>
      72:	00 00       	nop
      74:	be c0       	rjmp	.+380    	; 0x1f2 <__bad_interrupt>
      76:	00 00       	nop
      78:	bc c0       	rjmp	.+376    	; 0x1f2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	ba c0       	rjmp	.+372    	; 0x1f2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	b8 c0       	rjmp	.+368    	; 0x1f2 <__bad_interrupt>
      82:	00 00       	nop
      84:	b6 c0       	rjmp	.+364    	; 0x1f2 <__bad_interrupt>
      86:	00 00       	nop
      88:	b4 c0       	rjmp	.+360    	; 0x1f2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	b2 c0       	rjmp	.+356    	; 0x1f2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	b0 c0       	rjmp	.+352    	; 0x1f2 <__bad_interrupt>
	...

00000094 <__trampolines_end>:
      94:	67 e6       	ldi	r22, 0x67	; 103
      96:	09 6a       	ori	r16, 0xA9	; 169
      98:	85 ae       	std	Z+61, r8	; 0x3d
      9a:	67 bb       	out	0x17, r22	; 23
      9c:	72 f3       	brmi	.-36     	; 0x7a <__SREG__+0x3b>
      9e:	6e 3c       	cpi	r22, 0xCE	; 206
      a0:	3a f5       	brpl	.+78     	; 0xf0 <k+0x3c>
      a2:	4f a5       	ldd	r20, Y+47	; 0x2f
      a4:	7f 52       	subi	r23, 0x2F	; 47
      a6:	0e 51       	subi	r16, 0x1E	; 30
      a8:	8c 68       	ori	r24, 0x8C	; 140
      aa:	05 9b       	sbis	0x00, 5	; 0
      ac:	ab d9       	rcall	.-3242   	; 0xfffff404 <__eeprom_end+0xff7ef404>
      ae:	83 1f       	adc	r24, r19
      b0:	19 cd       	rjmp	.-1486   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
      b2:	e0 5b       	subi	r30, 0xB0	; 176

000000b4 <k>:
      b4:	98 2f 8a 42 91 44 37 71 cf fb c0 b5 a5 db b5 e9     ./.B.D7q........
      c4:	5b c2 56 39 f1 11 f1 59 a4 82 3f 92 d5 5e 1c ab     [.V9...Y..?..^..
      d4:	98 aa 07 d8 01 5b 83 12 be 85 31 24 c3 7d 0c 55     .....[....1$.}.U
      e4:	74 5d be 72 fe b1 de 80 a7 06 dc 9b 74 f1 9b c1     t].r........t...
      f4:	c1 69 9b e4 86 47 be ef c6 9d c1 0f cc a1 0c 24     .i...G.........$
     104:	6f 2c e9 2d aa 84 74 4a dc a9 b0 5c da 88 f9 76     o,.-..tJ...\...v
     114:	52 51 3e 98 6d c6 31 a8 c8 27 03 b0 c7 7f 59 bf     RQ>.m.1..'....Y.
     124:	f3 0b e0 c6 47 91 a7 d5 51 63 ca 06 67 29 29 14     ....G...Qc..g)).
     134:	85 0a b7 27 38 21 1b 2e fc 6d 2c 4d 13 0d 38 53     ...'8!...m,M..8S
     144:	54 73 0a 65 bb 0a 6a 76 2e c9 c2 81 85 2c 72 92     Ts.e..jv.....,r.
     154:	a1 e8 bf a2 4b 66 1a a8 70 8b 4b c2 a3 51 6c c7     ....Kf..p.K..Ql.
     164:	19 e8 92 d1 24 06 99 d6 85 35 0e f4 70 a0 6a 10     ....$....5..p.j.
     174:	16 c1 a4 19 08 6c 37 1e 4c 77 48 27 b5 bc b0 34     .....l7.LwH'...4
     184:	b3 0c 1c 39 4a aa d8 4e 4f ca 9c 5b f3 6f 2e 68     ...9J..NO..[.o.h
     194:	ee 82 8f 74 6f 63 a5 78 14 78 c8 84 08 02 c7 8c     ...toc.x.x......
     1a4:	fa ff be 90 eb 6c 50 a4 f7 a3 f9 be f2 78 71 c6     .....lP......xq.

000001b4 <__ctors_end>:
     1b4:	11 24       	eor	r1, r1
     1b6:	1f be       	out	0x3f, r1	; 63
     1b8:	cf ef       	ldi	r28, 0xFF	; 255
     1ba:	d0 e1       	ldi	r29, 0x10	; 16
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	cd bf       	out	0x3d, r28	; 61

000001c0 <__do_copy_data>:
     1c0:	12 e0       	ldi	r17, 0x02	; 2
     1c2:	a0 e0       	ldi	r26, 0x00	; 0
     1c4:	b1 e0       	ldi	r27, 0x01	; 1
     1c6:	ea ef       	ldi	r30, 0xFA	; 250
     1c8:	fb e2       	ldi	r31, 0x2B	; 43
     1ca:	00 e0       	ldi	r16, 0x00	; 0
     1cc:	0b bf       	out	0x3b, r16	; 59
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <__do_copy_data+0x14>
     1d0:	07 90       	elpm	r0, Z+
     1d2:	0d 92       	st	X+, r0
     1d4:	a2 38       	cpi	r26, 0x82	; 130
     1d6:	b1 07       	cpc	r27, r17
     1d8:	d9 f7       	brne	.-10     	; 0x1d0 <__do_copy_data+0x10>

000001da <__do_clear_bss>:
     1da:	22 e0       	ldi	r18, 0x02	; 2
     1dc:	a2 e8       	ldi	r26, 0x82	; 130
     1de:	b2 e0       	ldi	r27, 0x02	; 2
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <.do_clear_bss_start>

000001e2 <.do_clear_bss_loop>:
     1e2:	1d 92       	st	X+, r1

000001e4 <.do_clear_bss_start>:
     1e4:	a4 38       	cpi	r26, 0x84	; 132
     1e6:	b2 07       	cpc	r27, r18
     1e8:	e1 f7       	brne	.-8      	; 0x1e2 <.do_clear_bss_loop>
     1ea:	0e 94 64 10 	call	0x20c8	; 0x20c8 <main>
     1ee:	0c 94 fb 15 	jmp	0x2bf6	; 0x2bf6 <_exit>

000001f2 <__bad_interrupt>:
     1f2:	06 cf       	rjmp	.-500    	; 0x0 <__vectors>

000001f4 <can_init>:
#define INTR_MASK 0b10000000
#define BXOK_MASK 0b00010000
#define RXOK_MASK 0b00100000


void can_init(){
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29

	cli();
     1f8:	f8 94       	cli
	// no overload frame request
	// no listening mode
	// no test mode
	// standby mode
	// software reset request
	CANGCON = (1 << SWRES);
     1fa:	81 e0       	ldi	r24, 0x01	; 1
     1fc:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
	
	// enable receive interrupt
	// enable general interrupt
	CANGIE =  (1 << ENRX) | (1 << ENTX) | (1 << ENBX);
     200:	84 e3       	ldi	r24, 0x34	; 52
     202:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
	CANGIT = 0x00;
     206:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     20a:	80 e0       	ldi	r24, 0x00	; 0
	
	int c;
	for (c=0;c<15;c++)
	{
		
		CANPAGE = c << 4;
     20c:	cd ee       	ldi	r28, 0xED	; 237
     20e:	d0 e0       	ldi	r29, 0x00	; 0
		CANCDMOB = 0x00;
     210:	af ee       	ldi	r26, 0xEF	; 239
     212:	b0 e0       	ldi	r27, 0x00	; 0
		CANSTMOB = 0x00;
     214:	ee ee       	ldi	r30, 0xEE	; 238
     216:	f0 e0       	ldi	r31, 0x00	; 0
	
	int c;
	for (c=0;c<15;c++)
	{
		
		CANPAGE = c << 4;
     218:	98 2f       	mov	r25, r24
     21a:	92 95       	swap	r25
     21c:	90 7f       	andi	r25, 0xF0	; 240
     21e:	98 83       	st	Y, r25
		CANCDMOB = 0x00;
     220:	1c 92       	st	X, r1
		CANSTMOB = 0x00;
     222:	10 82       	st	Z, r1
     224:	8f 5f       	subi	r24, 0xFF	; 255
	// enable general interrupt
	CANGIE =  (1 << ENRX) | (1 << ENTX) | (1 << ENBX);
	CANGIT = 0x00;
	
	int c;
	for (c=0;c<15;c++)
     226:	8f 30       	cpi	r24, 0x0F	; 15
     228:	b9 f7       	brne	.-18     	; 0x218 <can_init+0x24>
		
	}

	// CAN bit timing registers
	// set the timing (baud) ? 125 KBaud with 8 Mhz clock
	CANBT1 = 0x06 ;    // Baud Rate Prescaler
     22a:	86 e0       	ldi	r24, 0x06	; 6
     22c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
	CANBT2 = 0x0c ;    // Re-Synchronization & Propagation
     230:	8c e0       	ldi	r24, 0x0C	; 12
     232:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
	CANBT3 = 0x37 ;    // Phase Segments & Sample Point(s)
     236:	87 e3       	ldi	r24, 0x37	; 55
     238:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	// CAN Timer Clock Period: 0.500 us
	CANTCON = 0x00 ;
     23c:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>

	// enter enable mode
	CANGCON = 0b00000010 ;    //(1 << ENA/STB)
     240:	82 e0       	ldi	r24, 0x02	; 2
     242:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>

		sei();
     246:	78 94       	sei

}
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <uECC_vli_clear>:
#if (uECC_OPTIMIZATION_LEVEL > 0)
    &vli_mmod_fast_secp256k1
#endif
};

uECC_Curve uECC_secp256k1(void) { return &curve_secp256k1; }
     24e:	dc 01       	movw	r26, r24
     250:	ed e4       	ldi	r30, 0x4D	; 77
     252:	f1 e0       	ldi	r31, 0x01	; 1
     254:	e6 1b       	sub	r30, r22
     256:	f1 09       	sbc	r31, r1
     258:	09 94       	ijmp
     25a:	1d 92       	st	X+, r1
     25c:	1d 92       	st	X+, r1
     25e:	1d 92       	st	X+, r1
     260:	1d 92       	st	X+, r1
     262:	1d 92       	st	X+, r1
     264:	1d 92       	st	X+, r1
     266:	1d 92       	st	X+, r1
     268:	1d 92       	st	X+, r1
     26a:	1d 92       	st	X+, r1
     26c:	1d 92       	st	X+, r1
     26e:	1d 92       	st	X+, r1
     270:	1d 92       	st	X+, r1
     272:	1d 92       	st	X+, r1
     274:	1d 92       	st	X+, r1
     276:	1d 92       	st	X+, r1
     278:	1d 92       	st	X+, r1
     27a:	1d 92       	st	X+, r1
     27c:	1d 92       	st	X+, r1
     27e:	1d 92       	st	X+, r1
     280:	1d 92       	st	X+, r1
     282:	1d 92       	st	X+, r1
     284:	1d 92       	st	X+, r1
     286:	1d 92       	st	X+, r1
     288:	1d 92       	st	X+, r1
     28a:	1d 92       	st	X+, r1
     28c:	1d 92       	st	X+, r1
     28e:	1d 92       	st	X+, r1
     290:	1d 92       	st	X+, r1
     292:	1d 92       	st	X+, r1
     294:	1d 92       	st	X+, r1
     296:	1d 92       	st	X+, r1
     298:	1d 92       	st	X+, r1
     29a:	08 95       	ret

0000029c <uECC_vli_set>:
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	44 0f       	add	r20, r20
     2a2:	eb 01       	movw	r28, r22
     2a4:	dc 01       	movw	r26, r24
     2a6:	e8 e9       	ldi	r30, 0x98	; 152
     2a8:	f1 e0       	ldi	r31, 0x01	; 1
     2aa:	e4 1b       	sub	r30, r20
     2ac:	f1 09       	sbc	r31, r1
     2ae:	09 94       	ijmp
     2b0:	09 90       	ld	r0, Y+
     2b2:	0d 92       	st	X+, r0
     2b4:	09 90       	ld	r0, Y+
     2b6:	0d 92       	st	X+, r0
     2b8:	09 90       	ld	r0, Y+
     2ba:	0d 92       	st	X+, r0
     2bc:	09 90       	ld	r0, Y+
     2be:	0d 92       	st	X+, r0
     2c0:	09 90       	ld	r0, Y+
     2c2:	0d 92       	st	X+, r0
     2c4:	09 90       	ld	r0, Y+
     2c6:	0d 92       	st	X+, r0
     2c8:	09 90       	ld	r0, Y+
     2ca:	0d 92       	st	X+, r0
     2cc:	09 90       	ld	r0, Y+
     2ce:	0d 92       	st	X+, r0
     2d0:	09 90       	ld	r0, Y+
     2d2:	0d 92       	st	X+, r0
     2d4:	09 90       	ld	r0, Y+
     2d6:	0d 92       	st	X+, r0
     2d8:	09 90       	ld	r0, Y+
     2da:	0d 92       	st	X+, r0
     2dc:	09 90       	ld	r0, Y+
     2de:	0d 92       	st	X+, r0
     2e0:	09 90       	ld	r0, Y+
     2e2:	0d 92       	st	X+, r0
     2e4:	09 90       	ld	r0, Y+
     2e6:	0d 92       	st	X+, r0
     2e8:	09 90       	ld	r0, Y+
     2ea:	0d 92       	st	X+, r0
     2ec:	09 90       	ld	r0, Y+
     2ee:	0d 92       	st	X+, r0
     2f0:	09 90       	ld	r0, Y+
     2f2:	0d 92       	st	X+, r0
     2f4:	09 90       	ld	r0, Y+
     2f6:	0d 92       	st	X+, r0
     2f8:	09 90       	ld	r0, Y+
     2fa:	0d 92       	st	X+, r0
     2fc:	09 90       	ld	r0, Y+
     2fe:	0d 92       	st	X+, r0
     300:	09 90       	ld	r0, Y+
     302:	0d 92       	st	X+, r0
     304:	09 90       	ld	r0, Y+
     306:	0d 92       	st	X+, r0
     308:	09 90       	ld	r0, Y+
     30a:	0d 92       	st	X+, r0
     30c:	09 90       	ld	r0, Y+
     30e:	0d 92       	st	X+, r0
     310:	09 90       	ld	r0, Y+
     312:	0d 92       	st	X+, r0
     314:	09 90       	ld	r0, Y+
     316:	0d 92       	st	X+, r0
     318:	09 90       	ld	r0, Y+
     31a:	0d 92       	st	X+, r0
     31c:	09 90       	ld	r0, Y+
     31e:	0d 92       	st	X+, r0
     320:	09 90       	ld	r0, Y+
     322:	0d 92       	st	X+, r0
     324:	09 90       	ld	r0, Y+
     326:	0d 92       	st	X+, r0
     328:	09 90       	ld	r0, Y+
     32a:	0d 92       	st	X+, r0
     32c:	09 90       	ld	r0, Y+
     32e:	0d 92       	st	X+, r0
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <uECC_vli_rshift1>:
     336:	26 2f       	mov	r18, r22
     338:	06 2e       	mov	r0, r22
     33a:	00 0c       	add	r0, r0
     33c:	33 0b       	sbc	r19, r19
     33e:	21 50       	subi	r18, 0x01	; 1
     340:	31 09       	sbc	r19, r1
     342:	32 2f       	mov	r19, r18
     344:	33 0f       	add	r19, r19
     346:	23 0f       	add	r18, r19
     348:	dc 01       	movw	r26, r24
     34a:	ec e0       	ldi	r30, 0x0C	; 12
     34c:	f2 e0       	ldi	r31, 0x02	; 2
     34e:	e2 1b       	sub	r30, r18
     350:	f1 09       	sbc	r31, r1
     352:	a6 0f       	add	r26, r22
     354:	b1 1d       	adc	r27, r1
     356:	0e 90       	ld	r0, -X
     358:	06 94       	lsr	r0
     35a:	0c 92       	st	X, r0
     35c:	09 94       	ijmp
     35e:	0e 90       	ld	r0, -X
     360:	07 94       	ror	r0
     362:	0c 92       	st	X, r0
     364:	0e 90       	ld	r0, -X
     366:	07 94       	ror	r0
     368:	0c 92       	st	X, r0
     36a:	0e 90       	ld	r0, -X
     36c:	07 94       	ror	r0
     36e:	0c 92       	st	X, r0
     370:	0e 90       	ld	r0, -X
     372:	07 94       	ror	r0
     374:	0c 92       	st	X, r0
     376:	0e 90       	ld	r0, -X
     378:	07 94       	ror	r0
     37a:	0c 92       	st	X, r0
     37c:	0e 90       	ld	r0, -X
     37e:	07 94       	ror	r0
     380:	0c 92       	st	X, r0
     382:	0e 90       	ld	r0, -X
     384:	07 94       	ror	r0
     386:	0c 92       	st	X, r0
     388:	0e 90       	ld	r0, -X
     38a:	07 94       	ror	r0
     38c:	0c 92       	st	X, r0
     38e:	0e 90       	ld	r0, -X
     390:	07 94       	ror	r0
     392:	0c 92       	st	X, r0
     394:	0e 90       	ld	r0, -X
     396:	07 94       	ror	r0
     398:	0c 92       	st	X, r0
     39a:	0e 90       	ld	r0, -X
     39c:	07 94       	ror	r0
     39e:	0c 92       	st	X, r0
     3a0:	0e 90       	ld	r0, -X
     3a2:	07 94       	ror	r0
     3a4:	0c 92       	st	X, r0
     3a6:	0e 90       	ld	r0, -X
     3a8:	07 94       	ror	r0
     3aa:	0c 92       	st	X, r0
     3ac:	0e 90       	ld	r0, -X
     3ae:	07 94       	ror	r0
     3b0:	0c 92       	st	X, r0
     3b2:	0e 90       	ld	r0, -X
     3b4:	07 94       	ror	r0
     3b6:	0c 92       	st	X, r0
     3b8:	0e 90       	ld	r0, -X
     3ba:	07 94       	ror	r0
     3bc:	0c 92       	st	X, r0
     3be:	0e 90       	ld	r0, -X
     3c0:	07 94       	ror	r0
     3c2:	0c 92       	st	X, r0
     3c4:	0e 90       	ld	r0, -X
     3c6:	07 94       	ror	r0
     3c8:	0c 92       	st	X, r0
     3ca:	0e 90       	ld	r0, -X
     3cc:	07 94       	ror	r0
     3ce:	0c 92       	st	X, r0
     3d0:	0e 90       	ld	r0, -X
     3d2:	07 94       	ror	r0
     3d4:	0c 92       	st	X, r0
     3d6:	0e 90       	ld	r0, -X
     3d8:	07 94       	ror	r0
     3da:	0c 92       	st	X, r0
     3dc:	0e 90       	ld	r0, -X
     3de:	07 94       	ror	r0
     3e0:	0c 92       	st	X, r0
     3e2:	0e 90       	ld	r0, -X
     3e4:	07 94       	ror	r0
     3e6:	0c 92       	st	X, r0
     3e8:	0e 90       	ld	r0, -X
     3ea:	07 94       	ror	r0
     3ec:	0c 92       	st	X, r0
     3ee:	0e 90       	ld	r0, -X
     3f0:	07 94       	ror	r0
     3f2:	0c 92       	st	X, r0
     3f4:	0e 90       	ld	r0, -X
     3f6:	07 94       	ror	r0
     3f8:	0c 92       	st	X, r0
     3fa:	0e 90       	ld	r0, -X
     3fc:	07 94       	ror	r0
     3fe:	0c 92       	st	X, r0
     400:	0e 90       	ld	r0, -X
     402:	07 94       	ror	r0
     404:	0c 92       	st	X, r0
     406:	0e 90       	ld	r0, -X
     408:	07 94       	ror	r0
     40a:	0c 92       	st	X, r0
     40c:	0e 90       	ld	r0, -X
     40e:	07 94       	ror	r0
     410:	0c 92       	st	X, r0
     412:	0e 90       	ld	r0, -X
     414:	07 94       	ror	r0
     416:	0c 92       	st	X, r0
     418:	08 95       	ret

0000041a <uECC_vli_add>:
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	22 0f       	add	r18, r18
     420:	db 01       	movw	r26, r22
     422:	ea 01       	movw	r28, r20
     424:	ac 01       	movw	r20, r24
     426:	e9 e5       	ldi	r30, 0x59	; 89
     428:	f2 e0       	ldi	r31, 0x02	; 2
     42a:	e2 1b       	sub	r30, r18
     42c:	f1 09       	sbc	r31, r1
     42e:	88 94       	clc
     430:	09 94       	ijmp
     432:	fa 01       	movw	r30, r20
     434:	3e c0       	rjmp	.+124    	; 0x4b2 <add_89_32>
     436:	fa 01       	movw	r30, r20
     438:	40 c0       	rjmp	.+128    	; 0x4ba <add_89_31>
     43a:	fa 01       	movw	r30, r20
     43c:	42 c0       	rjmp	.+132    	; 0x4c2 <add_89_30>
     43e:	fa 01       	movw	r30, r20
     440:	44 c0       	rjmp	.+136    	; 0x4ca <add_89_29>
     442:	fa 01       	movw	r30, r20
     444:	46 c0       	rjmp	.+140    	; 0x4d2 <add_89_28>
     446:	fa 01       	movw	r30, r20
     448:	48 c0       	rjmp	.+144    	; 0x4da <add_89_27>
     44a:	fa 01       	movw	r30, r20
     44c:	4a c0       	rjmp	.+148    	; 0x4e2 <add_89_26>
     44e:	fa 01       	movw	r30, r20
     450:	4c c0       	rjmp	.+152    	; 0x4ea <add_89_25>
     452:	fa 01       	movw	r30, r20
     454:	4e c0       	rjmp	.+156    	; 0x4f2 <add_89_24>
     456:	fa 01       	movw	r30, r20
     458:	50 c0       	rjmp	.+160    	; 0x4fa <add_89_23>
     45a:	fa 01       	movw	r30, r20
     45c:	52 c0       	rjmp	.+164    	; 0x502 <add_89_22>
     45e:	fa 01       	movw	r30, r20
     460:	54 c0       	rjmp	.+168    	; 0x50a <add_89_21>
     462:	fa 01       	movw	r30, r20
     464:	56 c0       	rjmp	.+172    	; 0x512 <add_89_20>
     466:	fa 01       	movw	r30, r20
     468:	58 c0       	rjmp	.+176    	; 0x51a <add_89_19>
     46a:	fa 01       	movw	r30, r20
     46c:	5a c0       	rjmp	.+180    	; 0x522 <add_89_18>
     46e:	fa 01       	movw	r30, r20
     470:	5c c0       	rjmp	.+184    	; 0x52a <add_89_17>
     472:	fa 01       	movw	r30, r20
     474:	5e c0       	rjmp	.+188    	; 0x532 <add_89_16>
     476:	fa 01       	movw	r30, r20
     478:	60 c0       	rjmp	.+192    	; 0x53a <add_89_15>
     47a:	fa 01       	movw	r30, r20
     47c:	62 c0       	rjmp	.+196    	; 0x542 <add_89_14>
     47e:	fa 01       	movw	r30, r20
     480:	64 c0       	rjmp	.+200    	; 0x54a <add_89_13>
     482:	fa 01       	movw	r30, r20
     484:	66 c0       	rjmp	.+204    	; 0x552 <add_89_12>
     486:	fa 01       	movw	r30, r20
     488:	68 c0       	rjmp	.+208    	; 0x55a <add_89_11>
     48a:	fa 01       	movw	r30, r20
     48c:	6a c0       	rjmp	.+212    	; 0x562 <add_89_10>
     48e:	fa 01       	movw	r30, r20
     490:	6c c0       	rjmp	.+216    	; 0x56a <add_89_9>
     492:	fa 01       	movw	r30, r20
     494:	6e c0       	rjmp	.+220    	; 0x572 <add_89_8>
     496:	fa 01       	movw	r30, r20
     498:	70 c0       	rjmp	.+224    	; 0x57a <add_89_7>
     49a:	fa 01       	movw	r30, r20
     49c:	72 c0       	rjmp	.+228    	; 0x582 <add_89_6>
     49e:	fa 01       	movw	r30, r20
     4a0:	74 c0       	rjmp	.+232    	; 0x58a <add_89_5>
     4a2:	fa 01       	movw	r30, r20
     4a4:	76 c0       	rjmp	.+236    	; 0x592 <add_89_4>
     4a6:	fa 01       	movw	r30, r20
     4a8:	78 c0       	rjmp	.+240    	; 0x59a <add_89_3>
     4aa:	fa 01       	movw	r30, r20
     4ac:	7a c0       	rjmp	.+244    	; 0x5a2 <add_89_2>
     4ae:	fa 01       	movw	r30, r20
     4b0:	7c c0       	rjmp	.+248    	; 0x5aa <add_89_1>

000004b2 <add_89_32>:
     4b2:	8d 91       	ld	r24, X+
     4b4:	99 91       	ld	r25, Y+
     4b6:	89 1f       	adc	r24, r25
     4b8:	81 93       	st	Z+, r24

000004ba <add_89_31>:
     4ba:	8d 91       	ld	r24, X+
     4bc:	99 91       	ld	r25, Y+
     4be:	89 1f       	adc	r24, r25
     4c0:	81 93       	st	Z+, r24

000004c2 <add_89_30>:
     4c2:	8d 91       	ld	r24, X+
     4c4:	99 91       	ld	r25, Y+
     4c6:	89 1f       	adc	r24, r25
     4c8:	81 93       	st	Z+, r24

000004ca <add_89_29>:
     4ca:	8d 91       	ld	r24, X+
     4cc:	99 91       	ld	r25, Y+
     4ce:	89 1f       	adc	r24, r25
     4d0:	81 93       	st	Z+, r24

000004d2 <add_89_28>:
     4d2:	8d 91       	ld	r24, X+
     4d4:	99 91       	ld	r25, Y+
     4d6:	89 1f       	adc	r24, r25
     4d8:	81 93       	st	Z+, r24

000004da <add_89_27>:
     4da:	8d 91       	ld	r24, X+
     4dc:	99 91       	ld	r25, Y+
     4de:	89 1f       	adc	r24, r25
     4e0:	81 93       	st	Z+, r24

000004e2 <add_89_26>:
     4e2:	8d 91       	ld	r24, X+
     4e4:	99 91       	ld	r25, Y+
     4e6:	89 1f       	adc	r24, r25
     4e8:	81 93       	st	Z+, r24

000004ea <add_89_25>:
     4ea:	8d 91       	ld	r24, X+
     4ec:	99 91       	ld	r25, Y+
     4ee:	89 1f       	adc	r24, r25
     4f0:	81 93       	st	Z+, r24

000004f2 <add_89_24>:
     4f2:	8d 91       	ld	r24, X+
     4f4:	99 91       	ld	r25, Y+
     4f6:	89 1f       	adc	r24, r25
     4f8:	81 93       	st	Z+, r24

000004fa <add_89_23>:
     4fa:	8d 91       	ld	r24, X+
     4fc:	99 91       	ld	r25, Y+
     4fe:	89 1f       	adc	r24, r25
     500:	81 93       	st	Z+, r24

00000502 <add_89_22>:
     502:	8d 91       	ld	r24, X+
     504:	99 91       	ld	r25, Y+
     506:	89 1f       	adc	r24, r25
     508:	81 93       	st	Z+, r24

0000050a <add_89_21>:
     50a:	8d 91       	ld	r24, X+
     50c:	99 91       	ld	r25, Y+
     50e:	89 1f       	adc	r24, r25
     510:	81 93       	st	Z+, r24

00000512 <add_89_20>:
     512:	8d 91       	ld	r24, X+
     514:	99 91       	ld	r25, Y+
     516:	89 1f       	adc	r24, r25
     518:	81 93       	st	Z+, r24

0000051a <add_89_19>:
     51a:	8d 91       	ld	r24, X+
     51c:	99 91       	ld	r25, Y+
     51e:	89 1f       	adc	r24, r25
     520:	81 93       	st	Z+, r24

00000522 <add_89_18>:
     522:	8d 91       	ld	r24, X+
     524:	99 91       	ld	r25, Y+
     526:	89 1f       	adc	r24, r25
     528:	81 93       	st	Z+, r24

0000052a <add_89_17>:
     52a:	8d 91       	ld	r24, X+
     52c:	99 91       	ld	r25, Y+
     52e:	89 1f       	adc	r24, r25
     530:	81 93       	st	Z+, r24

00000532 <add_89_16>:
     532:	8d 91       	ld	r24, X+
     534:	99 91       	ld	r25, Y+
     536:	89 1f       	adc	r24, r25
     538:	81 93       	st	Z+, r24

0000053a <add_89_15>:
     53a:	8d 91       	ld	r24, X+
     53c:	99 91       	ld	r25, Y+
     53e:	89 1f       	adc	r24, r25
     540:	81 93       	st	Z+, r24

00000542 <add_89_14>:
     542:	8d 91       	ld	r24, X+
     544:	99 91       	ld	r25, Y+
     546:	89 1f       	adc	r24, r25
     548:	81 93       	st	Z+, r24

0000054a <add_89_13>:
     54a:	8d 91       	ld	r24, X+
     54c:	99 91       	ld	r25, Y+
     54e:	89 1f       	adc	r24, r25
     550:	81 93       	st	Z+, r24

00000552 <add_89_12>:
     552:	8d 91       	ld	r24, X+
     554:	99 91       	ld	r25, Y+
     556:	89 1f       	adc	r24, r25
     558:	81 93       	st	Z+, r24

0000055a <add_89_11>:
     55a:	8d 91       	ld	r24, X+
     55c:	99 91       	ld	r25, Y+
     55e:	89 1f       	adc	r24, r25
     560:	81 93       	st	Z+, r24

00000562 <add_89_10>:
     562:	8d 91       	ld	r24, X+
     564:	99 91       	ld	r25, Y+
     566:	89 1f       	adc	r24, r25
     568:	81 93       	st	Z+, r24

0000056a <add_89_9>:
     56a:	8d 91       	ld	r24, X+
     56c:	99 91       	ld	r25, Y+
     56e:	89 1f       	adc	r24, r25
     570:	81 93       	st	Z+, r24

00000572 <add_89_8>:
     572:	8d 91       	ld	r24, X+
     574:	99 91       	ld	r25, Y+
     576:	89 1f       	adc	r24, r25
     578:	81 93       	st	Z+, r24

0000057a <add_89_7>:
     57a:	8d 91       	ld	r24, X+
     57c:	99 91       	ld	r25, Y+
     57e:	89 1f       	adc	r24, r25
     580:	81 93       	st	Z+, r24

00000582 <add_89_6>:
     582:	8d 91       	ld	r24, X+
     584:	99 91       	ld	r25, Y+
     586:	89 1f       	adc	r24, r25
     588:	81 93       	st	Z+, r24

0000058a <add_89_5>:
     58a:	8d 91       	ld	r24, X+
     58c:	99 91       	ld	r25, Y+
     58e:	89 1f       	adc	r24, r25
     590:	81 93       	st	Z+, r24

00000592 <add_89_4>:
     592:	8d 91       	ld	r24, X+
     594:	99 91       	ld	r25, Y+
     596:	89 1f       	adc	r24, r25
     598:	81 93       	st	Z+, r24

0000059a <add_89_3>:
     59a:	8d 91       	ld	r24, X+
     59c:	99 91       	ld	r25, Y+
     59e:	89 1f       	adc	r24, r25
     5a0:	81 93       	st	Z+, r24

000005a2 <add_89_2>:
     5a2:	8d 91       	ld	r24, X+
     5a4:	99 91       	ld	r25, Y+
     5a6:	89 1f       	adc	r24, r25
     5a8:	81 93       	st	Z+, r24

000005aa <add_89_1>:
     5aa:	8d 91       	ld	r24, X+
     5ac:	99 91       	ld	r25, Y+
     5ae:	89 1f       	adc	r24, r25
     5b0:	81 93       	st	Z+, r24
     5b2:	81 2d       	mov	r24, r1
     5b4:	88 1f       	adc	r24, r24
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <uECC_vli_sub>:
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	22 0f       	add	r18, r18
     5c2:	db 01       	movw	r26, r22
     5c4:	ea 01       	movw	r28, r20
     5c6:	ac 01       	movw	r20, r24
     5c8:	ea e2       	ldi	r30, 0x2A	; 42
     5ca:	f3 e0       	ldi	r31, 0x03	; 3
     5cc:	e2 1b       	sub	r30, r18
     5ce:	f1 09       	sbc	r31, r1
     5d0:	88 94       	clc
     5d2:	09 94       	ijmp
     5d4:	fa 01       	movw	r30, r20
     5d6:	3e c0       	rjmp	.+124    	; 0x654 <sub_129_32>
     5d8:	fa 01       	movw	r30, r20
     5da:	40 c0       	rjmp	.+128    	; 0x65c <sub_129_31>
     5dc:	fa 01       	movw	r30, r20
     5de:	42 c0       	rjmp	.+132    	; 0x664 <sub_129_30>
     5e0:	fa 01       	movw	r30, r20
     5e2:	44 c0       	rjmp	.+136    	; 0x66c <sub_129_29>
     5e4:	fa 01       	movw	r30, r20
     5e6:	46 c0       	rjmp	.+140    	; 0x674 <sub_129_28>
     5e8:	fa 01       	movw	r30, r20
     5ea:	48 c0       	rjmp	.+144    	; 0x67c <sub_129_27>
     5ec:	fa 01       	movw	r30, r20
     5ee:	4a c0       	rjmp	.+148    	; 0x684 <sub_129_26>
     5f0:	fa 01       	movw	r30, r20
     5f2:	4c c0       	rjmp	.+152    	; 0x68c <sub_129_25>
     5f4:	fa 01       	movw	r30, r20
     5f6:	4e c0       	rjmp	.+156    	; 0x694 <sub_129_24>
     5f8:	fa 01       	movw	r30, r20
     5fa:	50 c0       	rjmp	.+160    	; 0x69c <sub_129_23>
     5fc:	fa 01       	movw	r30, r20
     5fe:	52 c0       	rjmp	.+164    	; 0x6a4 <sub_129_22>
     600:	fa 01       	movw	r30, r20
     602:	54 c0       	rjmp	.+168    	; 0x6ac <sub_129_21>
     604:	fa 01       	movw	r30, r20
     606:	56 c0       	rjmp	.+172    	; 0x6b4 <sub_129_20>
     608:	fa 01       	movw	r30, r20
     60a:	58 c0       	rjmp	.+176    	; 0x6bc <sub_129_19>
     60c:	fa 01       	movw	r30, r20
     60e:	5a c0       	rjmp	.+180    	; 0x6c4 <sub_129_18>
     610:	fa 01       	movw	r30, r20
     612:	5c c0       	rjmp	.+184    	; 0x6cc <sub_129_17>
     614:	fa 01       	movw	r30, r20
     616:	5e c0       	rjmp	.+188    	; 0x6d4 <sub_129_16>
     618:	fa 01       	movw	r30, r20
     61a:	60 c0       	rjmp	.+192    	; 0x6dc <sub_129_15>
     61c:	fa 01       	movw	r30, r20
     61e:	62 c0       	rjmp	.+196    	; 0x6e4 <sub_129_14>
     620:	fa 01       	movw	r30, r20
     622:	64 c0       	rjmp	.+200    	; 0x6ec <sub_129_13>
     624:	fa 01       	movw	r30, r20
     626:	66 c0       	rjmp	.+204    	; 0x6f4 <sub_129_12>
     628:	fa 01       	movw	r30, r20
     62a:	68 c0       	rjmp	.+208    	; 0x6fc <sub_129_11>
     62c:	fa 01       	movw	r30, r20
     62e:	6a c0       	rjmp	.+212    	; 0x704 <sub_129_10>
     630:	fa 01       	movw	r30, r20
     632:	6c c0       	rjmp	.+216    	; 0x70c <sub_129_9>
     634:	fa 01       	movw	r30, r20
     636:	6e c0       	rjmp	.+220    	; 0x714 <sub_129_8>
     638:	fa 01       	movw	r30, r20
     63a:	70 c0       	rjmp	.+224    	; 0x71c <sub_129_7>
     63c:	fa 01       	movw	r30, r20
     63e:	72 c0       	rjmp	.+228    	; 0x724 <sub_129_6>
     640:	fa 01       	movw	r30, r20
     642:	74 c0       	rjmp	.+232    	; 0x72c <sub_129_5>
     644:	fa 01       	movw	r30, r20
     646:	76 c0       	rjmp	.+236    	; 0x734 <sub_129_4>
     648:	fa 01       	movw	r30, r20
     64a:	78 c0       	rjmp	.+240    	; 0x73c <sub_129_3>
     64c:	fa 01       	movw	r30, r20
     64e:	7a c0       	rjmp	.+244    	; 0x744 <sub_129_2>
     650:	fa 01       	movw	r30, r20
     652:	7c c0       	rjmp	.+248    	; 0x74c <sub_129_1>

00000654 <sub_129_32>:
     654:	8d 91       	ld	r24, X+
     656:	99 91       	ld	r25, Y+
     658:	89 0b       	sbc	r24, r25
     65a:	81 93       	st	Z+, r24

0000065c <sub_129_31>:
     65c:	8d 91       	ld	r24, X+
     65e:	99 91       	ld	r25, Y+
     660:	89 0b       	sbc	r24, r25
     662:	81 93       	st	Z+, r24

00000664 <sub_129_30>:
     664:	8d 91       	ld	r24, X+
     666:	99 91       	ld	r25, Y+
     668:	89 0b       	sbc	r24, r25
     66a:	81 93       	st	Z+, r24

0000066c <sub_129_29>:
     66c:	8d 91       	ld	r24, X+
     66e:	99 91       	ld	r25, Y+
     670:	89 0b       	sbc	r24, r25
     672:	81 93       	st	Z+, r24

00000674 <sub_129_28>:
     674:	8d 91       	ld	r24, X+
     676:	99 91       	ld	r25, Y+
     678:	89 0b       	sbc	r24, r25
     67a:	81 93       	st	Z+, r24

0000067c <sub_129_27>:
     67c:	8d 91       	ld	r24, X+
     67e:	99 91       	ld	r25, Y+
     680:	89 0b       	sbc	r24, r25
     682:	81 93       	st	Z+, r24

00000684 <sub_129_26>:
     684:	8d 91       	ld	r24, X+
     686:	99 91       	ld	r25, Y+
     688:	89 0b       	sbc	r24, r25
     68a:	81 93       	st	Z+, r24

0000068c <sub_129_25>:
     68c:	8d 91       	ld	r24, X+
     68e:	99 91       	ld	r25, Y+
     690:	89 0b       	sbc	r24, r25
     692:	81 93       	st	Z+, r24

00000694 <sub_129_24>:
     694:	8d 91       	ld	r24, X+
     696:	99 91       	ld	r25, Y+
     698:	89 0b       	sbc	r24, r25
     69a:	81 93       	st	Z+, r24

0000069c <sub_129_23>:
     69c:	8d 91       	ld	r24, X+
     69e:	99 91       	ld	r25, Y+
     6a0:	89 0b       	sbc	r24, r25
     6a2:	81 93       	st	Z+, r24

000006a4 <sub_129_22>:
     6a4:	8d 91       	ld	r24, X+
     6a6:	99 91       	ld	r25, Y+
     6a8:	89 0b       	sbc	r24, r25
     6aa:	81 93       	st	Z+, r24

000006ac <sub_129_21>:
     6ac:	8d 91       	ld	r24, X+
     6ae:	99 91       	ld	r25, Y+
     6b0:	89 0b       	sbc	r24, r25
     6b2:	81 93       	st	Z+, r24

000006b4 <sub_129_20>:
     6b4:	8d 91       	ld	r24, X+
     6b6:	99 91       	ld	r25, Y+
     6b8:	89 0b       	sbc	r24, r25
     6ba:	81 93       	st	Z+, r24

000006bc <sub_129_19>:
     6bc:	8d 91       	ld	r24, X+
     6be:	99 91       	ld	r25, Y+
     6c0:	89 0b       	sbc	r24, r25
     6c2:	81 93       	st	Z+, r24

000006c4 <sub_129_18>:
     6c4:	8d 91       	ld	r24, X+
     6c6:	99 91       	ld	r25, Y+
     6c8:	89 0b       	sbc	r24, r25
     6ca:	81 93       	st	Z+, r24

000006cc <sub_129_17>:
     6cc:	8d 91       	ld	r24, X+
     6ce:	99 91       	ld	r25, Y+
     6d0:	89 0b       	sbc	r24, r25
     6d2:	81 93       	st	Z+, r24

000006d4 <sub_129_16>:
     6d4:	8d 91       	ld	r24, X+
     6d6:	99 91       	ld	r25, Y+
     6d8:	89 0b       	sbc	r24, r25
     6da:	81 93       	st	Z+, r24

000006dc <sub_129_15>:
     6dc:	8d 91       	ld	r24, X+
     6de:	99 91       	ld	r25, Y+
     6e0:	89 0b       	sbc	r24, r25
     6e2:	81 93       	st	Z+, r24

000006e4 <sub_129_14>:
     6e4:	8d 91       	ld	r24, X+
     6e6:	99 91       	ld	r25, Y+
     6e8:	89 0b       	sbc	r24, r25
     6ea:	81 93       	st	Z+, r24

000006ec <sub_129_13>:
     6ec:	8d 91       	ld	r24, X+
     6ee:	99 91       	ld	r25, Y+
     6f0:	89 0b       	sbc	r24, r25
     6f2:	81 93       	st	Z+, r24

000006f4 <sub_129_12>:
     6f4:	8d 91       	ld	r24, X+
     6f6:	99 91       	ld	r25, Y+
     6f8:	89 0b       	sbc	r24, r25
     6fa:	81 93       	st	Z+, r24

000006fc <sub_129_11>:
     6fc:	8d 91       	ld	r24, X+
     6fe:	99 91       	ld	r25, Y+
     700:	89 0b       	sbc	r24, r25
     702:	81 93       	st	Z+, r24

00000704 <sub_129_10>:
     704:	8d 91       	ld	r24, X+
     706:	99 91       	ld	r25, Y+
     708:	89 0b       	sbc	r24, r25
     70a:	81 93       	st	Z+, r24

0000070c <sub_129_9>:
     70c:	8d 91       	ld	r24, X+
     70e:	99 91       	ld	r25, Y+
     710:	89 0b       	sbc	r24, r25
     712:	81 93       	st	Z+, r24

00000714 <sub_129_8>:
     714:	8d 91       	ld	r24, X+
     716:	99 91       	ld	r25, Y+
     718:	89 0b       	sbc	r24, r25
     71a:	81 93       	st	Z+, r24

0000071c <sub_129_7>:
     71c:	8d 91       	ld	r24, X+
     71e:	99 91       	ld	r25, Y+
     720:	89 0b       	sbc	r24, r25
     722:	81 93       	st	Z+, r24

00000724 <sub_129_6>:
     724:	8d 91       	ld	r24, X+
     726:	99 91       	ld	r25, Y+
     728:	89 0b       	sbc	r24, r25
     72a:	81 93       	st	Z+, r24

0000072c <sub_129_5>:
     72c:	8d 91       	ld	r24, X+
     72e:	99 91       	ld	r25, Y+
     730:	89 0b       	sbc	r24, r25
     732:	81 93       	st	Z+, r24

00000734 <sub_129_4>:
     734:	8d 91       	ld	r24, X+
     736:	99 91       	ld	r25, Y+
     738:	89 0b       	sbc	r24, r25
     73a:	81 93       	st	Z+, r24

0000073c <sub_129_3>:
     73c:	8d 91       	ld	r24, X+
     73e:	99 91       	ld	r25, Y+
     740:	89 0b       	sbc	r24, r25
     742:	81 93       	st	Z+, r24

00000744 <sub_129_2>:
     744:	8d 91       	ld	r24, X+
     746:	99 91       	ld	r25, Y+
     748:	89 0b       	sbc	r24, r25
     74a:	81 93       	st	Z+, r24

0000074c <sub_129_1>:
     74c:	8d 91       	ld	r24, X+
     74e:	99 91       	ld	r25, Y+
     750:	89 0b       	sbc	r24, r25
     752:	81 93       	st	Z+, r24
     754:	81 2d       	mov	r24, r1
     756:	88 1f       	adc	r24, r24
     758:	df 91       	pop	r29
     75a:	cf 91       	pop	r28
     75c:	08 95       	ret

0000075e <uECC_vli_mult>:
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	fc 01       	movw	r30, r24
     764:	db 01       	movw	r26, r22
     766:	ea 01       	movw	r28, r20
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	89 2f       	mov	r24, r25
     76c:	39 2f       	mov	r19, r25
     76e:	49 2f       	mov	r20, r25
     770:	51 e0       	ldi	r21, 0x01	; 1
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	c5 0f       	add	r28, r21
     776:	d4 1f       	adc	r29, r20
     778:	0d 90       	ld	r0, X+
     77a:	1a 90       	ld	r1, -Y
     77c:	01 9c       	mul	r0, r1
     77e:	90 0d       	add	r25, r0
     780:	81 1d       	adc	r24, r1
     782:	34 1f       	adc	r19, r20
     784:	63 95       	inc	r22
     786:	65 17       	cp	r22, r21
     788:	b8 f3       	brcs	.-18     	; 0x778 <uECC_vli_mult+0x1a>
     78a:	a5 1b       	sub	r26, r21
     78c:	b4 0b       	sbc	r27, r20
     78e:	91 93       	st	Z+, r25
     790:	98 2f       	mov	r25, r24
     792:	83 2f       	mov	r24, r19
     794:	34 2f       	mov	r19, r20
     796:	53 95       	inc	r21
     798:	52 17       	cp	r21, r18
     79a:	58 f3       	brcs	.-42     	; 0x772 <uECC_vli_mult+0x14>
     79c:	52 2f       	mov	r21, r18
     79e:	c2 0f       	add	r28, r18
     7a0:	d4 1f       	adc	r29, r20
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	0d 90       	ld	r0, X+
     7a6:	1a 90       	ld	r1, -Y
     7a8:	01 9c       	mul	r0, r1
     7aa:	90 0d       	add	r25, r0
     7ac:	81 1d       	adc	r24, r1
     7ae:	34 1f       	adc	r19, r20
     7b0:	63 95       	inc	r22
     7b2:	65 17       	cp	r22, r21
     7b4:	b8 f3       	brcs	.-18     	; 0x7a4 <uECC_vli_mult+0x46>
     7b6:	c5 0f       	add	r28, r21
     7b8:	d4 1f       	adc	r29, r20
     7ba:	91 93       	st	Z+, r25
     7bc:	98 2f       	mov	r25, r24
     7be:	83 2f       	mov	r24, r19
     7c0:	34 2f       	mov	r19, r20
     7c2:	5a 95       	dec	r21
     7c4:	a5 1b       	sub	r26, r21
     7c6:	b4 0b       	sbc	r27, r20
     7c8:	54 17       	cp	r21, r20
     7ca:	59 f7       	brne	.-42     	; 0x7a2 <uECC_vli_mult+0x44>
     7cc:	91 93       	st	Z+, r25
     7ce:	11 24       	eor	r1, r1
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	08 95       	ret

000007d6 <uECC_vli_isZero>:
     7d6:	16 16       	cp	r1, r22
     7d8:	7c f4       	brge	.+30     	; 0x7f8 <uECC_vli_isZero+0x22>
     7da:	fc 01       	movw	r30, r24
     7dc:	61 50       	subi	r22, 0x01	; 1
     7de:	46 2f       	mov	r20, r22
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	4f 5f       	subi	r20, 0xFF	; 255
     7e4:	5f 4f       	sbci	r21, 0xFF	; 255
     7e6:	48 0f       	add	r20, r24
     7e8:	59 1f       	adc	r21, r25
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	21 91       	ld	r18, Z+
     7ee:	92 2b       	or	r25, r18
     7f0:	e4 17       	cp	r30, r20
     7f2:	f5 07       	cpc	r31, r21
     7f4:	d9 f7       	brne	.-10     	; 0x7ec <uECC_vli_isZero+0x16>
     7f6:	01 c0       	rjmp	.+2      	; 0x7fa <uECC_vli_isZero+0x24>
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	91 11       	cpse	r25, r1
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	08 95       	ret

00000802 <uECC_vli_testBit>:
     802:	9b 01       	movw	r18, r22
     804:	35 95       	asr	r19
     806:	27 95       	ror	r18
     808:	35 95       	asr	r19
     80a:	27 95       	ror	r18
     80c:	35 95       	asr	r19
     80e:	27 95       	ror	r18
     810:	82 0f       	add	r24, r18
     812:	93 1f       	adc	r25, r19
     814:	67 70       	andi	r22, 0x07	; 7
     816:	77 27       	eor	r23, r23
     818:	21 e0       	ldi	r18, 0x01	; 1
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	02 c0       	rjmp	.+4      	; 0x822 <uECC_vli_testBit+0x20>
     81e:	22 0f       	add	r18, r18
     820:	33 1f       	adc	r19, r19
     822:	6a 95       	dec	r22
     824:	e2 f7       	brpl	.-8      	; 0x81e <uECC_vli_testBit+0x1c>
     826:	fc 01       	movw	r30, r24
     828:	80 81       	ld	r24, Z
     82a:	82 23       	and	r24, r18
     82c:	08 95       	ret

0000082e <uECC_vli_numBits>:
     82e:	9c 01       	movw	r18, r24
     830:	61 50       	subi	r22, 0x01	; 1
     832:	92 f0       	brmi	.+36     	; 0x858 <uECC_vli_numBits+0x2a>
     834:	fc 01       	movw	r30, r24
     836:	e6 0f       	add	r30, r22
     838:	f1 1d       	adc	r31, r1
     83a:	67 fd       	sbrc	r22, 7
     83c:	fa 95       	dec	r31
     83e:	80 81       	ld	r24, Z
     840:	81 11       	cpse	r24, r1
     842:	0a c0       	rjmp	.+20     	; 0x858 <uECC_vli_numBits+0x2a>
     844:	61 50       	subi	r22, 0x01	; 1
     846:	42 f0       	brmi	.+16     	; 0x858 <uECC_vli_numBits+0x2a>
     848:	f9 01       	movw	r30, r18
     84a:	e6 0f       	add	r30, r22
     84c:	f1 1d       	adc	r31, r1
     84e:	67 fd       	sbrc	r22, 7
     850:	fa 95       	dec	r31
     852:	90 81       	ld	r25, Z
     854:	99 23       	and	r25, r25
     856:	b1 f3       	breq	.-20     	; 0x844 <uECC_vli_numBits+0x16>
     858:	6f 5f       	subi	r22, 0xFF	; 255
     85a:	e9 f0       	breq	.+58     	; 0x896 <uECC_vli_numBits+0x68>
     85c:	26 0f       	add	r18, r22
     85e:	31 1d       	adc	r19, r1
     860:	67 fd       	sbrc	r22, 7
     862:	3a 95       	dec	r19
     864:	f9 01       	movw	r30, r18
     866:	31 97       	sbiw	r30, 0x01	; 1
     868:	80 81       	ld	r24, Z
     86a:	88 23       	and	r24, r24
     86c:	31 f0       	breq	.+12     	; 0x87a <uECC_vli_numBits+0x4c>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	86 95       	lsr	r24
     872:	2f 5f       	subi	r18, 0xFF	; 255
     874:	81 11       	cpse	r24, r1
     876:	fc cf       	rjmp	.-8      	; 0x870 <uECC_vli_numBits+0x42>
     878:	01 c0       	rjmp	.+2      	; 0x87c <uECC_vli_numBits+0x4e>
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	86 2f       	mov	r24, r22
     87e:	66 0f       	add	r22, r22
     880:	99 0b       	sbc	r25, r25
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	88 0f       	add	r24, r24
     886:	99 1f       	adc	r25, r25
     888:	88 0f       	add	r24, r24
     88a:	99 1f       	adc	r25, r25
     88c:	88 0f       	add	r24, r24
     88e:	99 1f       	adc	r25, r25
     890:	82 0f       	add	r24, r18
     892:	91 1d       	adc	r25, r1
     894:	08 95       	ret
     896:	80 e0       	ldi	r24, 0x00	; 0
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	08 95       	ret

0000089c <uECC_vli_cmp_unsafe>:
     89c:	dc 01       	movw	r26, r24
     89e:	41 50       	subi	r20, 0x01	; 1
     8a0:	2a f1       	brmi	.+74     	; 0x8ec <uECC_vli_cmp_unsafe+0x50>
     8a2:	84 2f       	mov	r24, r20
     8a4:	04 2e       	mov	r0, r20
     8a6:	00 0c       	add	r0, r0
     8a8:	99 0b       	sbc	r25, r25
     8aa:	fd 01       	movw	r30, r26
     8ac:	e8 0f       	add	r30, r24
     8ae:	f9 1f       	adc	r31, r25
     8b0:	20 81       	ld	r18, Z
     8b2:	fb 01       	movw	r30, r22
     8b4:	e8 0f       	add	r30, r24
     8b6:	f9 1f       	adc	r31, r25
     8b8:	80 81       	ld	r24, Z
     8ba:	82 17       	cp	r24, r18
     8bc:	c8 f0       	brcs	.+50     	; 0x8f0 <uECC_vli_cmp_unsafe+0x54>
     8be:	28 17       	cp	r18, r24
     8c0:	88 f4       	brcc	.+34     	; 0x8e4 <uECC_vli_cmp_unsafe+0x48>
     8c2:	18 c0       	rjmp	.+48     	; 0x8f4 <uECC_vli_cmp_unsafe+0x58>
     8c4:	24 2f       	mov	r18, r20
     8c6:	04 2e       	mov	r0, r20
     8c8:	00 0c       	add	r0, r0
     8ca:	33 0b       	sbc	r19, r19
     8cc:	fd 01       	movw	r30, r26
     8ce:	e2 0f       	add	r30, r18
     8d0:	f3 1f       	adc	r31, r19
     8d2:	50 81       	ld	r21, Z
     8d4:	fb 01       	movw	r30, r22
     8d6:	e2 0f       	add	r30, r18
     8d8:	f3 1f       	adc	r31, r19
     8da:	90 81       	ld	r25, Z
     8dc:	95 17       	cp	r25, r21
     8de:	60 f0       	brcs	.+24     	; 0x8f8 <uECC_vli_cmp_unsafe+0x5c>
     8e0:	59 17       	cp	r21, r25
     8e2:	60 f0       	brcs	.+24     	; 0x8fc <uECC_vli_cmp_unsafe+0x60>
     8e4:	41 50       	subi	r20, 0x01	; 1
     8e6:	72 f7       	brpl	.-36     	; 0x8c4 <uECC_vli_cmp_unsafe+0x28>
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	08 95       	ret
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	08 95       	ret
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 95       	ret
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	08 95       	ret
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	08 95       	ret
     8fc:	8f ef       	ldi	r24, 0xFF	; 255
     8fe:	08 95       	ret

00000900 <uECC_vli_cmp>:
     900:	0f 93       	push	r16
     902:	1f 93       	push	r17
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
     908:	cd b7       	in	r28, 0x3d	; 61
     90a:	de b7       	in	r29, 0x3e	; 62
     90c:	a0 97       	sbiw	r28, 0x20	; 32
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	f8 94       	cli
     912:	de bf       	out	0x3e, r29	; 62
     914:	0f be       	out	0x3f, r0	; 63
     916:	cd bf       	out	0x3d, r28	; 61
     918:	14 2f       	mov	r17, r20
     91a:	24 2f       	mov	r18, r20
     91c:	ab 01       	movw	r20, r22
     91e:	bc 01       	movw	r22, r24
     920:	ce 01       	movw	r24, r28
     922:	01 96       	adiw	r24, 0x01	; 1
     924:	4b de       	rcall	.-874    	; 0x5bc <uECC_vli_sub>
     926:	08 2f       	mov	r16, r24
     928:	61 2f       	mov	r22, r17
     92a:	ce 01       	movw	r24, r28
     92c:	01 96       	adiw	r24, 0x01	; 1
     92e:	53 df       	rcall	.-346    	; 0x7d6 <uECC_vli_isZero>
     930:	91 e0       	ldi	r25, 0x01	; 1
     932:	81 11       	cpse	r24, r1
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	81 e0       	ldi	r24, 0x01	; 1
     938:	01 11       	cpse	r16, r1
     93a:	01 c0       	rjmp	.+2      	; 0x93e <uECC_vli_cmp+0x3e>
     93c:	80 e0       	ldi	r24, 0x00	; 0
     93e:	88 0f       	add	r24, r24
     940:	98 1b       	sub	r25, r24
     942:	89 2f       	mov	r24, r25
     944:	a0 96       	adiw	r28, 0x20	; 32
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	f8 94       	cli
     94a:	de bf       	out	0x3e, r29	; 62
     94c:	0f be       	out	0x3f, r0	; 63
     94e:	cd bf       	out	0x3d, r28	; 61
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	08 95       	ret

0000095a <uECC_vli_modAdd>:
     95a:	ef 92       	push	r14
     95c:	ff 92       	push	r15
     95e:	0f 93       	push	r16
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	ec 01       	movw	r28, r24
     966:	79 01       	movw	r14, r18
     968:	20 2f       	mov	r18, r16
     96a:	57 dd       	rcall	.-1362   	; 0x41a <uECC_vli_add>
     96c:	81 11       	cpse	r24, r1
     96e:	06 c0       	rjmp	.+12     	; 0x97c <uECC_vli_modAdd+0x22>
     970:	40 2f       	mov	r20, r16
     972:	be 01       	movw	r22, r28
     974:	c7 01       	movw	r24, r14
     976:	92 df       	rcall	.-220    	; 0x89c <uECC_vli_cmp_unsafe>
     978:	81 30       	cpi	r24, 0x01	; 1
     97a:	29 f0       	breq	.+10     	; 0x986 <uECC_vli_modAdd+0x2c>
     97c:	20 2f       	mov	r18, r16
     97e:	a7 01       	movw	r20, r14
     980:	be 01       	movw	r22, r28
     982:	ce 01       	movw	r24, r28
     984:	1b de       	rcall	.-970    	; 0x5bc <uECC_vli_sub>
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	08 95       	ret

00000992 <uECC_vli_modSub>:
     992:	ef 92       	push	r14
     994:	ff 92       	push	r15
     996:	0f 93       	push	r16
     998:	cf 93       	push	r28
     99a:	df 93       	push	r29
     99c:	ec 01       	movw	r28, r24
     99e:	79 01       	movw	r14, r18
     9a0:	20 2f       	mov	r18, r16
     9a2:	0c de       	rcall	.-1000   	; 0x5bc <uECC_vli_sub>
     9a4:	88 23       	and	r24, r24
     9a6:	29 f0       	breq	.+10     	; 0x9b2 <uECC_vli_modSub+0x20>
     9a8:	20 2f       	mov	r18, r16
     9aa:	a7 01       	movw	r20, r14
     9ac:	be 01       	movw	r22, r28
     9ae:	ce 01       	movw	r24, r28
     9b0:	34 dd       	rcall	.-1432   	; 0x41a <uECC_vli_add>
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	0f 91       	pop	r16
     9b8:	ff 90       	pop	r15
     9ba:	ef 90       	pop	r14
     9bc:	08 95       	ret

000009be <uECC_vli_modMult_fast>:
     9be:	ef 92       	push	r14
     9c0:	ff 92       	push	r15
     9c2:	0f 93       	push	r16
     9c4:	1f 93       	push	r17
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	cd b7       	in	r28, 0x3d	; 61
     9cc:	de b7       	in	r29, 0x3e	; 62
     9ce:	c0 54       	subi	r28, 0x40	; 64
     9d0:	d1 09       	sbc	r29, r1
     9d2:	0f b6       	in	r0, 0x3f	; 63
     9d4:	f8 94       	cli
     9d6:	de bf       	out	0x3e, r29	; 62
     9d8:	0f be       	out	0x3f, r0	; 63
     9da:	cd bf       	out	0x3d, r28	; 61
     9dc:	7c 01       	movw	r14, r24
     9de:	89 01       	movw	r16, r18
     9e0:	f9 01       	movw	r30, r18
     9e2:	20 81       	ld	r18, Z
     9e4:	ce 01       	movw	r24, r28
     9e6:	01 96       	adiw	r24, 0x01	; 1
     9e8:	ba de       	rcall	.-652    	; 0x75e <uECC_vli_mult>
     9ea:	f8 01       	movw	r30, r16
     9ec:	e6 55       	subi	r30, 0x56	; 86
     9ee:	ff 4f       	sbci	r31, 0xFF	; 255
     9f0:	01 90       	ld	r0, Z+
     9f2:	f0 81       	ld	r31, Z
     9f4:	e0 2d       	mov	r30, r0
     9f6:	be 01       	movw	r22, r28
     9f8:	6f 5f       	subi	r22, 0xFF	; 255
     9fa:	7f 4f       	sbci	r23, 0xFF	; 255
     9fc:	c7 01       	movw	r24, r14
     9fe:	09 95       	icall
     a00:	c0 5c       	subi	r28, 0xC0	; 192
     a02:	df 4f       	sbci	r29, 0xFF	; 255
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	f8 94       	cli
     a08:	de bf       	out	0x3e, r29	; 62
     a0a:	0f be       	out	0x3f, r0	; 63
     a0c:	cd bf       	out	0x3d, r28	; 61
     a0e:	df 91       	pop	r29
     a10:	cf 91       	pop	r28
     a12:	1f 91       	pop	r17
     a14:	0f 91       	pop	r16
     a16:	ff 90       	pop	r15
     a18:	ef 90       	pop	r14
     a1a:	08 95       	ret

00000a1c <uECC_vli_modSquare_fast>:
     a1c:	9a 01       	movw	r18, r20
     a1e:	ab 01       	movw	r20, r22
     a20:	ce cf       	rjmp	.-100    	; 0x9be <uECC_vli_modMult_fast>
     a22:	08 95       	ret

00000a24 <vli_modInv_update>:
     a24:	0f 93       	push	r16
     a26:	1f 93       	push	r17
     a28:	cf 93       	push	r28
     a2a:	df 93       	push	r29
     a2c:	8c 01       	movw	r16, r24
     a2e:	c4 2f       	mov	r28, r20
     a30:	fc 01       	movw	r30, r24
     a32:	80 81       	ld	r24, Z
     a34:	80 ff       	sbrs	r24, 0
     a36:	15 c0       	rjmp	.+42     	; 0xa62 <vli_modInv_update+0x3e>
     a38:	24 2f       	mov	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	b8 01       	movw	r22, r16
     a3e:	c8 01       	movw	r24, r16
     a40:	ec dc       	rcall	.-1576   	; 0x41a <uECC_vli_add>
     a42:	d8 2f       	mov	r29, r24
     a44:	6c 2f       	mov	r22, r28
     a46:	c8 01       	movw	r24, r16
     a48:	76 dc       	rcall	.-1812   	; 0x336 <uECC_vli_rshift1>
     a4a:	dd 23       	and	r29, r29
     a4c:	69 f0       	breq	.+26     	; 0xa68 <vli_modInv_update+0x44>
     a4e:	ec 2f       	mov	r30, r28
     a50:	cc 0f       	add	r28, r28
     a52:	ff 0b       	sbc	r31, r31
     a54:	31 97       	sbiw	r30, 0x01	; 1
     a56:	e0 0f       	add	r30, r16
     a58:	f1 1f       	adc	r31, r17
     a5a:	80 81       	ld	r24, Z
     a5c:	80 68       	ori	r24, 0x80	; 128
     a5e:	80 83       	st	Z, r24
     a60:	03 c0       	rjmp	.+6      	; 0xa68 <vli_modInv_update+0x44>
     a62:	64 2f       	mov	r22, r20
     a64:	c8 01       	movw	r24, r16
     a66:	67 dc       	rcall	.-1842   	; 0x336 <uECC_vli_rshift1>
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	08 95       	ret

00000a72 <uECC_vli_modInv>:
     a72:	af 92       	push	r10
     a74:	bf 92       	push	r11
     a76:	cf 92       	push	r12
     a78:	df 92       	push	r13
     a7a:	ef 92       	push	r14
     a7c:	ff 92       	push	r15
     a7e:	1f 93       	push	r17
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
     a88:	c0 58       	subi	r28, 0x80	; 128
     a8a:	d1 09       	sbc	r29, r1
     a8c:	0f b6       	in	r0, 0x3f	; 63
     a8e:	f8 94       	cli
     a90:	de bf       	out	0x3e, r29	; 62
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	cd bf       	out	0x3d, r28	; 61
     a96:	5c 01       	movw	r10, r24
     a98:	6b 01       	movw	r12, r22
     a9a:	7a 01       	movw	r14, r20
     a9c:	12 2f       	mov	r17, r18
     a9e:	62 2f       	mov	r22, r18
     aa0:	c6 01       	movw	r24, r12
     aa2:	99 de       	rcall	.-718    	; 0x7d6 <uECC_vli_isZero>
     aa4:	88 23       	and	r24, r24
     aa6:	21 f0       	breq	.+8      	; 0xab0 <uECC_vli_modInv+0x3e>
     aa8:	61 2f       	mov	r22, r17
     aaa:	c5 01       	movw	r24, r10
     aac:	d0 db       	rcall	.-2144   	; 0x24e <uECC_vli_clear>
     aae:	a1 c0       	rjmp	.+322    	; 0xbf2 <uECC_vli_modInv+0x180>
     ab0:	41 2f       	mov	r20, r17
     ab2:	b6 01       	movw	r22, r12
     ab4:	ce 01       	movw	r24, r28
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	f1 db       	rcall	.-2078   	; 0x29c <uECC_vli_set>
     aba:	41 2f       	mov	r20, r17
     abc:	b7 01       	movw	r22, r14
     abe:	ce 01       	movw	r24, r28
     ac0:	81 96       	adiw	r24, 0x21	; 33
     ac2:	ec db       	rcall	.-2088   	; 0x29c <uECC_vli_set>
     ac4:	61 2f       	mov	r22, r17
     ac6:	ce 01       	movw	r24, r28
     ac8:	8f 5b       	subi	r24, 0xBF	; 191
     aca:	9f 4f       	sbci	r25, 0xFF	; 255
     acc:	c0 db       	rcall	.-2176   	; 0x24e <uECC_vli_clear>
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	22 96       	adiw	r28, 0x02	; 2
     ad2:	8f af       	std	Y+63, r24	; 0x3f
     ad4:	22 97       	sbiw	r28, 0x02	; 2
     ad6:	61 2f       	mov	r22, r17
     ad8:	ce 01       	movw	r24, r28
     ada:	8f 59       	subi	r24, 0x9F	; 159
     adc:	9f 4f       	sbci	r25, 0xFF	; 255
     ade:	b7 db       	rcall	.-2194   	; 0x24e <uECC_vli_clear>
     ae0:	79 c0       	rjmp	.+242    	; 0xbd4 <uECC_vli_modInv+0x162>
     ae2:	99 81       	ldd	r25, Y+1	; 0x01
     ae4:	90 fd       	sbrc	r25, 0
     ae6:	0b c0       	rjmp	.+22     	; 0xafe <uECC_vli_modInv+0x8c>
     ae8:	61 2f       	mov	r22, r17
     aea:	ce 01       	movw	r24, r28
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	23 dc       	rcall	.-1978   	; 0x336 <uECC_vli_rshift1>
     af0:	41 2f       	mov	r20, r17
     af2:	b7 01       	movw	r22, r14
     af4:	ce 01       	movw	r24, r28
     af6:	8f 5b       	subi	r24, 0xBF	; 191
     af8:	9f 4f       	sbci	r25, 0xFF	; 255
     afa:	94 df       	rcall	.-216    	; 0xa24 <vli_modInv_update>
     afc:	6b c0       	rjmp	.+214    	; 0xbd4 <uECC_vli_modInv+0x162>
     afe:	99 a1       	ldd	r25, Y+33	; 0x21
     b00:	90 fd       	sbrc	r25, 0
     b02:	0b c0       	rjmp	.+22     	; 0xb1a <uECC_vli_modInv+0xa8>
     b04:	61 2f       	mov	r22, r17
     b06:	ce 01       	movw	r24, r28
     b08:	81 96       	adiw	r24, 0x21	; 33
     b0a:	15 dc       	rcall	.-2006   	; 0x336 <uECC_vli_rshift1>
     b0c:	41 2f       	mov	r20, r17
     b0e:	b7 01       	movw	r22, r14
     b10:	ce 01       	movw	r24, r28
     b12:	8f 59       	subi	r24, 0x9F	; 159
     b14:	9f 4f       	sbci	r25, 0xFF	; 255
     b16:	86 df       	rcall	.-244    	; 0xa24 <vli_modInv_update>
     b18:	5d c0       	rjmp	.+186    	; 0xbd4 <uECC_vli_modInv+0x162>
     b1a:	18 16       	cp	r1, r24
     b1c:	74 f5       	brge	.+92     	; 0xb7a <uECC_vli_modInv+0x108>
     b1e:	21 2f       	mov	r18, r17
     b20:	ae 01       	movw	r20, r28
     b22:	4f 5d       	subi	r20, 0xDF	; 223
     b24:	5f 4f       	sbci	r21, 0xFF	; 255
     b26:	be 01       	movw	r22, r28
     b28:	6f 5f       	subi	r22, 0xFF	; 255
     b2a:	7f 4f       	sbci	r23, 0xFF	; 255
     b2c:	cb 01       	movw	r24, r22
     b2e:	46 dd       	rcall	.-1396   	; 0x5bc <uECC_vli_sub>
     b30:	61 2f       	mov	r22, r17
     b32:	ce 01       	movw	r24, r28
     b34:	01 96       	adiw	r24, 0x01	; 1
     b36:	ff db       	rcall	.-2050   	; 0x336 <uECC_vli_rshift1>
     b38:	41 2f       	mov	r20, r17
     b3a:	be 01       	movw	r22, r28
     b3c:	6f 59       	subi	r22, 0x9F	; 159
     b3e:	7f 4f       	sbci	r23, 0xFF	; 255
     b40:	ce 01       	movw	r24, r28
     b42:	8f 5b       	subi	r24, 0xBF	; 191
     b44:	9f 4f       	sbci	r25, 0xFF	; 255
     b46:	aa de       	rcall	.-684    	; 0x89c <uECC_vli_cmp_unsafe>
     b48:	88 23       	and	r24, r24
     b4a:	3c f4       	brge	.+14     	; 0xb5a <uECC_vli_modInv+0xe8>
     b4c:	21 2f       	mov	r18, r17
     b4e:	a7 01       	movw	r20, r14
     b50:	be 01       	movw	r22, r28
     b52:	6f 5b       	subi	r22, 0xBF	; 191
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	cb 01       	movw	r24, r22
     b58:	60 dc       	rcall	.-1856   	; 0x41a <uECC_vli_add>
     b5a:	21 2f       	mov	r18, r17
     b5c:	ae 01       	movw	r20, r28
     b5e:	4f 59       	subi	r20, 0x9F	; 159
     b60:	5f 4f       	sbci	r21, 0xFF	; 255
     b62:	be 01       	movw	r22, r28
     b64:	6f 5b       	subi	r22, 0xBF	; 191
     b66:	7f 4f       	sbci	r23, 0xFF	; 255
     b68:	cb 01       	movw	r24, r22
     b6a:	28 dd       	rcall	.-1456   	; 0x5bc <uECC_vli_sub>
     b6c:	41 2f       	mov	r20, r17
     b6e:	b7 01       	movw	r22, r14
     b70:	ce 01       	movw	r24, r28
     b72:	8f 5b       	subi	r24, 0xBF	; 191
     b74:	9f 4f       	sbci	r25, 0xFF	; 255
     b76:	56 df       	rcall	.-340    	; 0xa24 <vli_modInv_update>
     b78:	2d c0       	rjmp	.+90     	; 0xbd4 <uECC_vli_modInv+0x162>
     b7a:	21 2f       	mov	r18, r17
     b7c:	ae 01       	movw	r20, r28
     b7e:	4f 5f       	subi	r20, 0xFF	; 255
     b80:	5f 4f       	sbci	r21, 0xFF	; 255
     b82:	be 01       	movw	r22, r28
     b84:	6f 5d       	subi	r22, 0xDF	; 223
     b86:	7f 4f       	sbci	r23, 0xFF	; 255
     b88:	cb 01       	movw	r24, r22
     b8a:	18 dd       	rcall	.-1488   	; 0x5bc <uECC_vli_sub>
     b8c:	61 2f       	mov	r22, r17
     b8e:	ce 01       	movw	r24, r28
     b90:	81 96       	adiw	r24, 0x21	; 33
     b92:	d1 db       	rcall	.-2142   	; 0x336 <uECC_vli_rshift1>
     b94:	41 2f       	mov	r20, r17
     b96:	be 01       	movw	r22, r28
     b98:	6f 5b       	subi	r22, 0xBF	; 191
     b9a:	7f 4f       	sbci	r23, 0xFF	; 255
     b9c:	ce 01       	movw	r24, r28
     b9e:	8f 59       	subi	r24, 0x9F	; 159
     ba0:	9f 4f       	sbci	r25, 0xFF	; 255
     ba2:	7c de       	rcall	.-776    	; 0x89c <uECC_vli_cmp_unsafe>
     ba4:	88 23       	and	r24, r24
     ba6:	3c f4       	brge	.+14     	; 0xbb6 <uECC_vli_modInv+0x144>
     ba8:	21 2f       	mov	r18, r17
     baa:	a7 01       	movw	r20, r14
     bac:	be 01       	movw	r22, r28
     bae:	6f 59       	subi	r22, 0x9F	; 159
     bb0:	7f 4f       	sbci	r23, 0xFF	; 255
     bb2:	cb 01       	movw	r24, r22
     bb4:	32 dc       	rcall	.-1948   	; 0x41a <uECC_vli_add>
     bb6:	21 2f       	mov	r18, r17
     bb8:	ae 01       	movw	r20, r28
     bba:	4f 5b       	subi	r20, 0xBF	; 191
     bbc:	5f 4f       	sbci	r21, 0xFF	; 255
     bbe:	be 01       	movw	r22, r28
     bc0:	6f 59       	subi	r22, 0x9F	; 159
     bc2:	7f 4f       	sbci	r23, 0xFF	; 255
     bc4:	cb 01       	movw	r24, r22
     bc6:	fa dc       	rcall	.-1548   	; 0x5bc <uECC_vli_sub>
     bc8:	41 2f       	mov	r20, r17
     bca:	b7 01       	movw	r22, r14
     bcc:	ce 01       	movw	r24, r28
     bce:	8f 59       	subi	r24, 0x9F	; 159
     bd0:	9f 4f       	sbci	r25, 0xFF	; 255
     bd2:	28 df       	rcall	.-432    	; 0xa24 <vli_modInv_update>
     bd4:	41 2f       	mov	r20, r17
     bd6:	be 01       	movw	r22, r28
     bd8:	6f 5d       	subi	r22, 0xDF	; 223
     bda:	7f 4f       	sbci	r23, 0xFF	; 255
     bdc:	ce 01       	movw	r24, r28
     bde:	01 96       	adiw	r24, 0x01	; 1
     be0:	5d de       	rcall	.-838    	; 0x89c <uECC_vli_cmp_unsafe>
     be2:	81 11       	cpse	r24, r1
     be4:	7e cf       	rjmp	.-260    	; 0xae2 <uECC_vli_modInv+0x70>
     be6:	41 2f       	mov	r20, r17
     be8:	be 01       	movw	r22, r28
     bea:	6f 5b       	subi	r22, 0xBF	; 191
     bec:	7f 4f       	sbci	r23, 0xFF	; 255
     bee:	c5 01       	movw	r24, r10
     bf0:	55 db       	rcall	.-2390   	; 0x29c <uECC_vli_set>
     bf2:	c0 58       	subi	r28, 0x80	; 128
     bf4:	df 4f       	sbci	r29, 0xFF	; 255
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	f8 94       	cli
     bfa:	de bf       	out	0x3e, r29	; 62
     bfc:	0f be       	out	0x3f, r0	; 63
     bfe:	cd bf       	out	0x3d, r28	; 61
     c00:	df 91       	pop	r29
     c02:	cf 91       	pop	r28
     c04:	1f 91       	pop	r17
     c06:	ff 90       	pop	r15
     c08:	ef 90       	pop	r14
     c0a:	df 90       	pop	r13
     c0c:	cf 90       	pop	r12
     c0e:	bf 90       	pop	r11
     c10:	af 90       	pop	r10
     c12:	08 95       	ret

00000c14 <double_jacobian_default>:
     c14:	6f 92       	push	r6
     c16:	7f 92       	push	r7
     c18:	8f 92       	push	r8
     c1a:	9f 92       	push	r9
     c1c:	af 92       	push	r10
     c1e:	bf 92       	push	r11
     c20:	cf 92       	push	r12
     c22:	df 92       	push	r13
     c24:	ef 92       	push	r14
     c26:	ff 92       	push	r15
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	cd b7       	in	r28, 0x3d	; 61
     c32:	de b7       	in	r29, 0x3e	; 62
     c34:	c0 54       	subi	r28, 0x40	; 64
     c36:	d1 09       	sbc	r29, r1
     c38:	0f b6       	in	r0, 0x3f	; 63
     c3a:	f8 94       	cli
     c3c:	de bf       	out	0x3e, r29	; 62
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	cd bf       	out	0x3d, r28	; 61
     c42:	6c 01       	movw	r12, r24
     c44:	3b 01       	movw	r6, r22
     c46:	7a 01       	movw	r14, r20
     c48:	59 01       	movw	r10, r18
     c4a:	f9 01       	movw	r30, r18
     c4c:	10 81       	ld	r17, Z
     c4e:	61 2f       	mov	r22, r17
     c50:	ca 01       	movw	r24, r20
     c52:	c1 dd       	rcall	.-1150   	; 0x7d6 <uECC_vli_isZero>
     c54:	81 11       	cpse	r24, r1
     c56:	96 c0       	rjmp	.+300    	; 0xd84 <double_jacobian_default+0x170>
     c58:	a5 01       	movw	r20, r10
     c5a:	b3 01       	movw	r22, r6
     c5c:	ce 01       	movw	r24, r28
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	dd de       	rcall	.-582    	; 0xa1c <uECC_vli_modSquare_fast>
     c62:	95 01       	movw	r18, r10
     c64:	ae 01       	movw	r20, r28
     c66:	4f 5f       	subi	r20, 0xFF	; 255
     c68:	5f 4f       	sbci	r21, 0xFF	; 255
     c6a:	b6 01       	movw	r22, r12
     c6c:	ce 01       	movw	r24, r28
     c6e:	81 96       	adiw	r24, 0x21	; 33
     c70:	a6 de       	rcall	.-692    	; 0x9be <uECC_vli_modMult_fast>
     c72:	a5 01       	movw	r20, r10
     c74:	be 01       	movw	r22, r28
     c76:	6f 5f       	subi	r22, 0xFF	; 255
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	cb 01       	movw	r24, r22
     c7c:	cf de       	rcall	.-610    	; 0xa1c <uECC_vli_modSquare_fast>
     c7e:	95 01       	movw	r18, r10
     c80:	a7 01       	movw	r20, r14
     c82:	b3 01       	movw	r22, r6
     c84:	c3 01       	movw	r24, r6
     c86:	9b de       	rcall	.-714    	; 0x9be <uECC_vli_modMult_fast>
     c88:	a5 01       	movw	r20, r10
     c8a:	b7 01       	movw	r22, r14
     c8c:	c7 01       	movw	r24, r14
     c8e:	c6 de       	rcall	.-628    	; 0xa1c <uECC_vli_modSquare_fast>
     c90:	45 01       	movw	r8, r10
     c92:	f4 e0       	ldi	r31, 0x04	; 4
     c94:	8f 0e       	add	r8, r31
     c96:	91 1c       	adc	r9, r1
     c98:	01 2f       	mov	r16, r17
     c9a:	94 01       	movw	r18, r8
     c9c:	a7 01       	movw	r20, r14
     c9e:	b6 01       	movw	r22, r12
     ca0:	c6 01       	movw	r24, r12
     ca2:	5b de       	rcall	.-842    	; 0x95a <uECC_vli_modAdd>
     ca4:	94 01       	movw	r18, r8
     ca6:	a7 01       	movw	r20, r14
     ca8:	b7 01       	movw	r22, r14
     caa:	c7 01       	movw	r24, r14
     cac:	56 de       	rcall	.-852    	; 0x95a <uECC_vli_modAdd>
     cae:	94 01       	movw	r18, r8
     cb0:	a7 01       	movw	r20, r14
     cb2:	b6 01       	movw	r22, r12
     cb4:	c7 01       	movw	r24, r14
     cb6:	6d de       	rcall	.-806    	; 0x992 <uECC_vli_modSub>
     cb8:	95 01       	movw	r18, r10
     cba:	a7 01       	movw	r20, r14
     cbc:	b6 01       	movw	r22, r12
     cbe:	c6 01       	movw	r24, r12
     cc0:	7e de       	rcall	.-772    	; 0x9be <uECC_vli_modMult_fast>
     cc2:	94 01       	movw	r18, r8
     cc4:	a6 01       	movw	r20, r12
     cc6:	b6 01       	movw	r22, r12
     cc8:	c7 01       	movw	r24, r14
     cca:	47 de       	rcall	.-882    	; 0x95a <uECC_vli_modAdd>
     ccc:	94 01       	movw	r18, r8
     cce:	a7 01       	movw	r20, r14
     cd0:	b6 01       	movw	r22, r12
     cd2:	c6 01       	movw	r24, r12
     cd4:	42 de       	rcall	.-892    	; 0x95a <uECC_vli_modAdd>
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	c6 01       	movw	r24, r12
     cdc:	92 dd       	rcall	.-1244   	; 0x802 <uECC_vli_testBit>
     cde:	88 23       	and	r24, r24
     ce0:	c1 f0       	breq	.+48     	; 0xd12 <double_jacobian_default+0xfe>
     ce2:	21 2f       	mov	r18, r17
     ce4:	a4 01       	movw	r20, r8
     ce6:	b6 01       	movw	r22, r12
     ce8:	c6 01       	movw	r24, r12
     cea:	97 db       	rcall	.-2258   	; 0x41a <uECC_vli_add>
     cec:	08 2f       	mov	r16, r24
     cee:	61 2f       	mov	r22, r17
     cf0:	c6 01       	movw	r24, r12
     cf2:	21 db       	rcall	.-2494   	; 0x336 <uECC_vli_rshift1>
     cf4:	e1 2f       	mov	r30, r17
     cf6:	01 2e       	mov	r0, r17
     cf8:	00 0c       	add	r0, r0
     cfa:	ff 0b       	sbc	r31, r31
     cfc:	31 97       	sbiw	r30, 0x01	; 1
     cfe:	ec 0d       	add	r30, r12
     d00:	fd 1d       	adc	r31, r13
     d02:	20 e8       	ldi	r18, 0x80	; 128
     d04:	02 9f       	mul	r16, r18
     d06:	c0 01       	movw	r24, r0
     d08:	11 24       	eor	r1, r1
     d0a:	00 81       	ld	r16, Z
     d0c:	08 2b       	or	r16, r24
     d0e:	00 83       	st	Z, r16
     d10:	03 c0       	rjmp	.+6      	; 0xd18 <double_jacobian_default+0x104>
     d12:	61 2f       	mov	r22, r17
     d14:	c6 01       	movw	r24, r12
     d16:	0f db       	rcall	.-2530   	; 0x336 <uECC_vli_rshift1>
     d18:	a5 01       	movw	r20, r10
     d1a:	b6 01       	movw	r22, r12
     d1c:	c7 01       	movw	r24, r14
     d1e:	7e de       	rcall	.-772    	; 0xa1c <uECC_vli_modSquare_fast>
     d20:	01 2f       	mov	r16, r17
     d22:	94 01       	movw	r18, r8
     d24:	ae 01       	movw	r20, r28
     d26:	4f 5d       	subi	r20, 0xDF	; 223
     d28:	5f 4f       	sbci	r21, 0xFF	; 255
     d2a:	b7 01       	movw	r22, r14
     d2c:	c7 01       	movw	r24, r14
     d2e:	31 de       	rcall	.-926    	; 0x992 <uECC_vli_modSub>
     d30:	94 01       	movw	r18, r8
     d32:	ae 01       	movw	r20, r28
     d34:	4f 5d       	subi	r20, 0xDF	; 223
     d36:	5f 4f       	sbci	r21, 0xFF	; 255
     d38:	b7 01       	movw	r22, r14
     d3a:	c7 01       	movw	r24, r14
     d3c:	2a de       	rcall	.-940    	; 0x992 <uECC_vli_modSub>
     d3e:	94 01       	movw	r18, r8
     d40:	a7 01       	movw	r20, r14
     d42:	be 01       	movw	r22, r28
     d44:	6f 5d       	subi	r22, 0xDF	; 223
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	cb 01       	movw	r24, r22
     d4a:	23 de       	rcall	.-954    	; 0x992 <uECC_vli_modSub>
     d4c:	95 01       	movw	r18, r10
     d4e:	ae 01       	movw	r20, r28
     d50:	4f 5d       	subi	r20, 0xDF	; 223
     d52:	5f 4f       	sbci	r21, 0xFF	; 255
     d54:	b6 01       	movw	r22, r12
     d56:	c6 01       	movw	r24, r12
     d58:	32 de       	rcall	.-924    	; 0x9be <uECC_vli_modMult_fast>
     d5a:	94 01       	movw	r18, r8
     d5c:	ae 01       	movw	r20, r28
     d5e:	4f 5f       	subi	r20, 0xFF	; 255
     d60:	5f 4f       	sbci	r21, 0xFF	; 255
     d62:	b6 01       	movw	r22, r12
     d64:	ca 01       	movw	r24, r20
     d66:	15 de       	rcall	.-982    	; 0x992 <uECC_vli_modSub>
     d68:	41 2f       	mov	r20, r17
     d6a:	b7 01       	movw	r22, r14
     d6c:	c6 01       	movw	r24, r12
     d6e:	96 da       	rcall	.-2772   	; 0x29c <uECC_vli_set>
     d70:	41 2f       	mov	r20, r17
     d72:	b3 01       	movw	r22, r6
     d74:	c7 01       	movw	r24, r14
     d76:	92 da       	rcall	.-2780   	; 0x29c <uECC_vli_set>
     d78:	41 2f       	mov	r20, r17
     d7a:	be 01       	movw	r22, r28
     d7c:	6f 5f       	subi	r22, 0xFF	; 255
     d7e:	7f 4f       	sbci	r23, 0xFF	; 255
     d80:	c3 01       	movw	r24, r6
     d82:	8c da       	rcall	.-2792   	; 0x29c <uECC_vli_set>
     d84:	c0 5c       	subi	r28, 0xC0	; 192
     d86:	df 4f       	sbci	r29, 0xFF	; 255
     d88:	0f b6       	in	r0, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	de bf       	out	0x3e, r29	; 62
     d8e:	0f be       	out	0x3f, r0	; 63
     d90:	cd bf       	out	0x3d, r28	; 61
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	1f 91       	pop	r17
     d98:	0f 91       	pop	r16
     d9a:	ff 90       	pop	r15
     d9c:	ef 90       	pop	r14
     d9e:	df 90       	pop	r13
     da0:	cf 90       	pop	r12
     da2:	bf 90       	pop	r11
     da4:	af 90       	pop	r10
     da6:	9f 90       	pop	r9
     da8:	8f 90       	pop	r8
     daa:	7f 90       	pop	r7
     dac:	6f 90       	pop	r6
     dae:	08 95       	ret

00000db0 <x_side_default>:
     db0:	6f 92       	push	r6
     db2:	7f 92       	push	r7
     db4:	8f 92       	push	r8
     db6:	9f 92       	push	r9
     db8:	af 92       	push	r10
     dba:	bf 92       	push	r11
     dbc:	cf 92       	push	r12
     dbe:	df 92       	push	r13
     dc0:	ef 92       	push	r14
     dc2:	ff 92       	push	r15
     dc4:	0f 93       	push	r16
     dc6:	1f 93       	push	r17
     dc8:	cf 93       	push	r28
     dca:	df 93       	push	r29
     dcc:	cd b7       	in	r28, 0x3d	; 61
     dce:	de b7       	in	r29, 0x3e	; 62
     dd0:	a0 97       	sbiw	r28, 0x20	; 32
     dd2:	0f b6       	in	r0, 0x3f	; 63
     dd4:	f8 94       	cli
     dd6:	de bf       	out	0x3e, r29	; 62
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	cd bf       	out	0x3d, r28	; 61
     ddc:	7c 01       	movw	r14, r24
     dde:	4b 01       	movw	r8, r22
     de0:	6a 01       	movw	r12, r20
     de2:	ce 01       	movw	r24, r28
     de4:	01 96       	adiw	r24, 0x01	; 1
     de6:	3c 01       	movw	r6, r24
     de8:	80 e2       	ldi	r24, 0x20	; 32
     dea:	f3 01       	movw	r30, r6
     dec:	11 92       	st	Z+, r1
     dee:	8a 95       	dec	r24
     df0:	e9 f7       	brne	.-6      	; 0xdec <x_side_default+0x3c>
     df2:	83 e0       	ldi	r24, 0x03	; 3
     df4:	89 83       	std	Y+1, r24	; 0x01
     df6:	fa 01       	movw	r30, r20
     df8:	10 81       	ld	r17, Z
     dfa:	c7 01       	movw	r24, r14
     dfc:	0f de       	rcall	.-994    	; 0xa1c <uECC_vli_modSquare_fast>
     dfe:	56 01       	movw	r10, r12
     e00:	f4 e0       	ldi	r31, 0x04	; 4
     e02:	af 0e       	add	r10, r31
     e04:	b1 1c       	adc	r11, r1
     e06:	01 2f       	mov	r16, r17
     e08:	95 01       	movw	r18, r10
     e0a:	a3 01       	movw	r20, r6
     e0c:	b7 01       	movw	r22, r14
     e0e:	c7 01       	movw	r24, r14
     e10:	c0 dd       	rcall	.-1152   	; 0x992 <uECC_vli_modSub>
     e12:	96 01       	movw	r18, r12
     e14:	a4 01       	movw	r20, r8
     e16:	b7 01       	movw	r22, r14
     e18:	c7 01       	movw	r24, r14
     e1a:	d1 dd       	rcall	.-1118   	; 0x9be <uECC_vli_modMult_fast>
     e1c:	a6 01       	movw	r20, r12
     e1e:	4c 57       	subi	r20, 0x7C	; 124
     e20:	5f 4f       	sbci	r21, 0xFF	; 255
     e22:	95 01       	movw	r18, r10
     e24:	b7 01       	movw	r22, r14
     e26:	c7 01       	movw	r24, r14
     e28:	98 dd       	rcall	.-1232   	; 0x95a <uECC_vli_modAdd>
     e2a:	a0 96       	adiw	r28, 0x20	; 32
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	de bf       	out	0x3e, r29	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	cd bf       	out	0x3d, r28	; 61
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	1f 91       	pop	r17
     e3c:	0f 91       	pop	r16
     e3e:	ff 90       	pop	r15
     e40:	ef 90       	pop	r14
     e42:	df 90       	pop	r13
     e44:	cf 90       	pop	r12
     e46:	bf 90       	pop	r11
     e48:	af 90       	pop	r10
     e4a:	9f 90       	pop	r9
     e4c:	8f 90       	pop	r8
     e4e:	7f 90       	pop	r7
     e50:	6f 90       	pop	r6
     e52:	08 95       	ret

00000e54 <mod_sqrt_default>:
     e54:	bf 92       	push	r11
     e56:	cf 92       	push	r12
     e58:	df 92       	push	r13
     e5a:	ef 92       	push	r14
     e5c:	ff 92       	push	r15
     e5e:	0f 93       	push	r16
     e60:	1f 93       	push	r17
     e62:	cf 93       	push	r28
     e64:	df 93       	push	r29
     e66:	cd b7       	in	r28, 0x3d	; 61
     e68:	de b7       	in	r29, 0x3e	; 62
     e6a:	c0 54       	subi	r28, 0x40	; 64
     e6c:	d1 09       	sbc	r29, r1
     e6e:	0f b6       	in	r0, 0x3f	; 63
     e70:	f8 94       	cli
     e72:	de bf       	out	0x3e, r29	; 62
     e74:	0f be       	out	0x3f, r0	; 63
     e76:	cd bf       	out	0x3d, r28	; 61
     e78:	6c 01       	movw	r12, r24
     e7a:	7b 01       	movw	r14, r22
     e7c:	90 e2       	ldi	r25, 0x20	; 32
     e7e:	8e 01       	movw	r16, r28
     e80:	0f 5f       	subi	r16, 0xFF	; 255
     e82:	1f 4f       	sbci	r17, 0xFF	; 255
     e84:	d8 01       	movw	r26, r16
     e86:	e9 2f       	mov	r30, r25
     e88:	1d 92       	st	X+, r1
     e8a:	ea 95       	dec	r30
     e8c:	e9 f7       	brne	.-6      	; 0xe88 <mod_sqrt_default+0x34>
     e8e:	81 e0       	ldi	r24, 0x01	; 1
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	fe 01       	movw	r30, r28
     e94:	b1 96       	adiw	r30, 0x21	; 33
     e96:	df 01       	movw	r26, r30
     e98:	1d 92       	st	X+, r1
     e9a:	9a 95       	dec	r25
     e9c:	e9 f7       	brne	.-6      	; 0xe98 <mod_sqrt_default+0x44>
     e9e:	89 a3       	std	Y+33, r24	; 0x21
     ea0:	fb 01       	movw	r30, r22
     ea2:	b0 80       	ld	r11, Z
     ea4:	6c 5f       	subi	r22, 0xFC	; 252
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255
     ea8:	2b 2d       	mov	r18, r11
     eaa:	a8 01       	movw	r20, r16
     eac:	c8 01       	movw	r24, r16
     eae:	b5 da       	rcall	.-2710   	; 0x41a <uECC_vli_add>
     eb0:	6b 2d       	mov	r22, r11
     eb2:	c8 01       	movw	r24, r16
     eb4:	bc dc       	rcall	.-1672   	; 0x82e <uECC_vli_numBits>
     eb6:	8c 01       	movw	r16, r24
     eb8:	01 50       	subi	r16, 0x01	; 1
     eba:	11 09       	sbc	r17, r1
     ebc:	02 30       	cpi	r16, 0x02	; 2
     ebe:	11 05       	cpc	r17, r1
     ec0:	c4 f0       	brlt	.+48     	; 0xef2 <mod_sqrt_default+0x9e>
     ec2:	a7 01       	movw	r20, r14
     ec4:	be 01       	movw	r22, r28
     ec6:	6f 5d       	subi	r22, 0xDF	; 223
     ec8:	7f 4f       	sbci	r23, 0xFF	; 255
     eca:	cb 01       	movw	r24, r22
     ecc:	a7 dd       	rcall	.-1202   	; 0xa1c <uECC_vli_modSquare_fast>
     ece:	b8 01       	movw	r22, r16
     ed0:	ce 01       	movw	r24, r28
     ed2:	01 96       	adiw	r24, 0x01	; 1
     ed4:	96 dc       	rcall	.-1748   	; 0x802 <uECC_vli_testBit>
     ed6:	88 23       	and	r24, r24
     ed8:	39 f0       	breq	.+14     	; 0xee8 <mod_sqrt_default+0x94>
     eda:	97 01       	movw	r18, r14
     edc:	a6 01       	movw	r20, r12
     ede:	be 01       	movw	r22, r28
     ee0:	6f 5d       	subi	r22, 0xDF	; 223
     ee2:	7f 4f       	sbci	r23, 0xFF	; 255
     ee4:	cb 01       	movw	r24, r22
     ee6:	6b dd       	rcall	.-1322   	; 0x9be <uECC_vli_modMult_fast>
     ee8:	01 50       	subi	r16, 0x01	; 1
     eea:	11 09       	sbc	r17, r1
     eec:	01 30       	cpi	r16, 0x01	; 1
     eee:	11 05       	cpc	r17, r1
     ef0:	41 f7       	brne	.-48     	; 0xec2 <mod_sqrt_default+0x6e>
     ef2:	4b 2d       	mov	r20, r11
     ef4:	be 01       	movw	r22, r28
     ef6:	6f 5d       	subi	r22, 0xDF	; 223
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	c6 01       	movw	r24, r12
     efc:	cf d9       	rcall	.-3170   	; 0x29c <uECC_vli_set>
     efe:	c0 5c       	subi	r28, 0xC0	; 192
     f00:	df 4f       	sbci	r29, 0xFF	; 255
     f02:	0f b6       	in	r0, 0x3f	; 63
     f04:	f8 94       	cli
     f06:	de bf       	out	0x3e, r29	; 62
     f08:	0f be       	out	0x3f, r0	; 63
     f0a:	cd bf       	out	0x3d, r28	; 61
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	ff 90       	pop	r15
     f16:	ef 90       	pop	r14
     f18:	df 90       	pop	r13
     f1a:	cf 90       	pop	r12
     f1c:	bf 90       	pop	r11
     f1e:	08 95       	ret

00000f20 <vli_mmod_fast_secp256r1>:
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ff 92       	push	r15
     f26:	0f 93       	push	r16
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	cd b7       	in	r28, 0x3d	; 61
     f30:	de b7       	in	r29, 0x3e	; 62
     f32:	a0 97       	sbiw	r28, 0x20	; 32
     f34:	0f b6       	in	r0, 0x3f	; 63
     f36:	f8 94       	cli
     f38:	de bf       	out	0x3e, r29	; 62
     f3a:	0f be       	out	0x3f, r0	; 63
     f3c:	cd bf       	out	0x3d, r28	; 61
     f3e:	6c 01       	movw	r12, r24
     f40:	8b 01       	movw	r16, r22
     f42:	40 e2       	ldi	r20, 0x20	; 32
     f44:	ab d9       	rcall	.-3242   	; 0x29c <uECC_vli_set>
     f46:	1c 82       	std	Y+4, r1	; 0x04
     f48:	1b 82       	std	Y+3, r1	; 0x03
     f4a:	1a 82       	std	Y+2, r1	; 0x02
     f4c:	19 82       	std	Y+1, r1	; 0x01
     f4e:	18 86       	std	Y+8, r1	; 0x08
     f50:	1f 82       	std	Y+7, r1	; 0x07
     f52:	1e 82       	std	Y+6, r1	; 0x06
     f54:	1d 82       	std	Y+5, r1	; 0x05
     f56:	1c 86       	std	Y+12, r1	; 0x0c
     f58:	1b 86       	std	Y+11, r1	; 0x0b
     f5a:	1a 86       	std	Y+10, r1	; 0x0a
     f5c:	19 86       	std	Y+9, r1	; 0x09
     f5e:	f8 01       	movw	r30, r16
     f60:	84 a5       	ldd	r24, Z+44	; 0x2c
     f62:	8d 87       	std	Y+13, r24	; 0x0d
     f64:	85 a5       	ldd	r24, Z+45	; 0x2d
     f66:	8e 87       	std	Y+14, r24	; 0x0e
     f68:	86 a5       	ldd	r24, Z+46	; 0x2e
     f6a:	8f 87       	std	Y+15, r24	; 0x0f
     f6c:	87 a5       	ldd	r24, Z+47	; 0x2f
     f6e:	88 8b       	std	Y+16, r24	; 0x10
     f70:	80 a9       	ldd	r24, Z+48	; 0x30
     f72:	89 8b       	std	Y+17, r24	; 0x11
     f74:	81 a9       	ldd	r24, Z+49	; 0x31
     f76:	8a 8b       	std	Y+18, r24	; 0x12
     f78:	82 a9       	ldd	r24, Z+50	; 0x32
     f7a:	8b 8b       	std	Y+19, r24	; 0x13
     f7c:	83 a9       	ldd	r24, Z+51	; 0x33
     f7e:	8c 8b       	std	Y+20, r24	; 0x14
     f80:	84 a9       	ldd	r24, Z+52	; 0x34
     f82:	8d 8b       	std	Y+21, r24	; 0x15
     f84:	85 a9       	ldd	r24, Z+53	; 0x35
     f86:	8e 8b       	std	Y+22, r24	; 0x16
     f88:	86 a9       	ldd	r24, Z+54	; 0x36
     f8a:	8f 8b       	std	Y+23, r24	; 0x17
     f8c:	87 a9       	ldd	r24, Z+55	; 0x37
     f8e:	88 8f       	std	Y+24, r24	; 0x18
     f90:	80 ad       	ldd	r24, Z+56	; 0x38
     f92:	89 8f       	std	Y+25, r24	; 0x19
     f94:	81 ad       	ldd	r24, Z+57	; 0x39
     f96:	8a 8f       	std	Y+26, r24	; 0x1a
     f98:	82 ad       	ldd	r24, Z+58	; 0x3a
     f9a:	8b 8f       	std	Y+27, r24	; 0x1b
     f9c:	83 ad       	ldd	r24, Z+59	; 0x3b
     f9e:	8c 8f       	std	Y+28, r24	; 0x1c
     fa0:	84 ad       	ldd	r24, Z+60	; 0x3c
     fa2:	8d 8f       	std	Y+29, r24	; 0x1d
     fa4:	85 ad       	ldd	r24, Z+61	; 0x3d
     fa6:	8e 8f       	std	Y+30, r24	; 0x1e
     fa8:	86 ad       	ldd	r24, Z+62	; 0x3e
     faa:	8f 8f       	std	Y+31, r24	; 0x1f
     fac:	87 ad       	ldd	r24, Z+63	; 0x3f
     fae:	88 a3       	std	Y+32, r24	; 0x20
     fb0:	20 e2       	ldi	r18, 0x20	; 32
     fb2:	ae 01       	movw	r20, r28
     fb4:	4f 5f       	subi	r20, 0xFF	; 255
     fb6:	5f 4f       	sbci	r21, 0xFF	; 255
     fb8:	ba 01       	movw	r22, r20
     fba:	ca 01       	movw	r24, r20
     fbc:	2e da       	rcall	.-2980   	; 0x41a <uECC_vli_add>
     fbe:	f8 2e       	mov	r15, r24
     fc0:	20 e2       	ldi	r18, 0x20	; 32
     fc2:	ae 01       	movw	r20, r28
     fc4:	4f 5f       	subi	r20, 0xFF	; 255
     fc6:	5f 4f       	sbci	r21, 0xFF	; 255
     fc8:	b6 01       	movw	r22, r12
     fca:	c6 01       	movw	r24, r12
     fcc:	26 da       	rcall	.-2996   	; 0x41a <uECC_vli_add>
     fce:	f8 0e       	add	r15, r24
     fd0:	f8 01       	movw	r30, r16
     fd2:	80 a9       	ldd	r24, Z+48	; 0x30
     fd4:	8d 87       	std	Y+13, r24	; 0x0d
     fd6:	81 a9       	ldd	r24, Z+49	; 0x31
     fd8:	8e 87       	std	Y+14, r24	; 0x0e
     fda:	82 a9       	ldd	r24, Z+50	; 0x32
     fdc:	8f 87       	std	Y+15, r24	; 0x0f
     fde:	83 a9       	ldd	r24, Z+51	; 0x33
     fe0:	88 8b       	std	Y+16, r24	; 0x10
     fe2:	84 a9       	ldd	r24, Z+52	; 0x34
     fe4:	89 8b       	std	Y+17, r24	; 0x11
     fe6:	85 a9       	ldd	r24, Z+53	; 0x35
     fe8:	8a 8b       	std	Y+18, r24	; 0x12
     fea:	86 a9       	ldd	r24, Z+54	; 0x36
     fec:	8b 8b       	std	Y+19, r24	; 0x13
     fee:	87 a9       	ldd	r24, Z+55	; 0x37
     ff0:	8c 8b       	std	Y+20, r24	; 0x14
     ff2:	80 ad       	ldd	r24, Z+56	; 0x38
     ff4:	8d 8b       	std	Y+21, r24	; 0x15
     ff6:	81 ad       	ldd	r24, Z+57	; 0x39
     ff8:	8e 8b       	std	Y+22, r24	; 0x16
     ffa:	82 ad       	ldd	r24, Z+58	; 0x3a
     ffc:	8f 8b       	std	Y+23, r24	; 0x17
     ffe:	83 ad       	ldd	r24, Z+59	; 0x3b
    1000:	88 8f       	std	Y+24, r24	; 0x18
    1002:	84 ad       	ldd	r24, Z+60	; 0x3c
    1004:	89 8f       	std	Y+25, r24	; 0x19
    1006:	85 ad       	ldd	r24, Z+61	; 0x3d
    1008:	8a 8f       	std	Y+26, r24	; 0x1a
    100a:	86 ad       	ldd	r24, Z+62	; 0x3e
    100c:	8b 8f       	std	Y+27, r24	; 0x1b
    100e:	87 ad       	ldd	r24, Z+63	; 0x3f
    1010:	8c 8f       	std	Y+28, r24	; 0x1c
    1012:	18 a2       	std	Y+32, r1	; 0x20
    1014:	1f 8e       	std	Y+31, r1	; 0x1f
    1016:	1e 8e       	std	Y+30, r1	; 0x1e
    1018:	1d 8e       	std	Y+29, r1	; 0x1d
    101a:	20 e2       	ldi	r18, 0x20	; 32
    101c:	ae 01       	movw	r20, r28
    101e:	4f 5f       	subi	r20, 0xFF	; 255
    1020:	5f 4f       	sbci	r21, 0xFF	; 255
    1022:	ba 01       	movw	r22, r20
    1024:	ca 01       	movw	r24, r20
    1026:	f9 d9       	rcall	.-3086   	; 0x41a <uECC_vli_add>
    1028:	f8 0e       	add	r15, r24
    102a:	20 e2       	ldi	r18, 0x20	; 32
    102c:	ae 01       	movw	r20, r28
    102e:	4f 5f       	subi	r20, 0xFF	; 255
    1030:	5f 4f       	sbci	r21, 0xFF	; 255
    1032:	b6 01       	movw	r22, r12
    1034:	c6 01       	movw	r24, r12
    1036:	f1 d9       	rcall	.-3102   	; 0x41a <uECC_vli_add>
    1038:	f8 0e       	add	r15, r24
    103a:	f8 01       	movw	r30, r16
    103c:	80 a1       	ldd	r24, Z+32	; 0x20
    103e:	89 83       	std	Y+1, r24	; 0x01
    1040:	81 a1       	ldd	r24, Z+33	; 0x21
    1042:	8a 83       	std	Y+2, r24	; 0x02
    1044:	82 a1       	ldd	r24, Z+34	; 0x22
    1046:	8b 83       	std	Y+3, r24	; 0x03
    1048:	83 a1       	ldd	r24, Z+35	; 0x23
    104a:	8c 83       	std	Y+4, r24	; 0x04
    104c:	84 a1       	ldd	r24, Z+36	; 0x24
    104e:	8d 83       	std	Y+5, r24	; 0x05
    1050:	85 a1       	ldd	r24, Z+37	; 0x25
    1052:	8e 83       	std	Y+6, r24	; 0x06
    1054:	86 a1       	ldd	r24, Z+38	; 0x26
    1056:	8f 83       	std	Y+7, r24	; 0x07
    1058:	87 a1       	ldd	r24, Z+39	; 0x27
    105a:	88 87       	std	Y+8, r24	; 0x08
    105c:	80 a5       	ldd	r24, Z+40	; 0x28
    105e:	89 87       	std	Y+9, r24	; 0x09
    1060:	81 a5       	ldd	r24, Z+41	; 0x29
    1062:	8a 87       	std	Y+10, r24	; 0x0a
    1064:	82 a5       	ldd	r24, Z+42	; 0x2a
    1066:	8b 87       	std	Y+11, r24	; 0x0b
    1068:	83 a5       	ldd	r24, Z+43	; 0x2b
    106a:	8c 87       	std	Y+12, r24	; 0x0c
    106c:	18 8a       	std	Y+16, r1	; 0x10
    106e:	1f 86       	std	Y+15, r1	; 0x0f
    1070:	1e 86       	std	Y+14, r1	; 0x0e
    1072:	1d 86       	std	Y+13, r1	; 0x0d
    1074:	1c 8a       	std	Y+20, r1	; 0x14
    1076:	1b 8a       	std	Y+19, r1	; 0x13
    1078:	1a 8a       	std	Y+18, r1	; 0x12
    107a:	19 8a       	std	Y+17, r1	; 0x11
    107c:	18 8e       	std	Y+24, r1	; 0x18
    107e:	1f 8a       	std	Y+23, r1	; 0x17
    1080:	1e 8a       	std	Y+22, r1	; 0x16
    1082:	1d 8a       	std	Y+21, r1	; 0x15
    1084:	80 ad       	ldd	r24, Z+56	; 0x38
    1086:	89 8f       	std	Y+25, r24	; 0x19
    1088:	81 ad       	ldd	r24, Z+57	; 0x39
    108a:	8a 8f       	std	Y+26, r24	; 0x1a
    108c:	82 ad       	ldd	r24, Z+58	; 0x3a
    108e:	8b 8f       	std	Y+27, r24	; 0x1b
    1090:	83 ad       	ldd	r24, Z+59	; 0x3b
    1092:	8c 8f       	std	Y+28, r24	; 0x1c
    1094:	84 ad       	ldd	r24, Z+60	; 0x3c
    1096:	8d 8f       	std	Y+29, r24	; 0x1d
    1098:	85 ad       	ldd	r24, Z+61	; 0x3d
    109a:	8e 8f       	std	Y+30, r24	; 0x1e
    109c:	86 ad       	ldd	r24, Z+62	; 0x3e
    109e:	8f 8f       	std	Y+31, r24	; 0x1f
    10a0:	87 ad       	ldd	r24, Z+63	; 0x3f
    10a2:	88 a3       	std	Y+32, r24	; 0x20
    10a4:	20 e2       	ldi	r18, 0x20	; 32
    10a6:	ae 01       	movw	r20, r28
    10a8:	4f 5f       	subi	r20, 0xFF	; 255
    10aa:	5f 4f       	sbci	r21, 0xFF	; 255
    10ac:	b6 01       	movw	r22, r12
    10ae:	c6 01       	movw	r24, r12
    10b0:	b4 d9       	rcall	.-3224   	; 0x41a <uECC_vli_add>
    10b2:	f8 0e       	add	r15, r24
    10b4:	f8 01       	movw	r30, r16
    10b6:	84 a1       	ldd	r24, Z+36	; 0x24
    10b8:	89 83       	std	Y+1, r24	; 0x01
    10ba:	85 a1       	ldd	r24, Z+37	; 0x25
    10bc:	8a 83       	std	Y+2, r24	; 0x02
    10be:	86 a1       	ldd	r24, Z+38	; 0x26
    10c0:	8b 83       	std	Y+3, r24	; 0x03
    10c2:	87 a1       	ldd	r24, Z+39	; 0x27
    10c4:	8c 83       	std	Y+4, r24	; 0x04
    10c6:	80 a5       	ldd	r24, Z+40	; 0x28
    10c8:	8d 83       	std	Y+5, r24	; 0x05
    10ca:	81 a5       	ldd	r24, Z+41	; 0x29
    10cc:	8e 83       	std	Y+6, r24	; 0x06
    10ce:	82 a5       	ldd	r24, Z+42	; 0x2a
    10d0:	8f 83       	std	Y+7, r24	; 0x07
    10d2:	83 a5       	ldd	r24, Z+43	; 0x2b
    10d4:	88 87       	std	Y+8, r24	; 0x08
    10d6:	84 a5       	ldd	r24, Z+44	; 0x2c
    10d8:	89 87       	std	Y+9, r24	; 0x09
    10da:	85 a5       	ldd	r24, Z+45	; 0x2d
    10dc:	8a 87       	std	Y+10, r24	; 0x0a
    10de:	86 a5       	ldd	r24, Z+46	; 0x2e
    10e0:	8b 87       	std	Y+11, r24	; 0x0b
    10e2:	87 a5       	ldd	r24, Z+47	; 0x2f
    10e4:	8c 87       	std	Y+12, r24	; 0x0c
    10e6:	34 a9       	ldd	r19, Z+52	; 0x34
    10e8:	3d 87       	std	Y+13, r19	; 0x0d
    10ea:	25 a9       	ldd	r18, Z+53	; 0x35
    10ec:	2e 87       	std	Y+14, r18	; 0x0e
    10ee:	96 a9       	ldd	r25, Z+54	; 0x36
    10f0:	9f 87       	std	Y+15, r25	; 0x0f
    10f2:	87 a9       	ldd	r24, Z+55	; 0x37
    10f4:	88 8b       	std	Y+16, r24	; 0x10
    10f6:	40 ad       	ldd	r20, Z+56	; 0x38
    10f8:	49 8b       	std	Y+17, r20	; 0x11
    10fa:	41 ad       	ldd	r20, Z+57	; 0x39
    10fc:	4a 8b       	std	Y+18, r20	; 0x12
    10fe:	42 ad       	ldd	r20, Z+58	; 0x3a
    1100:	4b 8b       	std	Y+19, r20	; 0x13
    1102:	43 ad       	ldd	r20, Z+59	; 0x3b
    1104:	4c 8b       	std	Y+20, r20	; 0x14
    1106:	44 ad       	ldd	r20, Z+60	; 0x3c
    1108:	4d 8b       	std	Y+21, r20	; 0x15
    110a:	45 ad       	ldd	r20, Z+61	; 0x3d
    110c:	4e 8b       	std	Y+22, r20	; 0x16
    110e:	46 ad       	ldd	r20, Z+62	; 0x3e
    1110:	4f 8b       	std	Y+23, r20	; 0x17
    1112:	47 ad       	ldd	r20, Z+63	; 0x3f
    1114:	48 8f       	std	Y+24, r20	; 0x18
    1116:	39 8f       	std	Y+25, r19	; 0x19
    1118:	2a 8f       	std	Y+26, r18	; 0x1a
    111a:	9b 8f       	std	Y+27, r25	; 0x1b
    111c:	8c 8f       	std	Y+28, r24	; 0x1c
    111e:	80 a1       	ldd	r24, Z+32	; 0x20
    1120:	8d 8f       	std	Y+29, r24	; 0x1d
    1122:	81 a1       	ldd	r24, Z+33	; 0x21
    1124:	8e 8f       	std	Y+30, r24	; 0x1e
    1126:	82 a1       	ldd	r24, Z+34	; 0x22
    1128:	8f 8f       	std	Y+31, r24	; 0x1f
    112a:	83 a1       	ldd	r24, Z+35	; 0x23
    112c:	88 a3       	std	Y+32, r24	; 0x20
    112e:	20 e2       	ldi	r18, 0x20	; 32
    1130:	ae 01       	movw	r20, r28
    1132:	4f 5f       	subi	r20, 0xFF	; 255
    1134:	5f 4f       	sbci	r21, 0xFF	; 255
    1136:	b6 01       	movw	r22, r12
    1138:	c6 01       	movw	r24, r12
    113a:	6f d9       	rcall	.-3362   	; 0x41a <uECC_vli_add>
    113c:	f8 0e       	add	r15, r24
    113e:	f8 01       	movw	r30, r16
    1140:	84 a5       	ldd	r24, Z+44	; 0x2c
    1142:	89 83       	std	Y+1, r24	; 0x01
    1144:	85 a5       	ldd	r24, Z+45	; 0x2d
    1146:	8a 83       	std	Y+2, r24	; 0x02
    1148:	86 a5       	ldd	r24, Z+46	; 0x2e
    114a:	8b 83       	std	Y+3, r24	; 0x03
    114c:	87 a5       	ldd	r24, Z+47	; 0x2f
    114e:	8c 83       	std	Y+4, r24	; 0x04
    1150:	80 a9       	ldd	r24, Z+48	; 0x30
    1152:	8d 83       	std	Y+5, r24	; 0x05
    1154:	81 a9       	ldd	r24, Z+49	; 0x31
    1156:	8e 83       	std	Y+6, r24	; 0x06
    1158:	82 a9       	ldd	r24, Z+50	; 0x32
    115a:	8f 83       	std	Y+7, r24	; 0x07
    115c:	83 a9       	ldd	r24, Z+51	; 0x33
    115e:	88 87       	std	Y+8, r24	; 0x08
    1160:	84 a9       	ldd	r24, Z+52	; 0x34
    1162:	89 87       	std	Y+9, r24	; 0x09
    1164:	85 a9       	ldd	r24, Z+53	; 0x35
    1166:	8a 87       	std	Y+10, r24	; 0x0a
    1168:	86 a9       	ldd	r24, Z+54	; 0x36
    116a:	8b 87       	std	Y+11, r24	; 0x0b
    116c:	87 a9       	ldd	r24, Z+55	; 0x37
    116e:	8c 87       	std	Y+12, r24	; 0x0c
    1170:	18 8a       	std	Y+16, r1	; 0x10
    1172:	1f 86       	std	Y+15, r1	; 0x0f
    1174:	1e 86       	std	Y+14, r1	; 0x0e
    1176:	1d 86       	std	Y+13, r1	; 0x0d
    1178:	1c 8a       	std	Y+20, r1	; 0x14
    117a:	1b 8a       	std	Y+19, r1	; 0x13
    117c:	1a 8a       	std	Y+18, r1	; 0x12
    117e:	19 8a       	std	Y+17, r1	; 0x11
    1180:	18 8e       	std	Y+24, r1	; 0x18
    1182:	1f 8a       	std	Y+23, r1	; 0x17
    1184:	1e 8a       	std	Y+22, r1	; 0x16
    1186:	1d 8a       	std	Y+21, r1	; 0x15
    1188:	80 a1       	ldd	r24, Z+32	; 0x20
    118a:	89 8f       	std	Y+25, r24	; 0x19
    118c:	81 a1       	ldd	r24, Z+33	; 0x21
    118e:	8a 8f       	std	Y+26, r24	; 0x1a
    1190:	82 a1       	ldd	r24, Z+34	; 0x22
    1192:	8b 8f       	std	Y+27, r24	; 0x1b
    1194:	83 a1       	ldd	r24, Z+35	; 0x23
    1196:	8c 8f       	std	Y+28, r24	; 0x1c
    1198:	80 a5       	ldd	r24, Z+40	; 0x28
    119a:	8d 8f       	std	Y+29, r24	; 0x1d
    119c:	81 a5       	ldd	r24, Z+41	; 0x29
    119e:	8e 8f       	std	Y+30, r24	; 0x1e
    11a0:	82 a5       	ldd	r24, Z+42	; 0x2a
    11a2:	8f 8f       	std	Y+31, r24	; 0x1f
    11a4:	83 a5       	ldd	r24, Z+43	; 0x2b
    11a6:	88 a3       	std	Y+32, r24	; 0x20
    11a8:	20 e2       	ldi	r18, 0x20	; 32
    11aa:	ae 01       	movw	r20, r28
    11ac:	4f 5f       	subi	r20, 0xFF	; 255
    11ae:	5f 4f       	sbci	r21, 0xFF	; 255
    11b0:	b6 01       	movw	r22, r12
    11b2:	c6 01       	movw	r24, r12
    11b4:	03 da       	rcall	.-3066   	; 0x5bc <uECC_vli_sub>
    11b6:	f8 1a       	sub	r15, r24
    11b8:	f8 01       	movw	r30, r16
    11ba:	80 a9       	ldd	r24, Z+48	; 0x30
    11bc:	89 83       	std	Y+1, r24	; 0x01
    11be:	81 a9       	ldd	r24, Z+49	; 0x31
    11c0:	8a 83       	std	Y+2, r24	; 0x02
    11c2:	82 a9       	ldd	r24, Z+50	; 0x32
    11c4:	8b 83       	std	Y+3, r24	; 0x03
    11c6:	83 a9       	ldd	r24, Z+51	; 0x33
    11c8:	8c 83       	std	Y+4, r24	; 0x04
    11ca:	84 a9       	ldd	r24, Z+52	; 0x34
    11cc:	8d 83       	std	Y+5, r24	; 0x05
    11ce:	85 a9       	ldd	r24, Z+53	; 0x35
    11d0:	8e 83       	std	Y+6, r24	; 0x06
    11d2:	86 a9       	ldd	r24, Z+54	; 0x36
    11d4:	8f 83       	std	Y+7, r24	; 0x07
    11d6:	87 a9       	ldd	r24, Z+55	; 0x37
    11d8:	88 87       	std	Y+8, r24	; 0x08
    11da:	80 ad       	ldd	r24, Z+56	; 0x38
    11dc:	89 87       	std	Y+9, r24	; 0x09
    11de:	81 ad       	ldd	r24, Z+57	; 0x39
    11e0:	8a 87       	std	Y+10, r24	; 0x0a
    11e2:	82 ad       	ldd	r24, Z+58	; 0x3a
    11e4:	8b 87       	std	Y+11, r24	; 0x0b
    11e6:	83 ad       	ldd	r24, Z+59	; 0x3b
    11e8:	8c 87       	std	Y+12, r24	; 0x0c
    11ea:	84 ad       	ldd	r24, Z+60	; 0x3c
    11ec:	8d 87       	std	Y+13, r24	; 0x0d
    11ee:	85 ad       	ldd	r24, Z+61	; 0x3d
    11f0:	8e 87       	std	Y+14, r24	; 0x0e
    11f2:	86 ad       	ldd	r24, Z+62	; 0x3e
    11f4:	8f 87       	std	Y+15, r24	; 0x0f
    11f6:	87 ad       	ldd	r24, Z+63	; 0x3f
    11f8:	88 8b       	std	Y+16, r24	; 0x10
    11fa:	1c 8a       	std	Y+20, r1	; 0x14
    11fc:	1b 8a       	std	Y+19, r1	; 0x13
    11fe:	1a 8a       	std	Y+18, r1	; 0x12
    1200:	19 8a       	std	Y+17, r1	; 0x11
    1202:	18 8e       	std	Y+24, r1	; 0x18
    1204:	1f 8a       	std	Y+23, r1	; 0x17
    1206:	1e 8a       	std	Y+22, r1	; 0x16
    1208:	1d 8a       	std	Y+21, r1	; 0x15
    120a:	84 a1       	ldd	r24, Z+36	; 0x24
    120c:	89 8f       	std	Y+25, r24	; 0x19
    120e:	85 a1       	ldd	r24, Z+37	; 0x25
    1210:	8a 8f       	std	Y+26, r24	; 0x1a
    1212:	86 a1       	ldd	r24, Z+38	; 0x26
    1214:	8b 8f       	std	Y+27, r24	; 0x1b
    1216:	87 a1       	ldd	r24, Z+39	; 0x27
    1218:	8c 8f       	std	Y+28, r24	; 0x1c
    121a:	84 a5       	ldd	r24, Z+44	; 0x2c
    121c:	8d 8f       	std	Y+29, r24	; 0x1d
    121e:	85 a5       	ldd	r24, Z+45	; 0x2d
    1220:	8e 8f       	std	Y+30, r24	; 0x1e
    1222:	86 a5       	ldd	r24, Z+46	; 0x2e
    1224:	8f 8f       	std	Y+31, r24	; 0x1f
    1226:	87 a5       	ldd	r24, Z+47	; 0x2f
    1228:	88 a3       	std	Y+32, r24	; 0x20
    122a:	20 e2       	ldi	r18, 0x20	; 32
    122c:	ae 01       	movw	r20, r28
    122e:	4f 5f       	subi	r20, 0xFF	; 255
    1230:	5f 4f       	sbci	r21, 0xFF	; 255
    1232:	b6 01       	movw	r22, r12
    1234:	c6 01       	movw	r24, r12
    1236:	c2 d9       	rcall	.-3196   	; 0x5bc <uECC_vli_sub>
    1238:	f8 1a       	sub	r15, r24
    123a:	f8 01       	movw	r30, r16
    123c:	84 a9       	ldd	r24, Z+52	; 0x34
    123e:	89 83       	std	Y+1, r24	; 0x01
    1240:	85 a9       	ldd	r24, Z+53	; 0x35
    1242:	8a 83       	std	Y+2, r24	; 0x02
    1244:	86 a9       	ldd	r24, Z+54	; 0x36
    1246:	8b 83       	std	Y+3, r24	; 0x03
    1248:	87 a9       	ldd	r24, Z+55	; 0x37
    124a:	8c 83       	std	Y+4, r24	; 0x04
    124c:	80 ad       	ldd	r24, Z+56	; 0x38
    124e:	8d 83       	std	Y+5, r24	; 0x05
    1250:	81 ad       	ldd	r24, Z+57	; 0x39
    1252:	8e 83       	std	Y+6, r24	; 0x06
    1254:	82 ad       	ldd	r24, Z+58	; 0x3a
    1256:	8f 83       	std	Y+7, r24	; 0x07
    1258:	83 ad       	ldd	r24, Z+59	; 0x3b
    125a:	88 87       	std	Y+8, r24	; 0x08
    125c:	84 ad       	ldd	r24, Z+60	; 0x3c
    125e:	89 87       	std	Y+9, r24	; 0x09
    1260:	85 ad       	ldd	r24, Z+61	; 0x3d
    1262:	8a 87       	std	Y+10, r24	; 0x0a
    1264:	86 ad       	ldd	r24, Z+62	; 0x3e
    1266:	8b 87       	std	Y+11, r24	; 0x0b
    1268:	87 ad       	ldd	r24, Z+63	; 0x3f
    126a:	8c 87       	std	Y+12, r24	; 0x0c
    126c:	80 a1       	ldd	r24, Z+32	; 0x20
    126e:	8d 87       	std	Y+13, r24	; 0x0d
    1270:	81 a1       	ldd	r24, Z+33	; 0x21
    1272:	8e 87       	std	Y+14, r24	; 0x0e
    1274:	82 a1       	ldd	r24, Z+34	; 0x22
    1276:	8f 87       	std	Y+15, r24	; 0x0f
    1278:	83 a1       	ldd	r24, Z+35	; 0x23
    127a:	88 8b       	std	Y+16, r24	; 0x10
    127c:	84 a1       	ldd	r24, Z+36	; 0x24
    127e:	89 8b       	std	Y+17, r24	; 0x11
    1280:	85 a1       	ldd	r24, Z+37	; 0x25
    1282:	8a 8b       	std	Y+18, r24	; 0x12
    1284:	86 a1       	ldd	r24, Z+38	; 0x26
    1286:	8b 8b       	std	Y+19, r24	; 0x13
    1288:	87 a1       	ldd	r24, Z+39	; 0x27
    128a:	8c 8b       	std	Y+20, r24	; 0x14
    128c:	80 a5       	ldd	r24, Z+40	; 0x28
    128e:	8d 8b       	std	Y+21, r24	; 0x15
    1290:	81 a5       	ldd	r24, Z+41	; 0x29
    1292:	8e 8b       	std	Y+22, r24	; 0x16
    1294:	82 a5       	ldd	r24, Z+42	; 0x2a
    1296:	8f 8b       	std	Y+23, r24	; 0x17
    1298:	83 a5       	ldd	r24, Z+43	; 0x2b
    129a:	88 8f       	std	Y+24, r24	; 0x18
    129c:	1c 8e       	std	Y+28, r1	; 0x1c
    129e:	1b 8e       	std	Y+27, r1	; 0x1b
    12a0:	1a 8e       	std	Y+26, r1	; 0x1a
    12a2:	19 8e       	std	Y+25, r1	; 0x19
    12a4:	80 a9       	ldd	r24, Z+48	; 0x30
    12a6:	8d 8f       	std	Y+29, r24	; 0x1d
    12a8:	81 a9       	ldd	r24, Z+49	; 0x31
    12aa:	8e 8f       	std	Y+30, r24	; 0x1e
    12ac:	82 a9       	ldd	r24, Z+50	; 0x32
    12ae:	8f 8f       	std	Y+31, r24	; 0x1f
    12b0:	83 a9       	ldd	r24, Z+51	; 0x33
    12b2:	88 a3       	std	Y+32, r24	; 0x20
    12b4:	20 e2       	ldi	r18, 0x20	; 32
    12b6:	ae 01       	movw	r20, r28
    12b8:	4f 5f       	subi	r20, 0xFF	; 255
    12ba:	5f 4f       	sbci	r21, 0xFF	; 255
    12bc:	b6 01       	movw	r22, r12
    12be:	c6 01       	movw	r24, r12
    12c0:	7d d9       	rcall	.-3334   	; 0x5bc <uECC_vli_sub>
    12c2:	f8 1a       	sub	r15, r24
    12c4:	f8 01       	movw	r30, r16
    12c6:	80 ad       	ldd	r24, Z+56	; 0x38
    12c8:	89 83       	std	Y+1, r24	; 0x01
    12ca:	81 ad       	ldd	r24, Z+57	; 0x39
    12cc:	8a 83       	std	Y+2, r24	; 0x02
    12ce:	82 ad       	ldd	r24, Z+58	; 0x3a
    12d0:	8b 83       	std	Y+3, r24	; 0x03
    12d2:	83 ad       	ldd	r24, Z+59	; 0x3b
    12d4:	8c 83       	std	Y+4, r24	; 0x04
    12d6:	84 ad       	ldd	r24, Z+60	; 0x3c
    12d8:	8d 83       	std	Y+5, r24	; 0x05
    12da:	85 ad       	ldd	r24, Z+61	; 0x3d
    12dc:	8e 83       	std	Y+6, r24	; 0x06
    12de:	86 ad       	ldd	r24, Z+62	; 0x3e
    12e0:	8f 83       	std	Y+7, r24	; 0x07
    12e2:	87 ad       	ldd	r24, Z+63	; 0x3f
    12e4:	88 87       	std	Y+8, r24	; 0x08
    12e6:	1c 86       	std	Y+12, r1	; 0x0c
    12e8:	1b 86       	std	Y+11, r1	; 0x0b
    12ea:	1a 86       	std	Y+10, r1	; 0x0a
    12ec:	19 86       	std	Y+9, r1	; 0x09
    12ee:	84 a1       	ldd	r24, Z+36	; 0x24
    12f0:	8d 87       	std	Y+13, r24	; 0x0d
    12f2:	85 a1       	ldd	r24, Z+37	; 0x25
    12f4:	8e 87       	std	Y+14, r24	; 0x0e
    12f6:	86 a1       	ldd	r24, Z+38	; 0x26
    12f8:	8f 87       	std	Y+15, r24	; 0x0f
    12fa:	87 a1       	ldd	r24, Z+39	; 0x27
    12fc:	88 8b       	std	Y+16, r24	; 0x10
    12fe:	80 a5       	ldd	r24, Z+40	; 0x28
    1300:	89 8b       	std	Y+17, r24	; 0x11
    1302:	81 a5       	ldd	r24, Z+41	; 0x29
    1304:	8a 8b       	std	Y+18, r24	; 0x12
    1306:	82 a5       	ldd	r24, Z+42	; 0x2a
    1308:	8b 8b       	std	Y+19, r24	; 0x13
    130a:	83 a5       	ldd	r24, Z+43	; 0x2b
    130c:	8c 8b       	std	Y+20, r24	; 0x14
    130e:	84 a5       	ldd	r24, Z+44	; 0x2c
    1310:	8d 8b       	std	Y+21, r24	; 0x15
    1312:	85 a5       	ldd	r24, Z+45	; 0x2d
    1314:	8e 8b       	std	Y+22, r24	; 0x16
    1316:	86 a5       	ldd	r24, Z+46	; 0x2e
    1318:	8f 8b       	std	Y+23, r24	; 0x17
    131a:	87 a5       	ldd	r24, Z+47	; 0x2f
    131c:	88 8f       	std	Y+24, r24	; 0x18
    131e:	1c 8e       	std	Y+28, r1	; 0x1c
    1320:	1b 8e       	std	Y+27, r1	; 0x1b
    1322:	1a 8e       	std	Y+26, r1	; 0x1a
    1324:	19 8e       	std	Y+25, r1	; 0x19
    1326:	84 a9       	ldd	r24, Z+52	; 0x34
    1328:	8d 8f       	std	Y+29, r24	; 0x1d
    132a:	85 a9       	ldd	r24, Z+53	; 0x35
    132c:	8e 8f       	std	Y+30, r24	; 0x1e
    132e:	86 a9       	ldd	r24, Z+54	; 0x36
    1330:	8f 8f       	std	Y+31, r24	; 0x1f
    1332:	87 a9       	ldd	r24, Z+55	; 0x37
    1334:	88 a3       	std	Y+32, r24	; 0x20
    1336:	20 e2       	ldi	r18, 0x20	; 32
    1338:	ae 01       	movw	r20, r28
    133a:	4f 5f       	subi	r20, 0xFF	; 255
    133c:	5f 4f       	sbci	r21, 0xFF	; 255
    133e:	b6 01       	movw	r22, r12
    1340:	c6 01       	movw	r24, r12
    1342:	3c d9       	rcall	.-3464   	; 0x5bc <uECC_vli_sub>
    1344:	1f 2d       	mov	r17, r15
    1346:	18 1b       	sub	r17, r24
    1348:	82 f4       	brpl	.+32     	; 0x136a <__stack+0x26b>
    134a:	20 e2       	ldi	r18, 0x20	; 32
    134c:	48 e0       	ldi	r20, 0x08	; 8
    134e:	51 e0       	ldi	r21, 0x01	; 1
    1350:	b6 01       	movw	r22, r12
    1352:	c6 01       	movw	r24, r12
    1354:	62 d8       	rcall	.-3900   	; 0x41a <uECC_vli_add>
    1356:	18 0f       	add	r17, r24
    1358:	c2 f3       	brmi	.-16     	; 0x134a <__stack+0x24b>
    135a:	10 c0       	rjmp	.+32     	; 0x137c <__stack+0x27d>
    135c:	20 e2       	ldi	r18, 0x20	; 32
    135e:	48 e0       	ldi	r20, 0x08	; 8
    1360:	51 e0       	ldi	r21, 0x01	; 1
    1362:	b6 01       	movw	r22, r12
    1364:	c6 01       	movw	r24, r12
    1366:	2a d9       	rcall	.-3500   	; 0x5bc <uECC_vli_sub>
    1368:	18 1b       	sub	r17, r24
    136a:	11 11       	cpse	r17, r1
    136c:	f7 cf       	rjmp	.-18     	; 0x135c <__stack+0x25d>
    136e:	40 e2       	ldi	r20, 0x20	; 32
    1370:	b6 01       	movw	r22, r12
    1372:	88 e0       	ldi	r24, 0x08	; 8
    1374:	91 e0       	ldi	r25, 0x01	; 1
    1376:	92 da       	rcall	.-2780   	; 0x89c <uECC_vli_cmp_unsafe>
    1378:	81 30       	cpi	r24, 0x01	; 1
    137a:	81 f7       	brne	.-32     	; 0x135c <__stack+0x25d>
    137c:	a0 96       	adiw	r28, 0x20	; 32
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	f8 94       	cli
    1382:	de bf       	out	0x3e, r29	; 62
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	cd bf       	out	0x3d, r28	; 61
    1388:	df 91       	pop	r29
    138a:	cf 91       	pop	r28
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	ff 90       	pop	r15
    1392:	df 90       	pop	r13
    1394:	cf 90       	pop	r12
    1396:	08 95       	ret

00001398 <apply_z>:
    1398:	af 92       	push	r10
    139a:	bf 92       	push	r11
    139c:	cf 92       	push	r12
    139e:	df 92       	push	r13
    13a0:	ef 92       	push	r14
    13a2:	ff 92       	push	r15
    13a4:	0f 93       	push	r16
    13a6:	1f 93       	push	r17
    13a8:	cf 93       	push	r28
    13aa:	df 93       	push	r29
    13ac:	cd b7       	in	r28, 0x3d	; 61
    13ae:	de b7       	in	r29, 0x3e	; 62
    13b0:	a0 97       	sbiw	r28, 0x20	; 32
    13b2:	0f b6       	in	r0, 0x3f	; 63
    13b4:	f8 94       	cli
    13b6:	de bf       	out	0x3e, r29	; 62
    13b8:	0f be       	out	0x3f, r0	; 63
    13ba:	cd bf       	out	0x3d, r28	; 61
    13bc:	5c 01       	movw	r10, r24
    13be:	7b 01       	movw	r14, r22
    13c0:	6a 01       	movw	r12, r20
    13c2:	89 01       	movw	r16, r18
    13c4:	a9 01       	movw	r20, r18
    13c6:	b6 01       	movw	r22, r12
    13c8:	ce 01       	movw	r24, r28
    13ca:	01 96       	adiw	r24, 0x01	; 1
    13cc:	27 db       	rcall	.-2482   	; 0xa1c <uECC_vli_modSquare_fast>
    13ce:	98 01       	movw	r18, r16
    13d0:	ae 01       	movw	r20, r28
    13d2:	4f 5f       	subi	r20, 0xFF	; 255
    13d4:	5f 4f       	sbci	r21, 0xFF	; 255
    13d6:	b5 01       	movw	r22, r10
    13d8:	c5 01       	movw	r24, r10
    13da:	f1 da       	rcall	.-2590   	; 0x9be <uECC_vli_modMult_fast>
    13dc:	98 01       	movw	r18, r16
    13de:	a6 01       	movw	r20, r12
    13e0:	be 01       	movw	r22, r28
    13e2:	6f 5f       	subi	r22, 0xFF	; 255
    13e4:	7f 4f       	sbci	r23, 0xFF	; 255
    13e6:	cb 01       	movw	r24, r22
    13e8:	ea da       	rcall	.-2604   	; 0x9be <uECC_vli_modMult_fast>
    13ea:	98 01       	movw	r18, r16
    13ec:	ae 01       	movw	r20, r28
    13ee:	4f 5f       	subi	r20, 0xFF	; 255
    13f0:	5f 4f       	sbci	r21, 0xFF	; 255
    13f2:	b7 01       	movw	r22, r14
    13f4:	c7 01       	movw	r24, r14
    13f6:	e3 da       	rcall	.-2618   	; 0x9be <uECC_vli_modMult_fast>
    13f8:	a0 96       	adiw	r28, 0x20	; 32
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
    1404:	df 91       	pop	r29
    1406:	cf 91       	pop	r28
    1408:	1f 91       	pop	r17
    140a:	0f 91       	pop	r16
    140c:	ff 90       	pop	r15
    140e:	ef 90       	pop	r14
    1410:	df 90       	pop	r13
    1412:	cf 90       	pop	r12
    1414:	bf 90       	pop	r11
    1416:	af 90       	pop	r10
    1418:	08 95       	ret

0000141a <XYcZ_add>:
    141a:	4f 92       	push	r4
    141c:	5f 92       	push	r5
    141e:	6f 92       	push	r6
    1420:	7f 92       	push	r7
    1422:	8f 92       	push	r8
    1424:	9f 92       	push	r9
    1426:	af 92       	push	r10
    1428:	bf 92       	push	r11
    142a:	cf 92       	push	r12
    142c:	df 92       	push	r13
    142e:	ef 92       	push	r14
    1430:	ff 92       	push	r15
    1432:	0f 93       	push	r16
    1434:	1f 93       	push	r17
    1436:	cf 93       	push	r28
    1438:	df 93       	push	r29
    143a:	cd b7       	in	r28, 0x3d	; 61
    143c:	de b7       	in	r29, 0x3e	; 62
    143e:	a0 97       	sbiw	r28, 0x20	; 32
    1440:	0f b6       	in	r0, 0x3f	; 63
    1442:	f8 94       	cli
    1444:	de bf       	out	0x3e, r29	; 62
    1446:	0f be       	out	0x3f, r0	; 63
    1448:	cd bf       	out	0x3d, r28	; 61
    144a:	3c 01       	movw	r6, r24
    144c:	2b 01       	movw	r4, r22
    144e:	7a 01       	movw	r14, r20
    1450:	59 01       	movw	r10, r18
    1452:	68 01       	movw	r12, r16
    1454:	f8 01       	movw	r30, r16
    1456:	10 81       	ld	r17, Z
    1458:	46 01       	movw	r8, r12
    145a:	f4 e0       	ldi	r31, 0x04	; 4
    145c:	8f 0e       	add	r8, r31
    145e:	91 1c       	adc	r9, r1
    1460:	01 2f       	mov	r16, r17
    1462:	94 01       	movw	r18, r8
    1464:	ac 01       	movw	r20, r24
    1466:	b7 01       	movw	r22, r14
    1468:	ce 01       	movw	r24, r28
    146a:	01 96       	adiw	r24, 0x01	; 1
    146c:	92 da       	rcall	.-2780   	; 0x992 <uECC_vli_modSub>
    146e:	a6 01       	movw	r20, r12
    1470:	be 01       	movw	r22, r28
    1472:	6f 5f       	subi	r22, 0xFF	; 255
    1474:	7f 4f       	sbci	r23, 0xFF	; 255
    1476:	cb 01       	movw	r24, r22
    1478:	d1 da       	rcall	.-2654   	; 0xa1c <uECC_vli_modSquare_fast>
    147a:	96 01       	movw	r18, r12
    147c:	ae 01       	movw	r20, r28
    147e:	4f 5f       	subi	r20, 0xFF	; 255
    1480:	5f 4f       	sbci	r21, 0xFF	; 255
    1482:	b3 01       	movw	r22, r6
    1484:	c3 01       	movw	r24, r6
    1486:	9b da       	rcall	.-2762   	; 0x9be <uECC_vli_modMult_fast>
    1488:	96 01       	movw	r18, r12
    148a:	ae 01       	movw	r20, r28
    148c:	4f 5f       	subi	r20, 0xFF	; 255
    148e:	5f 4f       	sbci	r21, 0xFF	; 255
    1490:	b7 01       	movw	r22, r14
    1492:	c7 01       	movw	r24, r14
    1494:	94 da       	rcall	.-2776   	; 0x9be <uECC_vli_modMult_fast>
    1496:	94 01       	movw	r18, r8
    1498:	a2 01       	movw	r20, r4
    149a:	b5 01       	movw	r22, r10
    149c:	c5 01       	movw	r24, r10
    149e:	79 da       	rcall	.-2830   	; 0x992 <uECC_vli_modSub>
    14a0:	a6 01       	movw	r20, r12
    14a2:	b5 01       	movw	r22, r10
    14a4:	ce 01       	movw	r24, r28
    14a6:	01 96       	adiw	r24, 0x01	; 1
    14a8:	b9 da       	rcall	.-2702   	; 0xa1c <uECC_vli_modSquare_fast>
    14aa:	94 01       	movw	r18, r8
    14ac:	a3 01       	movw	r20, r6
    14ae:	be 01       	movw	r22, r28
    14b0:	6f 5f       	subi	r22, 0xFF	; 255
    14b2:	7f 4f       	sbci	r23, 0xFF	; 255
    14b4:	cb 01       	movw	r24, r22
    14b6:	6d da       	rcall	.-2854   	; 0x992 <uECC_vli_modSub>
    14b8:	94 01       	movw	r18, r8
    14ba:	a7 01       	movw	r20, r14
    14bc:	be 01       	movw	r22, r28
    14be:	6f 5f       	subi	r22, 0xFF	; 255
    14c0:	7f 4f       	sbci	r23, 0xFF	; 255
    14c2:	cb 01       	movw	r24, r22
    14c4:	66 da       	rcall	.-2868   	; 0x992 <uECC_vli_modSub>
    14c6:	94 01       	movw	r18, r8
    14c8:	a3 01       	movw	r20, r6
    14ca:	b7 01       	movw	r22, r14
    14cc:	c7 01       	movw	r24, r14
    14ce:	61 da       	rcall	.-2878   	; 0x992 <uECC_vli_modSub>
    14d0:	96 01       	movw	r18, r12
    14d2:	a7 01       	movw	r20, r14
    14d4:	b2 01       	movw	r22, r4
    14d6:	c2 01       	movw	r24, r4
    14d8:	72 da       	rcall	.-2844   	; 0x9be <uECC_vli_modMult_fast>
    14da:	94 01       	movw	r18, r8
    14dc:	ae 01       	movw	r20, r28
    14de:	4f 5f       	subi	r20, 0xFF	; 255
    14e0:	5f 4f       	sbci	r21, 0xFF	; 255
    14e2:	b3 01       	movw	r22, r6
    14e4:	c7 01       	movw	r24, r14
    14e6:	55 da       	rcall	.-2902   	; 0x992 <uECC_vli_modSub>
    14e8:	96 01       	movw	r18, r12
    14ea:	a7 01       	movw	r20, r14
    14ec:	b5 01       	movw	r22, r10
    14ee:	c5 01       	movw	r24, r10
    14f0:	66 da       	rcall	.-2868   	; 0x9be <uECC_vli_modMult_fast>
    14f2:	94 01       	movw	r18, r8
    14f4:	a2 01       	movw	r20, r4
    14f6:	b5 01       	movw	r22, r10
    14f8:	c5 01       	movw	r24, r10
    14fa:	4b da       	rcall	.-2922   	; 0x992 <uECC_vli_modSub>
    14fc:	41 2f       	mov	r20, r17
    14fe:	be 01       	movw	r22, r28
    1500:	6f 5f       	subi	r22, 0xFF	; 255
    1502:	7f 4f       	sbci	r23, 0xFF	; 255
    1504:	c7 01       	movw	r24, r14
    1506:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    150a:	a0 96       	adiw	r28, 0x20	; 32
    150c:	0f b6       	in	r0, 0x3f	; 63
    150e:	f8 94       	cli
    1510:	de bf       	out	0x3e, r29	; 62
    1512:	0f be       	out	0x3f, r0	; 63
    1514:	cd bf       	out	0x3d, r28	; 61
    1516:	df 91       	pop	r29
    1518:	cf 91       	pop	r28
    151a:	1f 91       	pop	r17
    151c:	0f 91       	pop	r16
    151e:	ff 90       	pop	r15
    1520:	ef 90       	pop	r14
    1522:	df 90       	pop	r13
    1524:	cf 90       	pop	r12
    1526:	bf 90       	pop	r11
    1528:	af 90       	pop	r10
    152a:	9f 90       	pop	r9
    152c:	8f 90       	pop	r8
    152e:	7f 90       	pop	r7
    1530:	6f 90       	pop	r6
    1532:	5f 90       	pop	r5
    1534:	4f 90       	pop	r4
    1536:	08 95       	ret

00001538 <XYcZ_addC>:
    1538:	4f 92       	push	r4
    153a:	5f 92       	push	r5
    153c:	6f 92       	push	r6
    153e:	7f 92       	push	r7
    1540:	8f 92       	push	r8
    1542:	9f 92       	push	r9
    1544:	af 92       	push	r10
    1546:	bf 92       	push	r11
    1548:	cf 92       	push	r12
    154a:	df 92       	push	r13
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	cd b7       	in	r28, 0x3d	; 61
    155a:	de b7       	in	r29, 0x3e	; 62
    155c:	c0 56       	subi	r28, 0x60	; 96
    155e:	d1 09       	sbc	r29, r1
    1560:	0f b6       	in	r0, 0x3f	; 63
    1562:	f8 94       	cli
    1564:	de bf       	out	0x3e, r29	; 62
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	cd bf       	out	0x3d, r28	; 61
    156a:	4c 01       	movw	r8, r24
    156c:	2b 01       	movw	r4, r22
    156e:	5a 01       	movw	r10, r20
    1570:	39 01       	movw	r6, r18
    1572:	68 01       	movw	r12, r16
    1574:	f8 01       	movw	r30, r16
    1576:	10 81       	ld	r17, Z
    1578:	76 01       	movw	r14, r12
    157a:	f4 e0       	ldi	r31, 0x04	; 4
    157c:	ef 0e       	add	r14, r31
    157e:	f1 1c       	adc	r15, r1
    1580:	01 2f       	mov	r16, r17
    1582:	97 01       	movw	r18, r14
    1584:	ac 01       	movw	r20, r24
    1586:	b5 01       	movw	r22, r10
    1588:	ce 01       	movw	r24, r28
    158a:	01 96       	adiw	r24, 0x01	; 1
    158c:	02 da       	rcall	.-3068   	; 0x992 <uECC_vli_modSub>
    158e:	a6 01       	movw	r20, r12
    1590:	be 01       	movw	r22, r28
    1592:	6f 5f       	subi	r22, 0xFF	; 255
    1594:	7f 4f       	sbci	r23, 0xFF	; 255
    1596:	cb 01       	movw	r24, r22
    1598:	41 da       	rcall	.-2942   	; 0xa1c <uECC_vli_modSquare_fast>
    159a:	96 01       	movw	r18, r12
    159c:	ae 01       	movw	r20, r28
    159e:	4f 5f       	subi	r20, 0xFF	; 255
    15a0:	5f 4f       	sbci	r21, 0xFF	; 255
    15a2:	b4 01       	movw	r22, r8
    15a4:	c4 01       	movw	r24, r8
    15a6:	0b da       	rcall	.-3050   	; 0x9be <uECC_vli_modMult_fast>
    15a8:	96 01       	movw	r18, r12
    15aa:	ae 01       	movw	r20, r28
    15ac:	4f 5f       	subi	r20, 0xFF	; 255
    15ae:	5f 4f       	sbci	r21, 0xFF	; 255
    15b0:	b5 01       	movw	r22, r10
    15b2:	c5 01       	movw	r24, r10
    15b4:	04 da       	rcall	.-3064   	; 0x9be <uECC_vli_modMult_fast>
    15b6:	97 01       	movw	r18, r14
    15b8:	a2 01       	movw	r20, r4
    15ba:	b3 01       	movw	r22, r6
    15bc:	ce 01       	movw	r24, r28
    15be:	01 96       	adiw	r24, 0x01	; 1
    15c0:	cc d9       	rcall	.-3176   	; 0x95a <uECC_vli_modAdd>
    15c2:	97 01       	movw	r18, r14
    15c4:	a2 01       	movw	r20, r4
    15c6:	b3 01       	movw	r22, r6
    15c8:	c3 01       	movw	r24, r6
    15ca:	e3 d9       	rcall	.-3130   	; 0x992 <uECC_vli_modSub>
    15cc:	97 01       	movw	r18, r14
    15ce:	a4 01       	movw	r20, r8
    15d0:	b5 01       	movw	r22, r10
    15d2:	ce 01       	movw	r24, r28
    15d4:	81 96       	adiw	r24, 0x21	; 33
    15d6:	dd d9       	rcall	.-3142   	; 0x992 <uECC_vli_modSub>
    15d8:	96 01       	movw	r18, r12
    15da:	ae 01       	movw	r20, r28
    15dc:	4f 5d       	subi	r20, 0xDF	; 223
    15de:	5f 4f       	sbci	r21, 0xFF	; 255
    15e0:	b2 01       	movw	r22, r4
    15e2:	c2 01       	movw	r24, r4
    15e4:	ec d9       	rcall	.-3112   	; 0x9be <uECC_vli_modMult_fast>
    15e6:	97 01       	movw	r18, r14
    15e8:	a5 01       	movw	r20, r10
    15ea:	b4 01       	movw	r22, r8
    15ec:	ce 01       	movw	r24, r28
    15ee:	81 96       	adiw	r24, 0x21	; 33
    15f0:	b4 d9       	rcall	.-3224   	; 0x95a <uECC_vli_modAdd>
    15f2:	a6 01       	movw	r20, r12
    15f4:	b3 01       	movw	r22, r6
    15f6:	c5 01       	movw	r24, r10
    15f8:	11 da       	rcall	.-3038   	; 0xa1c <uECC_vli_modSquare_fast>
    15fa:	97 01       	movw	r18, r14
    15fc:	ae 01       	movw	r20, r28
    15fe:	4f 5d       	subi	r20, 0xDF	; 223
    1600:	5f 4f       	sbci	r21, 0xFF	; 255
    1602:	b5 01       	movw	r22, r10
    1604:	c5 01       	movw	r24, r10
    1606:	c5 d9       	rcall	.-3190   	; 0x992 <uECC_vli_modSub>
    1608:	97 01       	movw	r18, r14
    160a:	a5 01       	movw	r20, r10
    160c:	b4 01       	movw	r22, r8
    160e:	ce 01       	movw	r24, r28
    1610:	8f 5b       	subi	r24, 0xBF	; 191
    1612:	9f 4f       	sbci	r25, 0xFF	; 255
    1614:	be d9       	rcall	.-3204   	; 0x992 <uECC_vli_modSub>
    1616:	96 01       	movw	r18, r12
    1618:	ae 01       	movw	r20, r28
    161a:	4f 5b       	subi	r20, 0xBF	; 191
    161c:	5f 4f       	sbci	r21, 0xFF	; 255
    161e:	b3 01       	movw	r22, r6
    1620:	c3 01       	movw	r24, r6
    1622:	cd d9       	rcall	.-3174   	; 0x9be <uECC_vli_modMult_fast>
    1624:	97 01       	movw	r18, r14
    1626:	a2 01       	movw	r20, r4
    1628:	b3 01       	movw	r22, r6
    162a:	c3 01       	movw	r24, r6
    162c:	b2 d9       	rcall	.-3228   	; 0x992 <uECC_vli_modSub>
    162e:	a6 01       	movw	r20, r12
    1630:	be 01       	movw	r22, r28
    1632:	6f 5f       	subi	r22, 0xFF	; 255
    1634:	7f 4f       	sbci	r23, 0xFF	; 255
    1636:	ce 01       	movw	r24, r28
    1638:	8f 5b       	subi	r24, 0xBF	; 191
    163a:	9f 4f       	sbci	r25, 0xFF	; 255
    163c:	ef d9       	rcall	.-3106   	; 0xa1c <uECC_vli_modSquare_fast>
    163e:	97 01       	movw	r18, r14
    1640:	ae 01       	movw	r20, r28
    1642:	4f 5d       	subi	r20, 0xDF	; 223
    1644:	5f 4f       	sbci	r21, 0xFF	; 255
    1646:	be 01       	movw	r22, r28
    1648:	6f 5b       	subi	r22, 0xBF	; 191
    164a:	7f 4f       	sbci	r23, 0xFF	; 255
    164c:	cb 01       	movw	r24, r22
    164e:	a1 d9       	rcall	.-3262   	; 0x992 <uECC_vli_modSub>
    1650:	97 01       	movw	r18, r14
    1652:	a4 01       	movw	r20, r8
    1654:	be 01       	movw	r22, r28
    1656:	6f 5b       	subi	r22, 0xBF	; 191
    1658:	7f 4f       	sbci	r23, 0xFF	; 255
    165a:	ce 01       	movw	r24, r28
    165c:	81 96       	adiw	r24, 0x21	; 33
    165e:	99 d9       	rcall	.-3278   	; 0x992 <uECC_vli_modSub>
    1660:	96 01       	movw	r18, r12
    1662:	ae 01       	movw	r20, r28
    1664:	4f 5f       	subi	r20, 0xFF	; 255
    1666:	5f 4f       	sbci	r21, 0xFF	; 255
    1668:	be 01       	movw	r22, r28
    166a:	6f 5d       	subi	r22, 0xDF	; 223
    166c:	7f 4f       	sbci	r23, 0xFF	; 255
    166e:	cb 01       	movw	r24, r22
    1670:	a6 d9       	rcall	.-3252   	; 0x9be <uECC_vli_modMult_fast>
    1672:	97 01       	movw	r18, r14
    1674:	a2 01       	movw	r20, r4
    1676:	be 01       	movw	r22, r28
    1678:	6f 5d       	subi	r22, 0xDF	; 223
    167a:	7f 4f       	sbci	r23, 0xFF	; 255
    167c:	c2 01       	movw	r24, r4
    167e:	89 d9       	rcall	.-3310   	; 0x992 <uECC_vli_modSub>
    1680:	41 2f       	mov	r20, r17
    1682:	be 01       	movw	r22, r28
    1684:	6f 5b       	subi	r22, 0xBF	; 191
    1686:	7f 4f       	sbci	r23, 0xFF	; 255
    1688:	c4 01       	movw	r24, r8
    168a:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    168e:	c0 5a       	subi	r28, 0xA0	; 160
    1690:	df 4f       	sbci	r29, 0xFF	; 255
    1692:	0f b6       	in	r0, 0x3f	; 63
    1694:	f8 94       	cli
    1696:	de bf       	out	0x3e, r29	; 62
    1698:	0f be       	out	0x3f, r0	; 63
    169a:	cd bf       	out	0x3d, r28	; 61
    169c:	df 91       	pop	r29
    169e:	cf 91       	pop	r28
    16a0:	1f 91       	pop	r17
    16a2:	0f 91       	pop	r16
    16a4:	ff 90       	pop	r15
    16a6:	ef 90       	pop	r14
    16a8:	df 90       	pop	r13
    16aa:	cf 90       	pop	r12
    16ac:	bf 90       	pop	r11
    16ae:	af 90       	pop	r10
    16b0:	9f 90       	pop	r9
    16b2:	8f 90       	pop	r8
    16b4:	7f 90       	pop	r7
    16b6:	6f 90       	pop	r6
    16b8:	5f 90       	pop	r5
    16ba:	4f 90       	pop	r4
    16bc:	08 95       	ret

000016be <EccPoint_mult>:
    16be:	2f 92       	push	r2
    16c0:	3f 92       	push	r3
    16c2:	4f 92       	push	r4
    16c4:	5f 92       	push	r5
    16c6:	6f 92       	push	r6
    16c8:	7f 92       	push	r7
    16ca:	8f 92       	push	r8
    16cc:	9f 92       	push	r9
    16ce:	af 92       	push	r10
    16d0:	bf 92       	push	r11
    16d2:	cf 92       	push	r12
    16d4:	df 92       	push	r13
    16d6:	ef 92       	push	r14
    16d8:	ff 92       	push	r15
    16da:	0f 93       	push	r16
    16dc:	1f 93       	push	r17
    16de:	cf 93       	push	r28
    16e0:	df 93       	push	r29
    16e2:	cd b7       	in	r28, 0x3d	; 61
    16e4:	de b7       	in	r29, 0x3e	; 62
    16e6:	cb 5c       	subi	r28, 0xCB	; 203
    16e8:	d1 09       	sbc	r29, r1
    16ea:	0f b6       	in	r0, 0x3f	; 63
    16ec:	f8 94       	cli
    16ee:	de bf       	out	0x3e, r29	; 62
    16f0:	0f be       	out	0x3f, r0	; 63
    16f2:	cd bf       	out	0x3d, r28	; 61
    16f4:	c6 53       	subi	r28, 0x36	; 54
    16f6:	df 4f       	sbci	r29, 0xFF	; 255
    16f8:	99 83       	std	Y+1, r25	; 0x01
    16fa:	88 83       	st	Y, r24
    16fc:	ca 5c       	subi	r28, 0xCA	; 202
    16fe:	d0 40       	sbci	r29, 0x00	; 0
    1700:	cc 53       	subi	r28, 0x3C	; 60
    1702:	df 4f       	sbci	r29, 0xFF	; 255
    1704:	79 83       	std	Y+1, r23	; 0x01
    1706:	68 83       	st	Y, r22
    1708:	c4 5c       	subi	r28, 0xC4	; 196
    170a:	d0 40       	sbci	r29, 0x00	; 0
    170c:	cf 53       	subi	r28, 0x3F	; 63
    170e:	df 4f       	sbci	r29, 0xFF	; 255
    1710:	59 83       	std	Y+1, r21	; 0x01
    1712:	48 83       	st	Y, r20
    1714:	c1 5c       	subi	r28, 0xC1	; 193
    1716:	d0 40       	sbci	r29, 0x00	; 0
    1718:	69 01       	movw	r12, r18
    171a:	17 01       	movw	r2, r14
    171c:	f7 01       	movw	r30, r14
    171e:	f0 81       	ld	r31, Z
    1720:	cd 53       	subi	r28, 0x3D	; 61
    1722:	df 4f       	sbci	r29, 0xFF	; 255
    1724:	f8 83       	st	Y, r31
    1726:	c3 5c       	subi	r28, 0xC3	; 195
    1728:	d0 40       	sbci	r29, 0x00	; 0
    172a:	4f 2f       	mov	r20, r31
    172c:	ce 01       	movw	r24, r28
    172e:	81 96       	adiw	r24, 0x21	; 33
    1730:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    1734:	cd 53       	subi	r28, 0x3D	; 61
    1736:	df 4f       	sbci	r29, 0xFF	; 255
    1738:	28 81       	ld	r18, Y
    173a:	c3 5c       	subi	r28, 0xC3	; 195
    173c:	d0 40       	sbci	r29, 0x00	; 0
    173e:	02 2e       	mov	r0, r18
    1740:	00 0c       	add	r0, r0
    1742:	33 0b       	sbc	r19, r19
    1744:	ca 53       	subi	r28, 0x3A	; 58
    1746:	df 4f       	sbci	r29, 0xFF	; 255
    1748:	39 83       	std	Y+1, r19	; 0x01
    174a:	28 83       	st	Y, r18
    174c:	c6 5c       	subi	r28, 0xC6	; 198
    174e:	d0 40       	sbci	r29, 0x00	; 0
    1750:	cc 53       	subi	r28, 0x3C	; 60
    1752:	df 4f       	sbci	r29, 0xFF	; 255
    1754:	88 81       	ld	r24, Y
    1756:	99 81       	ldd	r25, Y+1	; 0x01
    1758:	c4 5c       	subi	r28, 0xC4	; 196
    175a:	d0 40       	sbci	r29, 0x00	; 0
    175c:	82 0f       	add	r24, r18
    175e:	93 1f       	adc	r25, r19
    1760:	c8 53       	subi	r28, 0x38	; 56
    1762:	df 4f       	sbci	r29, 0xFF	; 255
    1764:	99 83       	std	Y+1, r25	; 0x01
    1766:	88 83       	st	Y, r24
    1768:	c8 5c       	subi	r28, 0xC8	; 200
    176a:	d0 40       	sbci	r29, 0x00	; 0
    176c:	cd 53       	subi	r28, 0x3D	; 61
    176e:	df 4f       	sbci	r29, 0xFF	; 255
    1770:	48 81       	ld	r20, Y
    1772:	c3 5c       	subi	r28, 0xC3	; 195
    1774:	d0 40       	sbci	r29, 0x00	; 0
    1776:	bc 01       	movw	r22, r24
    1778:	ce 01       	movw	r24, r28
    177a:	8f 59       	subi	r24, 0x9F	; 159
    177c:	9f 4f       	sbci	r25, 0xFF	; 255
    177e:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    1782:	f7 01       	movw	r30, r14
    1784:	b0 80       	ld	r11, Z
    1786:	c1 14       	cp	r12, r1
    1788:	d1 04       	cpc	r13, r1
    178a:	41 f0       	breq	.+16     	; 0x179c <EccPoint_mult+0xde>
    178c:	4b 2d       	mov	r20, r11
    178e:	b6 01       	movw	r22, r12
    1790:	ce 01       	movw	r24, r28
    1792:	8f 55       	subi	r24, 0x5F	; 95
    1794:	9f 4f       	sbci	r25, 0xFF	; 255
    1796:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    179a:	0c c0       	rjmp	.+24     	; 0x17b4 <EccPoint_mult+0xf6>
    179c:	6b 2d       	mov	r22, r11
    179e:	ce 01       	movw	r24, r28
    17a0:	8f 55       	subi	r24, 0x5F	; 95
    17a2:	9f 4f       	sbci	r25, 0xFF	; 255
    17a4:	0e 94 27 01 	call	0x24e	; 0x24e <uECC_vli_clear>
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	cf 55       	subi	r28, 0x5F	; 95
    17ac:	df 4f       	sbci	r29, 0xFF	; 255
    17ae:	88 83       	st	Y, r24
    17b0:	c1 5a       	subi	r28, 0xA1	; 161
    17b2:	d0 40       	sbci	r29, 0x00	; 0
    17b4:	4b 2d       	mov	r20, r11
    17b6:	be 01       	movw	r22, r28
    17b8:	6f 5d       	subi	r22, 0xDF	; 223
    17ba:	7f 4f       	sbci	r23, 0xFF	; 255
    17bc:	ce 01       	movw	r24, r28
    17be:	01 96       	adiw	r24, 0x01	; 1
    17c0:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    17c4:	0f 2e       	mov	r0, r31
    17c6:	f1 e4       	ldi	r31, 0x41	; 65
    17c8:	ef 2e       	mov	r14, r31
    17ca:	f1 2c       	mov	r15, r1
    17cc:	f0 2d       	mov	r31, r0
    17ce:	ec 0e       	add	r14, r28
    17d0:	fd 1e       	adc	r15, r29
    17d2:	f0 e2       	ldi	r31, 0x20	; 32
    17d4:	ef 0e       	add	r14, r31
    17d6:	f1 1c       	adc	r15, r1
    17d8:	4b 2d       	mov	r20, r11
    17da:	b7 01       	movw	r22, r14
    17dc:	ce 01       	movw	r24, r28
    17de:	8f 5b       	subi	r24, 0xBF	; 191
    17e0:	9f 4f       	sbci	r25, 0xFF	; 255
    17e2:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    17e6:	91 01       	movw	r18, r2
    17e8:	ae 01       	movw	r20, r28
    17ea:	4f 55       	subi	r20, 0x5F	; 95
    17ec:	5f 4f       	sbci	r21, 0xFF	; 255
    17ee:	b7 01       	movw	r22, r14
    17f0:	ce 01       	movw	r24, r28
    17f2:	81 96       	adiw	r24, 0x21	; 33
    17f4:	d1 dd       	rcall	.-1118   	; 0x1398 <apply_z>
    17f6:	f1 01       	movw	r30, r2
    17f8:	ec 55       	subi	r30, 0x5C	; 92
    17fa:	ff 4f       	sbci	r31, 0xFF	; 255
    17fc:	01 90       	ld	r0, Z+
    17fe:	f0 81       	ld	r31, Z
    1800:	e0 2d       	mov	r30, r0
    1802:	91 01       	movw	r18, r2
    1804:	ae 01       	movw	r20, r28
    1806:	4f 55       	subi	r20, 0x5F	; 95
    1808:	5f 4f       	sbci	r21, 0xFF	; 255
    180a:	b7 01       	movw	r22, r14
    180c:	ce 01       	movw	r24, r28
    180e:	81 96       	adiw	r24, 0x21	; 33
    1810:	09 95       	icall
    1812:	91 01       	movw	r18, r2
    1814:	ae 01       	movw	r20, r28
    1816:	4f 55       	subi	r20, 0x5F	; 95
    1818:	5f 4f       	sbci	r21, 0xFF	; 255
    181a:	be 01       	movw	r22, r28
    181c:	6f 5b       	subi	r22, 0xBF	; 191
    181e:	7f 4f       	sbci	r23, 0xFF	; 255
    1820:	ce 01       	movw	r24, r28
    1822:	01 96       	adiw	r24, 0x01	; 1
    1824:	b9 dd       	rcall	.-1166   	; 0x1398 <apply_z>
    1826:	58 01       	movw	r10, r16
    1828:	22 e0       	ldi	r18, 0x02	; 2
    182a:	a2 1a       	sub	r10, r18
    182c:	b1 08       	sbc	r11, r1
    182e:	1a 14       	cp	r1, r10
    1830:	1b 04       	cpc	r1, r11
    1832:	0c f0       	brlt	.+2      	; 0x1836 <EccPoint_mult+0x178>
    1834:	53 c0       	rjmp	.+166    	; 0x18dc <EccPoint_mult+0x21e>
    1836:	44 24       	eor	r4, r4
    1838:	43 94       	inc	r4
    183a:	51 2c       	mov	r5, r1
    183c:	b5 01       	movw	r22, r10
    183e:	cf 53       	subi	r28, 0x3F	; 63
    1840:	df 4f       	sbci	r29, 0xFF	; 255
    1842:	88 81       	ld	r24, Y
    1844:	99 81       	ldd	r25, Y+1	; 0x01
    1846:	c1 5c       	subi	r28, 0xC1	; 193
    1848:	d0 40       	sbci	r29, 0x00	; 0
    184a:	0e 94 01 04 	call	0x802	; 0x802 <uECC_vli_testBit>
    184e:	92 01       	movw	r18, r4
    1850:	88 23       	and	r24, r24
    1852:	11 f0       	breq	.+4      	; 0x1858 <EccPoint_mult+0x19a>
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	39 01       	movw	r6, r18
    185a:	66 0c       	add	r6, r6
    185c:	77 1c       	adc	r7, r7
    185e:	66 0c       	add	r6, r6
    1860:	77 1c       	adc	r7, r7
    1862:	66 0c       	add	r6, r6
    1864:	77 1c       	adc	r7, r7
    1866:	66 0c       	add	r6, r6
    1868:	77 1c       	adc	r7, r7
    186a:	66 0c       	add	r6, r6
    186c:	77 1c       	adc	r7, r7
    186e:	0f 2e       	mov	r0, r31
    1870:	f1 e4       	ldi	r31, 0x41	; 65
    1872:	cf 2e       	mov	r12, r31
    1874:	d1 2c       	mov	r13, r1
    1876:	f0 2d       	mov	r31, r0
    1878:	cc 0e       	add	r12, r28
    187a:	dd 1e       	adc	r13, r29
    187c:	c6 0c       	add	r12, r6
    187e:	d7 1c       	adc	r13, r7
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	8c 0f       	add	r24, r28
    1886:	9d 1f       	adc	r25, r29
    1888:	68 0e       	add	r6, r24
    188a:	79 1e       	adc	r7, r25
    188c:	72 01       	movw	r14, r4
    188e:	e2 1a       	sub	r14, r18
    1890:	f3 0a       	sbc	r15, r19
    1892:	ee 0c       	add	r14, r14
    1894:	ff 1c       	adc	r15, r15
    1896:	ee 0c       	add	r14, r14
    1898:	ff 1c       	adc	r15, r15
    189a:	ee 0c       	add	r14, r14
    189c:	ff 1c       	adc	r15, r15
    189e:	ee 0c       	add	r14, r14
    18a0:	ff 1c       	adc	r15, r15
    18a2:	ee 0c       	add	r14, r14
    18a4:	ff 1c       	adc	r15, r15
    18a6:	0f 2e       	mov	r0, r31
    18a8:	f1 e4       	ldi	r31, 0x41	; 65
    18aa:	8f 2e       	mov	r8, r31
    18ac:	91 2c       	mov	r9, r1
    18ae:	f0 2d       	mov	r31, r0
    18b0:	8c 0e       	add	r8, r28
    18b2:	9d 1e       	adc	r9, r29
    18b4:	8e 0c       	add	r8, r14
    18b6:	9f 1c       	adc	r9, r15
    18b8:	e8 0e       	add	r14, r24
    18ba:	f9 1e       	adc	r15, r25
    18bc:	81 01       	movw	r16, r2
    18be:	96 01       	movw	r18, r12
    18c0:	a3 01       	movw	r20, r6
    18c2:	b4 01       	movw	r22, r8
    18c4:	c7 01       	movw	r24, r14
    18c6:	38 de       	rcall	.-912    	; 0x1538 <XYcZ_addC>
    18c8:	94 01       	movw	r18, r8
    18ca:	a7 01       	movw	r20, r14
    18cc:	b6 01       	movw	r22, r12
    18ce:	c3 01       	movw	r24, r6
    18d0:	a4 dd       	rcall	.-1208   	; 0x141a <XYcZ_add>
    18d2:	91 e0       	ldi	r25, 0x01	; 1
    18d4:	a9 1a       	sub	r10, r25
    18d6:	b1 08       	sbc	r11, r1
    18d8:	09 f0       	breq	.+2      	; 0x18dc <EccPoint_mult+0x21e>
    18da:	b0 cf       	rjmp	.-160    	; 0x183c <EccPoint_mult+0x17e>
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	70 e0       	ldi	r23, 0x00	; 0
    18e0:	cf 53       	subi	r28, 0x3F	; 63
    18e2:	df 4f       	sbci	r29, 0xFF	; 255
    18e4:	88 81       	ld	r24, Y
    18e6:	99 81       	ldd	r25, Y+1	; 0x01
    18e8:	c1 5c       	subi	r28, 0xC1	; 193
    18ea:	d0 40       	sbci	r29, 0x00	; 0
    18ec:	0e 94 01 04 	call	0x802	; 0x802 <uECC_vli_testBit>
    18f0:	21 e0       	ldi	r18, 0x01	; 1
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	88 23       	and	r24, r24
    18f6:	11 f0       	breq	.+4      	; 0x18fc <EccPoint_mult+0x23e>
    18f8:	20 e0       	ldi	r18, 0x00	; 0
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	69 01       	movw	r12, r18
    18fe:	cc 0c       	add	r12, r12
    1900:	dd 1c       	adc	r13, r13
    1902:	cc 0c       	add	r12, r12
    1904:	dd 1c       	adc	r13, r13
    1906:	cc 0c       	add	r12, r12
    1908:	dd 1c       	adc	r13, r13
    190a:	cc 0c       	add	r12, r12
    190c:	dd 1c       	adc	r13, r13
    190e:	cc 0c       	add	r12, r12
    1910:	dd 1c       	adc	r13, r13
    1912:	0f 2e       	mov	r0, r31
    1914:	f1 e4       	ldi	r31, 0x41	; 65
    1916:	8f 2e       	mov	r8, r31
    1918:	91 2c       	mov	r9, r1
    191a:	f0 2d       	mov	r31, r0
    191c:	8c 0e       	add	r8, r28
    191e:	9d 1e       	adc	r9, r29
    1920:	8c 0c       	add	r8, r12
    1922:	9d 1c       	adc	r9, r13
    1924:	e1 e0       	ldi	r30, 0x01	; 1
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	ec 0f       	add	r30, r28
    192a:	fd 1f       	adc	r31, r29
    192c:	ce 0e       	add	r12, r30
    192e:	df 1e       	adc	r13, r31
    1930:	81 e0       	ldi	r24, 0x01	; 1
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	7c 01       	movw	r14, r24
    1936:	e2 1a       	sub	r14, r18
    1938:	f3 0a       	sbc	r15, r19
    193a:	ee 0c       	add	r14, r14
    193c:	ff 1c       	adc	r15, r15
    193e:	ee 0c       	add	r14, r14
    1940:	ff 1c       	adc	r15, r15
    1942:	ee 0c       	add	r14, r14
    1944:	ff 1c       	adc	r15, r15
    1946:	ee 0c       	add	r14, r14
    1948:	ff 1c       	adc	r15, r15
    194a:	ee 0c       	add	r14, r14
    194c:	ff 1c       	adc	r15, r15
    194e:	0f 2e       	mov	r0, r31
    1950:	f1 e4       	ldi	r31, 0x41	; 65
    1952:	af 2e       	mov	r10, r31
    1954:	b1 2c       	mov	r11, r1
    1956:	f0 2d       	mov	r31, r0
    1958:	ac 0e       	add	r10, r28
    195a:	bd 1e       	adc	r11, r29
    195c:	ae 0c       	add	r10, r14
    195e:	bf 1c       	adc	r11, r15
    1960:	ee 0e       	add	r14, r30
    1962:	ff 1e       	adc	r15, r31
    1964:	81 01       	movw	r16, r2
    1966:	94 01       	movw	r18, r8
    1968:	a6 01       	movw	r20, r12
    196a:	b5 01       	movw	r22, r10
    196c:	c7 01       	movw	r24, r14
    196e:	e4 dd       	rcall	.-1080   	; 0x1538 <XYcZ_addC>
    1970:	31 01       	movw	r6, r2
    1972:	f4 e0       	ldi	r31, 0x04	; 4
    1974:	6f 0e       	add	r6, r31
    1976:	71 1c       	adc	r7, r1
    1978:	cd 53       	subi	r28, 0x3D	; 61
    197a:	df 4f       	sbci	r29, 0xFF	; 255
    197c:	08 81       	ld	r16, Y
    197e:	c3 5c       	subi	r28, 0xC3	; 195
    1980:	d0 40       	sbci	r29, 0x00	; 0
    1982:	93 01       	movw	r18, r6
    1984:	ae 01       	movw	r20, r28
    1986:	4f 5f       	subi	r20, 0xFF	; 255
    1988:	5f 4f       	sbci	r21, 0xFF	; 255
    198a:	be 01       	movw	r22, r28
    198c:	6f 5d       	subi	r22, 0xDF	; 223
    198e:	7f 4f       	sbci	r23, 0xFF	; 255
    1990:	ce 01       	movw	r24, r28
    1992:	8f 57       	subi	r24, 0x7F	; 127
    1994:	9f 4f       	sbci	r25, 0xFF	; 255
    1996:	0e 94 c9 04 	call	0x992	; 0x992 <uECC_vli_modSub>
    199a:	91 01       	movw	r18, r2
    199c:	a5 01       	movw	r20, r10
    199e:	be 01       	movw	r22, r28
    19a0:	6f 57       	subi	r22, 0x7F	; 127
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	cb 01       	movw	r24, r22
    19a6:	0b d8       	rcall	.-4074   	; 0x9be <uECC_vli_modMult_fast>
    19a8:	91 01       	movw	r18, r2
    19aa:	cc 53       	subi	r28, 0x3C	; 60
    19ac:	df 4f       	sbci	r29, 0xFF	; 255
    19ae:	48 81       	ld	r20, Y
    19b0:	59 81       	ldd	r21, Y+1	; 0x01
    19b2:	c4 5c       	subi	r28, 0xC4	; 196
    19b4:	d0 40       	sbci	r29, 0x00	; 0
    19b6:	be 01       	movw	r22, r28
    19b8:	6f 57       	subi	r22, 0x7F	; 127
    19ba:	7f 4f       	sbci	r23, 0xFF	; 255
    19bc:	cb 01       	movw	r24, r22
    19be:	0e 94 df 04 	call	0x9be	; 0x9be <uECC_vli_modMult_fast>
    19c2:	cd 53       	subi	r28, 0x3D	; 61
    19c4:	df 4f       	sbci	r29, 0xFF	; 255
    19c6:	28 81       	ld	r18, Y
    19c8:	c3 5c       	subi	r28, 0xC3	; 195
    19ca:	d0 40       	sbci	r29, 0x00	; 0
    19cc:	a3 01       	movw	r20, r6
    19ce:	be 01       	movw	r22, r28
    19d0:	6f 57       	subi	r22, 0x7F	; 127
    19d2:	7f 4f       	sbci	r23, 0xFF	; 255
    19d4:	cb 01       	movw	r24, r22
    19d6:	4d d8       	rcall	.-3942   	; 0xa72 <uECC_vli_modInv>
    19d8:	91 01       	movw	r18, r2
    19da:	c8 53       	subi	r28, 0x38	; 56
    19dc:	df 4f       	sbci	r29, 0xFF	; 255
    19de:	48 81       	ld	r20, Y
    19e0:	59 81       	ldd	r21, Y+1	; 0x01
    19e2:	c8 5c       	subi	r28, 0xC8	; 200
    19e4:	d0 40       	sbci	r29, 0x00	; 0
    19e6:	be 01       	movw	r22, r28
    19e8:	6f 57       	subi	r22, 0x7F	; 127
    19ea:	7f 4f       	sbci	r23, 0xFF	; 255
    19ec:	cb 01       	movw	r24, r22
    19ee:	0e 94 df 04 	call	0x9be	; 0x9be <uECC_vli_modMult_fast>
    19f2:	91 01       	movw	r18, r2
    19f4:	a7 01       	movw	r20, r14
    19f6:	be 01       	movw	r22, r28
    19f8:	6f 57       	subi	r22, 0x7F	; 127
    19fa:	7f 4f       	sbci	r23, 0xFF	; 255
    19fc:	cb 01       	movw	r24, r22
    19fe:	0e 94 df 04 	call	0x9be	; 0x9be <uECC_vli_modMult_fast>
    1a02:	81 01       	movw	r16, r2
    1a04:	95 01       	movw	r18, r10
    1a06:	a7 01       	movw	r20, r14
    1a08:	b4 01       	movw	r22, r8
    1a0a:	c6 01       	movw	r24, r12
    1a0c:	06 dd       	rcall	.-1524   	; 0x141a <XYcZ_add>
    1a0e:	91 01       	movw	r18, r2
    1a10:	ae 01       	movw	r20, r28
    1a12:	4f 57       	subi	r20, 0x7F	; 127
    1a14:	5f 4f       	sbci	r21, 0xFF	; 255
    1a16:	be 01       	movw	r22, r28
    1a18:	6f 5b       	subi	r22, 0xBF	; 191
    1a1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1c:	ce 01       	movw	r24, r28
    1a1e:	01 96       	adiw	r24, 0x01	; 1
    1a20:	bb dc       	rcall	.-1674   	; 0x1398 <apply_z>
    1a22:	cd 53       	subi	r28, 0x3D	; 61
    1a24:	df 4f       	sbci	r29, 0xFF	; 255
    1a26:	48 81       	ld	r20, Y
    1a28:	c3 5c       	subi	r28, 0xC3	; 195
    1a2a:	d0 40       	sbci	r29, 0x00	; 0
    1a2c:	be 01       	movw	r22, r28
    1a2e:	6f 5f       	subi	r22, 0xFF	; 255
    1a30:	7f 4f       	sbci	r23, 0xFF	; 255
    1a32:	c6 53       	subi	r28, 0x36	; 54
    1a34:	df 4f       	sbci	r29, 0xFF	; 255
    1a36:	88 81       	ld	r24, Y
    1a38:	99 81       	ldd	r25, Y+1	; 0x01
    1a3a:	ca 5c       	subi	r28, 0xCA	; 202
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    1a42:	cd 53       	subi	r28, 0x3D	; 61
    1a44:	df 4f       	sbci	r29, 0xFF	; 255
    1a46:	48 81       	ld	r20, Y
    1a48:	c3 5c       	subi	r28, 0xC3	; 195
    1a4a:	d0 40       	sbci	r29, 0x00	; 0
    1a4c:	be 01       	movw	r22, r28
    1a4e:	6f 5b       	subi	r22, 0xBF	; 191
    1a50:	7f 4f       	sbci	r23, 0xFF	; 255
    1a52:	c6 53       	subi	r28, 0x36	; 54
    1a54:	df 4f       	sbci	r29, 0xFF	; 255
    1a56:	88 81       	ld	r24, Y
    1a58:	99 81       	ldd	r25, Y+1	; 0x01
    1a5a:	ca 5c       	subi	r28, 0xCA	; 202
    1a5c:	d0 40       	sbci	r29, 0x00	; 0
    1a5e:	ca 53       	subi	r28, 0x3A	; 58
    1a60:	df 4f       	sbci	r29, 0xFF	; 255
    1a62:	28 81       	ld	r18, Y
    1a64:	39 81       	ldd	r19, Y+1	; 0x01
    1a66:	c6 5c       	subi	r28, 0xC6	; 198
    1a68:	d0 40       	sbci	r29, 0x00	; 0
    1a6a:	82 0f       	add	r24, r18
    1a6c:	93 1f       	adc	r25, r19
    1a6e:	0e 94 4e 01 	call	0x29c	; 0x29c <uECC_vli_set>
    1a72:	c5 53       	subi	r28, 0x35	; 53
    1a74:	df 4f       	sbci	r29, 0xFF	; 255
    1a76:	0f b6       	in	r0, 0x3f	; 63
    1a78:	f8 94       	cli
    1a7a:	de bf       	out	0x3e, r29	; 62
    1a7c:	0f be       	out	0x3f, r0	; 63
    1a7e:	cd bf       	out	0x3d, r28	; 61
    1a80:	df 91       	pop	r29
    1a82:	cf 91       	pop	r28
    1a84:	1f 91       	pop	r17
    1a86:	0f 91       	pop	r16
    1a88:	ff 90       	pop	r15
    1a8a:	ef 90       	pop	r14
    1a8c:	df 90       	pop	r13
    1a8e:	cf 90       	pop	r12
    1a90:	bf 90       	pop	r11
    1a92:	af 90       	pop	r10
    1a94:	9f 90       	pop	r9
    1a96:	8f 90       	pop	r8
    1a98:	7f 90       	pop	r7
    1a9a:	6f 90       	pop	r6
    1a9c:	5f 90       	pop	r5
    1a9e:	4f 90       	pop	r4
    1aa0:	3f 90       	pop	r3
    1aa2:	2f 90       	pop	r2
    1aa4:	08 95       	ret

00001aa6 <regularize_k>:
    1aa6:	af 92       	push	r10
    1aa8:	bf 92       	push	r11
    1aaa:	cf 92       	push	r12
    1aac:	df 92       	push	r13
    1aae:	ef 92       	push	r14
    1ab0:	ff 92       	push	r15
    1ab2:	0f 93       	push	r16
    1ab4:	1f 93       	push	r17
    1ab6:	cf 93       	push	r28
    1ab8:	df 93       	push	r29
    1aba:	7b 01       	movw	r14, r22
    1abc:	5a 01       	movw	r10, r20
    1abe:	f9 01       	movw	r30, r18
    1ac0:	c2 80       	ldd	r12, Z+2	; 0x02
    1ac2:	d3 80       	ldd	r13, Z+3	; 0x03
    1ac4:	a6 01       	movw	r20, r12
    1ac6:	49 5f       	subi	r20, 0xF9	; 249
    1ac8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aca:	ea 01       	movw	r28, r20
    1acc:	dd 23       	and	r29, r29
    1ace:	0c f4       	brge	.+2      	; 0x1ad2 <regularize_k+0x2c>
    1ad0:	27 96       	adiw	r28, 0x07	; 7
    1ad2:	d5 95       	asr	r29
    1ad4:	c7 95       	ror	r28
    1ad6:	d5 95       	asr	r29
    1ad8:	c7 95       	ror	r28
    1ada:	d5 95       	asr	r29
    1adc:	c7 95       	ror	r28
    1ade:	89 01       	movw	r16, r18
    1ae0:	0c 5d       	subi	r16, 0xDC	; 220
    1ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae4:	2c 2f       	mov	r18, r28
    1ae6:	a8 01       	movw	r20, r16
    1ae8:	bc 01       	movw	r22, r24
    1aea:	c7 01       	movw	r24, r14
    1aec:	0e 94 0d 02 	call	0x41a	; 0x41a <uECC_vli_add>
    1af0:	81 11       	cpse	r24, r1
    1af2:	11 c0       	rjmp	.+34     	; 0x1b16 <regularize_k+0x70>
    1af4:	28 e0       	ldi	r18, 0x08	; 8
    1af6:	c2 02       	muls	r28, r18
    1af8:	c0 01       	movw	r24, r0
    1afa:	11 24       	eor	r1, r1
    1afc:	c8 16       	cp	r12, r24
    1afe:	d9 06       	cpc	r13, r25
    1b00:	6c f4       	brge	.+26     	; 0x1b1c <regularize_k+0x76>
    1b02:	b6 01       	movw	r22, r12
    1b04:	c7 01       	movw	r24, r14
    1b06:	0e 94 01 04 	call	0x802	; 0x802 <uECC_vli_testBit>
    1b0a:	91 e0       	ldi	r25, 0x01	; 1
    1b0c:	81 11       	cpse	r24, r1
    1b0e:	01 c0       	rjmp	.+2      	; 0x1b12 <regularize_k+0x6c>
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	d9 2e       	mov	r13, r25
    1b14:	04 c0       	rjmp	.+8      	; 0x1b1e <regularize_k+0x78>
    1b16:	dd 24       	eor	r13, r13
    1b18:	d3 94       	inc	r13
    1b1a:	01 c0       	rjmp	.+2      	; 0x1b1e <regularize_k+0x78>
    1b1c:	d1 2c       	mov	r13, r1
    1b1e:	2c 2f       	mov	r18, r28
    1b20:	a8 01       	movw	r20, r16
    1b22:	b7 01       	movw	r22, r14
    1b24:	c5 01       	movw	r24, r10
    1b26:	0e 94 0d 02 	call	0x41a	; 0x41a <uECC_vli_add>
    1b2a:	8d 2d       	mov	r24, r13
    1b2c:	df 91       	pop	r29
    1b2e:	cf 91       	pop	r28
    1b30:	1f 91       	pop	r17
    1b32:	0f 91       	pop	r16
    1b34:	ff 90       	pop	r15
    1b36:	ef 90       	pop	r14
    1b38:	df 90       	pop	r13
    1b3a:	cf 90       	pop	r12
    1b3c:	bf 90       	pop	r11
    1b3e:	af 90       	pop	r10
    1b40:	08 95       	ret

00001b42 <EccPoint_compute_public_key>:
    1b42:	af 92       	push	r10
    1b44:	bf 92       	push	r11
    1b46:	cf 92       	push	r12
    1b48:	df 92       	push	r13
    1b4a:	ef 92       	push	r14
    1b4c:	ff 92       	push	r15
    1b4e:	0f 93       	push	r16
    1b50:	1f 93       	push	r17
    1b52:	cf 93       	push	r28
    1b54:	df 93       	push	r29
    1b56:	cd b7       	in	r28, 0x3d	; 61
    1b58:	de b7       	in	r29, 0x3e	; 62
    1b5a:	c4 54       	subi	r28, 0x44	; 68
    1b5c:	d1 09       	sbc	r29, r1
    1b5e:	0f b6       	in	r0, 0x3f	; 63
    1b60:	f8 94       	cli
    1b62:	de bf       	out	0x3e, r29	; 62
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	cd bf       	out	0x3d, r28	; 61
    1b68:	5c 01       	movw	r10, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	6a 01       	movw	r12, r20
    1b6e:	7e 01       	movw	r14, r28
    1b70:	21 e4       	ldi	r18, 0x41	; 65
    1b72:	e2 0e       	add	r14, r18
    1b74:	f1 1c       	adc	r15, r1
    1b76:	be 01       	movw	r22, r28
    1b78:	6f 5f       	subi	r22, 0xFF	; 255
    1b7a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b7c:	f7 01       	movw	r30, r14
    1b7e:	71 83       	std	Z+1, r23	; 0x01
    1b80:	60 83       	st	Z, r22
    1b82:	ae 01       	movw	r20, r28
    1b84:	4f 5d       	subi	r20, 0xDF	; 223
    1b86:	5f 4f       	sbci	r21, 0xFF	; 255
    1b88:	53 83       	std	Z+3, r21	; 0x03
    1b8a:	42 83       	std	Z+2, r20	; 0x02
    1b8c:	96 01       	movw	r18, r12
    1b8e:	8b df       	rcall	.-234    	; 0x1aa6 <regularize_k>
    1b90:	f6 01       	movw	r30, r12
    1b92:	02 81       	ldd	r16, Z+2	; 0x02
    1b94:	13 81       	ldd	r17, Z+3	; 0x03
    1b96:	0f 5f       	subi	r16, 0xFF	; 255
    1b98:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9a:	f7 01       	movw	r30, r14
    1b9c:	21 e0       	ldi	r18, 0x01	; 1
    1b9e:	30 e0       	ldi	r19, 0x00	; 0
    1ba0:	88 23       	and	r24, r24
    1ba2:	11 f0       	breq	.+4      	; 0x1ba8 <EccPoint_compute_public_key+0x66>
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	22 0f       	add	r18, r18
    1baa:	33 1f       	adc	r19, r19
    1bac:	e2 0f       	add	r30, r18
    1bae:	f3 1f       	adc	r31, r19
    1bb0:	40 81       	ld	r20, Z
    1bb2:	51 81       	ldd	r21, Z+1	; 0x01
    1bb4:	b6 01       	movw	r22, r12
    1bb6:	6c 5b       	subi	r22, 0xBC	; 188
    1bb8:	7f 4f       	sbci	r23, 0xFF	; 255
    1bba:	76 01       	movw	r14, r12
    1bbc:	20 e0       	ldi	r18, 0x00	; 0
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	c5 01       	movw	r24, r10
    1bc2:	7d dd       	rcall	.-1286   	; 0x16be <EccPoint_mult>
    1bc4:	f6 01       	movw	r30, r12
    1bc6:	60 81       	ld	r22, Z
    1bc8:	66 0f       	add	r22, r22
    1bca:	c5 01       	movw	r24, r10
    1bcc:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <uECC_vli_isZero>
    1bd0:	91 e0       	ldi	r25, 0x01	; 1
    1bd2:	81 11       	cpse	r24, r1
    1bd4:	90 e0       	ldi	r25, 0x00	; 0
    1bd6:	89 2f       	mov	r24, r25
    1bd8:	cc 5b       	subi	r28, 0xBC	; 188
    1bda:	df 4f       	sbci	r29, 0xFF	; 255
    1bdc:	0f b6       	in	r0, 0x3f	; 63
    1bde:	f8 94       	cli
    1be0:	de bf       	out	0x3e, r29	; 62
    1be2:	0f be       	out	0x3f, r0	; 63
    1be4:	cd bf       	out	0x3d, r28	; 61
    1be6:	df 91       	pop	r29
    1be8:	cf 91       	pop	r28
    1bea:	1f 91       	pop	r17
    1bec:	0f 91       	pop	r16
    1bee:	ff 90       	pop	r15
    1bf0:	ef 90       	pop	r14
    1bf2:	df 90       	pop	r13
    1bf4:	cf 90       	pop	r12
    1bf6:	bf 90       	pop	r11
    1bf8:	af 90       	pop	r10
    1bfa:	08 95       	ret

00001bfc <uECC_vli_nativeToBytes>:
    1bfc:	cf 93       	push	r28
    1bfe:	df 93       	push	r29
    1c00:	dc 01       	movw	r26, r24
    1c02:	16 16       	cp	r1, r22
    1c04:	17 06       	cpc	r1, r23
    1c06:	cc f4       	brge	.+50     	; 0x1c3a <uECC_vli_nativeToBytes+0x3e>
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	eb 01       	movw	r28, r22
    1c10:	21 97       	sbiw	r28, 0x01	; 1
    1c12:	fe 01       	movw	r30, r28
    1c14:	e2 1b       	sub	r30, r18
    1c16:	f3 0b       	sbc	r31, r19
    1c18:	e4 0f       	add	r30, r20
    1c1a:	f5 1f       	adc	r31, r21
    1c1c:	20 81       	ld	r18, Z
    1c1e:	fd 01       	movw	r30, r26
    1c20:	e9 0f       	add	r30, r25
    1c22:	f1 1d       	adc	r31, r1
    1c24:	97 fd       	sbrc	r25, 7
    1c26:	fa 95       	dec	r31
    1c28:	20 83       	st	Z, r18
    1c2a:	9f 5f       	subi	r25, 0xFF	; 255
    1c2c:	29 2f       	mov	r18, r25
    1c2e:	09 2e       	mov	r0, r25
    1c30:	00 0c       	add	r0, r0
    1c32:	33 0b       	sbc	r19, r19
    1c34:	26 17       	cp	r18, r22
    1c36:	37 07       	cpc	r19, r23
    1c38:	64 f3       	brlt	.-40     	; 0x1c12 <uECC_vli_nativeToBytes+0x16>
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	08 95       	ret

00001c40 <uECC_generate_random_int>:
    1c40:	9f 92       	push	r9
    1c42:	af 92       	push	r10
    1c44:	bf 92       	push	r11
    1c46:	cf 92       	push	r12
    1c48:	df 92       	push	r13
    1c4a:	ef 92       	push	r14
    1c4c:	ff 92       	push	r15
    1c4e:	0f 93       	push	r16
    1c50:	1f 93       	push	r17
    1c52:	cf 93       	push	r28
    1c54:	df 93       	push	r29
    1c56:	8c 01       	movw	r16, r24
    1c58:	5b 01       	movw	r10, r22
    1c5a:	d4 2f       	mov	r29, r20
    1c5c:	64 2f       	mov	r22, r20
    1c5e:	c5 01       	movw	r24, r10
    1c60:	0e 94 17 04 	call	0x82e	; 0x82e <uECC_vli_numBits>
    1c64:	20 91 82 02 	lds	r18, 0x0282	; 0x800282 <__data_end>
    1c68:	30 91 83 02 	lds	r19, 0x0283	; 0x800283 <__data_end+0x1>
    1c6c:	23 2b       	or	r18, r19
    1c6e:	c1 f1       	breq	.+112    	; 0x1ce0 <uECC_generate_random_int+0xa0>
    1c70:	48 e0       	ldi	r20, 0x08	; 8
    1c72:	d4 02       	muls	r29, r20
    1c74:	90 01       	movw	r18, r0
    1c76:	11 24       	eor	r1, r1
    1c78:	28 1b       	sub	r18, r24
    1c7a:	39 0b       	sbc	r19, r25
    1c7c:	8f ef       	ldi	r24, 0xFF	; 255
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	02 c0       	rjmp	.+4      	; 0x1c86 <uECC_generate_random_int+0x46>
    1c82:	95 95       	asr	r25
    1c84:	87 95       	ror	r24
    1c86:	2a 95       	dec	r18
    1c88:	e2 f7       	brpl	.-8      	; 0x1c82 <uECC_generate_random_int+0x42>
    1c8a:	98 2e       	mov	r9, r24
    1c8c:	c0 e4       	ldi	r28, 0x40	; 64
    1c8e:	cd 2e       	mov	r12, r29
    1c90:	0d 2e       	mov	r0, r29
    1c92:	00 0c       	add	r0, r0
    1c94:	dd 08       	sbc	r13, r13
    1c96:	76 01       	movw	r14, r12
    1c98:	81 e0       	ldi	r24, 0x01	; 1
    1c9a:	e8 1a       	sub	r14, r24
    1c9c:	f1 08       	sbc	r15, r1
    1c9e:	e0 0e       	add	r14, r16
    1ca0:	f1 1e       	adc	r15, r17
    1ca2:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <__data_end>
    1ca6:	f0 91 83 02 	lds	r31, 0x0283	; 0x800283 <__data_end+0x1>
    1caa:	b6 01       	movw	r22, r12
    1cac:	c8 01       	movw	r24, r16
    1cae:	09 95       	icall
    1cb0:	00 97       	sbiw	r24, 0x00	; 0
    1cb2:	d9 f0       	breq	.+54     	; 0x1cea <uECC_generate_random_int+0xaa>
    1cb4:	f7 01       	movw	r30, r14
    1cb6:	80 81       	ld	r24, Z
    1cb8:	89 21       	and	r24, r9
    1cba:	80 83       	st	Z, r24
    1cbc:	6d 2f       	mov	r22, r29
    1cbe:	c8 01       	movw	r24, r16
    1cc0:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <uECC_vli_isZero>
    1cc4:	81 11       	cpse	r24, r1
    1cc6:	07 c0       	rjmp	.+14     	; 0x1cd6 <uECC_generate_random_int+0x96>
    1cc8:	4d 2f       	mov	r20, r29
    1cca:	b8 01       	movw	r22, r16
    1ccc:	c5 01       	movw	r24, r10
    1cce:	0e 94 80 04 	call	0x900	; 0x900 <uECC_vli_cmp>
    1cd2:	81 30       	cpi	r24, 0x01	; 1
    1cd4:	41 f0       	breq	.+16     	; 0x1ce6 <uECC_generate_random_int+0xa6>
    1cd6:	c1 50       	subi	r28, 0x01	; 1
    1cd8:	21 f7       	brne	.-56     	; 0x1ca2 <uECC_generate_random_int+0x62>
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	05 c0       	rjmp	.+10     	; 0x1cea <uECC_generate_random_int+0xaa>
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	02 c0       	rjmp	.+4      	; 0x1cea <uECC_generate_random_int+0xaa>
    1ce6:	81 e0       	ldi	r24, 0x01	; 1
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	df 91       	pop	r29
    1cec:	cf 91       	pop	r28
    1cee:	1f 91       	pop	r17
    1cf0:	0f 91       	pop	r16
    1cf2:	ff 90       	pop	r15
    1cf4:	ef 90       	pop	r14
    1cf6:	df 90       	pop	r13
    1cf8:	cf 90       	pop	r12
    1cfa:	bf 90       	pop	r11
    1cfc:	af 90       	pop	r10
    1cfe:	9f 90       	pop	r9
    1d00:	08 95       	ret

00001d02 <uECC_set_rng>:
    1d02:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <__data_end+0x1>
    1d06:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <__data_end>
    1d0a:	08 95       	ret

00001d0c <uECC_secp256r1>:
    1d0c:	84 e0       	ldi	r24, 0x04	; 4
    1d0e:	91 e0       	ldi	r25, 0x01	; 1
    1d10:	08 95       	ret

00001d12 <uECC_make_key>:
    return 0;
}

int uECC_make_key(uint8_t *public_key,
                  uint8_t *private_key,
                  uECC_Curve curve) {
    1d12:	9f 92       	push	r9
    1d14:	af 92       	push	r10
    1d16:	bf 92       	push	r11
    1d18:	cf 92       	push	r12
    1d1a:	df 92       	push	r13
    1d1c:	ef 92       	push	r14
    1d1e:	ff 92       	push	r15
    1d20:	0f 93       	push	r16
    1d22:	1f 93       	push	r17
    1d24:	cf 93       	push	r28
    1d26:	df 93       	push	r29
    1d28:	cd b7       	in	r28, 0x3d	; 61
    1d2a:	de b7       	in	r29, 0x3e	; 62
    1d2c:	c0 56       	subi	r28, 0x60	; 96
    1d2e:	d1 09       	sbc	r29, r1
    1d30:	0f b6       	in	r0, 0x3f	; 63
    1d32:	f8 94       	cli
    1d34:	de bf       	out	0x3e, r29	; 62
    1d36:	0f be       	out	0x3f, r0	; 63
    1d38:	cd bf       	out	0x3d, r28	; 61
    1d3a:	6c 01       	movw	r12, r24
    1d3c:	5b 01       	movw	r10, r22
    1d3e:	8a 01       	movw	r16, r20
    1d40:	68 94       	set
    1d42:	99 24       	eor	r9, r9
    1d44:	96 f8       	bld	r9, 6
    uECC_word_t _public[uECC_MAX_WORDS * 2];
#endif
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
        if (!uECC_generate_random_int(_private, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
    1d46:	7a 01       	movw	r14, r20
    1d48:	84 e2       	ldi	r24, 0x24	; 36
    1d4a:	e8 0e       	add	r14, r24
    1d4c:	f1 1c       	adc	r15, r1
    1d4e:	f8 01       	movw	r30, r16
    1d50:	82 81       	ldd	r24, Z+2	; 0x02
    1d52:	93 81       	ldd	r25, Z+3	; 0x03
    1d54:	07 96       	adiw	r24, 0x07	; 7
    1d56:	ac 01       	movw	r20, r24
    1d58:	12 f4       	brpl	.+4      	; 0x1d5e <uECC_make_key+0x4c>
    1d5a:	49 5f       	subi	r20, 0xF9	; 249
    1d5c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d5e:	55 95       	asr	r21
    1d60:	47 95       	ror	r20
    1d62:	55 95       	asr	r21
    1d64:	47 95       	ror	r20
    1d66:	55 95       	asr	r21
    1d68:	47 95       	ror	r20
    1d6a:	b7 01       	movw	r22, r14
    1d6c:	ce 01       	movw	r24, r28
    1d6e:	01 96       	adiw	r24, 0x01	; 1
    1d70:	67 df       	rcall	.-306    	; 0x1c40 <uECC_generate_random_int>
    1d72:	00 97       	sbiw	r24, 0x00	; 0
    1d74:	09 f4       	brne	.+2      	; 0x1d78 <uECC_make_key+0x66>
    1d76:	40 c0       	rjmp	.+128    	; 0x1df8 <uECC_make_key+0xe6>
            return 0;
        }

        if (EccPoint_compute_public_key(_public, _private, curve)) {
    1d78:	a8 01       	movw	r20, r16
    1d7a:	be 01       	movw	r22, r28
    1d7c:	6f 5f       	subi	r22, 0xFF	; 255
    1d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d80:	ce 01       	movw	r24, r28
    1d82:	81 96       	adiw	r24, 0x21	; 33
    1d84:	de de       	rcall	.-580    	; 0x1b42 <EccPoint_compute_public_key>
    1d86:	88 23       	and	r24, r24
    1d88:	91 f1       	breq	.+100    	; 0x1dee <uECC_make_key+0xdc>
#if uECC_VLI_NATIVE_LITTLE_ENDIAN == 0
            uECC_vli_nativeToBytes(private_key, BITS_TO_BYTES(curve->num_n_bits), _private);
    1d8a:	f8 01       	movw	r30, r16
    1d8c:	82 81       	ldd	r24, Z+2	; 0x02
    1d8e:	93 81       	ldd	r25, Z+3	; 0x03
    1d90:	07 96       	adiw	r24, 0x07	; 7
    1d92:	bc 01       	movw	r22, r24
    1d94:	12 f4       	brpl	.+4      	; 0x1d9a <uECC_make_key+0x88>
    1d96:	69 5f       	subi	r22, 0xF9	; 249
    1d98:	7f 4f       	sbci	r23, 0xFF	; 255
    1d9a:	75 95       	asr	r23
    1d9c:	67 95       	ror	r22
    1d9e:	75 95       	asr	r23
    1da0:	67 95       	ror	r22
    1da2:	75 95       	asr	r23
    1da4:	67 95       	ror	r22
    1da6:	ae 01       	movw	r20, r28
    1da8:	4f 5f       	subi	r20, 0xFF	; 255
    1daa:	5f 4f       	sbci	r21, 0xFF	; 255
    1dac:	c5 01       	movw	r24, r10
    1dae:	26 df       	rcall	.-436    	; 0x1bfc <uECC_vli_nativeToBytes>
            uECC_vli_nativeToBytes(public_key, curve->num_bytes, _public);
    1db0:	f8 01       	movw	r30, r16
    1db2:	61 81       	ldd	r22, Z+1	; 0x01
    1db4:	06 2e       	mov	r0, r22
    1db6:	00 0c       	add	r0, r0
    1db8:	77 0b       	sbc	r23, r23
    1dba:	ae 01       	movw	r20, r28
    1dbc:	4f 5d       	subi	r20, 0xDF	; 223
    1dbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1dc0:	c6 01       	movw	r24, r12
    1dc2:	1c df       	rcall	.-456    	; 0x1bfc <uECC_vli_nativeToBytes>
            uECC_vli_nativeToBytes(
                public_key + curve->num_bytes, curve->num_bytes, _public + curve->num_words);
    1dc4:	f8 01       	movw	r30, r16
    1dc6:	81 81       	ldd	r24, Z+1	; 0x01

        if (EccPoint_compute_public_key(_public, _private, curve)) {
#if uECC_VLI_NATIVE_LITTLE_ENDIAN == 0
            uECC_vli_nativeToBytes(private_key, BITS_TO_BYTES(curve->num_n_bits), _private);
            uECC_vli_nativeToBytes(public_key, curve->num_bytes, _public);
            uECC_vli_nativeToBytes(
    1dc8:	90 81       	ld	r25, Z
    1dca:	41 e2       	ldi	r20, 0x21	; 33
    1dcc:	50 e0       	ldi	r21, 0x00	; 0
    1dce:	4c 0f       	add	r20, r28
    1dd0:	5d 1f       	adc	r21, r29
    1dd2:	49 0f       	add	r20, r25
    1dd4:	51 1d       	adc	r21, r1
    1dd6:	97 fd       	sbrc	r25, 7
    1dd8:	5a 95       	dec	r21
    1dda:	08 2e       	mov	r0, r24
    1ddc:	00 0c       	add	r0, r0
    1dde:	99 0b       	sbc	r25, r25
    1de0:	bc 01       	movw	r22, r24
    1de2:	8c 0d       	add	r24, r12
    1de4:	9d 1d       	adc	r25, r13
    1de6:	0a df       	rcall	.-492    	; 0x1bfc <uECC_vli_nativeToBytes>
                public_key + curve->num_bytes, curve->num_bytes, _public + curve->num_words);
#endif
            return 1;
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	05 c0       	rjmp	.+10     	; 0x1df8 <uECC_make_key+0xe6>
    1dee:	9a 94       	dec	r9
    uECC_word_t _private[uECC_MAX_WORDS];
    uECC_word_t _public[uECC_MAX_WORDS * 2];
#endif
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
    1df0:	91 10       	cpse	r9, r1
    1df2:	ad cf       	rjmp	.-166    	; 0x1d4e <uECC_make_key+0x3c>
                public_key + curve->num_bytes, curve->num_bytes, _public + curve->num_words);
#endif
            return 1;
        }
    }
    return 0;
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	90 e0       	ldi	r25, 0x00	; 0
}
    1df8:	c0 5a       	subi	r28, 0xA0	; 160
    1dfa:	df 4f       	sbci	r29, 0xFF	; 255
    1dfc:	0f b6       	in	r0, 0x3f	; 63
    1dfe:	f8 94       	cli
    1e00:	de bf       	out	0x3e, r29	; 62
    1e02:	0f be       	out	0x3f, r0	; 63
    1e04:	cd bf       	out	0x3d, r28	; 61
    1e06:	df 91       	pop	r29
    1e08:	cf 91       	pop	r28
    1e0a:	1f 91       	pop	r17
    1e0c:	0f 91       	pop	r16
    1e0e:	ff 90       	pop	r15
    1e10:	ef 90       	pop	r14
    1e12:	df 90       	pop	r13
    1e14:	cf 90       	pop	r12
    1e16:	bf 90       	pop	r11
    1e18:	af 90       	pop	r10
    1e1a:	9f 90       	pop	r9
    1e1c:	08 95       	ret

00001e1e <uECC_shared_secret>:

int uECC_shared_secret(const uint8_t *public_key,
                       const uint8_t *private_key,
                       uint8_t *secret,
                       uECC_Curve curve) {
    1e1e:	6f 92       	push	r6
    1e20:	7f 92       	push	r7
    1e22:	8f 92       	push	r8
    1e24:	9f 92       	push	r9
    1e26:	af 92       	push	r10
    1e28:	bf 92       	push	r11
    1e2a:	cf 92       	push	r12
    1e2c:	df 92       	push	r13
    1e2e:	ef 92       	push	r14
    1e30:	ff 92       	push	r15
    1e32:	0f 93       	push	r16
    1e34:	1f 93       	push	r17
    1e36:	cf 93       	push	r28
    1e38:	df 93       	push	r29
    1e3a:	cd b7       	in	r28, 0x3d	; 61
    1e3c:	de b7       	in	r29, 0x3e	; 62
    1e3e:	c4 58       	subi	r28, 0x84	; 132
    1e40:	d1 09       	sbc	r29, r1
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	de bf       	out	0x3e, r29	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	cd bf       	out	0x3d, r28	; 61
    1e4c:	8c 01       	movw	r16, r24
    1e4e:	4a 01       	movw	r8, r20
    1e50:	69 01       	movw	r12, r18
    uECC_word_t _public[uECC_MAX_WORDS * 2];
    uECC_word_t _private[uECC_MAX_WORDS];

    uECC_word_t tmp[uECC_MAX_WORDS];
    uECC_word_t *p2[2] = {_private, tmp};
    1e52:	ce 01       	movw	r24, r28
    1e54:	8f 5b       	subi	r24, 0xBF	; 191
    1e56:	9f 4f       	sbci	r25, 0xFF	; 255
    1e58:	cf 57       	subi	r28, 0x7F	; 127
    1e5a:	df 4f       	sbci	r29, 0xFF	; 255
    1e5c:	99 83       	std	Y+1, r25	; 0x01
    1e5e:	88 83       	st	Y, r24
    1e60:	c1 58       	subi	r28, 0x81	; 129
    1e62:	d0 40       	sbci	r29, 0x00	; 0
    1e64:	80 96       	adiw	r24, 0x20	; 32
    1e66:	cd 57       	subi	r28, 0x7D	; 125
    1e68:	df 4f       	sbci	r29, 0xFF	; 255
    1e6a:	99 83       	std	Y+1, r25	; 0x01
    1e6c:	88 83       	st	Y, r24
    1e6e:	c3 58       	subi	r28, 0x83	; 131
    1e70:	d0 40       	sbci	r29, 0x00	; 0
    uECC_word_t *initial_Z = 0;
    uECC_word_t carry;
    wordcount_t num_words = curve->num_words;
    1e72:	f9 01       	movw	r30, r18
    1e74:	f0 80       	ld	r15, Z
    wordcount_t num_bytes = curve->num_bytes;
    1e76:	a1 80       	ldd	r10, Z+1	; 0x01
}

uECC_VLI_API void uECC_vli_bytesToNative(uint8_t *native,
                                         const uint8_t *bytes,
                                         int num_bytes) {
    uECC_vli_nativeToBytes(native, num_bytes, bytes);
    1e78:	22 81       	ldd	r18, Z+2	; 0x02
    1e7a:	33 81       	ldd	r19, Z+3	; 0x03
    1e7c:	29 5f       	subi	r18, 0xF9	; 249
    1e7e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e80:	c9 01       	movw	r24, r18
    1e82:	99 23       	and	r25, r25
    1e84:	0c f4       	brge	.+2      	; 0x1e88 <uECC_shared_secret+0x6a>
    1e86:	07 96       	adiw	r24, 0x07	; 7
    1e88:	95 95       	asr	r25
    1e8a:	87 95       	ror	r24
    1e8c:	95 95       	asr	r25
    1e8e:	87 95       	ror	r24
    1e90:	95 95       	asr	r25
    1e92:	87 95       	ror	r24
    1e94:	ab 01       	movw	r20, r22
    1e96:	bc 01       	movw	r22, r24
    1e98:	ce 01       	movw	r24, r28
    1e9a:	8f 5b       	subi	r24, 0xBF	; 191
    1e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9e:	ae de       	rcall	.-676    	; 0x1bfc <uECC_vli_nativeToBytes>
#if uECC_VLI_NATIVE_LITTLE_ENDIAN
    bcopy((uint8_t *) _private, private_key, num_bytes);
    bcopy((uint8_t *) _public, public_key, num_bytes*2);
#else
    uECC_vli_bytesToNative(_private, private_key, BITS_TO_BYTES(curve->num_n_bits));
    uECC_vli_bytesToNative(_public, public_key, num_bytes);
    1ea0:	0a 2c       	mov	r0, r10
    1ea2:	00 0c       	add	r0, r0
    1ea4:	bb 08       	sbc	r11, r11
}

uECC_VLI_API void uECC_vli_bytesToNative(uint8_t *native,
                                         const uint8_t *bytes,
                                         int num_bytes) {
    uECC_vli_nativeToBytes(native, num_bytes, bytes);
    1ea6:	a8 01       	movw	r20, r16
    1ea8:	b5 01       	movw	r22, r10
    1eaa:	ce 01       	movw	r24, r28
    1eac:	01 96       	adiw	r24, 0x01	; 1
    1eae:	a6 de       	rcall	.-692    	; 0x1bfc <uECC_vli_nativeToBytes>
    1eb0:	a8 01       	movw	r20, r16
    1eb2:	4a 0d       	add	r20, r10
    1eb4:	5b 1d       	adc	r21, r11
    1eb6:	b5 01       	movw	r22, r10
    1eb8:	81 e0       	ldi	r24, 0x01	; 1
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	8c 0f       	add	r24, r28
    1ebe:	9d 1f       	adc	r25, r29
    1ec0:	8f 0d       	add	r24, r15
    1ec2:	91 1d       	adc	r25, r1
    1ec4:	f7 fc       	sbrc	r15, 7
    1ec6:	9a 95       	dec	r25
    1ec8:	99 de       	rcall	.-718    	; 0x1bfc <uECC_vli_nativeToBytes>
    uECC_vli_bytesToNative(_public + num_words, public_key + num_bytes, num_bytes);
#endif

    /* Regularize the bitcount for the private key so that attackers cannot use a side channel
       attack to learn the number of leading zeros. */
    carry = regularize_k(_private, _private, tmp, curve);
    1eca:	96 01       	movw	r18, r12
    1ecc:	ae 01       	movw	r20, r28
    1ece:	4f 59       	subi	r20, 0x9F	; 159
    1ed0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed2:	be 01       	movw	r22, r28
    1ed4:	6f 5b       	subi	r22, 0xBF	; 191
    1ed6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed8:	cb 01       	movw	r24, r22
    1eda:	e5 dd       	rcall	.-1078   	; 0x1aa6 <regularize_k>
    1edc:	18 2f       	mov	r17, r24

    /* If an RNG function was specified, try to get a random initial Z value to improve
       protection against side-channel attacks. */
    if (g_rng_function) {
    1ede:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <__data_end>
    1ee2:	90 91 83 02 	lds	r25, 0x0283	; 0x800283 <__data_end+0x1>
    1ee6:	89 2b       	or	r24, r25
    1ee8:	a9 f0       	breq	.+42     	; 0x1f14 <uECC_shared_secret+0xf6>
        if (!uECC_generate_random_int(p2[carry], curve->p, num_words)) {
    1eea:	e1 2f       	mov	r30, r17
    1eec:	f0 e0       	ldi	r31, 0x00	; 0
    1eee:	ee 0f       	add	r30, r30
    1ef0:	ff 1f       	adc	r31, r31
    1ef2:	81 e8       	ldi	r24, 0x81	; 129
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	8c 0f       	add	r24, r28
    1ef8:	9d 1f       	adc	r25, r29
    1efa:	e8 0f       	add	r30, r24
    1efc:	f9 1f       	adc	r31, r25
    1efe:	60 80       	ld	r6, Z
    1f00:	71 80       	ldd	r7, Z+1	; 0x01
    1f02:	4f 2d       	mov	r20, r15
    1f04:	b6 01       	movw	r22, r12
    1f06:	6c 5f       	subi	r22, 0xFC	; 252
    1f08:	7f 4f       	sbci	r23, 0xFF	; 255
    1f0a:	c3 01       	movw	r24, r6
    1f0c:	99 de       	rcall	.-718    	; 0x1c40 <uECC_generate_random_int>
    1f0e:	00 97       	sbiw	r24, 0x00	; 0
    1f10:	19 f4       	brne	.+6      	; 0x1f18 <uECC_shared_secret+0xfa>
    1f12:	32 c0       	rjmp	.+100    	; 0x1f78 <uECC_shared_secret+0x15a>
    uECC_word_t _public[uECC_MAX_WORDS * 2];
    uECC_word_t _private[uECC_MAX_WORDS];

    uECC_word_t tmp[uECC_MAX_WORDS];
    uECC_word_t *p2[2] = {_private, tmp};
    uECC_word_t *initial_Z = 0;
    1f14:	61 2c       	mov	r6, r1
    1f16:	71 2c       	mov	r7, r1
            return 0;
        }
        initial_Z = p2[carry];
    }

    EccPoint_mult(_public, _public, p2[!carry], initial_Z, curve->num_n_bits + 1, curve);
    1f18:	f6 01       	movw	r30, r12
    1f1a:	22 81       	ldd	r18, Z+2	; 0x02
    1f1c:	33 81       	ldd	r19, Z+3	; 0x03
    1f1e:	2f 5f       	subi	r18, 0xFF	; 255
    1f20:	3f 4f       	sbci	r19, 0xFF	; 255
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	11 23       	and	r17, r17
    1f28:	11 f0       	breq	.+4      	; 0x1f2e <uECC_shared_secret+0x110>
    1f2a:	80 e0       	ldi	r24, 0x00	; 0
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	88 0f       	add	r24, r24
    1f30:	99 1f       	adc	r25, r25
    1f32:	e1 e8       	ldi	r30, 0x81	; 129
    1f34:	f0 e0       	ldi	r31, 0x00	; 0
    1f36:	ec 0f       	add	r30, r28
    1f38:	fd 1f       	adc	r31, r29
    1f3a:	e8 0f       	add	r30, r24
    1f3c:	f9 1f       	adc	r31, r25
    1f3e:	40 81       	ld	r20, Z
    1f40:	51 81       	ldd	r21, Z+1	; 0x01
    1f42:	76 01       	movw	r14, r12
    1f44:	89 01       	movw	r16, r18
    1f46:	93 01       	movw	r18, r6
    1f48:	be 01       	movw	r22, r28
    1f4a:	6f 5f       	subi	r22, 0xFF	; 255
    1f4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f4e:	cb 01       	movw	r24, r22
    1f50:	b6 db       	rcall	.-2196   	; 0x16be <EccPoint_mult>
#if uECC_VLI_NATIVE_LITTLE_ENDIAN
    bcopy((uint8_t *) secret, (uint8_t *) _public, num_bytes);
#else
    uECC_vli_nativeToBytes(secret, num_bytes, _public);
    1f52:	ae 01       	movw	r20, r28
    1f54:	4f 5f       	subi	r20, 0xFF	; 255
    1f56:	5f 4f       	sbci	r21, 0xFF	; 255
    1f58:	b5 01       	movw	r22, r10
    1f5a:	c4 01       	movw	r24, r8
    1f5c:	4f de       	rcall	.-866    	; 0x1bfc <uECC_vli_nativeToBytes>
    1f5e:	f6 01       	movw	r30, r12
#endif
    return !EccPoint_isZero(_public, curve);
    1f60:	60 81       	ld	r22, Z
    1f62:	66 0f       	add	r22, r22
    1f64:	ce 01       	movw	r24, r28
    1f66:	01 96       	adiw	r24, 0x01	; 1
    1f68:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <uECC_vli_isZero>
    1f6c:	31 e0       	ldi	r19, 0x01	; 1
    1f6e:	20 e0       	ldi	r18, 0x00	; 0
    1f70:	81 11       	cpse	r24, r1
    1f72:	30 e0       	ldi	r19, 0x00	; 0
    1f74:	83 2f       	mov	r24, r19
    1f76:	92 2f       	mov	r25, r18
    1f78:	cc 57       	subi	r28, 0x7C	; 124
}
    1f7a:	df 4f       	sbci	r29, 0xFF	; 255
    1f7c:	0f b6       	in	r0, 0x3f	; 63
    1f7e:	f8 94       	cli
    1f80:	de bf       	out	0x3e, r29	; 62
    1f82:	0f be       	out	0x3f, r0	; 63
    1f84:	cd bf       	out	0x3d, r28	; 61
    1f86:	df 91       	pop	r29
    1f88:	cf 91       	pop	r28
    1f8a:	1f 91       	pop	r17
    1f8c:	0f 91       	pop	r16
    1f8e:	ff 90       	pop	r15
    1f90:	ef 90       	pop	r14
    1f92:	df 90       	pop	r13
    1f94:	cf 90       	pop	r12
    1f96:	bf 90       	pop	r11
    1f98:	af 90       	pop	r10
    1f9a:	9f 90       	pop	r9
    1f9c:	8f 90       	pop	r8
    1f9e:	7f 90       	pop	r7
    1fa0:	6f 90       	pop	r6
    1fa2:	08 95       	ret

00001fa4 <bytes_to_hex>:

#include <avr/io.h>
#include "hexconv.h"

void bytes_to_hex(const uint8_t *src, uint8_t len, char *dest)
{
    1fa4:	cf 93       	push	r28
    1fa6:	df 93       	push	r29
	static const unsigned char table[] = "0123456789abcdef";

	for (; len > 0; --len)
    1fa8:	66 23       	and	r22, r22
    1faa:	c9 f0       	breq	.+50     	; 0x1fde <bytes_to_hex+0x3a>
    1fac:	c4 2f       	mov	r28, r20
    1fae:	d5 2f       	mov	r29, r21
    1fb0:	28 2f       	mov	r18, r24
    1fb2:	39 2f       	mov	r19, r25
	{
		unsigned char c = *src++;
    1fb4:	d9 01       	movw	r26, r18
    1fb6:	ed 91       	ld	r30, X+
    1fb8:	9d 01       	movw	r18, r26
		*dest++ = table[c >> 4];
    1fba:	ae 2f       	mov	r26, r30
    1fbc:	a2 95       	swap	r26
    1fbe:	af 70       	andi	r26, 0x0F	; 15
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	a0 55       	subi	r26, 0x50	; 80
    1fc4:	be 4f       	sbci	r27, 0xFE	; 254
    1fc6:	8c 91       	ld	r24, X
    1fc8:	88 83       	st	Y, r24
		*dest++ = table[c & 0x0f];
    1fca:	ef 70       	andi	r30, 0x0F	; 15
    1fcc:	f0 e0       	ldi	r31, 0x00	; 0
    1fce:	e0 55       	subi	r30, 0x50	; 80
    1fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd2:	80 81       	ld	r24, Z
    1fd4:	89 83       	std	Y+1, r24	; 0x01

void bytes_to_hex(const uint8_t *src, uint8_t len, char *dest)
{
	static const unsigned char table[] = "0123456789abcdef";

	for (; len > 0; --len)
    1fd6:	61 50       	subi	r22, 0x01	; 1
    1fd8:	22 96       	adiw	r28, 0x02	; 2
    1fda:	61 11       	cpse	r22, r1
    1fdc:	eb cf       	rjmp	.-42     	; 0x1fb4 <bytes_to_hex+0x10>
	{
		unsigned char c = *src++;
		*dest++ = table[c >> 4];
		*dest++ = table[c & 0x0f];
	}
}
    1fde:	df 91       	pop	r29
    1fe0:	cf 91       	pop	r28
    1fe2:	08 95       	ret

00001fe4 <RNG>:
	can_receive_frame_buffer(signature, 8);
	result = verify_signature(challenge, signature);
	if(result==1) uart_puts("signature is valid!");
	can_send_message(0, 0x00, message);
	return 0;
}
    1fe4:	ff 92       	push	r15
    1fe6:	0f 93       	push	r16
    1fe8:	1f 93       	push	r17
    1fea:	cf 93       	push	r28
    1fec:	df 93       	push	r29
    1fee:	ec 01       	movw	r28, r24
    1ff0:	8b 01       	movw	r16, r22
    1ff2:	67 2b       	or	r22, r23
    1ff4:	41 f0       	breq	.+16     	; 0x2006 <RNG+0x22>
    1ff6:	71 d5       	rcall	.+2786   	; 0x2ada <rand>
    1ff8:	f8 2e       	mov	r15, r24
    1ffa:	6f d5       	rcall	.+2782   	; 0x2ada <rand>
    1ffc:	8f 0d       	add	r24, r15
    1ffe:	89 93       	st	Y+, r24
    2000:	01 50       	subi	r16, 0x01	; 1
    2002:	11 09       	sbc	r17, r1
    2004:	c1 f7       	brne	.-16     	; 0x1ff6 <RNG+0x12>
    2006:	81 e0       	ldi	r24, 0x01	; 1
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	1f 91       	pop	r17
    2010:	0f 91       	pop	r16
    2012:	ff 90       	pop	r15
    2014:	08 95       	ret

00002016 <buttons_init>:
    2016:	1d b8       	out	0x0d, r1	; 13
    2018:	80 ef       	ldi	r24, 0xF0	; 240
    201a:	8e b9       	out	0x0e, r24	; 14
    201c:	9f ef       	ldi	r25, 0xFF	; 255
    201e:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
    2022:	8d bb       	out	0x1d, r24	; 29
    2024:	08 95       	ret

00002026 <run_scenario2>:

int run_scenario2(){
    2026:	0f 93       	push	r16
    2028:	1f 93       	push	r17
    202a:	cf 93       	push	r28
    202c:	df 93       	push	r29
    202e:	cd b7       	in	r28, 0x3d	; 61
    2030:	de b7       	in	r29, 0x3e	; 62
    2032:	c1 5e       	subi	r28, 0xE1	; 225
    2034:	d1 09       	sbc	r29, r1
    2036:	0f b6       	in	r0, 0x3f	; 63
    2038:	f8 94       	cli
    203a:	de bf       	out	0x3e, r29	; 62
    203c:	0f be       	out	0x3f, r0	; 63
    203e:	cd bf       	out	0x3d, r28	; 61
	volatile uint8_t result;
	uart_puts("idle");
    2040:	83 e0       	ldi	r24, 0x03	; 3
    2042:	92 e0       	ldi	r25, 0x02	; 2
    2044:	d4 d4       	rcall	.+2472   	; 0x29ee <uart_puts>
	uint8_t message[8];
	//can_receive_message(0, 0x00, 0x00, message);
	uart_puts("authentication started");
    2046:	88 e0       	ldi	r24, 0x08	; 8
    2048:	92 e0       	ldi	r25, 0x02	; 2
    204a:	d1 d4       	rcall	.+2466   	; 0x29ee <uart_puts>
	uECC_set_rng(RNG);
    204c:	82 ef       	ldi	r24, 0xF2	; 242
    204e:	9f e0       	ldi	r25, 0x0F	; 15
	uint8_t private[32];
	uint8_t public[64];
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    2050:	58 de       	rcall	.-848    	; 0x1d02 <uECC_set_rng>
    2052:	5c de       	rcall	.-840    	; 0x1d0c <uECC_secp256r1>
    2054:	8c 01       	movw	r16, r24
	result = uECC_make_key(public, private, curve);
    2056:	ac 01       	movw	r20, r24
    2058:	be 01       	movw	r22, r28
    205a:	6e 5f       	subi	r22, 0xFE	; 254
    205c:	7f 4f       	sbci	r23, 0xFF	; 255
    205e:	ce 01       	movw	r24, r28
    2060:	82 96       	adiw	r24, 0x22	; 34
    2062:	57 de       	rcall	.-850    	; 0x1d12 <uECC_make_key>
    2064:	89 83       	std	Y+1, r24	; 0x01
	//can_send_frame_buffer(public, 8);
	uint8_t secret_unhashed[32];
	result = uECC_shared_secret(public_key, private, secret_unhashed, curve);
    2066:	98 01       	movw	r18, r16
    2068:	ae 01       	movw	r20, r28
    206a:	4e 59       	subi	r20, 0x9E	; 158
    206c:	5f 4f       	sbci	r21, 0xFF	; 255
    206e:	be 01       	movw	r22, r28
    2070:	6e 5f       	subi	r22, 0xFE	; 254
    2072:	7f 4f       	sbci	r23, 0xFF	; 255
    2074:	82 e4       	ldi	r24, 0x42	; 66
    2076:	92 e0       	ldi	r25, 0x02	; 2
    2078:	d2 de       	rcall	.-604    	; 0x1e1e <uECC_shared_secret>
    207a:	89 83       	std	Y+1, r24	; 0x01
	uint8_t secret[32];
	uint32_t len = 256;
	result = sha256(secret, secret_unhashed, len);
    207c:	20 e0       	ldi	r18, 0x00	; 0
    207e:	31 e0       	ldi	r19, 0x01	; 1
    2080:	40 e0       	ldi	r20, 0x00	; 0
    2082:	50 e0       	ldi	r21, 0x00	; 0
    2084:	be 01       	movw	r22, r28
    2086:	6e 59       	subi	r22, 0x9E	; 158
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	ce 01       	movw	r24, r28
    208c:	8e 57       	subi	r24, 0x7E	; 126
    208e:	9f 4f       	sbci	r25, 0xFF	; 255
    2090:	44 d0       	rcall	.+136    	; 0x211a <sha256>
    2092:	89 83       	std	Y+1, r24	; 0x01
	char secret_hex[64];
	bytes_to_hex(secret, 32, secret_hex);
    2094:	ae 01       	movw	r20, r28
    2096:	4e 55       	subi	r20, 0x5E	; 94
    2098:	5f 4f       	sbci	r21, 0xFF	; 255
    209a:	60 e2       	ldi	r22, 0x20	; 32
    209c:	ce 01       	movw	r24, r28
    209e:	8e 57       	subi	r24, 0x7E	; 126
    20a0:	9f 4f       	sbci	r25, 0xFF	; 255
	uart_puts(secret_hex);
    20a2:	80 df       	rcall	.-256    	; 0x1fa4 <bytes_to_hex>
    20a4:	ce 01       	movw	r24, r28
    20a6:	8e 55       	subi	r24, 0x5E	; 94
    20a8:	9f 4f       	sbci	r25, 0xFF	; 255
    20aa:	a1 d4       	rcall	.+2370   	; 0x29ee <uart_puts>
	return result;
    20ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	cf 51       	subi	r28, 0x1F	; 31
    20b2:	df 4f       	sbci	r29, 0xFF	; 255
    20b4:	0f b6       	in	r0, 0x3f	; 63
    20b6:	f8 94       	cli
    20b8:	de bf       	out	0x3e, r29	; 62
    20ba:	0f be       	out	0x3f, r0	; 63
    20bc:	cd bf       	out	0x3d, r28	; 61
    20be:	df 91       	pop	r29
    20c0:	cf 91       	pop	r28
    20c2:	1f 91       	pop	r17
    20c4:	0f 91       	pop	r16
    20c6:	08 95       	ret

000020c8 <main>:


 int main()
 {	
	
	uart_init();
    20c8:	86 d4       	rcall	.+2316   	; 0x29d6 <uart_init>
	buttons_init();
    20ca:	a5 df       	rcall	.-182    	; 0x2016 <buttons_init>
    20cc:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <can_init>
	can_init();
	return run_scenario2();
    20d0:	aa cf       	rjmp	.-172    	; 0x2026 <run_scenario2>
    20d2:	08 95       	ret

000020d4 <sha256_init>:
 }
    20d4:	fc 01       	movw	r30, r24
	sha2_small_common_nextBlock(state, block);
}

/*************************************************************************/
void sha256_lastBlock (sha256_ctx_t *state, const void *block, uint16_t length_b){
	sha2_small_common_lastBlock(state, block, length_b);
    20d6:	10 a2       	std	Z+32, r1	; 0x20
    20d8:	11 a2       	std	Z+33, r1	; 0x21
    20da:	12 a2       	std	Z+34, r1	; 0x22
    20dc:	13 a2       	std	Z+35, r1	; 0x23
    20de:	40 e2       	ldi	r20, 0x20	; 32
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	64 e9       	ldi	r22, 0x94	; 148
    20e4:	70 e0       	ldi	r23, 0x00	; 0
    20e6:	07 c5       	rjmp	.+2574   	; 0x2af6 <memcpy_P>
    20e8:	08 95       	ret

000020ea <sha256_ctx2hash>:



/*************************************************************************/

void sha256_ctx2hash(void *dest, const sha256_ctx_t *state){
    20ea:	cf 93       	push	r28
    20ec:	df 93       	push	r29
    20ee:	ac 01       	movw	r20, r24
    20f0:	ec 01       	movw	r28, r24
    20f2:	a0 96       	adiw	r28, 0x20	; 32
    20f4:	fa 01       	movw	r30, r20
#if defined LITTLE_ENDIAN
	uint8_t i, j, *s=(uint8_t*)(state->h);
	i=8;
	do{
		j=3;
    20f6:	93 e0       	ldi	r25, 0x03	; 3
		do{
			*((uint8_t*)dest) = s[j];
    20f8:	db 01       	movw	r26, r22
    20fa:	a9 0f       	add	r26, r25
    20fc:	b1 1d       	adc	r27, r1
    20fe:	2c 91       	ld	r18, X
    2100:	21 93       	st	Z+, r18
			dest = (uint8_t*)dest + 1;
		}while(j--);
    2102:	91 50       	subi	r25, 0x01	; 1
    2104:	c8 f7       	brcc	.-14     	; 0x20f8 <sha256_ctx2hash+0xe>
    2106:	4c 5f       	subi	r20, 0xFC	; 252
    2108:	5f 4f       	sbci	r21, 0xFF	; 255
		s += 4;
    210a:	6c 5f       	subi	r22, 0xFC	; 252
    210c:	7f 4f       	sbci	r23, 0xFF	; 255
	}while(--i);
    210e:	4c 17       	cp	r20, r28
    2110:	5d 07       	cpc	r21, r29
    2112:	81 f7       	brne	.-32     	; 0x20f4 <sha256_ctx2hash+0xa>
#elif BIG_ENDIAN
	memcpy(dest, state->h, 32);
#else
# error unsupported endian type!
#endif
}
    2114:	df 91       	pop	r29
    2116:	cf 91       	pop	r28
    2118:	08 95       	ret

0000211a <sha256>:
/*************************************************************************/

/*
 * length in bits!
 */
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
    211a:	4f 92       	push	r4
    211c:	5f 92       	push	r5
    211e:	6f 92       	push	r6
    2120:	7f 92       	push	r7
    2122:	8f 92       	push	r8
    2124:	9f 92       	push	r9
    2126:	af 92       	push	r10
    2128:	bf 92       	push	r11
    212a:	cf 92       	push	r12
    212c:	df 92       	push	r13
    212e:	ef 92       	push	r14
    2130:	ff 92       	push	r15
    2132:	0f 93       	push	r16
    2134:	1f 93       	push	r17
    2136:	cf 93       	push	r28
    2138:	df 93       	push	r29
    213a:	cd b7       	in	r28, 0x3d	; 61
    213c:	de b7       	in	r29, 0x3e	; 62
    213e:	a4 97       	sbiw	r28, 0x24	; 36
    2140:	0f b6       	in	r0, 0x3f	; 63
    2142:	f8 94       	cli
    2144:	de bf       	out	0x3e, r29	; 62
    2146:	0f be       	out	0x3f, r0	; 63
    2148:	cd bf       	out	0x3d, r28	; 61
    214a:	4c 01       	movw	r8, r24
    214c:	5b 01       	movw	r10, r22
    214e:	69 01       	movw	r12, r18
    2150:	7a 01       	movw	r14, r20
	sha256_ctx_t s;
	sha256_init(&s);
    2152:	ce 01       	movw	r24, r28
    2154:	01 96       	adiw	r24, 0x01	; 1
    2156:	be df       	rcall	.-132    	; 0x20d4 <sha256_init>
	while(length_b >= SHA256_BLOCK_BITS){
    2158:	c1 14       	cp	r12, r1
    215a:	82 e0       	ldi	r24, 0x02	; 2
    215c:	d8 06       	cpc	r13, r24
    215e:	e1 04       	cpc	r14, r1
    2160:	f1 04       	cpc	r15, r1
    2162:	88 f1       	brcs	.+98     	; 0x21c6 <sha256+0xac>
    2164:	26 01       	movw	r4, r12
    2166:	37 01       	movw	r6, r14
    2168:	85 01       	movw	r16, r10
	memcpy_P(state->h, sha256_init_vector, 8*4);
}

/*************************************************************************/
void sha256_nextBlock (sha256_ctx_t *state, const void *block){
	sha2_small_common_nextBlock(state, block);
    216a:	b8 01       	movw	r22, r16
    216c:	ce 01       	movw	r24, r28
    216e:	01 96       	adiw	r24, 0x01	; 1
    2170:	4b d0       	rcall	.+150    	; 0x2208 <sha2_small_common_nextBlock>
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
	sha256_ctx_t s;
	sha256_init(&s);
	while(length_b >= SHA256_BLOCK_BITS){
		sha256_nextBlock(&s, msg);
		msg = (uint8_t*)msg + SHA256_BLOCK_BITS/8;
    2172:	00 5c       	subi	r16, 0xC0	; 192
    2174:	1f 4f       	sbci	r17, 0xFF	; 255
		length_b -= SHA256_BLOCK_BITS;
    2176:	82 e0       	ldi	r24, 0x02	; 2
    2178:	58 1a       	sub	r5, r24
    217a:	61 08       	sbc	r6, r1
    217c:	71 08       	sbc	r7, r1
 * length in bits!
 */
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
	sha256_ctx_t s;
	sha256_init(&s);
	while(length_b >= SHA256_BLOCK_BITS){
    217e:	41 14       	cp	r4, r1
    2180:	82 e0       	ldi	r24, 0x02	; 2
    2182:	58 06       	cpc	r5, r24
    2184:	61 04       	cpc	r6, r1
    2186:	71 04       	cpc	r7, r1
    2188:	80 f7       	brcc	.-32     	; 0x216a <sha256+0x50>
    218a:	d7 01       	movw	r26, r14
    218c:	c6 01       	movw	r24, r12
    218e:	92 50       	subi	r25, 0x02	; 2
    2190:	a1 09       	sbc	r26, r1
    2192:	b1 09       	sbc	r27, r1
    2194:	07 2e       	mov	r0, r23
    2196:	79 e0       	ldi	r23, 0x09	; 9
    2198:	b6 95       	lsr	r27
    219a:	a7 95       	ror	r26
    219c:	97 95       	ror	r25
    219e:	87 95       	ror	r24
    21a0:	7a 95       	dec	r23
    21a2:	d1 f7       	brne	.-12     	; 0x2198 <sha256+0x7e>
    21a4:	70 2d       	mov	r23, r0
    21a6:	01 96       	adiw	r24, 0x01	; 1
    21a8:	00 24       	eor	r0, r0
    21aa:	96 95       	lsr	r25
    21ac:	87 95       	ror	r24
    21ae:	07 94       	ror	r0
    21b0:	96 95       	lsr	r25
    21b2:	87 95       	ror	r24
    21b4:	07 94       	ror	r0
    21b6:	98 2f       	mov	r25, r24
    21b8:	80 2d       	mov	r24, r0
    21ba:	a8 0e       	add	r10, r24
    21bc:	b9 1e       	adc	r11, r25
    21be:	81 e0       	ldi	r24, 0x01	; 1
    21c0:	d8 22       	and	r13, r24
    21c2:	ee 24       	eor	r14, r14
    21c4:	ff 24       	eor	r15, r15
	sha2_small_common_nextBlock(state, block);
}

/*************************************************************************/
void sha256_lastBlock (sha256_ctx_t *state, const void *block, uint16_t length_b){
	sha2_small_common_lastBlock(state, block, length_b);
    21c6:	a6 01       	movw	r20, r12
    21c8:	b5 01       	movw	r22, r10
    21ca:	ce 01       	movw	r24, r28
    21cc:	01 96       	adiw	r24, 0x01	; 1
    21ce:	2c d3       	rcall	.+1624   	; 0x2828 <sha2_small_common_lastBlock>
		sha256_nextBlock(&s, msg);
		msg = (uint8_t*)msg + SHA256_BLOCK_BITS/8;
		length_b -= SHA256_BLOCK_BITS;
	}
	sha256_lastBlock(&s, msg, length_b);
	sha256_ctx2hash(dest,&s);
    21d0:	be 01       	movw	r22, r28
    21d2:	6f 5f       	subi	r22, 0xFF	; 255
    21d4:	7f 4f       	sbci	r23, 0xFF	; 255
    21d6:	c4 01       	movw	r24, r8
    21d8:	88 df       	rcall	.-240    	; 0x20ea <sha256_ctx2hash>
}
    21da:	a4 96       	adiw	r28, 0x24	; 36
    21dc:	0f b6       	in	r0, 0x3f	; 63
    21de:	f8 94       	cli
    21e0:	de bf       	out	0x3e, r29	; 62
    21e2:	0f be       	out	0x3f, r0	; 63
    21e4:	cd bf       	out	0x3d, r28	; 61
    21e6:	df 91       	pop	r29
    21e8:	cf 91       	pop	r28
    21ea:	1f 91       	pop	r17
    21ec:	0f 91       	pop	r16
    21ee:	ff 90       	pop	r15
    21f0:	ef 90       	pop	r14
    21f2:	df 90       	pop	r13
    21f4:	cf 90       	pop	r12
    21f6:	bf 90       	pop	r11
    21f8:	af 90       	pop	r10
    21fa:	9f 90       	pop	r9
    21fc:	8f 90       	pop	r8
    21fe:	7f 90       	pop	r7
    2200:	6f 90       	pop	r6
    2202:	5f 90       	pop	r5
    2204:	4f 90       	pop	r4
    2206:	08 95       	ret

00002208 <sha2_small_common_nextBlock>:


/**
 * block must be, 512, Bit = 64, Byte, long !!!
 */
void sha2_small_common_nextBlock (sha2_small_common_ctx_t *state, const void *block){
    2208:	2f 92       	push	r2
    220a:	3f 92       	push	r3
    220c:	4f 92       	push	r4
    220e:	5f 92       	push	r5
    2210:	6f 92       	push	r6
    2212:	7f 92       	push	r7
    2214:	8f 92       	push	r8
    2216:	9f 92       	push	r9
    2218:	af 92       	push	r10
    221a:	bf 92       	push	r11
    221c:	cf 92       	push	r12
    221e:	df 92       	push	r13
    2220:	ef 92       	push	r14
    2222:	ff 92       	push	r15
    2224:	0f 93       	push	r16
    2226:	1f 93       	push	r17
    2228:	cf 93       	push	r28
    222a:	df 93       	push	r29
    222c:	cd b7       	in	r28, 0x3d	; 61
    222e:	de b7       	in	r29, 0x3e	; 62
    2230:	cb 56       	subi	r28, 0x6B	; 107
    2232:	d1 09       	sbc	r29, r1
    2234:	0f b6       	in	r0, 0x3f	; 63
    2236:	f8 94       	cli
    2238:	de bf       	out	0x3e, r29	; 62
    223a:	0f be       	out	0x3f, r0	; 63
    223c:	cd bf       	out	0x3d, r28	; 61
    223e:	ac 96       	adiw	r28, 0x2c	; 44
    2240:	9f af       	std	Y+63, r25	; 0x3f
    2242:	8e af       	std	Y+62, r24	; 0x3e
    2244:	ac 97       	sbiw	r28, 0x2c	; 44
    2246:	9e 01       	movw	r18, r28
    2248:	2f 5f       	subi	r18, 0xFF	; 255
    224a:	3f 4f       	sbci	r19, 0xFF	; 255
    224c:	a8 96       	adiw	r28, 0x28	; 40
    224e:	3f af       	std	Y+63, r19	; 0x3f
    2250:	2e af       	std	Y+62, r18	; 0x3e
    2252:	a8 97       	sbiw	r28, 0x28	; 40
    2254:	20 5c       	subi	r18, 0xC0	; 192
    2256:	3f 4f       	sbci	r19, 0xFF	; 255
    2258:	a8 96       	adiw	r28, 0x28	; 40
    225a:	ee ad       	ldd	r30, Y+62	; 0x3e
    225c:	ff ad       	ldd	r31, Y+63	; 0x3f
    225e:	a8 97       	sbiw	r28, 0x28	; 40
    2260:	af 01       	movw	r20, r30
	uint32_t a[8],t1,t2;

	/* init w */
#if defined LITTLE_ENDIAN
	for (i=0; i<16; ++i){
		w[i]= change_endian32(((uint32_t*)block)[i]);
    2262:	fb 01       	movw	r30, r22
    2264:	81 91       	ld	r24, Z+
    2266:	91 91       	ld	r25, Z+
    2268:	a1 91       	ld	r26, Z+
    226a:	b1 91       	ld	r27, Z+
    226c:	bf 01       	movw	r22, r30
    226e:	b8 2e       	mov	r11, r24
    2270:	aa 24       	eor	r10, r10
    2272:	99 24       	eor	r9, r9
    2274:	88 24       	eor	r8, r8
    2276:	cb 2e       	mov	r12, r27
    2278:	dd 24       	eor	r13, r13
    227a:	ee 24       	eor	r14, r14
    227c:	ff 24       	eor	r15, r15
    227e:	c8 28       	or	r12, r8
    2280:	d9 28       	or	r13, r9
    2282:	ea 28       	or	r14, r10
    2284:	fb 28       	or	r15, r11
    2286:	4c 01       	movw	r8, r24
    2288:	5d 01       	movw	r10, r26
    228a:	88 24       	eor	r8, r8
    228c:	aa 24       	eor	r10, r10
    228e:	bb 24       	eor	r11, r11
    2290:	ba 2c       	mov	r11, r10
    2292:	a9 2c       	mov	r10, r9
    2294:	98 2c       	mov	r9, r8
    2296:	88 24       	eor	r8, r8
    2298:	c8 28       	or	r12, r8
    229a:	d9 28       	or	r13, r9
    229c:	ea 28       	or	r14, r10
    229e:	fb 28       	or	r15, r11
    22a0:	88 27       	eor	r24, r24
    22a2:	99 27       	eor	r25, r25
    22a4:	bb 27       	eor	r27, r27
    22a6:	89 2f       	mov	r24, r25
    22a8:	9a 2f       	mov	r25, r26
    22aa:	ab 2f       	mov	r26, r27
    22ac:	bb 27       	eor	r27, r27
    22ae:	8c 29       	or	r24, r12
    22b0:	9d 29       	or	r25, r13
    22b2:	ae 29       	or	r26, r14
    22b4:	bf 29       	or	r27, r15
    22b6:	fa 01       	movw	r30, r20
    22b8:	81 93       	st	Z+, r24
    22ba:	91 93       	st	Z+, r25
    22bc:	a1 93       	st	Z+, r26
    22be:	b1 93       	st	Z+, r27
    22c0:	af 01       	movw	r20, r30
	uint8_t  i;
	uint32_t a[8],t1,t2;

	/* init w */
#if defined LITTLE_ENDIAN
	for (i=0; i<16; ++i){
    22c2:	e2 17       	cp	r30, r18
    22c4:	f3 07       	cpc	r31, r19
    22c6:	69 f6       	brne	.-102    	; 0x2262 <sha2_small_common_nextBlock+0x5a>
	for (i=16; i<64; ++i){
		w[i] = SIGMA_b(w[i-2]) + w[i-7] + SIGMA_a(w[i-15]) + w[i-16];
	}
*/
/* init working variables */
	memcpy((void*)a,(void*)(state->h), 8*4);
    22c8:	80 e2       	ldi	r24, 0x20	; 32
    22ca:	ac 96       	adiw	r28, 0x2c	; 44
    22cc:	ee ad       	ldd	r30, Y+62	; 0x3e
    22ce:	ff ad       	ldd	r31, Y+63	; 0x3f
    22d0:	ac 97       	sbiw	r28, 0x2c	; 44
    22d2:	de 01       	movw	r26, r28
    22d4:	af 5b       	subi	r26, 0xBF	; 191
    22d6:	bf 4f       	sbci	r27, 0xFF	; 255
    22d8:	01 90       	ld	r0, Z+
    22da:	0d 92       	st	X+, r0
    22dc:	8a 95       	dec	r24
    22de:	e1 f7       	brne	.-8      	; 0x22d8 <sha2_small_common_nextBlock+0xd0>
    22e0:	0f 2e       	mov	r0, r31
    22e2:	f4 eb       	ldi	r31, 0xB4	; 180
    22e4:	2f 2e       	mov	r2, r31
    22e6:	f0 e0       	ldi	r31, 0x00	; 0
    22e8:	3f 2e       	mov	r3, r31
    22ea:	f0 2d       	mov	r31, r0

/* do the, fun stuff, */
	for (i=0; i<64; ++i){
    22ec:	a6 96       	adiw	r28, 0x26	; 38
    22ee:	1f ae       	std	Y+63, r1	; 0x3f
    22f0:	a6 97       	sbiw	r28, 0x26	; 38
			memmove(&(w[0]), &(w[1]), 15*4);
			w[15] = wx;
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4],a[5],a[6]) + pgm_read_dword(&k[i]) + wx;
		t2 = SIGMA_0(a[0]) + MAJ(a[0],a[1],a[2]);
		memmove(&(a[1]), &(a[0]), 7*4); 	/* a[7]=a[6]; a[6]=a[5]; a[5]=a[4]; a[4]=a[3]; a[3]=a[2]; a[2]=a[1]; a[1]=a[0]; */
    22f2:	21 e4       	ldi	r18, 0x41	; 65
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	2c 0f       	add	r18, r28
    22f8:	3d 1f       	adc	r19, r29
    22fa:	2c 5f       	subi	r18, 0xFC	; 252
    22fc:	3f 4f       	sbci	r19, 0xFF	; 255
    22fe:	aa 96       	adiw	r28, 0x2a	; 42
    2300:	3f af       	std	Y+63, r19	; 0x3f
    2302:	2e af       	std	Y+62, r18	; 0x3e
    2304:	aa 97       	sbiw	r28, 0x2a	; 42
/* init working variables */
	memcpy((void*)a,(void*)(state->h), 8*4);

/* do the, fun stuff, */
	for (i=0; i<64; ++i){
		if(i<16){
    2306:	a6 96       	adiw	r28, 0x26	; 38
    2308:	3f ad       	ldd	r19, Y+63	; 0x3f
    230a:	a6 97       	sbiw	r28, 0x26	; 38
    230c:	30 31       	cpi	r19, 0x10	; 16
    230e:	48 f4       	brcc	.+18     	; 0x2322 <sha2_small_common_nextBlock+0x11a>
			wx = w[i];
    2310:	a8 96       	adiw	r28, 0x28	; 40
    2312:	ae ad       	ldd	r26, Y+62	; 0x3e
    2314:	bf ad       	ldd	r27, Y+63	; 0x3f
    2316:	a8 97       	sbiw	r28, 0x28	; 40
    2318:	cd 90       	ld	r12, X+
    231a:	dd 90       	ld	r13, X+
    231c:	ed 90       	ld	r14, X+
    231e:	fc 90       	ld	r15, X
    2320:	b8 c0       	rjmp	.+368    	; 0x2492 <sha2_small_common_nextBlock+0x28a>
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
    2322:	89 ad       	ldd	r24, Y+57	; 0x39
    2324:	9a ad       	ldd	r25, Y+58	; 0x3a
    2326:	ab ad       	ldd	r26, Y+59	; 0x3b
    2328:	bc ad       	ldd	r27, Y+60	; 0x3c
    232a:	8d 80       	ldd	r8, Y+5	; 0x05
    232c:	9e 80       	ldd	r9, Y+6	; 0x06
    232e:	af 80       	ldd	r10, Y+7	; 0x07
    2330:	b8 84       	ldd	r11, Y+8	; 0x08
    2332:	6c 01       	movw	r12, r24
    2334:	7d 01       	movw	r14, r26
    2336:	0b 2e       	mov	r0, r27
    2338:	bd e0       	ldi	r27, 0x0D	; 13
    233a:	cc 0c       	add	r12, r12
    233c:	dd 1c       	adc	r13, r13
    233e:	ee 1c       	adc	r14, r14
    2340:	ff 1c       	adc	r15, r15
    2342:	ba 95       	dec	r27
    2344:	d1 f7       	brne	.-12     	; 0x233a <sha2_small_common_nextBlock+0x132>
    2346:	b0 2d       	mov	r27, r0
    2348:	ac 01       	movw	r20, r24
    234a:	bd 01       	movw	r22, r26
    234c:	03 2e       	mov	r0, r19
    234e:	33 e1       	ldi	r19, 0x13	; 19
    2350:	76 95       	lsr	r23
    2352:	67 95       	ror	r22
    2354:	57 95       	ror	r21
    2356:	47 95       	ror	r20
    2358:	3a 95       	dec	r19
    235a:	d1 f7       	brne	.-12     	; 0x2350 <sha2_small_common_nextBlock+0x148>
    235c:	30 2d       	mov	r19, r0
    235e:	97 01       	movw	r18, r14
    2360:	86 01       	movw	r16, r12
    2362:	04 2b       	or	r16, r20
    2364:	15 2b       	or	r17, r21
    2366:	26 2b       	or	r18, r22
    2368:	37 2b       	or	r19, r23
    236a:	6c 01       	movw	r12, r24
    236c:	7d 01       	movw	r14, r26
    236e:	0b 2e       	mov	r0, r27
    2370:	bf e0       	ldi	r27, 0x0F	; 15
    2372:	cc 0c       	add	r12, r12
    2374:	dd 1c       	adc	r13, r13
    2376:	ee 1c       	adc	r14, r14
    2378:	ff 1c       	adc	r15, r15
    237a:	ba 95       	dec	r27
    237c:	d1 f7       	brne	.-12     	; 0x2372 <sha2_small_common_nextBlock+0x16a>
    237e:	b0 2d       	mov	r27, r0
    2380:	ac 01       	movw	r20, r24
    2382:	bd 01       	movw	r22, r26
    2384:	03 2e       	mov	r0, r19
    2386:	31 e1       	ldi	r19, 0x11	; 17
    2388:	76 95       	lsr	r23
    238a:	67 95       	ror	r22
    238c:	57 95       	ror	r21
    238e:	47 95       	ror	r20
    2390:	3a 95       	dec	r19
    2392:	d1 f7       	brne	.-12     	; 0x2388 <sha2_small_common_nextBlock+0x180>
    2394:	30 2d       	mov	r19, r0
    2396:	4c 29       	or	r20, r12
    2398:	5d 29       	or	r21, r13
    239a:	6e 29       	or	r22, r14
    239c:	7f 29       	or	r23, r15
    239e:	68 01       	movw	r12, r16
    23a0:	79 01       	movw	r14, r18
    23a2:	c4 26       	eor	r12, r20
    23a4:	d5 26       	eor	r13, r21
    23a6:	e6 26       	eor	r14, r22
    23a8:	f7 26       	eor	r15, r23
    23aa:	07 2e       	mov	r0, r23
    23ac:	7a e0       	ldi	r23, 0x0A	; 10
    23ae:	b6 95       	lsr	r27
    23b0:	a7 95       	ror	r26
    23b2:	97 95       	ror	r25
    23b4:	87 95       	ror	r24
    23b6:	7a 95       	dec	r23
    23b8:	d1 f7       	brne	.-12     	; 0x23ae <sha2_small_common_nextBlock+0x1a6>
    23ba:	70 2d       	mov	r23, r0
    23bc:	8c 25       	eor	r24, r12
    23be:	9d 25       	eor	r25, r13
    23c0:	ae 25       	eor	r26, r14
    23c2:	bf 25       	eor	r27, r15
    23c4:	cd a0       	ldd	r12, Y+37	; 0x25
    23c6:	de a0       	ldd	r13, Y+38	; 0x26
    23c8:	ef a0       	ldd	r14, Y+39	; 0x27
    23ca:	f8 a4       	ldd	r15, Y+40	; 0x28
    23cc:	49 81       	ldd	r20, Y+1	; 0x01
    23ce:	5a 81       	ldd	r21, Y+2	; 0x02
    23d0:	6b 81       	ldd	r22, Y+3	; 0x03
    23d2:	7c 81       	ldd	r23, Y+4	; 0x04
    23d4:	c4 0e       	add	r12, r20
    23d6:	d5 1e       	adc	r13, r21
    23d8:	e6 1e       	adc	r14, r22
    23da:	f7 1e       	adc	r15, r23
    23dc:	8c 0d       	add	r24, r12
    23de:	9d 1d       	adc	r25, r13
    23e0:	ae 1d       	adc	r26, r14
    23e2:	bf 1d       	adc	r27, r15
    23e4:	75 01       	movw	r14, r10
    23e6:	64 01       	movw	r12, r8
    23e8:	0b 2e       	mov	r0, r27
    23ea:	be e0       	ldi	r27, 0x0E	; 14
    23ec:	cc 0c       	add	r12, r12
    23ee:	dd 1c       	adc	r13, r13
    23f0:	ee 1c       	adc	r14, r14
    23f2:	ff 1c       	adc	r15, r15
    23f4:	ba 95       	dec	r27
    23f6:	d1 f7       	brne	.-12     	; 0x23ec <sha2_small_common_nextBlock+0x1e4>
    23f8:	b0 2d       	mov	r27, r0
    23fa:	b5 01       	movw	r22, r10
    23fc:	a4 01       	movw	r20, r8
    23fe:	03 2e       	mov	r0, r19
    2400:	32 e1       	ldi	r19, 0x12	; 18
    2402:	76 95       	lsr	r23
    2404:	67 95       	ror	r22
    2406:	57 95       	ror	r21
    2408:	47 95       	ror	r20
    240a:	3a 95       	dec	r19
    240c:	d1 f7       	brne	.-12     	; 0x2402 <sha2_small_common_nextBlock+0x1fa>
    240e:	30 2d       	mov	r19, r0
    2410:	c4 2a       	or	r12, r20
    2412:	d5 2a       	or	r13, r21
    2414:	e6 2a       	or	r14, r22
    2416:	f7 2a       	or	r15, r23
    2418:	b5 01       	movw	r22, r10
    241a:	a4 01       	movw	r20, r8
    241c:	68 94       	set
    241e:	16 f8       	bld	r1, 6
    2420:	76 95       	lsr	r23
    2422:	67 95       	ror	r22
    2424:	57 95       	ror	r21
    2426:	47 95       	ror	r20
    2428:	16 94       	lsr	r1
    242a:	d1 f7       	brne	.-12     	; 0x2420 <sha2_small_common_nextBlock+0x218>
    242c:	95 01       	movw	r18, r10
    242e:	84 01       	movw	r16, r8
    2430:	0f 2e       	mov	r0, r31
    2432:	f9 e1       	ldi	r31, 0x19	; 25
    2434:	00 0f       	add	r16, r16
    2436:	11 1f       	adc	r17, r17
    2438:	22 1f       	adc	r18, r18
    243a:	33 1f       	adc	r19, r19
    243c:	fa 95       	dec	r31
    243e:	d1 f7       	brne	.-12     	; 0x2434 <sha2_small_common_nextBlock+0x22c>
    2440:	f0 2d       	mov	r31, r0
    2442:	40 2b       	or	r20, r16
    2444:	51 2b       	or	r21, r17
    2446:	62 2b       	or	r22, r18
    2448:	73 2b       	or	r23, r19
    244a:	c4 26       	eor	r12, r20
    244c:	d5 26       	eor	r13, r21
    244e:	e6 26       	eor	r14, r22
    2450:	f7 26       	eor	r15, r23
    2452:	68 94       	set
    2454:	12 f8       	bld	r1, 2
    2456:	b6 94       	lsr	r11
    2458:	a7 94       	ror	r10
    245a:	97 94       	ror	r9
    245c:	87 94       	ror	r8
    245e:	16 94       	lsr	r1
    2460:	d1 f7       	brne	.-12     	; 0x2456 <sha2_small_common_nextBlock+0x24e>
    2462:	8c 24       	eor	r8, r12
    2464:	9d 24       	eor	r9, r13
    2466:	ae 24       	eor	r10, r14
    2468:	bf 24       	eor	r11, r15
    246a:	6c 01       	movw	r12, r24
    246c:	7d 01       	movw	r14, r26
    246e:	c8 0c       	add	r12, r8
    2470:	d9 1c       	adc	r13, r9
    2472:	ea 1c       	adc	r14, r10
    2474:	fb 1c       	adc	r15, r11
			memmove(&(w[0]), &(w[1]), 15*4);
    2476:	4c e3       	ldi	r20, 0x3C	; 60
    2478:	50 e0       	ldi	r21, 0x00	; 0
    247a:	be 01       	movw	r22, r28
    247c:	6b 5f       	subi	r22, 0xFB	; 251
    247e:	7f 4f       	sbci	r23, 0xFF	; 255
    2480:	ce 01       	movw	r24, r28
    2482:	01 96       	adiw	r24, 0x01	; 1
    2484:	4a d3       	rcall	.+1684   	; 0x2b1a <memmove>
			w[15] = wx;
    2486:	21 96       	adiw	r28, 0x01	; 1
    2488:	cc ae       	std	Y+60, r12	; 0x3c
    248a:	dd ae       	std	Y+61, r13	; 0x3d
    248c:	ee ae       	std	Y+62, r14	; 0x3e
    248e:	ff ae       	std	Y+63, r15	; 0x3f
    2490:	21 97       	sbiw	r28, 0x01	; 1
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4],a[5],a[6]) + pgm_read_dword(&k[i]) + wx;
    2492:	65 96       	adiw	r28, 0x15	; 21
    2494:	8c ad       	ldd	r24, Y+60	; 0x3c
    2496:	9d ad       	ldd	r25, Y+61	; 0x3d
    2498:	ae ad       	ldd	r26, Y+62	; 0x3e
    249a:	bf ad       	ldd	r27, Y+63	; 0x3f
    249c:	65 97       	sbiw	r28, 0x15	; 21
    249e:	f1 01       	movw	r30, r2
    24a0:	25 91       	lpm	r18, Z+
    24a2:	35 91       	lpm	r19, Z+
    24a4:	45 91       	lpm	r20, Z+
    24a6:	54 91       	lpm	r21, Z
    24a8:	a5 96       	adiw	r28, 0x25	; 37
    24aa:	2c af       	std	Y+60, r18	; 0x3c
    24ac:	3d af       	std	Y+61, r19	; 0x3d
    24ae:	4e af       	std	Y+62, r20	; 0x3e
    24b0:	5f af       	std	Y+63, r21	; 0x3f
    24b2:	a5 97       	sbiw	r28, 0x25	; 37
    24b4:	4c 01       	movw	r8, r24
    24b6:	5d 01       	movw	r10, r26
    24b8:	80 94       	com	r8
    24ba:	90 94       	com	r9
    24bc:	a0 94       	com	r10
    24be:	b0 94       	com	r11
    24c0:	6d 96       	adiw	r28, 0x1d	; 29
    24c2:	4c ad       	ldd	r20, Y+60	; 0x3c
    24c4:	5d ad       	ldd	r21, Y+61	; 0x3d
    24c6:	6e ad       	ldd	r22, Y+62	; 0x3e
    24c8:	7f ad       	ldd	r23, Y+63	; 0x3f
    24ca:	6d 97       	sbiw	r28, 0x1d	; 29
    24cc:	84 22       	and	r8, r20
    24ce:	95 22       	and	r9, r21
    24d0:	a6 22       	and	r10, r22
    24d2:	b7 22       	and	r11, r23
    24d4:	69 96       	adiw	r28, 0x19	; 25
    24d6:	4c ad       	ldd	r20, Y+60	; 0x3c
    24d8:	5d ad       	ldd	r21, Y+61	; 0x3d
    24da:	6e ad       	ldd	r22, Y+62	; 0x3e
    24dc:	7f ad       	ldd	r23, Y+63	; 0x3f
    24de:	69 97       	sbiw	r28, 0x19	; 25
    24e0:	8c 01       	movw	r16, r24
    24e2:	9d 01       	movw	r18, r26
    24e4:	04 23       	and	r16, r20
    24e6:	15 23       	and	r17, r21
    24e8:	26 23       	and	r18, r22
    24ea:	37 23       	and	r19, r23
    24ec:	b5 01       	movw	r22, r10
    24ee:	a4 01       	movw	r20, r8
    24f0:	40 27       	eor	r20, r16
    24f2:	51 27       	eor	r21, r17
    24f4:	62 27       	eor	r22, r18
    24f6:	73 27       	eor	r23, r19
    24f8:	4c 01       	movw	r8, r24
    24fa:	5d 01       	movw	r10, r26
    24fc:	07 2e       	mov	r0, r23
    24fe:	7b e0       	ldi	r23, 0x0B	; 11
    2500:	b6 94       	lsr	r11
    2502:	a7 94       	ror	r10
    2504:	97 94       	ror	r9
    2506:	87 94       	ror	r8
    2508:	7a 95       	dec	r23
    250a:	d1 f7       	brne	.-12     	; 0x2500 <sha2_small_common_nextBlock+0x2f8>
    250c:	70 2d       	mov	r23, r0
    250e:	8c 01       	movw	r16, r24
    2510:	9d 01       	movw	r18, r26
    2512:	0f 2e       	mov	r0, r31
    2514:	f5 e1       	ldi	r31, 0x15	; 21
    2516:	00 0f       	add	r16, r16
    2518:	11 1f       	adc	r17, r17
    251a:	22 1f       	adc	r18, r18
    251c:	33 1f       	adc	r19, r19
    251e:	fa 95       	dec	r31
    2520:	d1 f7       	brne	.-12     	; 0x2516 <sha2_small_common_nextBlock+0x30e>
    2522:	f0 2d       	mov	r31, r0
    2524:	80 2a       	or	r8, r16
    2526:	91 2a       	or	r9, r17
    2528:	a2 2a       	or	r10, r18
    252a:	b3 2a       	or	r11, r19
    252c:	2c 01       	movw	r4, r24
    252e:	3d 01       	movw	r6, r26
    2530:	68 94       	set
    2532:	15 f8       	bld	r1, 5
    2534:	76 94       	lsr	r7
    2536:	67 94       	ror	r6
    2538:	57 94       	ror	r5
    253a:	47 94       	ror	r4
    253c:	16 94       	lsr	r1
    253e:	d1 f7       	brne	.-12     	; 0x2534 <sha2_small_common_nextBlock+0x32c>
    2540:	8c 01       	movw	r16, r24
    2542:	9d 01       	movw	r18, r26
    2544:	0f 2e       	mov	r0, r31
    2546:	fa e1       	ldi	r31, 0x1A	; 26
    2548:	00 0f       	add	r16, r16
    254a:	11 1f       	adc	r17, r17
    254c:	22 1f       	adc	r18, r18
    254e:	33 1f       	adc	r19, r19
    2550:	fa 95       	dec	r31
    2552:	d1 f7       	brne	.-12     	; 0x2548 <sha2_small_common_nextBlock+0x340>
    2554:	f0 2d       	mov	r31, r0
    2556:	04 29       	or	r16, r4
    2558:	15 29       	or	r17, r5
    255a:	26 29       	or	r18, r6
    255c:	37 29       	or	r19, r7
    255e:	08 25       	eor	r16, r8
    2560:	19 25       	eor	r17, r9
    2562:	2a 25       	eor	r18, r10
    2564:	3b 25       	eor	r19, r11
    2566:	4c 01       	movw	r8, r24
    2568:	5d 01       	movw	r10, r26
    256a:	88 0c       	add	r8, r8
    256c:	99 1c       	adc	r9, r9
    256e:	aa 1c       	adc	r10, r10
    2570:	bb 1c       	adc	r11, r11
    2572:	88 0c       	add	r8, r8
    2574:	99 1c       	adc	r9, r9
    2576:	aa 1c       	adc	r10, r10
    2578:	bb 1c       	adc	r11, r11
    257a:	88 0c       	add	r8, r8
    257c:	99 1c       	adc	r9, r9
    257e:	aa 1c       	adc	r10, r10
    2580:	bb 1c       	adc	r11, r11
    2582:	88 0c       	add	r8, r8
    2584:	99 1c       	adc	r9, r9
    2586:	aa 1c       	adc	r10, r10
    2588:	bb 1c       	adc	r11, r11
    258a:	88 0c       	add	r8, r8
    258c:	99 1c       	adc	r9, r9
    258e:	aa 1c       	adc	r10, r10
    2590:	bb 1c       	adc	r11, r11
    2592:	88 0c       	add	r8, r8
    2594:	99 1c       	adc	r9, r9
    2596:	aa 1c       	adc	r10, r10
    2598:	bb 1c       	adc	r11, r11
    259a:	88 0c       	add	r8, r8
    259c:	99 1c       	adc	r9, r9
    259e:	aa 1c       	adc	r10, r10
    25a0:	bb 1c       	adc	r11, r11
    25a2:	07 2e       	mov	r0, r23
    25a4:	79 e1       	ldi	r23, 0x19	; 25
    25a6:	b6 95       	lsr	r27
    25a8:	a7 95       	ror	r26
    25aa:	97 95       	ror	r25
    25ac:	87 95       	ror	r24
    25ae:	7a 95       	dec	r23
    25b0:	d1 f7       	brne	.-12     	; 0x25a6 <sha2_small_common_nextBlock+0x39e>
    25b2:	70 2d       	mov	r23, r0
    25b4:	88 29       	or	r24, r8
    25b6:	99 29       	or	r25, r9
    25b8:	aa 29       	or	r26, r10
    25ba:	bb 29       	or	r27, r11
    25bc:	08 27       	eor	r16, r24
    25be:	19 27       	eor	r17, r25
    25c0:	2a 27       	eor	r18, r26
    25c2:	3b 27       	eor	r19, r27
    25c4:	40 0f       	add	r20, r16
    25c6:	51 1f       	adc	r21, r17
    25c8:	62 1f       	adc	r22, r18
    25ca:	73 1f       	adc	r23, r19
    25cc:	a1 96       	adiw	r28, 0x21	; 33
    25ce:	0c ad       	ldd	r16, Y+60	; 0x3c
    25d0:	1d ad       	ldd	r17, Y+61	; 0x3d
    25d2:	2e ad       	ldd	r18, Y+62	; 0x3e
    25d4:	3f ad       	ldd	r19, Y+63	; 0x3f
    25d6:	a1 97       	sbiw	r28, 0x21	; 33
    25d8:	40 0f       	add	r20, r16
    25da:	51 1f       	adc	r21, r17
    25dc:	62 1f       	adc	r22, r18
    25de:	73 1f       	adc	r23, r19
    25e0:	c4 0e       	add	r12, r20
    25e2:	d5 1e       	adc	r13, r21
    25e4:	e6 1e       	adc	r14, r22
    25e6:	f7 1e       	adc	r15, r23
    25e8:	a5 96       	adiw	r28, 0x25	; 37
    25ea:	8c ad       	ldd	r24, Y+60	; 0x3c
    25ec:	9d ad       	ldd	r25, Y+61	; 0x3d
    25ee:	ae ad       	ldd	r26, Y+62	; 0x3e
    25f0:	bf ad       	ldd	r27, Y+63	; 0x3f
    25f2:	a5 97       	sbiw	r28, 0x25	; 37
    25f4:	8c 0d       	add	r24, r12
    25f6:	9d 1d       	adc	r25, r13
    25f8:	ae 1d       	adc	r26, r14
    25fa:	bf 1d       	adc	r27, r15
    25fc:	a5 96       	adiw	r28, 0x25	; 37
    25fe:	8c af       	std	Y+60, r24	; 0x3c
    2600:	9d af       	std	Y+61, r25	; 0x3d
    2602:	ae af       	std	Y+62, r26	; 0x3e
    2604:	bf af       	std	Y+63, r27	; 0x3f
    2606:	a5 97       	sbiw	r28, 0x25	; 37
		t2 = SIGMA_0(a[0]) + MAJ(a[0],a[1],a[2]);
    2608:	25 96       	adiw	r28, 0x05	; 5
    260a:	8c ac       	ldd	r8, Y+60	; 0x3c
    260c:	9d ac       	ldd	r9, Y+61	; 0x3d
    260e:	ae ac       	ldd	r10, Y+62	; 0x3e
    2610:	bf ac       	ldd	r11, Y+63	; 0x3f
    2612:	25 97       	sbiw	r28, 0x05	; 5
    2614:	29 96       	adiw	r28, 0x09	; 9
    2616:	4c ac       	ldd	r4, Y+60	; 0x3c
    2618:	5d ac       	ldd	r5, Y+61	; 0x3d
    261a:	6e ac       	ldd	r6, Y+62	; 0x3e
    261c:	7f ac       	ldd	r7, Y+63	; 0x3f
    261e:	29 97       	sbiw	r28, 0x09	; 9
    2620:	2d 96       	adiw	r28, 0x0d	; 13
    2622:	cc ac       	ldd	r12, Y+60	; 0x3c
    2624:	dd ac       	ldd	r13, Y+61	; 0x3d
    2626:	ee ac       	ldd	r14, Y+62	; 0x3e
    2628:	ff ac       	ldd	r15, Y+63	; 0x3f
    262a:	2d 97       	sbiw	r28, 0x0d	; 13
		memmove(&(a[1]), &(a[0]), 7*4); 	/* a[7]=a[6]; a[6]=a[5]; a[5]=a[4]; a[4]=a[3]; a[3]=a[2]; a[2]=a[1]; a[1]=a[0]; */
    262c:	4c e1       	ldi	r20, 0x1C	; 28
    262e:	50 e0       	ldi	r21, 0x00	; 0
    2630:	be 01       	movw	r22, r28
    2632:	6f 5b       	subi	r22, 0xBF	; 191
    2634:	7f 4f       	sbci	r23, 0xFF	; 255
    2636:	aa 96       	adiw	r28, 0x2a	; 42
    2638:	8e ad       	ldd	r24, Y+62	; 0x3e
    263a:	9f ad       	ldd	r25, Y+63	; 0x3f
    263c:	aa 97       	sbiw	r28, 0x2a	; 42
    263e:	6d d2       	rcall	.+1242   	; 0x2b1a <memmove>
		a[4] += t1;
    2640:	65 96       	adiw	r28, 0x15	; 21
    2642:	8c ad       	ldd	r24, Y+60	; 0x3c
    2644:	9d ad       	ldd	r25, Y+61	; 0x3d
    2646:	ae ad       	ldd	r26, Y+62	; 0x3e
    2648:	bf ad       	ldd	r27, Y+63	; 0x3f
    264a:	65 97       	sbiw	r28, 0x15	; 21
    264c:	a5 96       	adiw	r28, 0x25	; 37
    264e:	2c ad       	ldd	r18, Y+60	; 0x3c
    2650:	3d ad       	ldd	r19, Y+61	; 0x3d
    2652:	4e ad       	ldd	r20, Y+62	; 0x3e
    2654:	5f ad       	ldd	r21, Y+63	; 0x3f
    2656:	a5 97       	sbiw	r28, 0x25	; 37
    2658:	82 0f       	add	r24, r18
    265a:	93 1f       	adc	r25, r19
    265c:	a4 1f       	adc	r26, r20
    265e:	b5 1f       	adc	r27, r21
    2660:	65 96       	adiw	r28, 0x15	; 21
    2662:	8c af       	std	Y+60, r24	; 0x3c
    2664:	9d af       	std	Y+61, r25	; 0x3d
    2666:	ae af       	std	Y+62, r26	; 0x3e
    2668:	bf af       	std	Y+63, r27	; 0x3f
    266a:	65 97       	sbiw	r28, 0x15	; 21
		a[0] = t1 + t2;
    266c:	b5 01       	movw	r22, r10
    266e:	a4 01       	movw	r20, r8
    2670:	03 2e       	mov	r0, r19
    2672:	3d e0       	ldi	r19, 0x0D	; 13
    2674:	76 95       	lsr	r23
    2676:	67 95       	ror	r22
    2678:	57 95       	ror	r21
    267a:	47 95       	ror	r20
    267c:	3a 95       	dec	r19
    267e:	d1 f7       	brne	.-12     	; 0x2674 <sha2_small_common_nextBlock+0x46c>
    2680:	30 2d       	mov	r19, r0
    2682:	d5 01       	movw	r26, r10
    2684:	c4 01       	movw	r24, r8
    2686:	07 2e       	mov	r0, r23
    2688:	73 e1       	ldi	r23, 0x13	; 19
    268a:	88 0f       	add	r24, r24
    268c:	99 1f       	adc	r25, r25
    268e:	aa 1f       	adc	r26, r26
    2690:	bb 1f       	adc	r27, r27
    2692:	7a 95       	dec	r23
    2694:	d1 f7       	brne	.-12     	; 0x268a <sha2_small_common_nextBlock+0x482>
    2696:	70 2d       	mov	r23, r0
    2698:	84 2b       	or	r24, r20
    269a:	95 2b       	or	r25, r21
    269c:	a6 2b       	or	r26, r22
    269e:	b7 2b       	or	r27, r23
    26a0:	b5 01       	movw	r22, r10
    26a2:	a4 01       	movw	r20, r8
    26a4:	76 95       	lsr	r23
    26a6:	67 95       	ror	r22
    26a8:	57 95       	ror	r21
    26aa:	47 95       	ror	r20
    26ac:	76 95       	lsr	r23
    26ae:	67 95       	ror	r22
    26b0:	57 95       	ror	r21
    26b2:	47 95       	ror	r20
    26b4:	95 01       	movw	r18, r10
    26b6:	84 01       	movw	r16, r8
    26b8:	0f 2e       	mov	r0, r31
    26ba:	fe e1       	ldi	r31, 0x1E	; 30
    26bc:	00 0f       	add	r16, r16
    26be:	11 1f       	adc	r17, r17
    26c0:	22 1f       	adc	r18, r18
    26c2:	33 1f       	adc	r19, r19
    26c4:	fa 95       	dec	r31
    26c6:	d1 f7       	brne	.-12     	; 0x26bc <sha2_small_common_nextBlock+0x4b4>
    26c8:	f0 2d       	mov	r31, r0
    26ca:	40 2b       	or	r20, r16
    26cc:	51 2b       	or	r21, r17
    26ce:	62 2b       	or	r22, r18
    26d0:	73 2b       	or	r23, r19
    26d2:	48 27       	eor	r20, r24
    26d4:	59 27       	eor	r21, r25
    26d6:	6a 27       	eor	r22, r26
    26d8:	7b 27       	eor	r23, r27
    26da:	95 01       	movw	r18, r10
    26dc:	84 01       	movw	r16, r8
    26de:	0f 2e       	mov	r0, r31
    26e0:	fa e0       	ldi	r31, 0x0A	; 10
    26e2:	00 0f       	add	r16, r16
    26e4:	11 1f       	adc	r17, r17
    26e6:	22 1f       	adc	r18, r18
    26e8:	33 1f       	adc	r19, r19
    26ea:	fa 95       	dec	r31
    26ec:	d1 f7       	brne	.-12     	; 0x26e2 <sha2_small_common_nextBlock+0x4da>
    26ee:	f0 2d       	mov	r31, r0
    26f0:	d5 01       	movw	r26, r10
    26f2:	c4 01       	movw	r24, r8
    26f4:	07 2e       	mov	r0, r23
    26f6:	76 e1       	ldi	r23, 0x16	; 22
    26f8:	b6 95       	lsr	r27
    26fa:	a7 95       	ror	r26
    26fc:	97 95       	ror	r25
    26fe:	87 95       	ror	r24
    2700:	7a 95       	dec	r23
    2702:	d1 f7       	brne	.-12     	; 0x26f8 <sha2_small_common_nextBlock+0x4f0>
    2704:	70 2d       	mov	r23, r0
    2706:	80 2b       	or	r24, r16
    2708:	91 2b       	or	r25, r17
    270a:	a2 2b       	or	r26, r18
    270c:	b3 2b       	or	r27, r19
    270e:	48 27       	eor	r20, r24
    2710:	59 27       	eor	r21, r25
    2712:	6a 27       	eor	r22, r26
    2714:	7b 27       	eor	r23, r27
    2716:	97 01       	movw	r18, r14
    2718:	86 01       	movw	r16, r12
    271a:	04 25       	eor	r16, r4
    271c:	15 25       	eor	r17, r5
    271e:	26 25       	eor	r18, r6
    2720:	37 25       	eor	r19, r7
    2722:	80 22       	and	r8, r16
    2724:	91 22       	and	r9, r17
    2726:	a2 22       	and	r10, r18
    2728:	b3 22       	and	r11, r19
    272a:	c4 20       	and	r12, r4
    272c:	d5 20       	and	r13, r5
    272e:	e6 20       	and	r14, r6
    2730:	f7 20       	and	r15, r7
    2732:	95 01       	movw	r18, r10
    2734:	84 01       	movw	r16, r8
    2736:	0c 25       	eor	r16, r12
    2738:	1d 25       	eor	r17, r13
    273a:	2e 25       	eor	r18, r14
    273c:	3f 25       	eor	r19, r15
    273e:	40 0f       	add	r20, r16
    2740:	51 1f       	adc	r21, r17
    2742:	62 1f       	adc	r22, r18
    2744:	73 1f       	adc	r23, r19
    2746:	a5 96       	adiw	r28, 0x25	; 37
    2748:	8c ad       	ldd	r24, Y+60	; 0x3c
    274a:	9d ad       	ldd	r25, Y+61	; 0x3d
    274c:	ae ad       	ldd	r26, Y+62	; 0x3e
    274e:	bf ad       	ldd	r27, Y+63	; 0x3f
    2750:	a5 97       	sbiw	r28, 0x25	; 37
    2752:	48 0f       	add	r20, r24
    2754:	59 1f       	adc	r21, r25
    2756:	6a 1f       	adc	r22, r26
    2758:	7b 1f       	adc	r23, r27
    275a:	25 96       	adiw	r28, 0x05	; 5
    275c:	4c af       	std	Y+60, r20	; 0x3c
    275e:	5d af       	std	Y+61, r21	; 0x3d
    2760:	6e af       	std	Y+62, r22	; 0x3e
    2762:	7f af       	std	Y+63, r23	; 0x3f
    2764:	25 97       	sbiw	r28, 0x05	; 5
*/
/* init working variables */
	memcpy((void*)a,(void*)(state->h), 8*4);

/* do the, fun stuff, */
	for (i=0; i<64; ++i){
    2766:	a6 96       	adiw	r28, 0x26	; 38
    2768:	9f ad       	ldd	r25, Y+63	; 0x3f
    276a:	a6 97       	sbiw	r28, 0x26	; 38
    276c:	9f 5f       	subi	r25, 0xFF	; 255
    276e:	a6 96       	adiw	r28, 0x26	; 38
    2770:	9f af       	std	Y+63, r25	; 0x3f
    2772:	a6 97       	sbiw	r28, 0x26	; 38
    2774:	a4 e0       	ldi	r26, 0x04	; 4
    2776:	2a 0e       	add	r2, r26
    2778:	31 1c       	adc	r3, r1
    277a:	a8 96       	adiw	r28, 0x28	; 40
    277c:	ee ad       	ldd	r30, Y+62	; 0x3e
    277e:	ff ad       	ldd	r31, Y+63	; 0x3f
    2780:	a8 97       	sbiw	r28, 0x28	; 40
    2782:	34 96       	adiw	r30, 0x04	; 4
    2784:	a8 96       	adiw	r28, 0x28	; 40
    2786:	ff af       	std	Y+63, r31	; 0x3f
    2788:	ee af       	std	Y+62, r30	; 0x3e
    278a:	a8 97       	sbiw	r28, 0x28	; 40
    278c:	90 34       	cpi	r25, 0x40	; 64
    278e:	09 f0       	breq	.+2      	; 0x2792 <sha2_small_common_nextBlock+0x58a>
    2790:	ba cd       	rjmp	.-1164   	; 0x2306 <sha2_small_common_nextBlock+0xfe>
    2792:	fe 01       	movw	r30, r28
    2794:	ef 5b       	subi	r30, 0xBF	; 191
    2796:	ff 4f       	sbci	r31, 0xFF	; 255
    2798:	ac 96       	adiw	r28, 0x2c	; 44
    279a:	2e ad       	ldd	r18, Y+62	; 0x3e
    279c:	3f ad       	ldd	r19, Y+63	; 0x3f
    279e:	ac 97       	sbiw	r28, 0x2c	; 44
    27a0:	af 01       	movw	r20, r30
    27a2:	40 5e       	subi	r20, 0xE0	; 224
    27a4:	5f 4f       	sbci	r21, 0xFF	; 255
    27a6:	bf 01       	movw	r22, r30
		a[0] = t1 + t2;
	}

/* update, the, state, */
	for (i=0; i<8; ++i){
		state->h[i] += a[i];
    27a8:	fb 01       	movw	r30, r22
    27aa:	81 91       	ld	r24, Z+
    27ac:	91 91       	ld	r25, Z+
    27ae:	a1 91       	ld	r26, Z+
    27b0:	b1 91       	ld	r27, Z+
    27b2:	bf 01       	movw	r22, r30
    27b4:	f9 01       	movw	r30, r18
    27b6:	c0 80       	ld	r12, Z
    27b8:	d1 80       	ldd	r13, Z+1	; 0x01
    27ba:	e2 80       	ldd	r14, Z+2	; 0x02
    27bc:	f3 80       	ldd	r15, Z+3	; 0x03
    27be:	8c 0d       	add	r24, r12
    27c0:	9d 1d       	adc	r25, r13
    27c2:	ae 1d       	adc	r26, r14
    27c4:	bf 1d       	adc	r27, r15
    27c6:	81 93       	st	Z+, r24
    27c8:	91 93       	st	Z+, r25
    27ca:	a1 93       	st	Z+, r26
    27cc:	b1 93       	st	Z+, r27
    27ce:	9f 01       	movw	r18, r30
		a[4] += t1;
		a[0] = t1 + t2;
	}

/* update, the, state, */
	for (i=0; i<8; ++i){
    27d0:	64 17       	cp	r22, r20
    27d2:	75 07       	cpc	r23, r21
    27d4:	49 f7       	brne	.-46     	; 0x27a8 <sha2_small_common_nextBlock+0x5a0>
		state->h[i] += a[i];
	}
	state->length += 1;
    27d6:	ac 96       	adiw	r28, 0x2c	; 44
    27d8:	ee ad       	ldd	r30, Y+62	; 0x3e
    27da:	ff ad       	ldd	r31, Y+63	; 0x3f
    27dc:	ac 97       	sbiw	r28, 0x2c	; 44
    27de:	80 a1       	ldd	r24, Z+32	; 0x20
    27e0:	91 a1       	ldd	r25, Z+33	; 0x21
    27e2:	a2 a1       	ldd	r26, Z+34	; 0x22
    27e4:	b3 a1       	ldd	r27, Z+35	; 0x23
    27e6:	01 96       	adiw	r24, 0x01	; 1
    27e8:	a1 1d       	adc	r26, r1
    27ea:	b1 1d       	adc	r27, r1
    27ec:	80 a3       	std	Z+32, r24	; 0x20
    27ee:	91 a3       	std	Z+33, r25	; 0x21
    27f0:	a2 a3       	std	Z+34, r26	; 0x22
    27f2:	b3 a3       	std	Z+35, r27	; 0x23
}
    27f4:	c5 59       	subi	r28, 0x95	; 149
    27f6:	df 4f       	sbci	r29, 0xFF	; 255
    27f8:	0f b6       	in	r0, 0x3f	; 63
    27fa:	f8 94       	cli
    27fc:	de bf       	out	0x3e, r29	; 62
    27fe:	0f be       	out	0x3f, r0	; 63
    2800:	cd bf       	out	0x3d, r28	; 61
    2802:	df 91       	pop	r29
    2804:	cf 91       	pop	r28
    2806:	1f 91       	pop	r17
    2808:	0f 91       	pop	r16
    280a:	ff 90       	pop	r15
    280c:	ef 90       	pop	r14
    280e:	df 90       	pop	r13
    2810:	cf 90       	pop	r12
    2812:	bf 90       	pop	r11
    2814:	af 90       	pop	r10
    2816:	9f 90       	pop	r9
    2818:	8f 90       	pop	r8
    281a:	7f 90       	pop	r7
    281c:	6f 90       	pop	r6
    281e:	5f 90       	pop	r5
    2820:	4f 90       	pop	r4
    2822:	3f 90       	pop	r3
    2824:	2f 90       	pop	r2
    2826:	08 95       	ret

00002828 <sha2_small_common_lastBlock>:


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
    2828:	8f 92       	push	r8
    282a:	9f 92       	push	r9
    282c:	af 92       	push	r10
    282e:	bf 92       	push	r11
    2830:	cf 92       	push	r12
    2832:	df 92       	push	r13
    2834:	ef 92       	push	r14
    2836:	ff 92       	push	r15
    2838:	0f 93       	push	r16
    283a:	1f 93       	push	r17
    283c:	cf 93       	push	r28
    283e:	df 93       	push	r29
    2840:	cd b7       	in	r28, 0x3d	; 61
    2842:	de b7       	in	r29, 0x3e	; 62
    2844:	c8 54       	subi	r28, 0x48	; 72
    2846:	d1 09       	sbc	r29, r1
    2848:	0f b6       	in	r0, 0x3f	; 63
    284a:	f8 94       	cli
    284c:	de bf       	out	0x3e, r29	; 62
    284e:	0f be       	out	0x3f, r0	; 63
    2850:	cd bf       	out	0x3d, r28	; 61
    2852:	8c 01       	movw	r16, r24
    2854:	4b 01       	movw	r8, r22
    2856:	5a 01       	movw	r10, r20
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    2858:	41 15       	cp	r20, r1
    285a:	62 e0       	ldi	r22, 0x02	; 2
    285c:	56 07       	cpc	r21, r22
    285e:	28 f1       	brcs	.+74     	; 0x28aa <sha2_small_common_lastBlock+0x82>
    2860:	6a 01       	movw	r12, r20
    2862:	74 01       	movw	r14, r8
		sha2_small_common_nextBlock(state, block);
    2864:	b7 01       	movw	r22, r14
    2866:	c8 01       	movw	r24, r16
    2868:	cf dc       	rcall	.-1634   	; 0x2208 <sha2_small_common_nextBlock>
		length_b -= 512;
    286a:	72 e0       	ldi	r23, 0x02	; 2
    286c:	d7 1a       	sub	r13, r23
		block = (uint8_t*)block+64;
    286e:	80 e4       	ldi	r24, 0x40	; 64
    2870:	e8 0e       	add	r14, r24
    2872:	f1 1c       	adc	r15, r1


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    2874:	c1 14       	cp	r12, r1
    2876:	92 e0       	ldi	r25, 0x02	; 2
    2878:	d9 06       	cpc	r13, r25
    287a:	a0 f7       	brcc	.-24     	; 0x2864 <sha2_small_common_lastBlock+0x3c>
    287c:	75 01       	movw	r14, r10
    287e:	e1 e0       	ldi	r30, 0x01	; 1
    2880:	fe 22       	and	r15, r30
    2882:	f2 e0       	ldi	r31, 0x02	; 2
    2884:	bf 1a       	sub	r11, r31
    2886:	ab 2c       	mov	r10, r11
    2888:	bb 24       	eor	r11, r11
    288a:	a6 94       	lsr	r10
    288c:	6f ef       	ldi	r22, 0xFF	; 255
    288e:	a6 1a       	sub	r10, r22
    2890:	b6 0a       	sbc	r11, r22
    2892:	00 24       	eor	r0, r0
    2894:	b6 94       	lsr	r11
    2896:	a7 94       	ror	r10
    2898:	07 94       	ror	r0
    289a:	b6 94       	lsr	r11
    289c:	a7 94       	ror	r10
    289e:	07 94       	ror	r0
    28a0:	ba 2c       	mov	r11, r10
    28a2:	a0 2c       	mov	r10, r0
    28a4:	8a 0c       	add	r8, r10
    28a6:	9b 1c       	adc	r9, r11
    28a8:	01 c0       	rjmp	.+2      	; 0x28ac <sha2_small_common_lastBlock+0x84>
    28aa:	7a 01       	movw	r14, r20
		sha2_small_common_nextBlock(state, block);
		length_b -= 512;
		block = (uint8_t*)block+64;
	}
	len = state->length*512 + length_b;
    28ac:	f8 01       	movw	r30, r16
    28ae:	80 a1       	ldd	r24, Z+32	; 0x20
    28b0:	91 a1       	ldd	r25, Z+33	; 0x21
    28b2:	a2 a1       	ldd	r26, Z+34	; 0x22
    28b4:	b3 a1       	ldd	r27, Z+35	; 0x23
    28b6:	07 2e       	mov	r0, r23
    28b8:	79 e0       	ldi	r23, 0x09	; 9
    28ba:	88 0f       	add	r24, r24
    28bc:	99 1f       	adc	r25, r25
    28be:	aa 1f       	adc	r26, r26
    28c0:	bb 1f       	adc	r27, r27
    28c2:	7a 95       	dec	r23
    28c4:	d1 f7       	brne	.-12     	; 0x28ba <sha2_small_common_lastBlock+0x92>
    28c6:	70 2d       	mov	r23, r0
    28c8:	8e 0d       	add	r24, r14
    28ca:	9f 1d       	adc	r25, r15
    28cc:	a1 1d       	adc	r26, r1
    28ce:	b1 1d       	adc	r27, r1
    28d0:	9c 01       	movw	r18, r24
    28d2:	ad 01       	movw	r20, r26
    28d4:	22 96       	adiw	r28, 0x02	; 2
    28d6:	2f af       	std	Y+63, r18	; 0x3f
    28d8:	22 97       	sbiw	r28, 0x02	; 2
    28da:	23 96       	adiw	r28, 0x03	; 3
    28dc:	3f af       	std	Y+63, r19	; 0x3f
    28de:	23 97       	sbiw	r28, 0x03	; 3
    28e0:	24 96       	adiw	r28, 0x04	; 4
    28e2:	4f af       	std	Y+63, r20	; 0x3f
    28e4:	24 97       	sbiw	r28, 0x04	; 4
    28e6:	25 96       	adiw	r28, 0x05	; 5
    28e8:	5f af       	std	Y+63, r21	; 0x3f
    28ea:	25 97       	sbiw	r28, 0x05	; 5
    28ec:	26 96       	adiw	r28, 0x06	; 6
    28ee:	1f ae       	std	Y+63, r1	; 0x3f
    28f0:	26 97       	sbiw	r28, 0x06	; 6
    28f2:	27 96       	adiw	r28, 0x07	; 7
    28f4:	1f ae       	std	Y+63, r1	; 0x3f
    28f6:	27 97       	sbiw	r28, 0x07	; 7
    28f8:	28 96       	adiw	r28, 0x08	; 8
    28fa:	1f ae       	std	Y+63, r1	; 0x3f
    28fc:	28 97       	sbiw	r28, 0x08	; 8
    28fe:	29 96       	adiw	r28, 0x09	; 9
    2900:	1f ae       	std	Y+63, r1	; 0x3f
    2902:	29 97       	sbiw	r28, 0x09	; 9
	memset(lb, 0, 64);
    2904:	be 01       	movw	r22, r28
    2906:	6f 5f       	subi	r22, 0xFF	; 255
    2908:	7f 4f       	sbci	r23, 0xFF	; 255
    290a:	6b 01       	movw	r12, r22
    290c:	80 e4       	ldi	r24, 0x40	; 64
    290e:	fb 01       	movw	r30, r22
    2910:	11 92       	st	Z+, r1
    2912:	8a 95       	dec	r24
    2914:	e9 f7       	brne	.-6      	; 0x2910 <sha2_small_common_lastBlock+0xe8>
	memcpy(lb, block, (length_b+7)/8);
    2916:	a7 01       	movw	r20, r14
    2918:	49 5f       	subi	r20, 0xF9	; 249
    291a:	5f 4f       	sbci	r21, 0xFF	; 255
    291c:	56 95       	lsr	r21
    291e:	47 95       	ror	r20
    2920:	56 95       	lsr	r21
    2922:	47 95       	ror	r20
    2924:	56 95       	lsr	r21
    2926:	47 95       	ror	r20
    2928:	b4 01       	movw	r22, r8
    292a:	c6 01       	movw	r24, r12
    292c:	ed d0       	rcall	.+474    	; 0x2b08 <memcpy>

	/* set the final one bit */
	lb[length_b/8] |= 0x80>>(length_b & 0x7);
    292e:	f7 01       	movw	r30, r14
    2930:	f6 95       	lsr	r31
    2932:	e7 95       	ror	r30
    2934:	f6 95       	lsr	r31
    2936:	e7 95       	ror	r30
    2938:	f6 95       	lsr	r31
    293a:	e7 95       	ror	r30
    293c:	ec 0d       	add	r30, r12
    293e:	fd 1d       	adc	r31, r13
    2940:	c7 01       	movw	r24, r14
    2942:	87 70       	andi	r24, 0x07	; 7
    2944:	99 27       	eor	r25, r25
    2946:	20 e8       	ldi	r18, 0x80	; 128
    2948:	30 e0       	ldi	r19, 0x00	; 0
    294a:	02 c0       	rjmp	.+4      	; 0x2950 <sha2_small_common_lastBlock+0x128>
    294c:	35 95       	asr	r19
    294e:	27 95       	ror	r18
    2950:	8a 95       	dec	r24
    2952:	e2 f7       	brpl	.-8      	; 0x294c <sha2_small_common_lastBlock+0x124>
    2954:	80 81       	ld	r24, Z
    2956:	28 2b       	or	r18, r24
    2958:	20 83       	st	Z, r18
	/* pad with zeros */
	if (length_b>=512-64){ /* not enouth space for 64bit length value */
    295a:	f0 ec       	ldi	r31, 0xC0	; 192
    295c:	ef 16       	cp	r14, r31
    295e:	f1 e0       	ldi	r31, 0x01	; 1
    2960:	ff 06       	cpc	r15, r31
    2962:	40 f0       	brcs	.+16     	; 0x2974 <sha2_small_common_lastBlock+0x14c>
		sha2_small_common_nextBlock(state, lb);
    2964:	b6 01       	movw	r22, r12
    2966:	c8 01       	movw	r24, r16
    2968:	4f dc       	rcall	.-1890   	; 0x2208 <sha2_small_common_nextBlock>
		memset(lb, 0, 64);
    296a:	80 e4       	ldi	r24, 0x40	; 64
    296c:	f6 01       	movw	r30, r12
    296e:	11 92       	st	Z+, r1
    2970:	8a 95       	dec	r24
    2972:	e9 f7       	brne	.-6      	; 0x296e <sha2_small_common_lastBlock+0x146>


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    2974:	27 e0       	ldi	r18, 0x07	; 7
#if defined LITTLE_ENDIAN
	 	/* this is now rolled up */
	uint8_t i;
	i=7;
	do{
		lb[63-i] = ((uint8_t*)&len)[i];
    2976:	4f e3       	ldi	r20, 0x3F	; 63
    2978:	50 e0       	ldi	r21, 0x00	; 0
    297a:	82 2f       	mov	r24, r18
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	fa 01       	movw	r30, r20
    2980:	e8 1b       	sub	r30, r24
    2982:	f9 0b       	sbc	r31, r25
    2984:	61 e0       	ldi	r22, 0x01	; 1
    2986:	70 e0       	ldi	r23, 0x00	; 0
    2988:	6c 0f       	add	r22, r28
    298a:	7d 1f       	adc	r23, r29
    298c:	e6 0f       	add	r30, r22
    298e:	f7 1f       	adc	r31, r23
    2990:	a1 e4       	ldi	r26, 0x41	; 65
    2992:	b0 e0       	ldi	r27, 0x00	; 0
    2994:	ac 0f       	add	r26, r28
    2996:	bd 1f       	adc	r27, r29
    2998:	a8 0f       	add	r26, r24
    299a:	b9 1f       	adc	r27, r25
    299c:	8c 91       	ld	r24, X
    299e:	80 83       	st	Z, r24
	}while(i--);
    29a0:	21 50       	subi	r18, 0x01	; 1
    29a2:	58 f7       	brcc	.-42     	; 0x297a <sha2_small_common_lastBlock+0x152>
#elif defined BIG_ENDIAN
	*((uint64_t)&(lb[56])) = len;
#endif
	sha2_small_common_nextBlock(state, lb);
    29a4:	be 01       	movw	r22, r28
    29a6:	6f 5f       	subi	r22, 0xFF	; 255
    29a8:	7f 4f       	sbci	r23, 0xFF	; 255
    29aa:	c8 01       	movw	r24, r16
    29ac:	2d dc       	rcall	.-1958   	; 0x2208 <sha2_small_common_nextBlock>
}
    29ae:	c8 5b       	subi	r28, 0xB8	; 184
    29b0:	df 4f       	sbci	r29, 0xFF	; 255
    29b2:	0f b6       	in	r0, 0x3f	; 63
    29b4:	f8 94       	cli
    29b6:	de bf       	out	0x3e, r29	; 62
    29b8:	0f be       	out	0x3f, r0	; 63
    29ba:	cd bf       	out	0x3d, r28	; 61
    29bc:	df 91       	pop	r29
    29be:	cf 91       	pop	r28
    29c0:	1f 91       	pop	r17
    29c2:	0f 91       	pop	r16
    29c4:	ff 90       	pop	r15
    29c6:	ef 90       	pop	r14
    29c8:	df 90       	pop	r13
    29ca:	cf 90       	pop	r12
    29cc:	bf 90       	pop	r11
    29ce:	af 90       	pop	r10
    29d0:	9f 90       	pop	r9
    29d2:	8f 90       	pop	r8
    29d4:	08 95       	ret

000029d6 <uart_init>:
#include <avr/io.h>
#include <string.h>
#include "uart_f.h"

void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    29d6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    29da:	83 e3       	ldi	r24, 0x33	; 51
    29dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    29e0:	8e e0       	ldi	r24, 0x0E	; 14
    29e2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    29e6:	88 e1       	ldi	r24, 0x18	; 24
    29e8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    29ec:	08 95       	ret

000029ee <uart_puts>:
}

void uart_puts(char* s){
    29ee:	cf 93       	push	r28
    29f0:	df 93       	push	r29
	int i;
	int len = strlen(s);
    29f2:	fc 01       	movw	r30, r24
    29f4:	01 90       	ld	r0, Z+
    29f6:	00 20       	and	r0, r0
    29f8:	e9 f7       	brne	.-6      	; 0x29f4 <uart_puts+0x6>
    29fa:	31 97       	sbiw	r30, 0x01	; 1
    29fc:	e8 1b       	sub	r30, r24
    29fe:	f9 0b       	sbc	r31, r25
	for (i = 0; i < len; i++){
    2a00:	1e 16       	cp	r1, r30
    2a02:	1f 06       	cpc	r1, r31
    2a04:	84 f4       	brge	.+32     	; 0x2a26 <uart_puts+0x38>
    2a06:	dc 01       	movw	r26, r24
    2a08:	9c 01       	movw	r18, r24
    2a0a:	2e 0f       	add	r18, r30
    2a0c:	3f 1f       	adc	r19, r31
		while(!( UCSR0A & 0X20));
    2a0e:	e0 ec       	ldi	r30, 0xC0	; 192
    2a10:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    2a12:	c6 ec       	ldi	r28, 0xC6	; 198
    2a14:	d0 e0       	ldi	r29, 0x00	; 0

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    2a16:	90 81       	ld	r25, Z
    2a18:	95 ff       	sbrs	r25, 5
    2a1a:	fd cf       	rjmp	.-6      	; 0x2a16 <uart_puts+0x28>
		UDR0=s[i];
    2a1c:	9d 91       	ld	r25, X+
    2a1e:	98 83       	st	Y, r25
}

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    2a20:	a2 17       	cp	r26, r18
    2a22:	b3 07       	cpc	r27, r19
    2a24:	c1 f7       	brne	.-16     	; 0x2a16 <uart_puts+0x28>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    2a26:	e0 ec       	ldi	r30, 0xC0	; 192
    2a28:	f0 e0       	ldi	r31, 0x00	; 0
    2a2a:	80 81       	ld	r24, Z
    2a2c:	85 ff       	sbrs	r24, 5
    2a2e:	fd cf       	rjmp	.-6      	; 0x2a2a <uart_puts+0x3c>
	UDR0 = 13;
    2a30:	8d e0       	ldi	r24, 0x0D	; 13
    2a32:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    2a36:	e0 ec       	ldi	r30, 0xC0	; 192
    2a38:	f0 e0       	ldi	r31, 0x00	; 0
    2a3a:	80 81       	ld	r24, Z
    2a3c:	85 ff       	sbrs	r24, 5
    2a3e:	fd cf       	rjmp	.-6      	; 0x2a3a <uart_puts+0x4c>
	UDR0 = 10;
    2a40:	8a e0       	ldi	r24, 0x0A	; 10
    2a42:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    2a46:	df 91       	pop	r29
    2a48:	cf 91       	pop	r28
    2a4a:	08 95       	ret

00002a4c <do_rand>:
    2a4c:	8f 92       	push	r8
    2a4e:	9f 92       	push	r9
    2a50:	af 92       	push	r10
    2a52:	bf 92       	push	r11
    2a54:	cf 92       	push	r12
    2a56:	df 92       	push	r13
    2a58:	ef 92       	push	r14
    2a5a:	ff 92       	push	r15
    2a5c:	cf 93       	push	r28
    2a5e:	df 93       	push	r29
    2a60:	ec 01       	movw	r28, r24
    2a62:	68 81       	ld	r22, Y
    2a64:	79 81       	ldd	r23, Y+1	; 0x01
    2a66:	8a 81       	ldd	r24, Y+2	; 0x02
    2a68:	9b 81       	ldd	r25, Y+3	; 0x03
    2a6a:	61 15       	cp	r22, r1
    2a6c:	71 05       	cpc	r23, r1
    2a6e:	81 05       	cpc	r24, r1
    2a70:	91 05       	cpc	r25, r1
    2a72:	21 f4       	brne	.+8      	; 0x2a7c <do_rand+0x30>
    2a74:	64 e2       	ldi	r22, 0x24	; 36
    2a76:	79 ed       	ldi	r23, 0xD9	; 217
    2a78:	8b e5       	ldi	r24, 0x5B	; 91
    2a7a:	97 e0       	ldi	r25, 0x07	; 7
    2a7c:	2d e1       	ldi	r18, 0x1D	; 29
    2a7e:	33 ef       	ldi	r19, 0xF3	; 243
    2a80:	41 e0       	ldi	r20, 0x01	; 1
    2a82:	50 e0       	ldi	r21, 0x00	; 0
    2a84:	5b d0       	rcall	.+182    	; 0x2b3c <__divmodsi4>
    2a86:	49 01       	movw	r8, r18
    2a88:	5a 01       	movw	r10, r20
    2a8a:	9b 01       	movw	r18, r22
    2a8c:	ac 01       	movw	r20, r24
    2a8e:	a7 ea       	ldi	r26, 0xA7	; 167
    2a90:	b1 e4       	ldi	r27, 0x41	; 65
    2a92:	70 d0       	rcall	.+224    	; 0x2b74 <__muluhisi3>
    2a94:	6b 01       	movw	r12, r22
    2a96:	7c 01       	movw	r14, r24
    2a98:	ac ee       	ldi	r26, 0xEC	; 236
    2a9a:	b4 ef       	ldi	r27, 0xF4	; 244
    2a9c:	a5 01       	movw	r20, r10
    2a9e:	94 01       	movw	r18, r8
    2aa0:	75 d0       	rcall	.+234    	; 0x2b8c <__mulohisi3>
    2aa2:	dc 01       	movw	r26, r24
    2aa4:	cb 01       	movw	r24, r22
    2aa6:	8c 0d       	add	r24, r12
    2aa8:	9d 1d       	adc	r25, r13
    2aaa:	ae 1d       	adc	r26, r14
    2aac:	bf 1d       	adc	r27, r15
    2aae:	b7 ff       	sbrs	r27, 7
    2ab0:	03 c0       	rjmp	.+6      	; 0x2ab8 <do_rand+0x6c>
    2ab2:	01 97       	sbiw	r24, 0x01	; 1
    2ab4:	a1 09       	sbc	r26, r1
    2ab6:	b0 48       	sbci	r27, 0x80	; 128
    2ab8:	88 83       	st	Y, r24
    2aba:	99 83       	std	Y+1, r25	; 0x01
    2abc:	aa 83       	std	Y+2, r26	; 0x02
    2abe:	bb 83       	std	Y+3, r27	; 0x03
    2ac0:	9f 77       	andi	r25, 0x7F	; 127
    2ac2:	df 91       	pop	r29
    2ac4:	cf 91       	pop	r28
    2ac6:	ff 90       	pop	r15
    2ac8:	ef 90       	pop	r14
    2aca:	df 90       	pop	r13
    2acc:	cf 90       	pop	r12
    2ace:	bf 90       	pop	r11
    2ad0:	af 90       	pop	r10
    2ad2:	9f 90       	pop	r9
    2ad4:	8f 90       	pop	r8
    2ad6:	08 95       	ret

00002ad8 <rand_r>:
    2ad8:	b9 cf       	rjmp	.-142    	; 0x2a4c <do_rand>

00002ada <rand>:
    2ada:	80 e0       	ldi	r24, 0x00	; 0
    2adc:	91 e0       	ldi	r25, 0x01	; 1
    2ade:	b6 cf       	rjmp	.-148    	; 0x2a4c <do_rand>

00002ae0 <srand>:
    2ae0:	a0 e0       	ldi	r26, 0x00	; 0
    2ae2:	b0 e0       	ldi	r27, 0x00	; 0
    2ae4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2ae8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2aec:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    2af0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    2af4:	08 95       	ret

00002af6 <memcpy_P>:
    2af6:	fb 01       	movw	r30, r22
    2af8:	dc 01       	movw	r26, r24
    2afa:	02 c0       	rjmp	.+4      	; 0x2b00 <memcpy_P+0xa>
    2afc:	05 90       	lpm	r0, Z+
    2afe:	0d 92       	st	X+, r0
    2b00:	41 50       	subi	r20, 0x01	; 1
    2b02:	50 40       	sbci	r21, 0x00	; 0
    2b04:	d8 f7       	brcc	.-10     	; 0x2afc <memcpy_P+0x6>
    2b06:	08 95       	ret

00002b08 <memcpy>:
    2b08:	fb 01       	movw	r30, r22
    2b0a:	dc 01       	movw	r26, r24
    2b0c:	02 c0       	rjmp	.+4      	; 0x2b12 <memcpy+0xa>
    2b0e:	01 90       	ld	r0, Z+
    2b10:	0d 92       	st	X+, r0
    2b12:	41 50       	subi	r20, 0x01	; 1
    2b14:	50 40       	sbci	r21, 0x00	; 0
    2b16:	d8 f7       	brcc	.-10     	; 0x2b0e <memcpy+0x6>
    2b18:	08 95       	ret

00002b1a <memmove>:
    2b1a:	68 17       	cp	r22, r24
    2b1c:	79 07       	cpc	r23, r25
    2b1e:	68 f4       	brcc	.+26     	; 0x2b3a <memmove+0x20>
    2b20:	fb 01       	movw	r30, r22
    2b22:	dc 01       	movw	r26, r24
    2b24:	e4 0f       	add	r30, r20
    2b26:	f5 1f       	adc	r31, r21
    2b28:	a4 0f       	add	r26, r20
    2b2a:	b5 1f       	adc	r27, r21
    2b2c:	02 c0       	rjmp	.+4      	; 0x2b32 <memmove+0x18>
    2b2e:	02 90       	ld	r0, -Z
    2b30:	0e 92       	st	-X, r0
    2b32:	41 50       	subi	r20, 0x01	; 1
    2b34:	50 40       	sbci	r21, 0x00	; 0
    2b36:	d8 f7       	brcc	.-10     	; 0x2b2e <memmove+0x14>
    2b38:	08 95       	ret
    2b3a:	e6 cf       	rjmp	.-52     	; 0x2b08 <memcpy>

00002b3c <__divmodsi4>:
    2b3c:	05 2e       	mov	r0, r21
    2b3e:	97 fb       	bst	r25, 7
    2b40:	16 f4       	brtc	.+4      	; 0x2b46 <__divmodsi4+0xa>
    2b42:	00 94       	com	r0
    2b44:	0f d0       	rcall	.+30     	; 0x2b64 <__negsi2>
    2b46:	57 fd       	sbrc	r21, 7
    2b48:	05 d0       	rcall	.+10     	; 0x2b54 <__divmodsi4_neg2>
    2b4a:	24 d0       	rcall	.+72     	; 0x2b94 <__udivmodsi4>
    2b4c:	07 fc       	sbrc	r0, 7
    2b4e:	02 d0       	rcall	.+4      	; 0x2b54 <__divmodsi4_neg2>
    2b50:	46 f4       	brtc	.+16     	; 0x2b62 <__divmodsi4_exit>
    2b52:	08 c0       	rjmp	.+16     	; 0x2b64 <__negsi2>

00002b54 <__divmodsi4_neg2>:
    2b54:	50 95       	com	r21
    2b56:	40 95       	com	r20
    2b58:	30 95       	com	r19
    2b5a:	21 95       	neg	r18
    2b5c:	3f 4f       	sbci	r19, 0xFF	; 255
    2b5e:	4f 4f       	sbci	r20, 0xFF	; 255
    2b60:	5f 4f       	sbci	r21, 0xFF	; 255

00002b62 <__divmodsi4_exit>:
    2b62:	08 95       	ret

00002b64 <__negsi2>:
    2b64:	90 95       	com	r25
    2b66:	80 95       	com	r24
    2b68:	70 95       	com	r23
    2b6a:	61 95       	neg	r22
    2b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b6e:	8f 4f       	sbci	r24, 0xFF	; 255
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	08 95       	ret

00002b74 <__muluhisi3>:
    2b74:	31 d0       	rcall	.+98     	; 0x2bd8 <__umulhisi3>
    2b76:	a5 9f       	mul	r26, r21
    2b78:	90 0d       	add	r25, r0
    2b7a:	b4 9f       	mul	r27, r20
    2b7c:	90 0d       	add	r25, r0
    2b7e:	a4 9f       	mul	r26, r20
    2b80:	80 0d       	add	r24, r0
    2b82:	91 1d       	adc	r25, r1
    2b84:	11 24       	eor	r1, r1
    2b86:	08 95       	ret

00002b88 <__mulshisi3>:
    2b88:	b7 ff       	sbrs	r27, 7
    2b8a:	f4 cf       	rjmp	.-24     	; 0x2b74 <__muluhisi3>

00002b8c <__mulohisi3>:
    2b8c:	f3 df       	rcall	.-26     	; 0x2b74 <__muluhisi3>
    2b8e:	82 1b       	sub	r24, r18
    2b90:	93 0b       	sbc	r25, r19
    2b92:	08 95       	ret

00002b94 <__udivmodsi4>:
    2b94:	a1 e2       	ldi	r26, 0x21	; 33
    2b96:	1a 2e       	mov	r1, r26
    2b98:	aa 1b       	sub	r26, r26
    2b9a:	bb 1b       	sub	r27, r27
    2b9c:	fd 01       	movw	r30, r26
    2b9e:	0d c0       	rjmp	.+26     	; 0x2bba <__udivmodsi4_ep>

00002ba0 <__udivmodsi4_loop>:
    2ba0:	aa 1f       	adc	r26, r26
    2ba2:	bb 1f       	adc	r27, r27
    2ba4:	ee 1f       	adc	r30, r30
    2ba6:	ff 1f       	adc	r31, r31
    2ba8:	a2 17       	cp	r26, r18
    2baa:	b3 07       	cpc	r27, r19
    2bac:	e4 07       	cpc	r30, r20
    2bae:	f5 07       	cpc	r31, r21
    2bb0:	20 f0       	brcs	.+8      	; 0x2bba <__udivmodsi4_ep>
    2bb2:	a2 1b       	sub	r26, r18
    2bb4:	b3 0b       	sbc	r27, r19
    2bb6:	e4 0b       	sbc	r30, r20
    2bb8:	f5 0b       	sbc	r31, r21

00002bba <__udivmodsi4_ep>:
    2bba:	66 1f       	adc	r22, r22
    2bbc:	77 1f       	adc	r23, r23
    2bbe:	88 1f       	adc	r24, r24
    2bc0:	99 1f       	adc	r25, r25
    2bc2:	1a 94       	dec	r1
    2bc4:	69 f7       	brne	.-38     	; 0x2ba0 <__udivmodsi4_loop>
    2bc6:	60 95       	com	r22
    2bc8:	70 95       	com	r23
    2bca:	80 95       	com	r24
    2bcc:	90 95       	com	r25
    2bce:	9b 01       	movw	r18, r22
    2bd0:	ac 01       	movw	r20, r24
    2bd2:	bd 01       	movw	r22, r26
    2bd4:	cf 01       	movw	r24, r30
    2bd6:	08 95       	ret

00002bd8 <__umulhisi3>:
    2bd8:	a2 9f       	mul	r26, r18
    2bda:	b0 01       	movw	r22, r0
    2bdc:	b3 9f       	mul	r27, r19
    2bde:	c0 01       	movw	r24, r0
    2be0:	a3 9f       	mul	r26, r19
    2be2:	70 0d       	add	r23, r0
    2be4:	81 1d       	adc	r24, r1
    2be6:	11 24       	eor	r1, r1
    2be8:	91 1d       	adc	r25, r1
    2bea:	b2 9f       	mul	r27, r18
    2bec:	70 0d       	add	r23, r0
    2bee:	81 1d       	adc	r24, r1
    2bf0:	11 24       	eor	r1, r1
    2bf2:	91 1d       	adc	r25, r1
    2bf4:	08 95       	ret

00002bf6 <_exit>:
    2bf6:	f8 94       	cli

00002bf8 <__stop_program>:
    2bf8:	ff cf       	rjmp	.-2      	; 0x2bf8 <__stop_program>
