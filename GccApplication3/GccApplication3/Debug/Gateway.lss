
Gateway.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000408  00800100  0000406c  00004100  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000406c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800508  00800508  00004508  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004508  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004538  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003e8  00000000  00000000  00004578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009f5c  00000000  00000000  00004960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001921  00000000  00000000  0000e8bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c5e  00000000  00000000  000101dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000139c  00000000  00000000  00012e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001311  00000000  00000000  000141d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000074e7  00000000  00000000  000154e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003e0  00000000  00000000  0001c9d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a9 c1       	rjmp	.+850    	; 0x354 <__ctors_end>
       2:	00 00       	nop
       4:	c6 c1       	rjmp	.+908    	; 0x392 <__bad_interrupt>
       6:	00 00       	nop
       8:	c4 c1       	rjmp	.+904    	; 0x392 <__bad_interrupt>
       a:	00 00       	nop
       c:	c2 c1       	rjmp	.+900    	; 0x392 <__bad_interrupt>
       e:	00 00       	nop
      10:	c0 c1       	rjmp	.+896    	; 0x392 <__bad_interrupt>
      12:	00 00       	nop
      14:	be c1       	rjmp	.+892    	; 0x392 <__bad_interrupt>
      16:	00 00       	nop
      18:	bc c1       	rjmp	.+888    	; 0x392 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ba c1       	rjmp	.+884    	; 0x392 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0c 94 fd 11 	jmp	0x23fa	; 0x23fa <__vector_8>
      24:	b6 c1       	rjmp	.+876    	; 0x392 <__bad_interrupt>
      26:	00 00       	nop
      28:	b4 c1       	rjmp	.+872    	; 0x392 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b2 c1       	rjmp	.+868    	; 0x392 <__bad_interrupt>
      2e:	00 00       	nop
      30:	b0 c1       	rjmp	.+864    	; 0x392 <__bad_interrupt>
      32:	00 00       	nop
      34:	ae c1       	rjmp	.+860    	; 0x392 <__bad_interrupt>
      36:	00 00       	nop
      38:	ac c1       	rjmp	.+856    	; 0x392 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	aa c1       	rjmp	.+852    	; 0x392 <__bad_interrupt>
      3e:	00 00       	nop
      40:	a8 c1       	rjmp	.+848    	; 0x392 <__bad_interrupt>
      42:	00 00       	nop
      44:	a6 c1       	rjmp	.+844    	; 0x392 <__bad_interrupt>
      46:	00 00       	nop
      48:	a4 c1       	rjmp	.+840    	; 0x392 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a2 c1       	rjmp	.+836    	; 0x392 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a0 c1       	rjmp	.+832    	; 0x392 <__bad_interrupt>
      52:	00 00       	nop
      54:	9e c1       	rjmp	.+828    	; 0x392 <__bad_interrupt>
      56:	00 00       	nop
      58:	9c c1       	rjmp	.+824    	; 0x392 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	9a c1       	rjmp	.+820    	; 0x392 <__bad_interrupt>
      5e:	00 00       	nop
      60:	98 c1       	rjmp	.+816    	; 0x392 <__bad_interrupt>
      62:	00 00       	nop
      64:	96 c1       	rjmp	.+812    	; 0x392 <__bad_interrupt>
      66:	00 00       	nop
      68:	94 c1       	rjmp	.+808    	; 0x392 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	92 c1       	rjmp	.+804    	; 0x392 <__bad_interrupt>
      6e:	00 00       	nop
      70:	90 c1       	rjmp	.+800    	; 0x392 <__bad_interrupt>
      72:	00 00       	nop
      74:	8e c1       	rjmp	.+796    	; 0x392 <__bad_interrupt>
      76:	00 00       	nop
      78:	8c c1       	rjmp	.+792    	; 0x392 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8a c1       	rjmp	.+788    	; 0x392 <__bad_interrupt>
      7e:	00 00       	nop
      80:	88 c1       	rjmp	.+784    	; 0x392 <__bad_interrupt>
      82:	00 00       	nop
      84:	86 c1       	rjmp	.+780    	; 0x392 <__bad_interrupt>
      86:	00 00       	nop
      88:	84 c1       	rjmp	.+776    	; 0x392 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	82 c1       	rjmp	.+772    	; 0x392 <__bad_interrupt>
      8e:	00 00       	nop
      90:	80 c1       	rjmp	.+768    	; 0x392 <__bad_interrupt>
	...

00000094 <__trampolines_end>:
      94:	22 ae       	std	Z+58, r2	; 0x3a
      96:	28 d7       	rcall	.+3664   	; 0xee8 <uECC_vli_modMult+0x120>
      98:	98 2f       	mov	r25, r24
      9a:	8a 42       	sbci	r24, 0x2A	; 42
      9c:	cd 65       	ori	r28, 0x5D	; 93
      9e:	ef 23       	and	r30, r31
      a0:	91 44       	sbci	r25, 0x41	; 65
      a2:	37 71       	andi	r19, 0x17	; 23
      a4:	2f 3b       	cpi	r18, 0xBF	; 191
      a6:	4d ec       	ldi	r20, 0xCD	; 205
      a8:	cf fb       	.word	0xfbcf	; ????
      aa:	c0 b5       	in	r28, 0x20	; 32
      ac:	bc db       	rcall	.-2184   	; 0xfffff826 <__eeprom_end+0xff7ef826>
      ae:	89 81       	ldd	r24, Y+1	; 0x01
      b0:	a5 db       	rcall	.-2230   	; 0xfffff7fc <__eeprom_end+0xff7ef7fc>
      b2:	b5 e9       	ldi	r27, 0x95	; 149
      b4:	38 b5       	in	r19, 0x28	; 40
      b6:	48 f3       	brcs	.-46     	; 0x8a <__SREG__+0x4b>
      b8:	5b c2       	rjmp	.+1206   	; 0x570 <can_receive_message+0x66>
      ba:	56 39       	cpi	r21, 0x96	; 150
      bc:	19 d0       	rcall	.+50     	; 0xf0 <__trampolines_end+0x5c>
      be:	05 b6       	in	r0, 0x35	; 53
      c0:	f1 11       	cpse	r31, r1
      c2:	f1 59       	subi	r31, 0x91	; 145
      c4:	9b 4f       	sbci	r25, 0xFB	; 251
      c6:	19 af       	std	Y+57, r17	; 0x39
      c8:	a4 82       	std	Z+4, r10	; 0x04
      ca:	3f 92       	push	r3
      cc:	18 81       	ld	r17, Y
      ce:	6d da       	rcall	.-2854   	; 0xfffff5aa <__eeprom_end+0xff7ef5aa>
      d0:	d5 5e       	subi	r29, 0xE5	; 229
      d2:	1c ab       	std	Y+52, r17	; 0x34
      d4:	42 02       	muls	r20, r18
      d6:	03 a3       	std	Z+35, r16	; 0x23
      d8:	98 aa       	std	Y+48, r9	; 0x30
      da:	07 d8       	rcall	.-4082   	; 0xfffff0ea <__eeprom_end+0xff7ef0ea>
      dc:	be 6f       	ori	r27, 0xFE	; 254
      de:	70 45       	sbci	r23, 0x50	; 80
      e0:	01 5b       	subi	r16, 0xB1	; 177
      e2:	83 12       	cpse	r8, r19
      e4:	8c b2       	in	r8, 0x1c	; 28
      e6:	e4 4e       	sbci	r30, 0xE4	; 228
      e8:	be 85       	ldd	r27, Y+14	; 0x0e
      ea:	31 24       	eor	r3, r1
      ec:	e2 b4       	in	r14, 0x22	; 34
      ee:	ff d5       	rcall	.+3070   	; 0xcee <uECC_vli_numBits+0x5c>
      f0:	c3 7d       	andi	r28, 0xD3	; 211
      f2:	0c 55       	subi	r16, 0x5C	; 92
      f4:	6f 89       	ldd	r22, Y+23	; 0x17
      f6:	7b f2       	brvs	.-98     	; 0x96 <__trampolines_end+0x2>
      f8:	74 5d       	subi	r23, 0xD4	; 212
      fa:	be 72       	andi	r27, 0x2E	; 46
      fc:	b1 96       	adiw	r30, 0x21	; 33
      fe:	16 3b       	cpi	r17, 0xB6	; 182
     100:	fe b1       	in	r31, 0x0e	; 14
     102:	de 80       	ldd	r13, Y+6	; 0x06
     104:	35 12       	cpse	r3, r21
     106:	c7 25       	eor	r28, r7
     108:	a7 06       	cpc	r10, r23
     10a:	dc 9b       	sbis	0x1b, 4	; 27
     10c:	94 26       	eor	r9, r20
     10e:	69 cf       	rjmp	.-302    	; 0xffffffe2 <__eeprom_end+0xff7effe2>
     110:	74 f1       	brlt	.+92     	; 0x16e <__trampolines_end+0xda>
     112:	9b c1       	rjmp	.+822    	; 0x44a <can_get_id+0x1a>
     114:	d2 4a       	sbci	r29, 0xA2	; 162
     116:	f1 9e       	mul	r15, r17
     118:	c1 69       	ori	r28, 0x91	; 145
     11a:	9b e4       	ldi	r25, 0x4B	; 75
     11c:	e3 25       	eor	r30, r3
     11e:	4f 38       	cpi	r20, 0x8F	; 143
     120:	86 47       	sbci	r24, 0x76	; 118
     122:	be ef       	ldi	r27, 0xFE	; 254
     124:	b5 d5       	rcall	.+2922   	; 0xc90 <uECC_vli_testBit+0x2a>
     126:	8c 8b       	std	Y+20, r24	; 0x14
     128:	c6 9d       	mul	r28, r6
     12a:	c1 0f       	add	r28, r17
     12c:	65 9c       	mul	r6, r5
     12e:	ac 77       	andi	r26, 0x7C	; 124
     130:	cc a1       	ldd	r28, Y+36	; 0x24
     132:	0c 24       	eor	r0, r12
     134:	75 02       	muls	r23, r21
     136:	2b 59       	subi	r18, 0x9B	; 155
     138:	6f 2c       	mov	r6, r15
     13a:	e9 2d       	mov	r30, r9
     13c:	83 e4       	ldi	r24, 0x43	; 67
     13e:	a6 6e       	ori	r26, 0xE6	; 230
     140:	aa 84       	ldd	r10, Y+10	; 0x0a
     142:	74 4a       	sbci	r23, 0xA4	; 164
     144:	d4 fb       	bst	r29, 4
     146:	41 bd       	out	0x21, r20	; 33
     148:	dc a9       	ldd	r29, Y+52	; 0x34
     14a:	b0 5c       	subi	r27, 0xC0	; 192
     14c:	b5 53       	subi	r27, 0x35	; 53
     14e:	11 83       	std	Z+1, r17	; 0x01
     150:	da 88       	ldd	r13, Y+18	; 0x12
     152:	f9 76       	andi	r31, 0x69	; 105
     154:	ab df       	rcall	.-170    	; 0xac <__trampolines_end+0x18>
     156:	66 ee       	ldi	r22, 0xE6	; 230
     158:	52 51       	subi	r21, 0x12	; 18
     15a:	3e 98       	cbi	0x07, 6	; 7
     15c:	10 32       	cpi	r17, 0x20	; 32
     15e:	b4 2d       	mov	r27, r4
     160:	6d c6       	rjmp	.+3290   	; 0xe3c <uECC_vli_modMult+0x74>
     162:	31 a8       	ldd	r3, Z+49	; 0x31
     164:	3f 21       	and	r19, r15
     166:	fb 98       	cbi	0x1f, 3	; 31
     168:	c8 27       	eor	r28, r24
     16a:	03 b0       	in	r0, 0x03	; 3
     16c:	e4 0e       	add	r14, r20
     16e:	ef be       	out	0x3f, r14	; 63
     170:	c7 7f       	andi	r28, 0xF7	; 247
     172:	59 bf       	out	0x39, r21	; 57
     174:	c2 8f       	std	Z+26, r28	; 0x1a
     176:	a8 3d       	cpi	r26, 0xD8	; 216
     178:	f3 0b       	sbc	r31, r19
     17a:	e0 c6       	rjmp	.+3520   	; 0xf3c <uECC_vli_modMult+0x174>
     17c:	25 a7       	std	Z+45, r18	; 0x2d
     17e:	0a 93       	st	-Y, r16
     180:	47 91       	elpm	r20, Z+
     182:	a7 d5       	rcall	.+2894   	; 0xcd2 <uECC_vli_numBits+0x40>
     184:	6f 82       	std	Y+7, r6	; 0x07
     186:	03 e0       	ldi	r16, 0x03	; 3
     188:	51 63       	ori	r21, 0x31	; 49
     18a:	ca 06       	cpc	r12, r26
     18c:	70 6e       	ori	r23, 0xE0	; 224
     18e:	0e 0a       	sbc	r0, r30
     190:	67 29       	or	r22, r7
     192:	29 14       	cp	r2, r9
     194:	fc 2f       	mov	r31, r28
     196:	d2 46       	sbci	r29, 0x62	; 98
     198:	85 0a       	sbc	r8, r21
     19a:	b7 27       	eor	r27, r23
     19c:	26 c9       	rjmp	.-3508   	; 0xfffff3ea <__eeprom_end+0xff7ef3ea>
     19e:	26 5c       	subi	r18, 0xC6	; 198
     1a0:	38 21       	and	r19, r8
     1a2:	1b 2e       	mov	r1, r27
     1a4:	ed 2a       	or	r14, r29
     1a6:	c4 5a       	subi	r28, 0xA4	; 164
     1a8:	fc 6d       	ori	r31, 0xDC	; 220
     1aa:	2c 4d       	sbci	r18, 0xDC	; 220
     1ac:	df b3       	in	r29, 0x1f	; 31
     1ae:	95 9d       	mul	r25, r5
     1b0:	13 0d       	add	r17, r3
     1b2:	38 53       	subi	r19, 0x38	; 56
     1b4:	de 63       	ori	r29, 0x3E	; 62
     1b6:	af 8b       	std	Y+23, r26	; 0x17
     1b8:	54 73       	andi	r21, 0x34	; 52
     1ba:	0a 65       	ori	r16, 0x5A	; 90
     1bc:	a8 b2       	in	r10, 0x18	; 24
     1be:	77 3c       	cpi	r23, 0xC7	; 199
     1c0:	bb 0a       	sbc	r11, r27
     1c2:	6a 76       	andi	r22, 0x6A	; 106
     1c4:	e6 ae       	std	Z+62, r14	; 0x3e
     1c6:	ed 47       	sbci	r30, 0x7D	; 125
     1c8:	2e c9       	rjmp	.-3492   	; 0xfffff426 <__eeprom_end+0xff7ef426>
     1ca:	c2 81       	ldd	r28, Z+2	; 0x02
     1cc:	3b 35       	cpi	r19, 0x5B	; 91
     1ce:	82 14       	cp	r8, r2
     1d0:	85 2c       	mov	r8, r5
     1d2:	72 92       	st	-Z, r7
     1d4:	64 03       	mulsu	r22, r20
     1d6:	f1 4c       	sbci	r31, 0xC1	; 193
     1d8:	a1 e8       	ldi	r26, 0x81	; 129
     1da:	bf a2       	std	Y+39, r11	; 0x27
     1dc:	01 30       	cpi	r16, 0x01	; 1
     1de:	42 bc       	out	0x22, r4	; 34
     1e0:	4b 66       	ori	r20, 0x6B	; 107
     1e2:	1a a8       	ldd	r1, Y+50	; 0x32
     1e4:	91 97       	sbiw	r26, 0x21	; 33
     1e6:	f8 d0       	rcall	.+496    	; 0x3d8 <can_init+0x44>
     1e8:	70 8b       	std	Z+16, r23	; 0x10
     1ea:	4b c2       	rjmp	.+1174   	; 0x682 <can_receive_frame_buffer+0xb6>
     1ec:	30 be       	out	0x30, r3	; 48
     1ee:	54 06       	cpc	r5, r20
     1f0:	a3 51       	subi	r26, 0x13	; 19
     1f2:	6c c7       	rjmp	.+3800   	; 0x10cc <uECC_vli_modMult+0x304>
     1f4:	18 52       	subi	r17, 0x28	; 40
     1f6:	ef d6       	rcall	.+3550   	; 0xfd6 <uECC_vli_modMult+0x20e>
     1f8:	19 e8       	ldi	r17, 0x89	; 137
     1fa:	92 d1       	rcall	.+804    	; 0x520 <can_receive_message+0x16>
     1fc:	10 a9       	ldd	r17, Z+48	; 0x30
     1fe:	65 55       	subi	r22, 0x55	; 85
     200:	24 06       	cpc	r2, r20
     202:	99 d6       	rcall	.+3378   	; 0xf36 <uECC_vli_modMult+0x16e>
     204:	2a 20       	and	r2, r10
     206:	71 57       	subi	r23, 0x71	; 113
     208:	85 35       	cpi	r24, 0x55	; 85
     20a:	0e f4       	brtc	.+2      	; 0x20e <__trampolines_end+0x17a>
     20c:	b8 d1       	rcall	.+880    	; 0x57e <can_receive_message+0x74>
     20e:	bb 32       	cpi	r27, 0x2B	; 43
     210:	70 a0       	ldd	r7, Z+32	; 0x20
     212:	6a 10       	cpse	r6, r10
     214:	c8 d0       	rcall	.+400    	; 0x3a6 <can_init+0x12>
     216:	d2 b8       	out	0x02, r13	; 2
     218:	16 c1       	rjmp	.+556    	; 0x446 <can_get_id+0x16>
     21a:	a4 19       	sub	r26, r4
     21c:	53 ab       	std	Z+51, r21	; 0x33
     21e:	41 51       	subi	r20, 0x11	; 17
     220:	08 6c       	ori	r16, 0xC8	; 200
     222:	37 1e       	adc	r3, r23
     224:	99 eb       	ldi	r25, 0xB9	; 185
     226:	8e df       	rcall	.-228    	; 0x144 <__trampolines_end+0xb0>
     228:	4c 77       	andi	r20, 0x7C	; 124
     22a:	48 27       	eor	r20, r24
     22c:	a8 48       	sbci	r26, 0x88	; 136
     22e:	9b e1       	ldi	r25, 0x1B	; 27
     230:	b5 bc       	out	0x25, r11	; 37
     232:	b0 34       	cpi	r27, 0x40	; 64
     234:	63 5a       	subi	r22, 0xA3	; 163
     236:	c9 c5       	rjmp	.+2962   	; 0xdca <uECC_vli_modMult+0x2>
     238:	b3 0c       	add	r11, r3
     23a:	1c 39       	cpi	r17, 0x9C	; 156
     23c:	cb 8a       	std	Y+19, r12	; 0x13
     23e:	41 e3       	ldi	r20, 0x31	; 49
     240:	4a aa       	std	Y+50, r4	; 0x32
     242:	d8 4e       	sbci	r29, 0xE8	; 232
     244:	73 e3       	ldi	r23, 0x33	; 51
     246:	63 77       	andi	r22, 0x73	; 115
     248:	4f ca       	rjmp	.-2914   	; 0xfffff6e8 <__eeprom_end+0xff7ef6e8>
     24a:	9c 5b       	subi	r25, 0xBC	; 188
     24c:	a3 b8       	out	0x03, r10	; 3
     24e:	b2 d6       	rcall	.+3428   	; 0xfb4 <uECC_vli_modMult+0x1ec>
     250:	f3 6f       	ori	r31, 0xF3	; 243
     252:	2e 68       	ori	r18, 0x8E	; 142
     254:	fc b2       	in	r15, 0x1c	; 28
     256:	ef 5d       	subi	r30, 0xDF	; 223
     258:	ee 82       	std	Y+6, r14	; 0x06
     25a:	8f 74       	andi	r24, 0x4F	; 79
     25c:	60 2f       	mov	r22, r16
     25e:	17 43       	sbci	r17, 0x37	; 55
     260:	6f 63       	ori	r22, 0x3F	; 63
     262:	a5 78       	andi	r26, 0x85	; 133
     264:	72 ab       	std	Z+50, r23	; 0x32
     266:	f0 a1       	ldd	r31, Z+32	; 0x20
     268:	14 78       	andi	r17, 0x84	; 132
     26a:	c8 84       	ldd	r12, Y+8	; 0x08
     26c:	ec 39       	cpi	r30, 0x9C	; 156
     26e:	64 1a       	sub	r6, r20
     270:	08 02       	muls	r16, r24
     272:	c7 8c       	ldd	r12, Z+31	; 0x1f
     274:	28 1e       	adc	r2, r24
     276:	63 23       	and	r22, r19
     278:	fa ff       	.word	0xfffa	; ????
     27a:	be 90       	ld	r11, -X
     27c:	e9 bd       	out	0x29, r30	; 41
     27e:	82 de       	rcall	.-764    	; 0xffffff84 <__eeprom_end+0xff7eff84>
     280:	eb 6c       	ori	r30, 0xCB	; 203
     282:	50 a4       	ldd	r5, Z+40	; 0x28
     284:	15 79       	andi	r17, 0x95	; 149
     286:	c6 b2       	in	r12, 0x16	; 22
     288:	f7 a3       	std	Z+39, r31	; 0x27
     28a:	f9 be       	out	0x39, r15	; 57
     28c:	2b 53       	subi	r18, 0x3B	; 59
     28e:	72 e3       	ldi	r23, 0x32	; 50
     290:	f2 78       	andi	r31, 0x82	; 130
     292:	71 c6       	rjmp	.+3298   	; 0xf76 <uECC_vli_modMult+0x1ae>
     294:	9c 61       	ori	r25, 0x1C	; 28
     296:	26 ea       	ldi	r18, 0xA6	; 166
     298:	ce 3e       	cpi	r28, 0xEE	; 238
     29a:	27 ca       	rjmp	.-2994   	; 0xfffff6ea <__eeprom_end+0xff7ef6ea>
     29c:	07 c2       	rjmp	.+1038   	; 0x6ac <can_receive_frame_buffer+0xe0>
     29e:	c0 21       	and	r28, r0
     2a0:	c7 b8       	out	0x07, r12	; 7
     2a2:	86 d1       	rcall	.+780    	; 0x5b0 <can_send_frame_buffer+0x14>
     2a4:	1e eb       	ldi	r17, 0xBE	; 190
     2a6:	e0 cd       	rjmp	.-1088   	; 0xfffffe68 <__eeprom_end+0xff7efe68>
     2a8:	d6 7d       	andi	r29, 0xD6	; 214
     2aa:	da ea       	ldi	r29, 0xAA	; 170
     2ac:	78 d1       	rcall	.+752    	; 0x59e <can_send_frame_buffer+0x2>
     2ae:	6e ee       	ldi	r22, 0xEE	; 238
     2b0:	7f 4f       	sbci	r23, 0xFF	; 255
     2b2:	7d f5       	brhc	.+94     	; 0x312 <__trampolines_end+0x27e>
     2b4:	ba 6f       	ori	r27, 0xFA	; 250
     2b6:	17 72       	andi	r17, 0x27	; 39
     2b8:	aa 67       	ori	r26, 0x7A	; 122
     2ba:	f0 06       	cpc	r15, r16
     2bc:	a6 98       	cbi	0x14, 6	; 20
     2be:	c8 a2       	std	Y+32, r12	; 0x20
     2c0:	c5 7d       	andi	r28, 0xD5	; 213
     2c2:	63 0a       	sbc	r6, r19
     2c4:	ae 0d       	add	r26, r14
     2c6:	f9 be       	out	0x39, r15	; 57
     2c8:	04 98       	cbi	0x00, 4	; 0
     2ca:	3f 11       	cpse	r19, r15
     2cc:	1b 47       	sbci	r17, 0x7B	; 123
     2ce:	1c 13       	cpse	r17, r28
     2d0:	35 0b       	sbc	r19, r21
     2d2:	71 1b       	sub	r23, r17
     2d4:	84 7d       	andi	r24, 0xD4	; 212
     2d6:	04 23       	and	r16, r20
     2d8:	f5 77       	andi	r31, 0x75	; 117
     2da:	db 28       	or	r13, r11
     2dc:	93 24       	eor	r9, r3
     2de:	c7 40       	sbci	r28, 0x07	; 7
     2e0:	7b ab       	std	Y+51, r23	; 0x33
     2e2:	ca 32       	cpi	r28, 0x2A	; 42
     2e4:	bc be       	out	0x3c, r11	; 60
     2e6:	c9 15       	cp	r28, r9
     2e8:	0a be       	out	0x3a, r0	; 58
     2ea:	9e 3c       	cpi	r25, 0xCE	; 206
     2ec:	4c 0d       	add	r20, r12
     2ee:	10 9c       	mul	r1, r0
     2f0:	c4 67       	ori	r28, 0x74	; 116
     2f2:	1d 43       	sbci	r17, 0x3D	; 61
     2f4:	b6 42       	sbci	r27, 0x26	; 38
     2f6:	3e cb       	rjmp	.-2436   	; 0xfffff974 <__eeprom_end+0xff7ef974>
     2f8:	be d4       	rcall	.+2428   	; 0xc76 <uECC_vli_testBit+0x10>
     2fa:	c5 4c       	sbci	r28, 0xC5	; 197
     2fc:	2a 7e       	andi	r18, 0xEA	; 234
     2fe:	65 fc       	sbrc	r6, 5
     300:	9c 29       	or	r25, r12
     302:	7f 59       	subi	r23, 0x9F	; 159
     304:	ec fa       	.word	0xfaec	; ????
     306:	d6 3a       	cpi	r29, 0xA6	; 166
     308:	ab 6f       	ori	r26, 0xFB	; 251
     30a:	cb 5f       	subi	r28, 0xFB	; 251
     30c:	17 58       	subi	r17, 0x87	; 135
     30e:	47 4a       	sbci	r20, 0xA7	; 167
     310:	8c 19       	sub	r24, r12
     312:	44 6c       	ori	r20, 0xC4	; 196

00000314 <sha512_init_values>:
     314:	08 c9 bc f3 67 e6 09 6a 3b a7 ca 84 85 ae 67 bb     ....g..j;.....g.
     324:	2b f8 94 fe 72 f3 6e 3c f1 36 1d 5f 3a f5 4f a5     +...r.n<.6._:.O.
     334:	d1 82 e6 ad 7f 52 0e 51 1f 6c 3e 2b 8c 68 05 9b     .....R.Q.l>+.h..
     344:	6b bd 41 fb ab d9 83 1f 79 21 7e 13 19 cd e0 5b     k.A.....y!~....[

00000354 <__ctors_end>:
     354:	11 24       	eor	r1, r1
     356:	1f be       	out	0x3f, r1	; 63
     358:	cf ef       	ldi	r28, 0xFF	; 255
     35a:	d0 e1       	ldi	r29, 0x10	; 16
     35c:	de bf       	out	0x3e, r29	; 62
     35e:	cd bf       	out	0x3d, r28	; 61

00000360 <__do_copy_data>:
     360:	15 e0       	ldi	r17, 0x05	; 5
     362:	a0 e0       	ldi	r26, 0x00	; 0
     364:	b1 e0       	ldi	r27, 0x01	; 1
     366:	ec e6       	ldi	r30, 0x6C	; 108
     368:	f0 e4       	ldi	r31, 0x40	; 64
     36a:	00 e0       	ldi	r16, 0x00	; 0
     36c:	0b bf       	out	0x3b, r16	; 59
     36e:	02 c0       	rjmp	.+4      	; 0x374 <__do_copy_data+0x14>
     370:	07 90       	elpm	r0, Z+
     372:	0d 92       	st	X+, r0
     374:	a8 30       	cpi	r26, 0x08	; 8
     376:	b1 07       	cpc	r27, r17
     378:	d9 f7       	brne	.-10     	; 0x370 <__do_copy_data+0x10>

0000037a <__do_clear_bss>:
     37a:	25 e0       	ldi	r18, 0x05	; 5
     37c:	a8 e0       	ldi	r26, 0x08	; 8
     37e:	b5 e0       	ldi	r27, 0x05	; 5
     380:	01 c0       	rjmp	.+2      	; 0x384 <.do_clear_bss_start>

00000382 <.do_clear_bss_loop>:
     382:	1d 92       	st	X+, r1

00000384 <.do_clear_bss_start>:
     384:	af 30       	cpi	r26, 0x0F	; 15
     386:	b2 07       	cpc	r27, r18
     388:	e1 f7       	brne	.-8      	; 0x382 <.do_clear_bss_loop>
     38a:	0e 94 ff 12 	call	0x25fe	; 0x25fe <main>
     38e:	0c 94 34 20 	jmp	0x4068	; 0x4068 <_exit>

00000392 <__bad_interrupt>:
     392:	36 ce       	rjmp	.-916    	; 0x0 <__vectors>

00000394 <can_init>:
	uint8_t message[8] = {0};
	can_get_message(mobnr , message);
	char hex[16] = "";
	bytes_to_hex(message, 8, hex);
	uart_puts(hex);
}
     394:	cf 93       	push	r28
     396:	df 93       	push	r29
     398:	f8 94       	cli
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3a0:	84 e3       	ldi	r24, 0x34	; 52
     3a2:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     3a6:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	cd ee       	ldi	r28, 0xED	; 237
     3ae:	d0 e0       	ldi	r29, 0x00	; 0
     3b0:	af ee       	ldi	r26, 0xEF	; 239
     3b2:	b0 e0       	ldi	r27, 0x00	; 0
     3b4:	ee ee       	ldi	r30, 0xEE	; 238
     3b6:	f0 e0       	ldi	r31, 0x00	; 0
     3b8:	98 2f       	mov	r25, r24
     3ba:	92 95       	swap	r25
     3bc:	90 7f       	andi	r25, 0xF0	; 240
     3be:	98 83       	st	Y, r25
     3c0:	1c 92       	st	X, r1
     3c2:	10 82       	st	Z, r1
     3c4:	8f 5f       	subi	r24, 0xFF	; 255
     3c6:	8f 30       	cpi	r24, 0x0F	; 15
     3c8:	b9 f7       	brne	.-18     	; 0x3b8 <can_init+0x24>
     3ca:	86 e0       	ldi	r24, 0x06	; 6
     3cc:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     3d0:	8c e0       	ldi	r24, 0x0C	; 12
     3d2:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     3d6:	87 e3       	ldi	r24, 0x37	; 55
     3d8:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     3dc:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
     3e0:	82 e0       	ldi	r24, 0x02	; 2
     3e2:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3e6:	78 94       	sei
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <can_get_message>:
     3ee:	fb 01       	movw	r30, r22
     3f0:	82 95       	swap	r24
     3f2:	80 7f       	andi	r24, 0xF0	; 240
     3f4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     3f8:	9b 01       	movw	r18, r22
     3fa:	28 5f       	subi	r18, 0xF8	; 248
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	aa ef       	ldi	r26, 0xFA	; 250
     400:	b0 e0       	ldi	r27, 0x00	; 0
     402:	8c 91       	ld	r24, X
     404:	81 93       	st	Z+, r24
     406:	2e 17       	cp	r18, r30
     408:	3f 07       	cpc	r19, r31
     40a:	d9 f7       	brne	.-10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     40c:	08 95       	ret

0000040e <can_get_frame_buffer>:
     40e:	0f 93       	push	r16
     410:	1f 93       	push	r17
     412:	cf 93       	push	r28
     414:	8c 01       	movw	r16, r24
     416:	c0 e0       	ldi	r28, 0x00	; 0
     418:	b8 01       	movw	r22, r16
     41a:	8c 2f       	mov	r24, r28
     41c:	e8 df       	rcall	.-48     	; 0x3ee <can_get_message>
     41e:	08 5f       	subi	r16, 0xF8	; 248
     420:	1f 4f       	sbci	r17, 0xFF	; 255
     422:	cf 5f       	subi	r28, 0xFF	; 255
     424:	c8 30       	cpi	r28, 0x08	; 8
     426:	c1 f7       	brne	.-16     	; 0x418 <can_get_frame_buffer+0xa>
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	0f 91       	pop	r16
     42e:	08 95       	ret

00000430 <can_get_id>:

void can_get_id(uint8_t mobnr, can_id_t id){
	CANPAGE = (mobnr << 4);
     430:	82 95       	swap	r24
     432:	80 7f       	andi	r24, 0xF0	; 240
     434:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	id[0] = CANIDT2 >> 5 | CANIDT1 << 3;
     438:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     43c:	e3 ef       	ldi	r30, 0xF3	; 243
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	92 95       	swap	r25
     444:	96 95       	lsr	r25
     446:	97 70       	andi	r25, 0x07	; 7
     448:	88 0f       	add	r24, r24
     44a:	88 0f       	add	r24, r24
     44c:	88 0f       	add	r24, r24
     44e:	89 2b       	or	r24, r25
     450:	db 01       	movw	r26, r22
     452:	8c 93       	st	X, r24
	id[1] = CANIDT1 >> 5;
     454:	80 81       	ld	r24, Z
     456:	82 95       	swap	r24
     458:	86 95       	lsr	r24
     45a:	87 70       	andi	r24, 0x07	; 7
     45c:	11 96       	adiw	r26, 0x01	; 1
     45e:	8c 93       	st	X, r24
     460:	08 95       	ret

00000462 <can_init_id>:
}

void can_init_id ( can_id_t id){
     462:	fc 01       	movw	r30, r24
	CANIDT2 = id[0] << 5;
     464:	80 81       	ld	r24, Z
     466:	82 95       	swap	r24
     468:	88 0f       	add	r24, r24
     46a:	80 7e       	andi	r24, 0xE0	; 224
     46c:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = id[0] >> 3 | id[1] << 5;
     470:	20 81       	ld	r18, Z
     472:	26 95       	lsr	r18
     474:	26 95       	lsr	r18
     476:	26 95       	lsr	r18
     478:	91 81       	ldd	r25, Z+1	; 0x01
     47a:	30 e2       	ldi	r19, 0x20	; 32
     47c:	93 9f       	mul	r25, r19
     47e:	c0 01       	movw	r24, r0
     480:	11 24       	eor	r1, r1
     482:	82 2b       	or	r24, r18
     484:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	//not a remote frame.
	CANIDT4 = 0 << RTRTAG;
     488:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     48c:	08 95       	ret

0000048e <can_init_mask>:
	CANIDM2 = 255;
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}
*/

void can_init_mask (can_mask_t mask){
     48e:	fc 01       	movw	r30, r24
	CANIDM2 = mask[0] << 5;
     490:	80 81       	ld	r24, Z
     492:	82 95       	swap	r24
     494:	88 0f       	add	r24, r24
     496:	80 7e       	andi	r24, 0xE0	; 224
     498:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
	CANIDM1 = mask[0] >> 3 | mask[1] << 5;
     49c:	20 81       	ld	r18, Z
     49e:	26 95       	lsr	r18
     4a0:	26 95       	lsr	r18
     4a2:	26 95       	lsr	r18
     4a4:	91 81       	ldd	r25, Z+1	; 0x01
     4a6:	30 e2       	ldi	r19, 0x20	; 32
     4a8:	93 9f       	mul	r25, r19
     4aa:	c0 01       	movw	r24, r0
     4ac:	11 24       	eor	r1, r1
     4ae:	82 2b       	or	r24, r18
     4b0:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
	//RTRMSK = 0 : We don't use remote frames ever.
	//IDEMSK = 0 : we don't use the extended format.
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
     4b4:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
     4b8:	08 95       	ret

000004ba <can_init_message>:
}

void can_init_message( uint8_t *message ){
     4ba:	fc 01       	movw	r30, r24
     4bc:	9c 01       	movw	r18, r24
     4be:	28 5f       	subi	r18, 0xF8	; 248
     4c0:	3f 4f       	sbci	r19, 0xFF	; 255
	uint8_t j;
	for(j=0; j<8; j++){
		CANMSG = *message;
     4c2:	aa ef       	ldi	r26, 0xFA	; 250
     4c4:	b0 e0       	ldi	r27, 0x00	; 0
     4c6:	81 91       	ld	r24, Z+
     4c8:	8c 93       	st	X, r24
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}

void can_init_message( uint8_t *message ){
	uint8_t j;
	for(j=0; j<8; j++){
     4ca:	2e 17       	cp	r18, r30
     4cc:	3f 07       	cpc	r19, r31
     4ce:	d9 f7       	brne	.-10     	; 0x4c6 <can_init_message+0xc>
		CANMSG = *message;
		message++;
	}
}
     4d0:	08 95       	ret

000004d2 <can_send_message>:

int can_send_message( uint8_t mobnr , can_id_t id, can_msg_t message ){
     4d2:	cf 93       	push	r28
     4d4:	df 93       	push	r29
     4d6:	ea 01       	movw	r28, r20
	//select mob.
	CANPAGE = (mobnr << 4);
     4d8:	82 95       	swap	r24
     4da:	80 7f       	andi	r24, 0xF0	; 240
     4dc:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	//copy ID.
	can_init_id(id);
     4e0:	cb 01       	movw	r24, r22
     4e2:	bf df       	rcall	.-130    	; 0x462 <can_init_id>
	//copy message.
	can_init_message(message);
     4e4:	ce 01       	movw	r24, r28
     4e6:	e9 df       	rcall	.-46     	; 0x4ba <can_init_message>
	//enable transmission.
	CANCDMOB = (1 << CONMOB0) | (1 << DLC3);
     4e8:	88 e4       	ldi	r24, 0x48	; 72
     4ea:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	//wait for transmission.
	while(CANSTMOB != (1 << TXOK));
     4ee:	ee ee       	ldi	r30, 0xEE	; 238
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	80 34       	cpi	r24, 0x40	; 64
     4f6:	e9 f7       	brne	.-6      	; 0x4f2 <can_send_message+0x20>
	//reset mob.
	CANSTMOB = 0x00;
     4f8:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	CANCDMOB = 0x00;
     4fc:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	return 0;
}
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	08 95       	ret

0000050a <can_receive_message>:

int can_receive_message( uint8_t mobnr, can_id_t id, can_mask_t mask, can_msg_t message){
     50a:	cf 92       	push	r12
     50c:	df 92       	push	r13
     50e:	ef 92       	push	r14
     510:	ff 92       	push	r15
     512:	0f 93       	push	r16
     514:	1f 93       	push	r17
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
     51a:	08 2f       	mov	r16, r24
     51c:	cb 01       	movw	r24, r22
     51e:	6a 01       	movw	r12, r20
     520:	79 01       	movw	r14, r18
	CANPAGE = (mobnr << 4);
     522:	10 2f       	mov	r17, r16
     524:	12 95       	swap	r17
     526:	10 7f       	andi	r17, 0xF0	; 240
     528:	cd ee       	ldi	r28, 0xED	; 237
     52a:	d0 e0       	ldi	r29, 0x00	; 0
     52c:	18 83       	st	Y, r17
	CANIE2 = (1 << mobnr);
     52e:	21 e0       	ldi	r18, 0x01	; 1
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	00 2e       	mov	r0, r16
     534:	02 c0       	rjmp	.+4      	; 0x53a <can_receive_message+0x30>
     536:	22 0f       	add	r18, r18
     538:	33 1f       	adc	r19, r19
     53a:	0a 94       	dec	r0
     53c:	e2 f7       	brpl	.-8      	; 0x536 <can_receive_message+0x2c>
     53e:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	can_init_id(id);
     542:	8f df       	rcall	.-226    	; 0x462 <can_init_id>
	can_init_mask(mask);
     544:	c6 01       	movw	r24, r12
     546:	a3 df       	rcall	.-186    	; 0x48e <can_init_mask>
	//CAN standard rev 2.0 A (identifiers length = 11 bits)
	CANCDMOB = (1 << CONMOB1) | (1 << DLC3); //enable reception and data length code = 8 bytes
     548:	88 e8       	ldi	r24, 0x88	; 136
     54a:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	
	CANPAGE = (mobnr << 4);
     54e:	18 83       	st	Y, r17
	CANPAGE = (mobnr << 4);
     550:	18 83       	st	Y, r17
	CANPAGE = (mobnr << 4);
     552:	18 83       	st	Y, r17
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     554:	ea ed       	ldi	r30, 0xDA	; 218
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	80 81       	ld	r24, Z
     55a:	88 23       	and	r24, r24
     55c:	ec f7       	brge	.-6      	; 0x558 <can_receive_message+0x4e>
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     55e:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     562:	85 ff       	sbrs	r24, 5
     564:	10 c0       	rjmp	.+32     	; 0x586 <can_receive_message+0x7c>
	//reset mob.
	CANSTMOB = 0x00;
     566:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	CANCDMOB = 0x00;
     56a:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	//reset interrupt enable
	CANIE2 = 0x00;
     56e:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	//reset interrupt register.
	CANGIT = CANGIT;
     572:	ea ed       	ldi	r30, 0xDA	; 218
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	80 81       	ld	r24, Z
     578:	80 83       	st	Z, r24
	//retrieve message.
	can_get_message(mobnr, message);
     57a:	b7 01       	movw	r22, r14
     57c:	80 2f       	mov	r24, r16
     57e:	37 df       	rcall	.-402    	; 0x3ee <can_get_message>
	return 0;
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	02 c0       	rjmp	.+4      	; 0x58a <can_receive_message+0x80>
	CANPAGE = (mobnr << 4);
	CANPAGE = (mobnr << 4);
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	90 e0       	ldi	r25, 0x00	; 0
	//reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_message(mobnr, message);
	return 0;
}
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	1f 91       	pop	r17
     590:	0f 91       	pop	r16
     592:	ff 90       	pop	r15
     594:	ef 90       	pop	r14
     596:	df 90       	pop	r13
     598:	cf 90       	pop	r12
     59a:	08 95       	ret

0000059c <can_send_frame_buffer>:

int can_send_frame_buffer( uint8_t *message, uint8_t buff_len ){
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	8c 01       	movw	r16, r24
     5a6:	c0 e0       	ldi	r28, 0x00	; 0
     5a8:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t j = buff_len;
	for(j=0; j<8; j++){
		can_send_message(j,j,message);
     5aa:	a8 01       	movw	r20, r16
     5ac:	be 01       	movw	r22, r28
     5ae:	8c 2f       	mov	r24, r28
     5b0:	90 df       	rcall	.-224    	; 0x4d2 <can_send_message>
		message = message + 8;
     5b2:	08 5f       	subi	r16, 0xF8	; 248
     5b4:	1f 4f       	sbci	r17, 0xFF	; 255
     5b6:	21 96       	adiw	r28, 0x01	; 1
	return 0;
}

int can_send_frame_buffer( uint8_t *message, uint8_t buff_len ){
	uint8_t j = buff_len;
	for(j=0; j<8; j++){
     5b8:	c8 30       	cpi	r28, 0x08	; 8
     5ba:	d1 05       	cpc	r29, r1
     5bc:	b1 f7       	brne	.-20     	; 0x5aa <can_send_frame_buffer+0xe>
		can_send_message(j,j,message);
		message = message + 8;
	}
	return 0;
}
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	1f 91       	pop	r17
     5c8:	0f 91       	pop	r16
     5ca:	08 95       	ret

000005cc <can_receive_frame_buffer>:

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
     5cc:	7f 92       	push	r7
     5ce:	8f 92       	push	r8
     5d0:	9f 92       	push	r9
     5d2:	af 92       	push	r10
     5d4:	bf 92       	push	r11
     5d6:	cf 92       	push	r12
     5d8:	df 92       	push	r13
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
     5de:	0f 93       	push	r16
     5e0:	1f 93       	push	r17
     5e2:	cf 93       	push	r28
     5e4:	df 93       	push	r29
     5e6:	00 d0       	rcall	.+0      	; 0x5e8 <can_receive_frame_buffer+0x1c>
     5e8:	cd b7       	in	r28, 0x3d	; 61
     5ea:	de b7       	in	r29, 0x3e	; 62
     5ec:	6c 01       	movw	r12, r24
     5ee:	e6 2e       	mov	r14, r22
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
     5f0:	eb ed       	ldi	r30, 0xDB	; 219
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	80 81       	ld	r24, Z
     5f6:	84 60       	ori	r24, 0x04	; 4
     5f8:	80 83       	st	Z, r24
     5fa:	00 e0       	ldi	r16, 0x00	; 0
     5fc:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t j = buff_len;
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     5fe:	0f 2e       	mov	r0, r31
     600:	fd ee       	ldi	r31, 0xED	; 237
     602:	8f 2e       	mov	r8, r31
     604:	91 2c       	mov	r9, r1
     606:	f0 2d       	mov	r31, r0
		can_init_id(j);
		// Mask = 255
		can_mask_t mask = { 255, 255 };
     608:	ff 24       	eor	r15, r15
     60a:	fa 94       	dec	r15
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     60c:	0f 2e       	mov	r0, r31
     60e:	ff ee       	ldi	r31, 0xEF	; 239
     610:	af 2e       	mov	r10, r31
     612:	b1 2c       	mov	r11, r1
     614:	f0 2d       	mov	r31, r0
     616:	0f 2e       	mov	r0, r31
     618:	f8 ec       	ldi	r31, 0xC8	; 200
     61a:	7f 2e       	mov	r7, r31
     61c:	f0 2d       	mov	r31, r0
int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
	uint8_t j = buff_len;
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     61e:	80 2f       	mov	r24, r16
     620:	82 95       	swap	r24
     622:	80 7f       	andi	r24, 0xF0	; 240
     624:	f4 01       	movw	r30, r8
     626:	80 83       	st	Z, r24
		can_init_id(j);
     628:	c8 01       	movw	r24, r16
     62a:	1b df       	rcall	.-458    	; 0x462 <can_init_id>
		// Mask = 255
		can_mask_t mask = { 255, 255 };
     62c:	f9 82       	std	Y+1, r15	; 0x01
     62e:	fa 82       	std	Y+2, r15	; 0x02
		can_init_mask(mask);
     630:	ce 01       	movw	r24, r28
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	2c df       	rcall	.-424    	; 0x48e <can_init_mask>
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     636:	f5 01       	movw	r30, r10
     638:	70 82       	st	Z, r7
     63a:	0f 5f       	subi	r16, 0xFF	; 255
     63c:	1f 4f       	sbci	r17, 0xFF	; 255

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
	uint8_t j = buff_len;
	for(j=0; j<8; j++){
     63e:	08 30       	cpi	r16, 0x08	; 8
     640:	11 05       	cpc	r17, r1
     642:	69 f7       	brne	.-38     	; 0x61e <can_receive_frame_buffer+0x52>
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     644:	ea ed       	ldi	r30, 0xDA	; 218
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	80 81       	ld	r24, Z
     64a:	88 23       	and	r24, r24
     64c:	ec f7       	brge	.-6      	; 0x648 <can_receive_frame_buffer+0x7c>
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     64e:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     652:	84 ff       	sbrs	r24, 4
     654:	1c c0       	rjmp	.+56     	; 0x68e <can_receive_frame_buffer+0xc2>
     656:	80 e0       	ldi	r24, 0x00	; 0
	//reset mob RXOK flags
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     658:	2d ee       	ldi	r18, 0xED	; 237
     65a:	30 e0       	ldi	r19, 0x00	; 0
		CANCDMOB = 0x00;
     65c:	af ee       	ldi	r26, 0xEF	; 239
     65e:	b0 e0       	ldi	r27, 0x00	; 0
		CANSTMOB = 0x00;
     660:	4e ee       	ldi	r20, 0xEE	; 238
     662:	50 e0       	ldi	r21, 0x00	; 0
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<8; j++){
		CANPAGE = (j << 4);
     664:	98 2f       	mov	r25, r24
     666:	92 95       	swap	r25
     668:	90 7f       	andi	r25, 0xF0	; 240
     66a:	f9 01       	movw	r30, r18
     66c:	90 83       	st	Z, r25
		CANCDMOB = 0x00;
     66e:	1c 92       	st	X, r1
		CANSTMOB = 0x00;
     670:	fa 01       	movw	r30, r20
     672:	10 82       	st	Z, r1
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<8; j++){
     674:	8f 5f       	subi	r24, 0xFF	; 255
     676:	88 30       	cpi	r24, 0x08	; 8
     678:	a9 f7       	brne	.-22     	; 0x664 <can_receive_frame_buffer+0x98>
		CANPAGE = (j << 4);
		CANCDMOB = 0x00;
		CANSTMOB = 0x00;
	}
	//Reset interrupt register.
	CANGIT = CANGIT;
     67a:	ea ed       	ldi	r30, 0xDA	; 218
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	80 81       	ld	r24, Z
     680:	80 83       	st	Z, r24
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
     682:	6e 2d       	mov	r22, r14
     684:	c6 01       	movw	r24, r12
     686:	c3 de       	rcall	.-634    	; 0x40e <can_get_frame_buffer>
	return 0;
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	02 c0       	rjmp	.+4      	; 0x692 <can_receive_frame_buffer+0xc6>
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	90 e0       	ldi	r25, 0x00	; 0
	//Reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
	return 0;
}
     692:	0f 90       	pop	r0
     694:	0f 90       	pop	r0
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	df 90       	pop	r13
     6a4:	cf 90       	pop	r12
     6a6:	bf 90       	pop	r11
     6a8:	af 90       	pop	r10
     6aa:	9f 90       	pop	r9
     6ac:	8f 90       	pop	r8
     6ae:	7f 90       	pop	r7
     6b0:	08 95       	ret

000006b2 <uECC_vli_clear>:
        HMAC_finish(hash_context, K, K);

        update_V(hash_context, K, V);
    }
    return 0;
}
     6b2:	dc 01       	movw	r26, r24
     6b4:	ef e7       	ldi	r30, 0x7F	; 127
     6b6:	f3 e0       	ldi	r31, 0x03	; 3
     6b8:	e6 1b       	sub	r30, r22
     6ba:	f1 09       	sbc	r31, r1
     6bc:	09 94       	ijmp
     6be:	1d 92       	st	X+, r1
     6c0:	1d 92       	st	X+, r1
     6c2:	1d 92       	st	X+, r1
     6c4:	1d 92       	st	X+, r1
     6c6:	1d 92       	st	X+, r1
     6c8:	1d 92       	st	X+, r1
     6ca:	1d 92       	st	X+, r1
     6cc:	1d 92       	st	X+, r1
     6ce:	1d 92       	st	X+, r1
     6d0:	1d 92       	st	X+, r1
     6d2:	1d 92       	st	X+, r1
     6d4:	1d 92       	st	X+, r1
     6d6:	1d 92       	st	X+, r1
     6d8:	1d 92       	st	X+, r1
     6da:	1d 92       	st	X+, r1
     6dc:	1d 92       	st	X+, r1
     6de:	1d 92       	st	X+, r1
     6e0:	1d 92       	st	X+, r1
     6e2:	1d 92       	st	X+, r1
     6e4:	1d 92       	st	X+, r1
     6e6:	1d 92       	st	X+, r1
     6e8:	1d 92       	st	X+, r1
     6ea:	1d 92       	st	X+, r1
     6ec:	1d 92       	st	X+, r1
     6ee:	1d 92       	st	X+, r1
     6f0:	1d 92       	st	X+, r1
     6f2:	1d 92       	st	X+, r1
     6f4:	1d 92       	st	X+, r1
     6f6:	1d 92       	st	X+, r1
     6f8:	1d 92       	st	X+, r1
     6fa:	1d 92       	st	X+, r1
     6fc:	1d 92       	st	X+, r1
     6fe:	08 95       	ret

00000700 <uECC_vli_set>:
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	44 0f       	add	r20, r20
     706:	eb 01       	movw	r28, r22
     708:	dc 01       	movw	r26, r24
     70a:	ea ec       	ldi	r30, 0xCA	; 202
     70c:	f3 e0       	ldi	r31, 0x03	; 3
     70e:	e4 1b       	sub	r30, r20
     710:	f1 09       	sbc	r31, r1
     712:	09 94       	ijmp
     714:	09 90       	ld	r0, Y+
     716:	0d 92       	st	X+, r0
     718:	09 90       	ld	r0, Y+
     71a:	0d 92       	st	X+, r0
     71c:	09 90       	ld	r0, Y+
     71e:	0d 92       	st	X+, r0
     720:	09 90       	ld	r0, Y+
     722:	0d 92       	st	X+, r0
     724:	09 90       	ld	r0, Y+
     726:	0d 92       	st	X+, r0
     728:	09 90       	ld	r0, Y+
     72a:	0d 92       	st	X+, r0
     72c:	09 90       	ld	r0, Y+
     72e:	0d 92       	st	X+, r0
     730:	09 90       	ld	r0, Y+
     732:	0d 92       	st	X+, r0
     734:	09 90       	ld	r0, Y+
     736:	0d 92       	st	X+, r0
     738:	09 90       	ld	r0, Y+
     73a:	0d 92       	st	X+, r0
     73c:	09 90       	ld	r0, Y+
     73e:	0d 92       	st	X+, r0
     740:	09 90       	ld	r0, Y+
     742:	0d 92       	st	X+, r0
     744:	09 90       	ld	r0, Y+
     746:	0d 92       	st	X+, r0
     748:	09 90       	ld	r0, Y+
     74a:	0d 92       	st	X+, r0
     74c:	09 90       	ld	r0, Y+
     74e:	0d 92       	st	X+, r0
     750:	09 90       	ld	r0, Y+
     752:	0d 92       	st	X+, r0
     754:	09 90       	ld	r0, Y+
     756:	0d 92       	st	X+, r0
     758:	09 90       	ld	r0, Y+
     75a:	0d 92       	st	X+, r0
     75c:	09 90       	ld	r0, Y+
     75e:	0d 92       	st	X+, r0
     760:	09 90       	ld	r0, Y+
     762:	0d 92       	st	X+, r0
     764:	09 90       	ld	r0, Y+
     766:	0d 92       	st	X+, r0
     768:	09 90       	ld	r0, Y+
     76a:	0d 92       	st	X+, r0
     76c:	09 90       	ld	r0, Y+
     76e:	0d 92       	st	X+, r0
     770:	09 90       	ld	r0, Y+
     772:	0d 92       	st	X+, r0
     774:	09 90       	ld	r0, Y+
     776:	0d 92       	st	X+, r0
     778:	09 90       	ld	r0, Y+
     77a:	0d 92       	st	X+, r0
     77c:	09 90       	ld	r0, Y+
     77e:	0d 92       	st	X+, r0
     780:	09 90       	ld	r0, Y+
     782:	0d 92       	st	X+, r0
     784:	09 90       	ld	r0, Y+
     786:	0d 92       	st	X+, r0
     788:	09 90       	ld	r0, Y+
     78a:	0d 92       	st	X+, r0
     78c:	09 90       	ld	r0, Y+
     78e:	0d 92       	st	X+, r0
     790:	09 90       	ld	r0, Y+
     792:	0d 92       	st	X+, r0
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	08 95       	ret

0000079a <uECC_vli_rshift1>:
     79a:	26 2f       	mov	r18, r22
     79c:	06 2e       	mov	r0, r22
     79e:	00 0c       	add	r0, r0
     7a0:	33 0b       	sbc	r19, r19
     7a2:	21 50       	subi	r18, 0x01	; 1
     7a4:	31 09       	sbc	r19, r1
     7a6:	32 2f       	mov	r19, r18
     7a8:	33 0f       	add	r19, r19
     7aa:	23 0f       	add	r18, r19
     7ac:	dc 01       	movw	r26, r24
     7ae:	ee e3       	ldi	r30, 0x3E	; 62
     7b0:	f4 e0       	ldi	r31, 0x04	; 4
     7b2:	e2 1b       	sub	r30, r18
     7b4:	f1 09       	sbc	r31, r1
     7b6:	a6 0f       	add	r26, r22
     7b8:	b1 1d       	adc	r27, r1
     7ba:	0e 90       	ld	r0, -X
     7bc:	06 94       	lsr	r0
     7be:	0c 92       	st	X, r0
     7c0:	09 94       	ijmp
     7c2:	0e 90       	ld	r0, -X
     7c4:	07 94       	ror	r0
     7c6:	0c 92       	st	X, r0
     7c8:	0e 90       	ld	r0, -X
     7ca:	07 94       	ror	r0
     7cc:	0c 92       	st	X, r0
     7ce:	0e 90       	ld	r0, -X
     7d0:	07 94       	ror	r0
     7d2:	0c 92       	st	X, r0
     7d4:	0e 90       	ld	r0, -X
     7d6:	07 94       	ror	r0
     7d8:	0c 92       	st	X, r0
     7da:	0e 90       	ld	r0, -X
     7dc:	07 94       	ror	r0
     7de:	0c 92       	st	X, r0
     7e0:	0e 90       	ld	r0, -X
     7e2:	07 94       	ror	r0
     7e4:	0c 92       	st	X, r0
     7e6:	0e 90       	ld	r0, -X
     7e8:	07 94       	ror	r0
     7ea:	0c 92       	st	X, r0
     7ec:	0e 90       	ld	r0, -X
     7ee:	07 94       	ror	r0
     7f0:	0c 92       	st	X, r0
     7f2:	0e 90       	ld	r0, -X
     7f4:	07 94       	ror	r0
     7f6:	0c 92       	st	X, r0
     7f8:	0e 90       	ld	r0, -X
     7fa:	07 94       	ror	r0
     7fc:	0c 92       	st	X, r0
     7fe:	0e 90       	ld	r0, -X
     800:	07 94       	ror	r0
     802:	0c 92       	st	X, r0
     804:	0e 90       	ld	r0, -X
     806:	07 94       	ror	r0
     808:	0c 92       	st	X, r0
     80a:	0e 90       	ld	r0, -X
     80c:	07 94       	ror	r0
     80e:	0c 92       	st	X, r0
     810:	0e 90       	ld	r0, -X
     812:	07 94       	ror	r0
     814:	0c 92       	st	X, r0
     816:	0e 90       	ld	r0, -X
     818:	07 94       	ror	r0
     81a:	0c 92       	st	X, r0
     81c:	0e 90       	ld	r0, -X
     81e:	07 94       	ror	r0
     820:	0c 92       	st	X, r0
     822:	0e 90       	ld	r0, -X
     824:	07 94       	ror	r0
     826:	0c 92       	st	X, r0
     828:	0e 90       	ld	r0, -X
     82a:	07 94       	ror	r0
     82c:	0c 92       	st	X, r0
     82e:	0e 90       	ld	r0, -X
     830:	07 94       	ror	r0
     832:	0c 92       	st	X, r0
     834:	0e 90       	ld	r0, -X
     836:	07 94       	ror	r0
     838:	0c 92       	st	X, r0
     83a:	0e 90       	ld	r0, -X
     83c:	07 94       	ror	r0
     83e:	0c 92       	st	X, r0
     840:	0e 90       	ld	r0, -X
     842:	07 94       	ror	r0
     844:	0c 92       	st	X, r0
     846:	0e 90       	ld	r0, -X
     848:	07 94       	ror	r0
     84a:	0c 92       	st	X, r0
     84c:	0e 90       	ld	r0, -X
     84e:	07 94       	ror	r0
     850:	0c 92       	st	X, r0
     852:	0e 90       	ld	r0, -X
     854:	07 94       	ror	r0
     856:	0c 92       	st	X, r0
     858:	0e 90       	ld	r0, -X
     85a:	07 94       	ror	r0
     85c:	0c 92       	st	X, r0
     85e:	0e 90       	ld	r0, -X
     860:	07 94       	ror	r0
     862:	0c 92       	st	X, r0
     864:	0e 90       	ld	r0, -X
     866:	07 94       	ror	r0
     868:	0c 92       	st	X, r0
     86a:	0e 90       	ld	r0, -X
     86c:	07 94       	ror	r0
     86e:	0c 92       	st	X, r0
     870:	0e 90       	ld	r0, -X
     872:	07 94       	ror	r0
     874:	0c 92       	st	X, r0
     876:	0e 90       	ld	r0, -X
     878:	07 94       	ror	r0
     87a:	0c 92       	st	X, r0
     87c:	08 95       	ret

0000087e <uECC_vli_add>:
     87e:	cf 93       	push	r28
     880:	df 93       	push	r29
     882:	22 0f       	add	r18, r18
     884:	db 01       	movw	r26, r22
     886:	ea 01       	movw	r28, r20
     888:	ac 01       	movw	r20, r24
     88a:	eb e8       	ldi	r30, 0x8B	; 139
     88c:	f4 e0       	ldi	r31, 0x04	; 4
     88e:	e2 1b       	sub	r30, r18
     890:	f1 09       	sbc	r31, r1
     892:	88 94       	clc
     894:	09 94       	ijmp
     896:	fa 01       	movw	r30, r20
     898:	3e c0       	rjmp	.+124    	; 0x916 <add_89_32>
     89a:	fa 01       	movw	r30, r20
     89c:	40 c0       	rjmp	.+128    	; 0x91e <add_89_31>
     89e:	fa 01       	movw	r30, r20
     8a0:	42 c0       	rjmp	.+132    	; 0x926 <add_89_30>
     8a2:	fa 01       	movw	r30, r20
     8a4:	44 c0       	rjmp	.+136    	; 0x92e <add_89_29>
     8a6:	fa 01       	movw	r30, r20
     8a8:	46 c0       	rjmp	.+140    	; 0x936 <add_89_28>
     8aa:	fa 01       	movw	r30, r20
     8ac:	48 c0       	rjmp	.+144    	; 0x93e <add_89_27>
     8ae:	fa 01       	movw	r30, r20
     8b0:	4a c0       	rjmp	.+148    	; 0x946 <add_89_26>
     8b2:	fa 01       	movw	r30, r20
     8b4:	4c c0       	rjmp	.+152    	; 0x94e <add_89_25>
     8b6:	fa 01       	movw	r30, r20
     8b8:	4e c0       	rjmp	.+156    	; 0x956 <add_89_24>
     8ba:	fa 01       	movw	r30, r20
     8bc:	50 c0       	rjmp	.+160    	; 0x95e <add_89_23>
     8be:	fa 01       	movw	r30, r20
     8c0:	52 c0       	rjmp	.+164    	; 0x966 <add_89_22>
     8c2:	fa 01       	movw	r30, r20
     8c4:	54 c0       	rjmp	.+168    	; 0x96e <add_89_21>
     8c6:	fa 01       	movw	r30, r20
     8c8:	56 c0       	rjmp	.+172    	; 0x976 <add_89_20>
     8ca:	fa 01       	movw	r30, r20
     8cc:	58 c0       	rjmp	.+176    	; 0x97e <add_89_19>
     8ce:	fa 01       	movw	r30, r20
     8d0:	5a c0       	rjmp	.+180    	; 0x986 <add_89_18>
     8d2:	fa 01       	movw	r30, r20
     8d4:	5c c0       	rjmp	.+184    	; 0x98e <add_89_17>
     8d6:	fa 01       	movw	r30, r20
     8d8:	5e c0       	rjmp	.+188    	; 0x996 <add_89_16>
     8da:	fa 01       	movw	r30, r20
     8dc:	60 c0       	rjmp	.+192    	; 0x99e <add_89_15>
     8de:	fa 01       	movw	r30, r20
     8e0:	62 c0       	rjmp	.+196    	; 0x9a6 <add_89_14>
     8e2:	fa 01       	movw	r30, r20
     8e4:	64 c0       	rjmp	.+200    	; 0x9ae <add_89_13>
     8e6:	fa 01       	movw	r30, r20
     8e8:	66 c0       	rjmp	.+204    	; 0x9b6 <add_89_12>
     8ea:	fa 01       	movw	r30, r20
     8ec:	68 c0       	rjmp	.+208    	; 0x9be <add_89_11>
     8ee:	fa 01       	movw	r30, r20
     8f0:	6a c0       	rjmp	.+212    	; 0x9c6 <add_89_10>
     8f2:	fa 01       	movw	r30, r20
     8f4:	6c c0       	rjmp	.+216    	; 0x9ce <add_89_9>
     8f6:	fa 01       	movw	r30, r20
     8f8:	6e c0       	rjmp	.+220    	; 0x9d6 <add_89_8>
     8fa:	fa 01       	movw	r30, r20
     8fc:	70 c0       	rjmp	.+224    	; 0x9de <add_89_7>
     8fe:	fa 01       	movw	r30, r20
     900:	72 c0       	rjmp	.+228    	; 0x9e6 <add_89_6>
     902:	fa 01       	movw	r30, r20
     904:	74 c0       	rjmp	.+232    	; 0x9ee <add_89_5>
     906:	fa 01       	movw	r30, r20
     908:	76 c0       	rjmp	.+236    	; 0x9f6 <add_89_4>
     90a:	fa 01       	movw	r30, r20
     90c:	78 c0       	rjmp	.+240    	; 0x9fe <add_89_3>
     90e:	fa 01       	movw	r30, r20
     910:	7a c0       	rjmp	.+244    	; 0xa06 <add_89_2>
     912:	fa 01       	movw	r30, r20
     914:	7c c0       	rjmp	.+248    	; 0xa0e <add_89_1>

00000916 <add_89_32>:
     916:	8d 91       	ld	r24, X+
     918:	99 91       	ld	r25, Y+
     91a:	89 1f       	adc	r24, r25
     91c:	81 93       	st	Z+, r24

0000091e <add_89_31>:
     91e:	8d 91       	ld	r24, X+
     920:	99 91       	ld	r25, Y+
     922:	89 1f       	adc	r24, r25
     924:	81 93       	st	Z+, r24

00000926 <add_89_30>:
     926:	8d 91       	ld	r24, X+
     928:	99 91       	ld	r25, Y+
     92a:	89 1f       	adc	r24, r25
     92c:	81 93       	st	Z+, r24

0000092e <add_89_29>:
     92e:	8d 91       	ld	r24, X+
     930:	99 91       	ld	r25, Y+
     932:	89 1f       	adc	r24, r25
     934:	81 93       	st	Z+, r24

00000936 <add_89_28>:
     936:	8d 91       	ld	r24, X+
     938:	99 91       	ld	r25, Y+
     93a:	89 1f       	adc	r24, r25
     93c:	81 93       	st	Z+, r24

0000093e <add_89_27>:
     93e:	8d 91       	ld	r24, X+
     940:	99 91       	ld	r25, Y+
     942:	89 1f       	adc	r24, r25
     944:	81 93       	st	Z+, r24

00000946 <add_89_26>:
     946:	8d 91       	ld	r24, X+
     948:	99 91       	ld	r25, Y+
     94a:	89 1f       	adc	r24, r25
     94c:	81 93       	st	Z+, r24

0000094e <add_89_25>:
     94e:	8d 91       	ld	r24, X+
     950:	99 91       	ld	r25, Y+
     952:	89 1f       	adc	r24, r25
     954:	81 93       	st	Z+, r24

00000956 <add_89_24>:
     956:	8d 91       	ld	r24, X+
     958:	99 91       	ld	r25, Y+
     95a:	89 1f       	adc	r24, r25
     95c:	81 93       	st	Z+, r24

0000095e <add_89_23>:
     95e:	8d 91       	ld	r24, X+
     960:	99 91       	ld	r25, Y+
     962:	89 1f       	adc	r24, r25
     964:	81 93       	st	Z+, r24

00000966 <add_89_22>:
     966:	8d 91       	ld	r24, X+
     968:	99 91       	ld	r25, Y+
     96a:	89 1f       	adc	r24, r25
     96c:	81 93       	st	Z+, r24

0000096e <add_89_21>:
     96e:	8d 91       	ld	r24, X+
     970:	99 91       	ld	r25, Y+
     972:	89 1f       	adc	r24, r25
     974:	81 93       	st	Z+, r24

00000976 <add_89_20>:
     976:	8d 91       	ld	r24, X+
     978:	99 91       	ld	r25, Y+
     97a:	89 1f       	adc	r24, r25
     97c:	81 93       	st	Z+, r24

0000097e <add_89_19>:
     97e:	8d 91       	ld	r24, X+
     980:	99 91       	ld	r25, Y+
     982:	89 1f       	adc	r24, r25
     984:	81 93       	st	Z+, r24

00000986 <add_89_18>:
     986:	8d 91       	ld	r24, X+
     988:	99 91       	ld	r25, Y+
     98a:	89 1f       	adc	r24, r25
     98c:	81 93       	st	Z+, r24

0000098e <add_89_17>:
     98e:	8d 91       	ld	r24, X+
     990:	99 91       	ld	r25, Y+
     992:	89 1f       	adc	r24, r25
     994:	81 93       	st	Z+, r24

00000996 <add_89_16>:
     996:	8d 91       	ld	r24, X+
     998:	99 91       	ld	r25, Y+
     99a:	89 1f       	adc	r24, r25
     99c:	81 93       	st	Z+, r24

0000099e <add_89_15>:
     99e:	8d 91       	ld	r24, X+
     9a0:	99 91       	ld	r25, Y+
     9a2:	89 1f       	adc	r24, r25
     9a4:	81 93       	st	Z+, r24

000009a6 <add_89_14>:
     9a6:	8d 91       	ld	r24, X+
     9a8:	99 91       	ld	r25, Y+
     9aa:	89 1f       	adc	r24, r25
     9ac:	81 93       	st	Z+, r24

000009ae <add_89_13>:
     9ae:	8d 91       	ld	r24, X+
     9b0:	99 91       	ld	r25, Y+
     9b2:	89 1f       	adc	r24, r25
     9b4:	81 93       	st	Z+, r24

000009b6 <add_89_12>:
     9b6:	8d 91       	ld	r24, X+
     9b8:	99 91       	ld	r25, Y+
     9ba:	89 1f       	adc	r24, r25
     9bc:	81 93       	st	Z+, r24

000009be <add_89_11>:
     9be:	8d 91       	ld	r24, X+
     9c0:	99 91       	ld	r25, Y+
     9c2:	89 1f       	adc	r24, r25
     9c4:	81 93       	st	Z+, r24

000009c6 <add_89_10>:
     9c6:	8d 91       	ld	r24, X+
     9c8:	99 91       	ld	r25, Y+
     9ca:	89 1f       	adc	r24, r25
     9cc:	81 93       	st	Z+, r24

000009ce <add_89_9>:
     9ce:	8d 91       	ld	r24, X+
     9d0:	99 91       	ld	r25, Y+
     9d2:	89 1f       	adc	r24, r25
     9d4:	81 93       	st	Z+, r24

000009d6 <add_89_8>:
     9d6:	8d 91       	ld	r24, X+
     9d8:	99 91       	ld	r25, Y+
     9da:	89 1f       	adc	r24, r25
     9dc:	81 93       	st	Z+, r24

000009de <add_89_7>:
     9de:	8d 91       	ld	r24, X+
     9e0:	99 91       	ld	r25, Y+
     9e2:	89 1f       	adc	r24, r25
     9e4:	81 93       	st	Z+, r24

000009e6 <add_89_6>:
     9e6:	8d 91       	ld	r24, X+
     9e8:	99 91       	ld	r25, Y+
     9ea:	89 1f       	adc	r24, r25
     9ec:	81 93       	st	Z+, r24

000009ee <add_89_5>:
     9ee:	8d 91       	ld	r24, X+
     9f0:	99 91       	ld	r25, Y+
     9f2:	89 1f       	adc	r24, r25
     9f4:	81 93       	st	Z+, r24

000009f6 <add_89_4>:
     9f6:	8d 91       	ld	r24, X+
     9f8:	99 91       	ld	r25, Y+
     9fa:	89 1f       	adc	r24, r25
     9fc:	81 93       	st	Z+, r24

000009fe <add_89_3>:
     9fe:	8d 91       	ld	r24, X+
     a00:	99 91       	ld	r25, Y+
     a02:	89 1f       	adc	r24, r25
     a04:	81 93       	st	Z+, r24

00000a06 <add_89_2>:
     a06:	8d 91       	ld	r24, X+
     a08:	99 91       	ld	r25, Y+
     a0a:	89 1f       	adc	r24, r25
     a0c:	81 93       	st	Z+, r24

00000a0e <add_89_1>:
     a0e:	8d 91       	ld	r24, X+
     a10:	99 91       	ld	r25, Y+
     a12:	89 1f       	adc	r24, r25
     a14:	81 93       	st	Z+, r24
     a16:	81 2d       	mov	r24, r1
     a18:	88 1f       	adc	r24, r24
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	08 95       	ret

00000a20 <uECC_vli_sub>:
     a20:	cf 93       	push	r28
     a22:	df 93       	push	r29
     a24:	22 0f       	add	r18, r18
     a26:	db 01       	movw	r26, r22
     a28:	ea 01       	movw	r28, r20
     a2a:	ac 01       	movw	r20, r24
     a2c:	ec e5       	ldi	r30, 0x5C	; 92
     a2e:	f5 e0       	ldi	r31, 0x05	; 5
     a30:	e2 1b       	sub	r30, r18
     a32:	f1 09       	sbc	r31, r1
     a34:	88 94       	clc
     a36:	09 94       	ijmp
     a38:	fa 01       	movw	r30, r20
     a3a:	3e c0       	rjmp	.+124    	; 0xab8 <sub_129_32>
     a3c:	fa 01       	movw	r30, r20
     a3e:	40 c0       	rjmp	.+128    	; 0xac0 <sub_129_31>
     a40:	fa 01       	movw	r30, r20
     a42:	42 c0       	rjmp	.+132    	; 0xac8 <sub_129_30>
     a44:	fa 01       	movw	r30, r20
     a46:	44 c0       	rjmp	.+136    	; 0xad0 <sub_129_29>
     a48:	fa 01       	movw	r30, r20
     a4a:	46 c0       	rjmp	.+140    	; 0xad8 <sub_129_28>
     a4c:	fa 01       	movw	r30, r20
     a4e:	48 c0       	rjmp	.+144    	; 0xae0 <sub_129_27>
     a50:	fa 01       	movw	r30, r20
     a52:	4a c0       	rjmp	.+148    	; 0xae8 <sub_129_26>
     a54:	fa 01       	movw	r30, r20
     a56:	4c c0       	rjmp	.+152    	; 0xaf0 <sub_129_25>
     a58:	fa 01       	movw	r30, r20
     a5a:	4e c0       	rjmp	.+156    	; 0xaf8 <sub_129_24>
     a5c:	fa 01       	movw	r30, r20
     a5e:	50 c0       	rjmp	.+160    	; 0xb00 <sub_129_23>
     a60:	fa 01       	movw	r30, r20
     a62:	52 c0       	rjmp	.+164    	; 0xb08 <sub_129_22>
     a64:	fa 01       	movw	r30, r20
     a66:	54 c0       	rjmp	.+168    	; 0xb10 <sub_129_21>
     a68:	fa 01       	movw	r30, r20
     a6a:	56 c0       	rjmp	.+172    	; 0xb18 <sub_129_20>
     a6c:	fa 01       	movw	r30, r20
     a6e:	58 c0       	rjmp	.+176    	; 0xb20 <sub_129_19>
     a70:	fa 01       	movw	r30, r20
     a72:	5a c0       	rjmp	.+180    	; 0xb28 <sub_129_18>
     a74:	fa 01       	movw	r30, r20
     a76:	5c c0       	rjmp	.+184    	; 0xb30 <sub_129_17>
     a78:	fa 01       	movw	r30, r20
     a7a:	5e c0       	rjmp	.+188    	; 0xb38 <sub_129_16>
     a7c:	fa 01       	movw	r30, r20
     a7e:	60 c0       	rjmp	.+192    	; 0xb40 <sub_129_15>
     a80:	fa 01       	movw	r30, r20
     a82:	62 c0       	rjmp	.+196    	; 0xb48 <sub_129_14>
     a84:	fa 01       	movw	r30, r20
     a86:	64 c0       	rjmp	.+200    	; 0xb50 <sub_129_13>
     a88:	fa 01       	movw	r30, r20
     a8a:	66 c0       	rjmp	.+204    	; 0xb58 <sub_129_12>
     a8c:	fa 01       	movw	r30, r20
     a8e:	68 c0       	rjmp	.+208    	; 0xb60 <sub_129_11>
     a90:	fa 01       	movw	r30, r20
     a92:	6a c0       	rjmp	.+212    	; 0xb68 <sub_129_10>
     a94:	fa 01       	movw	r30, r20
     a96:	6c c0       	rjmp	.+216    	; 0xb70 <sub_129_9>
     a98:	fa 01       	movw	r30, r20
     a9a:	6e c0       	rjmp	.+220    	; 0xb78 <sub_129_8>
     a9c:	fa 01       	movw	r30, r20
     a9e:	70 c0       	rjmp	.+224    	; 0xb80 <sub_129_7>
     aa0:	fa 01       	movw	r30, r20
     aa2:	72 c0       	rjmp	.+228    	; 0xb88 <sub_129_6>
     aa4:	fa 01       	movw	r30, r20
     aa6:	74 c0       	rjmp	.+232    	; 0xb90 <sub_129_5>
     aa8:	fa 01       	movw	r30, r20
     aaa:	76 c0       	rjmp	.+236    	; 0xb98 <sub_129_4>
     aac:	fa 01       	movw	r30, r20
     aae:	78 c0       	rjmp	.+240    	; 0xba0 <sub_129_3>
     ab0:	fa 01       	movw	r30, r20
     ab2:	7a c0       	rjmp	.+244    	; 0xba8 <sub_129_2>
     ab4:	fa 01       	movw	r30, r20
     ab6:	7c c0       	rjmp	.+248    	; 0xbb0 <sub_129_1>

00000ab8 <sub_129_32>:
     ab8:	8d 91       	ld	r24, X+
     aba:	99 91       	ld	r25, Y+
     abc:	89 0b       	sbc	r24, r25
     abe:	81 93       	st	Z+, r24

00000ac0 <sub_129_31>:
     ac0:	8d 91       	ld	r24, X+
     ac2:	99 91       	ld	r25, Y+
     ac4:	89 0b       	sbc	r24, r25
     ac6:	81 93       	st	Z+, r24

00000ac8 <sub_129_30>:
     ac8:	8d 91       	ld	r24, X+
     aca:	99 91       	ld	r25, Y+
     acc:	89 0b       	sbc	r24, r25
     ace:	81 93       	st	Z+, r24

00000ad0 <sub_129_29>:
     ad0:	8d 91       	ld	r24, X+
     ad2:	99 91       	ld	r25, Y+
     ad4:	89 0b       	sbc	r24, r25
     ad6:	81 93       	st	Z+, r24

00000ad8 <sub_129_28>:
     ad8:	8d 91       	ld	r24, X+
     ada:	99 91       	ld	r25, Y+
     adc:	89 0b       	sbc	r24, r25
     ade:	81 93       	st	Z+, r24

00000ae0 <sub_129_27>:
     ae0:	8d 91       	ld	r24, X+
     ae2:	99 91       	ld	r25, Y+
     ae4:	89 0b       	sbc	r24, r25
     ae6:	81 93       	st	Z+, r24

00000ae8 <sub_129_26>:
     ae8:	8d 91       	ld	r24, X+
     aea:	99 91       	ld	r25, Y+
     aec:	89 0b       	sbc	r24, r25
     aee:	81 93       	st	Z+, r24

00000af0 <sub_129_25>:
     af0:	8d 91       	ld	r24, X+
     af2:	99 91       	ld	r25, Y+
     af4:	89 0b       	sbc	r24, r25
     af6:	81 93       	st	Z+, r24

00000af8 <sub_129_24>:
     af8:	8d 91       	ld	r24, X+
     afa:	99 91       	ld	r25, Y+
     afc:	89 0b       	sbc	r24, r25
     afe:	81 93       	st	Z+, r24

00000b00 <sub_129_23>:
     b00:	8d 91       	ld	r24, X+
     b02:	99 91       	ld	r25, Y+
     b04:	89 0b       	sbc	r24, r25
     b06:	81 93       	st	Z+, r24

00000b08 <sub_129_22>:
     b08:	8d 91       	ld	r24, X+
     b0a:	99 91       	ld	r25, Y+
     b0c:	89 0b       	sbc	r24, r25
     b0e:	81 93       	st	Z+, r24

00000b10 <sub_129_21>:
     b10:	8d 91       	ld	r24, X+
     b12:	99 91       	ld	r25, Y+
     b14:	89 0b       	sbc	r24, r25
     b16:	81 93       	st	Z+, r24

00000b18 <sub_129_20>:
     b18:	8d 91       	ld	r24, X+
     b1a:	99 91       	ld	r25, Y+
     b1c:	89 0b       	sbc	r24, r25
     b1e:	81 93       	st	Z+, r24

00000b20 <sub_129_19>:
     b20:	8d 91       	ld	r24, X+
     b22:	99 91       	ld	r25, Y+
     b24:	89 0b       	sbc	r24, r25
     b26:	81 93       	st	Z+, r24

00000b28 <sub_129_18>:
     b28:	8d 91       	ld	r24, X+
     b2a:	99 91       	ld	r25, Y+
     b2c:	89 0b       	sbc	r24, r25
     b2e:	81 93       	st	Z+, r24

00000b30 <sub_129_17>:
     b30:	8d 91       	ld	r24, X+
     b32:	99 91       	ld	r25, Y+
     b34:	89 0b       	sbc	r24, r25
     b36:	81 93       	st	Z+, r24

00000b38 <sub_129_16>:
     b38:	8d 91       	ld	r24, X+
     b3a:	99 91       	ld	r25, Y+
     b3c:	89 0b       	sbc	r24, r25
     b3e:	81 93       	st	Z+, r24

00000b40 <sub_129_15>:
     b40:	8d 91       	ld	r24, X+
     b42:	99 91       	ld	r25, Y+
     b44:	89 0b       	sbc	r24, r25
     b46:	81 93       	st	Z+, r24

00000b48 <sub_129_14>:
     b48:	8d 91       	ld	r24, X+
     b4a:	99 91       	ld	r25, Y+
     b4c:	89 0b       	sbc	r24, r25
     b4e:	81 93       	st	Z+, r24

00000b50 <sub_129_13>:
     b50:	8d 91       	ld	r24, X+
     b52:	99 91       	ld	r25, Y+
     b54:	89 0b       	sbc	r24, r25
     b56:	81 93       	st	Z+, r24

00000b58 <sub_129_12>:
     b58:	8d 91       	ld	r24, X+
     b5a:	99 91       	ld	r25, Y+
     b5c:	89 0b       	sbc	r24, r25
     b5e:	81 93       	st	Z+, r24

00000b60 <sub_129_11>:
     b60:	8d 91       	ld	r24, X+
     b62:	99 91       	ld	r25, Y+
     b64:	89 0b       	sbc	r24, r25
     b66:	81 93       	st	Z+, r24

00000b68 <sub_129_10>:
     b68:	8d 91       	ld	r24, X+
     b6a:	99 91       	ld	r25, Y+
     b6c:	89 0b       	sbc	r24, r25
     b6e:	81 93       	st	Z+, r24

00000b70 <sub_129_9>:
     b70:	8d 91       	ld	r24, X+
     b72:	99 91       	ld	r25, Y+
     b74:	89 0b       	sbc	r24, r25
     b76:	81 93       	st	Z+, r24

00000b78 <sub_129_8>:
     b78:	8d 91       	ld	r24, X+
     b7a:	99 91       	ld	r25, Y+
     b7c:	89 0b       	sbc	r24, r25
     b7e:	81 93       	st	Z+, r24

00000b80 <sub_129_7>:
     b80:	8d 91       	ld	r24, X+
     b82:	99 91       	ld	r25, Y+
     b84:	89 0b       	sbc	r24, r25
     b86:	81 93       	st	Z+, r24

00000b88 <sub_129_6>:
     b88:	8d 91       	ld	r24, X+
     b8a:	99 91       	ld	r25, Y+
     b8c:	89 0b       	sbc	r24, r25
     b8e:	81 93       	st	Z+, r24

00000b90 <sub_129_5>:
     b90:	8d 91       	ld	r24, X+
     b92:	99 91       	ld	r25, Y+
     b94:	89 0b       	sbc	r24, r25
     b96:	81 93       	st	Z+, r24

00000b98 <sub_129_4>:
     b98:	8d 91       	ld	r24, X+
     b9a:	99 91       	ld	r25, Y+
     b9c:	89 0b       	sbc	r24, r25
     b9e:	81 93       	st	Z+, r24

00000ba0 <sub_129_3>:
     ba0:	8d 91       	ld	r24, X+
     ba2:	99 91       	ld	r25, Y+
     ba4:	89 0b       	sbc	r24, r25
     ba6:	81 93       	st	Z+, r24

00000ba8 <sub_129_2>:
     ba8:	8d 91       	ld	r24, X+
     baa:	99 91       	ld	r25, Y+
     bac:	89 0b       	sbc	r24, r25
     bae:	81 93       	st	Z+, r24

00000bb0 <sub_129_1>:
     bb0:	8d 91       	ld	r24, X+
     bb2:	99 91       	ld	r25, Y+
     bb4:	89 0b       	sbc	r24, r25
     bb6:	81 93       	st	Z+, r24
     bb8:	81 2d       	mov	r24, r1
     bba:	88 1f       	adc	r24, r24
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	08 95       	ret

00000bc2 <uECC_vli_mult>:
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	fc 01       	movw	r30, r24
     bc8:	db 01       	movw	r26, r22
     bca:	ea 01       	movw	r28, r20
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	89 2f       	mov	r24, r25
     bd0:	39 2f       	mov	r19, r25
     bd2:	49 2f       	mov	r20, r25
     bd4:	51 e0       	ldi	r21, 0x01	; 1
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	c5 0f       	add	r28, r21
     bda:	d4 1f       	adc	r29, r20
     bdc:	0d 90       	ld	r0, X+
     bde:	1a 90       	ld	r1, -Y
     be0:	01 9c       	mul	r0, r1
     be2:	90 0d       	add	r25, r0
     be4:	81 1d       	adc	r24, r1
     be6:	34 1f       	adc	r19, r20
     be8:	63 95       	inc	r22
     bea:	65 17       	cp	r22, r21
     bec:	b8 f3       	brcs	.-18     	; 0xbdc <uECC_vli_mult+0x1a>
     bee:	a5 1b       	sub	r26, r21
     bf0:	b4 0b       	sbc	r27, r20
     bf2:	91 93       	st	Z+, r25
     bf4:	98 2f       	mov	r25, r24
     bf6:	83 2f       	mov	r24, r19
     bf8:	34 2f       	mov	r19, r20
     bfa:	53 95       	inc	r21
     bfc:	52 17       	cp	r21, r18
     bfe:	58 f3       	brcs	.-42     	; 0xbd6 <uECC_vli_mult+0x14>
     c00:	52 2f       	mov	r21, r18
     c02:	c2 0f       	add	r28, r18
     c04:	d4 1f       	adc	r29, r20
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	0d 90       	ld	r0, X+
     c0a:	1a 90       	ld	r1, -Y
     c0c:	01 9c       	mul	r0, r1
     c0e:	90 0d       	add	r25, r0
     c10:	81 1d       	adc	r24, r1
     c12:	34 1f       	adc	r19, r20
     c14:	63 95       	inc	r22
     c16:	65 17       	cp	r22, r21
     c18:	b8 f3       	brcs	.-18     	; 0xc08 <uECC_vli_mult+0x46>
     c1a:	c5 0f       	add	r28, r21
     c1c:	d4 1f       	adc	r29, r20
     c1e:	91 93       	st	Z+, r25
     c20:	98 2f       	mov	r25, r24
     c22:	83 2f       	mov	r24, r19
     c24:	34 2f       	mov	r19, r20
     c26:	5a 95       	dec	r21
     c28:	a5 1b       	sub	r26, r21
     c2a:	b4 0b       	sbc	r27, r20
     c2c:	54 17       	cp	r21, r20
     c2e:	59 f7       	brne	.-42     	; 0xc06 <uECC_vli_mult+0x44>
     c30:	91 93       	st	Z+, r25
     c32:	11 24       	eor	r1, r1
     c34:	df 91       	pop	r29
     c36:	cf 91       	pop	r28
     c38:	08 95       	ret

00000c3a <uECC_vli_isZero>:
     c3a:	16 16       	cp	r1, r22
     c3c:	7c f4       	brge	.+30     	; 0xc5c <uECC_vli_isZero+0x22>
     c3e:	fc 01       	movw	r30, r24
     c40:	61 50       	subi	r22, 0x01	; 1
     c42:	46 2f       	mov	r20, r22
     c44:	50 e0       	ldi	r21, 0x00	; 0
     c46:	4f 5f       	subi	r20, 0xFF	; 255
     c48:	5f 4f       	sbci	r21, 0xFF	; 255
     c4a:	48 0f       	add	r20, r24
     c4c:	59 1f       	adc	r21, r25
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	21 91       	ld	r18, Z+
     c52:	92 2b       	or	r25, r18
     c54:	e4 17       	cp	r30, r20
     c56:	f5 07       	cpc	r31, r21
     c58:	d9 f7       	brne	.-10     	; 0xc50 <uECC_vli_isZero+0x16>
     c5a:	01 c0       	rjmp	.+2      	; 0xc5e <uECC_vli_isZero+0x24>
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	91 11       	cpse	r25, r1
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	08 95       	ret

00000c66 <uECC_vli_testBit>:
     c66:	9b 01       	movw	r18, r22
     c68:	35 95       	asr	r19
     c6a:	27 95       	ror	r18
     c6c:	35 95       	asr	r19
     c6e:	27 95       	ror	r18
     c70:	35 95       	asr	r19
     c72:	27 95       	ror	r18
     c74:	82 0f       	add	r24, r18
     c76:	93 1f       	adc	r25, r19
     c78:	67 70       	andi	r22, 0x07	; 7
     c7a:	77 27       	eor	r23, r23
     c7c:	21 e0       	ldi	r18, 0x01	; 1
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <uECC_vli_testBit+0x20>
     c82:	22 0f       	add	r18, r18
     c84:	33 1f       	adc	r19, r19
     c86:	6a 95       	dec	r22
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <uECC_vli_testBit+0x1c>
     c8a:	fc 01       	movw	r30, r24
     c8c:	80 81       	ld	r24, Z
     c8e:	82 23       	and	r24, r18
     c90:	08 95       	ret

00000c92 <uECC_vli_numBits>:
     c92:	9c 01       	movw	r18, r24
     c94:	61 50       	subi	r22, 0x01	; 1
     c96:	92 f0       	brmi	.+36     	; 0xcbc <uECC_vli_numBits+0x2a>
     c98:	fc 01       	movw	r30, r24
     c9a:	e6 0f       	add	r30, r22
     c9c:	f1 1d       	adc	r31, r1
     c9e:	67 fd       	sbrc	r22, 7
     ca0:	fa 95       	dec	r31
     ca2:	80 81       	ld	r24, Z
     ca4:	81 11       	cpse	r24, r1
     ca6:	0a c0       	rjmp	.+20     	; 0xcbc <uECC_vli_numBits+0x2a>
     ca8:	61 50       	subi	r22, 0x01	; 1
     caa:	42 f0       	brmi	.+16     	; 0xcbc <uECC_vli_numBits+0x2a>
     cac:	f9 01       	movw	r30, r18
     cae:	e6 0f       	add	r30, r22
     cb0:	f1 1d       	adc	r31, r1
     cb2:	67 fd       	sbrc	r22, 7
     cb4:	fa 95       	dec	r31
     cb6:	90 81       	ld	r25, Z
     cb8:	99 23       	and	r25, r25
     cba:	b1 f3       	breq	.-20     	; 0xca8 <uECC_vli_numBits+0x16>
     cbc:	6f 5f       	subi	r22, 0xFF	; 255
     cbe:	e9 f0       	breq	.+58     	; 0xcfa <uECC_vli_numBits+0x68>
     cc0:	26 0f       	add	r18, r22
     cc2:	31 1d       	adc	r19, r1
     cc4:	67 fd       	sbrc	r22, 7
     cc6:	3a 95       	dec	r19
     cc8:	f9 01       	movw	r30, r18
     cca:	31 97       	sbiw	r30, 0x01	; 1
     ccc:	80 81       	ld	r24, Z
     cce:	88 23       	and	r24, r24
     cd0:	31 f0       	breq	.+12     	; 0xcde <uECC_vli_numBits+0x4c>
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	86 95       	lsr	r24
     cd6:	2f 5f       	subi	r18, 0xFF	; 255
     cd8:	81 11       	cpse	r24, r1
     cda:	fc cf       	rjmp	.-8      	; 0xcd4 <uECC_vli_numBits+0x42>
     cdc:	01 c0       	rjmp	.+2      	; 0xce0 <uECC_vli_numBits+0x4e>
     cde:	20 e0       	ldi	r18, 0x00	; 0
     ce0:	86 2f       	mov	r24, r22
     ce2:	66 0f       	add	r22, r22
     ce4:	99 0b       	sbc	r25, r25
     ce6:	01 97       	sbiw	r24, 0x01	; 1
     ce8:	88 0f       	add	r24, r24
     cea:	99 1f       	adc	r25, r25
     cec:	88 0f       	add	r24, r24
     cee:	99 1f       	adc	r25, r25
     cf0:	88 0f       	add	r24, r24
     cf2:	99 1f       	adc	r25, r25
     cf4:	82 0f       	add	r24, r18
     cf6:	91 1d       	adc	r25, r1
     cf8:	08 95       	ret
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	08 95       	ret

00000d00 <uECC_vli_cmp_unsafe>:
     d00:	dc 01       	movw	r26, r24
     d02:	41 50       	subi	r20, 0x01	; 1
     d04:	2a f1       	brmi	.+74     	; 0xd50 <uECC_vli_cmp_unsafe+0x50>
     d06:	84 2f       	mov	r24, r20
     d08:	04 2e       	mov	r0, r20
     d0a:	00 0c       	add	r0, r0
     d0c:	99 0b       	sbc	r25, r25
     d0e:	fd 01       	movw	r30, r26
     d10:	e8 0f       	add	r30, r24
     d12:	f9 1f       	adc	r31, r25
     d14:	20 81       	ld	r18, Z
     d16:	fb 01       	movw	r30, r22
     d18:	e8 0f       	add	r30, r24
     d1a:	f9 1f       	adc	r31, r25
     d1c:	80 81       	ld	r24, Z
     d1e:	82 17       	cp	r24, r18
     d20:	c8 f0       	brcs	.+50     	; 0xd54 <uECC_vli_cmp_unsafe+0x54>
     d22:	28 17       	cp	r18, r24
     d24:	88 f4       	brcc	.+34     	; 0xd48 <uECC_vli_cmp_unsafe+0x48>
     d26:	18 c0       	rjmp	.+48     	; 0xd58 <uECC_vli_cmp_unsafe+0x58>
     d28:	24 2f       	mov	r18, r20
     d2a:	04 2e       	mov	r0, r20
     d2c:	00 0c       	add	r0, r0
     d2e:	33 0b       	sbc	r19, r19
     d30:	fd 01       	movw	r30, r26
     d32:	e2 0f       	add	r30, r18
     d34:	f3 1f       	adc	r31, r19
     d36:	50 81       	ld	r21, Z
     d38:	fb 01       	movw	r30, r22
     d3a:	e2 0f       	add	r30, r18
     d3c:	f3 1f       	adc	r31, r19
     d3e:	90 81       	ld	r25, Z
     d40:	95 17       	cp	r25, r21
     d42:	60 f0       	brcs	.+24     	; 0xd5c <uECC_vli_cmp_unsafe+0x5c>
     d44:	59 17       	cp	r21, r25
     d46:	60 f0       	brcs	.+24     	; 0xd60 <uECC_vli_cmp_unsafe+0x60>
     d48:	41 50       	subi	r20, 0x01	; 1
     d4a:	72 f7       	brpl	.-36     	; 0xd28 <uECC_vli_cmp_unsafe+0x28>
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	08 95       	ret
     d50:	80 e0       	ldi	r24, 0x00	; 0
     d52:	08 95       	ret
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	08 95       	ret
     d58:	8f ef       	ldi	r24, 0xFF	; 255
     d5a:	08 95       	ret
     d5c:	81 e0       	ldi	r24, 0x01	; 1
     d5e:	08 95       	ret
     d60:	8f ef       	ldi	r24, 0xFF	; 255
     d62:	08 95       	ret

00000d64 <uECC_vli_modAdd>:
     d64:	ef 92       	push	r14
     d66:	ff 92       	push	r15
     d68:	0f 93       	push	r16
     d6a:	cf 93       	push	r28
     d6c:	df 93       	push	r29
     d6e:	ec 01       	movw	r28, r24
     d70:	79 01       	movw	r14, r18
     d72:	20 2f       	mov	r18, r16
     d74:	84 dd       	rcall	.-1272   	; 0x87e <uECC_vli_add>
     d76:	81 11       	cpse	r24, r1
     d78:	06 c0       	rjmp	.+12     	; 0xd86 <uECC_vli_modAdd+0x22>
     d7a:	40 2f       	mov	r20, r16
     d7c:	be 01       	movw	r22, r28
     d7e:	c7 01       	movw	r24, r14
     d80:	bf df       	rcall	.-130    	; 0xd00 <uECC_vli_cmp_unsafe>
     d82:	81 30       	cpi	r24, 0x01	; 1
     d84:	29 f0       	breq	.+10     	; 0xd90 <uECC_vli_modAdd+0x2c>
     d86:	20 2f       	mov	r18, r16
     d88:	a7 01       	movw	r20, r14
     d8a:	be 01       	movw	r22, r28
     d8c:	ce 01       	movw	r24, r28
     d8e:	48 de       	rcall	.-880    	; 0xa20 <uECC_vli_sub>
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	0f 91       	pop	r16
     d96:	ff 90       	pop	r15
     d98:	ef 90       	pop	r14
     d9a:	08 95       	ret

00000d9c <uECC_vli_modSub>:
     d9c:	ef 92       	push	r14
     d9e:	ff 92       	push	r15
     da0:	0f 93       	push	r16
     da2:	cf 93       	push	r28
     da4:	df 93       	push	r29
     da6:	ec 01       	movw	r28, r24
     da8:	79 01       	movw	r14, r18
     daa:	20 2f       	mov	r18, r16
     dac:	39 de       	rcall	.-910    	; 0xa20 <uECC_vli_sub>
     dae:	88 23       	and	r24, r24
     db0:	29 f0       	breq	.+10     	; 0xdbc <uECC_vli_modSub+0x20>
     db2:	20 2f       	mov	r18, r16
     db4:	a7 01       	movw	r20, r14
     db6:	be 01       	movw	r22, r28
     db8:	ce 01       	movw	r24, r28
     dba:	61 dd       	rcall	.-1342   	; 0x87e <uECC_vli_add>
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	0f 91       	pop	r16
     dc2:	ff 90       	pop	r15
     dc4:	ef 90       	pop	r14
     dc6:	08 95       	ret

00000dc8 <uECC_vli_modMult>:
     dc8:	2f 92       	push	r2
     dca:	3f 92       	push	r3
     dcc:	4f 92       	push	r4
     dce:	5f 92       	push	r5
     dd0:	6f 92       	push	r6
     dd2:	7f 92       	push	r7
     dd4:	8f 92       	push	r8
     dd6:	9f 92       	push	r9
     dd8:	af 92       	push	r10
     dda:	bf 92       	push	r11
     ddc:	cf 92       	push	r12
     dde:	df 92       	push	r13
     de0:	ef 92       	push	r14
     de2:	ff 92       	push	r15
     de4:	0f 93       	push	r16
     de6:	1f 93       	push	r17
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	cd b7       	in	r28, 0x3d	; 61
     dee:	de b7       	in	r29, 0x3e	; 62
     df0:	cc 5c       	subi	r28, 0xCC	; 204
     df2:	d1 09       	sbc	r29, r1
     df4:	0f b6       	in	r0, 0x3f	; 63
     df6:	f8 94       	cli
     df8:	de bf       	out	0x3e, r29	; 62
     dfa:	0f be       	out	0x3f, r0	; 63
     dfc:	cd bf       	out	0x3d, r28	; 61
     dfe:	c7 53       	subi	r28, 0x37	; 55
     e00:	df 4f       	sbci	r29, 0xFF	; 255
     e02:	99 83       	std	Y+1, r25	; 0x01
     e04:	88 83       	st	Y, r24
     e06:	c9 5c       	subi	r28, 0xC9	; 201
     e08:	d0 40       	sbci	r29, 0x00	; 0
     e0a:	c2 2e       	mov	r12, r18
     e0c:	d3 2e       	mov	r13, r19
     e0e:	a0 2e       	mov	r10, r16
     e10:	20 2f       	mov	r18, r16
     e12:	8e 01       	movw	r16, r28
     e14:	0f 5f       	subi	r16, 0xFF	; 255
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
     e18:	c8 01       	movw	r24, r16
     e1a:	d3 de       	rcall	.-602    	; 0xbc2 <uECC_vli_mult>
     e1c:	ce 01       	movw	r24, r28
     e1e:	8f 5b       	subi	r24, 0xBF	; 191
     e20:	9f 4f       	sbci	r25, 0xFF	; 255
     e22:	cf 53       	subi	r28, 0x3F	; 63
     e24:	df 4f       	sbci	r29, 0xFF	; 255
     e26:	99 83       	std	Y+1, r25	; 0x01
     e28:	88 83       	st	Y, r24
     e2a:	c1 5c       	subi	r28, 0xC1	; 193
     e2c:	d0 40       	sbci	r29, 0x00	; 0
     e2e:	cd 53       	subi	r28, 0x3D	; 61
     e30:	df 4f       	sbci	r29, 0xFF	; 255
     e32:	19 83       	std	Y+1, r17	; 0x01
     e34:	08 83       	st	Y, r16
     e36:	c3 5c       	subi	r28, 0xC3	; 195
     e38:	d0 40       	sbci	r29, 0x00	; 0
     e3a:	8a 2c       	mov	r8, r10
     e3c:	0a 2c       	mov	r0, r10
     e3e:	00 0c       	add	r0, r0
     e40:	99 08       	sbc	r9, r9
     e42:	6a 2d       	mov	r22, r10
     e44:	8c 2d       	mov	r24, r12
     e46:	9d 2d       	mov	r25, r13
     e48:	24 df       	rcall	.-440    	; 0xc92 <uECC_vli_numBits>
     e4a:	34 01       	movw	r6, r8
     e4c:	66 0c       	add	r6, r6
     e4e:	77 1c       	adc	r7, r7
     e50:	66 0c       	add	r6, r6
     e52:	77 1c       	adc	r7, r7
     e54:	66 0c       	add	r6, r6
     e56:	77 1c       	adc	r7, r7
     e58:	66 0c       	add	r6, r6
     e5a:	77 1c       	adc	r7, r7
     e5c:	68 1a       	sub	r6, r24
     e5e:	79 0a       	sbc	r7, r25
     e60:	73 01       	movw	r14, r6
     e62:	1a f4       	brpl	.+6      	; 0xe6a <uECC_vli_modMult+0xa2>
     e64:	27 e0       	ldi	r18, 0x07	; 7
     e66:	e2 0e       	add	r14, r18
     e68:	f1 1c       	adc	r15, r1
     e6a:	f5 94       	asr	r15
     e6c:	e7 94       	ror	r14
     e6e:	f5 94       	asr	r15
     e70:	e7 94       	ror	r14
     e72:	f5 94       	asr	r15
     e74:	e7 94       	ror	r14
     e76:	c3 01       	movw	r24, r6
     e78:	87 70       	andi	r24, 0x07	; 7
     e7a:	90 78       	andi	r25, 0x80	; 128
     e7c:	99 23       	and	r25, r25
     e7e:	24 f4       	brge	.+8      	; 0xe88 <uECC_vli_modMult+0xc0>
     e80:	01 97       	sbiw	r24, 0x01	; 1
     e82:	88 6f       	ori	r24, 0xF8	; 248
     e84:	9f 6f       	ori	r25, 0xFF	; 255
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	18 2f       	mov	r17, r24
     e8a:	6e 2d       	mov	r22, r14
     e8c:	ce 01       	movw	r24, r28
     e8e:	8f 57       	subi	r24, 0x7F	; 127
     e90:	9f 4f       	sbci	r25, 0xFF	; 255
     e92:	0f dc       	rcall	.-2018   	; 0x6b2 <uECC_vli_clear>
     e94:	11 16       	cp	r1, r17
     e96:	c4 f5       	brge	.+112    	; 0xf08 <uECC_vli_modMult+0x140>
     e98:	aa 20       	and	r10, r10
     e9a:	09 f4       	brne	.+2      	; 0xe9e <uECC_vli_modMult+0xd6>
     e9c:	41 c0       	rjmp	.+130    	; 0xf20 <uECC_vli_modMult+0x158>
     e9e:	ac 2d       	mov	r26, r12
     ea0:	bd 2d       	mov	r27, r13
     ea2:	0e 2c       	mov	r0, r14
     ea4:	00 0c       	add	r0, r0
     ea6:	ff 08       	sbc	r15, r15
     ea8:	e1 e8       	ldi	r30, 0x81	; 129
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	ec 0f       	add	r30, r28
     eae:	fd 1f       	adc	r31, r29
     eb0:	ee 0d       	add	r30, r14
     eb2:	ff 1d       	adc	r31, r15
     eb4:	8f ef       	ldi	r24, 0xFF	; 255
     eb6:	8a 0d       	add	r24, r10
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	01 96       	adiw	r24, 0x01	; 1
     ebc:	e8 0e       	add	r14, r24
     ebe:	f9 1e       	adc	r15, r25
     ec0:	41 e8       	ldi	r20, 0x81	; 129
     ec2:	50 e0       	ldi	r21, 0x00	; 0
     ec4:	4c 0f       	add	r20, r28
     ec6:	5d 1f       	adc	r21, r29
     ec8:	4e 0d       	add	r20, r14
     eca:	5f 1d       	adc	r21, r15
     ecc:	00 e0       	ldi	r16, 0x00	; 0
     ece:	68 e0       	ldi	r22, 0x08	; 8
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	61 1b       	sub	r22, r17
     ed4:	71 09       	sbc	r23, r1
     ed6:	17 fd       	sbrc	r17, 7
     ed8:	73 95       	inc	r23
     eda:	9d 91       	ld	r25, X+
     edc:	89 2f       	mov	r24, r25
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	9c 01       	movw	r18, r24
     ee2:	01 2e       	mov	r0, r17
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <uECC_vli_modMult+0x122>
     ee6:	22 0f       	add	r18, r18
     ee8:	33 1f       	adc	r19, r19
     eea:	0a 94       	dec	r0
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <uECC_vli_modMult+0x11e>
     eee:	20 2b       	or	r18, r16
     ef0:	21 93       	st	Z+, r18
     ef2:	06 2e       	mov	r0, r22
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <uECC_vli_modMult+0x132>
     ef6:	95 95       	asr	r25
     ef8:	87 95       	ror	r24
     efa:	0a 94       	dec	r0
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <uECC_vli_modMult+0x12e>
     efe:	08 2f       	mov	r16, r24
     f00:	e4 17       	cp	r30, r20
     f02:	f5 07       	cpc	r31, r21
     f04:	51 f7       	brne	.-44     	; 0xeda <uECC_vli_modMult+0x112>
     f06:	0c c0       	rjmp	.+24     	; 0xf20 <uECC_vli_modMult+0x158>
     f08:	4a 2d       	mov	r20, r10
     f0a:	6c 2d       	mov	r22, r12
     f0c:	7d 2d       	mov	r23, r13
     f0e:	81 e8       	ldi	r24, 0x81	; 129
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	8c 0f       	add	r24, r28
     f14:	9d 1f       	adc	r25, r29
     f16:	8e 0d       	add	r24, r14
     f18:	91 1d       	adc	r25, r1
     f1a:	e7 fc       	sbrc	r14, 7
     f1c:	9a 95       	dec	r25
     f1e:	f0 db       	rcall	.-2080   	; 0x700 <uECC_vli_set>
     f20:	77 20       	and	r7, r7
     f22:	0c f4       	brge	.+2      	; 0xf26 <uECC_vli_modMult+0x15e>
     f24:	a6 c0       	rjmp	.+332    	; 0x1072 <uECC_vli_modMult+0x2aa>
     f26:	84 01       	movw	r16, r8
     f28:	00 0f       	add	r16, r16
     f2a:	11 1f       	adc	r17, r17
     f2c:	bb 24       	eor	r11, r11
     f2e:	b3 94       	inc	r11
     f30:	44 24       	eor	r4, r4
     f32:	43 94       	inc	r4
     f34:	51 2c       	mov	r5, r1
     f36:	7e 01       	movw	r14, r28
     f38:	31 e8       	ldi	r19, 0x81	; 129
     f3a:	e3 0e       	add	r14, r19
     f3c:	f1 1c       	adc	r15, r1
     f3e:	c9 53       	subi	r28, 0x39	; 57
     f40:	df 4f       	sbci	r29, 0xFF	; 255
     f42:	e8 82       	st	Y, r14
     f44:	c7 5c       	subi	r28, 0xC7	; 199
     f46:	d0 40       	sbci	r29, 0x00	; 0
     f48:	c8 53       	subi	r28, 0x38	; 56
     f4a:	df 4f       	sbci	r29, 0xFF	; 255
     f4c:	f8 82       	st	Y, r15
     f4e:	c8 5c       	subi	r28, 0xC8	; 200
     f50:	d0 40       	sbci	r29, 0x00	; 0
     f52:	dd 24       	eor	r13, r13
     f54:	d3 94       	inc	r13
     f56:	c1 2c       	mov	r12, r1
     f58:	c4 01       	movw	r24, r8
     f5a:	01 97       	sbiw	r24, 0x01	; 1
     f5c:	17 01       	movw	r2, r14
     f5e:	28 0e       	add	r2, r24
     f60:	39 1e       	adc	r3, r25
     f62:	8e 0c       	add	r8, r14
     f64:	9f 1c       	adc	r9, r15
     f66:	c7 01       	movw	r24, r14
     f68:	8a 0d       	add	r24, r10
     f6a:	91 1d       	adc	r25, r1
     f6c:	a7 fc       	sbrc	r10, 7
     f6e:	9a 95       	dec	r25
     f70:	cb 53       	subi	r28, 0x3B	; 59
     f72:	df 4f       	sbci	r29, 0xFF	; 255
     f74:	99 83       	std	Y+1, r25	; 0x01
     f76:	88 83       	st	Y, r24
     f78:	c5 5c       	subi	r28, 0xC5	; 197
     f7a:	d0 40       	sbci	r29, 0x00	; 0
     f7c:	57 c0       	rjmp	.+174    	; 0x102c <uECC_vli_modMult+0x264>
     f7e:	e6 2f       	mov	r30, r22
     f80:	06 2e       	mov	r0, r22
     f82:	00 0c       	add	r0, r0
     f84:	ff 0b       	sbc	r31, r31
     f86:	da 01       	movw	r26, r20
     f88:	ae 0f       	add	r26, r30
     f8a:	bf 1f       	adc	r27, r31
     f8c:	bc 90       	ld	r11, X
     f8e:	c5 53       	subi	r28, 0x35	; 53
     f90:	df 4f       	sbci	r29, 0xFF	; 255
     f92:	b8 82       	st	Y, r11
     f94:	cb 5c       	subi	r28, 0xCB	; 203
     f96:	d0 40       	sbci	r29, 0x00	; 0
     f98:	8e 0d       	add	r24, r14
     f9a:	9f 1d       	adc	r25, r15
     f9c:	dc 01       	movw	r26, r24
     f9e:	8c 91       	ld	r24, X
     fa0:	b8 1a       	sub	r11, r24
     fa2:	8b 2d       	mov	r24, r11
     fa4:	87 1b       	sub	r24, r23
     fa6:	c5 53       	subi	r28, 0x35	; 53
     fa8:	df 4f       	sbci	r29, 0xFF	; 255
     faa:	b8 81       	ld	r27, Y
     fac:	cb 5c       	subi	r28, 0xCB	; 203
     fae:	d0 40       	sbci	r29, 0x00	; 0
     fb0:	b8 17       	cp	r27, r24
     fb2:	21 f0       	breq	.+8      	; 0xfbc <uECC_vli_modMult+0x1f4>
     fb4:	7d 2d       	mov	r23, r13
     fb6:	b8 17       	cp	r27, r24
     fb8:	08 f0       	brcs	.+2      	; 0xfbc <uECC_vli_modMult+0x1f4>
     fba:	7c 2d       	mov	r23, r12
     fbc:	e2 0f       	add	r30, r18
     fbe:	f3 1f       	adc	r31, r19
     fc0:	80 83       	st	Z, r24
     fc2:	6f 5f       	subi	r22, 0xFF	; 255
     fc4:	86 2f       	mov	r24, r22
     fc6:	06 2e       	mov	r0, r22
     fc8:	00 0c       	add	r0, r0
     fca:	99 0b       	sbc	r25, r25
     fcc:	80 17       	cp	r24, r16
     fce:	91 07       	cpc	r25, r17
     fd0:	b4 f2       	brlt	.-84     	; 0xf7e <uECC_vli_modMult+0x1b6>
     fd2:	c4 53       	subi	r28, 0x34	; 52
     fd4:	df 4f       	sbci	r29, 0xFF	; 255
     fd6:	b8 80       	ld	r11, Y
     fd8:	cc 5c       	subi	r28, 0xCC	; 204
     fda:	d0 40       	sbci	r29, 0x00	; 0
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <uECC_vli_modMult+0x218>
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	b7 12       	cpse	r11, r23
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	b8 2e       	mov	r11, r24
     fe8:	6a 2d       	mov	r22, r10
     fea:	c9 53       	subi	r28, 0x39	; 57
     fec:	df 4f       	sbci	r29, 0xFF	; 255
     fee:	88 81       	ld	r24, Y
     ff0:	c7 5c       	subi	r28, 0xC7	; 199
     ff2:	d0 40       	sbci	r29, 0x00	; 0
     ff4:	c8 53       	subi	r28, 0x38	; 56
     ff6:	df 4f       	sbci	r29, 0xFF	; 255
     ff8:	98 81       	ld	r25, Y
     ffa:	c8 5c       	subi	r28, 0xC8	; 200
     ffc:	d0 40       	sbci	r29, 0x00	; 0
     ffe:	cd db       	rcall	.-2150   	; 0x79a <uECC_vli_rshift1>
    1000:	f4 01       	movw	r30, r8
    1002:	80 81       	ld	r24, Z
    1004:	f0 e8       	ldi	r31, 0x80	; 128
    1006:	8f 9f       	mul	r24, r31
    1008:	c0 01       	movw	r24, r0
    100a:	11 24       	eor	r1, r1
    100c:	d1 01       	movw	r26, r2
    100e:	9c 91       	ld	r25, X
    1010:	89 2b       	or	r24, r25
    1012:	8c 93       	st	X, r24
    1014:	6a 2d       	mov	r22, r10
    1016:	cb 53       	subi	r28, 0x3B	; 59
    1018:	df 4f       	sbci	r29, 0xFF	; 255
    101a:	88 81       	ld	r24, Y
    101c:	99 81       	ldd	r25, Y+1	; 0x01
    101e:	c5 5c       	subi	r28, 0xC5	; 197
    1020:	d0 40       	sbci	r29, 0x00	; 0
    1022:	bb db       	rcall	.-2186   	; 0x79a <uECC_vli_rshift1>
    1024:	b1 e0       	ldi	r27, 0x01	; 1
    1026:	6b 1a       	sub	r6, r27
    1028:	71 08       	sbc	r7, r1
    102a:	28 f1       	brcs	.+74     	; 0x1076 <uECC_vli_modMult+0x2ae>
    102c:	10 16       	cp	r1, r16
    102e:	11 06       	cpc	r1, r17
    1030:	b4 f6       	brge	.-84     	; 0xfde <uECC_vli_modMult+0x216>
    1032:	8b 2d       	mov	r24, r11
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	fc 01       	movw	r30, r24
    1038:	ee 0f       	add	r30, r30
    103a:	ff 1f       	adc	r31, r31
    103c:	21 ec       	ldi	r18, 0xC1	; 193
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	2c 0f       	add	r18, r28
    1042:	3d 1f       	adc	r19, r29
    1044:	e2 0f       	add	r30, r18
    1046:	f3 1f       	adc	r31, r19
    1048:	40 81       	ld	r20, Z
    104a:	51 81       	ldd	r21, Z+1	; 0x01
    104c:	f2 01       	movw	r30, r4
    104e:	e8 1b       	sub	r30, r24
    1050:	f9 0b       	sbc	r31, r25
    1052:	ee 0f       	add	r30, r30
    1054:	ff 1f       	adc	r31, r31
    1056:	e2 0f       	add	r30, r18
    1058:	f3 1f       	adc	r31, r19
    105a:	20 81       	ld	r18, Z
    105c:	31 81       	ldd	r19, Z+1	; 0x01
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	60 e0       	ldi	r22, 0x00	; 0
    1066:	c4 53       	subi	r28, 0x34	; 52
    1068:	df 4f       	sbci	r29, 0xFF	; 255
    106a:	b8 82       	st	Y, r11
    106c:	cc 5c       	subi	r28, 0xCC	; 204
    106e:	d0 40       	sbci	r29, 0x00	; 0
    1070:	86 cf       	rjmp	.-244    	; 0xf7e <uECC_vli_modMult+0x1b6>
    1072:	bb 24       	eor	r11, r11
    1074:	b3 94       	inc	r11
    1076:	eb 2d       	mov	r30, r11
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	ee 0f       	add	r30, r30
    107c:	ff 1f       	adc	r31, r31
    107e:	81 ec       	ldi	r24, 0xC1	; 193
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	8c 0f       	add	r24, r28
    1084:	9d 1f       	adc	r25, r29
    1086:	e8 0f       	add	r30, r24
    1088:	f9 1f       	adc	r31, r25
    108a:	60 81       	ld	r22, Z
    108c:	71 81       	ldd	r23, Z+1	; 0x01
    108e:	4a 2d       	mov	r20, r10
    1090:	c7 53       	subi	r28, 0x37	; 55
    1092:	df 4f       	sbci	r29, 0xFF	; 255
    1094:	88 81       	ld	r24, Y
    1096:	99 81       	ldd	r25, Y+1	; 0x01
    1098:	c9 5c       	subi	r28, 0xC9	; 201
    109a:	d0 40       	sbci	r29, 0x00	; 0
    109c:	31 db       	rcall	.-2462   	; 0x700 <uECC_vli_set>
    109e:	c4 53       	subi	r28, 0x34	; 52
    10a0:	df 4f       	sbci	r29, 0xFF	; 255
    10a2:	0f b6       	in	r0, 0x3f	; 63
    10a4:	f8 94       	cli
    10a6:	de bf       	out	0x3e, r29	; 62
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	cd bf       	out	0x3d, r28	; 61
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	1f 91       	pop	r17
    10b2:	0f 91       	pop	r16
    10b4:	ff 90       	pop	r15
    10b6:	ef 90       	pop	r14
    10b8:	df 90       	pop	r13
    10ba:	cf 90       	pop	r12
    10bc:	bf 90       	pop	r11
    10be:	af 90       	pop	r10
    10c0:	9f 90       	pop	r9
    10c2:	8f 90       	pop	r8
    10c4:	7f 90       	pop	r7
    10c6:	6f 90       	pop	r6
    10c8:	5f 90       	pop	r5
    10ca:	4f 90       	pop	r4
    10cc:	3f 90       	pop	r3
    10ce:	2f 90       	pop	r2
    10d0:	08 95       	ret

000010d2 <uECC_vli_modMult_fast>:
    10d2:	ef 92       	push	r14
    10d4:	ff 92       	push	r15
    10d6:	0f 93       	push	r16
    10d8:	1f 93       	push	r17
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	cd b7       	in	r28, 0x3d	; 61
    10e0:	de b7       	in	r29, 0x3e	; 62
    10e2:	c0 54       	subi	r28, 0x40	; 64
    10e4:	d1 09       	sbc	r29, r1
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	f8 94       	cli
    10ea:	de bf       	out	0x3e, r29	; 62
    10ec:	0f be       	out	0x3f, r0	; 63
    10ee:	cd bf       	out	0x3d, r28	; 61
    10f0:	7c 01       	movw	r14, r24
    10f2:	89 01       	movw	r16, r18
    10f4:	f9 01       	movw	r30, r18
    10f6:	20 81       	ld	r18, Z
    10f8:	ce 01       	movw	r24, r28
    10fa:	01 96       	adiw	r24, 0x01	; 1
    10fc:	62 dd       	rcall	.-1340   	; 0xbc2 <uECC_vli_mult>
    10fe:	f8 01       	movw	r30, r16
    1100:	e6 55       	subi	r30, 0x56	; 86
    1102:	ff 4f       	sbci	r31, 0xFF	; 255
    1104:	01 90       	ld	r0, Z+
    1106:	f0 81       	ld	r31, Z
    1108:	e0 2d       	mov	r30, r0
    110a:	be 01       	movw	r22, r28
    110c:	6f 5f       	subi	r22, 0xFF	; 255
    110e:	7f 4f       	sbci	r23, 0xFF	; 255
    1110:	c7 01       	movw	r24, r14
    1112:	09 95       	icall
    1114:	c0 5c       	subi	r28, 0xC0	; 192
    1116:	df 4f       	sbci	r29, 0xFF	; 255
    1118:	0f b6       	in	r0, 0x3f	; 63
    111a:	f8 94       	cli
    111c:	de bf       	out	0x3e, r29	; 62
    111e:	0f be       	out	0x3f, r0	; 63
    1120:	cd bf       	out	0x3d, r28	; 61
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	08 95       	ret

00001130 <uECC_vli_modSquare_fast>:
    1130:	9a 01       	movw	r18, r20
    1132:	ab 01       	movw	r20, r22
    1134:	ce cf       	rjmp	.-100    	; 0x10d2 <uECC_vli_modMult_fast>
    1136:	08 95       	ret

00001138 <vli_modInv_update>:
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	8c 01       	movw	r16, r24
    1142:	c4 2f       	mov	r28, r20
    1144:	fc 01       	movw	r30, r24
    1146:	80 81       	ld	r24, Z
    1148:	80 ff       	sbrs	r24, 0
    114a:	15 c0       	rjmp	.+42     	; 0x1176 <vli_modInv_update+0x3e>
    114c:	24 2f       	mov	r18, r20
    114e:	ab 01       	movw	r20, r22
    1150:	b8 01       	movw	r22, r16
    1152:	c8 01       	movw	r24, r16
    1154:	94 db       	rcall	.-2264   	; 0x87e <uECC_vli_add>
    1156:	d8 2f       	mov	r29, r24
    1158:	6c 2f       	mov	r22, r28
    115a:	c8 01       	movw	r24, r16
    115c:	1e db       	rcall	.-2500   	; 0x79a <uECC_vli_rshift1>
    115e:	dd 23       	and	r29, r29
    1160:	69 f0       	breq	.+26     	; 0x117c <vli_modInv_update+0x44>
    1162:	ec 2f       	mov	r30, r28
    1164:	cc 0f       	add	r28, r28
    1166:	ff 0b       	sbc	r31, r31
    1168:	31 97       	sbiw	r30, 0x01	; 1
    116a:	e0 0f       	add	r30, r16
    116c:	f1 1f       	adc	r31, r17
    116e:	80 81       	ld	r24, Z
    1170:	80 68       	ori	r24, 0x80	; 128
    1172:	80 83       	st	Z, r24
    1174:	03 c0       	rjmp	.+6      	; 0x117c <vli_modInv_update+0x44>
    1176:	64 2f       	mov	r22, r20
    1178:	c8 01       	movw	r24, r16
    117a:	0f db       	rcall	.-2530   	; 0x79a <uECC_vli_rshift1>
    117c:	df 91       	pop	r29
    117e:	cf 91       	pop	r28
    1180:	1f 91       	pop	r17
    1182:	0f 91       	pop	r16
    1184:	08 95       	ret

00001186 <uECC_vli_modInv>:
    1186:	af 92       	push	r10
    1188:	bf 92       	push	r11
    118a:	cf 92       	push	r12
    118c:	df 92       	push	r13
    118e:	ef 92       	push	r14
    1190:	ff 92       	push	r15
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
    1198:	cd b7       	in	r28, 0x3d	; 61
    119a:	de b7       	in	r29, 0x3e	; 62
    119c:	c0 58       	subi	r28, 0x80	; 128
    119e:	d1 09       	sbc	r29, r1
    11a0:	0f b6       	in	r0, 0x3f	; 63
    11a2:	f8 94       	cli
    11a4:	de bf       	out	0x3e, r29	; 62
    11a6:	0f be       	out	0x3f, r0	; 63
    11a8:	cd bf       	out	0x3d, r28	; 61
    11aa:	5c 01       	movw	r10, r24
    11ac:	6b 01       	movw	r12, r22
    11ae:	7a 01       	movw	r14, r20
    11b0:	12 2f       	mov	r17, r18
    11b2:	62 2f       	mov	r22, r18
    11b4:	c6 01       	movw	r24, r12
    11b6:	41 dd       	rcall	.-1406   	; 0xc3a <uECC_vli_isZero>
    11b8:	88 23       	and	r24, r24
    11ba:	21 f0       	breq	.+8      	; 0x11c4 <uECC_vli_modInv+0x3e>
    11bc:	61 2f       	mov	r22, r17
    11be:	c5 01       	movw	r24, r10
    11c0:	78 da       	rcall	.-2832   	; 0x6b2 <uECC_vli_clear>
    11c2:	a1 c0       	rjmp	.+322    	; 0x1306 <uECC_vli_modInv+0x180>
    11c4:	41 2f       	mov	r20, r17
    11c6:	b6 01       	movw	r22, r12
    11c8:	ce 01       	movw	r24, r28
    11ca:	01 96       	adiw	r24, 0x01	; 1
    11cc:	99 da       	rcall	.-2766   	; 0x700 <uECC_vli_set>
    11ce:	41 2f       	mov	r20, r17
    11d0:	b7 01       	movw	r22, r14
    11d2:	ce 01       	movw	r24, r28
    11d4:	81 96       	adiw	r24, 0x21	; 33
    11d6:	94 da       	rcall	.-2776   	; 0x700 <uECC_vli_set>
    11d8:	61 2f       	mov	r22, r17
    11da:	ce 01       	movw	r24, r28
    11dc:	8f 5b       	subi	r24, 0xBF	; 191
    11de:	9f 4f       	sbci	r25, 0xFF	; 255
    11e0:	68 da       	rcall	.-2864   	; 0x6b2 <uECC_vli_clear>
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	22 96       	adiw	r28, 0x02	; 2
    11e6:	8f af       	std	Y+63, r24	; 0x3f
    11e8:	22 97       	sbiw	r28, 0x02	; 2
    11ea:	61 2f       	mov	r22, r17
    11ec:	ce 01       	movw	r24, r28
    11ee:	8f 59       	subi	r24, 0x9F	; 159
    11f0:	9f 4f       	sbci	r25, 0xFF	; 255
    11f2:	5f da       	rcall	.-2882   	; 0x6b2 <uECC_vli_clear>
    11f4:	79 c0       	rjmp	.+242    	; 0x12e8 <uECC_vli_modInv+0x162>
    11f6:	99 81       	ldd	r25, Y+1	; 0x01
    11f8:	90 fd       	sbrc	r25, 0
    11fa:	0b c0       	rjmp	.+22     	; 0x1212 <uECC_vli_modInv+0x8c>
    11fc:	61 2f       	mov	r22, r17
    11fe:	ce 01       	movw	r24, r28
    1200:	01 96       	adiw	r24, 0x01	; 1
    1202:	cb da       	rcall	.-2666   	; 0x79a <uECC_vli_rshift1>
    1204:	41 2f       	mov	r20, r17
    1206:	b7 01       	movw	r22, r14
    1208:	ce 01       	movw	r24, r28
    120a:	8f 5b       	subi	r24, 0xBF	; 191
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	94 df       	rcall	.-216    	; 0x1138 <vli_modInv_update>
    1210:	6b c0       	rjmp	.+214    	; 0x12e8 <uECC_vli_modInv+0x162>
    1212:	99 a1       	ldd	r25, Y+33	; 0x21
    1214:	90 fd       	sbrc	r25, 0
    1216:	0b c0       	rjmp	.+22     	; 0x122e <uECC_vli_modInv+0xa8>
    1218:	61 2f       	mov	r22, r17
    121a:	ce 01       	movw	r24, r28
    121c:	81 96       	adiw	r24, 0x21	; 33
    121e:	bd da       	rcall	.-2694   	; 0x79a <uECC_vli_rshift1>
    1220:	41 2f       	mov	r20, r17
    1222:	b7 01       	movw	r22, r14
    1224:	ce 01       	movw	r24, r28
    1226:	8f 59       	subi	r24, 0x9F	; 159
    1228:	9f 4f       	sbci	r25, 0xFF	; 255
    122a:	86 df       	rcall	.-244    	; 0x1138 <vli_modInv_update>
    122c:	5d c0       	rjmp	.+186    	; 0x12e8 <uECC_vli_modInv+0x162>
    122e:	18 16       	cp	r1, r24
    1230:	74 f5       	brge	.+92     	; 0x128e <uECC_vli_modInv+0x108>
    1232:	21 2f       	mov	r18, r17
    1234:	ae 01       	movw	r20, r28
    1236:	4f 5d       	subi	r20, 0xDF	; 223
    1238:	5f 4f       	sbci	r21, 0xFF	; 255
    123a:	be 01       	movw	r22, r28
    123c:	6f 5f       	subi	r22, 0xFF	; 255
    123e:	7f 4f       	sbci	r23, 0xFF	; 255
    1240:	cb 01       	movw	r24, r22
    1242:	ee db       	rcall	.-2084   	; 0xa20 <uECC_vli_sub>
    1244:	61 2f       	mov	r22, r17
    1246:	ce 01       	movw	r24, r28
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	a7 da       	rcall	.-2738   	; 0x79a <uECC_vli_rshift1>
    124c:	41 2f       	mov	r20, r17
    124e:	be 01       	movw	r22, r28
    1250:	6f 59       	subi	r22, 0x9F	; 159
    1252:	7f 4f       	sbci	r23, 0xFF	; 255
    1254:	ce 01       	movw	r24, r28
    1256:	8f 5b       	subi	r24, 0xBF	; 191
    1258:	9f 4f       	sbci	r25, 0xFF	; 255
    125a:	52 dd       	rcall	.-1372   	; 0xd00 <uECC_vli_cmp_unsafe>
    125c:	88 23       	and	r24, r24
    125e:	3c f4       	brge	.+14     	; 0x126e <uECC_vli_modInv+0xe8>
    1260:	21 2f       	mov	r18, r17
    1262:	a7 01       	movw	r20, r14
    1264:	be 01       	movw	r22, r28
    1266:	6f 5b       	subi	r22, 0xBF	; 191
    1268:	7f 4f       	sbci	r23, 0xFF	; 255
    126a:	cb 01       	movw	r24, r22
    126c:	08 db       	rcall	.-2544   	; 0x87e <uECC_vli_add>
    126e:	21 2f       	mov	r18, r17
    1270:	ae 01       	movw	r20, r28
    1272:	4f 59       	subi	r20, 0x9F	; 159
    1274:	5f 4f       	sbci	r21, 0xFF	; 255
    1276:	be 01       	movw	r22, r28
    1278:	6f 5b       	subi	r22, 0xBF	; 191
    127a:	7f 4f       	sbci	r23, 0xFF	; 255
    127c:	cb 01       	movw	r24, r22
    127e:	d0 db       	rcall	.-2144   	; 0xa20 <uECC_vli_sub>
    1280:	41 2f       	mov	r20, r17
    1282:	b7 01       	movw	r22, r14
    1284:	ce 01       	movw	r24, r28
    1286:	8f 5b       	subi	r24, 0xBF	; 191
    1288:	9f 4f       	sbci	r25, 0xFF	; 255
    128a:	56 df       	rcall	.-340    	; 0x1138 <vli_modInv_update>
    128c:	2d c0       	rjmp	.+90     	; 0x12e8 <uECC_vli_modInv+0x162>
    128e:	21 2f       	mov	r18, r17
    1290:	ae 01       	movw	r20, r28
    1292:	4f 5f       	subi	r20, 0xFF	; 255
    1294:	5f 4f       	sbci	r21, 0xFF	; 255
    1296:	be 01       	movw	r22, r28
    1298:	6f 5d       	subi	r22, 0xDF	; 223
    129a:	7f 4f       	sbci	r23, 0xFF	; 255
    129c:	cb 01       	movw	r24, r22
    129e:	c0 db       	rcall	.-2176   	; 0xa20 <uECC_vli_sub>
    12a0:	61 2f       	mov	r22, r17
    12a2:	ce 01       	movw	r24, r28
    12a4:	81 96       	adiw	r24, 0x21	; 33
    12a6:	79 da       	rcall	.-2830   	; 0x79a <uECC_vli_rshift1>
    12a8:	41 2f       	mov	r20, r17
    12aa:	be 01       	movw	r22, r28
    12ac:	6f 5b       	subi	r22, 0xBF	; 191
    12ae:	7f 4f       	sbci	r23, 0xFF	; 255
    12b0:	ce 01       	movw	r24, r28
    12b2:	8f 59       	subi	r24, 0x9F	; 159
    12b4:	9f 4f       	sbci	r25, 0xFF	; 255
    12b6:	24 dd       	rcall	.-1464   	; 0xd00 <uECC_vli_cmp_unsafe>
    12b8:	88 23       	and	r24, r24
    12ba:	3c f4       	brge	.+14     	; 0x12ca <uECC_vli_modInv+0x144>
    12bc:	21 2f       	mov	r18, r17
    12be:	a7 01       	movw	r20, r14
    12c0:	be 01       	movw	r22, r28
    12c2:	6f 59       	subi	r22, 0x9F	; 159
    12c4:	7f 4f       	sbci	r23, 0xFF	; 255
    12c6:	cb 01       	movw	r24, r22
    12c8:	da da       	rcall	.-2636   	; 0x87e <uECC_vli_add>
    12ca:	21 2f       	mov	r18, r17
    12cc:	ae 01       	movw	r20, r28
    12ce:	4f 5b       	subi	r20, 0xBF	; 191
    12d0:	5f 4f       	sbci	r21, 0xFF	; 255
    12d2:	be 01       	movw	r22, r28
    12d4:	6f 59       	subi	r22, 0x9F	; 159
    12d6:	7f 4f       	sbci	r23, 0xFF	; 255
    12d8:	cb 01       	movw	r24, r22
    12da:	a2 db       	rcall	.-2236   	; 0xa20 <uECC_vli_sub>
    12dc:	41 2f       	mov	r20, r17
    12de:	b7 01       	movw	r22, r14
    12e0:	ce 01       	movw	r24, r28
    12e2:	8f 59       	subi	r24, 0x9F	; 159
    12e4:	9f 4f       	sbci	r25, 0xFF	; 255
    12e6:	28 df       	rcall	.-432    	; 0x1138 <vli_modInv_update>
    12e8:	41 2f       	mov	r20, r17
    12ea:	be 01       	movw	r22, r28
    12ec:	6f 5d       	subi	r22, 0xDF	; 223
    12ee:	7f 4f       	sbci	r23, 0xFF	; 255
    12f0:	ce 01       	movw	r24, r28
    12f2:	01 96       	adiw	r24, 0x01	; 1
    12f4:	05 dd       	rcall	.-1526   	; 0xd00 <uECC_vli_cmp_unsafe>
    12f6:	81 11       	cpse	r24, r1
    12f8:	7e cf       	rjmp	.-260    	; 0x11f6 <uECC_vli_modInv+0x70>
    12fa:	41 2f       	mov	r20, r17
    12fc:	be 01       	movw	r22, r28
    12fe:	6f 5b       	subi	r22, 0xBF	; 191
    1300:	7f 4f       	sbci	r23, 0xFF	; 255
    1302:	c5 01       	movw	r24, r10
    1304:	fd d9       	rcall	.-3078   	; 0x700 <uECC_vli_set>
    1306:	c0 58       	subi	r28, 0x80	; 128
    1308:	df 4f       	sbci	r29, 0xFF	; 255
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	f8 94       	cli
    130e:	de bf       	out	0x3e, r29	; 62
    1310:	0f be       	out	0x3f, r0	; 63
    1312:	cd bf       	out	0x3d, r28	; 61
    1314:	df 91       	pop	r29
    1316:	cf 91       	pop	r28
    1318:	1f 91       	pop	r17
    131a:	ff 90       	pop	r15
    131c:	ef 90       	pop	r14
    131e:	df 90       	pop	r13
    1320:	cf 90       	pop	r12
    1322:	bf 90       	pop	r11
    1324:	af 90       	pop	r10
    1326:	08 95       	ret

00001328 <double_jacobian_default>:
    1328:	6f 92       	push	r6
    132a:	7f 92       	push	r7
    132c:	8f 92       	push	r8
    132e:	9f 92       	push	r9
    1330:	af 92       	push	r10
    1332:	bf 92       	push	r11
    1334:	cf 92       	push	r12
    1336:	df 92       	push	r13
    1338:	ef 92       	push	r14
    133a:	ff 92       	push	r15
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	cf 93       	push	r28
    1342:	df 93       	push	r29
    1344:	cd b7       	in	r28, 0x3d	; 61
    1346:	de b7       	in	r29, 0x3e	; 62
    1348:	c0 54       	subi	r28, 0x40	; 64
    134a:	d1 09       	sbc	r29, r1
    134c:	0f b6       	in	r0, 0x3f	; 63
    134e:	f8 94       	cli
    1350:	de bf       	out	0x3e, r29	; 62
    1352:	0f be       	out	0x3f, r0	; 63
    1354:	cd bf       	out	0x3d, r28	; 61
    1356:	6c 01       	movw	r12, r24
    1358:	3b 01       	movw	r6, r22
    135a:	7a 01       	movw	r14, r20
    135c:	59 01       	movw	r10, r18
    135e:	f9 01       	movw	r30, r18
    1360:	10 81       	ld	r17, Z
    1362:	61 2f       	mov	r22, r17
    1364:	ca 01       	movw	r24, r20
    1366:	69 dc       	rcall	.-1838   	; 0xc3a <uECC_vli_isZero>
    1368:	81 11       	cpse	r24, r1
    136a:	96 c0       	rjmp	.+300    	; 0x1498 <double_jacobian_default+0x170>
    136c:	a5 01       	movw	r20, r10
    136e:	b3 01       	movw	r22, r6
    1370:	ce 01       	movw	r24, r28
    1372:	01 96       	adiw	r24, 0x01	; 1
    1374:	dd de       	rcall	.-582    	; 0x1130 <uECC_vli_modSquare_fast>
    1376:	95 01       	movw	r18, r10
    1378:	ae 01       	movw	r20, r28
    137a:	4f 5f       	subi	r20, 0xFF	; 255
    137c:	5f 4f       	sbci	r21, 0xFF	; 255
    137e:	b6 01       	movw	r22, r12
    1380:	ce 01       	movw	r24, r28
    1382:	81 96       	adiw	r24, 0x21	; 33
    1384:	a6 de       	rcall	.-692    	; 0x10d2 <uECC_vli_modMult_fast>
    1386:	a5 01       	movw	r20, r10
    1388:	be 01       	movw	r22, r28
    138a:	6f 5f       	subi	r22, 0xFF	; 255
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	cb 01       	movw	r24, r22
    1390:	cf de       	rcall	.-610    	; 0x1130 <uECC_vli_modSquare_fast>
    1392:	95 01       	movw	r18, r10
    1394:	a7 01       	movw	r20, r14
    1396:	b3 01       	movw	r22, r6
    1398:	c3 01       	movw	r24, r6
    139a:	9b de       	rcall	.-714    	; 0x10d2 <uECC_vli_modMult_fast>
    139c:	a5 01       	movw	r20, r10
    139e:	b7 01       	movw	r22, r14
    13a0:	c7 01       	movw	r24, r14
    13a2:	c6 de       	rcall	.-628    	; 0x1130 <uECC_vli_modSquare_fast>
    13a4:	45 01       	movw	r8, r10
    13a6:	f4 e0       	ldi	r31, 0x04	; 4
    13a8:	8f 0e       	add	r8, r31
    13aa:	91 1c       	adc	r9, r1
    13ac:	01 2f       	mov	r16, r17
    13ae:	94 01       	movw	r18, r8
    13b0:	a7 01       	movw	r20, r14
    13b2:	b6 01       	movw	r22, r12
    13b4:	c6 01       	movw	r24, r12
    13b6:	d6 dc       	rcall	.-1620   	; 0xd64 <uECC_vli_modAdd>
    13b8:	94 01       	movw	r18, r8
    13ba:	a7 01       	movw	r20, r14
    13bc:	b7 01       	movw	r22, r14
    13be:	c7 01       	movw	r24, r14
    13c0:	d1 dc       	rcall	.-1630   	; 0xd64 <uECC_vli_modAdd>
    13c2:	94 01       	movw	r18, r8
    13c4:	a7 01       	movw	r20, r14
    13c6:	b6 01       	movw	r22, r12
    13c8:	c7 01       	movw	r24, r14
    13ca:	e8 dc       	rcall	.-1584   	; 0xd9c <uECC_vli_modSub>
    13cc:	95 01       	movw	r18, r10
    13ce:	a7 01       	movw	r20, r14
    13d0:	b6 01       	movw	r22, r12
    13d2:	c6 01       	movw	r24, r12
    13d4:	7e de       	rcall	.-772    	; 0x10d2 <uECC_vli_modMult_fast>
    13d6:	94 01       	movw	r18, r8
    13d8:	a6 01       	movw	r20, r12
    13da:	b6 01       	movw	r22, r12
    13dc:	c7 01       	movw	r24, r14
    13de:	c2 dc       	rcall	.-1660   	; 0xd64 <uECC_vli_modAdd>
    13e0:	94 01       	movw	r18, r8
    13e2:	a7 01       	movw	r20, r14
    13e4:	b6 01       	movw	r22, r12
    13e6:	c6 01       	movw	r24, r12
    13e8:	bd dc       	rcall	.-1670   	; 0xd64 <uECC_vli_modAdd>
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	c6 01       	movw	r24, r12
    13f0:	3a dc       	rcall	.-1932   	; 0xc66 <uECC_vli_testBit>
    13f2:	88 23       	and	r24, r24
    13f4:	c1 f0       	breq	.+48     	; 0x1426 <double_jacobian_default+0xfe>
    13f6:	21 2f       	mov	r18, r17
    13f8:	a4 01       	movw	r20, r8
    13fa:	b6 01       	movw	r22, r12
    13fc:	c6 01       	movw	r24, r12
    13fe:	3f da       	rcall	.-2946   	; 0x87e <uECC_vli_add>
    1400:	08 2f       	mov	r16, r24
    1402:	61 2f       	mov	r22, r17
    1404:	c6 01       	movw	r24, r12
    1406:	c9 d9       	rcall	.-3182   	; 0x79a <uECC_vli_rshift1>
    1408:	e1 2f       	mov	r30, r17
    140a:	01 2e       	mov	r0, r17
    140c:	00 0c       	add	r0, r0
    140e:	ff 0b       	sbc	r31, r31
    1410:	31 97       	sbiw	r30, 0x01	; 1
    1412:	ec 0d       	add	r30, r12
    1414:	fd 1d       	adc	r31, r13
    1416:	20 e8       	ldi	r18, 0x80	; 128
    1418:	02 9f       	mul	r16, r18
    141a:	c0 01       	movw	r24, r0
    141c:	11 24       	eor	r1, r1
    141e:	00 81       	ld	r16, Z
    1420:	08 2b       	or	r16, r24
    1422:	00 83       	st	Z, r16
    1424:	03 c0       	rjmp	.+6      	; 0x142c <double_jacobian_default+0x104>
    1426:	61 2f       	mov	r22, r17
    1428:	c6 01       	movw	r24, r12
    142a:	b7 d9       	rcall	.-3218   	; 0x79a <uECC_vli_rshift1>
    142c:	a5 01       	movw	r20, r10
    142e:	b6 01       	movw	r22, r12
    1430:	c7 01       	movw	r24, r14
    1432:	7e de       	rcall	.-772    	; 0x1130 <uECC_vli_modSquare_fast>
    1434:	01 2f       	mov	r16, r17
    1436:	94 01       	movw	r18, r8
    1438:	ae 01       	movw	r20, r28
    143a:	4f 5d       	subi	r20, 0xDF	; 223
    143c:	5f 4f       	sbci	r21, 0xFF	; 255
    143e:	b7 01       	movw	r22, r14
    1440:	c7 01       	movw	r24, r14
    1442:	ac dc       	rcall	.-1704   	; 0xd9c <uECC_vli_modSub>
    1444:	94 01       	movw	r18, r8
    1446:	ae 01       	movw	r20, r28
    1448:	4f 5d       	subi	r20, 0xDF	; 223
    144a:	5f 4f       	sbci	r21, 0xFF	; 255
    144c:	b7 01       	movw	r22, r14
    144e:	c7 01       	movw	r24, r14
    1450:	a5 dc       	rcall	.-1718   	; 0xd9c <uECC_vli_modSub>
    1452:	94 01       	movw	r18, r8
    1454:	a7 01       	movw	r20, r14
    1456:	be 01       	movw	r22, r28
    1458:	6f 5d       	subi	r22, 0xDF	; 223
    145a:	7f 4f       	sbci	r23, 0xFF	; 255
    145c:	cb 01       	movw	r24, r22
    145e:	9e dc       	rcall	.-1732   	; 0xd9c <uECC_vli_modSub>
    1460:	95 01       	movw	r18, r10
    1462:	ae 01       	movw	r20, r28
    1464:	4f 5d       	subi	r20, 0xDF	; 223
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	b6 01       	movw	r22, r12
    146a:	c6 01       	movw	r24, r12
    146c:	32 de       	rcall	.-924    	; 0x10d2 <uECC_vli_modMult_fast>
    146e:	94 01       	movw	r18, r8
    1470:	ae 01       	movw	r20, r28
    1472:	4f 5f       	subi	r20, 0xFF	; 255
    1474:	5f 4f       	sbci	r21, 0xFF	; 255
    1476:	b6 01       	movw	r22, r12
    1478:	ca 01       	movw	r24, r20
    147a:	90 dc       	rcall	.-1760   	; 0xd9c <uECC_vli_modSub>
    147c:	41 2f       	mov	r20, r17
    147e:	b7 01       	movw	r22, r14
    1480:	c6 01       	movw	r24, r12
    1482:	3e d9       	rcall	.-3460   	; 0x700 <uECC_vli_set>
    1484:	41 2f       	mov	r20, r17
    1486:	b3 01       	movw	r22, r6
    1488:	c7 01       	movw	r24, r14
    148a:	3a d9       	rcall	.-3468   	; 0x700 <uECC_vli_set>
    148c:	41 2f       	mov	r20, r17
    148e:	be 01       	movw	r22, r28
    1490:	6f 5f       	subi	r22, 0xFF	; 255
    1492:	7f 4f       	sbci	r23, 0xFF	; 255
    1494:	c3 01       	movw	r24, r6
    1496:	34 d9       	rcall	.-3480   	; 0x700 <uECC_vli_set>
    1498:	c0 5c       	subi	r28, 0xC0	; 192
    149a:	df 4f       	sbci	r29, 0xFF	; 255
    149c:	0f b6       	in	r0, 0x3f	; 63
    149e:	f8 94       	cli
    14a0:	de bf       	out	0x3e, r29	; 62
    14a2:	0f be       	out	0x3f, r0	; 63
    14a4:	cd bf       	out	0x3d, r28	; 61
    14a6:	df 91       	pop	r29
    14a8:	cf 91       	pop	r28
    14aa:	1f 91       	pop	r17
    14ac:	0f 91       	pop	r16
    14ae:	ff 90       	pop	r15
    14b0:	ef 90       	pop	r14
    14b2:	df 90       	pop	r13
    14b4:	cf 90       	pop	r12
    14b6:	bf 90       	pop	r11
    14b8:	af 90       	pop	r10
    14ba:	9f 90       	pop	r9
    14bc:	8f 90       	pop	r8
    14be:	7f 90       	pop	r7
    14c0:	6f 90       	pop	r6
    14c2:	08 95       	ret

000014c4 <x_side_default>:
    14c4:	6f 92       	push	r6
    14c6:	7f 92       	push	r7
    14c8:	8f 92       	push	r8
    14ca:	9f 92       	push	r9
    14cc:	af 92       	push	r10
    14ce:	bf 92       	push	r11
    14d0:	cf 92       	push	r12
    14d2:	df 92       	push	r13
    14d4:	ef 92       	push	r14
    14d6:	ff 92       	push	r15
    14d8:	0f 93       	push	r16
    14da:	1f 93       	push	r17
    14dc:	cf 93       	push	r28
    14de:	df 93       	push	r29
    14e0:	cd b7       	in	r28, 0x3d	; 61
    14e2:	de b7       	in	r29, 0x3e	; 62
    14e4:	a0 97       	sbiw	r28, 0x20	; 32
    14e6:	0f b6       	in	r0, 0x3f	; 63
    14e8:	f8 94       	cli
    14ea:	de bf       	out	0x3e, r29	; 62
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	cd bf       	out	0x3d, r28	; 61
    14f0:	7c 01       	movw	r14, r24
    14f2:	4b 01       	movw	r8, r22
    14f4:	6a 01       	movw	r12, r20
    14f6:	ce 01       	movw	r24, r28
    14f8:	01 96       	adiw	r24, 0x01	; 1
    14fa:	3c 01       	movw	r6, r24
    14fc:	80 e2       	ldi	r24, 0x20	; 32
    14fe:	f3 01       	movw	r30, r6
    1500:	11 92       	st	Z+, r1
    1502:	8a 95       	dec	r24
    1504:	e9 f7       	brne	.-6      	; 0x1500 <x_side_default+0x3c>
    1506:	83 e0       	ldi	r24, 0x03	; 3
    1508:	89 83       	std	Y+1, r24	; 0x01
    150a:	fa 01       	movw	r30, r20
    150c:	10 81       	ld	r17, Z
    150e:	c7 01       	movw	r24, r14
    1510:	0f de       	rcall	.-994    	; 0x1130 <uECC_vli_modSquare_fast>
    1512:	56 01       	movw	r10, r12
    1514:	f4 e0       	ldi	r31, 0x04	; 4
    1516:	af 0e       	add	r10, r31
    1518:	b1 1c       	adc	r11, r1
    151a:	01 2f       	mov	r16, r17
    151c:	95 01       	movw	r18, r10
    151e:	a3 01       	movw	r20, r6
    1520:	b7 01       	movw	r22, r14
    1522:	c7 01       	movw	r24, r14
    1524:	3b dc       	rcall	.-1930   	; 0xd9c <uECC_vli_modSub>
    1526:	96 01       	movw	r18, r12
    1528:	a4 01       	movw	r20, r8
    152a:	b7 01       	movw	r22, r14
    152c:	c7 01       	movw	r24, r14
    152e:	d1 dd       	rcall	.-1118   	; 0x10d2 <uECC_vli_modMult_fast>
    1530:	a6 01       	movw	r20, r12
    1532:	4c 57       	subi	r20, 0x7C	; 124
    1534:	5f 4f       	sbci	r21, 0xFF	; 255
    1536:	95 01       	movw	r18, r10
    1538:	b7 01       	movw	r22, r14
    153a:	c7 01       	movw	r24, r14
    153c:	13 dc       	rcall	.-2010   	; 0xd64 <uECC_vli_modAdd>
    153e:	a0 96       	adiw	r28, 0x20	; 32
    1540:	0f b6       	in	r0, 0x3f	; 63
    1542:	f8 94       	cli
    1544:	de bf       	out	0x3e, r29	; 62
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	cd bf       	out	0x3d, r28	; 61
    154a:	df 91       	pop	r29
    154c:	cf 91       	pop	r28
    154e:	1f 91       	pop	r17
    1550:	0f 91       	pop	r16
    1552:	ff 90       	pop	r15
    1554:	ef 90       	pop	r14
    1556:	df 90       	pop	r13
    1558:	cf 90       	pop	r12
    155a:	bf 90       	pop	r11
    155c:	af 90       	pop	r10
    155e:	9f 90       	pop	r9
    1560:	8f 90       	pop	r8
    1562:	7f 90       	pop	r7
    1564:	6f 90       	pop	r6
    1566:	08 95       	ret

00001568 <mod_sqrt_default>:
    1568:	bf 92       	push	r11
    156a:	cf 92       	push	r12
    156c:	df 92       	push	r13
    156e:	ef 92       	push	r14
    1570:	ff 92       	push	r15
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	cd b7       	in	r28, 0x3d	; 61
    157c:	de b7       	in	r29, 0x3e	; 62
    157e:	c0 54       	subi	r28, 0x40	; 64
    1580:	d1 09       	sbc	r29, r1
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	6c 01       	movw	r12, r24
    158e:	7b 01       	movw	r14, r22
    1590:	90 e2       	ldi	r25, 0x20	; 32
    1592:	8e 01       	movw	r16, r28
    1594:	0f 5f       	subi	r16, 0xFF	; 255
    1596:	1f 4f       	sbci	r17, 0xFF	; 255
    1598:	d8 01       	movw	r26, r16
    159a:	e9 2f       	mov	r30, r25
    159c:	1d 92       	st	X+, r1
    159e:	ea 95       	dec	r30
    15a0:	e9 f7       	brne	.-6      	; 0x159c <mod_sqrt_default+0x34>
    15a2:	81 e0       	ldi	r24, 0x01	; 1
    15a4:	89 83       	std	Y+1, r24	; 0x01
    15a6:	fe 01       	movw	r30, r28
    15a8:	b1 96       	adiw	r30, 0x21	; 33
    15aa:	df 01       	movw	r26, r30
    15ac:	1d 92       	st	X+, r1
    15ae:	9a 95       	dec	r25
    15b0:	e9 f7       	brne	.-6      	; 0x15ac <mod_sqrt_default+0x44>
    15b2:	89 a3       	std	Y+33, r24	; 0x21
    15b4:	fb 01       	movw	r30, r22
    15b6:	b0 80       	ld	r11, Z
    15b8:	6c 5f       	subi	r22, 0xFC	; 252
    15ba:	7f 4f       	sbci	r23, 0xFF	; 255
    15bc:	2b 2d       	mov	r18, r11
    15be:	a8 01       	movw	r20, r16
    15c0:	c8 01       	movw	r24, r16
    15c2:	5d d9       	rcall	.-3398   	; 0x87e <uECC_vli_add>
    15c4:	6b 2d       	mov	r22, r11
    15c6:	c8 01       	movw	r24, r16
    15c8:	64 db       	rcall	.-2360   	; 0xc92 <uECC_vli_numBits>
    15ca:	8c 01       	movw	r16, r24
    15cc:	01 50       	subi	r16, 0x01	; 1
    15ce:	11 09       	sbc	r17, r1
    15d0:	02 30       	cpi	r16, 0x02	; 2
    15d2:	11 05       	cpc	r17, r1
    15d4:	c4 f0       	brlt	.+48     	; 0x1606 <mod_sqrt_default+0x9e>
    15d6:	a7 01       	movw	r20, r14
    15d8:	be 01       	movw	r22, r28
    15da:	6f 5d       	subi	r22, 0xDF	; 223
    15dc:	7f 4f       	sbci	r23, 0xFF	; 255
    15de:	cb 01       	movw	r24, r22
    15e0:	a7 dd       	rcall	.-1202   	; 0x1130 <uECC_vli_modSquare_fast>
    15e2:	b8 01       	movw	r22, r16
    15e4:	ce 01       	movw	r24, r28
    15e6:	01 96       	adiw	r24, 0x01	; 1
    15e8:	3e db       	rcall	.-2436   	; 0xc66 <uECC_vli_testBit>
    15ea:	88 23       	and	r24, r24
    15ec:	39 f0       	breq	.+14     	; 0x15fc <mod_sqrt_default+0x94>
    15ee:	97 01       	movw	r18, r14
    15f0:	a6 01       	movw	r20, r12
    15f2:	be 01       	movw	r22, r28
    15f4:	6f 5d       	subi	r22, 0xDF	; 223
    15f6:	7f 4f       	sbci	r23, 0xFF	; 255
    15f8:	cb 01       	movw	r24, r22
    15fa:	6b dd       	rcall	.-1322   	; 0x10d2 <uECC_vli_modMult_fast>
    15fc:	01 50       	subi	r16, 0x01	; 1
    15fe:	11 09       	sbc	r17, r1
    1600:	01 30       	cpi	r16, 0x01	; 1
    1602:	11 05       	cpc	r17, r1
    1604:	41 f7       	brne	.-48     	; 0x15d6 <mod_sqrt_default+0x6e>
    1606:	4b 2d       	mov	r20, r11
    1608:	be 01       	movw	r22, r28
    160a:	6f 5d       	subi	r22, 0xDF	; 223
    160c:	7f 4f       	sbci	r23, 0xFF	; 255
    160e:	c6 01       	movw	r24, r12
    1610:	77 d8       	rcall	.-3858   	; 0x700 <uECC_vli_set>
    1612:	c0 5c       	subi	r28, 0xC0	; 192
    1614:	df 4f       	sbci	r29, 0xFF	; 255
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	f8 94       	cli
    161a:	de bf       	out	0x3e, r29	; 62
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	cd bf       	out	0x3d, r28	; 61
    1620:	df 91       	pop	r29
    1622:	cf 91       	pop	r28
    1624:	1f 91       	pop	r17
    1626:	0f 91       	pop	r16
    1628:	ff 90       	pop	r15
    162a:	ef 90       	pop	r14
    162c:	df 90       	pop	r13
    162e:	cf 90       	pop	r12
    1630:	bf 90       	pop	r11
    1632:	08 95       	ret

00001634 <vli_mmod_fast_secp256r1>:
    1634:	cf 92       	push	r12
    1636:	df 92       	push	r13
    1638:	ff 92       	push	r15
    163a:	0f 93       	push	r16
    163c:	1f 93       	push	r17
    163e:	cf 93       	push	r28
    1640:	df 93       	push	r29
    1642:	cd b7       	in	r28, 0x3d	; 61
    1644:	de b7       	in	r29, 0x3e	; 62
    1646:	a0 97       	sbiw	r28, 0x20	; 32
    1648:	0f b6       	in	r0, 0x3f	; 63
    164a:	f8 94       	cli
    164c:	de bf       	out	0x3e, r29	; 62
    164e:	0f be       	out	0x3f, r0	; 63
    1650:	cd bf       	out	0x3d, r28	; 61
    1652:	6c 01       	movw	r12, r24
    1654:	8b 01       	movw	r16, r22
    1656:	40 e2       	ldi	r20, 0x20	; 32
    1658:	53 d8       	rcall	.-3930   	; 0x700 <uECC_vli_set>
    165a:	1c 82       	std	Y+4, r1	; 0x04
    165c:	1b 82       	std	Y+3, r1	; 0x03
    165e:	1a 82       	std	Y+2, r1	; 0x02
    1660:	19 82       	std	Y+1, r1	; 0x01
    1662:	18 86       	std	Y+8, r1	; 0x08
    1664:	1f 82       	std	Y+7, r1	; 0x07
    1666:	1e 82       	std	Y+6, r1	; 0x06
    1668:	1d 82       	std	Y+5, r1	; 0x05
    166a:	1c 86       	std	Y+12, r1	; 0x0c
    166c:	1b 86       	std	Y+11, r1	; 0x0b
    166e:	1a 86       	std	Y+10, r1	; 0x0a
    1670:	19 86       	std	Y+9, r1	; 0x09
    1672:	f8 01       	movw	r30, r16
    1674:	84 a5       	ldd	r24, Z+44	; 0x2c
    1676:	8d 87       	std	Y+13, r24	; 0x0d
    1678:	85 a5       	ldd	r24, Z+45	; 0x2d
    167a:	8e 87       	std	Y+14, r24	; 0x0e
    167c:	86 a5       	ldd	r24, Z+46	; 0x2e
    167e:	8f 87       	std	Y+15, r24	; 0x0f
    1680:	87 a5       	ldd	r24, Z+47	; 0x2f
    1682:	88 8b       	std	Y+16, r24	; 0x10
    1684:	80 a9       	ldd	r24, Z+48	; 0x30
    1686:	89 8b       	std	Y+17, r24	; 0x11
    1688:	81 a9       	ldd	r24, Z+49	; 0x31
    168a:	8a 8b       	std	Y+18, r24	; 0x12
    168c:	82 a9       	ldd	r24, Z+50	; 0x32
    168e:	8b 8b       	std	Y+19, r24	; 0x13
    1690:	83 a9       	ldd	r24, Z+51	; 0x33
    1692:	8c 8b       	std	Y+20, r24	; 0x14
    1694:	84 a9       	ldd	r24, Z+52	; 0x34
    1696:	8d 8b       	std	Y+21, r24	; 0x15
    1698:	85 a9       	ldd	r24, Z+53	; 0x35
    169a:	8e 8b       	std	Y+22, r24	; 0x16
    169c:	86 a9       	ldd	r24, Z+54	; 0x36
    169e:	8f 8b       	std	Y+23, r24	; 0x17
    16a0:	87 a9       	ldd	r24, Z+55	; 0x37
    16a2:	88 8f       	std	Y+24, r24	; 0x18
    16a4:	80 ad       	ldd	r24, Z+56	; 0x38
    16a6:	89 8f       	std	Y+25, r24	; 0x19
    16a8:	81 ad       	ldd	r24, Z+57	; 0x39
    16aa:	8a 8f       	std	Y+26, r24	; 0x1a
    16ac:	82 ad       	ldd	r24, Z+58	; 0x3a
    16ae:	8b 8f       	std	Y+27, r24	; 0x1b
    16b0:	83 ad       	ldd	r24, Z+59	; 0x3b
    16b2:	8c 8f       	std	Y+28, r24	; 0x1c
    16b4:	84 ad       	ldd	r24, Z+60	; 0x3c
    16b6:	8d 8f       	std	Y+29, r24	; 0x1d
    16b8:	85 ad       	ldd	r24, Z+61	; 0x3d
    16ba:	8e 8f       	std	Y+30, r24	; 0x1e
    16bc:	86 ad       	ldd	r24, Z+62	; 0x3e
    16be:	8f 8f       	std	Y+31, r24	; 0x1f
    16c0:	87 ad       	ldd	r24, Z+63	; 0x3f
    16c2:	88 a3       	std	Y+32, r24	; 0x20
    16c4:	20 e2       	ldi	r18, 0x20	; 32
    16c6:	ae 01       	movw	r20, r28
    16c8:	4f 5f       	subi	r20, 0xFF	; 255
    16ca:	5f 4f       	sbci	r21, 0xFF	; 255
    16cc:	ba 01       	movw	r22, r20
    16ce:	ca 01       	movw	r24, r20
    16d0:	d6 d8       	rcall	.-3668   	; 0x87e <uECC_vli_add>
    16d2:	f8 2e       	mov	r15, r24
    16d4:	20 e2       	ldi	r18, 0x20	; 32
    16d6:	ae 01       	movw	r20, r28
    16d8:	4f 5f       	subi	r20, 0xFF	; 255
    16da:	5f 4f       	sbci	r21, 0xFF	; 255
    16dc:	b6 01       	movw	r22, r12
    16de:	c6 01       	movw	r24, r12
    16e0:	ce d8       	rcall	.-3684   	; 0x87e <uECC_vli_add>
    16e2:	f8 0e       	add	r15, r24
    16e4:	f8 01       	movw	r30, r16
    16e6:	80 a9       	ldd	r24, Z+48	; 0x30
    16e8:	8d 87       	std	Y+13, r24	; 0x0d
    16ea:	81 a9       	ldd	r24, Z+49	; 0x31
    16ec:	8e 87       	std	Y+14, r24	; 0x0e
    16ee:	82 a9       	ldd	r24, Z+50	; 0x32
    16f0:	8f 87       	std	Y+15, r24	; 0x0f
    16f2:	83 a9       	ldd	r24, Z+51	; 0x33
    16f4:	88 8b       	std	Y+16, r24	; 0x10
    16f6:	84 a9       	ldd	r24, Z+52	; 0x34
    16f8:	89 8b       	std	Y+17, r24	; 0x11
    16fa:	85 a9       	ldd	r24, Z+53	; 0x35
    16fc:	8a 8b       	std	Y+18, r24	; 0x12
    16fe:	86 a9       	ldd	r24, Z+54	; 0x36
    1700:	8b 8b       	std	Y+19, r24	; 0x13
    1702:	87 a9       	ldd	r24, Z+55	; 0x37
    1704:	8c 8b       	std	Y+20, r24	; 0x14
    1706:	80 ad       	ldd	r24, Z+56	; 0x38
    1708:	8d 8b       	std	Y+21, r24	; 0x15
    170a:	81 ad       	ldd	r24, Z+57	; 0x39
    170c:	8e 8b       	std	Y+22, r24	; 0x16
    170e:	82 ad       	ldd	r24, Z+58	; 0x3a
    1710:	8f 8b       	std	Y+23, r24	; 0x17
    1712:	83 ad       	ldd	r24, Z+59	; 0x3b
    1714:	88 8f       	std	Y+24, r24	; 0x18
    1716:	84 ad       	ldd	r24, Z+60	; 0x3c
    1718:	89 8f       	std	Y+25, r24	; 0x19
    171a:	85 ad       	ldd	r24, Z+61	; 0x3d
    171c:	8a 8f       	std	Y+26, r24	; 0x1a
    171e:	86 ad       	ldd	r24, Z+62	; 0x3e
    1720:	8b 8f       	std	Y+27, r24	; 0x1b
    1722:	87 ad       	ldd	r24, Z+63	; 0x3f
    1724:	8c 8f       	std	Y+28, r24	; 0x1c
    1726:	18 a2       	std	Y+32, r1	; 0x20
    1728:	1f 8e       	std	Y+31, r1	; 0x1f
    172a:	1e 8e       	std	Y+30, r1	; 0x1e
    172c:	1d 8e       	std	Y+29, r1	; 0x1d
    172e:	20 e2       	ldi	r18, 0x20	; 32
    1730:	ae 01       	movw	r20, r28
    1732:	4f 5f       	subi	r20, 0xFF	; 255
    1734:	5f 4f       	sbci	r21, 0xFF	; 255
    1736:	ba 01       	movw	r22, r20
    1738:	ca 01       	movw	r24, r20
    173a:	a1 d8       	rcall	.-3774   	; 0x87e <uECC_vli_add>
    173c:	f8 0e       	add	r15, r24
    173e:	20 e2       	ldi	r18, 0x20	; 32
    1740:	ae 01       	movw	r20, r28
    1742:	4f 5f       	subi	r20, 0xFF	; 255
    1744:	5f 4f       	sbci	r21, 0xFF	; 255
    1746:	b6 01       	movw	r22, r12
    1748:	c6 01       	movw	r24, r12
    174a:	99 d8       	rcall	.-3790   	; 0x87e <uECC_vli_add>
    174c:	f8 0e       	add	r15, r24
    174e:	f8 01       	movw	r30, r16
    1750:	80 a1       	ldd	r24, Z+32	; 0x20
    1752:	89 83       	std	Y+1, r24	; 0x01
    1754:	81 a1       	ldd	r24, Z+33	; 0x21
    1756:	8a 83       	std	Y+2, r24	; 0x02
    1758:	82 a1       	ldd	r24, Z+34	; 0x22
    175a:	8b 83       	std	Y+3, r24	; 0x03
    175c:	83 a1       	ldd	r24, Z+35	; 0x23
    175e:	8c 83       	std	Y+4, r24	; 0x04
    1760:	84 a1       	ldd	r24, Z+36	; 0x24
    1762:	8d 83       	std	Y+5, r24	; 0x05
    1764:	85 a1       	ldd	r24, Z+37	; 0x25
    1766:	8e 83       	std	Y+6, r24	; 0x06
    1768:	86 a1       	ldd	r24, Z+38	; 0x26
    176a:	8f 83       	std	Y+7, r24	; 0x07
    176c:	87 a1       	ldd	r24, Z+39	; 0x27
    176e:	88 87       	std	Y+8, r24	; 0x08
    1770:	80 a5       	ldd	r24, Z+40	; 0x28
    1772:	89 87       	std	Y+9, r24	; 0x09
    1774:	81 a5       	ldd	r24, Z+41	; 0x29
    1776:	8a 87       	std	Y+10, r24	; 0x0a
    1778:	82 a5       	ldd	r24, Z+42	; 0x2a
    177a:	8b 87       	std	Y+11, r24	; 0x0b
    177c:	83 a5       	ldd	r24, Z+43	; 0x2b
    177e:	8c 87       	std	Y+12, r24	; 0x0c
    1780:	18 8a       	std	Y+16, r1	; 0x10
    1782:	1f 86       	std	Y+15, r1	; 0x0f
    1784:	1e 86       	std	Y+14, r1	; 0x0e
    1786:	1d 86       	std	Y+13, r1	; 0x0d
    1788:	1c 8a       	std	Y+20, r1	; 0x14
    178a:	1b 8a       	std	Y+19, r1	; 0x13
    178c:	1a 8a       	std	Y+18, r1	; 0x12
    178e:	19 8a       	std	Y+17, r1	; 0x11
    1790:	18 8e       	std	Y+24, r1	; 0x18
    1792:	1f 8a       	std	Y+23, r1	; 0x17
    1794:	1e 8a       	std	Y+22, r1	; 0x16
    1796:	1d 8a       	std	Y+21, r1	; 0x15
    1798:	80 ad       	ldd	r24, Z+56	; 0x38
    179a:	89 8f       	std	Y+25, r24	; 0x19
    179c:	81 ad       	ldd	r24, Z+57	; 0x39
    179e:	8a 8f       	std	Y+26, r24	; 0x1a
    17a0:	82 ad       	ldd	r24, Z+58	; 0x3a
    17a2:	8b 8f       	std	Y+27, r24	; 0x1b
    17a4:	83 ad       	ldd	r24, Z+59	; 0x3b
    17a6:	8c 8f       	std	Y+28, r24	; 0x1c
    17a8:	84 ad       	ldd	r24, Z+60	; 0x3c
    17aa:	8d 8f       	std	Y+29, r24	; 0x1d
    17ac:	85 ad       	ldd	r24, Z+61	; 0x3d
    17ae:	8e 8f       	std	Y+30, r24	; 0x1e
    17b0:	86 ad       	ldd	r24, Z+62	; 0x3e
    17b2:	8f 8f       	std	Y+31, r24	; 0x1f
    17b4:	87 ad       	ldd	r24, Z+63	; 0x3f
    17b6:	88 a3       	std	Y+32, r24	; 0x20
    17b8:	20 e2       	ldi	r18, 0x20	; 32
    17ba:	ae 01       	movw	r20, r28
    17bc:	4f 5f       	subi	r20, 0xFF	; 255
    17be:	5f 4f       	sbci	r21, 0xFF	; 255
    17c0:	b6 01       	movw	r22, r12
    17c2:	c6 01       	movw	r24, r12
    17c4:	5c d8       	rcall	.-3912   	; 0x87e <uECC_vli_add>
    17c6:	f8 0e       	add	r15, r24
    17c8:	f8 01       	movw	r30, r16
    17ca:	84 a1       	ldd	r24, Z+36	; 0x24
    17cc:	89 83       	std	Y+1, r24	; 0x01
    17ce:	85 a1       	ldd	r24, Z+37	; 0x25
    17d0:	8a 83       	std	Y+2, r24	; 0x02
    17d2:	86 a1       	ldd	r24, Z+38	; 0x26
    17d4:	8b 83       	std	Y+3, r24	; 0x03
    17d6:	87 a1       	ldd	r24, Z+39	; 0x27
    17d8:	8c 83       	std	Y+4, r24	; 0x04
    17da:	80 a5       	ldd	r24, Z+40	; 0x28
    17dc:	8d 83       	std	Y+5, r24	; 0x05
    17de:	81 a5       	ldd	r24, Z+41	; 0x29
    17e0:	8e 83       	std	Y+6, r24	; 0x06
    17e2:	82 a5       	ldd	r24, Z+42	; 0x2a
    17e4:	8f 83       	std	Y+7, r24	; 0x07
    17e6:	83 a5       	ldd	r24, Z+43	; 0x2b
    17e8:	88 87       	std	Y+8, r24	; 0x08
    17ea:	84 a5       	ldd	r24, Z+44	; 0x2c
    17ec:	89 87       	std	Y+9, r24	; 0x09
    17ee:	85 a5       	ldd	r24, Z+45	; 0x2d
    17f0:	8a 87       	std	Y+10, r24	; 0x0a
    17f2:	86 a5       	ldd	r24, Z+46	; 0x2e
    17f4:	8b 87       	std	Y+11, r24	; 0x0b
    17f6:	87 a5       	ldd	r24, Z+47	; 0x2f
    17f8:	8c 87       	std	Y+12, r24	; 0x0c
    17fa:	34 a9       	ldd	r19, Z+52	; 0x34
    17fc:	3d 87       	std	Y+13, r19	; 0x0d
    17fe:	25 a9       	ldd	r18, Z+53	; 0x35
    1800:	2e 87       	std	Y+14, r18	; 0x0e
    1802:	96 a9       	ldd	r25, Z+54	; 0x36
    1804:	9f 87       	std	Y+15, r25	; 0x0f
    1806:	87 a9       	ldd	r24, Z+55	; 0x37
    1808:	88 8b       	std	Y+16, r24	; 0x10
    180a:	40 ad       	ldd	r20, Z+56	; 0x38
    180c:	49 8b       	std	Y+17, r20	; 0x11
    180e:	41 ad       	ldd	r20, Z+57	; 0x39
    1810:	4a 8b       	std	Y+18, r20	; 0x12
    1812:	42 ad       	ldd	r20, Z+58	; 0x3a
    1814:	4b 8b       	std	Y+19, r20	; 0x13
    1816:	43 ad       	ldd	r20, Z+59	; 0x3b
    1818:	4c 8b       	std	Y+20, r20	; 0x14
    181a:	44 ad       	ldd	r20, Z+60	; 0x3c
    181c:	4d 8b       	std	Y+21, r20	; 0x15
    181e:	45 ad       	ldd	r20, Z+61	; 0x3d
    1820:	4e 8b       	std	Y+22, r20	; 0x16
    1822:	46 ad       	ldd	r20, Z+62	; 0x3e
    1824:	4f 8b       	std	Y+23, r20	; 0x17
    1826:	47 ad       	ldd	r20, Z+63	; 0x3f
    1828:	48 8f       	std	Y+24, r20	; 0x18
    182a:	39 8f       	std	Y+25, r19	; 0x19
    182c:	2a 8f       	std	Y+26, r18	; 0x1a
    182e:	9b 8f       	std	Y+27, r25	; 0x1b
    1830:	8c 8f       	std	Y+28, r24	; 0x1c
    1832:	80 a1       	ldd	r24, Z+32	; 0x20
    1834:	8d 8f       	std	Y+29, r24	; 0x1d
    1836:	81 a1       	ldd	r24, Z+33	; 0x21
    1838:	8e 8f       	std	Y+30, r24	; 0x1e
    183a:	82 a1       	ldd	r24, Z+34	; 0x22
    183c:	8f 8f       	std	Y+31, r24	; 0x1f
    183e:	83 a1       	ldd	r24, Z+35	; 0x23
    1840:	88 a3       	std	Y+32, r24	; 0x20
    1842:	20 e2       	ldi	r18, 0x20	; 32
    1844:	ae 01       	movw	r20, r28
    1846:	4f 5f       	subi	r20, 0xFF	; 255
    1848:	5f 4f       	sbci	r21, 0xFF	; 255
    184a:	b6 01       	movw	r22, r12
    184c:	c6 01       	movw	r24, r12
    184e:	17 d8       	rcall	.-4050   	; 0x87e <uECC_vli_add>
    1850:	f8 0e       	add	r15, r24
    1852:	f8 01       	movw	r30, r16
    1854:	84 a5       	ldd	r24, Z+44	; 0x2c
    1856:	89 83       	std	Y+1, r24	; 0x01
    1858:	85 a5       	ldd	r24, Z+45	; 0x2d
    185a:	8a 83       	std	Y+2, r24	; 0x02
    185c:	86 a5       	ldd	r24, Z+46	; 0x2e
    185e:	8b 83       	std	Y+3, r24	; 0x03
    1860:	87 a5       	ldd	r24, Z+47	; 0x2f
    1862:	8c 83       	std	Y+4, r24	; 0x04
    1864:	80 a9       	ldd	r24, Z+48	; 0x30
    1866:	8d 83       	std	Y+5, r24	; 0x05
    1868:	81 a9       	ldd	r24, Z+49	; 0x31
    186a:	8e 83       	std	Y+6, r24	; 0x06
    186c:	82 a9       	ldd	r24, Z+50	; 0x32
    186e:	8f 83       	std	Y+7, r24	; 0x07
    1870:	83 a9       	ldd	r24, Z+51	; 0x33
    1872:	88 87       	std	Y+8, r24	; 0x08
    1874:	84 a9       	ldd	r24, Z+52	; 0x34
    1876:	89 87       	std	Y+9, r24	; 0x09
    1878:	85 a9       	ldd	r24, Z+53	; 0x35
    187a:	8a 87       	std	Y+10, r24	; 0x0a
    187c:	86 a9       	ldd	r24, Z+54	; 0x36
    187e:	8b 87       	std	Y+11, r24	; 0x0b
    1880:	87 a9       	ldd	r24, Z+55	; 0x37
    1882:	8c 87       	std	Y+12, r24	; 0x0c
    1884:	18 8a       	std	Y+16, r1	; 0x10
    1886:	1f 86       	std	Y+15, r1	; 0x0f
    1888:	1e 86       	std	Y+14, r1	; 0x0e
    188a:	1d 86       	std	Y+13, r1	; 0x0d
    188c:	1c 8a       	std	Y+20, r1	; 0x14
    188e:	1b 8a       	std	Y+19, r1	; 0x13
    1890:	1a 8a       	std	Y+18, r1	; 0x12
    1892:	19 8a       	std	Y+17, r1	; 0x11
    1894:	18 8e       	std	Y+24, r1	; 0x18
    1896:	1f 8a       	std	Y+23, r1	; 0x17
    1898:	1e 8a       	std	Y+22, r1	; 0x16
    189a:	1d 8a       	std	Y+21, r1	; 0x15
    189c:	80 a1       	ldd	r24, Z+32	; 0x20
    189e:	89 8f       	std	Y+25, r24	; 0x19
    18a0:	81 a1       	ldd	r24, Z+33	; 0x21
    18a2:	8a 8f       	std	Y+26, r24	; 0x1a
    18a4:	82 a1       	ldd	r24, Z+34	; 0x22
    18a6:	8b 8f       	std	Y+27, r24	; 0x1b
    18a8:	83 a1       	ldd	r24, Z+35	; 0x23
    18aa:	8c 8f       	std	Y+28, r24	; 0x1c
    18ac:	80 a5       	ldd	r24, Z+40	; 0x28
    18ae:	8d 8f       	std	Y+29, r24	; 0x1d
    18b0:	81 a5       	ldd	r24, Z+41	; 0x29
    18b2:	8e 8f       	std	Y+30, r24	; 0x1e
    18b4:	82 a5       	ldd	r24, Z+42	; 0x2a
    18b6:	8f 8f       	std	Y+31, r24	; 0x1f
    18b8:	83 a5       	ldd	r24, Z+43	; 0x2b
    18ba:	88 a3       	std	Y+32, r24	; 0x20
    18bc:	20 e2       	ldi	r18, 0x20	; 32
    18be:	ae 01       	movw	r20, r28
    18c0:	4f 5f       	subi	r20, 0xFF	; 255
    18c2:	5f 4f       	sbci	r21, 0xFF	; 255
    18c4:	b6 01       	movw	r22, r12
    18c6:	c6 01       	movw	r24, r12
    18c8:	ab d8       	rcall	.-3754   	; 0xa20 <uECC_vli_sub>
    18ca:	f8 1a       	sub	r15, r24
    18cc:	f8 01       	movw	r30, r16
    18ce:	80 a9       	ldd	r24, Z+48	; 0x30
    18d0:	89 83       	std	Y+1, r24	; 0x01
    18d2:	81 a9       	ldd	r24, Z+49	; 0x31
    18d4:	8a 83       	std	Y+2, r24	; 0x02
    18d6:	82 a9       	ldd	r24, Z+50	; 0x32
    18d8:	8b 83       	std	Y+3, r24	; 0x03
    18da:	83 a9       	ldd	r24, Z+51	; 0x33
    18dc:	8c 83       	std	Y+4, r24	; 0x04
    18de:	84 a9       	ldd	r24, Z+52	; 0x34
    18e0:	8d 83       	std	Y+5, r24	; 0x05
    18e2:	85 a9       	ldd	r24, Z+53	; 0x35
    18e4:	8e 83       	std	Y+6, r24	; 0x06
    18e6:	86 a9       	ldd	r24, Z+54	; 0x36
    18e8:	8f 83       	std	Y+7, r24	; 0x07
    18ea:	87 a9       	ldd	r24, Z+55	; 0x37
    18ec:	88 87       	std	Y+8, r24	; 0x08
    18ee:	80 ad       	ldd	r24, Z+56	; 0x38
    18f0:	89 87       	std	Y+9, r24	; 0x09
    18f2:	81 ad       	ldd	r24, Z+57	; 0x39
    18f4:	8a 87       	std	Y+10, r24	; 0x0a
    18f6:	82 ad       	ldd	r24, Z+58	; 0x3a
    18f8:	8b 87       	std	Y+11, r24	; 0x0b
    18fa:	83 ad       	ldd	r24, Z+59	; 0x3b
    18fc:	8c 87       	std	Y+12, r24	; 0x0c
    18fe:	84 ad       	ldd	r24, Z+60	; 0x3c
    1900:	8d 87       	std	Y+13, r24	; 0x0d
    1902:	85 ad       	ldd	r24, Z+61	; 0x3d
    1904:	8e 87       	std	Y+14, r24	; 0x0e
    1906:	86 ad       	ldd	r24, Z+62	; 0x3e
    1908:	8f 87       	std	Y+15, r24	; 0x0f
    190a:	87 ad       	ldd	r24, Z+63	; 0x3f
    190c:	88 8b       	std	Y+16, r24	; 0x10
    190e:	1c 8a       	std	Y+20, r1	; 0x14
    1910:	1b 8a       	std	Y+19, r1	; 0x13
    1912:	1a 8a       	std	Y+18, r1	; 0x12
    1914:	19 8a       	std	Y+17, r1	; 0x11
    1916:	18 8e       	std	Y+24, r1	; 0x18
    1918:	1f 8a       	std	Y+23, r1	; 0x17
    191a:	1e 8a       	std	Y+22, r1	; 0x16
    191c:	1d 8a       	std	Y+21, r1	; 0x15
    191e:	84 a1       	ldd	r24, Z+36	; 0x24
    1920:	89 8f       	std	Y+25, r24	; 0x19
    1922:	85 a1       	ldd	r24, Z+37	; 0x25
    1924:	8a 8f       	std	Y+26, r24	; 0x1a
    1926:	86 a1       	ldd	r24, Z+38	; 0x26
    1928:	8b 8f       	std	Y+27, r24	; 0x1b
    192a:	87 a1       	ldd	r24, Z+39	; 0x27
    192c:	8c 8f       	std	Y+28, r24	; 0x1c
    192e:	84 a5       	ldd	r24, Z+44	; 0x2c
    1930:	8d 8f       	std	Y+29, r24	; 0x1d
    1932:	85 a5       	ldd	r24, Z+45	; 0x2d
    1934:	8e 8f       	std	Y+30, r24	; 0x1e
    1936:	86 a5       	ldd	r24, Z+46	; 0x2e
    1938:	8f 8f       	std	Y+31, r24	; 0x1f
    193a:	87 a5       	ldd	r24, Z+47	; 0x2f
    193c:	88 a3       	std	Y+32, r24	; 0x20
    193e:	20 e2       	ldi	r18, 0x20	; 32
    1940:	ae 01       	movw	r20, r28
    1942:	4f 5f       	subi	r20, 0xFF	; 255
    1944:	5f 4f       	sbci	r21, 0xFF	; 255
    1946:	b6 01       	movw	r22, r12
    1948:	c6 01       	movw	r24, r12
    194a:	6a d8       	rcall	.-3884   	; 0xa20 <uECC_vli_sub>
    194c:	f8 1a       	sub	r15, r24
    194e:	f8 01       	movw	r30, r16
    1950:	84 a9       	ldd	r24, Z+52	; 0x34
    1952:	89 83       	std	Y+1, r24	; 0x01
    1954:	85 a9       	ldd	r24, Z+53	; 0x35
    1956:	8a 83       	std	Y+2, r24	; 0x02
    1958:	86 a9       	ldd	r24, Z+54	; 0x36
    195a:	8b 83       	std	Y+3, r24	; 0x03
    195c:	87 a9       	ldd	r24, Z+55	; 0x37
    195e:	8c 83       	std	Y+4, r24	; 0x04
    1960:	80 ad       	ldd	r24, Z+56	; 0x38
    1962:	8d 83       	std	Y+5, r24	; 0x05
    1964:	81 ad       	ldd	r24, Z+57	; 0x39
    1966:	8e 83       	std	Y+6, r24	; 0x06
    1968:	82 ad       	ldd	r24, Z+58	; 0x3a
    196a:	8f 83       	std	Y+7, r24	; 0x07
    196c:	83 ad       	ldd	r24, Z+59	; 0x3b
    196e:	88 87       	std	Y+8, r24	; 0x08
    1970:	84 ad       	ldd	r24, Z+60	; 0x3c
    1972:	89 87       	std	Y+9, r24	; 0x09
    1974:	85 ad       	ldd	r24, Z+61	; 0x3d
    1976:	8a 87       	std	Y+10, r24	; 0x0a
    1978:	86 ad       	ldd	r24, Z+62	; 0x3e
    197a:	8b 87       	std	Y+11, r24	; 0x0b
    197c:	87 ad       	ldd	r24, Z+63	; 0x3f
    197e:	8c 87       	std	Y+12, r24	; 0x0c
    1980:	80 a1       	ldd	r24, Z+32	; 0x20
    1982:	8d 87       	std	Y+13, r24	; 0x0d
    1984:	81 a1       	ldd	r24, Z+33	; 0x21
    1986:	8e 87       	std	Y+14, r24	; 0x0e
    1988:	82 a1       	ldd	r24, Z+34	; 0x22
    198a:	8f 87       	std	Y+15, r24	; 0x0f
    198c:	83 a1       	ldd	r24, Z+35	; 0x23
    198e:	88 8b       	std	Y+16, r24	; 0x10
    1990:	84 a1       	ldd	r24, Z+36	; 0x24
    1992:	89 8b       	std	Y+17, r24	; 0x11
    1994:	85 a1       	ldd	r24, Z+37	; 0x25
    1996:	8a 8b       	std	Y+18, r24	; 0x12
    1998:	86 a1       	ldd	r24, Z+38	; 0x26
    199a:	8b 8b       	std	Y+19, r24	; 0x13
    199c:	87 a1       	ldd	r24, Z+39	; 0x27
    199e:	8c 8b       	std	Y+20, r24	; 0x14
    19a0:	80 a5       	ldd	r24, Z+40	; 0x28
    19a2:	8d 8b       	std	Y+21, r24	; 0x15
    19a4:	81 a5       	ldd	r24, Z+41	; 0x29
    19a6:	8e 8b       	std	Y+22, r24	; 0x16
    19a8:	82 a5       	ldd	r24, Z+42	; 0x2a
    19aa:	8f 8b       	std	Y+23, r24	; 0x17
    19ac:	83 a5       	ldd	r24, Z+43	; 0x2b
    19ae:	88 8f       	std	Y+24, r24	; 0x18
    19b0:	1c 8e       	std	Y+28, r1	; 0x1c
    19b2:	1b 8e       	std	Y+27, r1	; 0x1b
    19b4:	1a 8e       	std	Y+26, r1	; 0x1a
    19b6:	19 8e       	std	Y+25, r1	; 0x19
    19b8:	80 a9       	ldd	r24, Z+48	; 0x30
    19ba:	8d 8f       	std	Y+29, r24	; 0x1d
    19bc:	81 a9       	ldd	r24, Z+49	; 0x31
    19be:	8e 8f       	std	Y+30, r24	; 0x1e
    19c0:	82 a9       	ldd	r24, Z+50	; 0x32
    19c2:	8f 8f       	std	Y+31, r24	; 0x1f
    19c4:	83 a9       	ldd	r24, Z+51	; 0x33
    19c6:	88 a3       	std	Y+32, r24	; 0x20
    19c8:	20 e2       	ldi	r18, 0x20	; 32
    19ca:	ae 01       	movw	r20, r28
    19cc:	4f 5f       	subi	r20, 0xFF	; 255
    19ce:	5f 4f       	sbci	r21, 0xFF	; 255
    19d0:	b6 01       	movw	r22, r12
    19d2:	c6 01       	movw	r24, r12
    19d4:	25 d8       	rcall	.-4022   	; 0xa20 <uECC_vli_sub>
    19d6:	f8 1a       	sub	r15, r24
    19d8:	f8 01       	movw	r30, r16
    19da:	80 ad       	ldd	r24, Z+56	; 0x38
    19dc:	89 83       	std	Y+1, r24	; 0x01
    19de:	81 ad       	ldd	r24, Z+57	; 0x39
    19e0:	8a 83       	std	Y+2, r24	; 0x02
    19e2:	82 ad       	ldd	r24, Z+58	; 0x3a
    19e4:	8b 83       	std	Y+3, r24	; 0x03
    19e6:	83 ad       	ldd	r24, Z+59	; 0x3b
    19e8:	8c 83       	std	Y+4, r24	; 0x04
    19ea:	84 ad       	ldd	r24, Z+60	; 0x3c
    19ec:	8d 83       	std	Y+5, r24	; 0x05
    19ee:	85 ad       	ldd	r24, Z+61	; 0x3d
    19f0:	8e 83       	std	Y+6, r24	; 0x06
    19f2:	86 ad       	ldd	r24, Z+62	; 0x3e
    19f4:	8f 83       	std	Y+7, r24	; 0x07
    19f6:	87 ad       	ldd	r24, Z+63	; 0x3f
    19f8:	88 87       	std	Y+8, r24	; 0x08
    19fa:	1c 86       	std	Y+12, r1	; 0x0c
    19fc:	1b 86       	std	Y+11, r1	; 0x0b
    19fe:	1a 86       	std	Y+10, r1	; 0x0a
    1a00:	19 86       	std	Y+9, r1	; 0x09
    1a02:	84 a1       	ldd	r24, Z+36	; 0x24
    1a04:	8d 87       	std	Y+13, r24	; 0x0d
    1a06:	85 a1       	ldd	r24, Z+37	; 0x25
    1a08:	8e 87       	std	Y+14, r24	; 0x0e
    1a0a:	86 a1       	ldd	r24, Z+38	; 0x26
    1a0c:	8f 87       	std	Y+15, r24	; 0x0f
    1a0e:	87 a1       	ldd	r24, Z+39	; 0x27
    1a10:	88 8b       	std	Y+16, r24	; 0x10
    1a12:	80 a5       	ldd	r24, Z+40	; 0x28
    1a14:	89 8b       	std	Y+17, r24	; 0x11
    1a16:	81 a5       	ldd	r24, Z+41	; 0x29
    1a18:	8a 8b       	std	Y+18, r24	; 0x12
    1a1a:	82 a5       	ldd	r24, Z+42	; 0x2a
    1a1c:	8b 8b       	std	Y+19, r24	; 0x13
    1a1e:	83 a5       	ldd	r24, Z+43	; 0x2b
    1a20:	8c 8b       	std	Y+20, r24	; 0x14
    1a22:	84 a5       	ldd	r24, Z+44	; 0x2c
    1a24:	8d 8b       	std	Y+21, r24	; 0x15
    1a26:	85 a5       	ldd	r24, Z+45	; 0x2d
    1a28:	8e 8b       	std	Y+22, r24	; 0x16
    1a2a:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a2c:	8f 8b       	std	Y+23, r24	; 0x17
    1a2e:	87 a5       	ldd	r24, Z+47	; 0x2f
    1a30:	88 8f       	std	Y+24, r24	; 0x18
    1a32:	1c 8e       	std	Y+28, r1	; 0x1c
    1a34:	1b 8e       	std	Y+27, r1	; 0x1b
    1a36:	1a 8e       	std	Y+26, r1	; 0x1a
    1a38:	19 8e       	std	Y+25, r1	; 0x19
    1a3a:	84 a9       	ldd	r24, Z+52	; 0x34
    1a3c:	8d 8f       	std	Y+29, r24	; 0x1d
    1a3e:	85 a9       	ldd	r24, Z+53	; 0x35
    1a40:	8e 8f       	std	Y+30, r24	; 0x1e
    1a42:	86 a9       	ldd	r24, Z+54	; 0x36
    1a44:	8f 8f       	std	Y+31, r24	; 0x1f
    1a46:	87 a9       	ldd	r24, Z+55	; 0x37
    1a48:	88 a3       	std	Y+32, r24	; 0x20
    1a4a:	20 e2       	ldi	r18, 0x20	; 32
    1a4c:	ae 01       	movw	r20, r28
    1a4e:	4f 5f       	subi	r20, 0xFF	; 255
    1a50:	5f 4f       	sbci	r21, 0xFF	; 255
    1a52:	b6 01       	movw	r22, r12
    1a54:	c6 01       	movw	r24, r12
    1a56:	0e 94 10 05 	call	0xa20	; 0xa20 <uECC_vli_sub>
    1a5a:	1f 2d       	mov	r17, r15
    1a5c:	18 1b       	sub	r17, r24
    1a5e:	92 f4       	brpl	.+36     	; 0x1a84 <vli_mmod_fast_secp256r1+0x450>
    1a60:	20 e2       	ldi	r18, 0x20	; 32
    1a62:	4a e4       	ldi	r20, 0x4A	; 74
    1a64:	51 e0       	ldi	r21, 0x01	; 1
    1a66:	b6 01       	movw	r22, r12
    1a68:	c6 01       	movw	r24, r12
    1a6a:	0e 94 3f 04 	call	0x87e	; 0x87e <uECC_vli_add>
    1a6e:	18 0f       	add	r17, r24
    1a70:	ba f3       	brmi	.-18     	; 0x1a60 <vli_mmod_fast_secp256r1+0x42c>
    1a72:	11 c0       	rjmp	.+34     	; 0x1a96 <vli_mmod_fast_secp256r1+0x462>
    1a74:	20 e2       	ldi	r18, 0x20	; 32
    1a76:	4a e4       	ldi	r20, 0x4A	; 74
    1a78:	51 e0       	ldi	r21, 0x01	; 1
    1a7a:	b6 01       	movw	r22, r12
    1a7c:	c6 01       	movw	r24, r12
    1a7e:	0e 94 10 05 	call	0xa20	; 0xa20 <uECC_vli_sub>
    1a82:	18 1b       	sub	r17, r24
    1a84:	11 11       	cpse	r17, r1
    1a86:	f6 cf       	rjmp	.-20     	; 0x1a74 <vli_mmod_fast_secp256r1+0x440>
    1a88:	40 e2       	ldi	r20, 0x20	; 32
    1a8a:	b6 01       	movw	r22, r12
    1a8c:	8a e4       	ldi	r24, 0x4A	; 74
    1a8e:	91 e0       	ldi	r25, 0x01	; 1
    1a90:	37 d9       	rcall	.-3474   	; 0xd00 <uECC_vli_cmp_unsafe>
    1a92:	81 30       	cpi	r24, 0x01	; 1
    1a94:	79 f7       	brne	.-34     	; 0x1a74 <vli_mmod_fast_secp256r1+0x440>
    1a96:	a0 96       	adiw	r28, 0x20	; 32
    1a98:	0f b6       	in	r0, 0x3f	; 63
    1a9a:	f8 94       	cli
    1a9c:	de bf       	out	0x3e, r29	; 62
    1a9e:	0f be       	out	0x3f, r0	; 63
    1aa0:	cd bf       	out	0x3d, r28	; 61
    1aa2:	df 91       	pop	r29
    1aa4:	cf 91       	pop	r28
    1aa6:	1f 91       	pop	r17
    1aa8:	0f 91       	pop	r16
    1aaa:	ff 90       	pop	r15
    1aac:	df 90       	pop	r13
    1aae:	cf 90       	pop	r12
    1ab0:	08 95       	ret

00001ab2 <apply_z>:
    1ab2:	af 92       	push	r10
    1ab4:	bf 92       	push	r11
    1ab6:	cf 92       	push	r12
    1ab8:	df 92       	push	r13
    1aba:	ef 92       	push	r14
    1abc:	ff 92       	push	r15
    1abe:	0f 93       	push	r16
    1ac0:	1f 93       	push	r17
    1ac2:	cf 93       	push	r28
    1ac4:	df 93       	push	r29
    1ac6:	cd b7       	in	r28, 0x3d	; 61
    1ac8:	de b7       	in	r29, 0x3e	; 62
    1aca:	a0 97       	sbiw	r28, 0x20	; 32
    1acc:	0f b6       	in	r0, 0x3f	; 63
    1ace:	f8 94       	cli
    1ad0:	de bf       	out	0x3e, r29	; 62
    1ad2:	0f be       	out	0x3f, r0	; 63
    1ad4:	cd bf       	out	0x3d, r28	; 61
    1ad6:	5c 01       	movw	r10, r24
    1ad8:	7b 01       	movw	r14, r22
    1ada:	6a 01       	movw	r12, r20
    1adc:	89 01       	movw	r16, r18
    1ade:	a9 01       	movw	r20, r18
    1ae0:	b6 01       	movw	r22, r12
    1ae2:	ce 01       	movw	r24, r28
    1ae4:	01 96       	adiw	r24, 0x01	; 1
    1ae6:	24 db       	rcall	.-2488   	; 0x1130 <uECC_vli_modSquare_fast>
    1ae8:	98 01       	movw	r18, r16
    1aea:	ae 01       	movw	r20, r28
    1aec:	4f 5f       	subi	r20, 0xFF	; 255
    1aee:	5f 4f       	sbci	r21, 0xFF	; 255
    1af0:	b5 01       	movw	r22, r10
    1af2:	c5 01       	movw	r24, r10
    1af4:	ee da       	rcall	.-2596   	; 0x10d2 <uECC_vli_modMult_fast>
    1af6:	98 01       	movw	r18, r16
    1af8:	a6 01       	movw	r20, r12
    1afa:	be 01       	movw	r22, r28
    1afc:	6f 5f       	subi	r22, 0xFF	; 255
    1afe:	7f 4f       	sbci	r23, 0xFF	; 255
    1b00:	cb 01       	movw	r24, r22
    1b02:	e7 da       	rcall	.-2610   	; 0x10d2 <uECC_vli_modMult_fast>
    1b04:	98 01       	movw	r18, r16
    1b06:	ae 01       	movw	r20, r28
    1b08:	4f 5f       	subi	r20, 0xFF	; 255
    1b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b0c:	b7 01       	movw	r22, r14
    1b0e:	c7 01       	movw	r24, r14
    1b10:	e0 da       	rcall	.-2624   	; 0x10d2 <uECC_vli_modMult_fast>
    1b12:	a0 96       	adiw	r28, 0x20	; 32
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	de bf       	out	0x3e, r29	; 62
    1b1a:	0f be       	out	0x3f, r0	; 63
    1b1c:	cd bf       	out	0x3d, r28	; 61
    1b1e:	df 91       	pop	r29
    1b20:	cf 91       	pop	r28
    1b22:	1f 91       	pop	r17
    1b24:	0f 91       	pop	r16
    1b26:	ff 90       	pop	r15
    1b28:	ef 90       	pop	r14
    1b2a:	df 90       	pop	r13
    1b2c:	cf 90       	pop	r12
    1b2e:	bf 90       	pop	r11
    1b30:	af 90       	pop	r10
    1b32:	08 95       	ret

00001b34 <XYcZ_add>:
    1b34:	4f 92       	push	r4
    1b36:	5f 92       	push	r5
    1b38:	6f 92       	push	r6
    1b3a:	7f 92       	push	r7
    1b3c:	8f 92       	push	r8
    1b3e:	9f 92       	push	r9
    1b40:	af 92       	push	r10
    1b42:	bf 92       	push	r11
    1b44:	cf 92       	push	r12
    1b46:	df 92       	push	r13
    1b48:	ef 92       	push	r14
    1b4a:	ff 92       	push	r15
    1b4c:	0f 93       	push	r16
    1b4e:	1f 93       	push	r17
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	cd b7       	in	r28, 0x3d	; 61
    1b56:	de b7       	in	r29, 0x3e	; 62
    1b58:	a0 97       	sbiw	r28, 0x20	; 32
    1b5a:	0f b6       	in	r0, 0x3f	; 63
    1b5c:	f8 94       	cli
    1b5e:	de bf       	out	0x3e, r29	; 62
    1b60:	0f be       	out	0x3f, r0	; 63
    1b62:	cd bf       	out	0x3d, r28	; 61
    1b64:	3c 01       	movw	r6, r24
    1b66:	2b 01       	movw	r4, r22
    1b68:	7a 01       	movw	r14, r20
    1b6a:	59 01       	movw	r10, r18
    1b6c:	68 01       	movw	r12, r16
    1b6e:	f8 01       	movw	r30, r16
    1b70:	10 81       	ld	r17, Z
    1b72:	46 01       	movw	r8, r12
    1b74:	f4 e0       	ldi	r31, 0x04	; 4
    1b76:	8f 0e       	add	r8, r31
    1b78:	91 1c       	adc	r9, r1
    1b7a:	01 2f       	mov	r16, r17
    1b7c:	94 01       	movw	r18, r8
    1b7e:	ac 01       	movw	r20, r24
    1b80:	b7 01       	movw	r22, r14
    1b82:	ce 01       	movw	r24, r28
    1b84:	01 96       	adiw	r24, 0x01	; 1
    1b86:	0a d9       	rcall	.-3564   	; 0xd9c <uECC_vli_modSub>
    1b88:	a6 01       	movw	r20, r12
    1b8a:	be 01       	movw	r22, r28
    1b8c:	6f 5f       	subi	r22, 0xFF	; 255
    1b8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1b90:	cb 01       	movw	r24, r22
    1b92:	ce da       	rcall	.-2660   	; 0x1130 <uECC_vli_modSquare_fast>
    1b94:	96 01       	movw	r18, r12
    1b96:	ae 01       	movw	r20, r28
    1b98:	4f 5f       	subi	r20, 0xFF	; 255
    1b9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1b9c:	b3 01       	movw	r22, r6
    1b9e:	c3 01       	movw	r24, r6
    1ba0:	98 da       	rcall	.-2768   	; 0x10d2 <uECC_vli_modMult_fast>
    1ba2:	96 01       	movw	r18, r12
    1ba4:	ae 01       	movw	r20, r28
    1ba6:	4f 5f       	subi	r20, 0xFF	; 255
    1ba8:	5f 4f       	sbci	r21, 0xFF	; 255
    1baa:	b7 01       	movw	r22, r14
    1bac:	c7 01       	movw	r24, r14
    1bae:	91 da       	rcall	.-2782   	; 0x10d2 <uECC_vli_modMult_fast>
    1bb0:	94 01       	movw	r18, r8
    1bb2:	a2 01       	movw	r20, r4
    1bb4:	b5 01       	movw	r22, r10
    1bb6:	c5 01       	movw	r24, r10
    1bb8:	f1 d8       	rcall	.-3614   	; 0xd9c <uECC_vli_modSub>
    1bba:	a6 01       	movw	r20, r12
    1bbc:	b5 01       	movw	r22, r10
    1bbe:	ce 01       	movw	r24, r28
    1bc0:	01 96       	adiw	r24, 0x01	; 1
    1bc2:	b6 da       	rcall	.-2708   	; 0x1130 <uECC_vli_modSquare_fast>
    1bc4:	94 01       	movw	r18, r8
    1bc6:	a3 01       	movw	r20, r6
    1bc8:	be 01       	movw	r22, r28
    1bca:	6f 5f       	subi	r22, 0xFF	; 255
    1bcc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bce:	cb 01       	movw	r24, r22
    1bd0:	e5 d8       	rcall	.-3638   	; 0xd9c <uECC_vli_modSub>
    1bd2:	94 01       	movw	r18, r8
    1bd4:	a7 01       	movw	r20, r14
    1bd6:	be 01       	movw	r22, r28
    1bd8:	6f 5f       	subi	r22, 0xFF	; 255
    1bda:	7f 4f       	sbci	r23, 0xFF	; 255
    1bdc:	cb 01       	movw	r24, r22
    1bde:	de d8       	rcall	.-3652   	; 0xd9c <uECC_vli_modSub>
    1be0:	94 01       	movw	r18, r8
    1be2:	a3 01       	movw	r20, r6
    1be4:	b7 01       	movw	r22, r14
    1be6:	c7 01       	movw	r24, r14
    1be8:	d9 d8       	rcall	.-3662   	; 0xd9c <uECC_vli_modSub>
    1bea:	96 01       	movw	r18, r12
    1bec:	a7 01       	movw	r20, r14
    1bee:	b2 01       	movw	r22, r4
    1bf0:	c2 01       	movw	r24, r4
    1bf2:	6f da       	rcall	.-2850   	; 0x10d2 <uECC_vli_modMult_fast>
    1bf4:	94 01       	movw	r18, r8
    1bf6:	ae 01       	movw	r20, r28
    1bf8:	4f 5f       	subi	r20, 0xFF	; 255
    1bfa:	5f 4f       	sbci	r21, 0xFF	; 255
    1bfc:	b3 01       	movw	r22, r6
    1bfe:	c7 01       	movw	r24, r14
    1c00:	cd d8       	rcall	.-3686   	; 0xd9c <uECC_vli_modSub>
    1c02:	96 01       	movw	r18, r12
    1c04:	a7 01       	movw	r20, r14
    1c06:	b5 01       	movw	r22, r10
    1c08:	c5 01       	movw	r24, r10
    1c0a:	63 da       	rcall	.-2874   	; 0x10d2 <uECC_vli_modMult_fast>
    1c0c:	94 01       	movw	r18, r8
    1c0e:	a2 01       	movw	r20, r4
    1c10:	b5 01       	movw	r22, r10
    1c12:	c5 01       	movw	r24, r10
    1c14:	c3 d8       	rcall	.-3706   	; 0xd9c <uECC_vli_modSub>
    1c16:	41 2f       	mov	r20, r17
    1c18:	be 01       	movw	r22, r28
    1c1a:	6f 5f       	subi	r22, 0xFF	; 255
    1c1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c1e:	c7 01       	movw	r24, r14
    1c20:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    1c24:	a0 96       	adiw	r28, 0x20	; 32
    1c26:	0f b6       	in	r0, 0x3f	; 63
    1c28:	f8 94       	cli
    1c2a:	de bf       	out	0x3e, r29	; 62
    1c2c:	0f be       	out	0x3f, r0	; 63
    1c2e:	cd bf       	out	0x3d, r28	; 61
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	1f 91       	pop	r17
    1c36:	0f 91       	pop	r16
    1c38:	ff 90       	pop	r15
    1c3a:	ef 90       	pop	r14
    1c3c:	df 90       	pop	r13
    1c3e:	cf 90       	pop	r12
    1c40:	bf 90       	pop	r11
    1c42:	af 90       	pop	r10
    1c44:	9f 90       	pop	r9
    1c46:	8f 90       	pop	r8
    1c48:	7f 90       	pop	r7
    1c4a:	6f 90       	pop	r6
    1c4c:	5f 90       	pop	r5
    1c4e:	4f 90       	pop	r4
    1c50:	08 95       	ret

00001c52 <uECC_vli_nativeToBytes>:
    1c52:	cf 93       	push	r28
    1c54:	df 93       	push	r29
    1c56:	dc 01       	movw	r26, r24
    1c58:	16 16       	cp	r1, r22
    1c5a:	17 06       	cpc	r1, r23
    1c5c:	cc f4       	brge	.+50     	; 0x1c90 <uECC_vli_nativeToBytes+0x3e>
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	eb 01       	movw	r28, r22
    1c66:	21 97       	sbiw	r28, 0x01	; 1
    1c68:	fe 01       	movw	r30, r28
    1c6a:	e2 1b       	sub	r30, r18
    1c6c:	f3 0b       	sbc	r31, r19
    1c6e:	e4 0f       	add	r30, r20
    1c70:	f5 1f       	adc	r31, r21
    1c72:	20 81       	ld	r18, Z
    1c74:	fd 01       	movw	r30, r26
    1c76:	e9 0f       	add	r30, r25
    1c78:	f1 1d       	adc	r31, r1
    1c7a:	97 fd       	sbrc	r25, 7
    1c7c:	fa 95       	dec	r31
    1c7e:	20 83       	st	Z, r18
    1c80:	9f 5f       	subi	r25, 0xFF	; 255
    1c82:	29 2f       	mov	r18, r25
    1c84:	09 2e       	mov	r0, r25
    1c86:	00 0c       	add	r0, r0
    1c88:	33 0b       	sbc	r19, r19
    1c8a:	26 17       	cp	r18, r22
    1c8c:	37 07       	cpc	r19, r23
    1c8e:	64 f3       	brlt	.-40     	; 0x1c68 <uECC_vli_nativeToBytes+0x16>
    1c90:	df 91       	pop	r29
    1c92:	cf 91       	pop	r28
    1c94:	08 95       	ret

00001c96 <bits2int>:
    1c96:	8f 92       	push	r8
    1c98:	9f 92       	push	r9
    1c9a:	af 92       	push	r10
    1c9c:	bf 92       	push	r11
    1c9e:	cf 92       	push	r12
    1ca0:	df 92       	push	r13
    1ca2:	ef 92       	push	r14
    1ca4:	ff 92       	push	r15
    1ca6:	0f 93       	push	r16
    1ca8:	1f 93       	push	r17
    1caa:	cf 93       	push	r28
    1cac:	df 93       	push	r29
    1cae:	8c 01       	movw	r16, r24
    1cb0:	4b 01       	movw	r8, r22
    1cb2:	79 01       	movw	r14, r18
    1cb4:	f9 01       	movw	r30, r18
    1cb6:	82 81       	ldd	r24, Z+2	; 0x02
    1cb8:	93 81       	ldd	r25, Z+3	; 0x03
    1cba:	07 96       	adiw	r24, 0x07	; 7
    1cbc:	ec 01       	movw	r28, r24
    1cbe:	0a f4       	brpl	.+2      	; 0x1cc2 <bits2int+0x2c>
    1cc0:	27 96       	adiw	r28, 0x07	; 7
    1cc2:	d5 95       	asr	r29
    1cc4:	c7 95       	ror	r28
    1cc6:	d5 95       	asr	r29
    1cc8:	c7 95       	ror	r28
    1cca:	d5 95       	asr	r29
    1ccc:	c7 95       	ror	r28
    1cce:	cc 2e       	mov	r12, r28
    1cd0:	dd 2e       	mov	r13, r29
    1cd2:	56 01       	movw	r10, r12
    1cd4:	4c 15       	cp	r20, r12
    1cd6:	5d 05       	cpc	r21, r13
    1cd8:	08 f4       	brcc	.+2      	; 0x1cdc <bits2int+0x46>
    1cda:	5a 01       	movw	r10, r20
    1cdc:	6c 2f       	mov	r22, r28
    1cde:	c8 01       	movw	r24, r16
    1ce0:	0e 94 59 03 	call	0x6b2	; 0x6b2 <uECC_vli_clear>
    1ce4:	a4 01       	movw	r20, r8
    1ce6:	b5 01       	movw	r22, r10
    1ce8:	c8 01       	movw	r24, r16
    1cea:	b3 df       	rcall	.-154    	; 0x1c52 <uECC_vli_nativeToBytes>
    1cec:	aa 0c       	add	r10, r10
    1cee:	bb 1c       	adc	r11, r11
    1cf0:	aa 0c       	add	r10, r10
    1cf2:	bb 1c       	adc	r11, r11
    1cf4:	aa 0c       	add	r10, r10
    1cf6:	bb 1c       	adc	r11, r11
    1cf8:	f7 01       	movw	r30, r14
    1cfa:	82 81       	ldd	r24, Z+2	; 0x02
    1cfc:	93 81       	ldd	r25, Z+3	; 0x03
    1cfe:	8a 15       	cp	r24, r10
    1d00:	9b 05       	cpc	r25, r11
    1d02:	a0 f5       	brcc	.+104    	; 0x1d6c <bits2int+0xd6>
    1d04:	b5 01       	movw	r22, r10
    1d06:	68 1b       	sub	r22, r24
    1d08:	79 0b       	sbc	r23, r25
    1d0a:	f8 01       	movw	r30, r16
    1d0c:	ec 0d       	add	r30, r12
    1d0e:	fd 1d       	adc	r31, r13
    1d10:	0e 17       	cp	r16, r30
    1d12:	1f 07       	cpc	r17, r31
    1d14:	d8 f4       	brcc	.+54     	; 0x1d4c <bits2int+0xb6>
    1d16:	d8 01       	movw	r26, r16
    1d18:	d1 2c       	mov	r13, r1
    1d1a:	48 e0       	ldi	r20, 0x08	; 8
    1d1c:	50 e0       	ldi	r21, 0x00	; 0
    1d1e:	46 1b       	sub	r20, r22
    1d20:	57 0b       	sbc	r21, r23
    1d22:	92 91       	ld	r25, -Z
    1d24:	29 2f       	mov	r18, r25
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	c9 01       	movw	r24, r18
    1d2a:	06 2e       	mov	r0, r22
    1d2c:	02 c0       	rjmp	.+4      	; 0x1d32 <bits2int+0x9c>
    1d2e:	95 95       	asr	r25
    1d30:	87 95       	ror	r24
    1d32:	0a 94       	dec	r0
    1d34:	e2 f7       	brpl	.-8      	; 0x1d2e <bits2int+0x98>
    1d36:	8d 29       	or	r24, r13
    1d38:	80 83       	st	Z, r24
    1d3a:	04 2e       	mov	r0, r20
    1d3c:	01 c0       	rjmp	.+2      	; 0x1d40 <bits2int+0xaa>
    1d3e:	22 0f       	add	r18, r18
    1d40:	0a 94       	dec	r0
    1d42:	ea f7       	brpl	.-6      	; 0x1d3e <bits2int+0xa8>
    1d44:	d2 2e       	mov	r13, r18
    1d46:	ae 17       	cp	r26, r30
    1d48:	bf 07       	cpc	r27, r31
    1d4a:	59 f7       	brne	.-42     	; 0x1d22 <bits2int+0x8c>
    1d4c:	f4 e2       	ldi	r31, 0x24	; 36
    1d4e:	ef 0e       	add	r14, r31
    1d50:	f1 1c       	adc	r15, r1
    1d52:	4c 2f       	mov	r20, r28
    1d54:	b8 01       	movw	r22, r16
    1d56:	c7 01       	movw	r24, r14
    1d58:	0e 94 80 06 	call	0xd00	; 0xd00 <uECC_vli_cmp_unsafe>
    1d5c:	81 30       	cpi	r24, 0x01	; 1
    1d5e:	31 f0       	breq	.+12     	; 0x1d6c <bits2int+0xd6>
    1d60:	2c 2f       	mov	r18, r28
    1d62:	a7 01       	movw	r20, r14
    1d64:	b8 01       	movw	r22, r16
    1d66:	c8 01       	movw	r24, r16
    1d68:	0e 94 10 05 	call	0xa20	; 0xa20 <uECC_vli_sub>
    1d6c:	df 91       	pop	r29
    1d6e:	cf 91       	pop	r28
    1d70:	1f 91       	pop	r17
    1d72:	0f 91       	pop	r16
    1d74:	ff 90       	pop	r15
    1d76:	ef 90       	pop	r14
    1d78:	df 90       	pop	r13
    1d7a:	cf 90       	pop	r12
    1d7c:	bf 90       	pop	r11
    1d7e:	af 90       	pop	r10
    1d80:	9f 90       	pop	r9
    1d82:	8f 90       	pop	r8
    1d84:	08 95       	ret

00001d86 <uECC_secp256r1>:
    1d86:	86 e4       	ldi	r24, 0x46	; 70
    1d88:	91 e0       	ldi	r25, 0x01	; 1
    1d8a:	08 95       	ret

00001d8c <uECC_verify>:

int uECC_verify(const uint8_t *public_key,
                const uint8_t *message_hash,
                unsigned hash_size,
                const uint8_t *signature,
                uECC_Curve curve) {
    1d8c:	2f 92       	push	r2
    1d8e:	3f 92       	push	r3
    1d90:	4f 92       	push	r4
    1d92:	5f 92       	push	r5
    1d94:	6f 92       	push	r6
    1d96:	7f 92       	push	r7
    1d98:	8f 92       	push	r8
    1d9a:	9f 92       	push	r9
    1d9c:	af 92       	push	r10
    1d9e:	bf 92       	push	r11
    1da0:	cf 92       	push	r12
    1da2:	df 92       	push	r13
    1da4:	ef 92       	push	r14
    1da6:	ff 92       	push	r15
    1da8:	0f 93       	push	r16
    1daa:	1f 93       	push	r17
    1dac:	cf 93       	push	r28
    1dae:	df 93       	push	r29
    1db0:	cd b7       	in	r28, 0x3d	; 61
    1db2:	de b7       	in	r29, 0x3e	; 62
    1db4:	cc 5c       	subi	r28, 0xCC	; 204
    1db6:	d1 40       	sbci	r29, 0x01	; 1
    1db8:	0f b6       	in	r0, 0x3f	; 63
    1dba:	f8 94       	cli
    1dbc:	de bf       	out	0x3e, r29	; 62
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	cd bf       	out	0x3d, r28	; 61
    1dc2:	4c 01       	movw	r8, r24
    1dc4:	c7 53       	subi	r28, 0x37	; 55
    1dc6:	de 4f       	sbci	r29, 0xFE	; 254
    1dc8:	79 83       	std	Y+1, r23	; 0x01
    1dca:	68 83       	st	Y, r22
    1dcc:	c9 5c       	subi	r28, 0xC9	; 201
    1dce:	d1 40       	sbci	r29, 0x01	; 1
    1dd0:	c5 53       	subi	r28, 0x35	; 53
    1dd2:	de 4f       	sbci	r29, 0xFE	; 254
    1dd4:	59 83       	std	Y+1, r21	; 0x01
    1dd6:	48 83       	st	Y, r20
    1dd8:	cb 5c       	subi	r28, 0xCB	; 203
    1dda:	d1 40       	sbci	r29, 0x01	; 1
    1ddc:	59 01       	movw	r10, r18
    1dde:	78 01       	movw	r14, r16
    uECC_word_t *_public = (uECC_word_t *)public_key;
#else
    uECC_word_t _public[uECC_MAX_WORDS * 2];
#endif    
    uECC_word_t r[uECC_MAX_WORDS], s[uECC_MAX_WORDS];
    wordcount_t num_words = curve->num_words;
    1de0:	d8 01       	movw	r26, r16
    1de2:	3c 90       	ld	r3, X
    wordcount_t num_n_words = BITS_TO_WORDS(curve->num_n_bits);
    1de4:	12 96       	adiw	r26, 0x02	; 2
    1de6:	8d 91       	ld	r24, X+
    1de8:	9c 91       	ld	r25, X
    1dea:	13 97       	sbiw	r26, 0x03	; 3
    1dec:	07 96       	adiw	r24, 0x07	; 7
    1dee:	6c 01       	movw	r12, r24
    1df0:	1a f4       	brpl	.+6      	; 0x1df8 <uECC_verify+0x6c>
    1df2:	b7 e0       	ldi	r27, 0x07	; 7
    1df4:	cb 0e       	add	r12, r27
    1df6:	d1 1c       	adc	r13, r1
    1df8:	d5 94       	asr	r13
    1dfa:	c7 94       	ror	r12
    1dfc:	d5 94       	asr	r13
    1dfe:	c7 94       	ror	r12
    1e00:	d5 94       	asr	r13
    1e02:	c7 94       	ror	r12

    rx[num_n_words - 1] = 0;
    1e04:	0c 2d       	mov	r16, r12
    1e06:	0c 2c       	mov	r0, r12
    1e08:	00 0c       	add	r0, r0
    1e0a:	11 0b       	sbc	r17, r17
    1e0c:	01 50       	subi	r16, 0x01	; 1
    1e0e:	11 09       	sbc	r17, r1
    1e10:	e1 ea       	ldi	r30, 0xA1	; 161
    1e12:	f0 e0       	ldi	r31, 0x00	; 0
    1e14:	ec 0f       	add	r30, r28
    1e16:	fd 1f       	adc	r31, r29
    1e18:	e0 0f       	add	r30, r16
    1e1a:	f1 1f       	adc	r31, r17
    1e1c:	10 82       	st	Z, r1
    r[num_n_words - 1] = 0;
    1e1e:	e9 e8       	ldi	r30, 0x89	; 137
    1e20:	f1 e0       	ldi	r31, 0x01	; 1
    1e22:	ec 0f       	add	r30, r28
    1e24:	fd 1f       	adc	r31, r29
    1e26:	e0 0f       	add	r30, r16
    1e28:	f1 1f       	adc	r31, r17
    1e2a:	10 82       	st	Z, r1
    s[num_n_words - 1] = 0;
    1e2c:	e9 ea       	ldi	r30, 0xA9	; 169
    1e2e:	f1 e0       	ldi	r31, 0x01	; 1
    1e30:	ec 0f       	add	r30, r28
    1e32:	fd 1f       	adc	r31, r29
    1e34:	e0 0f       	add	r30, r16
    1e36:	f1 1f       	adc	r31, r17
    1e38:	10 82       	st	Z, r1
}

uECC_VLI_API void uECC_vli_bytesToNative(uint8_t *native,
                                         const uint8_t *bytes,
                                         int num_bytes) {
    uECC_vli_nativeToBytes(native, num_bytes, bytes);
    1e3a:	f7 01       	movw	r30, r14
    1e3c:	61 81       	ldd	r22, Z+1	; 0x01
    1e3e:	06 2e       	mov	r0, r22
    1e40:	00 0c       	add	r0, r0
    1e42:	77 0b       	sbc	r23, r23
    1e44:	a4 01       	movw	r20, r8
    1e46:	ce 01       	movw	r24, r28
    1e48:	87 5b       	subi	r24, 0xB7	; 183
    1e4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e4c:	02 df       	rcall	.-508    	; 0x1c52 <uECC_vli_nativeToBytes>
    bcopy((uint8_t *) r, signature, curve->num_bytes);
    bcopy((uint8_t *) s, signature + curve->num_bytes, curve->num_bytes);
#else
    uECC_vli_bytesToNative(_public, public_key, curve->num_bytes);
    uECC_vli_bytesToNative(
        _public + num_words, public_key + curve->num_bytes, curve->num_bytes);
    1e4e:	d7 01       	movw	r26, r14
    1e50:	11 96       	adiw	r26, 0x01	; 1
    1e52:	6c 91       	ld	r22, X
#if uECC_VLI_NATIVE_LITTLE_ENDIAN
    bcopy((uint8_t *) r, signature, curve->num_bytes);
    bcopy((uint8_t *) s, signature + curve->num_bytes, curve->num_bytes);
#else
    uECC_vli_bytesToNative(_public, public_key, curve->num_bytes);
    uECC_vli_bytesToNative(
    1e54:	63 2c       	mov	r6, r3
    1e56:	03 2c       	mov	r0, r3
    1e58:	00 0c       	add	r0, r0
    1e5a:	77 08       	sbc	r7, r7
    1e5c:	0f 2e       	mov	r0, r31
    1e5e:	f9 e4       	ldi	r31, 0x49	; 73
    1e60:	4f 2e       	mov	r4, r31
    1e62:	55 24       	eor	r5, r5
    1e64:	53 94       	inc	r5
    1e66:	f0 2d       	mov	r31, r0
    1e68:	4c 0e       	add	r4, r28
    1e6a:	5d 1e       	adc	r5, r29
    1e6c:	46 0c       	add	r4, r6
    1e6e:	57 1c       	adc	r5, r7
}

uECC_VLI_API void uECC_vli_bytesToNative(uint8_t *native,
                                         const uint8_t *bytes,
                                         int num_bytes) {
    uECC_vli_nativeToBytes(native, num_bytes, bytes);
    1e70:	06 2e       	mov	r0, r22
    1e72:	00 0c       	add	r0, r0
    1e74:	77 0b       	sbc	r23, r23
    1e76:	a4 01       	movw	r20, r8
    1e78:	46 0f       	add	r20, r22
    1e7a:	57 1f       	adc	r21, r23
    1e7c:	c2 01       	movw	r24, r4
    1e7e:	e9 de       	rcall	.-558    	; 0x1c52 <uECC_vli_nativeToBytes>
    1e80:	f7 01       	movw	r30, r14
    1e82:	61 81       	ldd	r22, Z+1	; 0x01
    1e84:	06 2e       	mov	r0, r22
    1e86:	00 0c       	add	r0, r0
    1e88:	77 0b       	sbc	r23, r23
    1e8a:	a5 01       	movw	r20, r10
    1e8c:	ce 01       	movw	r24, r28
    1e8e:	87 57       	subi	r24, 0x77	; 119
    1e90:	9e 4f       	sbci	r25, 0xFE	; 254
    1e92:	df de       	rcall	.-578    	; 0x1c52 <uECC_vli_nativeToBytes>
#else
    uECC_vli_bytesToNative(_public, public_key, curve->num_bytes);
    uECC_vli_bytesToNative(
        _public + num_words, public_key + curve->num_bytes, curve->num_bytes);
    uECC_vli_bytesToNative(r, signature, curve->num_bytes);
    uECC_vli_bytesToNative(s, signature + curve->num_bytes, curve->num_bytes);
    1e94:	d7 01       	movw	r26, r14
    1e96:	11 96       	adiw	r26, 0x01	; 1
    1e98:	6c 91       	ld	r22, X
}

uECC_VLI_API void uECC_vli_bytesToNative(uint8_t *native,
                                         const uint8_t *bytes,
                                         int num_bytes) {
    uECC_vli_nativeToBytes(native, num_bytes, bytes);
    1e9a:	06 2e       	mov	r0, r22
    1e9c:	00 0c       	add	r0, r0
    1e9e:	77 0b       	sbc	r23, r23
    1ea0:	a5 01       	movw	r20, r10
    1ea2:	46 0f       	add	r20, r22
    1ea4:	57 1f       	adc	r21, r23
    1ea6:	ce 01       	movw	r24, r28
    1ea8:	87 55       	subi	r24, 0x57	; 87
    1eaa:	9e 4f       	sbci	r25, 0xFE	; 254
    1eac:	d2 de       	rcall	.-604    	; 0x1c52 <uECC_vli_nativeToBytes>
    uECC_vli_bytesToNative(r, signature, curve->num_bytes);
    uECC_vli_bytesToNative(s, signature + curve->num_bytes, curve->num_bytes);
#endif

    /* r, s must not be 0. */
    if (uECC_vli_isZero(r, num_words) || uECC_vli_isZero(s, num_words)) {
    1eae:	63 2d       	mov	r22, r3
    1eb0:	ce 01       	movw	r24, r28
    1eb2:	87 57       	subi	r24, 0x77	; 119
    1eb4:	9e 4f       	sbci	r25, 0xFE	; 254
    1eb6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uECC_vli_isZero>
    1eba:	81 11       	cpse	r24, r1
    1ebc:	fd c1       	rjmp	.+1018   	; 0x22b8 <uECC_verify+0x52c>
    1ebe:	63 2d       	mov	r22, r3
    1ec0:	ce 01       	movw	r24, r28
    1ec2:	87 55       	subi	r24, 0x57	; 87
    1ec4:	9e 4f       	sbci	r25, 0xFE	; 254
    1ec6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uECC_vli_isZero>
    1eca:	81 11       	cpse	r24, r1
    1ecc:	f8 c1       	rjmp	.+1008   	; 0x22be <uECC_verify+0x532>
        return 0;
    }

    /* r, s must be < n. */
    if (uECC_vli_cmp_unsafe(curve->n, r, num_n_words) != 1 ||
    1ece:	47 01       	movw	r8, r14
    1ed0:	b4 e2       	ldi	r27, 0x24	; 36
    1ed2:	8b 0e       	add	r8, r27
    1ed4:	91 1c       	adc	r9, r1
    1ed6:	4c 2d       	mov	r20, r12
    1ed8:	be 01       	movw	r22, r28
    1eda:	67 57       	subi	r22, 0x77	; 119
    1edc:	7e 4f       	sbci	r23, 0xFE	; 254
    1ede:	c4 01       	movw	r24, r8
    1ee0:	0e 94 80 06 	call	0xd00	; 0xd00 <uECC_vli_cmp_unsafe>
    1ee4:	81 30       	cpi	r24, 0x01	; 1
    1ee6:	09 f0       	breq	.+2      	; 0x1eea <uECC_verify+0x15e>
    1ee8:	ed c1       	rjmp	.+986    	; 0x22c4 <uECC_verify+0x538>
            uECC_vli_cmp_unsafe(curve->n, s, num_n_words) != 1) {
    1eea:	4c 2d       	mov	r20, r12
    1eec:	be 01       	movw	r22, r28
    1eee:	67 55       	subi	r22, 0x57	; 87
    1ef0:	7e 4f       	sbci	r23, 0xFE	; 254
    1ef2:	c4 01       	movw	r24, r8
    1ef4:	0e 94 80 06 	call	0xd00	; 0xd00 <uECC_vli_cmp_unsafe>
    if (uECC_vli_isZero(r, num_words) || uECC_vli_isZero(s, num_words)) {
        return 0;
    }

    /* r, s must be < n. */
    if (uECC_vli_cmp_unsafe(curve->n, r, num_n_words) != 1 ||
    1ef8:	81 30       	cpi	r24, 0x01	; 1
    1efa:	09 f0       	breq	.+2      	; 0x1efe <uECC_verify+0x172>
    1efc:	e6 c1       	rjmp	.+972    	; 0x22ca <uECC_verify+0x53e>
            uECC_vli_cmp_unsafe(curve->n, s, num_n_words) != 1) {
        return 0;
    }

    /* Calculate u1 and u2. */
    uECC_vli_modInv(z, s, curve->n, num_n_words); /* z = 1/s */
    1efe:	2c 2d       	mov	r18, r12
    1f00:	a4 01       	movw	r20, r8
    1f02:	be 01       	movw	r22, r28
    1f04:	67 55       	subi	r22, 0x57	; 87
    1f06:	7e 4f       	sbci	r23, 0xFE	; 254
    1f08:	ce 01       	movw	r24, r28
    1f0a:	8f 5b       	subi	r24, 0xBF	; 191
    1f0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f0e:	3b d9       	rcall	.-3466   	; 0x1186 <uECC_vli_modInv>
    u1[num_n_words - 1] = 0;
    1f10:	e1 e0       	ldi	r30, 0x01	; 1
    1f12:	f0 e0       	ldi	r31, 0x00	; 0
    1f14:	ec 0f       	add	r30, r28
    1f16:	fd 1f       	adc	r31, r29
    1f18:	e0 0f       	add	r30, r16
    1f1a:	f1 1f       	adc	r31, r17
    1f1c:	10 82       	st	Z, r1
    bits2int(u1, message_hash, hash_size, curve);
    1f1e:	97 01       	movw	r18, r14
    1f20:	c5 53       	subi	r28, 0x35	; 53
    1f22:	de 4f       	sbci	r29, 0xFE	; 254
    1f24:	48 81       	ld	r20, Y
    1f26:	59 81       	ldd	r21, Y+1	; 0x01
    1f28:	cb 5c       	subi	r28, 0xCB	; 203
    1f2a:	d1 40       	sbci	r29, 0x01	; 1
    1f2c:	c7 53       	subi	r28, 0x37	; 55
    1f2e:	de 4f       	sbci	r29, 0xFE	; 254
    1f30:	68 81       	ld	r22, Y
    1f32:	79 81       	ldd	r23, Y+1	; 0x01
    1f34:	c9 5c       	subi	r28, 0xC9	; 201
    1f36:	d1 40       	sbci	r29, 0x01	; 1
    1f38:	ce 01       	movw	r24, r28
    1f3a:	01 96       	adiw	r24, 0x01	; 1
    1f3c:	ac de       	rcall	.-680    	; 0x1c96 <bits2int>
    uECC_vli_modMult(u1, u1, z, curve->n, num_n_words); /* u1 = e/s */
    1f3e:	0c 2d       	mov	r16, r12
    1f40:	94 01       	movw	r18, r8
    1f42:	ae 01       	movw	r20, r28
    1f44:	4f 5b       	subi	r20, 0xBF	; 191
    1f46:	5f 4f       	sbci	r21, 0xFF	; 255
    1f48:	be 01       	movw	r22, r28
    1f4a:	6f 5f       	subi	r22, 0xFF	; 255
    1f4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f4e:	cb 01       	movw	r24, r22
    1f50:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <uECC_vli_modMult>
    uECC_vli_modMult(u2, r, z, curve->n, num_n_words); /* u2 = r/s */
    1f54:	94 01       	movw	r18, r8
    1f56:	ae 01       	movw	r20, r28
    1f58:	4f 5b       	subi	r20, 0xBF	; 191
    1f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f5c:	be 01       	movw	r22, r28
    1f5e:	67 57       	subi	r22, 0x77	; 119
    1f60:	7e 4f       	sbci	r23, 0xFE	; 254
    1f62:	ce 01       	movw	r24, r28
    1f64:	81 96       	adiw	r24, 0x21	; 33
    1f66:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <uECC_vli_modMult>

    /* Calculate sum = G + Q. */
    uECC_vli_set(sum, _public, num_words);
    1f6a:	5e 01       	movw	r10, r28
    1f6c:	e1 e6       	ldi	r30, 0x61	; 97
    1f6e:	ae 0e       	add	r10, r30
    1f70:	b1 1c       	adc	r11, r1
    1f72:	43 2d       	mov	r20, r3
    1f74:	be 01       	movw	r22, r28
    1f76:	67 5b       	subi	r22, 0xB7	; 183
    1f78:	7e 4f       	sbci	r23, 0xFE	; 254
    1f7a:	c5 01       	movw	r24, r10
    1f7c:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_set(sum + num_words, _public + num_words, num_words);
    1f80:	c5 01       	movw	r24, r10
    1f82:	86 0d       	add	r24, r6
    1f84:	97 1d       	adc	r25, r7
    1f86:	c5 53       	subi	r28, 0x35	; 53
    1f88:	de 4f       	sbci	r29, 0xFE	; 254
    1f8a:	99 83       	std	Y+1, r25	; 0x01
    1f8c:	88 83       	st	Y, r24
    1f8e:	cb 5c       	subi	r28, 0xCB	; 203
    1f90:	d1 40       	sbci	r29, 0x01	; 1
    1f92:	43 2d       	mov	r20, r3
    1f94:	b2 01       	movw	r22, r4
    1f96:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_set(tx, curve->G, num_words);
    1f9a:	43 2d       	mov	r20, r3
    1f9c:	27 01       	movw	r4, r14
    1f9e:	94 e4       	ldi	r25, 0x44	; 68
    1fa0:	49 0e       	add	r4, r25
    1fa2:	51 1c       	adc	r5, r1
    1fa4:	b2 01       	movw	r22, r4
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	8f 51       	subi	r24, 0x1F	; 31
    1faa:	9f 4f       	sbci	r25, 0xFF	; 255
    1fac:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_set(ty, curve->G + num_words, num_words);
    1fb0:	b2 01       	movw	r22, r4
    1fb2:	66 0d       	add	r22, r6
    1fb4:	77 1d       	adc	r23, r7
    1fb6:	43 2d       	mov	r20, r3
    1fb8:	ce 01       	movw	r24, r28
    1fba:	8f 5f       	subi	r24, 0xFF	; 255
    1fbc:	9e 4f       	sbci	r25, 0xFE	; 254
    1fbe:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_modSub(z, sum, tx, curve->p, num_words); /* z = x2 - x1 */
    1fc2:	d7 01       	movw	r26, r14
    1fc4:	14 96       	adiw	r26, 0x04	; 4
    1fc6:	c7 53       	subi	r28, 0x37	; 55
    1fc8:	de 4f       	sbci	r29, 0xFE	; 254
    1fca:	b9 83       	std	Y+1, r27	; 0x01
    1fcc:	a8 83       	st	Y, r26
    1fce:	c9 5c       	subi	r28, 0xC9	; 201
    1fd0:	d1 40       	sbci	r29, 0x01	; 1
    1fd2:	03 2d       	mov	r16, r3
    1fd4:	9d 01       	movw	r18, r26
    1fd6:	ae 01       	movw	r20, r28
    1fd8:	4f 51       	subi	r20, 0x1F	; 31
    1fda:	5f 4f       	sbci	r21, 0xFF	; 255
    1fdc:	b5 01       	movw	r22, r10
    1fde:	ce 01       	movw	r24, r28
    1fe0:	8f 5b       	subi	r24, 0xBF	; 191
    1fe2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe4:	0e 94 ce 06 	call	0xd9c	; 0xd9c <uECC_vli_modSub>
    XYcZ_add(tx, ty, sum, sum + num_words, curve);
    1fe8:	87 01       	movw	r16, r14
    1fea:	c5 53       	subi	r28, 0x35	; 53
    1fec:	de 4f       	sbci	r29, 0xFE	; 254
    1fee:	28 81       	ld	r18, Y
    1ff0:	39 81       	ldd	r19, Y+1	; 0x01
    1ff2:	cb 5c       	subi	r28, 0xCB	; 203
    1ff4:	d1 40       	sbci	r29, 0x01	; 1
    1ff6:	a5 01       	movw	r20, r10
    1ff8:	be 01       	movw	r22, r28
    1ffa:	6f 5f       	subi	r22, 0xFF	; 255
    1ffc:	7e 4f       	sbci	r23, 0xFE	; 254
    1ffe:	ce 01       	movw	r24, r28
    2000:	8f 51       	subi	r24, 0x1F	; 31
    2002:	9f 4f       	sbci	r25, 0xFF	; 255
    2004:	97 dd       	rcall	.-1234   	; 0x1b34 <XYcZ_add>
    uECC_vli_modInv(z, z, curve->p, num_words); /* z = 1/z */
    2006:	23 2d       	mov	r18, r3
    2008:	c7 53       	subi	r28, 0x37	; 55
    200a:	de 4f       	sbci	r29, 0xFE	; 254
    200c:	48 81       	ld	r20, Y
    200e:	59 81       	ldd	r21, Y+1	; 0x01
    2010:	c9 5c       	subi	r28, 0xC9	; 201
    2012:	d1 40       	sbci	r29, 0x01	; 1
    2014:	be 01       	movw	r22, r28
    2016:	6f 5b       	subi	r22, 0xBF	; 191
    2018:	7f 4f       	sbci	r23, 0xFF	; 255
    201a:	cb 01       	movw	r24, r22
    201c:	b4 d8       	rcall	.-3736   	; 0x1186 <uECC_vli_modInv>
    apply_z(sum, sum + num_words, z, curve);
    201e:	97 01       	movw	r18, r14
    2020:	ae 01       	movw	r20, r28
    2022:	4f 5b       	subi	r20, 0xBF	; 191
    2024:	5f 4f       	sbci	r21, 0xFF	; 255
    2026:	c5 53       	subi	r28, 0x35	; 53
    2028:	de 4f       	sbci	r29, 0xFE	; 254
    202a:	68 81       	ld	r22, Y
    202c:	79 81       	ldd	r23, Y+1	; 0x01
    202e:	cb 5c       	subi	r28, 0xCB	; 203
    2030:	d1 40       	sbci	r29, 0x01	; 1
    2032:	c5 01       	movw	r24, r10
    2034:	3e dd       	rcall	.-1412   	; 0x1ab2 <apply_z>

    /* Use Shamir's trick to calculate u1*G + u2*Q */
    points[0] = 0;
    2036:	cf 5b       	subi	r28, 0xBF	; 191
    2038:	de 4f       	sbci	r29, 0xFE	; 254
    203a:	19 82       	std	Y+1, r1	; 0x01
    203c:	18 82       	st	Y, r1
    203e:	c1 54       	subi	r28, 0x41	; 65
    2040:	d1 40       	sbci	r29, 0x01	; 1
    points[1] = curve->G;
    2042:	cd 5b       	subi	r28, 0xBD	; 189
    2044:	de 4f       	sbci	r29, 0xFE	; 254
    2046:	59 82       	std	Y+1, r5	; 0x01
    2048:	48 82       	st	Y, r4
    204a:	c3 54       	subi	r28, 0x43	; 67
    204c:	d1 40       	sbci	r29, 0x01	; 1
    points[2] = _public;
    204e:	e9 e4       	ldi	r30, 0x49	; 73
    2050:	f1 e0       	ldi	r31, 0x01	; 1
    2052:	ec 0f       	add	r30, r28
    2054:	fd 1f       	adc	r31, r29
    2056:	cb 5b       	subi	r28, 0xBB	; 187
    2058:	de 4f       	sbci	r29, 0xFE	; 254
    205a:	f9 83       	std	Y+1, r31	; 0x01
    205c:	e8 83       	st	Y, r30
    205e:	c5 54       	subi	r28, 0x45	; 69
    2060:	d1 40       	sbci	r29, 0x01	; 1
    points[3] = sum;
    2062:	c9 5b       	subi	r28, 0xB9	; 185
    2064:	de 4f       	sbci	r29, 0xFE	; 254
    2066:	b9 82       	std	Y+1, r11	; 0x01
    2068:	a8 82       	st	Y, r10
    206a:	c7 54       	subi	r28, 0x47	; 71
    206c:	d1 40       	sbci	r29, 0x01	; 1
    num_bits = smax(uECC_vli_numBits(u1, num_n_words),
    206e:	6c 2d       	mov	r22, r12
    2070:	ce 01       	movw	r24, r28
    2072:	81 96       	adiw	r24, 0x21	; 33
    2074:	0e 94 49 06 	call	0xc92	; 0xc92 <uECC_vli_numBits>
    2078:	08 2f       	mov	r16, r24
    207a:	19 2f       	mov	r17, r25
    207c:	6c 2d       	mov	r22, r12
    207e:	ce 01       	movw	r24, r28
    2080:	01 96       	adiw	r24, 0x01	; 1
    2082:	0e 94 49 06 	call	0xc92	; 0xc92 <uECC_vli_numBits>
    }
    return 0;
}

static bitcount_t smax(bitcount_t a, bitcount_t b) {
    return (a > b ? a : b);
    2086:	a0 2e       	mov	r10, r16
    2088:	b1 2e       	mov	r11, r17
    208a:	a8 16       	cp	r10, r24
    208c:	b9 06       	cpc	r11, r25
    208e:	0c f4       	brge	.+2      	; 0x2092 <uECC_verify+0x306>
    2090:	5c 01       	movw	r10, r24
    points[2] = _public;
    points[3] = sum;
    num_bits = smax(uECC_vli_numBits(u1, num_n_words),
                    uECC_vli_numBits(u2, num_n_words));

    point = points[(!!uECC_vli_testBit(u1, num_bits - 1)) |
    2092:	85 01       	movw	r16, r10
    2094:	01 50       	subi	r16, 0x01	; 1
    2096:	11 09       	sbc	r17, r1
    2098:	b8 01       	movw	r22, r16
    209a:	ce 01       	movw	r24, r28
    209c:	01 96       	adiw	r24, 0x01	; 1
    209e:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_testBit>
    20a2:	21 e0       	ldi	r18, 0x01	; 1
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	81 11       	cpse	r24, r1
    20a8:	01 c0       	rjmp	.+2      	; 0x20ac <uECC_verify+0x320>
    20aa:	20 e0       	ldi	r18, 0x00	; 0
    20ac:	42 2e       	mov	r4, r18
    20ae:	59 2e       	mov	r5, r25
                   ((!!uECC_vli_testBit(u2, num_bits - 1)) << 1)];
    20b0:	b8 01       	movw	r22, r16
    20b2:	ce 01       	movw	r24, r28
    20b4:	81 96       	adiw	r24, 0x21	; 33
    20b6:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_testBit>
    20ba:	81 11       	cpse	r24, r1
    20bc:	03 c0       	rjmp	.+6      	; 0x20c4 <uECC_verify+0x338>
    20be:	e0 e0       	ldi	r30, 0x00	; 0
    20c0:	f0 e0       	ldi	r31, 0x00	; 0
    20c2:	02 c0       	rjmp	.+4      	; 0x20c8 <uECC_verify+0x33c>
    20c4:	e2 e0       	ldi	r30, 0x02	; 2
    20c6:	f0 e0       	ldi	r31, 0x00	; 0
    points[2] = _public;
    points[3] = sum;
    num_bits = smax(uECC_vli_numBits(u1, num_n_words),
                    uECC_vli_numBits(u2, num_n_words));

    point = points[(!!uECC_vli_testBit(u1, num_bits - 1)) |
    20c8:	e4 29       	or	r30, r4
    20ca:	f5 29       	or	r31, r5
    20cc:	ee 0f       	add	r30, r30
    20ce:	ff 1f       	adc	r31, r31
    20d0:	81 e4       	ldi	r24, 0x41	; 65
    20d2:	91 e0       	ldi	r25, 0x01	; 1
    20d4:	8c 0f       	add	r24, r28
    20d6:	9d 1f       	adc	r25, r29
    20d8:	e8 0f       	add	r30, r24
    20da:	f9 1f       	adc	r31, r25
    20dc:	00 81       	ld	r16, Z
    20de:	11 81       	ldd	r17, Z+1	; 0x01
                   ((!!uECC_vli_testBit(u2, num_bits - 1)) << 1)];
    uECC_vli_set(rx, point, num_words);
    20e0:	43 2d       	mov	r20, r3
    20e2:	b8 01       	movw	r22, r16
    20e4:	ce 01       	movw	r24, r28
    20e6:	8f 55       	subi	r24, 0x5F	; 95
    20e8:	9f 4f       	sbci	r25, 0xFF	; 255
    20ea:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_set(ry, point + num_words, num_words);
    20ee:	b8 01       	movw	r22, r16
    20f0:	66 0d       	add	r22, r6
    20f2:	77 1d       	adc	r23, r7
    20f4:	43 2d       	mov	r20, r3
    20f6:	ce 01       	movw	r24, r28
    20f8:	8f 53       	subi	r24, 0x3F	; 63
    20fa:	9f 4f       	sbci	r25, 0xFF	; 255
    20fc:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
    uECC_vli_clear(z, num_words);
    2100:	63 2d       	mov	r22, r3
    2102:	ce 01       	movw	r24, r28
    2104:	8f 5b       	subi	r24, 0xBF	; 191
    2106:	9f 4f       	sbci	r25, 0xFF	; 255
    2108:	0e 94 59 03 	call	0x6b2	; 0x6b2 <uECC_vli_clear>
    z[0] = 1;
    210c:	81 e0       	ldi	r24, 0x01	; 1
    210e:	22 96       	adiw	r28, 0x02	; 2
    2110:	8f af       	std	Y+63, r24	; 0x3f
    2112:	22 97       	sbiw	r28, 0x02	; 2

    for (i = num_bits - 2; i >= 0; --i) {
    2114:	92 e0       	ldi	r25, 0x02	; 2
    2116:	a9 1a       	sub	r10, r25
    2118:	b1 08       	sbc	r11, r1
    211a:	0a f4       	brpl	.+2      	; 0x211e <uECC_verify+0x392>
    211c:	81 c0       	rjmp	.+258    	; 0x2220 <uECC_verify+0x494>
        uECC_word_t index;
        curve->double_jacobian(rx, ry, z, curve);
    211e:	27 01       	movw	r4, r14
    2120:	a4 ea       	ldi	r26, 0xA4	; 164
    2122:	4a 0e       	add	r4, r26
    2124:	51 1c       	adc	r5, r1

        index = (!!uECC_vli_testBit(u1, i)) | ((!!uECC_vli_testBit(u2, i)) << 1);
    2126:	21 2c       	mov	r2, r1
    uECC_vli_clear(z, num_words);
    z[0] = 1;

    for (i = num_bits - 2; i >= 0; --i) {
        uECC_word_t index;
        curve->double_jacobian(rx, ry, z, curve);
    2128:	d2 01       	movw	r26, r4
    212a:	ed 91       	ld	r30, X+
    212c:	fc 91       	ld	r31, X
    212e:	97 01       	movw	r18, r14
    2130:	ae 01       	movw	r20, r28
    2132:	4f 5b       	subi	r20, 0xBF	; 191
    2134:	5f 4f       	sbci	r21, 0xFF	; 255
    2136:	be 01       	movw	r22, r28
    2138:	6f 53       	subi	r22, 0x3F	; 63
    213a:	7f 4f       	sbci	r23, 0xFF	; 255
    213c:	ce 01       	movw	r24, r28
    213e:	8f 55       	subi	r24, 0x5F	; 95
    2140:	9f 4f       	sbci	r25, 0xFF	; 255
    2142:	09 95       	icall

        index = (!!uECC_vli_testBit(u1, i)) | ((!!uECC_vli_testBit(u2, i)) << 1);
    2144:	b5 01       	movw	r22, r10
    2146:	ce 01       	movw	r24, r28
    2148:	01 96       	adiw	r24, 0x01	; 1
    214a:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_testBit>
    214e:	11 e0       	ldi	r17, 0x01	; 1
    2150:	81 11       	cpse	r24, r1
    2152:	01 c0       	rjmp	.+2      	; 0x2156 <uECC_verify+0x3ca>
    2154:	12 2d       	mov	r17, r2
    2156:	b5 01       	movw	r22, r10
    2158:	ce 01       	movw	r24, r28
    215a:	81 96       	adiw	r24, 0x21	; 33
    215c:	0e 94 33 06 	call	0xc66	; 0xc66 <uECC_vli_testBit>
    2160:	81 11       	cpse	r24, r1
    2162:	02 c0       	rjmp	.+4      	; 0x2168 <uECC_verify+0x3dc>
    2164:	e2 2d       	mov	r30, r2
    2166:	01 c0       	rjmp	.+2      	; 0x216a <uECC_verify+0x3de>
    2168:	e2 e0       	ldi	r30, 0x02	; 2
        point = points[index];
    216a:	1e 2b       	or	r17, r30
    216c:	e1 2f       	mov	r30, r17
    216e:	f0 e0       	ldi	r31, 0x00	; 0
    2170:	ee 0f       	add	r30, r30
    2172:	ff 1f       	adc	r31, r31
    2174:	81 e4       	ldi	r24, 0x41	; 65
    2176:	91 e0       	ldi	r25, 0x01	; 1
    2178:	8c 0f       	add	r24, r28
    217a:	9d 1f       	adc	r25, r29
    217c:	e8 0f       	add	r30, r24
    217e:	f9 1f       	adc	r31, r25
    2180:	00 81       	ld	r16, Z
    2182:	11 81       	ldd	r17, Z+1	; 0x01
        if (point) {
    2184:	01 15       	cp	r16, r1
    2186:	11 05       	cpc	r17, r1
    2188:	09 f4       	brne	.+2      	; 0x218c <uECC_verify+0x400>
    218a:	45 c0       	rjmp	.+138    	; 0x2216 <uECC_verify+0x48a>
            uECC_vli_set(tx, point, num_words);
    218c:	43 2d       	mov	r20, r3
    218e:	b8 01       	movw	r22, r16
    2190:	ce 01       	movw	r24, r28
    2192:	8f 51       	subi	r24, 0x1F	; 31
    2194:	9f 4f       	sbci	r25, 0xFF	; 255
    2196:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
            uECC_vli_set(ty, point + num_words, num_words);
    219a:	b8 01       	movw	r22, r16
    219c:	66 0d       	add	r22, r6
    219e:	77 1d       	adc	r23, r7
    21a0:	43 2d       	mov	r20, r3
    21a2:	ce 01       	movw	r24, r28
    21a4:	8f 5f       	subi	r24, 0xFF	; 255
    21a6:	9e 4f       	sbci	r25, 0xFE	; 254
    21a8:	0e 94 80 03 	call	0x700	; 0x700 <uECC_vli_set>
            apply_z(tx, ty, z, curve);
    21ac:	97 01       	movw	r18, r14
    21ae:	ae 01       	movw	r20, r28
    21b0:	4f 5b       	subi	r20, 0xBF	; 191
    21b2:	5f 4f       	sbci	r21, 0xFF	; 255
    21b4:	be 01       	movw	r22, r28
    21b6:	6f 5f       	subi	r22, 0xFF	; 255
    21b8:	7e 4f       	sbci	r23, 0xFE	; 254
    21ba:	ce 01       	movw	r24, r28
    21bc:	8f 51       	subi	r24, 0x1F	; 31
    21be:	9f 4f       	sbci	r25, 0xFF	; 255
    21c0:	78 dc       	rcall	.-1808   	; 0x1ab2 <apply_z>
            uECC_vli_modSub(tz, rx, tx, curve->p, num_words); /* Z = x2 - x1 */
    21c2:	03 2d       	mov	r16, r3
    21c4:	c7 53       	subi	r28, 0x37	; 55
    21c6:	de 4f       	sbci	r29, 0xFE	; 254
    21c8:	28 81       	ld	r18, Y
    21ca:	39 81       	ldd	r19, Y+1	; 0x01
    21cc:	c9 5c       	subi	r28, 0xC9	; 201
    21ce:	d1 40       	sbci	r29, 0x01	; 1
    21d0:	ae 01       	movw	r20, r28
    21d2:	4f 51       	subi	r20, 0x1F	; 31
    21d4:	5f 4f       	sbci	r21, 0xFF	; 255
    21d6:	be 01       	movw	r22, r28
    21d8:	6f 55       	subi	r22, 0x5F	; 95
    21da:	7f 4f       	sbci	r23, 0xFF	; 255
    21dc:	ce 01       	movw	r24, r28
    21de:	8f 5d       	subi	r24, 0xDF	; 223
    21e0:	9e 4f       	sbci	r25, 0xFE	; 254
    21e2:	0e 94 ce 06 	call	0xd9c	; 0xd9c <uECC_vli_modSub>
            XYcZ_add(tx, ty, rx, ry, curve);
    21e6:	87 01       	movw	r16, r14
    21e8:	9e 01       	movw	r18, r28
    21ea:	2f 53       	subi	r18, 0x3F	; 63
    21ec:	3f 4f       	sbci	r19, 0xFF	; 255
    21ee:	ae 01       	movw	r20, r28
    21f0:	4f 55       	subi	r20, 0x5F	; 95
    21f2:	5f 4f       	sbci	r21, 0xFF	; 255
    21f4:	be 01       	movw	r22, r28
    21f6:	6f 5f       	subi	r22, 0xFF	; 255
    21f8:	7e 4f       	sbci	r23, 0xFE	; 254
    21fa:	ce 01       	movw	r24, r28
    21fc:	8f 51       	subi	r24, 0x1F	; 31
    21fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2200:	99 dc       	rcall	.-1742   	; 0x1b34 <XYcZ_add>
            uECC_vli_modMult_fast(z, z, tz, curve);
    2202:	97 01       	movw	r18, r14
    2204:	ae 01       	movw	r20, r28
    2206:	4f 5d       	subi	r20, 0xDF	; 223
    2208:	5e 4f       	sbci	r21, 0xFE	; 254
    220a:	be 01       	movw	r22, r28
    220c:	6f 5b       	subi	r22, 0xBF	; 191
    220e:	7f 4f       	sbci	r23, 0xFF	; 255
    2210:	cb 01       	movw	r24, r22
    2212:	0e 94 69 08 	call	0x10d2	; 0x10d2 <uECC_vli_modMult_fast>
    uECC_vli_set(rx, point, num_words);
    uECC_vli_set(ry, point + num_words, num_words);
    uECC_vli_clear(z, num_words);
    z[0] = 1;

    for (i = num_bits - 2; i >= 0; --i) {
    2216:	91 e0       	ldi	r25, 0x01	; 1
    2218:	a9 1a       	sub	r10, r25
    221a:	b1 08       	sbc	r11, r1
    221c:	08 f0       	brcs	.+2      	; 0x2220 <uECC_verify+0x494>
    221e:	84 cf       	rjmp	.-248    	; 0x2128 <uECC_verify+0x39c>
            XYcZ_add(tx, ty, rx, ry, curve);
            uECC_vli_modMult_fast(z, z, tz, curve);
        }
    }

    uECC_vli_modInv(z, z, curve->p, num_words); /* Z = 1/Z */
    2220:	23 2d       	mov	r18, r3
    2222:	c7 53       	subi	r28, 0x37	; 55
    2224:	de 4f       	sbci	r29, 0xFE	; 254
    2226:	48 81       	ld	r20, Y
    2228:	59 81       	ldd	r21, Y+1	; 0x01
    222a:	c9 5c       	subi	r28, 0xC9	; 201
    222c:	d1 40       	sbci	r29, 0x01	; 1
    222e:	be 01       	movw	r22, r28
    2230:	6f 5b       	subi	r22, 0xBF	; 191
    2232:	7f 4f       	sbci	r23, 0xFF	; 255
    2234:	cb 01       	movw	r24, r22
    2236:	0e 94 c3 08 	call	0x1186	; 0x1186 <uECC_vli_modInv>
    apply_z(rx, ry, z, curve);
    223a:	97 01       	movw	r18, r14
    223c:	ae 01       	movw	r20, r28
    223e:	4f 5b       	subi	r20, 0xBF	; 191
    2240:	5f 4f       	sbci	r21, 0xFF	; 255
    2242:	be 01       	movw	r22, r28
    2244:	6f 53       	subi	r22, 0x3F	; 63
    2246:	7f 4f       	sbci	r23, 0xFF	; 255
    2248:	ce 01       	movw	r24, r28
    224a:	8f 55       	subi	r24, 0x5F	; 95
    224c:	9f 4f       	sbci	r25, 0xFF	; 255
    224e:	31 dc       	rcall	.-1950   	; 0x1ab2 <apply_z>

    /* v = x1 (mod n) */
    if (uECC_vli_cmp_unsafe(curve->n, rx, num_n_words) != 1) {
    2250:	4c 2d       	mov	r20, r12
    2252:	be 01       	movw	r22, r28
    2254:	6f 55       	subi	r22, 0x5F	; 95
    2256:	7f 4f       	sbci	r23, 0xFF	; 255
    2258:	c4 01       	movw	r24, r8
    225a:	0e 94 80 06 	call	0xd00	; 0xd00 <uECC_vli_cmp_unsafe>
    225e:	81 30       	cpi	r24, 0x01	; 1
    2260:	41 f0       	breq	.+16     	; 0x2272 <uECC_verify+0x4e6>
        uECC_vli_sub(rx, rx, curve->n, num_n_words);
    2262:	2c 2d       	mov	r18, r12
    2264:	a4 01       	movw	r20, r8
    2266:	be 01       	movw	r22, r28
    2268:	6f 55       	subi	r22, 0x5F	; 95
    226a:	7f 4f       	sbci	r23, 0xFF	; 255
    226c:	cb 01       	movw	r24, r22
    226e:	0e 94 10 05 	call	0xa20	; 0xa20 <uECC_vli_sub>
uECC_VLI_API uECC_word_t uECC_vli_equal(const uECC_word_t *left,
                                        const uECC_word_t *right,
                                        wordcount_t num_words) {
    uECC_word_t diff = 0;
    wordcount_t i;
    for (i = num_words - 1; i >= 0; --i) {
    2272:	3a 94       	dec	r3
    2274:	33 20       	and	r3, r3
    2276:	cc f0       	brlt	.+50     	; 0x22aa <uECC_verify+0x51e>
    2278:	20 e0       	ldi	r18, 0x00	; 0
        diff |= (left[i] ^ right[i]);
    227a:	83 2d       	mov	r24, r3
    227c:	03 2c       	mov	r0, r3
    227e:	00 0c       	add	r0, r0
    2280:	99 0b       	sbc	r25, r25
    2282:	e1 ea       	ldi	r30, 0xA1	; 161
    2284:	f0 e0       	ldi	r31, 0x00	; 0
    2286:	ec 0f       	add	r30, r28
    2288:	fd 1f       	adc	r31, r29
    228a:	e8 0f       	add	r30, r24
    228c:	f9 1f       	adc	r31, r25
    228e:	a9 e8       	ldi	r26, 0x89	; 137
    2290:	b1 e0       	ldi	r27, 0x01	; 1
    2292:	ac 0f       	add	r26, r28
    2294:	bd 1f       	adc	r27, r29
    2296:	a8 0f       	add	r26, r24
    2298:	b9 1f       	adc	r27, r25
    229a:	30 81       	ld	r19, Z
    229c:	8c 91       	ld	r24, X
    229e:	83 27       	eor	r24, r19
    22a0:	28 2b       	or	r18, r24
    22a2:	3a 94       	dec	r3
uECC_VLI_API uECC_word_t uECC_vli_equal(const uECC_word_t *left,
                                        const uECC_word_t *right,
                                        wordcount_t num_words) {
    uECC_word_t diff = 0;
    wordcount_t i;
    for (i = num_words - 1; i >= 0; --i) {
    22a4:	33 20       	and	r3, r3
    22a6:	4c f7       	brge	.-46     	; 0x227a <uECC_verify+0x4ee>
    22a8:	01 c0       	rjmp	.+2      	; 0x22ac <uECC_verify+0x520>
/* Constant-time comparison function - secure way to compare long integers */
/* Returns one if left == right, zero otherwise. */
uECC_VLI_API uECC_word_t uECC_vli_equal(const uECC_word_t *left,
                                        const uECC_word_t *right,
                                        wordcount_t num_words) {
    uECC_word_t diff = 0;
    22aa:	20 e0       	ldi	r18, 0x00	; 0
    if (uECC_vli_cmp_unsafe(curve->n, rx, num_n_words) != 1) {
        uECC_vli_sub(rx, rx, curve->n, num_n_words);
    }

    /* Accept only if v == r. */
    return (int)(uECC_vli_equal(rx, r, num_words));
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	22 23       	and	r18, r18
    22b2:	69 f0       	breq	.+26     	; 0x22ce <uECC_verify+0x542>
    22b4:	80 e0       	ldi	r24, 0x00	; 0
    22b6:	0b c0       	rjmp	.+22     	; 0x22ce <uECC_verify+0x542>
    uECC_vli_bytesToNative(s, signature + curve->num_bytes, curve->num_bytes);
#endif

    /* r, s must not be 0. */
    if (uECC_vli_isZero(r, num_words) || uECC_vli_isZero(s, num_words)) {
        return 0;
    22b8:	80 e0       	ldi	r24, 0x00	; 0
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	08 c0       	rjmp	.+16     	; 0x22ce <uECC_verify+0x542>
    22be:	80 e0       	ldi	r24, 0x00	; 0
    22c0:	90 e0       	ldi	r25, 0x00	; 0
    22c2:	05 c0       	rjmp	.+10     	; 0x22ce <uECC_verify+0x542>
    }

    /* r, s must be < n. */
    if (uECC_vli_cmp_unsafe(curve->n, r, num_n_words) != 1 ||
            uECC_vli_cmp_unsafe(curve->n, s, num_n_words) != 1) {
        return 0;
    22c4:	80 e0       	ldi	r24, 0x00	; 0
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	02 c0       	rjmp	.+4      	; 0x22ce <uECC_verify+0x542>
    22ca:	80 e0       	ldi	r24, 0x00	; 0
    22cc:	90 e0       	ldi	r25, 0x00	; 0
        uECC_vli_sub(rx, rx, curve->n, num_n_words);
    }

    /* Accept only if v == r. */
    return (int)(uECC_vli_equal(rx, r, num_words));
}
    22ce:	c4 53       	subi	r28, 0x34	; 52
    22d0:	de 4f       	sbci	r29, 0xFE	; 254
    22d2:	0f b6       	in	r0, 0x3f	; 63
    22d4:	f8 94       	cli
    22d6:	de bf       	out	0x3e, r29	; 62
    22d8:	0f be       	out	0x3f, r0	; 63
    22da:	cd bf       	out	0x3d, r28	; 61
    22dc:	df 91       	pop	r29
    22de:	cf 91       	pop	r28
    22e0:	1f 91       	pop	r17
    22e2:	0f 91       	pop	r16
    22e4:	ff 90       	pop	r15
    22e6:	ef 90       	pop	r14
    22e8:	df 90       	pop	r13
    22ea:	cf 90       	pop	r12
    22ec:	bf 90       	pop	r11
    22ee:	af 90       	pop	r10
    22f0:	9f 90       	pop	r9
    22f2:	8f 90       	pop	r8
    22f4:	7f 90       	pop	r7
    22f6:	6f 90       	pop	r6
    22f8:	5f 90       	pop	r5
    22fa:	4f 90       	pop	r4
    22fc:	3f 90       	pop	r3
    22fe:	2f 90       	pop	r2
    2300:	08 95       	ret

00002302 <hex_to_bytes>:
		*dest++ = table[c >> 4];
		*dest++ = table[c & 0x0f];
	}
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
    2302:	ff 92       	push	r15
    2304:	0f 93       	push	r16
    2306:	1f 93       	push	r17
    2308:	cf 93       	push	r28
    230a:	df 93       	push	r29
    230c:	f8 2e       	mov	r15, r24
    230e:	09 2f       	mov	r16, r25
    2310:	16 2f       	mov	r17, r22
    2312:	ea 01       	movw	r28, r20
	memset(dest, 0, slength/2);
    2314:	46 2f       	mov	r20, r22
    2316:	46 95       	lsr	r20
    2318:	50 e0       	ldi	r21, 0x00	; 0
    231a:	60 e0       	ldi	r22, 0x00	; 0
    231c:	70 e0       	ldi	r23, 0x00	; 0
    231e:	ce 01       	movw	r24, r28
    2320:	0e 94 2d 20 	call	0x405a	; 0x405a <memset>
	uint8_t index = 0;
	while (index < slength) {
    2324:	11 23       	and	r17, r17
    2326:	09 f4       	brne	.+2      	; 0x232a <hex_to_bytes+0x28>
    2328:	3f c0       	rjmp	.+126    	; 0x23a8 <hex_to_bytes+0xa6>
    232a:	ef 2d       	mov	r30, r15
    232c:	f0 2f       	mov	r31, r16
    232e:	20 e0       	ldi	r18, 0x00	; 0
    2330:	30 e0       	ldi	r19, 0x00	; 0
		char c = src[index];
		int value = 0;
    2332:	70 e0       	ldi	r23, 0x00	; 0
    2334:	60 e0       	ldi	r22, 0x00	; 0
    2336:	42 2f       	mov	r20, r18

void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
	memset(dest, 0, slength/2);
	uint8_t index = 0;
	while (index < slength) {
		char c = src[index];
    2338:	81 91       	ld	r24, Z+
    233a:	2f 5f       	subi	r18, 0xFF	; 255
    233c:	3f 4f       	sbci	r19, 0xFF	; 255
		int value = 0;
		if(c >= '0' && c <= '9')
    233e:	90 ed       	ldi	r25, 0xD0	; 208
    2340:	98 0f       	add	r25, r24
    2342:	9a 30       	cpi	r25, 0x0A	; 10
    2344:	18 f4       	brcc	.+6      	; 0x234c <hex_to_bytes+0x4a>
		value = (c - '0');
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	c0 97       	sbiw	r24, 0x30	; 48
    234a:	11 c0       	rjmp	.+34     	; 0x236e <hex_to_bytes+0x6c>
		else if (c >= 'A' && c <= 'F')
    234c:	9f eb       	ldi	r25, 0xBF	; 191
    234e:	98 0f       	add	r25, r24
    2350:	96 30       	cpi	r25, 0x06	; 6
    2352:	18 f4       	brcc	.+6      	; 0x235a <hex_to_bytes+0x58>
		value = (10 + (c - 'A'));
    2354:	90 e0       	ldi	r25, 0x00	; 0
    2356:	c7 97       	sbiw	r24, 0x37	; 55
    2358:	0a c0       	rjmp	.+20     	; 0x236e <hex_to_bytes+0x6c>
		else if (c >= 'a' && c <= 'f')
    235a:	9f e9       	ldi	r25, 0x9F	; 159
    235c:	98 0f       	add	r25, r24
    235e:	96 30       	cpi	r25, 0x06	; 6
    2360:	20 f4       	brcc	.+8      	; 0x236a <hex_to_bytes+0x68>
		value = (10 + (c - 'a'));
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	87 55       	subi	r24, 0x57	; 87
    2366:	91 09       	sbc	r25, r1
    2368:	02 c0       	rjmp	.+4      	; 0x236e <hex_to_bytes+0x6c>
void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
	memset(dest, 0, slength/2);
	uint8_t index = 0;
	while (index < slength) {
		char c = src[index];
		int value = 0;
    236a:	87 2f       	mov	r24, r23
    236c:	96 2f       	mov	r25, r22
		else if (c >= 'A' && c <= 'F')
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
		value = (10 + (c - 'a'));

		dest[(index/2)] += value << (((index + 1) % 2) * 4);
    236e:	46 95       	lsr	r20
    2370:	de 01       	movw	r26, r28
    2372:	a4 0f       	add	r26, r20
    2374:	b1 1d       	adc	r27, r1
    2376:	a9 01       	movw	r20, r18
    2378:	41 70       	andi	r20, 0x01	; 1
    237a:	50 78       	andi	r21, 0x80	; 128
    237c:	55 23       	and	r21, r21
    237e:	34 f4       	brge	.+12     	; 0x238c <hex_to_bytes+0x8a>
    2380:	41 50       	subi	r20, 0x01	; 1
    2382:	51 09       	sbc	r21, r1
    2384:	4e 6f       	ori	r20, 0xFE	; 254
    2386:	5f 6f       	ori	r21, 0xFF	; 255
    2388:	4f 5f       	subi	r20, 0xFF	; 255
    238a:	5f 4f       	sbci	r21, 0xFF	; 255
    238c:	44 0f       	add	r20, r20
    238e:	55 1f       	adc	r21, r21
    2390:	44 0f       	add	r20, r20
    2392:	55 1f       	adc	r21, r21
    2394:	02 c0       	rjmp	.+4      	; 0x239a <hex_to_bytes+0x98>
    2396:	88 0f       	add	r24, r24
    2398:	99 1f       	adc	r25, r25
    239a:	4a 95       	dec	r20
    239c:	e2 f7       	brpl	.-8      	; 0x2396 <hex_to_bytes+0x94>
    239e:	9c 91       	ld	r25, X
    23a0:	89 0f       	add	r24, r25
    23a2:	8c 93       	st	X, r24
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
	memset(dest, 0, slength/2);
	uint8_t index = 0;
	while (index < slength) {
    23a4:	21 17       	cp	r18, r17
    23a6:	38 f2       	brcs	.-114    	; 0x2336 <hex_to_bytes+0x34>

		dest[(index/2)] += value << (((index + 1) % 2) * 4);

		index++;
	}
}
    23a8:	df 91       	pop	r29
    23aa:	cf 91       	pop	r28
    23ac:	1f 91       	pop	r17
    23ae:	0f 91       	pop	r16
    23b0:	ff 90       	pop	r15
    23b2:	08 95       	ret

000023b4 <get_public_key>:
		if (check_permission(id, role) == 0){
			uart_puts("Permission Ok");
		}else{
			uart_puts("Permission Failed");
		}
	}
    23b4:	82 30       	cpi	r24, 0x02	; 2
    23b6:	79 f0       	breq	.+30     	; 0x23d6 <get_public_key+0x22>
    23b8:	18 f4       	brcc	.+6      	; 0x23c0 <get_public_key+0xc>
    23ba:	81 30       	cpi	r24, 0x01	; 1
    23bc:	31 f0       	breq	.+12     	; 0x23ca <get_public_key+0x16>
    23be:	08 95       	ret
    23c0:	84 30       	cpi	r24, 0x04	; 4
    23c2:	79 f0       	breq	.+30     	; 0x23e2 <get_public_key+0x2e>
    23c4:	88 30       	cpi	r24, 0x08	; 8
    23c6:	99 f0       	breq	.+38     	; 0x23ee <get_public_key+0x3a>
    23c8:	08 95       	ret
    23ca:	ab 01       	movw	r20, r22
    23cc:	60 e8       	ldi	r22, 0x80	; 128
    23ce:	8d e7       	ldi	r24, 0x7D	; 125
    23d0:	94 e0       	ldi	r25, 0x04	; 4
    23d2:	97 cf       	rjmp	.-210    	; 0x2302 <hex_to_bytes>
    23d4:	08 95       	ret
    23d6:	ab 01       	movw	r20, r22
    23d8:	60 e8       	ldi	r22, 0x80	; 128
    23da:	8d ef       	ldi	r24, 0xFD	; 253
    23dc:	93 e0       	ldi	r25, 0x03	; 3
    23de:	91 cf       	rjmp	.-222    	; 0x2302 <hex_to_bytes>
    23e0:	08 95       	ret
    23e2:	ab 01       	movw	r20, r22
    23e4:	60 e8       	ldi	r22, 0x80	; 128
    23e6:	8d e7       	ldi	r24, 0x7D	; 125
    23e8:	93 e0       	ldi	r25, 0x03	; 3
    23ea:	8b cf       	rjmp	.-234    	; 0x2302 <hex_to_bytes>
    23ec:	08 95       	ret
    23ee:	ab 01       	movw	r20, r22
    23f0:	60 e8       	ldi	r22, 0x80	; 128
    23f2:	8d ef       	ldi	r24, 0xFD	; 253
    23f4:	92 e0       	ldi	r25, 0x02	; 2
    23f6:	85 cf       	rjmp	.-246    	; 0x2302 <hex_to_bytes>
    23f8:	08 95       	ret

000023fa <__vector_8>:
    23fa:	1f 92       	push	r1
    23fc:	0f 92       	push	r0
    23fe:	0f b6       	in	r0, 0x3f	; 63
    2400:	0f 92       	push	r0
    2402:	11 24       	eor	r1, r1
    2404:	0b b6       	in	r0, 0x3b	; 59
    2406:	0f 92       	push	r0
    2408:	2f 93       	push	r18
    240a:	3f 93       	push	r19
    240c:	4f 93       	push	r20
    240e:	5f 93       	push	r21
    2410:	6f 93       	push	r22
    2412:	7f 93       	push	r23
    2414:	8f 93       	push	r24
    2416:	9f 93       	push	r25
    2418:	af 93       	push	r26
    241a:	bf 93       	push	r27
    241c:	ef 93       	push	r30
    241e:	ff 93       	push	r31
    2420:	ef 98       	cbi	0x1d, 7	; 29
    2422:	2f ef       	ldi	r18, 0xFF	; 255
    2424:	84 e3       	ldi	r24, 0x34	; 52
    2426:	9c e0       	ldi	r25, 0x0C	; 12
    2428:	21 50       	subi	r18, 0x01	; 1
    242a:	80 40       	sbci	r24, 0x00	; 0
    242c:	90 40       	sbci	r25, 0x00	; 0
    242e:	e1 f7       	brne	.-8      	; 0x2428 <__vector_8+0x2e>
    2430:	00 c0       	rjmp	.+0      	; 0x2432 <__vector_8+0x38>
    2432:	00 00       	nop
    2434:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <__data_end>
    2438:	88 23       	and	r24, r24
    243a:	19 f0       	breq	.+6      	; 0x2442 <__vector_8+0x48>
    243c:	81 30       	cpi	r24, 0x01	; 1
    243e:	49 f0       	breq	.+18     	; 0x2452 <__vector_8+0x58>
    2440:	0e c0       	rjmp	.+28     	; 0x245e <__vector_8+0x64>
    2442:	81 e0       	ldi	r24, 0x01	; 1
    2444:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <__data_end>
    2448:	82 ef       	ldi	r24, 0xF2	; 242
    244a:	91 e0       	ldi	r25, 0x01	; 1
    244c:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    2450:	06 c0       	rjmp	.+12     	; 0x245e <__vector_8+0x64>
    2452:	10 92 08 05 	sts	0x0508, r1	; 0x800508 <__data_end>
    2456:	8f e1       	ldi	r24, 0x1F	; 31
    2458:	92 e0       	ldi	r25, 0x02	; 2
    245a:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    245e:	ef 9a       	sbi	0x1d, 7	; 29
    2460:	ff 91       	pop	r31
    2462:	ef 91       	pop	r30
    2464:	bf 91       	pop	r27
    2466:	af 91       	pop	r26
    2468:	9f 91       	pop	r25
    246a:	8f 91       	pop	r24
    246c:	7f 91       	pop	r23
    246e:	6f 91       	pop	r22
    2470:	5f 91       	pop	r21
    2472:	4f 91       	pop	r20
    2474:	3f 91       	pop	r19
    2476:	2f 91       	pop	r18
    2478:	0f 90       	pop	r0
    247a:	0b be       	out	0x3b, r0	; 59
    247c:	0f 90       	pop	r0
    247e:	0f be       	out	0x3f, r0	; 63
    2480:	0f 90       	pop	r0
    2482:	1f 90       	pop	r1
    2484:	18 95       	reti

00002486 <buttons_init>:
    2486:	1d b8       	out	0x0d, r1	; 13
    2488:	80 ef       	ldi	r24, 0xF0	; 240
    248a:	8e b9       	out	0x0e, r24	; 14
    248c:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
    2490:	8d bb       	out	0x1d, r24	; 29
    2492:	08 95       	ret

00002494 <verify_signature>:
    2494:	af 92       	push	r10
    2496:	bf 92       	push	r11
    2498:	df 92       	push	r13
    249a:	ef 92       	push	r14
    249c:	ff 92       	push	r15
    249e:	0f 93       	push	r16
    24a0:	1f 93       	push	r17
    24a2:	cf 93       	push	r28
    24a4:	df 93       	push	r29
    24a6:	cd b7       	in	r28, 0x3d	; 61
    24a8:	de b7       	in	r29, 0x3e	; 62
    24aa:	c0 58       	subi	r28, 0x80	; 128
    24ac:	d1 09       	sbc	r29, r1
    24ae:	0f b6       	in	r0, 0x3f	; 63
    24b0:	f8 94       	cli
    24b2:	de bf       	out	0x3e, r29	; 62
    24b4:	0f be       	out	0x3f, r0	; 63
    24b6:	cd bf       	out	0x3d, r28	; 61
    24b8:	5c 01       	movw	r10, r24
    24ba:	7b 01       	movw	r14, r22
    24bc:	d4 2e       	mov	r13, r20
    24be:	63 dc       	rcall	.-1850   	; 0x1d86 <uECC_secp256r1>
    24c0:	8c 01       	movw	r16, r24
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	32 e0       	ldi	r19, 0x02	; 2
    24c6:	40 e0       	ldi	r20, 0x00	; 0
    24c8:	50 e0       	ldi	r21, 0x00	; 0
    24ca:	b5 01       	movw	r22, r10
    24cc:	ce 01       	movw	r24, r28
    24ce:	01 96       	adiw	r24, 0x01	; 1
    24d0:	0e 94 d0 1d 	call	0x3ba0	; 0x3ba0 <sha512>
    24d4:	be 01       	movw	r22, r28
    24d6:	6f 5b       	subi	r22, 0xBF	; 191
    24d8:	7f 4f       	sbci	r23, 0xFF	; 255
    24da:	8d 2d       	mov	r24, r13
    24dc:	6b df       	rcall	.-298    	; 0x23b4 <get_public_key>
    24de:	97 01       	movw	r18, r14
    24e0:	40 e4       	ldi	r20, 0x40	; 64
    24e2:	50 e0       	ldi	r21, 0x00	; 0
    24e4:	be 01       	movw	r22, r28
    24e6:	6f 5f       	subi	r22, 0xFF	; 255
    24e8:	7f 4f       	sbci	r23, 0xFF	; 255
    24ea:	ce 01       	movw	r24, r28
    24ec:	8f 5b       	subi	r24, 0xBF	; 191
    24ee:	9f 4f       	sbci	r25, 0xFF	; 255
    24f0:	4d dc       	rcall	.-1894   	; 0x1d8c <uECC_verify>
    24f2:	c0 58       	subi	r28, 0x80	; 128
    24f4:	df 4f       	sbci	r29, 0xFF	; 255
    24f6:	0f b6       	in	r0, 0x3f	; 63
    24f8:	f8 94       	cli
    24fa:	de bf       	out	0x3e, r29	; 62
    24fc:	0f be       	out	0x3f, r0	; 63
    24fe:	cd bf       	out	0x3d, r28	; 61
    2500:	df 91       	pop	r29
    2502:	cf 91       	pop	r28
    2504:	1f 91       	pop	r17
    2506:	0f 91       	pop	r16
    2508:	ff 90       	pop	r15
    250a:	ef 90       	pop	r14
    250c:	df 90       	pop	r13
    250e:	bf 90       	pop	r11
    2510:	af 90       	pop	r10
    2512:	08 95       	ret

00002514 <single_authentication>:
    2514:	1f 93       	push	r17
    2516:	cf 93       	push	r28
    2518:	df 93       	push	r29
    251a:	cd b7       	in	r28, 0x3d	; 61
    251c:	de b7       	in	r29, 0x3e	; 62
    251e:	cb 55       	subi	r28, 0x5B	; 91
    2520:	d1 09       	sbc	r29, r1
    2522:	0f b6       	in	r0, 0x3f	; 63
    2524:	f8 94       	cli
    2526:	de bf       	out	0x3e, r29	; 62
    2528:	0f be       	out	0x3f, r0	; 63
    252a:	cd bf       	out	0x3d, r28	; 61
    252c:	18 2f       	mov	r17, r24
    252e:	8b e4       	ldi	r24, 0x4B	; 75
    2530:	92 e0       	ldi	r25, 0x02	; 2
    2532:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    2536:	80 e4       	ldi	r24, 0x40	; 64
    2538:	e6 e0       	ldi	r30, 0x06	; 6
    253a:	f1 e0       	ldi	r31, 0x01	; 1
    253c:	de 01       	movw	r26, r28
    253e:	12 96       	adiw	r26, 0x02	; 2
    2540:	01 90       	ld	r0, Z+
    2542:	0d 92       	st	X+, r0
    2544:	8a 95       	dec	r24
    2546:	e1 f7       	brne	.-8      	; 0x2540 <single_authentication+0x2c>
    2548:	68 e0       	ldi	r22, 0x08	; 8
    254a:	ce 01       	movw	r24, r28
    254c:	02 96       	adiw	r24, 0x02	; 2
    254e:	0e 94 ce 02 	call	0x59c	; 0x59c <can_send_frame_buffer>
    2552:	82 e6       	ldi	r24, 0x62	; 98
    2554:	92 e0       	ldi	r25, 0x02	; 2
    2556:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    255a:	68 e0       	ldi	r22, 0x08	; 8
    255c:	ce 01       	movw	r24, r28
    255e:	8e 5b       	subi	r24, 0xBE	; 190
    2560:	9f 4f       	sbci	r25, 0xFF	; 255
    2562:	0e 94 e6 02 	call	0x5cc	; 0x5cc <can_receive_frame_buffer>
    2566:	41 2f       	mov	r20, r17
    2568:	be 01       	movw	r22, r28
    256a:	6e 5b       	subi	r22, 0xBE	; 190
    256c:	7f 4f       	sbci	r23, 0xFF	; 255
    256e:	ce 01       	movw	r24, r28
    2570:	02 96       	adiw	r24, 0x02	; 2
    2572:	90 df       	rcall	.-224    	; 0x2494 <verify_signature>
    2574:	89 83       	std	Y+1, r24	; 0x01
    2576:	89 81       	ldd	r24, Y+1	; 0x01
    2578:	81 30       	cpi	r24, 0x01	; 1
    257a:	29 f4       	brne	.+10     	; 0x2586 <single_authentication+0x72>
    257c:	81 e7       	ldi	r24, 0x71	; 113
    257e:	92 e0       	ldi	r25, 0x02	; 2
    2580:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    2584:	04 c0       	rjmp	.+8      	; 0x258e <single_authentication+0x7a>
    2586:	85 e8       	ldi	r24, 0x85	; 133
    2588:	92 e0       	ldi	r25, 0x02	; 2
    258a:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    258e:	2b 96       	adiw	r28, 0x0b	; 11
    2590:	1f ae       	std	Y+63, r1	; 0x3f
    2592:	2b 97       	sbiw	r28, 0x0b	; 11
    2594:	ae 01       	movw	r20, r28
    2596:	46 5b       	subi	r20, 0xB6	; 182
    2598:	5f 4f       	sbci	r21, 0xFF	; 255
    259a:	60 e0       	ldi	r22, 0x00	; 0
    259c:	70 e0       	ldi	r23, 0x00	; 0
    259e:	80 e0       	ldi	r24, 0x00	; 0
    25a0:	0e 94 69 02 	call	0x4d2	; 0x4d2 <can_send_message>
    25a4:	9e 01       	movw	r18, r28
    25a6:	2e 5a       	subi	r18, 0xAE	; 174
    25a8:	3f 4f       	sbci	r19, 0xFF	; 255
    25aa:	40 e0       	ldi	r20, 0x00	; 0
    25ac:	50 e0       	ldi	r21, 0x00	; 0
    25ae:	6b ef       	ldi	r22, 0xFB	; 251
    25b0:	72 e0       	ldi	r23, 0x02	; 2
    25b2:	80 e0       	ldi	r24, 0x00	; 0
    25b4:	0e 94 85 02 	call	0x50a	; 0x50a <can_receive_message>
    25b8:	be 01       	movw	r22, r28
    25ba:	66 5a       	subi	r22, 0xA6	; 166
    25bc:	7f 4f       	sbci	r23, 0xFF	; 255
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	0e 94 18 02 	call	0x430	; 0x430 <can_get_id>
    25c4:	61 2f       	mov	r22, r17
    25c6:	ce 01       	movw	r24, r28
    25c8:	86 5a       	subi	r24, 0xA6	; 166
    25ca:	9f 4f       	sbci	r25, 0xFF	; 255
    25cc:	dd d0       	rcall	.+442    	; 0x2788 <check_permission>
    25ce:	89 2b       	or	r24, r25
    25d0:	29 f4       	brne	.+10     	; 0x25dc <single_authentication+0xc8>
    25d2:	89 e9       	ldi	r24, 0x99	; 153
    25d4:	92 e0       	ldi	r25, 0x02	; 2
    25d6:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    25da:	04 c0       	rjmp	.+8      	; 0x25e4 <single_authentication+0xd0>
    25dc:	87 ea       	ldi	r24, 0xA7	; 167
    25de:	92 e0       	ldi	r25, 0x02	; 2
    25e0:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
    25e4:	80 e0       	ldi	r24, 0x00	; 0
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	c5 5a       	subi	r28, 0xA5	; 165
    25ea:	df 4f       	sbci	r29, 0xFF	; 255
    25ec:	0f b6       	in	r0, 0x3f	; 63
    25ee:	f8 94       	cli
    25f0:	de bf       	out	0x3e, r29	; 62
    25f2:	0f be       	out	0x3f, r0	; 63
    25f4:	cd bf       	out	0x3d, r28	; 61
    25f6:	df 91       	pop	r29
    25f8:	cf 91       	pop	r28
    25fa:	1f 91       	pop	r17
    25fc:	08 95       	ret

000025fe <main>:
	
}


 int main()
 {
    25fe:	cf 93       	push	r28
    2600:	df 93       	push	r29
    2602:	cd b7       	in	r28, 0x3d	; 61
    2604:	de b7       	in	r29, 0x3e	; 62
    2606:	28 97       	sbiw	r28, 0x08	; 8
    2608:	0f b6       	in	r0, 0x3f	; 63
    260a:	f8 94       	cli
    260c:	de bf       	out	0x3e, r29	; 62
    260e:	0f be       	out	0x3f, r0	; 63
    2610:	cd bf       	out	0x3d, r28	; 61
	uart_init();
    2612:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <uart_init>
	buttons_init();
    2616:	37 df       	rcall	.-402    	; 0x2486 <buttons_init>
	can_init();
    2618:	0e 94 ca 01 	call	0x394	; 0x394 <can_init>
	init_permissions_table();
    261c:	72 d0       	rcall	.+228    	; 0x2702 <init_permissions_table>
	uart_puts("idle");
    261e:	84 ef       	ldi	r24, 0xF4	; 244
    2620:	92 e0       	ldi	r25, 0x02	; 2
    2622:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
	can_msg_t init;
	can_receive_message(0, default_id, zero_mask, init);
    2626:	9e 01       	movw	r18, r28
    2628:	2f 5f       	subi	r18, 0xFF	; 255
    262a:	3f 4f       	sbci	r19, 0xFF	; 255
    262c:	49 ef       	ldi	r20, 0xF9	; 249
    262e:	52 e0       	ldi	r21, 0x02	; 2
    2630:	6b ef       	ldi	r22, 0xFB	; 251
    2632:	72 e0       	ldi	r23, 0x02	; 2
    2634:	80 e0       	ldi	r24, 0x00	; 0
    2636:	0e 94 85 02 	call	0x50a	; 0x50a <can_receive_message>
	switch((int) init[0]){
    263a:	89 81       	ldd	r24, Y+1	; 0x01
    263c:	82 30       	cpi	r24, 0x02	; 2
    263e:	61 f0       	breq	.+24     	; 0x2658 <main+0x5a>
    2640:	18 f4       	brcc	.+6      	; 0x2648 <main+0x4a>
    2642:	81 30       	cpi	r24, 0x01	; 1
    2644:	31 f0       	breq	.+12     	; 0x2652 <main+0x54>
    2646:	10 c0       	rjmp	.+32     	; 0x2668 <main+0x6a>
    2648:	84 30       	cpi	r24, 0x04	; 4
    264a:	49 f0       	breq	.+18     	; 0x265e <main+0x60>
    264c:	88 30       	cpi	r24, 0x08	; 8
    264e:	51 f0       	breq	.+20     	; 0x2664 <main+0x66>
		case OWNER_ROLE :
			single_authentication(OWNER_ROLE);
    2650:	0b c0       	rjmp	.+22     	; 0x2668 <main+0x6a>
    2652:	81 e0       	ldi	r24, 0x01	; 1
			break;
    2654:	5f df       	rcall	.-322    	; 0x2514 <single_authentication>
		case REPAIRSHOP_ROLE :
			single_authentication(REPAIRSHOP_ROLE);
    2656:	08 c0       	rjmp	.+16     	; 0x2668 <main+0x6a>
    2658:	82 e0       	ldi	r24, 0x02	; 2
			break;
    265a:	5c df       	rcall	.-328    	; 0x2514 <single_authentication>
		case POLICEMAN_ROLE :
			single_authentication(POLICEMAN_ROLE);
    265c:	05 c0       	rjmp	.+10     	; 0x2668 <main+0x6a>
    265e:	84 e0       	ldi	r24, 0x04	; 4
			break;
    2660:	59 df       	rcall	.-334    	; 0x2514 <single_authentication>
		case TESTER_ROLE :
			single_authentication(TESTER_ROLE);
    2662:	02 c0       	rjmp	.+4      	; 0x2668 <main+0x6a>
    2664:	88 e0       	ldi	r24, 0x08	; 8
    2666:	56 df       	rcall	.-340    	; 0x2514 <single_authentication>
			break;	
		default : 
			break;
	}
 }
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	28 96       	adiw	r28, 0x08	; 8
    266e:	0f b6       	in	r0, 0x3f	; 63
    2670:	f8 94       	cli
    2672:	de bf       	out	0x3e, r29	; 62
    2674:	0f be       	out	0x3f, r0	; 63
    2676:	cd bf       	out	0x3d, r28	; 61
    2678:	df 91       	pop	r29
    267a:	cf 91       	pop	r28
    267c:	08 95       	ret

0000267e <add_entry>:
	hex_to_bytes(hex, 4, id);
	add_entry(id, permissions);
	return 0;
}

int add_entry(can_id_t id, permissions_t permissions){
    267e:	1f 93       	push	r17
    2680:	cf 93       	push	r28
    2682:	df 93       	push	r29
    2684:	ec 01       	movw	r28, r24
    2686:	16 2f       	mov	r17, r22
	entry_t *new_entry; 
	new_entry = malloc(sizeof(entry_t));
    2688:	85 e0       	ldi	r24, 0x05	; 5
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <malloc>
	new_entry->permissions = permissions;
    2690:	fc 01       	movw	r30, r24
    2692:	12 83       	std	Z+2, r17	; 0x02
	memcpy(new_entry->id, id, sizeof(can_id_t));
    2694:	28 81       	ld	r18, Y
    2696:	39 81       	ldd	r19, Y+1	; 0x01
    2698:	31 83       	std	Z+1, r19	; 0x01
    269a:	20 83       	st	Z, r18
	entry_t *curr = permission_table->head;
    269c:	a0 91 09 05 	lds	r26, 0x0509	; 0x800509 <permission_table>
    26a0:	b0 91 0a 05 	lds	r27, 0x050A	; 0x80050a <permission_table+0x1>
    26a4:	ed 91       	ld	r30, X+
    26a6:	fc 91       	ld	r31, X
    26a8:	11 97       	sbiw	r26, 0x01	; 1
	if(curr != NULL){
    26aa:	30 97       	sbiw	r30, 0x00	; 0
    26ac:	11 f4       	brne	.+4      	; 0x26b2 <add_entry+0x34>
    26ae:	09 c0       	rjmp	.+18     	; 0x26c2 <add_entry+0x44>
		while(curr->successor != NULL){
			curr = curr->successor;
    26b0:	f9 01       	movw	r30, r18
	new_entry = malloc(sizeof(entry_t));
	new_entry->permissions = permissions;
	memcpy(new_entry->id, id, sizeof(can_id_t));
	entry_t *curr = permission_table->head;
	if(curr != NULL){
		while(curr->successor != NULL){
    26b2:	23 81       	ldd	r18, Z+3	; 0x03
    26b4:	34 81       	ldd	r19, Z+4	; 0x04
    26b6:	21 15       	cp	r18, r1
    26b8:	31 05       	cpc	r19, r1
    26ba:	d1 f7       	brne	.-12     	; 0x26b0 <add_entry+0x32>
			curr = curr->successor;
		}
		curr->successor = new_entry;
    26bc:	94 83       	std	Z+4, r25	; 0x04
    26be:	83 83       	std	Z+3, r24	; 0x03
    26c0:	02 c0       	rjmp	.+4      	; 0x26c6 <add_entry+0x48>
	}else{
		permission_table->head = new_entry;
    26c2:	8d 93       	st	X+, r24
    26c4:	9c 93       	st	X, r25
	}
	return 0;
}
    26c6:	80 e0       	ldi	r24, 0x00	; 0
    26c8:	90 e0       	ldi	r25, 0x00	; 0
    26ca:	df 91       	pop	r29
    26cc:	cf 91       	pop	r28
    26ce:	1f 91       	pop	r17
    26d0:	08 95       	ret

000026d2 <add_entry_hex>:
	add_entry_hex("0726", permissions);
	add_entry_hex("07E0", permissions);
	//add_entry_hex("0726", roles);
}

int add_entry_hex(char *hex, permissions_t permissions){
    26d2:	1f 93       	push	r17
    26d4:	cf 93       	push	r28
    26d6:	df 93       	push	r29
    26d8:	00 d0       	rcall	.+0      	; 0x26da <add_entry_hex+0x8>
    26da:	cd b7       	in	r28, 0x3d	; 61
    26dc:	de b7       	in	r29, 0x3e	; 62
    26de:	16 2f       	mov	r17, r22
	can_id_t id;
	hex_to_bytes(hex, 4, id);
    26e0:	ae 01       	movw	r20, r28
    26e2:	4f 5f       	subi	r20, 0xFF	; 255
    26e4:	5f 4f       	sbci	r21, 0xFF	; 255
    26e6:	64 e0       	ldi	r22, 0x04	; 4
    26e8:	0c de       	rcall	.-1000   	; 0x2302 <hex_to_bytes>
	add_entry(id, permissions);
    26ea:	61 2f       	mov	r22, r17
    26ec:	ce 01       	movw	r24, r28
    26ee:	01 96       	adiw	r24, 0x01	; 1
    26f0:	c6 df       	rcall	.-116    	; 0x267e <add_entry>
	return 0;
}
    26f2:	80 e0       	ldi	r24, 0x00	; 0
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	0f 90       	pop	r0
    26f8:	0f 90       	pop	r0
    26fa:	df 91       	pop	r29
    26fc:	cf 91       	pop	r28
    26fe:	1f 91       	pop	r17
    2700:	08 95       	ret

00002702 <init_permissions_table>:
#include <string.h>

permission_table_t *permission_table; 

void init_permissions_table(){
	permission_table = malloc(sizeof(permission_table_t));
    2702:	82 e0       	ldi	r24, 0x02	; 2
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	0e 94 dc 1e 	call	0x3db8	; 0x3db8 <malloc>
    270a:	90 93 0a 05 	sts	0x050A, r25	; 0x80050a <permission_table+0x1>
    270e:	80 93 09 05 	sts	0x0509, r24	; 0x800509 <permission_table>
	permissions_t permissions = 0b00001111;
	add_entry_hex("0726", permissions);
    2712:	6f e0       	ldi	r22, 0x0F	; 15
    2714:	8d ef       	ldi	r24, 0xFD	; 253
    2716:	94 e0       	ldi	r25, 0x04	; 4
    2718:	dc df       	rcall	.-72     	; 0x26d2 <add_entry_hex>
	add_entry_hex("07E0", permissions);
    271a:	6f e0       	ldi	r22, 0x0F	; 15
    271c:	82 e0       	ldi	r24, 0x02	; 2
    271e:	95 e0       	ldi	r25, 0x05	; 5
    2720:	d8 cf       	rjmp	.-80     	; 0x26d2 <add_entry_hex>
    2722:	08 95       	ret

00002724 <entrycmp>:
	}
	return 0;
}

int entrycmp(entry_t *entry, can_id_t msg_id){
	return memcmp(entry->id, msg_id, 2);
    2724:	42 e0       	ldi	r20, 0x02	; 2
    2726:	50 e0       	ldi	r21, 0x00	; 0
    2728:	0c 94 06 20 	jmp	0x400c	; 0x400c <memcmp>
}
    272c:	08 95       	ret

0000272e <find_entry>:

int find_entry(can_id_t msg_id, entry_t **dest){
    272e:	ef 92       	push	r14
    2730:	ff 92       	push	r15
    2732:	0f 93       	push	r16
    2734:	1f 93       	push	r17
    2736:	cf 93       	push	r28
    2738:	df 93       	push	r29
    273a:	8c 01       	movw	r16, r24
    273c:	7b 01       	movw	r14, r22
	entry_t *curr = permission_table->head;
    273e:	e0 91 09 05 	lds	r30, 0x0509	; 0x800509 <permission_table>
    2742:	f0 91 0a 05 	lds	r31, 0x050A	; 0x80050a <permission_table+0x1>
    2746:	c0 81       	ld	r28, Z
    2748:	d1 81       	ldd	r29, Z+1	; 0x01
	uart_puts(curr->id);
    274a:	ce 01       	movw	r24, r28
    274c:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <uart_puts>
	while(curr != NULL){
    2750:	20 97       	sbiw	r28, 0x00	; 0
    2752:	89 f0       	breq	.+34     	; 0x2776 <find_entry+0x48>
		if(entrycmp(curr, msg_id) == 0){
    2754:	b8 01       	movw	r22, r16
    2756:	ce 01       	movw	r24, r28
    2758:	e5 df       	rcall	.-54     	; 0x2724 <entrycmp>
    275a:	00 97       	sbiw	r24, 0x00	; 0
    275c:	21 f4       	brne	.+8      	; 0x2766 <find_entry+0x38>
			*dest = curr;
    275e:	f7 01       	movw	r30, r14
    2760:	d1 83       	std	Z+1, r29	; 0x01
    2762:	c0 83       	st	Z, r28
			return 0;
    2764:	0a c0       	rjmp	.+20     	; 0x277a <find_entry+0x4c>
		}else{
			curr = curr->successor;
    2766:	0b 80       	ldd	r0, Y+3	; 0x03
    2768:	dc 81       	ldd	r29, Y+4	; 0x04
    276a:	c0 2d       	mov	r28, r0
}

int find_entry(can_id_t msg_id, entry_t **dest){
	entry_t *curr = permission_table->head;
	uart_puts(curr->id);
	while(curr != NULL){
    276c:	20 97       	sbiw	r28, 0x00	; 0
    276e:	91 f7       	brne	.-28     	; 0x2754 <find_entry+0x26>
			return 0;
		}else{
			curr = curr->successor;
		}
	}
	return 1;
    2770:	81 e0       	ldi	r24, 0x01	; 1
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	02 c0       	rjmp	.+4      	; 0x277a <find_entry+0x4c>
    2776:	81 e0       	ldi	r24, 0x01	; 1
    2778:	90 e0       	ldi	r25, 0x00	; 0
}
    277a:	df 91       	pop	r29
    277c:	cf 91       	pop	r28
    277e:	1f 91       	pop	r17
    2780:	0f 91       	pop	r16
    2782:	ff 90       	pop	r15
    2784:	ef 90       	pop	r14
    2786:	08 95       	ret

00002788 <check_permission>:

int check_permission(can_id_t msg_id, permissions_t role){
    2788:	1f 93       	push	r17
    278a:	cf 93       	push	r28
    278c:	df 93       	push	r29
    278e:	1f 92       	push	r1
    2790:	cd b7       	in	r28, 0x3d	; 61
    2792:	de b7       	in	r29, 0x3e	; 62
    2794:	16 2f       	mov	r17, r22
	entry_t **adress;
	if(find_entry(msg_id, adress)) return 1;
    2796:	60 e0       	ldi	r22, 0x00	; 0
    2798:	70 e0       	ldi	r23, 0x00	; 0
    279a:	c9 df       	rcall	.-110    	; 0x272e <find_entry>
    279c:	00 97       	sbiw	r24, 0x00	; 0
    279e:	b1 f4       	brne	.+44     	; 0x27cc <check_permission+0x44>
	entry_t *entry = *adress;
	volatile uint8_t test = entry->permissions;
    27a0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__TEXT_REGION_LENGTH__+0x7e0000>
    27a4:	f0 91 01 00 	lds	r31, 0x0001	; 0x800001 <__TEXT_REGION_LENGTH__+0x7e0001>
    27a8:	22 81       	ldd	r18, Z+2	; 0x02
    27aa:	29 83       	std	Y+1, r18	; 0x01
	if((entry->permissions && role) == role) return 0; 
    27ac:	22 23       	and	r18, r18
    27ae:	29 f0       	breq	.+10     	; 0x27ba <check_permission+0x32>
    27b0:	11 23       	and	r17, r17
    27b2:	71 f0       	breq	.+28     	; 0x27d0 <check_permission+0x48>
    27b4:	21 e0       	ldi	r18, 0x01	; 1
    27b6:	30 e0       	ldi	r19, 0x00	; 0
    27b8:	01 c0       	rjmp	.+2      	; 0x27bc <check_permission+0x34>
    27ba:	9c 01       	movw	r18, r24
    27bc:	61 2f       	mov	r22, r17
    27be:	70 e0       	ldi	r23, 0x00	; 0
    27c0:	26 17       	cp	r18, r22
    27c2:	37 07       	cpc	r19, r23
    27c4:	29 f0       	breq	.+10     	; 0x27d0 <check_permission+0x48>
	return 2;
    27c6:	82 e0       	ldi	r24, 0x02	; 2
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	02 c0       	rjmp	.+4      	; 0x27d0 <check_permission+0x48>
	return 1;
}

int check_permission(can_id_t msg_id, permissions_t role){
	entry_t **adress;
	if(find_entry(msg_id, adress)) return 1;
    27cc:	81 e0       	ldi	r24, 0x01	; 1
    27ce:	90 e0       	ldi	r25, 0x00	; 0
	entry_t *entry = *adress;
	volatile uint8_t test = entry->permissions;
	if((entry->permissions && role) == role) return 0; 
	return 2;
    27d0:	0f 90       	pop	r0
    27d2:	df 91       	pop	r29
    27d4:	cf 91       	pop	r28
    27d6:	1f 91       	pop	r17
    27d8:	08 95       	ret

000027da <sha2_large_common_nextBlock>:
#define SIGMA_0(x) (rotr64((x), 28) ^ rotl64((x), 30) ^ rotl64((x), 25))
#define SIGMA_1(x) (rotr64((x), 14) ^ rotr64((x), 18) ^ rotl64((x), 23))
#define SIGMA_a(x) (rotr64((x),  1) ^ rotr64((x),  8) ^ ((x)>>7))
#define SIGMA_b(x) (rotr64((x), 19) ^ rotl64((x),  3) ^ ((x)>>6))

void sha2_large_common_nextBlock(sha2_large_common_ctx_t *ctx, const void *block){
    27da:	2f 92       	push	r2
    27dc:	3f 92       	push	r3
    27de:	4f 92       	push	r4
    27e0:	5f 92       	push	r5
    27e2:	6f 92       	push	r6
    27e4:	7f 92       	push	r7
    27e6:	8f 92       	push	r8
    27e8:	9f 92       	push	r9
    27ea:	af 92       	push	r10
    27ec:	bf 92       	push	r11
    27ee:	cf 92       	push	r12
    27f0:	df 92       	push	r13
    27f2:	ef 92       	push	r14
    27f4:	ff 92       	push	r15
    27f6:	0f 93       	push	r16
    27f8:	1f 93       	push	r17
    27fa:	cf 93       	push	r28
    27fc:	df 93       	push	r29
    27fe:	cd b7       	in	r28, 0x3d	; 61
    2800:	de b7       	in	r29, 0x3e	; 62
    2802:	ca 5e       	subi	r28, 0xEA	; 234
    2804:	d1 09       	sbc	r29, r1
    2806:	0f b6       	in	r0, 0x3f	; 63
    2808:	f8 94       	cli
    280a:	de bf       	out	0x3e, r29	; 62
    280c:	0f be       	out	0x3f, r0	; 63
    280e:	cd bf       	out	0x3d, r28	; 61
    2810:	c7 51       	subi	r28, 0x17	; 23
    2812:	df 4f       	sbci	r29, 0xFF	; 255
    2814:	99 83       	std	Y+1, r25	; 0x01
    2816:	88 83       	st	Y, r24
    2818:	c9 5e       	subi	r28, 0xE9	; 233
    281a:	d0 40       	sbci	r29, 0x00	; 0
    281c:	ce 01       	movw	r24, r28
    281e:	01 96       	adiw	r24, 0x01	; 1
    2820:	c5 52       	subi	r28, 0x25	; 37
    2822:	df 4f       	sbci	r29, 0xFF	; 255
    2824:	99 83       	std	Y+1, r25	; 0x01
    2826:	88 83       	st	Y, r24
    2828:	cb 5d       	subi	r28, 0xDB	; 219
    282a:	d0 40       	sbci	r29, 0x00	; 0
    282c:	fe 01       	movw	r30, r28
    282e:	ef 57       	subi	r30, 0x7F	; 127
    2830:	ff 4f       	sbci	r31, 0xFF	; 255
    2832:	c7 53       	subi	r28, 0x37	; 55
    2834:	df 4f       	sbci	r29, 0xFF	; 255
    2836:	f9 83       	std	Y+1, r31	; 0x01
    2838:	e8 83       	st	Y, r30
    283a:	c9 5c       	subi	r28, 0xC9	; 201
    283c:	d0 40       	sbci	r29, 0x00	; 0
    283e:	2c 01       	movw	r4, r24
};


static const
uint64_t change_endian64(uint64_t x){
	uint64_t r=0;
    2840:	c9 51       	subi	r28, 0x19	; 25
    2842:	df 4f       	sbci	r29, 0xFF	; 255
    2844:	79 83       	std	Y+1, r23	; 0x01
    2846:	68 83       	st	Y, r22
    2848:	c7 5e       	subi	r28, 0xE7	; 231
    284a:	d0 40       	sbci	r29, 0x00	; 0
	uint64_t t1, t2;
	const uint64_t *k=sha2_large_common_const;
	uint8_t i;
	i=16;
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
    284c:	c9 51       	subi	r28, 0x19	; 25
    284e:	df 4f       	sbci	r29, 0xFF	; 255
    2850:	a8 81       	ld	r26, Y
    2852:	b9 81       	ldd	r27, Y+1	; 0x01
    2854:	c7 5e       	subi	r28, 0xE7	; 231
    2856:	d0 40       	sbci	r29, 0x00	; 0
    2858:	bc 91       	ld	r27, X
    285a:	c5 53       	subi	r28, 0x35	; 53
    285c:	df 4f       	sbci	r29, 0xFF	; 255
    285e:	b8 83       	st	Y, r27
    2860:	cb 5c       	subi	r28, 0xCB	; 203
    2862:	d0 40       	sbci	r29, 0x00	; 0
    2864:	c9 51       	subi	r28, 0x19	; 25
    2866:	df 4f       	sbci	r29, 0xFF	; 255
    2868:	e8 81       	ld	r30, Y
    286a:	f9 81       	ldd	r31, Y+1	; 0x01
    286c:	c7 5e       	subi	r28, 0xE7	; 231
    286e:	d0 40       	sbci	r29, 0x00	; 0
    2870:	71 80       	ldd	r7, Z+1	; 0x01
    2872:	82 80       	ldd	r8, Z+2	; 0x02
    2874:	93 80       	ldd	r9, Z+3	; 0x03
    2876:	a4 80       	ldd	r10, Z+4	; 0x04
    2878:	b5 80       	ldd	r11, Z+5	; 0x05
    287a:	a6 81       	ldd	r26, Z+6	; 0x06
    287c:	b7 81       	ldd	r27, Z+7	; 0x07
    287e:	38 96       	adiw	r30, 0x08	; 8
    2880:	c9 51       	subi	r28, 0x19	; 25
    2882:	df 4f       	sbci	r29, 0xFF	; 255
    2884:	f9 83       	std	Y+1, r31	; 0x01
    2886:	e8 83       	st	Y, r30
    2888:	c7 5e       	subi	r28, 0xE7	; 231
    288a:	d0 40       	sbci	r29, 0x00	; 0
    288c:	68 94       	set
    288e:	66 24       	eor	r6, r6
    2890:	63 f8       	bld	r6, 3
};


static const
uint64_t change_endian64(uint64_t x){
	uint64_t r=0;
    2892:	c1 2c       	mov	r12, r1
    2894:	d1 2c       	mov	r13, r1
    2896:	e1 2c       	mov	r14, r1
    2898:	f1 2c       	mov	r15, r1
    289a:	10 e0       	ldi	r17, 0x00	; 0
    289c:	f0 e0       	ldi	r31, 0x00	; 0
    289e:	21 2c       	mov	r2, r1
    28a0:	31 2c       	mov	r3, r1
	uint8_t i=8;
	do{
		r <<= 8;
    28a2:	2c 2d       	mov	r18, r12
    28a4:	3d 2d       	mov	r19, r13
    28a6:	4e 2d       	mov	r20, r14
    28a8:	5f 2d       	mov	r21, r15
    28aa:	61 2f       	mov	r22, r17
    28ac:	7f 2f       	mov	r23, r31
    28ae:	82 2d       	mov	r24, r2
    28b0:	93 2d       	mov	r25, r3
    28b2:	08 e0       	ldi	r16, 0x08	; 8
    28b4:	0e 94 81 1e 	call	0x3d02	; 0x3d02 <__ashldi3>
		r |= 0xff&x;
    28b8:	c5 53       	subi	r28, 0x35	; 53
    28ba:	df 4f       	sbci	r29, 0xFF	; 255
    28bc:	c8 80       	ld	r12, Y
    28be:	cb 5c       	subi	r28, 0xCB	; 203
    28c0:	d0 40       	sbci	r29, 0x00	; 0
    28c2:	c2 2a       	or	r12, r18
    28c4:	d3 2e       	mov	r13, r19
    28c6:	e4 2e       	mov	r14, r20
    28c8:	f5 2e       	mov	r15, r21
    28ca:	16 2f       	mov	r17, r22
    28cc:	f7 2f       	mov	r31, r23
    28ce:	28 2e       	mov	r2, r24
    28d0:	39 2e       	mov	r3, r25
		x >>=8;
    28d2:	c5 53       	subi	r28, 0x35	; 53
    28d4:	df 4f       	sbci	r29, 0xFF	; 255
    28d6:	28 81       	ld	r18, Y
    28d8:	cb 5c       	subi	r28, 0xCB	; 203
    28da:	d0 40       	sbci	r29, 0x00	; 0
    28dc:	37 2d       	mov	r19, r7
    28de:	48 2d       	mov	r20, r8
    28e0:	59 2d       	mov	r21, r9
    28e2:	6a 2d       	mov	r22, r10
    28e4:	7b 2d       	mov	r23, r11
    28e6:	8a 2f       	mov	r24, r26
    28e8:	9b 2f       	mov	r25, r27
    28ea:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <__lshrdi3>
    28ee:	c5 53       	subi	r28, 0x35	; 53
    28f0:	df 4f       	sbci	r29, 0xFF	; 255
    28f2:	28 83       	st	Y, r18
    28f4:	cb 5c       	subi	r28, 0xCB	; 203
    28f6:	d0 40       	sbci	r29, 0x00	; 0
    28f8:	73 2e       	mov	r7, r19
    28fa:	84 2e       	mov	r8, r20
    28fc:	95 2e       	mov	r9, r21
    28fe:	a6 2e       	mov	r10, r22
    2900:	b7 2e       	mov	r11, r23
    2902:	a8 2f       	mov	r26, r24
    2904:	b9 2f       	mov	r27, r25
    2906:	6a 94       	dec	r6
	}while(--i);
    2908:	61 10       	cpse	r6, r1
    290a:	cb cf       	rjmp	.-106    	; 0x28a2 <sha2_large_common_nextBlock+0xc8>
	uint64_t t1, t2;
	const uint64_t *k=sha2_large_common_const;
	uint8_t i;
	i=16;
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
    290c:	d2 01       	movw	r26, r4
    290e:	cc 92       	st	X, r12
    2910:	11 96       	adiw	r26, 0x01	; 1
    2912:	dc 92       	st	X, r13
    2914:	11 97       	sbiw	r26, 0x01	; 1
    2916:	12 96       	adiw	r26, 0x02	; 2
    2918:	ec 92       	st	X, r14
    291a:	12 97       	sbiw	r26, 0x02	; 2
    291c:	13 96       	adiw	r26, 0x03	; 3
    291e:	fc 92       	st	X, r15
    2920:	13 97       	sbiw	r26, 0x03	; 3
    2922:	14 96       	adiw	r26, 0x04	; 4
    2924:	1c 93       	st	X, r17
    2926:	14 97       	sbiw	r26, 0x04	; 4
    2928:	15 96       	adiw	r26, 0x05	; 5
    292a:	fc 93       	st	X, r31
    292c:	15 97       	sbiw	r26, 0x05	; 5
    292e:	16 96       	adiw	r26, 0x06	; 6
    2930:	2c 92       	st	X, r2
    2932:	16 97       	sbiw	r26, 0x06	; 6
    2934:	17 96       	adiw	r26, 0x07	; 7
    2936:	3c 92       	st	X, r3
    2938:	b8 e0       	ldi	r27, 0x08	; 8
    293a:	4b 0e       	add	r4, r27
    293c:	51 1c       	adc	r5, r1
		block = (uint8_t*)block + 8;
	}while(--i);
    293e:	c7 53       	subi	r28, 0x37	; 55
    2940:	df 4f       	sbci	r29, 0xFF	; 255
    2942:	e8 81       	ld	r30, Y
    2944:	f9 81       	ldd	r31, Y+1	; 0x01
    2946:	c9 5c       	subi	r28, 0xC9	; 201
    2948:	d0 40       	sbci	r29, 0x00	; 0
    294a:	e4 15       	cp	r30, r4
    294c:	f5 05       	cpc	r31, r5
    294e:	09 f0       	breq	.+2      	; 0x2952 <sha2_large_common_nextBlock+0x178>
    2950:	7d cf       	rjmp	.-262    	; 0x284c <sha2_large_common_nextBlock+0x72>
	memcpy(a, ctx->h, 8*8);
    2952:	80 e4       	ldi	r24, 0x40	; 64
    2954:	c7 51       	subi	r28, 0x17	; 23
    2956:	df 4f       	sbci	r29, 0xFF	; 255
    2958:	e8 81       	ld	r30, Y
    295a:	f9 81       	ldd	r31, Y+1	; 0x01
    295c:	c9 5e       	subi	r28, 0xE9	; 233
    295e:	d0 40       	sbci	r29, 0x00	; 0
    2960:	de 01       	movw	r26, r28
    2962:	af 57       	subi	r26, 0x7F	; 127
    2964:	bf 4f       	sbci	r27, 0xFF	; 255
    2966:	01 90       	ld	r0, Z+
    2968:	0d 92       	st	X+, r0
    296a:	8a 95       	dec	r24
    296c:	e1 f7       	brne	.-8      	; 0x2966 <sha2_large_common_nextBlock+0x18c>
    296e:	84 e9       	ldi	r24, 0x94	; 148
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	cf 52       	subi	r28, 0x2F	; 47
    2974:	df 4f       	sbci	r29, 0xFF	; 255
    2976:	99 83       	std	Y+1, r25	; 0x01
    2978:	88 83       	st	Y, r24
    297a:	c1 5d       	subi	r28, 0xD1	; 209
    297c:	d0 40       	sbci	r29, 0x00	; 0
	for(i=0; i<80; ++i){
    297e:	c0 53       	subi	r28, 0x30	; 48
    2980:	df 4f       	sbci	r29, 0xFF	; 255
    2982:	18 82       	st	Y, r1
    2984:	c0 5d       	subi	r28, 0xD0	; 208
    2986:	d0 40       	sbci	r29, 0x00	; 0
			memmove(&(w[0]), &(w[1]), 15*8);
			w[15] = wx;
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
		t2 = SIGMA_0(a[0]) + MAJ(a[0], a[1], a[2]);
		memmove(&(a[1]), &(a[0]), 7*8);
    2988:	a1 e8       	ldi	r26, 0x81	; 129
    298a:	b0 e0       	ldi	r27, 0x00	; 0
    298c:	ac 0f       	add	r26, r28
    298e:	bd 1f       	adc	r27, r29
    2990:	18 96       	adiw	r26, 0x08	; 8
    2992:	c9 51       	subi	r28, 0x19	; 25
    2994:	df 4f       	sbci	r29, 0xFF	; 255
    2996:	b9 83       	std	Y+1, r27	; 0x01
    2998:	a8 83       	st	Y, r26
    299a:	c7 5e       	subi	r28, 0xE7	; 231
    299c:	d0 40       	sbci	r29, 0x00	; 0
		w[16-i] = change_endian64(*((const uint64_t*)block));
		block = (uint8_t*)block + 8;
	}while(--i);
	memcpy(a, ctx->h, 8*8);
	for(i=0; i<80; ++i){
		if(i<16){
    299e:	c0 53       	subi	r28, 0x30	; 48
    29a0:	df 4f       	sbci	r29, 0xFF	; 255
    29a2:	b8 81       	ld	r27, Y
    29a4:	c0 5d       	subi	r28, 0xD0	; 208
    29a6:	d0 40       	sbci	r29, 0x00	; 0
    29a8:	b0 31       	cpi	r27, 0x10	; 16
    29aa:	08 f0       	brcs	.+2      	; 0x29ae <sha2_large_common_nextBlock+0x1d4>
    29ac:	60 c0       	rjmp	.+192    	; 0x2a6e <sha2_large_common_nextBlock+0x294>
			wx=w[i];
    29ae:	c5 52       	subi	r28, 0x25	; 37
    29b0:	df 4f       	sbci	r29, 0xFF	; 255
    29b2:	e8 81       	ld	r30, Y
    29b4:	f9 81       	ldd	r31, Y+1	; 0x01
    29b6:	cb 5d       	subi	r28, 0xDB	; 219
    29b8:	d0 40       	sbci	r29, 0x00	; 0
    29ba:	f0 81       	ld	r31, Z
    29bc:	c5 53       	subi	r28, 0x35	; 53
    29be:	df 4f       	sbci	r29, 0xFF	; 255
    29c0:	f8 83       	st	Y, r31
    29c2:	cb 5c       	subi	r28, 0xCB	; 203
    29c4:	d0 40       	sbci	r29, 0x00	; 0
    29c6:	c5 52       	subi	r28, 0x25	; 37
    29c8:	df 4f       	sbci	r29, 0xFF	; 255
    29ca:	a8 81       	ld	r26, Y
    29cc:	b9 81       	ldd	r27, Y+1	; 0x01
    29ce:	cb 5d       	subi	r28, 0xDB	; 219
    29d0:	d0 40       	sbci	r29, 0x00	; 0
    29d2:	11 96       	adiw	r26, 0x01	; 1
    29d4:	bc 91       	ld	r27, X
    29d6:	c4 53       	subi	r28, 0x34	; 52
    29d8:	df 4f       	sbci	r29, 0xFF	; 255
    29da:	b8 83       	st	Y, r27
    29dc:	cc 5c       	subi	r28, 0xCC	; 204
    29de:	d0 40       	sbci	r29, 0x00	; 0
    29e0:	c5 52       	subi	r28, 0x25	; 37
    29e2:	df 4f       	sbci	r29, 0xFF	; 255
    29e4:	e8 81       	ld	r30, Y
    29e6:	f9 81       	ldd	r31, Y+1	; 0x01
    29e8:	cb 5d       	subi	r28, 0xDB	; 219
    29ea:	d0 40       	sbci	r29, 0x00	; 0
    29ec:	f2 81       	ldd	r31, Z+2	; 0x02
    29ee:	c3 53       	subi	r28, 0x33	; 51
    29f0:	df 4f       	sbci	r29, 0xFF	; 255
    29f2:	f8 83       	st	Y, r31
    29f4:	cd 5c       	subi	r28, 0xCD	; 205
    29f6:	d0 40       	sbci	r29, 0x00	; 0
    29f8:	c5 52       	subi	r28, 0x25	; 37
    29fa:	df 4f       	sbci	r29, 0xFF	; 255
    29fc:	a8 81       	ld	r26, Y
    29fe:	b9 81       	ldd	r27, Y+1	; 0x01
    2a00:	cb 5d       	subi	r28, 0xDB	; 219
    2a02:	d0 40       	sbci	r29, 0x00	; 0
    2a04:	13 96       	adiw	r26, 0x03	; 3
    2a06:	bc 91       	ld	r27, X
    2a08:	c2 53       	subi	r28, 0x32	; 50
    2a0a:	df 4f       	sbci	r29, 0xFF	; 255
    2a0c:	b8 83       	st	Y, r27
    2a0e:	ce 5c       	subi	r28, 0xCE	; 206
    2a10:	d0 40       	sbci	r29, 0x00	; 0
    2a12:	c5 52       	subi	r28, 0x25	; 37
    2a14:	df 4f       	sbci	r29, 0xFF	; 255
    2a16:	e8 81       	ld	r30, Y
    2a18:	f9 81       	ldd	r31, Y+1	; 0x01
    2a1a:	cb 5d       	subi	r28, 0xDB	; 219
    2a1c:	d0 40       	sbci	r29, 0x00	; 0
    2a1e:	f4 81       	ldd	r31, Z+4	; 0x04
    2a20:	c1 53       	subi	r28, 0x31	; 49
    2a22:	df 4f       	sbci	r29, 0xFF	; 255
    2a24:	f8 83       	st	Y, r31
    2a26:	cf 5c       	subi	r28, 0xCF	; 207
    2a28:	d0 40       	sbci	r29, 0x00	; 0
    2a2a:	c5 52       	subi	r28, 0x25	; 37
    2a2c:	df 4f       	sbci	r29, 0xFF	; 255
    2a2e:	a8 81       	ld	r26, Y
    2a30:	b9 81       	ldd	r27, Y+1	; 0x01
    2a32:	cb 5d       	subi	r28, 0xDB	; 219
    2a34:	d0 40       	sbci	r29, 0x00	; 0
    2a36:	15 96       	adiw	r26, 0x05	; 5
    2a38:	bc 91       	ld	r27, X
    2a3a:	cd 52       	subi	r28, 0x2D	; 45
    2a3c:	df 4f       	sbci	r29, 0xFF	; 255
    2a3e:	b8 83       	st	Y, r27
    2a40:	c3 5d       	subi	r28, 0xD3	; 211
    2a42:	d0 40       	sbci	r29, 0x00	; 0
    2a44:	c5 52       	subi	r28, 0x25	; 37
    2a46:	df 4f       	sbci	r29, 0xFF	; 255
    2a48:	e8 81       	ld	r30, Y
    2a4a:	f9 81       	ldd	r31, Y+1	; 0x01
    2a4c:	cb 5d       	subi	r28, 0xDB	; 219
    2a4e:	d0 40       	sbci	r29, 0x00	; 0
    2a50:	f6 81       	ldd	r31, Z+6	; 0x06
    2a52:	cc 52       	subi	r28, 0x2C	; 44
    2a54:	df 4f       	sbci	r29, 0xFF	; 255
    2a56:	f8 83       	st	Y, r31
    2a58:	c4 5d       	subi	r28, 0xD4	; 212
    2a5a:	d0 40       	sbci	r29, 0x00	; 0
    2a5c:	c5 52       	subi	r28, 0x25	; 37
    2a5e:	df 4f       	sbci	r29, 0xFF	; 255
    2a60:	a8 81       	ld	r26, Y
    2a62:	b9 81       	ldd	r27, Y+1	; 0x01
    2a64:	cb 5d       	subi	r28, 0xDB	; 219
    2a66:	d0 40       	sbci	r29, 0x00	; 0
    2a68:	17 96       	adiw	r26, 0x07	; 7
    2a6a:	4c 90       	ld	r4, X
    2a6c:	db c1       	rjmp	.+950    	; 0x2e24 <sha2_large_common_nextBlock+0x64a>
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
    2a6e:	e2 96       	adiw	r28, 0x32	; 50
    2a70:	5f ac       	ldd	r5, Y+63	; 0x3f
    2a72:	e2 97       	sbiw	r28, 0x32	; 50
    2a74:	e3 96       	adiw	r28, 0x33	; 51
    2a76:	6f ac       	ldd	r6, Y+63	; 0x3f
    2a78:	e3 97       	sbiw	r28, 0x33	; 51
    2a7a:	e4 96       	adiw	r28, 0x34	; 52
    2a7c:	7f ac       	ldd	r7, Y+63	; 0x3f
    2a7e:	e4 97       	sbiw	r28, 0x34	; 52
    2a80:	e5 96       	adiw	r28, 0x35	; 53
    2a82:	8f ac       	ldd	r8, Y+63	; 0x3f
    2a84:	e5 97       	sbiw	r28, 0x35	; 53
    2a86:	e6 96       	adiw	r28, 0x36	; 54
    2a88:	9f ac       	ldd	r9, Y+63	; 0x3f
    2a8a:	e6 97       	sbiw	r28, 0x36	; 54
    2a8c:	e7 96       	adiw	r28, 0x37	; 55
    2a8e:	bf ad       	ldd	r27, Y+63	; 0x3f
    2a90:	e7 97       	sbiw	r28, 0x37	; 55
    2a92:	e8 96       	adiw	r28, 0x38	; 56
    2a94:	af ad       	ldd	r26, Y+63	; 0x3f
    2a96:	e8 97       	sbiw	r28, 0x38	; 56
    2a98:	e9 96       	adiw	r28, 0x39	; 57
    2a9a:	ff ad       	ldd	r31, Y+63	; 0x3f
    2a9c:	e9 97       	sbiw	r28, 0x39	; 57
    2a9e:	e9 85       	ldd	r30, Y+9	; 0x09
    2aa0:	c5 53       	subi	r28, 0x35	; 53
    2aa2:	df 4f       	sbci	r29, 0xFF	; 255
    2aa4:	e8 83       	st	Y, r30
    2aa6:	cb 5c       	subi	r28, 0xCB	; 203
    2aa8:	d0 40       	sbci	r29, 0x00	; 0
    2aaa:	ea 85       	ldd	r30, Y+10	; 0x0a
    2aac:	c4 53       	subi	r28, 0x34	; 52
    2aae:	df 4f       	sbci	r29, 0xFF	; 255
    2ab0:	e8 83       	st	Y, r30
    2ab2:	cc 5c       	subi	r28, 0xCC	; 204
    2ab4:	d0 40       	sbci	r29, 0x00	; 0
    2ab6:	eb 85       	ldd	r30, Y+11	; 0x0b
    2ab8:	c3 53       	subi	r28, 0x33	; 51
    2aba:	df 4f       	sbci	r29, 0xFF	; 255
    2abc:	e8 83       	st	Y, r30
    2abe:	cd 5c       	subi	r28, 0xCD	; 205
    2ac0:	d0 40       	sbci	r29, 0x00	; 0
    2ac2:	ec 85       	ldd	r30, Y+12	; 0x0c
    2ac4:	c2 53       	subi	r28, 0x32	; 50
    2ac6:	df 4f       	sbci	r29, 0xFF	; 255
    2ac8:	e8 83       	st	Y, r30
    2aca:	ce 5c       	subi	r28, 0xCE	; 206
    2acc:	d0 40       	sbci	r29, 0x00	; 0
    2ace:	ed 85       	ldd	r30, Y+13	; 0x0d
    2ad0:	c1 53       	subi	r28, 0x31	; 49
    2ad2:	df 4f       	sbci	r29, 0xFF	; 255
    2ad4:	e8 83       	st	Y, r30
    2ad6:	cf 5c       	subi	r28, 0xCF	; 207
    2ad8:	d0 40       	sbci	r29, 0x00	; 0
    2ada:	2e 84       	ldd	r2, Y+14	; 0x0e
    2adc:	3f 84       	ldd	r3, Y+15	; 0x0f
    2ade:	48 88       	ldd	r4, Y+16	; 0x10
    2ae0:	2a 96       	adiw	r28, 0x0a	; 10
    2ae2:	2f ad       	ldd	r18, Y+63	; 0x3f
    2ae4:	2a 97       	sbiw	r28, 0x0a	; 10
    2ae6:	2b 96       	adiw	r28, 0x0b	; 11
    2ae8:	3f ad       	ldd	r19, Y+63	; 0x3f
    2aea:	2b 97       	sbiw	r28, 0x0b	; 11
    2aec:	2c 96       	adiw	r28, 0x0c	; 12
    2aee:	4f ad       	ldd	r20, Y+63	; 0x3f
    2af0:	2c 97       	sbiw	r28, 0x0c	; 12
    2af2:	2d 96       	adiw	r28, 0x0d	; 13
    2af4:	5f ad       	ldd	r21, Y+63	; 0x3f
    2af6:	2d 97       	sbiw	r28, 0x0d	; 13
    2af8:	2e 96       	adiw	r28, 0x0e	; 14
    2afa:	6f ad       	ldd	r22, Y+63	; 0x3f
    2afc:	2e 97       	sbiw	r28, 0x0e	; 14
    2afe:	2f 96       	adiw	r28, 0x0f	; 15
    2b00:	7f ad       	ldd	r23, Y+63	; 0x3f
    2b02:	2f 97       	sbiw	r28, 0x0f	; 15
    2b04:	60 96       	adiw	r28, 0x10	; 16
    2b06:	8f ad       	ldd	r24, Y+63	; 0x3f
    2b08:	60 97       	sbiw	r28, 0x10	; 16
    2b0a:	61 96       	adiw	r28, 0x11	; 17
    2b0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2b0e:	61 97       	sbiw	r28, 0x11	; 17
    2b10:	a9 80       	ldd	r10, Y+1	; 0x01
    2b12:	ba 80       	ldd	r11, Y+2	; 0x02
    2b14:	cb 80       	ldd	r12, Y+3	; 0x03
    2b16:	dc 80       	ldd	r13, Y+4	; 0x04
    2b18:	ed 80       	ldd	r14, Y+5	; 0x05
    2b1a:	fe 80       	ldd	r15, Y+6	; 0x06
    2b1c:	0f 81       	ldd	r16, Y+7	; 0x07
    2b1e:	18 85       	ldd	r17, Y+8	; 0x08
    2b20:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <__adddi3>
    2b24:	cd 52       	subi	r28, 0x2D	; 45
    2b26:	df 4f       	sbci	r29, 0xFF	; 255
    2b28:	28 83       	st	Y, r18
    2b2a:	c3 5d       	subi	r28, 0xD3	; 211
    2b2c:	d0 40       	sbci	r29, 0x00	; 0
    2b2e:	cc 52       	subi	r28, 0x2C	; 44
    2b30:	df 4f       	sbci	r29, 0xFF	; 255
    2b32:	38 83       	st	Y, r19
    2b34:	c4 5d       	subi	r28, 0xD4	; 212
    2b36:	d0 40       	sbci	r29, 0x00	; 0
    2b38:	cb 52       	subi	r28, 0x2B	; 43
    2b3a:	df 4f       	sbci	r29, 0xFF	; 255
    2b3c:	48 83       	st	Y, r20
    2b3e:	c5 5d       	subi	r28, 0xD5	; 213
    2b40:	d0 40       	sbci	r29, 0x00	; 0
    2b42:	ca 52       	subi	r28, 0x2A	; 42
    2b44:	df 4f       	sbci	r29, 0xFF	; 255
    2b46:	58 83       	st	Y, r21
    2b48:	c6 5d       	subi	r28, 0xD6	; 214
    2b4a:	d0 40       	sbci	r29, 0x00	; 0
    2b4c:	c9 52       	subi	r28, 0x29	; 41
    2b4e:	df 4f       	sbci	r29, 0xFF	; 255
    2b50:	68 83       	st	Y, r22
    2b52:	c7 5d       	subi	r28, 0xD7	; 215
    2b54:	d0 40       	sbci	r29, 0x00	; 0
    2b56:	c8 52       	subi	r28, 0x28	; 40
    2b58:	df 4f       	sbci	r29, 0xFF	; 255
    2b5a:	78 83       	st	Y, r23
    2b5c:	c8 5d       	subi	r28, 0xD8	; 216
    2b5e:	d0 40       	sbci	r29, 0x00	; 0
    2b60:	c7 52       	subi	r28, 0x27	; 39
    2b62:	df 4f       	sbci	r29, 0xFF	; 255
    2b64:	88 83       	st	Y, r24
    2b66:	c9 5d       	subi	r28, 0xD9	; 217
    2b68:	d0 40       	sbci	r29, 0x00	; 0
    2b6a:	c6 52       	subi	r28, 0x26	; 38
    2b6c:	df 4f       	sbci	r29, 0xFF	; 255
    2b6e:	98 83       	st	Y, r25
    2b70:	ca 5d       	subi	r28, 0xDA	; 218
    2b72:	d0 40       	sbci	r29, 0x00	; 0
    2b74:	25 2d       	mov	r18, r5
    2b76:	36 2d       	mov	r19, r6
    2b78:	47 2d       	mov	r20, r7
    2b7a:	58 2d       	mov	r21, r8
    2b7c:	69 2d       	mov	r22, r9
    2b7e:	7b 2f       	mov	r23, r27
    2b80:	8a 2f       	mov	r24, r26
    2b82:	9f 2f       	mov	r25, r31
    2b84:	03 e0       	ldi	r16, 0x03	; 3
    2b86:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <__rotldi3>
    2b8a:	a2 2e       	mov	r10, r18
    2b8c:	b3 2e       	mov	r11, r19
    2b8e:	c4 2e       	mov	r12, r20
    2b90:	d5 2e       	mov	r13, r21
    2b92:	e6 2e       	mov	r14, r22
    2b94:	f7 2e       	mov	r15, r23
    2b96:	e8 2f       	mov	r30, r24
    2b98:	19 2f       	mov	r17, r25
    2b9a:	25 2d       	mov	r18, r5
    2b9c:	36 2d       	mov	r19, r6
    2b9e:	47 2d       	mov	r20, r7
    2ba0:	58 2d       	mov	r21, r8
    2ba2:	69 2d       	mov	r22, r9
    2ba4:	7b 2f       	mov	r23, r27
    2ba6:	8a 2f       	mov	r24, r26
    2ba8:	9f 2f       	mov	r25, r31
    2baa:	0d e2       	ldi	r16, 0x2D	; 45
    2bac:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <__rotldi3>
    2bb0:	a2 26       	eor	r10, r18
    2bb2:	b3 26       	eor	r11, r19
    2bb4:	c4 26       	eor	r12, r20
    2bb6:	d5 26       	eor	r13, r21
    2bb8:	e6 26       	eor	r14, r22
    2bba:	f7 26       	eor	r15, r23
    2bbc:	e8 27       	eor	r30, r24
    2bbe:	19 27       	eor	r17, r25
    2bc0:	25 2d       	mov	r18, r5
    2bc2:	36 2d       	mov	r19, r6
    2bc4:	47 2d       	mov	r20, r7
    2bc6:	58 2d       	mov	r21, r8
    2bc8:	69 2d       	mov	r22, r9
    2bca:	7b 2f       	mov	r23, r27
    2bcc:	8a 2f       	mov	r24, r26
    2bce:	9f 2f       	mov	r25, r31
    2bd0:	06 e0       	ldi	r16, 0x06	; 6
    2bd2:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <__lshrdi3>
    2bd6:	a2 26       	eor	r10, r18
    2bd8:	b3 26       	eor	r11, r19
    2bda:	c4 26       	eor	r12, r20
    2bdc:	d5 26       	eor	r13, r21
    2bde:	e6 26       	eor	r14, r22
    2be0:	f7 26       	eor	r15, r23
    2be2:	0e 2f       	mov	r16, r30
    2be4:	08 27       	eor	r16, r24
    2be6:	19 27       	eor	r17, r25
    2be8:	cd 52       	subi	r28, 0x2D	; 45
    2bea:	df 4f       	sbci	r29, 0xFF	; 255
    2bec:	28 81       	ld	r18, Y
    2bee:	c3 5d       	subi	r28, 0xD3	; 211
    2bf0:	d0 40       	sbci	r29, 0x00	; 0
    2bf2:	cc 52       	subi	r28, 0x2C	; 44
    2bf4:	df 4f       	sbci	r29, 0xFF	; 255
    2bf6:	38 81       	ld	r19, Y
    2bf8:	c4 5d       	subi	r28, 0xD4	; 212
    2bfa:	d0 40       	sbci	r29, 0x00	; 0
    2bfc:	cb 52       	subi	r28, 0x2B	; 43
    2bfe:	df 4f       	sbci	r29, 0xFF	; 255
    2c00:	48 81       	ld	r20, Y
    2c02:	c5 5d       	subi	r28, 0xD5	; 213
    2c04:	d0 40       	sbci	r29, 0x00	; 0
    2c06:	ca 52       	subi	r28, 0x2A	; 42
    2c08:	df 4f       	sbci	r29, 0xFF	; 255
    2c0a:	58 81       	ld	r21, Y
    2c0c:	c6 5d       	subi	r28, 0xD6	; 214
    2c0e:	d0 40       	sbci	r29, 0x00	; 0
    2c10:	c9 52       	subi	r28, 0x29	; 41
    2c12:	df 4f       	sbci	r29, 0xFF	; 255
    2c14:	68 81       	ld	r22, Y
    2c16:	c7 5d       	subi	r28, 0xD7	; 215
    2c18:	d0 40       	sbci	r29, 0x00	; 0
    2c1a:	c8 52       	subi	r28, 0x28	; 40
    2c1c:	df 4f       	sbci	r29, 0xFF	; 255
    2c1e:	78 81       	ld	r23, Y
    2c20:	c8 5d       	subi	r28, 0xD8	; 216
    2c22:	d0 40       	sbci	r29, 0x00	; 0
    2c24:	c7 52       	subi	r28, 0x27	; 39
    2c26:	df 4f       	sbci	r29, 0xFF	; 255
    2c28:	88 81       	ld	r24, Y
    2c2a:	c9 5d       	subi	r28, 0xD9	; 217
    2c2c:	d0 40       	sbci	r29, 0x00	; 0
    2c2e:	c6 52       	subi	r28, 0x26	; 38
    2c30:	df 4f       	sbci	r29, 0xFF	; 255
    2c32:	98 81       	ld	r25, Y
    2c34:	ca 5d       	subi	r28, 0xDA	; 218
    2c36:	d0 40       	sbci	r29, 0x00	; 0
    2c38:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <__adddi3>
    2c3c:	62 2e       	mov	r6, r18
    2c3e:	73 2e       	mov	r7, r19
    2c40:	84 2e       	mov	r8, r20
    2c42:	95 2e       	mov	r9, r21
    2c44:	b6 2f       	mov	r27, r22
    2c46:	a7 2f       	mov	r26, r23
    2c48:	f8 2f       	mov	r31, r24
    2c4a:	e9 2f       	mov	r30, r25
    2c4c:	c5 53       	subi	r28, 0x35	; 53
    2c4e:	df 4f       	sbci	r29, 0xFF	; 255
    2c50:	28 81       	ld	r18, Y
    2c52:	cb 5c       	subi	r28, 0xCB	; 203
    2c54:	d0 40       	sbci	r29, 0x00	; 0
    2c56:	c4 53       	subi	r28, 0x34	; 52
    2c58:	df 4f       	sbci	r29, 0xFF	; 255
    2c5a:	38 81       	ld	r19, Y
    2c5c:	cc 5c       	subi	r28, 0xCC	; 204
    2c5e:	d0 40       	sbci	r29, 0x00	; 0
    2c60:	c3 53       	subi	r28, 0x33	; 51
    2c62:	df 4f       	sbci	r29, 0xFF	; 255
    2c64:	48 81       	ld	r20, Y
    2c66:	cd 5c       	subi	r28, 0xCD	; 205
    2c68:	d0 40       	sbci	r29, 0x00	; 0
    2c6a:	c2 53       	subi	r28, 0x32	; 50
    2c6c:	df 4f       	sbci	r29, 0xFF	; 255
    2c6e:	58 81       	ld	r21, Y
    2c70:	ce 5c       	subi	r28, 0xCE	; 206
    2c72:	d0 40       	sbci	r29, 0x00	; 0
    2c74:	c1 53       	subi	r28, 0x31	; 49
    2c76:	df 4f       	sbci	r29, 0xFF	; 255
    2c78:	68 81       	ld	r22, Y
    2c7a:	cf 5c       	subi	r28, 0xCF	; 207
    2c7c:	d0 40       	sbci	r29, 0x00	; 0
    2c7e:	72 2d       	mov	r23, r2
    2c80:	83 2d       	mov	r24, r3
    2c82:	94 2d       	mov	r25, r4
    2c84:	08 e3       	ldi	r16, 0x38	; 56
    2c86:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <__rotldi3>
    2c8a:	a2 2e       	mov	r10, r18
    2c8c:	b3 2e       	mov	r11, r19
    2c8e:	c4 2e       	mov	r12, r20
    2c90:	d5 2e       	mov	r13, r21
    2c92:	e6 2e       	mov	r14, r22
    2c94:	f7 2e       	mov	r15, r23
    2c96:	58 2e       	mov	r5, r24
    2c98:	19 2f       	mov	r17, r25
    2c9a:	c5 53       	subi	r28, 0x35	; 53
    2c9c:	df 4f       	sbci	r29, 0xFF	; 255
    2c9e:	28 81       	ld	r18, Y
    2ca0:	cb 5c       	subi	r28, 0xCB	; 203
    2ca2:	d0 40       	sbci	r29, 0x00	; 0
    2ca4:	c4 53       	subi	r28, 0x34	; 52
    2ca6:	df 4f       	sbci	r29, 0xFF	; 255
    2ca8:	38 81       	ld	r19, Y
    2caa:	cc 5c       	subi	r28, 0xCC	; 204
    2cac:	d0 40       	sbci	r29, 0x00	; 0
    2cae:	c3 53       	subi	r28, 0x33	; 51
    2cb0:	df 4f       	sbci	r29, 0xFF	; 255
    2cb2:	48 81       	ld	r20, Y
    2cb4:	cd 5c       	subi	r28, 0xCD	; 205
    2cb6:	d0 40       	sbci	r29, 0x00	; 0
    2cb8:	c2 53       	subi	r28, 0x32	; 50
    2cba:	df 4f       	sbci	r29, 0xFF	; 255
    2cbc:	58 81       	ld	r21, Y
    2cbe:	ce 5c       	subi	r28, 0xCE	; 206
    2cc0:	d0 40       	sbci	r29, 0x00	; 0
    2cc2:	c1 53       	subi	r28, 0x31	; 49
    2cc4:	df 4f       	sbci	r29, 0xFF	; 255
    2cc6:	68 81       	ld	r22, Y
    2cc8:	cf 5c       	subi	r28, 0xCF	; 207
    2cca:	d0 40       	sbci	r29, 0x00	; 0
    2ccc:	72 2d       	mov	r23, r2
    2cce:	83 2d       	mov	r24, r3
    2cd0:	94 2d       	mov	r25, r4
    2cd2:	0f e3       	ldi	r16, 0x3F	; 63
    2cd4:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <__rotldi3>
    2cd8:	a2 26       	eor	r10, r18
    2cda:	b3 26       	eor	r11, r19
    2cdc:	c4 26       	eor	r12, r20
    2cde:	d5 26       	eor	r13, r21
    2ce0:	e6 26       	eor	r14, r22
    2ce2:	f7 26       	eor	r15, r23
    2ce4:	58 26       	eor	r5, r24
    2ce6:	19 27       	eor	r17, r25
    2ce8:	c5 53       	subi	r28, 0x35	; 53
    2cea:	df 4f       	sbci	r29, 0xFF	; 255
    2cec:	28 81       	ld	r18, Y
    2cee:	cb 5c       	subi	r28, 0xCB	; 203
    2cf0:	d0 40       	sbci	r29, 0x00	; 0
    2cf2:	c4 53       	subi	r28, 0x34	; 52
    2cf4:	df 4f       	sbci	r29, 0xFF	; 255
    2cf6:	38 81       	ld	r19, Y
    2cf8:	cc 5c       	subi	r28, 0xCC	; 204
    2cfa:	d0 40       	sbci	r29, 0x00	; 0
    2cfc:	c3 53       	subi	r28, 0x33	; 51
    2cfe:	df 4f       	sbci	r29, 0xFF	; 255
    2d00:	48 81       	ld	r20, Y
    2d02:	cd 5c       	subi	r28, 0xCD	; 205
    2d04:	d0 40       	sbci	r29, 0x00	; 0
    2d06:	c2 53       	subi	r28, 0x32	; 50
    2d08:	df 4f       	sbci	r29, 0xFF	; 255
    2d0a:	58 81       	ld	r21, Y
    2d0c:	ce 5c       	subi	r28, 0xCE	; 206
    2d0e:	d0 40       	sbci	r29, 0x00	; 0
    2d10:	c1 53       	subi	r28, 0x31	; 49
    2d12:	df 4f       	sbci	r29, 0xFF	; 255
    2d14:	68 81       	ld	r22, Y
    2d16:	cf 5c       	subi	r28, 0xCF	; 207
    2d18:	d0 40       	sbci	r29, 0x00	; 0
    2d1a:	72 2d       	mov	r23, r2
    2d1c:	83 2d       	mov	r24, r3
    2d1e:	94 2d       	mov	r25, r4
    2d20:	07 e0       	ldi	r16, 0x07	; 7
    2d22:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <__lshrdi3>
    2d26:	a2 26       	eor	r10, r18
    2d28:	b3 26       	eor	r11, r19
    2d2a:	c4 26       	eor	r12, r20
    2d2c:	d5 26       	eor	r13, r21
    2d2e:	e6 26       	eor	r14, r22
    2d30:	f7 26       	eor	r15, r23
    2d32:	05 2d       	mov	r16, r5
    2d34:	08 27       	eor	r16, r24
    2d36:	19 27       	eor	r17, r25
    2d38:	26 2d       	mov	r18, r6
    2d3a:	37 2d       	mov	r19, r7
    2d3c:	48 2d       	mov	r20, r8
    2d3e:	59 2d       	mov	r21, r9
    2d40:	6b 2f       	mov	r22, r27
    2d42:	7a 2f       	mov	r23, r26
    2d44:	8f 2f       	mov	r24, r31
    2d46:	9e 2f       	mov	r25, r30
    2d48:	0e 94 d3 1e 	call	0x3da6	; 0x3da6 <__adddi3>
    2d4c:	c5 53       	subi	r28, 0x35	; 53
    2d4e:	df 4f       	sbci	r29, 0xFF	; 255
    2d50:	28 83       	st	Y, r18
    2d52:	cb 5c       	subi	r28, 0xCB	; 203
    2d54:	d0 40       	sbci	r29, 0x00	; 0
    2d56:	c4 53       	subi	r28, 0x34	; 52
    2d58:	df 4f       	sbci	r29, 0xFF	; 255
    2d5a:	38 83       	st	Y, r19
    2d5c:	cc 5c       	subi	r28, 0xCC	; 204
    2d5e:	d0 40       	sbci	r29, 0x00	; 0
    2d60:	c3 53       	subi	r28, 0x33	; 51
    2d62:	df 4f       	sbci	r29, 0xFF	; 255
    2d64:	48 83       	st	Y, r20
    2d66:	cd 5c       	subi	r28, 0xCD	; 205
    2d68:	d0 40       	sbci	r29, 0x00	; 0
    2d6a:	c2 53       	subi	r28, 0x32	; 50
    2d6c:	df 4f       	sbci	r29, 0xFF	; 255
    2d6e:	58 83       	st	Y, r21
    2d70:	ce 5c       	subi	r28, 0xCE	; 206
    2d72:	d0 40       	sbci	r29, 0x00	; 0
    2d74:	c1 53       	subi	r28, 0x31	; 49
    2d76:	df 4f       	sbci	r29, 0xFF	; 255
    2d78:	68 83       	st	Y, r22
    2d7a:	cf 5c       	subi	r28, 0xCF	; 207
    2d7c:	d0 40       	sbci	r29, 0x00	; 0
    2d7e:	cd 52       	subi	r28, 0x2D	; 45
    2d80:	df 4f       	sbci	r29, 0xFF	; 255
    2d82:	78 83       	st	Y, r23
    2d84:	c3 5d       	subi	r28, 0xD3	; 211
    2d86:	d0 40       	sbci	r29, 0x00	; 0
    2d88:	cc 52       	subi	r28, 0x2C	; 44
    2d8a:	df 4f       	sbci	r29, 0xFF	; 255
    2d8c:	88 83       	st	Y, r24
    2d8e:	c4 5d       	subi	r28, 0xD4	; 212
    2d90:	d0 40       	sbci	r29, 0x00	; 0
    2d92:	49 2e       	mov	r4, r25
			memmove(&(w[0]), &(w[1]), 15*8);
    2d94:	48 e7       	ldi	r20, 0x78	; 120
    2d96:	50 e0       	ldi	r21, 0x00	; 0
    2d98:	be 01       	movw	r22, r28
    2d9a:	67 5f       	subi	r22, 0xF7	; 247
    2d9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d9e:	ce 01       	movw	r24, r28
    2da0:	01 96       	adiw	r24, 0x01	; 1
    2da2:	0e 94 1c 20 	call	0x4038	; 0x4038 <memmove>
			w[15] = wx;
    2da6:	c5 53       	subi	r28, 0x35	; 53
    2da8:	df 4f       	sbci	r29, 0xFF	; 255
    2daa:	f8 81       	ld	r31, Y
    2dac:	cb 5c       	subi	r28, 0xCB	; 203
    2dae:	d0 40       	sbci	r29, 0x00	; 0
    2db0:	ea 96       	adiw	r28, 0x3a	; 58
    2db2:	ff af       	std	Y+63, r31	; 0x3f
    2db4:	ea 97       	sbiw	r28, 0x3a	; 58
    2db6:	c4 53       	subi	r28, 0x34	; 52
    2db8:	df 4f       	sbci	r29, 0xFF	; 255
    2dba:	18 81       	ld	r17, Y
    2dbc:	cc 5c       	subi	r28, 0xCC	; 204
    2dbe:	d0 40       	sbci	r29, 0x00	; 0
    2dc0:	eb 96       	adiw	r28, 0x3b	; 59
    2dc2:	1f af       	std	Y+63, r17	; 0x3f
    2dc4:	eb 97       	sbiw	r28, 0x3b	; 59
    2dc6:	c3 53       	subi	r28, 0x33	; 51
    2dc8:	df 4f       	sbci	r29, 0xFF	; 255
    2dca:	88 81       	ld	r24, Y
    2dcc:	cd 5c       	subi	r28, 0xCD	; 205
    2dce:	d0 40       	sbci	r29, 0x00	; 0
    2dd0:	ec 96       	adiw	r28, 0x3c	; 60
    2dd2:	8f af       	std	Y+63, r24	; 0x3f
    2dd4:	ec 97       	sbiw	r28, 0x3c	; 60
    2dd6:	c2 53       	subi	r28, 0x32	; 50
    2dd8:	df 4f       	sbci	r29, 0xFF	; 255
    2dda:	98 81       	ld	r25, Y
    2ddc:	ce 5c       	subi	r28, 0xCE	; 206
    2dde:	d0 40       	sbci	r29, 0x00	; 0
    2de0:	ed 96       	adiw	r28, 0x3d	; 61
    2de2:	9f af       	std	Y+63, r25	; 0x3f
    2de4:	ed 97       	sbiw	r28, 0x3d	; 61
    2de6:	c1 53       	subi	r28, 0x31	; 49
    2de8:	df 4f       	sbci	r29, 0xFF	; 255
    2dea:	a8 81       	ld	r26, Y
    2dec:	cf 5c       	subi	r28, 0xCF	; 207
    2dee:	d0 40       	sbci	r29, 0x00	; 0
    2df0:	ee 96       	adiw	r28, 0x3e	; 62
    2df2:	af af       	std	Y+63, r26	; 0x3f
    2df4:	ee 97       	sbiw	r28, 0x3e	; 62
    2df6:	cd 52       	subi	r28, 0x2D	; 45
    2df8:	df 4f       	sbci	r29, 0xFF	; 255
    2dfa:	b8 81       	ld	r27, Y
    2dfc:	c3 5d       	subi	r28, 0xD3	; 211
    2dfe:	d0 40       	sbci	r29, 0x00	; 0
    2e00:	ef 96       	adiw	r28, 0x3f	; 63
    2e02:	bf af       	std	Y+63, r27	; 0x3f
    2e04:	ef 97       	sbiw	r28, 0x3f	; 63
    2e06:	cc 52       	subi	r28, 0x2C	; 44
    2e08:	df 4f       	sbci	r29, 0xFF	; 255
    2e0a:	e8 81       	ld	r30, Y
    2e0c:	c4 5d       	subi	r28, 0xD4	; 212
    2e0e:	d0 40       	sbci	r29, 0x00	; 0
    2e10:	c1 58       	subi	r28, 0x81	; 129
    2e12:	df 4f       	sbci	r29, 0xFF	; 255
    2e14:	e8 83       	st	Y, r30
    2e16:	cf 57       	subi	r28, 0x7F	; 127
    2e18:	d0 40       	sbci	r29, 0x00	; 0
    2e1a:	c0 58       	subi	r28, 0x80	; 128
    2e1c:	df 4f       	sbci	r29, 0xFF	; 255
    2e1e:	48 82       	st	Y, r4
    2e20:	c0 58       	subi	r28, 0x80	; 128
    2e22:	d0 40       	sbci	r29, 0x00	; 0
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
    2e24:	c7 54       	subi	r28, 0x47	; 71
    2e26:	df 4f       	sbci	r29, 0xFF	; 255
    2e28:	18 81       	ld	r17, Y
    2e2a:	c9 5b       	subi	r28, 0xB9	; 185
    2e2c:	d0 40       	sbci	r29, 0x00	; 0
    2e2e:	cb 52       	subi	r28, 0x2B	; 43
    2e30:	df 4f       	sbci	r29, 0xFF	; 255
    2e32:	18 83       	st	Y, r17
    2e34:	c5 5d       	subi	r28, 0xD5	; 213
    2e36:	d0 40       	sbci	r29, 0x00	; 0
    2e38:	c6 54       	subi	r28, 0x46	; 70
    2e3a:	df 4f       	sbci	r29, 0xFF	; 255
    2e3c:	a8 81       	ld	r26, Y
    2e3e:	ca 5b       	subi	r28, 0xBA	; 186
    2e40:	d0 40       	sbci	r29, 0x00	; 0
    2e42:	ca 52       	subi	r28, 0x2A	; 42
    2e44:	df 4f       	sbci	r29, 0xFF	; 255
    2e46:	a8 83       	st	Y, r26
    2e48:	c6 5d       	subi	r28, 0xD6	; 214
    2e4a:	d0 40       	sbci	r29, 0x00	; 0
    2e4c:	c5 54       	subi	r28, 0x45	; 69
    2e4e:	df 4f       	sbci	r29, 0xFF	; 255
    2e50:	b8 81       	ld	r27, Y
    2e52:	cb 5b       	subi	r28, 0xBB	; 187
    2e54:	d0 40       	sbci	r29, 0x00	; 0
    2e56:	c9 52       	subi	r28, 0x29	; 41
    2e58:	df 4f       	sbci	r29, 0xFF	; 255
    2e5a:	b8 83       	st	Y, r27
    2e5c:	c7 5d       	subi	r28, 0xD7	; 215
    2e5e:	d0 40       	sbci	r29, 0x00	; 0
    2e60:	c4 54       	subi	r28, 0x44	; 68
    2e62:	df 4f       	sbci	r29, 0xFF	; 255
    2e64:	18 81       	ld	r17, Y
    2e66:	cc 5b       	subi	r28, 0xBC	; 188
    2e68:	d0 40       	sbci	r29, 0x00	; 0
    2e6a:	c8 52       	subi	r28, 0x28	; 40
    2e6c:	df 4f       	sbci	r29, 0xFF	; 255
    2e6e:	18 83       	st	Y, r17
    2e70:	c8 5d       	subi	r28, 0xD8	; 216
    2e72:	d0 40       	sbci	r29, 0x00	; 0
    2e74:	c3 54       	subi	r28, 0x43	; 67
    2e76:	df 4f       	sbci	r29, 0xFF	; 255
    2e78:	a8 81       	ld	r26, Y
    2e7a:	cd 5b       	subi	r28, 0xBD	; 189
    2e7c:	d0 40       	sbci	r29, 0x00	; 0
    2e7e:	c7 52       	subi	r28, 0x27	; 39
    2e80:	df 4f       	sbci	r29, 0xFF	; 255
    2e82:	a8 83       	st	Y, r26
    2e84:	c9 5d       	subi	r28, 0xD9	; 217
    2e86:	d0 40       	sbci	r29, 0x00	; 0
    2e88:	c2 54       	subi	r28, 0x42	; 66
    2e8a:	df 4f       	sbci	r29, 0xFF	; 255
    2e8c:	b8 81       	ld	r27, Y
    2e8e:	ce 5b       	subi	r28, 0xBE	; 190
    2e90:	d0 40       	sbci	r29, 0x00	; 0
    2e92:	c6 52       	subi	r28, 0x26	; 38
    2e94:	df 4f       	sbci	r29, 0xFF	; 255
    2e96:	b8 83       	st	Y, r27
    2e98:	ca 5d       	subi	r28, 0xDA	; 218
    2e9a:	d0 40       	sbci	r29, 0x00	; 0
    2e9c:	c1 54       	subi	r28, 0x41	; 65
    2e9e:	df 4f       	sbci	r29, 0xFF	; 255
    2ea0:	18 81       	ld	r17, Y
    2ea2:	cf 5b       	subi	r28, 0xBF	; 191
    2ea4:	d0 40       	sbci	r29, 0x00	; 0
    2ea6:	c3 52       	subi	r28, 0x23	; 35
    2ea8:	df 4f       	sbci	r29, 0xFF	; 255
    2eaa:	18 83       	st	Y, r17
    2eac:	cd 5d       	subi	r28, 0xDD	; 221
    2eae:	d0 40       	sbci	r29, 0x00	; 0
    2eb0:	c0 54       	subi	r28, 0x40	; 64
    2eb2:	df 4f       	sbci	r29, 0xFF	; 255
    2eb4:	a8 81       	ld	r26, Y
    2eb6:	c0 5c       	subi	r28, 0xC0	; 192
    2eb8:	d0 40       	sbci	r29, 0x00	; 0
    2eba:	c2 52       	subi	r28, 0x22	; 34
    2ebc:	df 4f       	sbci	r29, 0xFF	; 255
    2ebe:	a8 83       	st	Y, r26
    2ec0:	ce 5d       	subi	r28, 0xDE	; 222
    2ec2:	d0 40       	sbci	r29, 0x00	; 0
    2ec4:	cf 55       	subi	r28, 0x5F	; 95
    2ec6:	df 4f       	sbci	r29, 0xFF	; 255
    2ec8:	98 80       	ld	r9, Y
    2eca:	c1 5a       	subi	r28, 0xA1	; 161
    2ecc:	d0 40       	sbci	r29, 0x00	; 0
    2ece:	ce 55       	subi	r28, 0x5E	; 94
    2ed0:	df 4f       	sbci	r29, 0xFF	; 255
    2ed2:	b8 80       	ld	r11, Y
    2ed4:	c2 5a       	subi	r28, 0xA2	; 162
    2ed6:	d0 40       	sbci	r29, 0x00	; 0
    2ed8:	cd 55       	subi	r28, 0x5D	; 93
    2eda:	df 4f       	sbci	r29, 0xFF	; 255
    2edc:	c8 80       	ld	r12, Y
    2ede:	c3 5a       	subi	r28, 0xA3	; 163
    2ee0:	d0 40       	sbci	r29, 0x00	; 0
    2ee2:	cc 55       	subi	r28, 0x5C	; 92
    2ee4:	df 4f       	sbci	r29, 0xFF	; 255
    2ee6:	d8 80       	ld	r13, Y
    2ee8:	c4 5a       	subi	r28, 0xA4	; 164
    2eea:	d0 40       	sbci	r29, 0x00	; 0
    2eec:	cb 55       	subi	r28, 0x5B	; 91
    2eee:	df 4f       	sbci	r29, 0xFF	; 255
    2ef0:	f8 80       	ld	r15, Y
    2ef2:	c5 5a       	subi	r28, 0xA5	; 165
    2ef4:	d0 40       	sbci	r29, 0x00	; 0
    2ef6:	ca 55       	subi	r28, 0x5A	; 90
    2ef8:	df 4f       	sbci	r29, 0xFF	; 255
    2efa:	18 81       	ld	r17, Y
    2efc:	c6 5a       	subi	r28, 0xA6	; 166
    2efe:	d0 40       	sbci	r29, 0x00	; 0
    2f00:	c9 55       	subi	r28, 0x59	; 89
    2f02:	df 4f       	sbci	r29, 0xFF	; 255
    2f04:	b8 81       	ld	r27, Y
    2f06:	c7 5a       	subi	r28, 0xA7	; 167
    2f08:	d0 40       	sbci	r29, 0x00	; 0
    2f0a:	c8 55       	subi	r28, 0x58	; 88
    2f0c:	df 4f       	sbci	r29, 0xFF	; 255
    2f0e:	a8 81       	ld	r26, Y
    2f10:	c8 5a       	subi	r28, 0xA8	; 168
    2f12:	d0 40       	sbci	r29, 0x00	; 0
    2f14:	79 2d       	mov	r23, r9
    2f16:	70 95       	com	r23
    2f18:	6b 2d       	mov	r22, r11
    2f1a:	60 95       	com	r22
    2f1c:	5c 2d       	mov	r21, r12
    2f1e:	50 95       	com	r21
    2f20:	4d 2d       	mov	r20, r13
    2f22:	40 95       	com	r20
    2f24:	3f 2d       	mov	r19, r15
    2f26:	30 95       	com	r19
    2f28:	21 2f       	mov	r18, r17
    2f2a:	20 95       	com	r18
    2f2c:	9b 2f       	mov	r25, r27
    2f2e:	90 95       	com	r25
    2f30:	8a 2f       	mov	r24, r26
    2f32:	80 95       	com	r24
    2f34:	cf 54       	subi	r28, 0x4F	; 79
    2f36:	df 4f       	sbci	r29, 0xFF	; 255
    2f38:	68 80       	ld	r6, Y
    2f3a:	c1 5b       	subi	r28, 0xB1	; 177
    2f3c:	d0 40       	sbci	r29, 0x00	; 0
    2f3e:	67 22       	and	r6, r23
    2f40:	ce 54       	subi	r28, 0x4E	; 78
    2f42:	df 4f       	sbci	r29, 0xFF	; 255
    2f44:	88 80       	ld	r8, Y
    2f46:	c2 5b       	subi	r28, 0xB2	; 178
    2f48:	d0 40       	sbci	r29, 0x00	; 0
    2f4a:	86 22       	and	r8, r22
    2f4c:	cd 54       	subi	r28, 0x4D	; 77
    2f4e:	df 4f       	sbci	r29, 0xFF	; 255
    2f50:	e8 80       	ld	r14, Y
    2f52:	c3 5b       	subi	r28, 0xB3	; 179
    2f54:	d0 40       	sbci	r29, 0x00	; 0
    2f56:	e5 22       	and	r14, r21
    2f58:	cc 54       	subi	r28, 0x4C	; 76
    2f5a:	df 4f       	sbci	r29, 0xFF	; 255
    2f5c:	f8 81       	ld	r31, Y
    2f5e:	c4 5b       	subi	r28, 0xB4	; 180
    2f60:	d0 40       	sbci	r29, 0x00	; 0
    2f62:	f4 23       	and	r31, r20
    2f64:	cb 54       	subi	r28, 0x4B	; 75
    2f66:	df 4f       	sbci	r29, 0xFF	; 255
    2f68:	78 81       	ld	r23, Y
    2f6a:	c5 5b       	subi	r28, 0xB5	; 181
    2f6c:	d0 40       	sbci	r29, 0x00	; 0
    2f6e:	73 23       	and	r23, r19
    2f70:	ca 54       	subi	r28, 0x4A	; 74
    2f72:	df 4f       	sbci	r29, 0xFF	; 255
    2f74:	58 81       	ld	r21, Y
    2f76:	c6 5b       	subi	r28, 0xB6	; 182
    2f78:	d0 40       	sbci	r29, 0x00	; 0
    2f7a:	52 23       	and	r21, r18
    2f7c:	c9 54       	subi	r28, 0x49	; 73
    2f7e:	df 4f       	sbci	r29, 0xFF	; 255
    2f80:	38 81       	ld	r19, Y
    2f82:	c7 5b       	subi	r28, 0xB7	; 183
    2f84:	d0 40       	sbci	r29, 0x00	; 0
    2f86:	39 23       	and	r19, r25
    2f88:	c8 54       	subi	r28, 0x48	; 72
    2f8a:	df 4f       	sbci	r29, 0xFF	; 255
    2f8c:	98 81       	ld	r25, Y
    2f8e:	c8 5b       	subi	r28, 0xB8	; 184
    2f90:	d0 40       	sbci	r29, 0x00	; 0
    2f92:	98 23       	and	r25, r24
    2f94:	c7 55       	subi	r28, 0x57	; 87
    2f96:	df 4f       	sbci	r29, 0xFF	; 255
    2f98:	78 80       	ld	r7, Y
    2f9a:	c9 5a       	subi	r28, 0xA9	; 169
    2f9c:	d0 40       	sbci	r29, 0x00	; 0
    2f9e:	79 20       	and	r7, r9
    2fa0:	c6 55       	subi	r28, 0x56	; 86
    2fa2:	df 4f       	sbci	r29, 0xFF	; 255
    2fa4:	a8 80       	ld	r10, Y
    2fa6:	ca 5a       	subi	r28, 0xAA	; 170
    2fa8:	d0 40       	sbci	r29, 0x00	; 0
    2faa:	ab 20       	and	r10, r11
    2fac:	c5 55       	subi	r28, 0x55	; 85
    2fae:	df 4f       	sbci	r29, 0xFF	; 255
    2fb0:	08 81       	ld	r16, Y
    2fb2:	cb 5a       	subi	r28, 0xAB	; 171
    2fb4:	d0 40       	sbci	r29, 0x00	; 0
    2fb6:	0c 21       	and	r16, r12
    2fb8:	c4 55       	subi	r28, 0x54	; 84
    2fba:	df 4f       	sbci	r29, 0xFF	; 255
    2fbc:	e8 81       	ld	r30, Y
    2fbe:	cc 5a       	subi	r28, 0xAC	; 172
    2fc0:	d0 40       	sbci	r29, 0x00	; 0
    2fc2:	ed 21       	and	r30, r13
    2fc4:	c3 55       	subi	r28, 0x53	; 83
    2fc6:	df 4f       	sbci	r29, 0xFF	; 255
    2fc8:	68 81       	ld	r22, Y
    2fca:	cd 5a       	subi	r28, 0xAD	; 173
    2fcc:	d0 40       	sbci	r29, 0x00	; 0
    2fce:	6f 21       	and	r22, r15
    2fd0:	c2 55       	subi	r28, 0x52	; 82
    2fd2:	df 4f       	sbci	r29, 0xFF	; 255
    2fd4:	48 81       	ld	r20, Y
    2fd6:	ce 5a       	subi	r28, 0xAE	; 174
    2fd8:	d0 40       	sbci	r29, 0x00	; 0
    2fda:	41 23       	and	r20, r17
    2fdc:	c1 55       	subi	r28, 0x51	; 81
    2fde:	df 4f       	sbci	r29, 0xFF	; 255
    2fe0:	28 81       	ld	r18, Y
    2fe2:	cf 5a       	subi	r28, 0xAF	; 175
    2fe4:	d0 40       	sbci	r29, 0x00	; 0
    2fe6:	2b 23       	and	r18, r27
    2fe8:	c0 55       	subi	r28, 0x50	; 80
    2fea:	df 4f       	sbci	r29, 0xFF	; 255
    2fec:	88 81       	ld	r24, Y
    2fee:	c0 5b       	subi	r28, 0xB0	; 176
    2ff0:	d0 40       	sbci	r29, 0x00	; 0
    2ff2:	8a 23       	and	r24, r26
    2ff4:	67 24       	eor	r6, r7
    2ff6:	c1 52       	subi	r28, 0x21	; 33
    2ff8:	df 4f       	sbci	r29, 0xFF	; 255
    2ffa:	68 82       	st	Y, r6
    2ffc:	cf 5d       	subi	r28, 0xDF	; 223
    2ffe:	d0 40       	sbci	r29, 0x00	; 0
    3000:	8a 24       	eor	r8, r10
    3002:	c0 52       	subi	r28, 0x20	; 32
    3004:	df 4f       	sbci	r29, 0xFF	; 255
    3006:	88 82       	st	Y, r8
    3008:	c0 5e       	subi	r28, 0xE0	; 224
    300a:	d0 40       	sbci	r29, 0x00	; 0
    300c:	e0 26       	eor	r14, r16
    300e:	cf 51       	subi	r28, 0x1F	; 31
    3010:	df 4f       	sbci	r29, 0xFF	; 255
    3012:	e8 82       	st	Y, r14
    3014:	c1 5e       	subi	r28, 0xE1	; 225
    3016:	d0 40       	sbci	r29, 0x00	; 0
    3018:	fe 27       	eor	r31, r30
    301a:	ce 51       	subi	r28, 0x1E	; 30
    301c:	df 4f       	sbci	r29, 0xFF	; 255
    301e:	f8 83       	st	Y, r31
    3020:	c2 5e       	subi	r28, 0xE2	; 226
    3022:	d0 40       	sbci	r29, 0x00	; 0
    3024:	76 27       	eor	r23, r22
    3026:	cd 51       	subi	r28, 0x1D	; 29
    3028:	df 4f       	sbci	r29, 0xFF	; 255
    302a:	78 83       	st	Y, r23
    302c:	c3 5e       	subi	r28, 0xE3	; 227
    302e:	d0 40       	sbci	r29, 0x00	; 0
    3030:	54 27       	eor	r21, r20
    3032:	cc 51       	subi	r28, 0x1C	; 28
    3034:	df 4f       	sbci	r29, 0xFF	; 255
    3036:	58 83       	st	Y, r21
    3038:	c4 5e       	subi	r28, 0xE4	; 228
    303a:	d0 40       	sbci	r29, 0x00	; 0
    303c:	32 27       	eor	r19, r18
    303e:	cb 51       	subi	r28, 0x1B	; 27
    3040:	df 4f       	sbci	r29, 0xFF	; 255
    3042:	38 83       	st	Y, r19
    3044:	c5 5e       	subi	r28, 0xE5	; 229
    3046:	d0 40       	sbci	r29, 0x00	; 0
    3048:	98 27       	eor	r25, r24
    304a:	ca 51       	subi	r28, 0x1A	; 26
    304c:	df 4f       	sbci	r29, 0xFF	; 255
    304e:	98 83       	st	Y, r25
    3050:	c6 5e       	subi	r28, 0xE6	; 230
    3052:	d0 40       	sbci	r29, 0x00	; 0
uint64_t pgm_read_uint64_t_P(const uint64_t * p){
	union {
		uint64_t v64;
		uint32_t v32[2];
	} ret;
	ret.v32[0] = pgm_read_dword(p);
    3054:	cf 52       	subi	r28, 0x2F	; 47
    3056:	df 4f       	sbci	r29, 0xFF	; 255
    3058:	e8 81       	ld	r30, Y
    305a:	f9 81       	ldd	r31, Y+1	; 0x01
    305c:	c1 5d       	subi	r28, 0xD1	; 209
    305e:	d0 40       	sbci	r29, 0x00	; 0
    3060:	45 91       	lpm	r20, Z+
    3062:	55 91       	lpm	r21, Z+
    3064:	65 91       	lpm	r22, Z+
    3066:	74 91       	lpm	r23, Z
    3068:	a4 2e       	mov	r10, r20
    306a:	cf 53       	subi	r28, 0x3F	; 63
    306c:	df 4f       	sbci	r29, 0xFF	; 255
    306e:	48 83       	st	Y, r20
    3070:	59 83       	std	Y+1, r21	; 0x01
    3072:	6a 83       	std	Y+2, r22	; 0x02
    3074:	7b 83       	std	Y+3, r23	; 0x03
    3076:	c1 5c       	subi	r28, 0xC1	; 193
    3078:	d0 40       	sbci	r29, 0x00	; 0
	ret.v32[1] = pgm_read_dword((uint8_t*)p + 4);
    307a:	cf 52       	subi	r28, 0x2F	; 47
    307c:	df 4f       	sbci	r29, 0xFF	; 255
    307e:	e8 81       	ld	r30, Y
    3080:	f9 81       	ldd	r31, Y+1	; 0x01
    3082:	c1 5d       	subi	r28, 0xD1	; 209
    3084:	d0 40       	sbci	r29, 0x00	; 0
    3086:	34 96       	adiw	r30, 0x04	; 4
    3088:	45 91       	lpm	r20, Z+
    308a:	55 91       	lpm	r21, Z+
    308c:	65 91       	lpm	r22, Z+
    308e:	74 91       	lpm	r23, Z
    3090:	e4 2e       	mov	r14, r20
    3092:	cb 53       	subi	r28, 0x3B	; 59
    3094:	df 4f       	sbci	r29, 0xFF	; 255
    3096:	48 83       	st	Y, r20
    3098:	59 83       	std	Y+1, r21	; 0x01
    309a:	6a 83       	std	Y+2, r22	; 0x02
    309c:	7b 83       	std	Y+3, r23	; 0x03
    309e:	c5 5c       	subi	r28, 0xC5	; 197
    30a0:	d0 40       	sbci	r29, 0x00	; 0
    30a2:	29 2d       	mov	r18, r9
    30a4:	3b 2d       	mov	r19, r11
    30a6:	4c 2d       	mov	r20, r12
    30a8:	5d 2d       	mov	r21, r13
    30aa:	6f 2d       	mov	r22, r15
    30ac:	71 2f       	mov	r23, r17
    30ae:	8b 2f       	mov	r24, r27
    30b0:	9a 2f       	mov	r25, r26
    30b2:	0e e2       	ldi	r16, 0x2E	; 46
    30b4:	5d d6       	rcall	.+3258   	; 0x3d70 <__rotldi3>
    30b6:	22 2e       	mov	r2, r18
    30b8:	33 2e       	mov	r3, r19
    30ba:	54 2e       	mov	r5, r20
    30bc:	65 2e       	mov	r6, r21
    30be:	76 2e       	mov	r7, r22
    30c0:	87 2e       	mov	r8, r23
    30c2:	f8 2f       	mov	r31, r24
    30c4:	e9 2f       	mov	r30, r25
    30c6:	29 2d       	mov	r18, r9
    30c8:	3b 2d       	mov	r19, r11
    30ca:	4c 2d       	mov	r20, r12
    30cc:	5d 2d       	mov	r21, r13
    30ce:	6f 2d       	mov	r22, r15
    30d0:	71 2f       	mov	r23, r17
    30d2:	8b 2f       	mov	r24, r27
    30d4:	9a 2f       	mov	r25, r26
    30d6:	02 e3       	ldi	r16, 0x32	; 50
    30d8:	4b d6       	rcall	.+3222   	; 0x3d70 <__rotldi3>
    30da:	22 26       	eor	r2, r18
    30dc:	33 26       	eor	r3, r19
    30de:	54 26       	eor	r5, r20
    30e0:	65 26       	eor	r6, r21
    30e2:	76 26       	eor	r7, r22
    30e4:	87 26       	eor	r8, r23
    30e6:	f8 27       	eor	r31, r24
    30e8:	e9 27       	eor	r30, r25
    30ea:	29 2d       	mov	r18, r9
    30ec:	3b 2d       	mov	r19, r11
    30ee:	4c 2d       	mov	r20, r12
    30f0:	5d 2d       	mov	r21, r13
    30f2:	6f 2d       	mov	r22, r15
    30f4:	71 2f       	mov	r23, r17
    30f6:	8b 2f       	mov	r24, r27
    30f8:	9a 2f       	mov	r25, r26
    30fa:	07 e1       	ldi	r16, 0x17	; 23
    30fc:	39 d6       	rcall	.+3186   	; 0x3d70 <__rotldi3>
    30fe:	22 26       	eor	r2, r18
    3100:	33 26       	eor	r3, r19
    3102:	54 26       	eor	r5, r20
    3104:	65 26       	eor	r6, r21
    3106:	76 26       	eor	r7, r22
    3108:	87 26       	eor	r8, r23
    310a:	f8 27       	eor	r31, r24
    310c:	e9 27       	eor	r30, r25
    310e:	cb 52       	subi	r28, 0x2B	; 43
    3110:	df 4f       	sbci	r29, 0xFF	; 255
    3112:	28 81       	ld	r18, Y
    3114:	c5 5d       	subi	r28, 0xD5	; 213
    3116:	d0 40       	sbci	r29, 0x00	; 0
    3118:	ca 52       	subi	r28, 0x2A	; 42
    311a:	df 4f       	sbci	r29, 0xFF	; 255
    311c:	38 81       	ld	r19, Y
    311e:	c6 5d       	subi	r28, 0xD6	; 214
    3120:	d0 40       	sbci	r29, 0x00	; 0
    3122:	c9 52       	subi	r28, 0x29	; 41
    3124:	df 4f       	sbci	r29, 0xFF	; 255
    3126:	48 81       	ld	r20, Y
    3128:	c7 5d       	subi	r28, 0xD7	; 215
    312a:	d0 40       	sbci	r29, 0x00	; 0
    312c:	c8 52       	subi	r28, 0x28	; 40
    312e:	df 4f       	sbci	r29, 0xFF	; 255
    3130:	58 81       	ld	r21, Y
    3132:	c8 5d       	subi	r28, 0xD8	; 216
    3134:	d0 40       	sbci	r29, 0x00	; 0
    3136:	c7 52       	subi	r28, 0x27	; 39
    3138:	df 4f       	sbci	r29, 0xFF	; 255
    313a:	68 81       	ld	r22, Y
    313c:	c9 5d       	subi	r28, 0xD9	; 217
    313e:	d0 40       	sbci	r29, 0x00	; 0
    3140:	c6 52       	subi	r28, 0x26	; 38
    3142:	df 4f       	sbci	r29, 0xFF	; 255
    3144:	78 81       	ld	r23, Y
    3146:	ca 5d       	subi	r28, 0xDA	; 218
    3148:	d0 40       	sbci	r29, 0x00	; 0
    314a:	c3 52       	subi	r28, 0x23	; 35
    314c:	df 4f       	sbci	r29, 0xFF	; 255
    314e:	88 81       	ld	r24, Y
    3150:	cd 5d       	subi	r28, 0xDD	; 221
    3152:	d0 40       	sbci	r29, 0x00	; 0
    3154:	c2 52       	subi	r28, 0x22	; 34
    3156:	df 4f       	sbci	r29, 0xFF	; 255
    3158:	98 81       	ld	r25, Y
    315a:	ce 5d       	subi	r28, 0xDE	; 222
    315c:	d0 40       	sbci	r29, 0x00	; 0
    315e:	ce 53       	subi	r28, 0x3E	; 62
    3160:	df 4f       	sbci	r29, 0xFF	; 255
    3162:	b8 80       	ld	r11, Y
    3164:	c2 5c       	subi	r28, 0xC2	; 194
    3166:	d0 40       	sbci	r29, 0x00	; 0
    3168:	cd 53       	subi	r28, 0x3D	; 61
    316a:	df 4f       	sbci	r29, 0xFF	; 255
    316c:	c8 80       	ld	r12, Y
    316e:	c3 5c       	subi	r28, 0xC3	; 195
    3170:	d0 40       	sbci	r29, 0x00	; 0
    3172:	cc 53       	subi	r28, 0x3C	; 60
    3174:	df 4f       	sbci	r29, 0xFF	; 255
    3176:	d8 80       	ld	r13, Y
    3178:	c4 5c       	subi	r28, 0xC4	; 196
    317a:	d0 40       	sbci	r29, 0x00	; 0
    317c:	ca 53       	subi	r28, 0x3A	; 58
    317e:	df 4f       	sbci	r29, 0xFF	; 255
    3180:	f8 80       	ld	r15, Y
    3182:	c6 5c       	subi	r28, 0xC6	; 198
    3184:	d0 40       	sbci	r29, 0x00	; 0
    3186:	c9 53       	subi	r28, 0x39	; 57
    3188:	df 4f       	sbci	r29, 0xFF	; 255
    318a:	08 81       	ld	r16, Y
    318c:	c7 5c       	subi	r28, 0xC7	; 199
    318e:	d0 40       	sbci	r29, 0x00	; 0
    3190:	c8 53       	subi	r28, 0x38	; 56
    3192:	df 4f       	sbci	r29, 0xFF	; 255
    3194:	18 81       	ld	r17, Y
    3196:	c8 5c       	subi	r28, 0xC8	; 200
    3198:	d0 40       	sbci	r29, 0x00	; 0
    319a:	05 d6       	rcall	.+3082   	; 0x3da6 <__adddi3>
    319c:	a2 2e       	mov	r10, r18
    319e:	b3 2e       	mov	r11, r19
    31a0:	c4 2e       	mov	r12, r20
    31a2:	d5 2e       	mov	r13, r21
    31a4:	e6 2e       	mov	r14, r22
    31a6:	f7 2e       	mov	r15, r23
    31a8:	08 2f       	mov	r16, r24
    31aa:	19 2f       	mov	r17, r25
    31ac:	22 2d       	mov	r18, r2
    31ae:	33 2d       	mov	r19, r3
    31b0:	45 2d       	mov	r20, r5
    31b2:	56 2d       	mov	r21, r6
    31b4:	67 2d       	mov	r22, r7
    31b6:	78 2d       	mov	r23, r8
    31b8:	8f 2f       	mov	r24, r31
    31ba:	9e 2f       	mov	r25, r30
    31bc:	f4 d5       	rcall	.+3048   	; 0x3da6 <__adddi3>
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
			memmove(&(w[0]), &(w[1]), 15*8);
			w[15] = wx;
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
    31be:	c1 52       	subi	r28, 0x21	; 33
    31c0:	df 4f       	sbci	r29, 0xFF	; 255
    31c2:	a8 80       	ld	r10, Y
    31c4:	cf 5d       	subi	r28, 0xDF	; 223
    31c6:	d0 40       	sbci	r29, 0x00	; 0
    31c8:	c0 52       	subi	r28, 0x20	; 32
    31ca:	df 4f       	sbci	r29, 0xFF	; 255
    31cc:	b8 80       	ld	r11, Y
    31ce:	c0 5e       	subi	r28, 0xE0	; 224
    31d0:	d0 40       	sbci	r29, 0x00	; 0
    31d2:	cf 51       	subi	r28, 0x1F	; 31
    31d4:	df 4f       	sbci	r29, 0xFF	; 255
    31d6:	c8 80       	ld	r12, Y
    31d8:	c1 5e       	subi	r28, 0xE1	; 225
    31da:	d0 40       	sbci	r29, 0x00	; 0
    31dc:	ce 51       	subi	r28, 0x1E	; 30
    31de:	df 4f       	sbci	r29, 0xFF	; 255
    31e0:	d8 80       	ld	r13, Y
    31e2:	c2 5e       	subi	r28, 0xE2	; 226
    31e4:	d0 40       	sbci	r29, 0x00	; 0
    31e6:	cd 51       	subi	r28, 0x1D	; 29
    31e8:	df 4f       	sbci	r29, 0xFF	; 255
    31ea:	e8 80       	ld	r14, Y
    31ec:	c3 5e       	subi	r28, 0xE3	; 227
    31ee:	d0 40       	sbci	r29, 0x00	; 0
    31f0:	cc 51       	subi	r28, 0x1C	; 28
    31f2:	df 4f       	sbci	r29, 0xFF	; 255
    31f4:	f8 80       	ld	r15, Y
    31f6:	c4 5e       	subi	r28, 0xE4	; 228
    31f8:	d0 40       	sbci	r29, 0x00	; 0
    31fa:	cb 51       	subi	r28, 0x1B	; 27
    31fc:	df 4f       	sbci	r29, 0xFF	; 255
    31fe:	08 81       	ld	r16, Y
    3200:	c5 5e       	subi	r28, 0xE5	; 229
    3202:	d0 40       	sbci	r29, 0x00	; 0
    3204:	ca 51       	subi	r28, 0x1A	; 26
    3206:	df 4f       	sbci	r29, 0xFF	; 255
    3208:	18 81       	ld	r17, Y
    320a:	c6 5e       	subi	r28, 0xE6	; 230
    320c:	d0 40       	sbci	r29, 0x00	; 0
    320e:	cb d5       	rcall	.+2966   	; 0x3da6 <__adddi3>
    3210:	c5 53       	subi	r28, 0x35	; 53
    3212:	df 4f       	sbci	r29, 0xFF	; 255
    3214:	a8 80       	ld	r10, Y
    3216:	cb 5c       	subi	r28, 0xCB	; 203
    3218:	d0 40       	sbci	r29, 0x00	; 0
    321a:	c4 53       	subi	r28, 0x34	; 52
    321c:	df 4f       	sbci	r29, 0xFF	; 255
    321e:	b8 80       	ld	r11, Y
    3220:	cc 5c       	subi	r28, 0xCC	; 204
    3222:	d0 40       	sbci	r29, 0x00	; 0
    3224:	c3 53       	subi	r28, 0x33	; 51
    3226:	df 4f       	sbci	r29, 0xFF	; 255
    3228:	c8 80       	ld	r12, Y
    322a:	cd 5c       	subi	r28, 0xCD	; 205
    322c:	d0 40       	sbci	r29, 0x00	; 0
    322e:	c2 53       	subi	r28, 0x32	; 50
    3230:	df 4f       	sbci	r29, 0xFF	; 255
    3232:	d8 80       	ld	r13, Y
    3234:	ce 5c       	subi	r28, 0xCE	; 206
    3236:	d0 40       	sbci	r29, 0x00	; 0
    3238:	c1 53       	subi	r28, 0x31	; 49
    323a:	df 4f       	sbci	r29, 0xFF	; 255
    323c:	e8 80       	ld	r14, Y
    323e:	cf 5c       	subi	r28, 0xCF	; 207
    3240:	d0 40       	sbci	r29, 0x00	; 0
    3242:	cd 52       	subi	r28, 0x2D	; 45
    3244:	df 4f       	sbci	r29, 0xFF	; 255
    3246:	f8 80       	ld	r15, Y
    3248:	c3 5d       	subi	r28, 0xD3	; 211
    324a:	d0 40       	sbci	r29, 0x00	; 0
    324c:	cc 52       	subi	r28, 0x2C	; 44
    324e:	df 4f       	sbci	r29, 0xFF	; 255
    3250:	08 81       	ld	r16, Y
    3252:	c4 5d       	subi	r28, 0xD4	; 212
    3254:	d0 40       	sbci	r29, 0x00	; 0
    3256:	14 2d       	mov	r17, r4
    3258:	a6 d5       	rcall	.+2892   	; 0x3da6 <__adddi3>
    325a:	c5 53       	subi	r28, 0x35	; 53
    325c:	df 4f       	sbci	r29, 0xFF	; 255
    325e:	28 83       	st	Y, r18
    3260:	cb 5c       	subi	r28, 0xCB	; 203
    3262:	d0 40       	sbci	r29, 0x00	; 0
    3264:	c4 53       	subi	r28, 0x34	; 52
    3266:	df 4f       	sbci	r29, 0xFF	; 255
    3268:	38 83       	st	Y, r19
    326a:	cc 5c       	subi	r28, 0xCC	; 204
    326c:	d0 40       	sbci	r29, 0x00	; 0
    326e:	c3 53       	subi	r28, 0x33	; 51
    3270:	df 4f       	sbci	r29, 0xFF	; 255
    3272:	48 83       	st	Y, r20
    3274:	cd 5c       	subi	r28, 0xCD	; 205
    3276:	d0 40       	sbci	r29, 0x00	; 0
    3278:	c2 53       	subi	r28, 0x32	; 50
    327a:	df 4f       	sbci	r29, 0xFF	; 255
    327c:	58 83       	st	Y, r21
    327e:	ce 5c       	subi	r28, 0xCE	; 206
    3280:	d0 40       	sbci	r29, 0x00	; 0
    3282:	c1 53       	subi	r28, 0x31	; 49
    3284:	df 4f       	sbci	r29, 0xFF	; 255
    3286:	68 83       	st	Y, r22
    3288:	cf 5c       	subi	r28, 0xCF	; 207
    328a:	d0 40       	sbci	r29, 0x00	; 0
    328c:	cd 52       	subi	r28, 0x2D	; 45
    328e:	df 4f       	sbci	r29, 0xFF	; 255
    3290:	78 83       	st	Y, r23
    3292:	c3 5d       	subi	r28, 0xD3	; 211
    3294:	d0 40       	sbci	r29, 0x00	; 0
    3296:	cc 52       	subi	r28, 0x2C	; 44
    3298:	df 4f       	sbci	r29, 0xFF	; 255
    329a:	88 83       	st	Y, r24
    329c:	c4 5d       	subi	r28, 0xD4	; 212
    329e:	d0 40       	sbci	r29, 0x00	; 0
    32a0:	cb 52       	subi	r28, 0x2B	; 43
    32a2:	df 4f       	sbci	r29, 0xFF	; 255
    32a4:	98 83       	st	Y, r25
    32a6:	c5 5d       	subi	r28, 0xD5	; 213
    32a8:	d0 40       	sbci	r29, 0x00	; 0
		t2 = SIGMA_0(a[0]) + MAJ(a[0], a[1], a[2]);
    32aa:	cf 57       	subi	r28, 0x7F	; 127
    32ac:	df 4f       	sbci	r29, 0xFF	; 255
    32ae:	a8 80       	ld	r10, Y
    32b0:	c1 58       	subi	r28, 0x81	; 129
    32b2:	d0 40       	sbci	r29, 0x00	; 0
    32b4:	ce 57       	subi	r28, 0x7E	; 126
    32b6:	df 4f       	sbci	r29, 0xFF	; 255
    32b8:	b8 80       	ld	r11, Y
    32ba:	c2 58       	subi	r28, 0x82	; 130
    32bc:	d0 40       	sbci	r29, 0x00	; 0
    32be:	cd 57       	subi	r28, 0x7D	; 125
    32c0:	df 4f       	sbci	r29, 0xFF	; 255
    32c2:	78 80       	ld	r7, Y
    32c4:	c3 58       	subi	r28, 0x83	; 131
    32c6:	d0 40       	sbci	r29, 0x00	; 0
    32c8:	cc 57       	subi	r28, 0x7C	; 124
    32ca:	df 4f       	sbci	r29, 0xFF	; 255
    32cc:	68 80       	ld	r6, Y
    32ce:	c4 58       	subi	r28, 0x84	; 132
    32d0:	d0 40       	sbci	r29, 0x00	; 0
    32d2:	cb 57       	subi	r28, 0x7B	; 123
    32d4:	df 4f       	sbci	r29, 0xFF	; 255
    32d6:	58 80       	ld	r5, Y
    32d8:	c5 58       	subi	r28, 0x85	; 133
    32da:	d0 40       	sbci	r29, 0x00	; 0
    32dc:	ca 57       	subi	r28, 0x7A	; 122
    32de:	df 4f       	sbci	r29, 0xFF	; 255
    32e0:	48 80       	ld	r4, Y
    32e2:	c6 58       	subi	r28, 0x86	; 134
    32e4:	d0 40       	sbci	r29, 0x00	; 0
    32e6:	c9 57       	subi	r28, 0x79	; 121
    32e8:	df 4f       	sbci	r29, 0xFF	; 255
    32ea:	38 80       	ld	r3, Y
    32ec:	c7 58       	subi	r28, 0x87	; 135
    32ee:	d0 40       	sbci	r29, 0x00	; 0
    32f0:	c8 57       	subi	r28, 0x78	; 120
    32f2:	df 4f       	sbci	r29, 0xFF	; 255
    32f4:	28 80       	ld	r2, Y
    32f6:	c8 58       	subi	r28, 0x88	; 136
    32f8:	d0 40       	sbci	r29, 0x00	; 0
    32fa:	c7 57       	subi	r28, 0x77	; 119
    32fc:	df 4f       	sbci	r29, 0xFF	; 255
    32fe:	18 81       	ld	r17, Y
    3300:	c9 58       	subi	r28, 0x89	; 137
    3302:	d0 40       	sbci	r29, 0x00	; 0
    3304:	ca 52       	subi	r28, 0x2A	; 42
    3306:	df 4f       	sbci	r29, 0xFF	; 255
    3308:	18 83       	st	Y, r17
    330a:	c6 5d       	subi	r28, 0xD6	; 214
    330c:	d0 40       	sbci	r29, 0x00	; 0
    330e:	c6 57       	subi	r28, 0x76	; 118
    3310:	df 4f       	sbci	r29, 0xFF	; 255
    3312:	18 81       	ld	r17, Y
    3314:	ca 58       	subi	r28, 0x8A	; 138
    3316:	d0 40       	sbci	r29, 0x00	; 0
    3318:	c9 52       	subi	r28, 0x29	; 41
    331a:	df 4f       	sbci	r29, 0xFF	; 255
    331c:	18 83       	st	Y, r17
    331e:	c7 5d       	subi	r28, 0xD7	; 215
    3320:	d0 40       	sbci	r29, 0x00	; 0
    3322:	c5 57       	subi	r28, 0x75	; 117
    3324:	df 4f       	sbci	r29, 0xFF	; 255
    3326:	18 81       	ld	r17, Y
    3328:	cb 58       	subi	r28, 0x8B	; 139
    332a:	d0 40       	sbci	r29, 0x00	; 0
    332c:	c8 52       	subi	r28, 0x28	; 40
    332e:	df 4f       	sbci	r29, 0xFF	; 255
    3330:	18 83       	st	Y, r17
    3332:	c8 5d       	subi	r28, 0xD8	; 216
    3334:	d0 40       	sbci	r29, 0x00	; 0
    3336:	c4 57       	subi	r28, 0x74	; 116
    3338:	df 4f       	sbci	r29, 0xFF	; 255
    333a:	18 81       	ld	r17, Y
    333c:	cc 58       	subi	r28, 0x8C	; 140
    333e:	d0 40       	sbci	r29, 0x00	; 0
    3340:	c7 52       	subi	r28, 0x27	; 39
    3342:	df 4f       	sbci	r29, 0xFF	; 255
    3344:	18 83       	st	Y, r17
    3346:	c9 5d       	subi	r28, 0xD9	; 217
    3348:	d0 40       	sbci	r29, 0x00	; 0
    334a:	c3 57       	subi	r28, 0x73	; 115
    334c:	df 4f       	sbci	r29, 0xFF	; 255
    334e:	18 81       	ld	r17, Y
    3350:	cd 58       	subi	r28, 0x8D	; 141
    3352:	d0 40       	sbci	r29, 0x00	; 0
    3354:	c6 52       	subi	r28, 0x26	; 38
    3356:	df 4f       	sbci	r29, 0xFF	; 255
    3358:	18 83       	st	Y, r17
    335a:	ca 5d       	subi	r28, 0xDA	; 218
    335c:	d0 40       	sbci	r29, 0x00	; 0
    335e:	c2 57       	subi	r28, 0x72	; 114
    3360:	df 4f       	sbci	r29, 0xFF	; 255
    3362:	18 81       	ld	r17, Y
    3364:	ce 58       	subi	r28, 0x8E	; 142
    3366:	d0 40       	sbci	r29, 0x00	; 0
    3368:	c3 52       	subi	r28, 0x23	; 35
    336a:	df 4f       	sbci	r29, 0xFF	; 255
    336c:	18 83       	st	Y, r17
    336e:	cd 5d       	subi	r28, 0xDD	; 221
    3370:	d0 40       	sbci	r29, 0x00	; 0
    3372:	c1 57       	subi	r28, 0x71	; 113
    3374:	df 4f       	sbci	r29, 0xFF	; 255
    3376:	18 81       	ld	r17, Y
    3378:	cf 58       	subi	r28, 0x8F	; 143
    337a:	d0 40       	sbci	r29, 0x00	; 0
    337c:	c2 52       	subi	r28, 0x22	; 34
    337e:	df 4f       	sbci	r29, 0xFF	; 255
    3380:	18 83       	st	Y, r17
    3382:	ce 5d       	subi	r28, 0xDE	; 222
    3384:	d0 40       	sbci	r29, 0x00	; 0
    3386:	c0 57       	subi	r28, 0x70	; 112
    3388:	df 4f       	sbci	r29, 0xFF	; 255
    338a:	88 80       	ld	r8, Y
    338c:	c0 59       	subi	r28, 0x90	; 144
    338e:	d0 40       	sbci	r29, 0x00	; 0
    3390:	cf 56       	subi	r28, 0x6F	; 111
    3392:	df 4f       	sbci	r29, 0xFF	; 255
    3394:	18 81       	ld	r17, Y
    3396:	c1 59       	subi	r28, 0x91	; 145
    3398:	d0 40       	sbci	r29, 0x00	; 0
    339a:	c1 52       	subi	r28, 0x21	; 33
    339c:	df 4f       	sbci	r29, 0xFF	; 255
    339e:	18 83       	st	Y, r17
    33a0:	cf 5d       	subi	r28, 0xDF	; 223
    33a2:	d0 40       	sbci	r29, 0x00	; 0
    33a4:	ce 56       	subi	r28, 0x6E	; 110
    33a6:	df 4f       	sbci	r29, 0xFF	; 255
    33a8:	18 81       	ld	r17, Y
    33aa:	c2 59       	subi	r28, 0x92	; 146
    33ac:	d0 40       	sbci	r29, 0x00	; 0
    33ae:	c0 52       	subi	r28, 0x20	; 32
    33b0:	df 4f       	sbci	r29, 0xFF	; 255
    33b2:	18 83       	st	Y, r17
    33b4:	c0 5e       	subi	r28, 0xE0	; 224
    33b6:	d0 40       	sbci	r29, 0x00	; 0
    33b8:	cd 56       	subi	r28, 0x6D	; 109
    33ba:	df 4f       	sbci	r29, 0xFF	; 255
    33bc:	18 81       	ld	r17, Y
    33be:	c3 59       	subi	r28, 0x93	; 147
    33c0:	d0 40       	sbci	r29, 0x00	; 0
    33c2:	cf 51       	subi	r28, 0x1F	; 31
    33c4:	df 4f       	sbci	r29, 0xFF	; 255
    33c6:	18 83       	st	Y, r17
    33c8:	c1 5e       	subi	r28, 0xE1	; 225
    33ca:	d0 40       	sbci	r29, 0x00	; 0
    33cc:	cc 56       	subi	r28, 0x6C	; 108
    33ce:	df 4f       	sbci	r29, 0xFF	; 255
    33d0:	18 81       	ld	r17, Y
    33d2:	c4 59       	subi	r28, 0x94	; 148
    33d4:	d0 40       	sbci	r29, 0x00	; 0
    33d6:	ce 51       	subi	r28, 0x1E	; 30
    33d8:	df 4f       	sbci	r29, 0xFF	; 255
    33da:	18 83       	st	Y, r17
    33dc:	c2 5e       	subi	r28, 0xE2	; 226
    33de:	d0 40       	sbci	r29, 0x00	; 0
    33e0:	cb 56       	subi	r28, 0x6B	; 107
    33e2:	df 4f       	sbci	r29, 0xFF	; 255
    33e4:	18 81       	ld	r17, Y
    33e6:	c5 59       	subi	r28, 0x95	; 149
    33e8:	d0 40       	sbci	r29, 0x00	; 0
    33ea:	cd 51       	subi	r28, 0x1D	; 29
    33ec:	df 4f       	sbci	r29, 0xFF	; 255
    33ee:	18 83       	st	Y, r17
    33f0:	c3 5e       	subi	r28, 0xE3	; 227
    33f2:	d0 40       	sbci	r29, 0x00	; 0
    33f4:	ca 56       	subi	r28, 0x6A	; 106
    33f6:	df 4f       	sbci	r29, 0xFF	; 255
    33f8:	18 81       	ld	r17, Y
    33fa:	c6 59       	subi	r28, 0x96	; 150
    33fc:	d0 40       	sbci	r29, 0x00	; 0
    33fe:	cc 51       	subi	r28, 0x1C	; 28
    3400:	df 4f       	sbci	r29, 0xFF	; 255
    3402:	18 83       	st	Y, r17
    3404:	c4 5e       	subi	r28, 0xE4	; 228
    3406:	d0 40       	sbci	r29, 0x00	; 0
    3408:	c9 56       	subi	r28, 0x69	; 105
    340a:	df 4f       	sbci	r29, 0xFF	; 255
    340c:	18 81       	ld	r17, Y
    340e:	c7 59       	subi	r28, 0x97	; 151
    3410:	d0 40       	sbci	r29, 0x00	; 0
    3412:	cb 51       	subi	r28, 0x1B	; 27
    3414:	df 4f       	sbci	r29, 0xFF	; 255
    3416:	18 83       	st	Y, r17
    3418:	c5 5e       	subi	r28, 0xE5	; 229
    341a:	d0 40       	sbci	r29, 0x00	; 0
    341c:	c8 56       	subi	r28, 0x68	; 104
    341e:	df 4f       	sbci	r29, 0xFF	; 255
    3420:	98 80       	ld	r9, Y
    3422:	c8 59       	subi	r28, 0x98	; 152
    3424:	d0 40       	sbci	r29, 0x00	; 0
		memmove(&(a[1]), &(a[0]), 7*8);
    3426:	48 e3       	ldi	r20, 0x38	; 56
    3428:	50 e0       	ldi	r21, 0x00	; 0
    342a:	be 01       	movw	r22, r28
    342c:	6f 57       	subi	r22, 0x7F	; 127
    342e:	7f 4f       	sbci	r23, 0xFF	; 255
    3430:	c9 51       	subi	r28, 0x19	; 25
    3432:	df 4f       	sbci	r29, 0xFF	; 255
    3434:	88 81       	ld	r24, Y
    3436:	99 81       	ldd	r25, Y+1	; 0x01
    3438:	c7 5e       	subi	r28, 0xE7	; 231
    343a:	d0 40       	sbci	r29, 0x00	; 0
    343c:	fd d5       	rcall	.+3066   	; 0x4038 <memmove>
		a[0] = t1 + t2;
    343e:	2a 2d       	mov	r18, r10
    3440:	3b 2d       	mov	r19, r11
    3442:	47 2d       	mov	r20, r7
    3444:	56 2d       	mov	r21, r6
    3446:	65 2d       	mov	r22, r5
    3448:	74 2d       	mov	r23, r4
    344a:	83 2d       	mov	r24, r3
    344c:	92 2d       	mov	r25, r2
    344e:	0e e1       	ldi	r16, 0x1E	; 30
    3450:	8f d4       	rcall	.+2334   	; 0x3d70 <__rotldi3>
    3452:	d2 2e       	mov	r13, r18
    3454:	e3 2e       	mov	r14, r19
    3456:	f4 2e       	mov	r15, r20
    3458:	15 2f       	mov	r17, r21
    345a:	b6 2f       	mov	r27, r22
    345c:	e7 2f       	mov	r30, r23
    345e:	a8 2f       	mov	r26, r24
    3460:	f9 2f       	mov	r31, r25
    3462:	2a 2d       	mov	r18, r10
    3464:	3b 2d       	mov	r19, r11
    3466:	47 2d       	mov	r20, r7
    3468:	56 2d       	mov	r21, r6
    346a:	65 2d       	mov	r22, r5
    346c:	74 2d       	mov	r23, r4
    346e:	83 2d       	mov	r24, r3
    3470:	92 2d       	mov	r25, r2
    3472:	04 e2       	ldi	r16, 0x24	; 36
    3474:	7d d4       	rcall	.+2298   	; 0x3d70 <__rotldi3>
    3476:	d2 26       	eor	r13, r18
    3478:	e3 26       	eor	r14, r19
    347a:	f4 26       	eor	r15, r20
    347c:	15 27       	eor	r17, r21
    347e:	b6 27       	eor	r27, r22
    3480:	e7 27       	eor	r30, r23
    3482:	a8 27       	eor	r26, r24
    3484:	f9 27       	eor	r31, r25
    3486:	2a 2d       	mov	r18, r10
    3488:	3b 2d       	mov	r19, r11
    348a:	47 2d       	mov	r20, r7
    348c:	56 2d       	mov	r21, r6
    348e:	65 2d       	mov	r22, r5
    3490:	74 2d       	mov	r23, r4
    3492:	83 2d       	mov	r24, r3
    3494:	92 2d       	mov	r25, r2
    3496:	09 e1       	ldi	r16, 0x19	; 25
    3498:	6b d4       	rcall	.+2262   	; 0x3d70 <__rotldi3>
    349a:	2d 25       	eor	r18, r13
    349c:	3e 25       	eor	r19, r14
    349e:	4f 25       	eor	r20, r15
    34a0:	51 27       	eor	r21, r17
    34a2:	6b 27       	eor	r22, r27
    34a4:	7e 27       	eor	r23, r30
    34a6:	c1 52       	subi	r28, 0x21	; 33
    34a8:	df 4f       	sbci	r29, 0xFF	; 255
    34aa:	b8 81       	ld	r27, Y
    34ac:	cf 5d       	subi	r28, 0xDF	; 223
    34ae:	d0 40       	sbci	r29, 0x00	; 0
    34b0:	ca 52       	subi	r28, 0x2A	; 42
    34b2:	df 4f       	sbci	r29, 0xFF	; 255
    34b4:	18 81       	ld	r17, Y
    34b6:	c6 5d       	subi	r28, 0xD6	; 214
    34b8:	d0 40       	sbci	r29, 0x00	; 0
    34ba:	b1 27       	eor	r27, r17
    34bc:	c0 52       	subi	r28, 0x20	; 32
    34be:	df 4f       	sbci	r29, 0xFF	; 255
    34c0:	e8 81       	ld	r30, Y
    34c2:	c0 5e       	subi	r28, 0xE0	; 224
    34c4:	d0 40       	sbci	r29, 0x00	; 0
    34c6:	c9 52       	subi	r28, 0x29	; 41
    34c8:	df 4f       	sbci	r29, 0xFF	; 255
    34ca:	18 81       	ld	r17, Y
    34cc:	c7 5d       	subi	r28, 0xD7	; 215
    34ce:	d0 40       	sbci	r29, 0x00	; 0
    34d0:	e1 27       	eor	r30, r17
    34d2:	cf 51       	subi	r28, 0x1F	; 31
    34d4:	df 4f       	sbci	r29, 0xFF	; 255
    34d6:	c8 80       	ld	r12, Y
    34d8:	c1 5e       	subi	r28, 0xE1	; 225
    34da:	d0 40       	sbci	r29, 0x00	; 0
    34dc:	c8 52       	subi	r28, 0x28	; 40
    34de:	df 4f       	sbci	r29, 0xFF	; 255
    34e0:	18 81       	ld	r17, Y
    34e2:	c8 5d       	subi	r28, 0xD8	; 216
    34e4:	d0 40       	sbci	r29, 0x00	; 0
    34e6:	c1 26       	eor	r12, r17
    34e8:	ce 51       	subi	r28, 0x1E	; 30
    34ea:	df 4f       	sbci	r29, 0xFF	; 255
    34ec:	d8 80       	ld	r13, Y
    34ee:	c2 5e       	subi	r28, 0xE2	; 226
    34f0:	d0 40       	sbci	r29, 0x00	; 0
    34f2:	c7 52       	subi	r28, 0x27	; 39
    34f4:	df 4f       	sbci	r29, 0xFF	; 255
    34f6:	18 81       	ld	r17, Y
    34f8:	c9 5d       	subi	r28, 0xD9	; 217
    34fa:	d0 40       	sbci	r29, 0x00	; 0
    34fc:	d1 26       	eor	r13, r17
    34fe:	cd 51       	subi	r28, 0x1D	; 29
    3500:	df 4f       	sbci	r29, 0xFF	; 255
    3502:	e8 80       	ld	r14, Y
    3504:	c3 5e       	subi	r28, 0xE3	; 227
    3506:	d0 40       	sbci	r29, 0x00	; 0
    3508:	c6 52       	subi	r28, 0x26	; 38
    350a:	df 4f       	sbci	r29, 0xFF	; 255
    350c:	18 81       	ld	r17, Y
    350e:	ca 5d       	subi	r28, 0xDA	; 218
    3510:	d0 40       	sbci	r29, 0x00	; 0
    3512:	e1 26       	eor	r14, r17
    3514:	cc 51       	subi	r28, 0x1C	; 28
    3516:	df 4f       	sbci	r29, 0xFF	; 255
    3518:	f8 80       	ld	r15, Y
    351a:	c4 5e       	subi	r28, 0xE4	; 228
    351c:	d0 40       	sbci	r29, 0x00	; 0
    351e:	c3 52       	subi	r28, 0x23	; 35
    3520:	df 4f       	sbci	r29, 0xFF	; 255
    3522:	18 81       	ld	r17, Y
    3524:	cd 5d       	subi	r28, 0xDD	; 221
    3526:	d0 40       	sbci	r29, 0x00	; 0
    3528:	f1 26       	eor	r15, r17
    352a:	cb 51       	subi	r28, 0x1B	; 27
    352c:	df 4f       	sbci	r29, 0xFF	; 255
    352e:	08 81       	ld	r16, Y
    3530:	c5 5e       	subi	r28, 0xE5	; 229
    3532:	d0 40       	sbci	r29, 0x00	; 0
    3534:	c2 52       	subi	r28, 0x22	; 34
    3536:	df 4f       	sbci	r29, 0xFF	; 255
    3538:	18 81       	ld	r17, Y
    353a:	ce 5d       	subi	r28, 0xDE	; 222
    353c:	d0 40       	sbci	r29, 0x00	; 0
    353e:	01 27       	eor	r16, r17
    3540:	19 2d       	mov	r17, r9
    3542:	18 25       	eor	r17, r8
    3544:	ab 22       	and	r10, r27
    3546:	be 22       	and	r11, r30
    3548:	c7 20       	and	r12, r7
    354a:	d6 20       	and	r13, r6
    354c:	e5 20       	and	r14, r5
    354e:	f4 20       	and	r15, r4
    3550:	03 21       	and	r16, r3
    3552:	12 21       	and	r17, r2
    3554:	ca 52       	subi	r28, 0x2A	; 42
    3556:	df 4f       	sbci	r29, 0xFF	; 255
    3558:	e8 81       	ld	r30, Y
    355a:	c6 5d       	subi	r28, 0xD6	; 214
    355c:	d0 40       	sbci	r29, 0x00	; 0
    355e:	c1 52       	subi	r28, 0x21	; 33
    3560:	df 4f       	sbci	r29, 0xFF	; 255
    3562:	b8 81       	ld	r27, Y
    3564:	cf 5d       	subi	r28, 0xDF	; 223
    3566:	d0 40       	sbci	r29, 0x00	; 0
    3568:	eb 23       	and	r30, r27
    356a:	c9 52       	subi	r28, 0x29	; 41
    356c:	df 4f       	sbci	r29, 0xFF	; 255
    356e:	28 80       	ld	r2, Y
    3570:	c7 5d       	subi	r28, 0xD7	; 215
    3572:	d0 40       	sbci	r29, 0x00	; 0
    3574:	c0 52       	subi	r28, 0x20	; 32
    3576:	df 4f       	sbci	r29, 0xFF	; 255
    3578:	b8 81       	ld	r27, Y
    357a:	c0 5e       	subi	r28, 0xE0	; 224
    357c:	d0 40       	sbci	r29, 0x00	; 0
    357e:	2b 22       	and	r2, r27
    3580:	c8 52       	subi	r28, 0x28	; 40
    3582:	df 4f       	sbci	r29, 0xFF	; 255
    3584:	38 80       	ld	r3, Y
    3586:	c8 5d       	subi	r28, 0xD8	; 216
    3588:	d0 40       	sbci	r29, 0x00	; 0
    358a:	cf 51       	subi	r28, 0x1F	; 31
    358c:	df 4f       	sbci	r29, 0xFF	; 255
    358e:	b8 81       	ld	r27, Y
    3590:	c1 5e       	subi	r28, 0xE1	; 225
    3592:	d0 40       	sbci	r29, 0x00	; 0
    3594:	3b 22       	and	r3, r27
    3596:	c7 52       	subi	r28, 0x27	; 39
    3598:	df 4f       	sbci	r29, 0xFF	; 255
    359a:	48 80       	ld	r4, Y
    359c:	c9 5d       	subi	r28, 0xD9	; 217
    359e:	d0 40       	sbci	r29, 0x00	; 0
    35a0:	ce 51       	subi	r28, 0x1E	; 30
    35a2:	df 4f       	sbci	r29, 0xFF	; 255
    35a4:	b8 81       	ld	r27, Y
    35a6:	c2 5e       	subi	r28, 0xE2	; 226
    35a8:	d0 40       	sbci	r29, 0x00	; 0
    35aa:	4b 22       	and	r4, r27
    35ac:	c6 52       	subi	r28, 0x26	; 38
    35ae:	df 4f       	sbci	r29, 0xFF	; 255
    35b0:	58 80       	ld	r5, Y
    35b2:	ca 5d       	subi	r28, 0xDA	; 218
    35b4:	d0 40       	sbci	r29, 0x00	; 0
    35b6:	cd 51       	subi	r28, 0x1D	; 29
    35b8:	df 4f       	sbci	r29, 0xFF	; 255
    35ba:	b8 81       	ld	r27, Y
    35bc:	c3 5e       	subi	r28, 0xE3	; 227
    35be:	d0 40       	sbci	r29, 0x00	; 0
    35c0:	5b 22       	and	r5, r27
    35c2:	c3 52       	subi	r28, 0x23	; 35
    35c4:	df 4f       	sbci	r29, 0xFF	; 255
    35c6:	68 80       	ld	r6, Y
    35c8:	cd 5d       	subi	r28, 0xDD	; 221
    35ca:	d0 40       	sbci	r29, 0x00	; 0
    35cc:	cc 51       	subi	r28, 0x1C	; 28
    35ce:	df 4f       	sbci	r29, 0xFF	; 255
    35d0:	b8 81       	ld	r27, Y
    35d2:	c4 5e       	subi	r28, 0xE4	; 228
    35d4:	d0 40       	sbci	r29, 0x00	; 0
    35d6:	6b 22       	and	r6, r27
    35d8:	c2 52       	subi	r28, 0x22	; 34
    35da:	df 4f       	sbci	r29, 0xFF	; 255
    35dc:	78 80       	ld	r7, Y
    35de:	ce 5d       	subi	r28, 0xDE	; 222
    35e0:	d0 40       	sbci	r29, 0x00	; 0
    35e2:	cb 51       	subi	r28, 0x1B	; 27
    35e4:	df 4f       	sbci	r29, 0xFF	; 255
    35e6:	b8 81       	ld	r27, Y
    35e8:	c5 5e       	subi	r28, 0xE5	; 229
    35ea:	d0 40       	sbci	r29, 0x00	; 0
    35ec:	7b 22       	and	r7, r27
    35ee:	b8 2d       	mov	r27, r8
    35f0:	b9 21       	and	r27, r9
    35f2:	ae 26       	eor	r10, r30
    35f4:	b2 24       	eor	r11, r2
    35f6:	c3 24       	eor	r12, r3
    35f8:	d4 24       	eor	r13, r4
    35fa:	e5 24       	eor	r14, r5
    35fc:	f6 24       	eor	r15, r6
    35fe:	07 25       	eor	r16, r7
    3600:	1b 27       	eor	r17, r27
    3602:	8a 27       	eor	r24, r26
    3604:	9f 27       	eor	r25, r31
    3606:	cf d3       	rcall	.+1950   	; 0x3da6 <__adddi3>
    3608:	c5 53       	subi	r28, 0x35	; 53
    360a:	df 4f       	sbci	r29, 0xFF	; 255
    360c:	a8 80       	ld	r10, Y
    360e:	cb 5c       	subi	r28, 0xCB	; 203
    3610:	d0 40       	sbci	r29, 0x00	; 0
    3612:	c4 53       	subi	r28, 0x34	; 52
    3614:	df 4f       	sbci	r29, 0xFF	; 255
    3616:	b8 80       	ld	r11, Y
    3618:	cc 5c       	subi	r28, 0xCC	; 204
    361a:	d0 40       	sbci	r29, 0x00	; 0
    361c:	c3 53       	subi	r28, 0x33	; 51
    361e:	df 4f       	sbci	r29, 0xFF	; 255
    3620:	c8 80       	ld	r12, Y
    3622:	cd 5c       	subi	r28, 0xCD	; 205
    3624:	d0 40       	sbci	r29, 0x00	; 0
    3626:	c2 53       	subi	r28, 0x32	; 50
    3628:	df 4f       	sbci	r29, 0xFF	; 255
    362a:	d8 80       	ld	r13, Y
    362c:	ce 5c       	subi	r28, 0xCE	; 206
    362e:	d0 40       	sbci	r29, 0x00	; 0
    3630:	c1 53       	subi	r28, 0x31	; 49
    3632:	df 4f       	sbci	r29, 0xFF	; 255
    3634:	e8 80       	ld	r14, Y
    3636:	cf 5c       	subi	r28, 0xCF	; 207
    3638:	d0 40       	sbci	r29, 0x00	; 0
    363a:	cd 52       	subi	r28, 0x2D	; 45
    363c:	df 4f       	sbci	r29, 0xFF	; 255
    363e:	f8 80       	ld	r15, Y
    3640:	c3 5d       	subi	r28, 0xD3	; 211
    3642:	d0 40       	sbci	r29, 0x00	; 0
    3644:	cc 52       	subi	r28, 0x2C	; 44
    3646:	df 4f       	sbci	r29, 0xFF	; 255
    3648:	08 81       	ld	r16, Y
    364a:	c4 5d       	subi	r28, 0xD4	; 212
    364c:	d0 40       	sbci	r29, 0x00	; 0
    364e:	cb 52       	subi	r28, 0x2B	; 43
    3650:	df 4f       	sbci	r29, 0xFF	; 255
    3652:	18 81       	ld	r17, Y
    3654:	c5 5d       	subi	r28, 0xD5	; 213
    3656:	d0 40       	sbci	r29, 0x00	; 0
    3658:	a6 d3       	rcall	.+1868   	; 0x3da6 <__adddi3>
    365a:	cf 57       	subi	r28, 0x7F	; 127
    365c:	df 4f       	sbci	r29, 0xFF	; 255
    365e:	28 83       	st	Y, r18
    3660:	c1 58       	subi	r28, 0x81	; 129
    3662:	d0 40       	sbci	r29, 0x00	; 0
    3664:	ce 57       	subi	r28, 0x7E	; 126
    3666:	df 4f       	sbci	r29, 0xFF	; 255
    3668:	38 83       	st	Y, r19
    366a:	c2 58       	subi	r28, 0x82	; 130
    366c:	d0 40       	sbci	r29, 0x00	; 0
    366e:	cd 57       	subi	r28, 0x7D	; 125
    3670:	df 4f       	sbci	r29, 0xFF	; 255
    3672:	48 83       	st	Y, r20
    3674:	c3 58       	subi	r28, 0x83	; 131
    3676:	d0 40       	sbci	r29, 0x00	; 0
    3678:	cc 57       	subi	r28, 0x7C	; 124
    367a:	df 4f       	sbci	r29, 0xFF	; 255
    367c:	58 83       	st	Y, r21
    367e:	c4 58       	subi	r28, 0x84	; 132
    3680:	d0 40       	sbci	r29, 0x00	; 0
    3682:	cb 57       	subi	r28, 0x7B	; 123
    3684:	df 4f       	sbci	r29, 0xFF	; 255
    3686:	68 83       	st	Y, r22
    3688:	c5 58       	subi	r28, 0x85	; 133
    368a:	d0 40       	sbci	r29, 0x00	; 0
    368c:	ca 57       	subi	r28, 0x7A	; 122
    368e:	df 4f       	sbci	r29, 0xFF	; 255
    3690:	78 83       	st	Y, r23
    3692:	c6 58       	subi	r28, 0x86	; 134
    3694:	d0 40       	sbci	r29, 0x00	; 0
    3696:	c9 57       	subi	r28, 0x79	; 121
    3698:	df 4f       	sbci	r29, 0xFF	; 255
    369a:	88 83       	st	Y, r24
    369c:	c7 58       	subi	r28, 0x87	; 135
    369e:	d0 40       	sbci	r29, 0x00	; 0
    36a0:	c8 57       	subi	r28, 0x78	; 120
    36a2:	df 4f       	sbci	r29, 0xFF	; 255
    36a4:	98 83       	st	Y, r25
    36a6:	c8 58       	subi	r28, 0x88	; 136
    36a8:	d0 40       	sbci	r29, 0x00	; 0
		a[4] += t1;
    36aa:	2a 2d       	mov	r18, r10
    36ac:	3b 2d       	mov	r19, r11
    36ae:	4c 2d       	mov	r20, r12
    36b0:	5d 2d       	mov	r21, r13
    36b2:	6e 2d       	mov	r22, r14
    36b4:	7f 2d       	mov	r23, r15
    36b6:	80 2f       	mov	r24, r16
    36b8:	91 2f       	mov	r25, r17
    36ba:	cf 55       	subi	r28, 0x5F	; 95
    36bc:	df 4f       	sbci	r29, 0xFF	; 255
    36be:	a8 80       	ld	r10, Y
    36c0:	c1 5a       	subi	r28, 0xA1	; 161
    36c2:	d0 40       	sbci	r29, 0x00	; 0
    36c4:	ce 55       	subi	r28, 0x5E	; 94
    36c6:	df 4f       	sbci	r29, 0xFF	; 255
    36c8:	b8 80       	ld	r11, Y
    36ca:	c2 5a       	subi	r28, 0xA2	; 162
    36cc:	d0 40       	sbci	r29, 0x00	; 0
    36ce:	cd 55       	subi	r28, 0x5D	; 93
    36d0:	df 4f       	sbci	r29, 0xFF	; 255
    36d2:	c8 80       	ld	r12, Y
    36d4:	c3 5a       	subi	r28, 0xA3	; 163
    36d6:	d0 40       	sbci	r29, 0x00	; 0
    36d8:	cc 55       	subi	r28, 0x5C	; 92
    36da:	df 4f       	sbci	r29, 0xFF	; 255
    36dc:	d8 80       	ld	r13, Y
    36de:	c4 5a       	subi	r28, 0xA4	; 164
    36e0:	d0 40       	sbci	r29, 0x00	; 0
    36e2:	cb 55       	subi	r28, 0x5B	; 91
    36e4:	df 4f       	sbci	r29, 0xFF	; 255
    36e6:	e8 80       	ld	r14, Y
    36e8:	c5 5a       	subi	r28, 0xA5	; 165
    36ea:	d0 40       	sbci	r29, 0x00	; 0
    36ec:	ca 55       	subi	r28, 0x5A	; 90
    36ee:	df 4f       	sbci	r29, 0xFF	; 255
    36f0:	f8 80       	ld	r15, Y
    36f2:	c6 5a       	subi	r28, 0xA6	; 166
    36f4:	d0 40       	sbci	r29, 0x00	; 0
    36f6:	c9 55       	subi	r28, 0x59	; 89
    36f8:	df 4f       	sbci	r29, 0xFF	; 255
    36fa:	08 81       	ld	r16, Y
    36fc:	c7 5a       	subi	r28, 0xA7	; 167
    36fe:	d0 40       	sbci	r29, 0x00	; 0
    3700:	c8 55       	subi	r28, 0x58	; 88
    3702:	df 4f       	sbci	r29, 0xFF	; 255
    3704:	18 81       	ld	r17, Y
    3706:	c8 5a       	subi	r28, 0xA8	; 168
    3708:	d0 40       	sbci	r29, 0x00	; 0
    370a:	4d d3       	rcall	.+1690   	; 0x3da6 <__adddi3>
    370c:	cf 55       	subi	r28, 0x5F	; 95
    370e:	df 4f       	sbci	r29, 0xFF	; 255
    3710:	28 83       	st	Y, r18
    3712:	c1 5a       	subi	r28, 0xA1	; 161
    3714:	d0 40       	sbci	r29, 0x00	; 0
    3716:	ce 55       	subi	r28, 0x5E	; 94
    3718:	df 4f       	sbci	r29, 0xFF	; 255
    371a:	38 83       	st	Y, r19
    371c:	c2 5a       	subi	r28, 0xA2	; 162
    371e:	d0 40       	sbci	r29, 0x00	; 0
    3720:	cd 55       	subi	r28, 0x5D	; 93
    3722:	df 4f       	sbci	r29, 0xFF	; 255
    3724:	48 83       	st	Y, r20
    3726:	c3 5a       	subi	r28, 0xA3	; 163
    3728:	d0 40       	sbci	r29, 0x00	; 0
    372a:	cc 55       	subi	r28, 0x5C	; 92
    372c:	df 4f       	sbci	r29, 0xFF	; 255
    372e:	58 83       	st	Y, r21
    3730:	c4 5a       	subi	r28, 0xA4	; 164
    3732:	d0 40       	sbci	r29, 0x00	; 0
    3734:	cb 55       	subi	r28, 0x5B	; 91
    3736:	df 4f       	sbci	r29, 0xFF	; 255
    3738:	68 83       	st	Y, r22
    373a:	c5 5a       	subi	r28, 0xA5	; 165
    373c:	d0 40       	sbci	r29, 0x00	; 0
    373e:	ca 55       	subi	r28, 0x5A	; 90
    3740:	df 4f       	sbci	r29, 0xFF	; 255
    3742:	78 83       	st	Y, r23
    3744:	c6 5a       	subi	r28, 0xA6	; 166
    3746:	d0 40       	sbci	r29, 0x00	; 0
    3748:	c9 55       	subi	r28, 0x59	; 89
    374a:	df 4f       	sbci	r29, 0xFF	; 255
    374c:	88 83       	st	Y, r24
    374e:	c7 5a       	subi	r28, 0xA7	; 167
    3750:	d0 40       	sbci	r29, 0x00	; 0
    3752:	c8 55       	subi	r28, 0x58	; 88
    3754:	df 4f       	sbci	r29, 0xFF	; 255
    3756:	98 83       	st	Y, r25
    3758:	c8 5a       	subi	r28, 0xA8	; 168
    375a:	d0 40       	sbci	r29, 0x00	; 0
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
		block = (uint8_t*)block + 8;
	}while(--i);
	memcpy(a, ctx->h, 8*8);
	for(i=0; i<80; ++i){
    375c:	c0 53       	subi	r28, 0x30	; 48
    375e:	df 4f       	sbci	r29, 0xFF	; 255
    3760:	e8 81       	ld	r30, Y
    3762:	c0 5d       	subi	r28, 0xD0	; 208
    3764:	d0 40       	sbci	r29, 0x00	; 0
    3766:	ef 5f       	subi	r30, 0xFF	; 255
    3768:	c0 53       	subi	r28, 0x30	; 48
    376a:	df 4f       	sbci	r29, 0xFF	; 255
    376c:	e8 83       	st	Y, r30
    376e:	c0 5d       	subi	r28, 0xD0	; 208
    3770:	d0 40       	sbci	r29, 0x00	; 0
    3772:	c5 52       	subi	r28, 0x25	; 37
    3774:	df 4f       	sbci	r29, 0xFF	; 255
    3776:	88 81       	ld	r24, Y
    3778:	99 81       	ldd	r25, Y+1	; 0x01
    377a:	cb 5d       	subi	r28, 0xDB	; 219
    377c:	d0 40       	sbci	r29, 0x00	; 0
    377e:	08 96       	adiw	r24, 0x08	; 8
    3780:	c5 52       	subi	r28, 0x25	; 37
    3782:	df 4f       	sbci	r29, 0xFF	; 255
    3784:	99 83       	std	Y+1, r25	; 0x01
    3786:	88 83       	st	Y, r24
    3788:	cb 5d       	subi	r28, 0xDB	; 219
    378a:	d0 40       	sbci	r29, 0x00	; 0
    378c:	cf 52       	subi	r28, 0x2F	; 47
    378e:	df 4f       	sbci	r29, 0xFF	; 255
    3790:	a8 81       	ld	r26, Y
    3792:	b9 81       	ldd	r27, Y+1	; 0x01
    3794:	c1 5d       	subi	r28, 0xD1	; 209
    3796:	d0 40       	sbci	r29, 0x00	; 0
    3798:	18 96       	adiw	r26, 0x08	; 8
    379a:	cf 52       	subi	r28, 0x2F	; 47
    379c:	df 4f       	sbci	r29, 0xFF	; 255
    379e:	b9 83       	std	Y+1, r27	; 0x01
    37a0:	a8 83       	st	Y, r26
    37a2:	c1 5d       	subi	r28, 0xD1	; 209
    37a4:	d0 40       	sbci	r29, 0x00	; 0
    37a6:	e0 35       	cpi	r30, 0x50	; 80
    37a8:	09 f0       	breq	.+2      	; 0x37ac <sha2_large_common_nextBlock+0xfd2>
    37aa:	f9 c8       	rjmp	.-3598   	; 0x299e <sha2_large_common_nextBlock+0x1c4>
    37ac:	0f 2e       	mov	r0, r31
    37ae:	f7 e0       	ldi	r31, 0x07	; 7
    37b0:	9f 2e       	mov	r9, r31
    37b2:	f0 2d       	mov	r31, r0
		a[0] = t1 + t2;
		a[4] += t1;
	}
	i=7;
	do{
		ctx->h[i] += a[i];
    37b4:	79 2c       	mov	r7, r9
    37b6:	c7 51       	subi	r28, 0x17	; 23
    37b8:	df 4f       	sbci	r29, 0xFF	; 255
    37ba:	88 80       	ld	r8, Y
    37bc:	99 80       	ldd	r9, Y+1	; 0x01
    37be:	c9 5e       	subi	r28, 0xE9	; 233
    37c0:	d0 40       	sbci	r29, 0x00	; 0
    37c2:	a7 2d       	mov	r26, r7
    37c4:	b0 e0       	ldi	r27, 0x00	; 0
    37c6:	aa 0f       	add	r26, r26
    37c8:	bb 1f       	adc	r27, r27
    37ca:	aa 0f       	add	r26, r26
    37cc:	bb 1f       	adc	r27, r27
    37ce:	aa 0f       	add	r26, r26
    37d0:	bb 1f       	adc	r27, r27
    37d2:	f4 01       	movw	r30, r8
    37d4:	ea 0f       	add	r30, r26
    37d6:	fb 1f       	adc	r31, r27
    37d8:	81 e8       	ldi	r24, 0x81	; 129
    37da:	90 e0       	ldi	r25, 0x00	; 0
    37dc:	8c 0f       	add	r24, r28
    37de:	9d 1f       	adc	r25, r29
    37e0:	a8 0f       	add	r26, r24
    37e2:	b9 1f       	adc	r27, r25
    37e4:	20 81       	ld	r18, Z
    37e6:	31 81       	ldd	r19, Z+1	; 0x01
    37e8:	42 81       	ldd	r20, Z+2	; 0x02
    37ea:	53 81       	ldd	r21, Z+3	; 0x03
    37ec:	64 81       	ldd	r22, Z+4	; 0x04
    37ee:	75 81       	ldd	r23, Z+5	; 0x05
    37f0:	86 81       	ldd	r24, Z+6	; 0x06
    37f2:	97 81       	ldd	r25, Z+7	; 0x07
    37f4:	ac 90       	ld	r10, X
    37f6:	11 96       	adiw	r26, 0x01	; 1
    37f8:	bc 90       	ld	r11, X
    37fa:	11 97       	sbiw	r26, 0x01	; 1
    37fc:	12 96       	adiw	r26, 0x02	; 2
    37fe:	cc 90       	ld	r12, X
    3800:	12 97       	sbiw	r26, 0x02	; 2
    3802:	13 96       	adiw	r26, 0x03	; 3
    3804:	dc 90       	ld	r13, X
    3806:	13 97       	sbiw	r26, 0x03	; 3
    3808:	14 96       	adiw	r26, 0x04	; 4
    380a:	ec 90       	ld	r14, X
    380c:	14 97       	sbiw	r26, 0x04	; 4
    380e:	15 96       	adiw	r26, 0x05	; 5
    3810:	fc 90       	ld	r15, X
    3812:	15 97       	sbiw	r26, 0x05	; 5
    3814:	16 96       	adiw	r26, 0x06	; 6
    3816:	0c 91       	ld	r16, X
    3818:	16 97       	sbiw	r26, 0x06	; 6
    381a:	17 96       	adiw	r26, 0x07	; 7
    381c:	1c 91       	ld	r17, X
    381e:	c3 d2       	rcall	.+1414   	; 0x3da6 <__adddi3>
    3820:	20 83       	st	Z, r18
    3822:	31 83       	std	Z+1, r19	; 0x01
    3824:	42 83       	std	Z+2, r20	; 0x02
    3826:	53 83       	std	Z+3, r21	; 0x03
    3828:	64 83       	std	Z+4, r22	; 0x04
    382a:	75 83       	std	Z+5, r23	; 0x05
    382c:	86 83       	std	Z+6, r24	; 0x06
    382e:	97 83       	std	Z+7, r25	; 0x07
	}while(i--);
    3830:	7a 94       	dec	r7
    3832:	9f ef       	ldi	r25, 0xFF	; 255
    3834:	79 12       	cpse	r7, r25
    3836:	c5 cf       	rjmp	.-118    	; 0x37c2 <sha2_large_common_nextBlock+0xfe8>
	ctx->length += 1;
    3838:	c7 51       	subi	r28, 0x17	; 23
    383a:	df 4f       	sbci	r29, 0xFF	; 255
    383c:	e8 81       	ld	r30, Y
    383e:	f9 81       	ldd	r31, Y+1	; 0x01
    3840:	c9 5e       	subi	r28, 0xE9	; 233
    3842:	d0 40       	sbci	r29, 0x00	; 0
    3844:	e0 5c       	subi	r30, 0xC0	; 192
    3846:	ff 4f       	sbci	r31, 0xFF	; 255
    3848:	80 81       	ld	r24, Z
    384a:	91 81       	ldd	r25, Z+1	; 0x01
    384c:	a2 81       	ldd	r26, Z+2	; 0x02
    384e:	b3 81       	ldd	r27, Z+3	; 0x03
    3850:	01 96       	adiw	r24, 0x01	; 1
    3852:	a1 1d       	adc	r26, r1
    3854:	b1 1d       	adc	r27, r1
    3856:	80 83       	st	Z, r24
    3858:	91 83       	std	Z+1, r25	; 0x01
    385a:	a2 83       	std	Z+2, r26	; 0x02
    385c:	b3 83       	std	Z+3, r27	; 0x03
}
    385e:	c6 51       	subi	r28, 0x16	; 22
    3860:	df 4f       	sbci	r29, 0xFF	; 255
    3862:	0f b6       	in	r0, 0x3f	; 63
    3864:	f8 94       	cli
    3866:	de bf       	out	0x3e, r29	; 62
    3868:	0f be       	out	0x3f, r0	; 63
    386a:	cd bf       	out	0x3d, r28	; 61
    386c:	df 91       	pop	r29
    386e:	cf 91       	pop	r28
    3870:	1f 91       	pop	r17
    3872:	0f 91       	pop	r16
    3874:	ff 90       	pop	r15
    3876:	ef 90       	pop	r14
    3878:	df 90       	pop	r13
    387a:	cf 90       	pop	r12
    387c:	bf 90       	pop	r11
    387e:	af 90       	pop	r10
    3880:	9f 90       	pop	r9
    3882:	8f 90       	pop	r8
    3884:	7f 90       	pop	r7
    3886:	6f 90       	pop	r6
    3888:	5f 90       	pop	r5
    388a:	4f 90       	pop	r4
    388c:	3f 90       	pop	r3
    388e:	2f 90       	pop	r2
    3890:	08 95       	ret

00003892 <sha2_large_common_lastBlock>:

void sha2_large_common_lastBlock(sha2_large_common_ctx_t *ctx, const void *block, uint16_t length_b){
    3892:	2f 92       	push	r2
    3894:	3f 92       	push	r3
    3896:	4f 92       	push	r4
    3898:	5f 92       	push	r5
    389a:	6f 92       	push	r6
    389c:	7f 92       	push	r7
    389e:	8f 92       	push	r8
    38a0:	9f 92       	push	r9
    38a2:	af 92       	push	r10
    38a4:	bf 92       	push	r11
    38a6:	cf 92       	push	r12
    38a8:	df 92       	push	r13
    38aa:	ef 92       	push	r14
    38ac:	ff 92       	push	r15
    38ae:	0f 93       	push	r16
    38b0:	1f 93       	push	r17
    38b2:	cf 93       	push	r28
    38b4:	df 93       	push	r29
    38b6:	cd b7       	in	r28, 0x3d	; 61
    38b8:	de b7       	in	r29, 0x3e	; 62
    38ba:	cc 58       	subi	r28, 0x8C	; 140
    38bc:	d1 09       	sbc	r29, r1
    38be:	0f b6       	in	r0, 0x3f	; 63
    38c0:	f8 94       	cli
    38c2:	de bf       	out	0x3e, r29	; 62
    38c4:	0f be       	out	0x3f, r0	; 63
    38c6:	cd bf       	out	0x3d, r28	; 61
    38c8:	cf 57       	subi	r28, 0x7F	; 127
    38ca:	df 4f       	sbci	r29, 0xFF	; 255
    38cc:	99 83       	std	Y+1, r25	; 0x01
    38ce:	88 83       	st	Y, r24
    38d0:	c1 58       	subi	r28, 0x81	; 129
    38d2:	d0 40       	sbci	r29, 0x00	; 0
    38d4:	c5 57       	subi	r28, 0x75	; 117
    38d6:	df 4f       	sbci	r29, 0xFF	; 255
    38d8:	79 83       	std	Y+1, r23	; 0x01
    38da:	68 83       	st	Y, r22
    38dc:	cb 58       	subi	r28, 0x8B	; 139
    38de:	d0 40       	sbci	r29, 0x00	; 0
    38e0:	4a 01       	movw	r8, r20
	while(length_b >= 1024){
    38e2:	41 15       	cp	r20, r1
    38e4:	24 e0       	ldi	r18, 0x04	; 4
    38e6:	52 07       	cpc	r21, r18
    38e8:	78 f1       	brcs	.+94     	; 0x3948 <sha2_large_common_lastBlock+0xb6>
    38ea:	7a 01       	movw	r14, r20
    38ec:	8b 01       	movw	r16, r22
		sha2_large_common_nextBlock(ctx, block);
    38ee:	b8 01       	movw	r22, r16
    38f0:	cf 57       	subi	r28, 0x7F	; 127
    38f2:	df 4f       	sbci	r29, 0xFF	; 255
    38f4:	88 81       	ld	r24, Y
    38f6:	99 81       	ldd	r25, Y+1	; 0x01
    38f8:	c1 58       	subi	r28, 0x81	; 129
    38fa:	d0 40       	sbci	r29, 0x00	; 0
    38fc:	0e 94 ed 13 	call	0x27da	; 0x27da <sha2_large_common_nextBlock>
		block = (uint8_t*)block + 1024/8;
    3900:	00 58       	subi	r16, 0x80	; 128
    3902:	1f 4f       	sbci	r17, 0xFF	; 255
		length_b -= 1024;
    3904:	34 e0       	ldi	r19, 0x04	; 4
    3906:	f3 1a       	sub	r15, r19
	}while(i--);
	ctx->length += 1;
}

void sha2_large_common_lastBlock(sha2_large_common_ctx_t *ctx, const void *block, uint16_t length_b){
	while(length_b >= 1024){
    3908:	e1 14       	cp	r14, r1
    390a:	84 e0       	ldi	r24, 0x04	; 4
    390c:	f8 06       	cpc	r15, r24
    390e:	78 f7       	brcc	.-34     	; 0x38ee <sha2_large_common_lastBlock+0x5c>
    3910:	c4 01       	movw	r24, r8
    3912:	94 50       	subi	r25, 0x04	; 4
    3914:	89 2f       	mov	r24, r25
    3916:	99 27       	eor	r25, r25
    3918:	86 95       	lsr	r24
    391a:	86 95       	lsr	r24
    391c:	01 96       	adiw	r24, 0x01	; 1
    391e:	96 95       	lsr	r25
    3920:	98 2f       	mov	r25, r24
    3922:	88 27       	eor	r24, r24
    3924:	97 95       	ror	r25
    3926:	87 95       	ror	r24
    3928:	c5 57       	subi	r28, 0x75	; 117
    392a:	df 4f       	sbci	r29, 0xFF	; 255
    392c:	e8 81       	ld	r30, Y
    392e:	f9 81       	ldd	r31, Y+1	; 0x01
    3930:	cb 58       	subi	r28, 0x8B	; 139
    3932:	d0 40       	sbci	r29, 0x00	; 0
    3934:	e8 0f       	add	r30, r24
    3936:	f9 1f       	adc	r31, r25
    3938:	c5 57       	subi	r28, 0x75	; 117
    393a:	df 4f       	sbci	r29, 0xFF	; 255
    393c:	f9 83       	std	Y+1, r31	; 0x01
    393e:	e8 83       	st	Y, r30
    3940:	cb 58       	subi	r28, 0x8B	; 139
    3942:	d0 40       	sbci	r29, 0x00	; 0
    3944:	f3 e0       	ldi	r31, 0x03	; 3
    3946:	9f 22       	and	r9, r31
		block = (uint8_t*)block + 1024/8;
		length_b -= 1024;
	}
	uint8_t buffer[1024/8];
	uint64_t len;
	len = ((uint64_t)ctx->length)*1024LL + length_b;
    3948:	cf 57       	subi	r28, 0x7F	; 127
    394a:	df 4f       	sbci	r29, 0xFF	; 255
    394c:	e8 81       	ld	r30, Y
    394e:	f9 81       	ldd	r31, Y+1	; 0x01
    3950:	c1 58       	subi	r28, 0x81	; 129
    3952:	d0 40       	sbci	r29, 0x00	; 0
    3954:	e0 5c       	subi	r30, 0xC0	; 192
    3956:	ff 4f       	sbci	r31, 0xFF	; 255
    3958:	80 81       	ld	r24, Z
    395a:	91 81       	ldd	r25, Z+1	; 0x01
    395c:	a2 81       	ldd	r26, Z+2	; 0x02
    395e:	b3 81       	ldd	r27, Z+3	; 0x03
    3960:	5c 01       	movw	r10, r24
    3962:	6d 01       	movw	r12, r26
    3964:	28 2f       	mov	r18, r24
    3966:	3b 2d       	mov	r19, r11
    3968:	4c 2d       	mov	r20, r12
    396a:	5d 2d       	mov	r21, r13
    396c:	60 e0       	ldi	r22, 0x00	; 0
    396e:	70 e0       	ldi	r23, 0x00	; 0
    3970:	80 e0       	ldi	r24, 0x00	; 0
    3972:	90 e0       	ldi	r25, 0x00	; 0
    3974:	0a e0       	ldi	r16, 0x0A	; 10
    3976:	c5 d1       	rcall	.+906    	; 0x3d02 <__ashldi3>
    3978:	54 01       	movw	r10, r8
    397a:	c1 2c       	mov	r12, r1
    397c:	d1 2c       	mov	r13, r1
    397e:	e1 2c       	mov	r14, r1
    3980:	f1 2c       	mov	r15, r1
    3982:	87 01       	movw	r16, r14
    3984:	cd 57       	subi	r28, 0x7D	; 125
    3986:	df 4f       	sbci	r29, 0xFF	; 255
    3988:	88 82       	st	Y, r8
    398a:	c3 58       	subi	r28, 0x83	; 131
    398c:	d0 40       	sbci	r29, 0x00	; 0
    398e:	cc 57       	subi	r28, 0x7C	; 124
    3990:	df 4f       	sbci	r29, 0xFF	; 255
    3992:	b8 82       	st	Y, r11
    3994:	c4 58       	subi	r28, 0x84	; 132
    3996:	d0 40       	sbci	r29, 0x00	; 0
    3998:	cb 57       	subi	r28, 0x7B	; 123
    399a:	df 4f       	sbci	r29, 0xFF	; 255
    399c:	c8 82       	st	Y, r12
    399e:	c5 58       	subi	r28, 0x85	; 133
    39a0:	d0 40       	sbci	r29, 0x00	; 0
    39a2:	ca 57       	subi	r28, 0x7A	; 122
    39a4:	df 4f       	sbci	r29, 0xFF	; 255
    39a6:	d8 82       	st	Y, r13
    39a8:	c6 58       	subi	r28, 0x86	; 134
    39aa:	d0 40       	sbci	r29, 0x00	; 0
    39ac:	c9 57       	subi	r28, 0x79	; 121
    39ae:	df 4f       	sbci	r29, 0xFF	; 255
    39b0:	e8 82       	st	Y, r14
    39b2:	c7 58       	subi	r28, 0x87	; 135
    39b4:	d0 40       	sbci	r29, 0x00	; 0
    39b6:	c8 57       	subi	r28, 0x78	; 120
    39b8:	df 4f       	sbci	r29, 0xFF	; 255
    39ba:	f8 82       	st	Y, r15
    39bc:	c8 58       	subi	r28, 0x88	; 136
    39be:	d0 40       	sbci	r29, 0x00	; 0
    39c0:	c7 57       	subi	r28, 0x77	; 119
    39c2:	df 4f       	sbci	r29, 0xFF	; 255
    39c4:	08 83       	st	Y, r16
    39c6:	c9 58       	subi	r28, 0x89	; 137
    39c8:	d0 40       	sbci	r29, 0x00	; 0
    39ca:	c6 57       	subi	r28, 0x76	; 118
    39cc:	df 4f       	sbci	r29, 0xFF	; 255
    39ce:	18 83       	st	Y, r17
    39d0:	ca 58       	subi	r28, 0x8A	; 138
    39d2:	d0 40       	sbci	r29, 0x00	; 0
    39d4:	c1 2c       	mov	r12, r1
    39d6:	d1 2c       	mov	r13, r1
    39d8:	e1 2c       	mov	r14, r1
    39da:	f1 2c       	mov	r15, r1
    39dc:	00 e0       	ldi	r16, 0x00	; 0
    39de:	10 e0       	ldi	r17, 0x00	; 0
    39e0:	e2 d1       	rcall	.+964    	; 0x3da6 <__adddi3>
    39e2:	e2 2f       	mov	r30, r18
    39e4:	a3 2e       	mov	r10, r19
    39e6:	b4 2e       	mov	r11, r20
    39e8:	b5 2f       	mov	r27, r21
    39ea:	a6 2f       	mov	r26, r22
    39ec:	f7 2f       	mov	r31, r23
    39ee:	28 2e       	mov	r2, r24
    39f0:	39 2e       	mov	r3, r25
    39f2:	68 94       	set
    39f4:	44 24       	eor	r4, r4
    39f6:	43 f8       	bld	r4, 3
};


static const
uint64_t change_endian64(uint64_t x){
	uint64_t r=0;
    39f8:	71 2c       	mov	r7, r1
    39fa:	51 2c       	mov	r5, r1
    39fc:	61 2c       	mov	r6, r1
	uint8_t i=8;
	do{
		r <<= 8;
    39fe:	27 2d       	mov	r18, r7
    3a00:	3c 2d       	mov	r19, r12
    3a02:	4d 2d       	mov	r20, r13
    3a04:	5e 2d       	mov	r21, r14
    3a06:	6f 2d       	mov	r22, r15
    3a08:	71 2f       	mov	r23, r17
    3a0a:	85 2d       	mov	r24, r5
    3a0c:	96 2d       	mov	r25, r6
    3a0e:	08 e0       	ldi	r16, 0x08	; 8
    3a10:	78 d1       	rcall	.+752    	; 0x3d02 <__ashldi3>
		r |= 0xff&x;
    3a12:	7e 2e       	mov	r7, r30
    3a14:	72 2a       	or	r7, r18
    3a16:	c3 2e       	mov	r12, r19
    3a18:	d4 2e       	mov	r13, r20
    3a1a:	e5 2e       	mov	r14, r21
    3a1c:	f6 2e       	mov	r15, r22
    3a1e:	17 2f       	mov	r17, r23
    3a20:	58 2e       	mov	r5, r24
    3a22:	69 2e       	mov	r6, r25
		x >>=8;
    3a24:	2e 2f       	mov	r18, r30
    3a26:	3a 2d       	mov	r19, r10
    3a28:	4b 2d       	mov	r20, r11
    3a2a:	5b 2f       	mov	r21, r27
    3a2c:	6a 2f       	mov	r22, r26
    3a2e:	7f 2f       	mov	r23, r31
    3a30:	82 2d       	mov	r24, r2
    3a32:	93 2d       	mov	r25, r3
    3a34:	81 d1       	rcall	.+770    	; 0x3d38 <__lshrdi3>
    3a36:	e2 2f       	mov	r30, r18
    3a38:	a3 2e       	mov	r10, r19
    3a3a:	b4 2e       	mov	r11, r20
    3a3c:	b5 2f       	mov	r27, r21
    3a3e:	a6 2f       	mov	r26, r22
    3a40:	f7 2f       	mov	r31, r23
    3a42:	28 2e       	mov	r2, r24
    3a44:	39 2e       	mov	r3, r25
    3a46:	4a 94       	dec	r4
	}while(--i);
    3a48:	41 10       	cpse	r4, r1
    3a4a:	d9 cf       	rjmp	.-78     	; 0x39fe <sha2_large_common_lastBlock+0x16c>
	}
	uint8_t buffer[1024/8];
	uint64_t len;
	len = ((uint64_t)ctx->length)*1024LL + length_b;
	len = change_endian64(len);
	memset(buffer, 0, 1024/8);
    3a4c:	9e 01       	movw	r18, r28
    3a4e:	2f 5f       	subi	r18, 0xFF	; 255
    3a50:	3f 4f       	sbci	r19, 0xFF	; 255
    3a52:	59 01       	movw	r10, r18
    3a54:	80 e8       	ldi	r24, 0x80	; 128
    3a56:	f9 01       	movw	r30, r18
    3a58:	11 92       	st	Z+, r1
    3a5a:	8a 95       	dec	r24
    3a5c:	e9 f7       	brne	.-6      	; 0x3a58 <sha2_large_common_lastBlock+0x1c6>
	memcpy(buffer, block, (length_b+7)/8);
    3a5e:	a4 01       	movw	r20, r8
    3a60:	49 5f       	subi	r20, 0xF9	; 249
    3a62:	5f 4f       	sbci	r21, 0xFF	; 255
    3a64:	56 95       	lsr	r21
    3a66:	47 95       	ror	r20
    3a68:	56 95       	lsr	r21
    3a6a:	47 95       	ror	r20
    3a6c:	56 95       	lsr	r21
    3a6e:	47 95       	ror	r20
    3a70:	c5 57       	subi	r28, 0x75	; 117
    3a72:	df 4f       	sbci	r29, 0xFF	; 255
    3a74:	68 81       	ld	r22, Y
    3a76:	79 81       	ldd	r23, Y+1	; 0x01
    3a78:	cb 58       	subi	r28, 0x8B	; 139
    3a7a:	d0 40       	sbci	r29, 0x00	; 0
    3a7c:	c9 01       	movw	r24, r18
    3a7e:	d3 d2       	rcall	.+1446   	; 0x4026 <memcpy>
	buffer[length_b/8] |= 0x80>>(length_b%8);
    3a80:	f4 01       	movw	r30, r8
    3a82:	f6 95       	lsr	r31
    3a84:	e7 95       	ror	r30
    3a86:	f6 95       	lsr	r31
    3a88:	e7 95       	ror	r30
    3a8a:	f6 95       	lsr	r31
    3a8c:	e7 95       	ror	r30
    3a8e:	ea 0d       	add	r30, r10
    3a90:	fb 1d       	adc	r31, r11
    3a92:	94 01       	movw	r18, r8
    3a94:	27 70       	andi	r18, 0x07	; 7
    3a96:	33 27       	eor	r19, r19
    3a98:	80 e8       	ldi	r24, 0x80	; 128
    3a9a:	90 e0       	ldi	r25, 0x00	; 0
    3a9c:	02 c0       	rjmp	.+4      	; 0x3aa2 <sha2_large_common_lastBlock+0x210>
    3a9e:	95 95       	asr	r25
    3aa0:	87 95       	ror	r24
    3aa2:	2a 95       	dec	r18
    3aa4:	e2 f7       	brpl	.-8      	; 0x3a9e <sha2_large_common_lastBlock+0x20c>
    3aa6:	90 81       	ld	r25, Z
    3aa8:	89 2b       	or	r24, r25
    3aaa:	80 83       	st	Z, r24
	if(length_b>1024-128-1){
    3aac:	f0 e8       	ldi	r31, 0x80	; 128
    3aae:	8f 16       	cp	r8, r31
    3ab0:	f3 e0       	ldi	r31, 0x03	; 3
    3ab2:	9f 06       	cpc	r9, r31
    3ab4:	70 f0       	brcs	.+28     	; 0x3ad2 <sha2_large_common_lastBlock+0x240>
		/* length goes into the next block */
		sha2_large_common_nextBlock(ctx, buffer);
    3ab6:	b5 01       	movw	r22, r10
    3ab8:	cf 57       	subi	r28, 0x7F	; 127
    3aba:	df 4f       	sbci	r29, 0xFF	; 255
    3abc:	88 81       	ld	r24, Y
    3abe:	99 81       	ldd	r25, Y+1	; 0x01
    3ac0:	c1 58       	subi	r28, 0x81	; 129
    3ac2:	d0 40       	sbci	r29, 0x00	; 0
    3ac4:	0e 94 ed 13 	call	0x27da	; 0x27da <sha2_large_common_nextBlock>
		memset(buffer, 0, 120);
    3ac8:	88 e7       	ldi	r24, 0x78	; 120
    3aca:	f5 01       	movw	r30, r10
    3acc:	11 92       	st	Z+, r1
    3ace:	8a 95       	dec	r24
    3ad0:	e9 f7       	brne	.-6      	; 0x3acc <sha2_large_common_lastBlock+0x23a>
	}
	memcpy(&(buffer[128-8]), &len, 8);
    3ad2:	ea 96       	adiw	r28, 0x3a	; 58
    3ad4:	7f ae       	std	Y+63, r7	; 0x3f
    3ad6:	ea 97       	sbiw	r28, 0x3a	; 58
    3ad8:	eb 96       	adiw	r28, 0x3b	; 59
    3ada:	cf ae       	std	Y+63, r12	; 0x3f
    3adc:	eb 97       	sbiw	r28, 0x3b	; 59
    3ade:	ec 96       	adiw	r28, 0x3c	; 60
    3ae0:	df ae       	std	Y+63, r13	; 0x3f
    3ae2:	ec 97       	sbiw	r28, 0x3c	; 60
    3ae4:	ed 96       	adiw	r28, 0x3d	; 61
    3ae6:	ef ae       	std	Y+63, r14	; 0x3f
    3ae8:	ed 97       	sbiw	r28, 0x3d	; 61
    3aea:	ee 96       	adiw	r28, 0x3e	; 62
    3aec:	ff ae       	std	Y+63, r15	; 0x3f
    3aee:	ee 97       	sbiw	r28, 0x3e	; 62
    3af0:	ef 96       	adiw	r28, 0x3f	; 63
    3af2:	1f af       	std	Y+63, r17	; 0x3f
    3af4:	ef 97       	sbiw	r28, 0x3f	; 63
    3af6:	c1 58       	subi	r28, 0x81	; 129
    3af8:	df 4f       	sbci	r29, 0xFF	; 255
    3afa:	58 82       	st	Y, r5
    3afc:	cf 57       	subi	r28, 0x7F	; 127
    3afe:	d0 40       	sbci	r29, 0x00	; 0
    3b00:	c0 58       	subi	r28, 0x80	; 128
    3b02:	df 4f       	sbci	r29, 0xFF	; 255
    3b04:	68 82       	st	Y, r6
    3b06:	c0 58       	subi	r28, 0x80	; 128
    3b08:	d0 40       	sbci	r29, 0x00	; 0
	sha2_large_common_nextBlock(ctx, buffer);
    3b0a:	be 01       	movw	r22, r28
    3b0c:	6f 5f       	subi	r22, 0xFF	; 255
    3b0e:	7f 4f       	sbci	r23, 0xFF	; 255
    3b10:	cf 57       	subi	r28, 0x7F	; 127
    3b12:	df 4f       	sbci	r29, 0xFF	; 255
    3b14:	88 81       	ld	r24, Y
    3b16:	99 81       	ldd	r25, Y+1	; 0x01
    3b18:	c1 58       	subi	r28, 0x81	; 129
    3b1a:	d0 40       	sbci	r29, 0x00	; 0
    3b1c:	0e 94 ed 13 	call	0x27da	; 0x27da <sha2_large_common_nextBlock>
}
    3b20:	c4 57       	subi	r28, 0x74	; 116
    3b22:	df 4f       	sbci	r29, 0xFF	; 255
    3b24:	0f b6       	in	r0, 0x3f	; 63
    3b26:	f8 94       	cli
    3b28:	de bf       	out	0x3e, r29	; 62
    3b2a:	0f be       	out	0x3f, r0	; 63
    3b2c:	cd bf       	out	0x3d, r28	; 61
    3b2e:	df 91       	pop	r29
    3b30:	cf 91       	pop	r28
    3b32:	1f 91       	pop	r17
    3b34:	0f 91       	pop	r16
    3b36:	ff 90       	pop	r15
    3b38:	ef 90       	pop	r14
    3b3a:	df 90       	pop	r13
    3b3c:	cf 90       	pop	r12
    3b3e:	bf 90       	pop	r11
    3b40:	af 90       	pop	r10
    3b42:	9f 90       	pop	r9
    3b44:	8f 90       	pop	r8
    3b46:	7f 90       	pop	r7
    3b48:	6f 90       	pop	r6
    3b4a:	5f 90       	pop	r5
    3b4c:	4f 90       	pop	r4
    3b4e:	3f 90       	pop	r3
    3b50:	2f 90       	pop	r2
    3b52:	08 95       	ret

00003b54 <sha512_init>:
0x510e527fade682d1LL, 0x9b05688c2b3e6c1fLL, 0x1f83d9abfb41bd6bLL, 0x5be0cd19137e2179LL
};


void sha512_init(sha512_ctx_t *ctx){
	ctx->length = 0;
    3b54:	fc 01       	movw	r30, r24
    3b56:	e0 5c       	subi	r30, 0xC0	; 192
    3b58:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5a:	10 82       	st	Z, r1
    3b5c:	11 82       	std	Z+1, r1	; 0x01
    3b5e:	12 82       	std	Z+2, r1	; 0x02
    3b60:	13 82       	std	Z+3, r1	; 0x03
	memcpy_P(ctx->h, sha512_init_values, 8*8);
    3b62:	40 e4       	ldi	r20, 0x40	; 64
    3b64:	50 e0       	ldi	r21, 0x00	; 0
    3b66:	64 e1       	ldi	r22, 0x14	; 20
    3b68:	73 e0       	ldi	r23, 0x03	; 3
    3b6a:	47 c2       	rjmp	.+1166   	; 0x3ffa <memcpy_P>
    3b6c:	08 95       	ret

00003b6e <sha512_ctx2hash>:
}

void sha512_ctx2hash(void *dest, const sha512_ctx_t *ctx){
    3b6e:	cf 93       	push	r28
    3b70:	df 93       	push	r29
    3b72:	ac 01       	movw	r20, r24
    3b74:	ec 01       	movw	r28, r24
    3b76:	c0 5c       	subi	r28, 0xC0	; 192
    3b78:	df 4f       	sbci	r29, 0xFF	; 255
    3b7a:	fa 01       	movw	r30, r20
	uint8_t i=8, j, *s = (uint8_t*)(ctx->h);
	do{
		j=7;
    3b7c:	97 e0       	ldi	r25, 0x07	; 7
		do{
			*((uint8_t*)dest) = s[j];
    3b7e:	db 01       	movw	r26, r22
    3b80:	a9 0f       	add	r26, r25
    3b82:	b1 1d       	adc	r27, r1
    3b84:	2c 91       	ld	r18, X
    3b86:	21 93       	st	Z+, r18
			dest = (uint8_t*)dest + 1;
		}while(j--);
    3b88:	91 50       	subi	r25, 0x01	; 1
    3b8a:	c8 f7       	brcc	.-14     	; 0x3b7e <sha512_ctx2hash+0x10>
    3b8c:	48 5f       	subi	r20, 0xF8	; 248
    3b8e:	5f 4f       	sbci	r21, 0xFF	; 255
		s += 8;
    3b90:	68 5f       	subi	r22, 0xF8	; 248
    3b92:	7f 4f       	sbci	r23, 0xFF	; 255
	}while(--i);
    3b94:	4c 17       	cp	r20, r28
    3b96:	5d 07       	cpc	r21, r29
    3b98:	81 f7       	brne	.-32     	; 0x3b7a <sha512_ctx2hash+0xc>
}
    3b9a:	df 91       	pop	r29
    3b9c:	cf 91       	pop	r28
    3b9e:	08 95       	ret

00003ba0 <sha512>:


void sha512(void *dest, const void *msg, uint32_t length_b){
    3ba0:	4f 92       	push	r4
    3ba2:	5f 92       	push	r5
    3ba4:	6f 92       	push	r6
    3ba6:	7f 92       	push	r7
    3ba8:	8f 92       	push	r8
    3baa:	9f 92       	push	r9
    3bac:	af 92       	push	r10
    3bae:	bf 92       	push	r11
    3bb0:	cf 92       	push	r12
    3bb2:	df 92       	push	r13
    3bb4:	ef 92       	push	r14
    3bb6:	ff 92       	push	r15
    3bb8:	0f 93       	push	r16
    3bba:	1f 93       	push	r17
    3bbc:	cf 93       	push	r28
    3bbe:	df 93       	push	r29
    3bc0:	cd b7       	in	r28, 0x3d	; 61
    3bc2:	de b7       	in	r29, 0x3e	; 62
    3bc4:	c4 54       	subi	r28, 0x44	; 68
    3bc6:	d1 09       	sbc	r29, r1
    3bc8:	0f b6       	in	r0, 0x3f	; 63
    3bca:	f8 94       	cli
    3bcc:	de bf       	out	0x3e, r29	; 62
    3bce:	0f be       	out	0x3f, r0	; 63
    3bd0:	cd bf       	out	0x3d, r28	; 61
    3bd2:	4c 01       	movw	r8, r24
    3bd4:	5b 01       	movw	r10, r22
    3bd6:	69 01       	movw	r12, r18
    3bd8:	7a 01       	movw	r14, r20
	sha512_ctx_t ctx;
	sha512_init(&ctx);
    3bda:	ce 01       	movw	r24, r28
    3bdc:	01 96       	adiw	r24, 0x01	; 1
    3bde:	ba df       	rcall	.-140    	; 0x3b54 <sha512_init>
	while(length_b >= 1024){
    3be0:	c1 14       	cp	r12, r1
    3be2:	84 e0       	ldi	r24, 0x04	; 4
    3be4:	d8 06       	cpc	r13, r24
    3be6:	e1 04       	cpc	r14, r1
    3be8:	f1 04       	cpc	r15, r1
    3bea:	70 f1       	brcs	.+92     	; 0x3c48 <sha512+0xa8>
    3bec:	26 01       	movw	r4, r12
    3bee:	37 01       	movw	r6, r14
    3bf0:	85 01       	movw	r16, r10
#include "sha2_large_common.h"
#include "sha512.h"


void sha512_nextBlock (sha512_ctx_t *ctx, const void *block){
	sha2_large_common_nextBlock(ctx, block);
    3bf2:	b8 01       	movw	r22, r16
    3bf4:	ce 01       	movw	r24, r28
    3bf6:	01 96       	adiw	r24, 0x01	; 1
    3bf8:	0e 94 ed 13 	call	0x27da	; 0x27da <sha2_large_common_nextBlock>
void sha512(void *dest, const void *msg, uint32_t length_b){
	sha512_ctx_t ctx;
	sha512_init(&ctx);
	while(length_b >= 1024){
		sha512_nextBlock(&ctx, msg);
		msg = (uint8_t*)msg + 1024/8;
    3bfc:	00 58       	subi	r16, 0x80	; 128
    3bfe:	1f 4f       	sbci	r17, 0xFF	; 255
		length_b -= 1024;
    3c00:	84 e0       	ldi	r24, 0x04	; 4
    3c02:	58 1a       	sub	r5, r24
    3c04:	61 08       	sbc	r6, r1
    3c06:	71 08       	sbc	r7, r1


void sha512(void *dest, const void *msg, uint32_t length_b){
	sha512_ctx_t ctx;
	sha512_init(&ctx);
	while(length_b >= 1024){
    3c08:	41 14       	cp	r4, r1
    3c0a:	84 e0       	ldi	r24, 0x04	; 4
    3c0c:	58 06       	cpc	r5, r24
    3c0e:	61 04       	cpc	r6, r1
    3c10:	71 04       	cpc	r7, r1
    3c12:	78 f7       	brcc	.-34     	; 0x3bf2 <sha512+0x52>
    3c14:	d7 01       	movw	r26, r14
    3c16:	c6 01       	movw	r24, r12
    3c18:	94 50       	subi	r25, 0x04	; 4
    3c1a:	a1 09       	sbc	r26, r1
    3c1c:	b1 09       	sbc	r27, r1
    3c1e:	07 2e       	mov	r0, r23
    3c20:	7a e0       	ldi	r23, 0x0A	; 10
    3c22:	b6 95       	lsr	r27
    3c24:	a7 95       	ror	r26
    3c26:	97 95       	ror	r25
    3c28:	87 95       	ror	r24
    3c2a:	7a 95       	dec	r23
    3c2c:	d1 f7       	brne	.-12     	; 0x3c22 <sha512+0x82>
    3c2e:	70 2d       	mov	r23, r0
    3c30:	01 96       	adiw	r24, 0x01	; 1
    3c32:	96 95       	lsr	r25
    3c34:	98 2f       	mov	r25, r24
    3c36:	88 27       	eor	r24, r24
    3c38:	97 95       	ror	r25
    3c3a:	87 95       	ror	r24
    3c3c:	a8 0e       	add	r10, r24
    3c3e:	b9 1e       	adc	r11, r25
    3c40:	83 e0       	ldi	r24, 0x03	; 3
    3c42:	d8 22       	and	r13, r24
    3c44:	ee 24       	eor	r14, r14
    3c46:	ff 24       	eor	r15, r15
void sha512_nextBlock (sha512_ctx_t *ctx, const void *block){
	sha2_large_common_nextBlock(ctx, block);
}

void sha512_lastBlock(sha512_ctx_t *ctx, const void *block, uint16_t length_b){
	sha2_large_common_lastBlock(ctx, block, length_b);
    3c48:	a6 01       	movw	r20, r12
    3c4a:	b5 01       	movw	r22, r10
    3c4c:	ce 01       	movw	r24, r28
    3c4e:	01 96       	adiw	r24, 0x01	; 1
    3c50:	20 de       	rcall	.-960    	; 0x3892 <sha2_large_common_lastBlock>
		sha512_nextBlock(&ctx, msg);
		msg = (uint8_t*)msg + 1024/8;
		length_b -= 1024;
	}
	sha512_lastBlock(&ctx, msg, length_b);
	sha512_ctx2hash(dest, &ctx);
    3c52:	be 01       	movw	r22, r28
    3c54:	6f 5f       	subi	r22, 0xFF	; 255
    3c56:	7f 4f       	sbci	r23, 0xFF	; 255
    3c58:	c4 01       	movw	r24, r8
    3c5a:	89 df       	rcall	.-238    	; 0x3b6e <sha512_ctx2hash>
}
    3c5c:	cc 5b       	subi	r28, 0xBC	; 188
    3c5e:	df 4f       	sbci	r29, 0xFF	; 255
    3c60:	0f b6       	in	r0, 0x3f	; 63
    3c62:	f8 94       	cli
    3c64:	de bf       	out	0x3e, r29	; 62
    3c66:	0f be       	out	0x3f, r0	; 63
    3c68:	cd bf       	out	0x3d, r28	; 61
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	1f 91       	pop	r17
    3c70:	0f 91       	pop	r16
    3c72:	ff 90       	pop	r15
    3c74:	ef 90       	pop	r14
    3c76:	df 90       	pop	r13
    3c78:	cf 90       	pop	r12
    3c7a:	bf 90       	pop	r11
    3c7c:	af 90       	pop	r10
    3c7e:	9f 90       	pop	r9
    3c80:	8f 90       	pop	r8
    3c82:	7f 90       	pop	r7
    3c84:	6f 90       	pop	r6
    3c86:	5f 90       	pop	r5
    3c88:	4f 90       	pop	r4
    3c8a:	08 95       	ret

00003c8c <uart_init>:
#include <avr/io.h>
#include <string.h>
#include "uart_f.h"

void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    3c8c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    3c90:	83 e3       	ldi	r24, 0x33	; 51
    3c92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    3c96:	8e e0       	ldi	r24, 0x0E	; 14
    3c98:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    3c9c:	88 e1       	ldi	r24, 0x18	; 24
    3c9e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    3ca2:	08 95       	ret

00003ca4 <uart_puts>:
}

void uart_puts(char* s){
    3ca4:	cf 93       	push	r28
    3ca6:	df 93       	push	r29
	int i;
	int len = strlen(s);
    3ca8:	fc 01       	movw	r30, r24
    3caa:	01 90       	ld	r0, Z+
    3cac:	00 20       	and	r0, r0
    3cae:	e9 f7       	brne	.-6      	; 0x3caa <uart_puts+0x6>
    3cb0:	31 97       	sbiw	r30, 0x01	; 1
    3cb2:	e8 1b       	sub	r30, r24
    3cb4:	f9 0b       	sbc	r31, r25
	for (i = 0; i < len; i++){
    3cb6:	1e 16       	cp	r1, r30
    3cb8:	1f 06       	cpc	r1, r31
    3cba:	84 f4       	brge	.+32     	; 0x3cdc <uart_puts+0x38>
    3cbc:	dc 01       	movw	r26, r24
    3cbe:	9c 01       	movw	r18, r24
    3cc0:	2e 0f       	add	r18, r30
    3cc2:	3f 1f       	adc	r19, r31
		while(!( UCSR0A & 0X20));
    3cc4:	e0 ec       	ldi	r30, 0xC0	; 192
    3cc6:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=s[i];
    3cc8:	c6 ec       	ldi	r28, 0xC6	; 198
    3cca:	d0 e0       	ldi	r29, 0x00	; 0

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
		while(!( UCSR0A & 0X20));
    3ccc:	90 81       	ld	r25, Z
    3cce:	95 ff       	sbrs	r25, 5
    3cd0:	fd cf       	rjmp	.-6      	; 0x3ccc <uart_puts+0x28>
		UDR0=s[i];
    3cd2:	9d 91       	ld	r25, X+
    3cd4:	98 83       	st	Y, r25
}

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    3cd6:	a2 17       	cp	r26, r18
    3cd8:	b3 07       	cpc	r27, r19
    3cda:	c1 f7       	brne	.-16     	; 0x3ccc <uart_puts+0x28>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20));
    3cdc:	e0 ec       	ldi	r30, 0xC0	; 192
    3cde:	f0 e0       	ldi	r31, 0x00	; 0
    3ce0:	80 81       	ld	r24, Z
    3ce2:	85 ff       	sbrs	r24, 5
    3ce4:	fd cf       	rjmp	.-6      	; 0x3ce0 <uart_puts+0x3c>
	UDR0 = 13;
    3ce6:	8d e0       	ldi	r24, 0x0D	; 13
    3ce8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    3cec:	e0 ec       	ldi	r30, 0xC0	; 192
    3cee:	f0 e0       	ldi	r31, 0x00	; 0
    3cf0:	80 81       	ld	r24, Z
    3cf2:	85 ff       	sbrs	r24, 5
    3cf4:	fd cf       	rjmp	.-6      	; 0x3cf0 <uart_puts+0x4c>
	UDR0 = 10;
    3cf6:	8a e0       	ldi	r24, 0x0A	; 10
    3cf8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    3cfc:	df 91       	pop	r29
    3cfe:	cf 91       	pop	r28
    3d00:	08 95       	ret

00003d02 <__ashldi3>:
    3d02:	0f 93       	push	r16
    3d04:	08 30       	cpi	r16, 0x08	; 8
    3d06:	90 f0       	brcs	.+36     	; 0x3d2c <__ashldi3+0x2a>
    3d08:	98 2f       	mov	r25, r24
    3d0a:	87 2f       	mov	r24, r23
    3d0c:	76 2f       	mov	r23, r22
    3d0e:	65 2f       	mov	r22, r21
    3d10:	54 2f       	mov	r21, r20
    3d12:	43 2f       	mov	r20, r19
    3d14:	32 2f       	mov	r19, r18
    3d16:	22 27       	eor	r18, r18
    3d18:	08 50       	subi	r16, 0x08	; 8
    3d1a:	f4 cf       	rjmp	.-24     	; 0x3d04 <__ashldi3+0x2>
    3d1c:	22 0f       	add	r18, r18
    3d1e:	33 1f       	adc	r19, r19
    3d20:	44 1f       	adc	r20, r20
    3d22:	55 1f       	adc	r21, r21
    3d24:	66 1f       	adc	r22, r22
    3d26:	77 1f       	adc	r23, r23
    3d28:	88 1f       	adc	r24, r24
    3d2a:	99 1f       	adc	r25, r25
    3d2c:	0a 95       	dec	r16
    3d2e:	b2 f7       	brpl	.-20     	; 0x3d1c <__ashldi3+0x1a>
    3d30:	0f 91       	pop	r16
    3d32:	08 95       	ret

00003d34 <__ashrdi3>:
    3d34:	97 fb       	bst	r25, 7
    3d36:	10 f8       	bld	r1, 0

00003d38 <__lshrdi3>:
    3d38:	16 94       	lsr	r1
    3d3a:	00 08       	sbc	r0, r0
    3d3c:	0f 93       	push	r16
    3d3e:	08 30       	cpi	r16, 0x08	; 8
    3d40:	98 f0       	brcs	.+38     	; 0x3d68 <__lshrdi3+0x30>
    3d42:	08 50       	subi	r16, 0x08	; 8
    3d44:	23 2f       	mov	r18, r19
    3d46:	34 2f       	mov	r19, r20
    3d48:	45 2f       	mov	r20, r21
    3d4a:	56 2f       	mov	r21, r22
    3d4c:	67 2f       	mov	r22, r23
    3d4e:	78 2f       	mov	r23, r24
    3d50:	89 2f       	mov	r24, r25
    3d52:	90 2d       	mov	r25, r0
    3d54:	f4 cf       	rjmp	.-24     	; 0x3d3e <__lshrdi3+0x6>
    3d56:	05 94       	asr	r0
    3d58:	97 95       	ror	r25
    3d5a:	87 95       	ror	r24
    3d5c:	77 95       	ror	r23
    3d5e:	67 95       	ror	r22
    3d60:	57 95       	ror	r21
    3d62:	47 95       	ror	r20
    3d64:	37 95       	ror	r19
    3d66:	27 95       	ror	r18
    3d68:	0a 95       	dec	r16
    3d6a:	aa f7       	brpl	.-22     	; 0x3d56 <__lshrdi3+0x1e>
    3d6c:	0f 91       	pop	r16
    3d6e:	08 95       	ret

00003d70 <__rotldi3>:
    3d70:	0f 93       	push	r16
    3d72:	08 30       	cpi	r16, 0x08	; 8
    3d74:	a0 f0       	brcs	.+40     	; 0x3d9e <__rotldi3+0x2e>
    3d76:	08 50       	subi	r16, 0x08	; 8
    3d78:	09 2e       	mov	r0, r25
    3d7a:	98 2f       	mov	r25, r24
    3d7c:	87 2f       	mov	r24, r23
    3d7e:	76 2f       	mov	r23, r22
    3d80:	65 2f       	mov	r22, r21
    3d82:	54 2f       	mov	r21, r20
    3d84:	43 2f       	mov	r20, r19
    3d86:	32 2f       	mov	r19, r18
    3d88:	20 2d       	mov	r18, r0
    3d8a:	f3 cf       	rjmp	.-26     	; 0x3d72 <__rotldi3+0x2>
    3d8c:	22 0f       	add	r18, r18
    3d8e:	33 1f       	adc	r19, r19
    3d90:	44 1f       	adc	r20, r20
    3d92:	55 1f       	adc	r21, r21
    3d94:	66 1f       	adc	r22, r22
    3d96:	77 1f       	adc	r23, r23
    3d98:	88 1f       	adc	r24, r24
    3d9a:	99 1f       	adc	r25, r25
    3d9c:	21 1d       	adc	r18, r1
    3d9e:	0a 95       	dec	r16
    3da0:	aa f7       	brpl	.-22     	; 0x3d8c <__rotldi3+0x1c>
    3da2:	0f 91       	pop	r16
    3da4:	08 95       	ret

00003da6 <__adddi3>:
    3da6:	2a 0d       	add	r18, r10
    3da8:	3b 1d       	adc	r19, r11
    3daa:	4c 1d       	adc	r20, r12
    3dac:	5d 1d       	adc	r21, r13
    3dae:	6e 1d       	adc	r22, r14
    3db0:	7f 1d       	adc	r23, r15
    3db2:	80 1f       	adc	r24, r16
    3db4:	91 1f       	adc	r25, r17
    3db6:	08 95       	ret

00003db8 <malloc>:
    3db8:	0f 93       	push	r16
    3dba:	1f 93       	push	r17
    3dbc:	cf 93       	push	r28
    3dbe:	df 93       	push	r29
    3dc0:	82 30       	cpi	r24, 0x02	; 2
    3dc2:	91 05       	cpc	r25, r1
    3dc4:	10 f4       	brcc	.+4      	; 0x3dca <malloc+0x12>
    3dc6:	82 e0       	ldi	r24, 0x02	; 2
    3dc8:	90 e0       	ldi	r25, 0x00	; 0
    3dca:	e0 91 0d 05 	lds	r30, 0x050D	; 0x80050d <__flp>
    3dce:	f0 91 0e 05 	lds	r31, 0x050E	; 0x80050e <__flp+0x1>
    3dd2:	20 e0       	ldi	r18, 0x00	; 0
    3dd4:	30 e0       	ldi	r19, 0x00	; 0
    3dd6:	a0 e0       	ldi	r26, 0x00	; 0
    3dd8:	b0 e0       	ldi	r27, 0x00	; 0
    3dda:	30 97       	sbiw	r30, 0x00	; 0
    3ddc:	19 f1       	breq	.+70     	; 0x3e24 <malloc+0x6c>
    3dde:	40 81       	ld	r20, Z
    3de0:	51 81       	ldd	r21, Z+1	; 0x01
    3de2:	02 81       	ldd	r16, Z+2	; 0x02
    3de4:	13 81       	ldd	r17, Z+3	; 0x03
    3de6:	48 17       	cp	r20, r24
    3de8:	59 07       	cpc	r21, r25
    3dea:	c8 f0       	brcs	.+50     	; 0x3e1e <malloc+0x66>
    3dec:	84 17       	cp	r24, r20
    3dee:	95 07       	cpc	r25, r21
    3df0:	69 f4       	brne	.+26     	; 0x3e0c <malloc+0x54>
    3df2:	10 97       	sbiw	r26, 0x00	; 0
    3df4:	31 f0       	breq	.+12     	; 0x3e02 <malloc+0x4a>
    3df6:	12 96       	adiw	r26, 0x02	; 2
    3df8:	0c 93       	st	X, r16
    3dfa:	12 97       	sbiw	r26, 0x02	; 2
    3dfc:	13 96       	adiw	r26, 0x03	; 3
    3dfe:	1c 93       	st	X, r17
    3e00:	27 c0       	rjmp	.+78     	; 0x3e50 <malloc+0x98>
    3e02:	00 93 0d 05 	sts	0x050D, r16	; 0x80050d <__flp>
    3e06:	10 93 0e 05 	sts	0x050E, r17	; 0x80050e <__flp+0x1>
    3e0a:	22 c0       	rjmp	.+68     	; 0x3e50 <malloc+0x98>
    3e0c:	21 15       	cp	r18, r1
    3e0e:	31 05       	cpc	r19, r1
    3e10:	19 f0       	breq	.+6      	; 0x3e18 <malloc+0x60>
    3e12:	42 17       	cp	r20, r18
    3e14:	53 07       	cpc	r21, r19
    3e16:	18 f4       	brcc	.+6      	; 0x3e1e <malloc+0x66>
    3e18:	9a 01       	movw	r18, r20
    3e1a:	bd 01       	movw	r22, r26
    3e1c:	ef 01       	movw	r28, r30
    3e1e:	df 01       	movw	r26, r30
    3e20:	f8 01       	movw	r30, r16
    3e22:	db cf       	rjmp	.-74     	; 0x3dda <malloc+0x22>
    3e24:	21 15       	cp	r18, r1
    3e26:	31 05       	cpc	r19, r1
    3e28:	f9 f0       	breq	.+62     	; 0x3e68 <malloc+0xb0>
    3e2a:	28 1b       	sub	r18, r24
    3e2c:	39 0b       	sbc	r19, r25
    3e2e:	24 30       	cpi	r18, 0x04	; 4
    3e30:	31 05       	cpc	r19, r1
    3e32:	80 f4       	brcc	.+32     	; 0x3e54 <malloc+0x9c>
    3e34:	8a 81       	ldd	r24, Y+2	; 0x02
    3e36:	9b 81       	ldd	r25, Y+3	; 0x03
    3e38:	61 15       	cp	r22, r1
    3e3a:	71 05       	cpc	r23, r1
    3e3c:	21 f0       	breq	.+8      	; 0x3e46 <malloc+0x8e>
    3e3e:	fb 01       	movw	r30, r22
    3e40:	93 83       	std	Z+3, r25	; 0x03
    3e42:	82 83       	std	Z+2, r24	; 0x02
    3e44:	04 c0       	rjmp	.+8      	; 0x3e4e <malloc+0x96>
    3e46:	90 93 0e 05 	sts	0x050E, r25	; 0x80050e <__flp+0x1>
    3e4a:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <__flp>
    3e4e:	fe 01       	movw	r30, r28
    3e50:	32 96       	adiw	r30, 0x02	; 2
    3e52:	44 c0       	rjmp	.+136    	; 0x3edc <malloc+0x124>
    3e54:	fe 01       	movw	r30, r28
    3e56:	e2 0f       	add	r30, r18
    3e58:	f3 1f       	adc	r31, r19
    3e5a:	81 93       	st	Z+, r24
    3e5c:	91 93       	st	Z+, r25
    3e5e:	22 50       	subi	r18, 0x02	; 2
    3e60:	31 09       	sbc	r19, r1
    3e62:	39 83       	std	Y+1, r19	; 0x01
    3e64:	28 83       	st	Y, r18
    3e66:	3a c0       	rjmp	.+116    	; 0x3edc <malloc+0x124>
    3e68:	20 91 0b 05 	lds	r18, 0x050B	; 0x80050b <__brkval>
    3e6c:	30 91 0c 05 	lds	r19, 0x050C	; 0x80050c <__brkval+0x1>
    3e70:	23 2b       	or	r18, r19
    3e72:	41 f4       	brne	.+16     	; 0x3e84 <malloc+0xcc>
    3e74:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    3e78:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    3e7c:	30 93 0c 05 	sts	0x050C, r19	; 0x80050c <__brkval+0x1>
    3e80:	20 93 0b 05 	sts	0x050B, r18	; 0x80050b <__brkval>
    3e84:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    3e88:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    3e8c:	21 15       	cp	r18, r1
    3e8e:	31 05       	cpc	r19, r1
    3e90:	41 f4       	brne	.+16     	; 0x3ea2 <malloc+0xea>
    3e92:	2d b7       	in	r18, 0x3d	; 61
    3e94:	3e b7       	in	r19, 0x3e	; 62
    3e96:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    3e9a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    3e9e:	24 1b       	sub	r18, r20
    3ea0:	35 0b       	sbc	r19, r21
    3ea2:	e0 91 0b 05 	lds	r30, 0x050B	; 0x80050b <__brkval>
    3ea6:	f0 91 0c 05 	lds	r31, 0x050C	; 0x80050c <__brkval+0x1>
    3eaa:	e2 17       	cp	r30, r18
    3eac:	f3 07       	cpc	r31, r19
    3eae:	a0 f4       	brcc	.+40     	; 0x3ed8 <malloc+0x120>
    3eb0:	2e 1b       	sub	r18, r30
    3eb2:	3f 0b       	sbc	r19, r31
    3eb4:	28 17       	cp	r18, r24
    3eb6:	39 07       	cpc	r19, r25
    3eb8:	78 f0       	brcs	.+30     	; 0x3ed8 <malloc+0x120>
    3eba:	ac 01       	movw	r20, r24
    3ebc:	4e 5f       	subi	r20, 0xFE	; 254
    3ebe:	5f 4f       	sbci	r21, 0xFF	; 255
    3ec0:	24 17       	cp	r18, r20
    3ec2:	35 07       	cpc	r19, r21
    3ec4:	48 f0       	brcs	.+18     	; 0x3ed8 <malloc+0x120>
    3ec6:	4e 0f       	add	r20, r30
    3ec8:	5f 1f       	adc	r21, r31
    3eca:	50 93 0c 05 	sts	0x050C, r21	; 0x80050c <__brkval+0x1>
    3ece:	40 93 0b 05 	sts	0x050B, r20	; 0x80050b <__brkval>
    3ed2:	81 93       	st	Z+, r24
    3ed4:	91 93       	st	Z+, r25
    3ed6:	02 c0       	rjmp	.+4      	; 0x3edc <malloc+0x124>
    3ed8:	e0 e0       	ldi	r30, 0x00	; 0
    3eda:	f0 e0       	ldi	r31, 0x00	; 0
    3edc:	cf 01       	movw	r24, r30
    3ede:	df 91       	pop	r29
    3ee0:	cf 91       	pop	r28
    3ee2:	1f 91       	pop	r17
    3ee4:	0f 91       	pop	r16
    3ee6:	08 95       	ret

00003ee8 <free>:
    3ee8:	cf 93       	push	r28
    3eea:	df 93       	push	r29
    3eec:	00 97       	sbiw	r24, 0x00	; 0
    3eee:	09 f4       	brne	.+2      	; 0x3ef2 <free+0xa>
    3ef0:	81 c0       	rjmp	.+258    	; 0x3ff4 <free+0x10c>
    3ef2:	fc 01       	movw	r30, r24
    3ef4:	32 97       	sbiw	r30, 0x02	; 2
    3ef6:	13 82       	std	Z+3, r1	; 0x03
    3ef8:	12 82       	std	Z+2, r1	; 0x02
    3efa:	a0 91 0d 05 	lds	r26, 0x050D	; 0x80050d <__flp>
    3efe:	b0 91 0e 05 	lds	r27, 0x050E	; 0x80050e <__flp+0x1>
    3f02:	10 97       	sbiw	r26, 0x00	; 0
    3f04:	81 f4       	brne	.+32     	; 0x3f26 <free+0x3e>
    3f06:	20 81       	ld	r18, Z
    3f08:	31 81       	ldd	r19, Z+1	; 0x01
    3f0a:	82 0f       	add	r24, r18
    3f0c:	93 1f       	adc	r25, r19
    3f0e:	20 91 0b 05 	lds	r18, 0x050B	; 0x80050b <__brkval>
    3f12:	30 91 0c 05 	lds	r19, 0x050C	; 0x80050c <__brkval+0x1>
    3f16:	28 17       	cp	r18, r24
    3f18:	39 07       	cpc	r19, r25
    3f1a:	51 f5       	brne	.+84     	; 0x3f70 <free+0x88>
    3f1c:	f0 93 0c 05 	sts	0x050C, r31	; 0x80050c <__brkval+0x1>
    3f20:	e0 93 0b 05 	sts	0x050B, r30	; 0x80050b <__brkval>
    3f24:	67 c0       	rjmp	.+206    	; 0x3ff4 <free+0x10c>
    3f26:	ed 01       	movw	r28, r26
    3f28:	20 e0       	ldi	r18, 0x00	; 0
    3f2a:	30 e0       	ldi	r19, 0x00	; 0
    3f2c:	ce 17       	cp	r28, r30
    3f2e:	df 07       	cpc	r29, r31
    3f30:	40 f4       	brcc	.+16     	; 0x3f42 <free+0x5a>
    3f32:	4a 81       	ldd	r20, Y+2	; 0x02
    3f34:	5b 81       	ldd	r21, Y+3	; 0x03
    3f36:	9e 01       	movw	r18, r28
    3f38:	41 15       	cp	r20, r1
    3f3a:	51 05       	cpc	r21, r1
    3f3c:	f1 f0       	breq	.+60     	; 0x3f7a <free+0x92>
    3f3e:	ea 01       	movw	r28, r20
    3f40:	f5 cf       	rjmp	.-22     	; 0x3f2c <free+0x44>
    3f42:	d3 83       	std	Z+3, r29	; 0x03
    3f44:	c2 83       	std	Z+2, r28	; 0x02
    3f46:	40 81       	ld	r20, Z
    3f48:	51 81       	ldd	r21, Z+1	; 0x01
    3f4a:	84 0f       	add	r24, r20
    3f4c:	95 1f       	adc	r25, r21
    3f4e:	c8 17       	cp	r28, r24
    3f50:	d9 07       	cpc	r29, r25
    3f52:	59 f4       	brne	.+22     	; 0x3f6a <free+0x82>
    3f54:	88 81       	ld	r24, Y
    3f56:	99 81       	ldd	r25, Y+1	; 0x01
    3f58:	84 0f       	add	r24, r20
    3f5a:	95 1f       	adc	r25, r21
    3f5c:	02 96       	adiw	r24, 0x02	; 2
    3f5e:	91 83       	std	Z+1, r25	; 0x01
    3f60:	80 83       	st	Z, r24
    3f62:	8a 81       	ldd	r24, Y+2	; 0x02
    3f64:	9b 81       	ldd	r25, Y+3	; 0x03
    3f66:	93 83       	std	Z+3, r25	; 0x03
    3f68:	82 83       	std	Z+2, r24	; 0x02
    3f6a:	21 15       	cp	r18, r1
    3f6c:	31 05       	cpc	r19, r1
    3f6e:	29 f4       	brne	.+10     	; 0x3f7a <free+0x92>
    3f70:	f0 93 0e 05 	sts	0x050E, r31	; 0x80050e <__flp+0x1>
    3f74:	e0 93 0d 05 	sts	0x050D, r30	; 0x80050d <__flp>
    3f78:	3d c0       	rjmp	.+122    	; 0x3ff4 <free+0x10c>
    3f7a:	e9 01       	movw	r28, r18
    3f7c:	fb 83       	std	Y+3, r31	; 0x03
    3f7e:	ea 83       	std	Y+2, r30	; 0x02
    3f80:	49 91       	ld	r20, Y+
    3f82:	59 91       	ld	r21, Y+
    3f84:	c4 0f       	add	r28, r20
    3f86:	d5 1f       	adc	r29, r21
    3f88:	ec 17       	cp	r30, r28
    3f8a:	fd 07       	cpc	r31, r29
    3f8c:	61 f4       	brne	.+24     	; 0x3fa6 <free+0xbe>
    3f8e:	80 81       	ld	r24, Z
    3f90:	91 81       	ldd	r25, Z+1	; 0x01
    3f92:	84 0f       	add	r24, r20
    3f94:	95 1f       	adc	r25, r21
    3f96:	02 96       	adiw	r24, 0x02	; 2
    3f98:	e9 01       	movw	r28, r18
    3f9a:	99 83       	std	Y+1, r25	; 0x01
    3f9c:	88 83       	st	Y, r24
    3f9e:	82 81       	ldd	r24, Z+2	; 0x02
    3fa0:	93 81       	ldd	r25, Z+3	; 0x03
    3fa2:	9b 83       	std	Y+3, r25	; 0x03
    3fa4:	8a 83       	std	Y+2, r24	; 0x02
    3fa6:	e0 e0       	ldi	r30, 0x00	; 0
    3fa8:	f0 e0       	ldi	r31, 0x00	; 0
    3faa:	12 96       	adiw	r26, 0x02	; 2
    3fac:	8d 91       	ld	r24, X+
    3fae:	9c 91       	ld	r25, X
    3fb0:	13 97       	sbiw	r26, 0x03	; 3
    3fb2:	00 97       	sbiw	r24, 0x00	; 0
    3fb4:	19 f0       	breq	.+6      	; 0x3fbc <free+0xd4>
    3fb6:	fd 01       	movw	r30, r26
    3fb8:	dc 01       	movw	r26, r24
    3fba:	f7 cf       	rjmp	.-18     	; 0x3faa <free+0xc2>
    3fbc:	8d 91       	ld	r24, X+
    3fbe:	9c 91       	ld	r25, X
    3fc0:	11 97       	sbiw	r26, 0x01	; 1
    3fc2:	9d 01       	movw	r18, r26
    3fc4:	2e 5f       	subi	r18, 0xFE	; 254
    3fc6:	3f 4f       	sbci	r19, 0xFF	; 255
    3fc8:	82 0f       	add	r24, r18
    3fca:	93 1f       	adc	r25, r19
    3fcc:	20 91 0b 05 	lds	r18, 0x050B	; 0x80050b <__brkval>
    3fd0:	30 91 0c 05 	lds	r19, 0x050C	; 0x80050c <__brkval+0x1>
    3fd4:	28 17       	cp	r18, r24
    3fd6:	39 07       	cpc	r19, r25
    3fd8:	69 f4       	brne	.+26     	; 0x3ff4 <free+0x10c>
    3fda:	30 97       	sbiw	r30, 0x00	; 0
    3fdc:	29 f4       	brne	.+10     	; 0x3fe8 <free+0x100>
    3fde:	10 92 0e 05 	sts	0x050E, r1	; 0x80050e <__flp+0x1>
    3fe2:	10 92 0d 05 	sts	0x050D, r1	; 0x80050d <__flp>
    3fe6:	02 c0       	rjmp	.+4      	; 0x3fec <free+0x104>
    3fe8:	13 82       	std	Z+3, r1	; 0x03
    3fea:	12 82       	std	Z+2, r1	; 0x02
    3fec:	b0 93 0c 05 	sts	0x050C, r27	; 0x80050c <__brkval+0x1>
    3ff0:	a0 93 0b 05 	sts	0x050B, r26	; 0x80050b <__brkval>
    3ff4:	df 91       	pop	r29
    3ff6:	cf 91       	pop	r28
    3ff8:	08 95       	ret

00003ffa <memcpy_P>:
    3ffa:	fb 01       	movw	r30, r22
    3ffc:	dc 01       	movw	r26, r24
    3ffe:	02 c0       	rjmp	.+4      	; 0x4004 <memcpy_P+0xa>
    4000:	05 90       	lpm	r0, Z+
    4002:	0d 92       	st	X+, r0
    4004:	41 50       	subi	r20, 0x01	; 1
    4006:	50 40       	sbci	r21, 0x00	; 0
    4008:	d8 f7       	brcc	.-10     	; 0x4000 <memcpy_P+0x6>
    400a:	08 95       	ret

0000400c <memcmp>:
    400c:	fb 01       	movw	r30, r22
    400e:	dc 01       	movw	r26, r24
    4010:	04 c0       	rjmp	.+8      	; 0x401a <memcmp+0xe>
    4012:	8d 91       	ld	r24, X+
    4014:	01 90       	ld	r0, Z+
    4016:	80 19       	sub	r24, r0
    4018:	21 f4       	brne	.+8      	; 0x4022 <memcmp+0x16>
    401a:	41 50       	subi	r20, 0x01	; 1
    401c:	50 40       	sbci	r21, 0x00	; 0
    401e:	c8 f7       	brcc	.-14     	; 0x4012 <memcmp+0x6>
    4020:	88 1b       	sub	r24, r24
    4022:	99 0b       	sbc	r25, r25
    4024:	08 95       	ret

00004026 <memcpy>:
    4026:	fb 01       	movw	r30, r22
    4028:	dc 01       	movw	r26, r24
    402a:	02 c0       	rjmp	.+4      	; 0x4030 <memcpy+0xa>
    402c:	01 90       	ld	r0, Z+
    402e:	0d 92       	st	X+, r0
    4030:	41 50       	subi	r20, 0x01	; 1
    4032:	50 40       	sbci	r21, 0x00	; 0
    4034:	d8 f7       	brcc	.-10     	; 0x402c <memcpy+0x6>
    4036:	08 95       	ret

00004038 <memmove>:
    4038:	68 17       	cp	r22, r24
    403a:	79 07       	cpc	r23, r25
    403c:	68 f4       	brcc	.+26     	; 0x4058 <memmove+0x20>
    403e:	fb 01       	movw	r30, r22
    4040:	dc 01       	movw	r26, r24
    4042:	e4 0f       	add	r30, r20
    4044:	f5 1f       	adc	r31, r21
    4046:	a4 0f       	add	r26, r20
    4048:	b5 1f       	adc	r27, r21
    404a:	02 c0       	rjmp	.+4      	; 0x4050 <memmove+0x18>
    404c:	02 90       	ld	r0, -Z
    404e:	0e 92       	st	-X, r0
    4050:	41 50       	subi	r20, 0x01	; 1
    4052:	50 40       	sbci	r21, 0x00	; 0
    4054:	d8 f7       	brcc	.-10     	; 0x404c <memmove+0x14>
    4056:	08 95       	ret
    4058:	e6 cf       	rjmp	.-52     	; 0x4026 <memcpy>

0000405a <memset>:
    405a:	dc 01       	movw	r26, r24
    405c:	01 c0       	rjmp	.+2      	; 0x4060 <memset+0x6>
    405e:	6d 93       	st	X+, r22
    4060:	41 50       	subi	r20, 0x01	; 1
    4062:	50 40       	sbci	r21, 0x00	; 0
    4064:	e0 f7       	brcc	.-8      	; 0x405e <memset+0x4>
    4066:	08 95       	ret

00004068 <_exit>:
    4068:	f8 94       	cli

0000406a <__stop_program>:
    406a:	ff cf       	rjmp	.-2      	; 0x406a <__stop_program>
