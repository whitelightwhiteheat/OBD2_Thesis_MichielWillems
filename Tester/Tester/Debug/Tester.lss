
Tester.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002be  00800100  00005e5c  00005ef0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005e5c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  008003be  008003be  000061ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000061ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000061e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000458  00000000  00000000  00006220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000d283  00000000  00000000  00006678  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001f02  00000000  00000000  000138fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000037e0  00000000  00000000  000157fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000016c0  00000000  00000000  00018fe0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000133a  00000000  00000000  0001a6a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000beb4  00000000  00000000  0001b9da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005b8  00000000  00000000  0002788e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	39 c2       	rjmp	.+1138   	; 0x474 <__ctors_end>
       2:	00 00       	nop
       4:	56 c2       	rjmp	.+1196   	; 0x4b2 <__bad_interrupt>
       6:	00 00       	nop
       8:	54 c2       	rjmp	.+1192   	; 0x4b2 <__bad_interrupt>
       a:	00 00       	nop
       c:	52 c2       	rjmp	.+1188   	; 0x4b2 <__bad_interrupt>
       e:	00 00       	nop
      10:	50 c2       	rjmp	.+1184   	; 0x4b2 <__bad_interrupt>
      12:	00 00       	nop
      14:	0c 94 e7 1a 	jmp	0x35ce	; 0x35ce <__vector_5>
      18:	0c 94 1f 1b 	jmp	0x363e	; 0x363e <__vector_6>
      1c:	0c 94 57 1b 	jmp	0x36ae	; 0x36ae <__vector_7>
      20:	0c 94 8f 1b 	jmp	0x371e	; 0x371e <__vector_8>
      24:	46 c2       	rjmp	.+1164   	; 0x4b2 <__bad_interrupt>
      26:	00 00       	nop
      28:	44 c2       	rjmp	.+1160   	; 0x4b2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	42 c2       	rjmp	.+1156   	; 0x4b2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	40 c2       	rjmp	.+1152   	; 0x4b2 <__bad_interrupt>
      32:	00 00       	nop
      34:	3e c2       	rjmp	.+1148   	; 0x4b2 <__bad_interrupt>
      36:	00 00       	nop
      38:	3c c2       	rjmp	.+1144   	; 0x4b2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3a c2       	rjmp	.+1140   	; 0x4b2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	38 c2       	rjmp	.+1136   	; 0x4b2 <__bad_interrupt>
      42:	00 00       	nop
      44:	36 c2       	rjmp	.+1132   	; 0x4b2 <__bad_interrupt>
      46:	00 00       	nop
      48:	34 c2       	rjmp	.+1128   	; 0x4b2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	32 c2       	rjmp	.+1124   	; 0x4b2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	30 c2       	rjmp	.+1120   	; 0x4b2 <__bad_interrupt>
      52:	00 00       	nop
      54:	2e c2       	rjmp	.+1116   	; 0x4b2 <__bad_interrupt>
      56:	00 00       	nop
      58:	2c c2       	rjmp	.+1112   	; 0x4b2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2a c2       	rjmp	.+1108   	; 0x4b2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	28 c2       	rjmp	.+1104   	; 0x4b2 <__bad_interrupt>
      62:	00 00       	nop
      64:	26 c2       	rjmp	.+1100   	; 0x4b2 <__bad_interrupt>
      66:	00 00       	nop
      68:	24 c2       	rjmp	.+1096   	; 0x4b2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	22 c2       	rjmp	.+1092   	; 0x4b2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	20 c2       	rjmp	.+1088   	; 0x4b2 <__bad_interrupt>
      72:	00 00       	nop
      74:	1e c2       	rjmp	.+1084   	; 0x4b2 <__bad_interrupt>
      76:	00 00       	nop
      78:	1c c2       	rjmp	.+1080   	; 0x4b2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1a c2       	rjmp	.+1076   	; 0x4b2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	18 c2       	rjmp	.+1072   	; 0x4b2 <__bad_interrupt>
      82:	00 00       	nop
      84:	16 c2       	rjmp	.+1068   	; 0x4b2 <__bad_interrupt>
      86:	00 00       	nop
      88:	14 c2       	rjmp	.+1064   	; 0x4b2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	12 c2       	rjmp	.+1060   	; 0x4b2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	10 c2       	rjmp	.+1056   	; 0x4b2 <__bad_interrupt>
	...

00000094 <__trampolines_end>:
      94:	67 e6       	ldi	r22, 0x67	; 103
      96:	09 6a       	ori	r16, 0xA9	; 169
      98:	85 ae       	std	Z+61, r8	; 0x3d
      9a:	67 bb       	out	0x17, r22	; 23
      9c:	72 f3       	brmi	.-36     	; 0x7a <__SREG__+0x3b>
      9e:	6e 3c       	cpi	r22, 0xCE	; 206
      a0:	3a f5       	brpl	.+78     	; 0xf0 <sha2_large_common_const+0x3c>
      a2:	4f a5       	ldd	r20, Y+47	; 0x2f
      a4:	7f 52       	subi	r23, 0x2F	; 47
      a6:	0e 51       	subi	r16, 0x1E	; 30
      a8:	8c 68       	ori	r24, 0x8C	; 140
      aa:	05 9b       	sbis	0x00, 5	; 0
      ac:	ab d9       	rcall	.-3242   	; 0xfffff404 <__eeprom_end+0xff7ef404>
      ae:	83 1f       	adc	r24, r19
      b0:	19 cd       	rjmp	.-1486   	; 0xfffffae4 <__eeprom_end+0xff7efae4>
      b2:	e0 5b       	subi	r30, 0xB0	; 176

000000b4 <sha2_large_common_const>:
      b4:	22 ae 28 d7 98 2f 8a 42 cd 65 ef 23 91 44 37 71     ".(../.B.e.#.D7q
      c4:	2f 3b 4d ec cf fb c0 b5 bc db 89 81 a5 db b5 e9     /;M.............
      d4:	38 b5 48 f3 5b c2 56 39 19 d0 05 b6 f1 11 f1 59     8.H.[.V9.......Y
      e4:	9b 4f 19 af a4 82 3f 92 18 81 6d da d5 5e 1c ab     .O....?...m..^..
      f4:	42 02 03 a3 98 aa 07 d8 be 6f 70 45 01 5b 83 12     B........opE.[..
     104:	8c b2 e4 4e be 85 31 24 e2 b4 ff d5 c3 7d 0c 55     ...N..1$.....}.U
     114:	6f 89 7b f2 74 5d be 72 b1 96 16 3b fe b1 de 80     o.{.t].r...;....
     124:	35 12 c7 25 a7 06 dc 9b 94 26 69 cf 74 f1 9b c1     5..%.....&i.t...
     134:	d2 4a f1 9e c1 69 9b e4 e3 25 4f 38 86 47 be ef     .J...i...%O8.G..
     144:	b5 d5 8c 8b c6 9d c1 0f 65 9c ac 77 cc a1 0c 24     ........e..w...$
     154:	75 02 2b 59 6f 2c e9 2d 83 e4 a6 6e aa 84 74 4a     u.+Yo,.-...n..tJ
     164:	d4 fb 41 bd dc a9 b0 5c b5 53 11 83 da 88 f9 76     ..A....\.S.....v
     174:	ab df 66 ee 52 51 3e 98 10 32 b4 2d 6d c6 31 a8     ..f.RQ>..2.-m.1.
     184:	3f 21 fb 98 c8 27 03 b0 e4 0e ef be c7 7f 59 bf     ?!...'........Y.
     194:	c2 8f a8 3d f3 0b e0 c6 25 a7 0a 93 47 91 a7 d5     ...=....%...G...
     1a4:	6f 82 03 e0 51 63 ca 06 70 6e 0e 0a 67 29 29 14     o...Qc..pn..g)).
     1b4:	fc 2f d2 46 85 0a b7 27 26 c9 26 5c 38 21 1b 2e     ./.F...'&.&\8!..
     1c4:	ed 2a c4 5a fc 6d 2c 4d df b3 95 9d 13 0d 38 53     .*.Z.m,M......8S
     1d4:	de 63 af 8b 54 73 0a 65 a8 b2 77 3c bb 0a 6a 76     .c..Ts.e..w<..jv
     1e4:	e6 ae ed 47 2e c9 c2 81 3b 35 82 14 85 2c 72 92     ...G....;5...,r.
     1f4:	64 03 f1 4c a1 e8 bf a2 01 30 42 bc 4b 66 1a a8     d..L.....0B.Kf..
     204:	91 97 f8 d0 70 8b 4b c2 30 be 54 06 a3 51 6c c7     ....p.K.0.T..Ql.
     214:	18 52 ef d6 19 e8 92 d1 10 a9 65 55 24 06 99 d6     .R........eU$...
     224:	2a 20 71 57 85 35 0e f4 b8 d1 bb 32 70 a0 6a 10     * qW.5.....2p.j.
     234:	c8 d0 d2 b8 16 c1 a4 19 53 ab 41 51 08 6c 37 1e     ........S.AQ.l7.
     244:	99 eb 8e df 4c 77 48 27 a8 48 9b e1 b5 bc b0 34     ....LwH'.H.....4
     254:	63 5a c9 c5 b3 0c 1c 39 cb 8a 41 e3 4a aa d8 4e     cZ.....9..A.J..N
     264:	73 e3 63 77 4f ca 9c 5b a3 b8 b2 d6 f3 6f 2e 68     s.cwO..[.....o.h
     274:	fc b2 ef 5d ee 82 8f 74 60 2f 17 43 6f 63 a5 78     ...]...t`/.Coc.x
     284:	72 ab f0 a1 14 78 c8 84 ec 39 64 1a 08 02 c7 8c     r....x...9d.....
     294:	28 1e 63 23 fa ff be 90 e9 bd 82 de eb 6c 50 a4     (.c#.........lP.
     2a4:	15 79 c6 b2 f7 a3 f9 be 2b 53 72 e3 f2 78 71 c6     .y......+Sr..xq.
     2b4:	9c 61 26 ea ce 3e 27 ca 07 c2 c0 21 c7 b8 86 d1     .a&..>'....!....
     2c4:	1e eb e0 cd d6 7d da ea 78 d1 6e ee 7f 4f 7d f5     .....}..x.n..O}.
     2d4:	ba 6f 17 72 aa 67 f0 06 a6 98 c8 a2 c5 7d 63 0a     .o.r.g.......}c.
     2e4:	ae 0d f9 be 04 98 3f 11 1b 47 1c 13 35 0b 71 1b     ......?..G..5.q.
     2f4:	84 7d 04 23 f5 77 db 28 93 24 c7 40 7b ab ca 32     .}.#.w.(.$.@{..2
     304:	bc be c9 15 0a be 9e 3c 4c 0d 10 9c c4 67 1d 43     .......<L....g.C
     314:	b6 42 3e cb be d4 c5 4c 2a 7e 65 fc 9c 29 7f 59     .B>....L*~e..).Y
     324:	ec fa d6 3a ab 6f cb 5f 17 58 47 4a 8c 19 44 6c     ...:.o._.XGJ..Dl

00000334 <k>:
     334:	98 2f 8a 42 91 44 37 71 cf fb c0 b5 a5 db b5 e9     ./.B.D7q........
     344:	5b c2 56 39 f1 11 f1 59 a4 82 3f 92 d5 5e 1c ab     [.V9...Y..?..^..
     354:	98 aa 07 d8 01 5b 83 12 be 85 31 24 c3 7d 0c 55     .....[....1$.}.U
     364:	74 5d be 72 fe b1 de 80 a7 06 dc 9b 74 f1 9b c1     t].r........t...
     374:	c1 69 9b e4 86 47 be ef c6 9d c1 0f cc a1 0c 24     .i...G.........$
     384:	6f 2c e9 2d aa 84 74 4a dc a9 b0 5c da 88 f9 76     o,.-..tJ...\...v
     394:	52 51 3e 98 6d c6 31 a8 c8 27 03 b0 c7 7f 59 bf     RQ>.m.1..'....Y.
     3a4:	f3 0b e0 c6 47 91 a7 d5 51 63 ca 06 67 29 29 14     ....G...Qc..g)).
     3b4:	85 0a b7 27 38 21 1b 2e fc 6d 2c 4d 13 0d 38 53     ...'8!...m,M..8S
     3c4:	54 73 0a 65 bb 0a 6a 76 2e c9 c2 81 85 2c 72 92     Ts.e..jv.....,r.
     3d4:	a1 e8 bf a2 4b 66 1a a8 70 8b 4b c2 a3 51 6c c7     ....Kf..p.K..Ql.
     3e4:	19 e8 92 d1 24 06 99 d6 85 35 0e f4 70 a0 6a 10     ....$....5..p.j.
     3f4:	16 c1 a4 19 08 6c 37 1e 4c 77 48 27 b5 bc b0 34     .....l7.LwH'...4
     404:	b3 0c 1c 39 4a aa d8 4e 4f ca 9c 5b f3 6f 2e 68     ...9J..NO..[.o.h
     414:	ee 82 8f 74 6f 63 a5 78 14 78 c8 84 08 02 c7 8c     ...toc.x.x......
     424:	fa ff be 90 eb 6c 50 a4 f7 a3 f9 be f2 78 71 c6     .....lP......xq.

00000434 <sha512_init_values>:
     434:	08 c9 bc f3 67 e6 09 6a 3b a7 ca 84 85 ae 67 bb     ....g..j;.....g.
     444:	2b f8 94 fe 72 f3 6e 3c f1 36 1d 5f 3a f5 4f a5     +...r.n<.6._:.O.
     454:	d1 82 e6 ad 7f 52 0e 51 1f 6c 3e 2b 8c 68 05 9b     .....R.Q.l>+.h..
     464:	6b bd 41 fb ab d9 83 1f 79 21 7e 13 19 cd e0 5b     k.A.....y!~....[

00000474 <__ctors_end>:
     474:	11 24       	eor	r1, r1
     476:	1f be       	out	0x3f, r1	; 63
     478:	cf ef       	ldi	r28, 0xFF	; 255
     47a:	d0 e1       	ldi	r29, 0x10	; 16
     47c:	de bf       	out	0x3e, r29	; 62
     47e:	cd bf       	out	0x3d, r28	; 61

00000480 <__do_copy_data>:
     480:	13 e0       	ldi	r17, 0x03	; 3
     482:	a0 e0       	ldi	r26, 0x00	; 0
     484:	b1 e0       	ldi	r27, 0x01	; 1
     486:	ec e5       	ldi	r30, 0x5C	; 92
     488:	fe e5       	ldi	r31, 0x5E	; 94
     48a:	00 e0       	ldi	r16, 0x00	; 0
     48c:	0b bf       	out	0x3b, r16	; 59
     48e:	02 c0       	rjmp	.+4      	; 0x494 <__do_copy_data+0x14>
     490:	07 90       	elpm	r0, Z+
     492:	0d 92       	st	X+, r0
     494:	ae 3b       	cpi	r26, 0xBE	; 190
     496:	b1 07       	cpc	r27, r17
     498:	d9 f7       	brne	.-10     	; 0x490 <__do_copy_data+0x10>

0000049a <__do_clear_bss>:
     49a:	23 e0       	ldi	r18, 0x03	; 3
     49c:	ae eb       	ldi	r26, 0xBE	; 190
     49e:	b3 e0       	ldi	r27, 0x03	; 3
     4a0:	01 c0       	rjmp	.+2      	; 0x4a4 <.do_clear_bss_start>

000004a2 <.do_clear_bss_loop>:
     4a2:	1d 92       	st	X+, r1

000004a4 <.do_clear_bss_start>:
     4a4:	a1 3c       	cpi	r26, 0xC1	; 193
     4a6:	b2 07       	cpc	r27, r18
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <.do_clear_bss_loop>
     4aa:	0e 94 c0 1c 	call	0x3980	; 0x3980 <main>
     4ae:	0c 94 2c 2f 	jmp	0x5e58	; 0x5e58 <_exit>

000004b2 <__bad_interrupt>:
     4b2:	a6 cd       	rjmp	.-1204   	; 0x0 <__vectors>

000004b4 <can_init>:
static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
}

static void set_page_indx(uint8_t indx, uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK | indx;
     4b4:	f8 94       	cli
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     4bc:	84 e3       	ldi	r24, 0x34	; 52
     4be:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     4c2:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	82 2f       	mov	r24, r18
     4ca:	82 95       	swap	r24
     4cc:	80 7f       	andi	r24, 0xF0	; 240
     4ce:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4d2:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     4d6:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     4da:	88 e0       	ldi	r24, 0x08	; 8
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	e1 f7       	brne	.-8      	; 0x4de <can_init+0x2a>
     4e6:	2f 5f       	subi	r18, 0xFF	; 255
     4e8:	2f 30       	cpi	r18, 0x0F	; 15
     4ea:	71 f7       	brne	.-36     	; 0x4c8 <can_init+0x14>
     4ec:	88 e0       	ldi	r24, 0x08	; 8
     4ee:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     4f2:	86 e0       	ldi	r24, 0x06	; 6
     4f4:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
     4f8:	8c e0       	ldi	r24, 0x0C	; 12
     4fa:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
     4fe:	87 e3       	ldi	r24, 0x37	; 55
     500:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     504:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
     508:	82 e0       	ldi	r24, 0x02	; 2
     50a:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     50e:	78 94       	sei
     510:	08 95       	ret

00000512 <can_get_frame_buffer>:
     512:	bc 01       	movw	r22, r24
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	9a 01       	movw	r18, r20
     51a:	22 95       	swap	r18
     51c:	32 95       	swap	r19
     51e:	30 7f       	andi	r19, 0xF0	; 240
     520:	32 27       	eor	r19, r18
     522:	20 7f       	andi	r18, 0xF0	; 240
     524:	32 27       	eor	r19, r18
     526:	32 2f       	mov	r19, r18
     528:	38 60       	ori	r19, 0x08	; 8
     52a:	30 93 ed 00 	sts	0x00ED, r19	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     52e:	fb 01       	movw	r30, r22
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	29 2f       	mov	r18, r25
     534:	23 2b       	or	r18, r19
     536:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     53a:	20 91 fa 00 	lds	r18, 0x00FA	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
     53e:	21 93       	st	Z+, r18
     540:	9f 5f       	subi	r25, 0xFF	; 255
     542:	98 30       	cpi	r25, 0x08	; 8
     544:	b1 f7       	brne	.-20     	; 0x532 <can_get_frame_buffer+0x20>
     546:	30 93 ed 00 	sts	0x00ED, r19	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     54a:	68 5f       	subi	r22, 0xF8	; 248
     54c:	7f 4f       	sbci	r23, 0xFF	; 255
     54e:	4f 5f       	subi	r20, 0xFF	; 255
     550:	5f 4f       	sbci	r21, 0xFF	; 255
     552:	48 30       	cpi	r20, 0x08	; 8
     554:	51 05       	cpc	r21, r1
     556:	01 f7       	brne	.-64     	; 0x518 <can_get_frame_buffer+0x6>
     558:	08 95       	ret

0000055a <can_send_message>:
		message++;
	}
	set_page_indx(0, mobnr);
}

int can_send_message( uint8_t mobnr , can_id_t id, can_msg_t message ){
     55a:	db 01       	movw	r26, r22
     55c:	fa 01       	movw	r30, r20
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     55e:	20 e1       	ldi	r18, 0x10	; 16
     560:	82 9f       	mul	r24, r18
     562:	c0 01       	movw	r24, r0
     564:	11 24       	eor	r1, r1
     566:	88 60       	ori	r24, 0x08	; 8
     568:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	id[0] = CANIDT2 >> 5 | CANIDT1 << 3;
	id[1] = CANIDT1 >> 5;
}

void can_init_id ( can_id_t id){
	CANIDT2 = id[0] << 5;
     56c:	9c 91       	ld	r25, X
     56e:	92 95       	swap	r25
     570:	99 0f       	add	r25, r25
     572:	90 7e       	andi	r25, 0xE0	; 224
     574:	90 93 f2 00 	sts	0x00F2, r25	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = id[0] >> 3 | id[1] << 5;
     578:	2c 91       	ld	r18, X
     57a:	42 2f       	mov	r20, r18
     57c:	46 95       	lsr	r20
     57e:	46 95       	lsr	r20
     580:	46 95       	lsr	r20
     582:	11 96       	adiw	r26, 0x01	; 1
     584:	9c 91       	ld	r25, X
     586:	50 e2       	ldi	r21, 0x20	; 32
     588:	95 9f       	mul	r25, r21
     58a:	90 01       	movw	r18, r0
     58c:	11 24       	eor	r1, r1
     58e:	24 2b       	or	r18, r20
     590:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	//not a remote frame.
	CANIDT4 = 0 << RTRTAG;
     594:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     598:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
}

void can_init_message( uint8_t *message , uint8_t mobnr){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
     59c:	90 e0       	ldi	r25, 0x00	; 0
static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
}

static void set_page_indx(uint8_t indx, uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK | indx;
     59e:	28 2f       	mov	r18, r24
     5a0:	29 2b       	or	r18, r25
     5a2:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
void can_init_message( uint8_t *message , uint8_t mobnr){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
		set_page_indx(j, mobnr);
		CANMSG = *message;
     5a6:	21 91       	ld	r18, Z+
     5a8:	20 93 fa 00 	sts	0x00FA, r18	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
}

void can_init_message( uint8_t *message , uint8_t mobnr){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
     5ac:	9f 5f       	subi	r25, 0xFF	; 255
     5ae:	98 30       	cpi	r25, 0x08	; 8
     5b0:	b1 f7       	brne	.-20     	; 0x59e <can_send_message+0x44>
static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
}

static void set_page_indx(uint8_t indx, uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK | indx;
     5b2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	//copy ID.
	can_init_id(id);
	//copy message.
	can_init_message(message, mobnr);
	//enable transmission.
	CANCDMOB = (1 << CONMOB0) | (1 << DLC3);
     5b6:	88 e4       	ldi	r24, 0x48	; 72
     5b8:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	//wait for transmission.
	while(CANSTMOB != (1 << TXOK));
     5bc:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     5c0:	80 34       	cpi	r24, 0x40	; 64
     5c2:	e1 f7       	brne	.-8      	; 0x5bc <can_send_message+0x62>
	//reset mob.
	CANSTMOB = 0x00;
     5c4:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	CANCDMOB = 0x00;
     5c8:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	return 0;
}
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	08 95       	ret

000005d2 <can_receive_message>:

int can_receive_message( uint8_t mobnr, can_id_t id, can_mask_t mask, can_msg_t message){
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	eb 01       	movw	r28, r22
     5d8:	da 01       	movw	r26, r20
     5da:	f9 01       	movw	r30, r18
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     5dc:	40 e1       	ldi	r20, 0x10	; 16
     5de:	84 9f       	mul	r24, r20
     5e0:	90 01       	movw	r18, r0
     5e2:	11 24       	eor	r1, r1
     5e4:	92 2f       	mov	r25, r18
     5e6:	98 60       	ori	r25, 0x08	; 8
     5e8:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	return 0;
}

int can_receive_message( uint8_t mobnr, can_id_t id, can_mask_t mask, can_msg_t message){
	set_page(mobnr);
	CANIE2 = (1 << mobnr);
     5ec:	21 e0       	ldi	r18, 0x01	; 1
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <can_receive_message+0x22>
     5f2:	22 0f       	add	r18, r18
     5f4:	8a 95       	dec	r24
     5f6:	ea f7       	brpl	.-6      	; 0x5f2 <can_receive_message+0x20>
     5f8:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	id[0] = CANIDT2 >> 5 | CANIDT1 << 3;
	id[1] = CANIDT1 >> 5;
}

void can_init_id ( can_id_t id){
	CANIDT2 = id[0] << 5;
     5fc:	88 81       	ld	r24, Y
     5fe:	82 95       	swap	r24
     600:	88 0f       	add	r24, r24
     602:	80 7e       	andi	r24, 0xE0	; 224
     604:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = id[0] >> 3 | id[1] << 5;
     608:	28 81       	ld	r18, Y
     60a:	42 2f       	mov	r20, r18
     60c:	46 95       	lsr	r20
     60e:	46 95       	lsr	r20
     610:	46 95       	lsr	r20
     612:	89 81       	ldd	r24, Y+1	; 0x01
     614:	50 e2       	ldi	r21, 0x20	; 32
     616:	85 9f       	mul	r24, r21
     618:	90 01       	movw	r18, r0
     61a:	11 24       	eor	r1, r1
     61c:	24 2b       	or	r18, r20
     61e:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	//not a remote frame.
	CANIDT4 = 0 << RTRTAG;
     622:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}
*/

void can_init_mask (can_mask_t mask){
	CANIDM2 = mask[0] << 5;
     626:	8c 91       	ld	r24, X
     628:	82 95       	swap	r24
     62a:	88 0f       	add	r24, r24
     62c:	80 7e       	andi	r24, 0xE0	; 224
     62e:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
	CANIDM1 = mask[0] >> 3 | mask[1] << 5;
     632:	2c 91       	ld	r18, X
     634:	52 2f       	mov	r21, r18
     636:	56 95       	lsr	r21
     638:	56 95       	lsr	r21
     63a:	56 95       	lsr	r21
     63c:	11 96       	adiw	r26, 0x01	; 1
     63e:	8c 91       	ld	r24, X
     640:	40 e2       	ldi	r20, 0x20	; 32
     642:	84 9f       	mul	r24, r20
     644:	90 01       	movw	r18, r0
     646:	11 24       	eor	r1, r1
     648:	25 2b       	or	r18, r21
     64a:	20 93 f7 00 	sts	0x00F7, r18	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
	//RTRMSK = 0 : We don't use remote frames ever.
	//IDEMSK = 0 : we don't use the extended format.
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
     64e:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
	set_page(mobnr);
	CANIE2 = (1 << mobnr);
	can_init_id(id);
	can_init_mask(mask);
	//CAN standard rev 2.0 A (identifiers length = 11 bits)
	CANCDMOB = (1 << CONMOB1) | (1 << DLC3); //enable reception and data length code = 8 bytes
     652:	88 e8       	ldi	r24, 0x88	; 136
     654:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     658:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     65c:	87 ff       	sbrs	r24, 7
     65e:	fc cf       	rjmp	.-8      	; 0x658 <can_receive_message+0x86>
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     660:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     664:	85 ff       	sbrs	r24, 5
     666:	1e c0       	rjmp	.+60     	; 0x6a4 <can_receive_message+0xd2>
	//reset mob.
	CANSTMOB = 0x00;
     668:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
	CANCDMOB = 0x00;
     66c:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	//reset interrupt enable
	CANIE2 = 0x00;
     670:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
	//reset interrupt register.
	CANGIT = CANGIT;
     674:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     678:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     67c:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
}

void can_get_message(uint8_t mobnr , uint8_t *message ){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
     680:	80 e0       	ldi	r24, 0x00	; 0
static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
}

static void set_page_indx(uint8_t indx, uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK | indx;
     682:	29 2f       	mov	r18, r25
     684:	28 2b       	or	r18, r24
     686:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
void can_get_message(uint8_t mobnr , uint8_t *message ){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
		set_page_indx(j, mobnr);
		*message = CANMSG;
     68a:	20 91 fa 00 	lds	r18, 0x00FA	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
     68e:	21 93       	st	Z+, r18
}

void can_get_message(uint8_t mobnr , uint8_t *message ){
	set_page(mobnr);
	uint8_t j;
	for(j=0; j<8; j++){
     690:	8f 5f       	subi	r24, 0xFF	; 255
     692:	88 30       	cpi	r24, 0x08	; 8
     694:	b1 f7       	brne	.-20     	; 0x682 <can_receive_message+0xb0>
static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
}

static void set_page_indx(uint8_t indx, uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK | indx;
     696:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	CANIE2 = 0x00;
	//reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_message(mobnr, message);
	return 0;
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
}
     69e:	df 91       	pop	r29
     6a0:	cf 91       	pop	r28
     6a2:	08 95       	ret
	//CAN standard rev 2.0 A (identifiers length = 11 bits)
	CANCDMOB = (1 << CONMOB1) | (1 << DLC3); //enable reception and data length code = 8 bytes
	//wait for interrupt
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//check if it is the right interrupt.
	if((CANSTMOB & RXOK_MASK) != (1 << RXOK)) return 1;
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	90 e0       	ldi	r25, 0x00	; 0
	//reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_message(mobnr, message);
	return 0;
}
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	08 95       	ret

000006ae <can_send_frame_buffer>:

int can_send_frame_buffer( uint8_t *message, uint8_t buff_len ){
     6ae:	ef 92       	push	r14
     6b0:	ff 92       	push	r15
     6b2:	0f 93       	push	r16
     6b4:	1f 93       	push	r17
     6b6:	cf 93       	push	r28
     6b8:	df 93       	push	r29
     6ba:	00 d0       	rcall	.+0      	; 0x6bc <can_send_frame_buffer+0xe>
     6bc:	cd b7       	in	r28, 0x3d	; 61
     6be:	de b7       	in	r29, 0x3e	; 62
     6c0:	7c 01       	movw	r14, r24
     6c2:	06 2f       	mov	r16, r22
	uint8_t j = 0;
	for(j=0; j<buff_len; j++){
     6c4:	66 23       	and	r22, r22
     6c6:	79 f0       	breq	.+30     	; 0x6e6 <can_send_frame_buffer+0x38>
     6c8:	10 e0       	ldi	r17, 0x00	; 0
		can_id_t id = {j , 0x00};
     6ca:	19 83       	std	Y+1, r17	; 0x01
     6cc:	1a 82       	std	Y+2, r1	; 0x02
		can_send_message(j,id,message);
     6ce:	a7 01       	movw	r20, r14
     6d0:	be 01       	movw	r22, r28
     6d2:	6f 5f       	subi	r22, 0xFF	; 255
     6d4:	7f 4f       	sbci	r23, 0xFF	; 255
     6d6:	81 2f       	mov	r24, r17
     6d8:	40 df       	rcall	.-384    	; 0x55a <can_send_message>
		message = message + 8;
     6da:	88 e0       	ldi	r24, 0x08	; 8
     6dc:	e8 0e       	add	r14, r24
     6de:	f1 1c       	adc	r15, r1
	return 0;
}

int can_send_frame_buffer( uint8_t *message, uint8_t buff_len ){
	uint8_t j = 0;
	for(j=0; j<buff_len; j++){
     6e0:	1f 5f       	subi	r17, 0xFF	; 255
     6e2:	01 13       	cpse	r16, r17
     6e4:	f2 cf       	rjmp	.-28     	; 0x6ca <can_send_frame_buffer+0x1c>
		can_id_t id = {j , 0x00};
		can_send_message(j,id,message);
		message = message + 8;
	}
	return 0;
}
     6e6:	80 e0       	ldi	r24, 0x00	; 0
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	df 91       	pop	r29
     6f0:	cf 91       	pop	r28
     6f2:	1f 91       	pop	r17
     6f4:	0f 91       	pop	r16
     6f6:	ff 90       	pop	r15
     6f8:	ef 90       	pop	r14
     6fa:	08 95       	ret

000006fc <can_receive_frame_buffer>:

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
     6fc:	fc 01       	movw	r30, r24
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
     6fe:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     702:	84 60       	ori	r24, 0x04	; 4
     704:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
	uint8_t j;
	for(j=0; j<buff_len; j++){
     708:	66 23       	and	r22, r22
     70a:	49 f1       	breq	.+82     	; 0x75e <can_receive_frame_buffer+0x62>
     70c:	20 e0       	ldi	r18, 0x00	; 0
     70e:	30 e0       	ldi	r19, 0x00	; 0
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}
*/

void can_init_mask (can_mask_t mask){
	CANIDM2 = mask[0] << 5;
     710:	a0 ee       	ldi	r26, 0xE0	; 224
	CANIDM1 = mask[0] >> 3 | mask[1] << 5;
     712:	7f ef       	ldi	r23, 0xFF	; 255
		can_init_id(id);
		// Mask = 255
		can_mask_t mask = { 255, 255 };
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     714:	88 ec       	ldi	r24, 0xC8	; 200
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     716:	a9 01       	movw	r20, r18
     718:	42 95       	swap	r20
     71a:	52 95       	swap	r21
     71c:	50 7f       	andi	r21, 0xF0	; 240
     71e:	54 27       	eor	r21, r20
     720:	40 7f       	andi	r20, 0xF0	; 240
     722:	54 27       	eor	r21, r20
     724:	48 60       	ori	r20, 0x08	; 8
     726:	40 93 ed 00 	sts	0x00ED, r20	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	id[0] = CANIDT2 >> 5 | CANIDT1 << 3;
	id[1] = CANIDT1 >> 5;
}

void can_init_id ( can_id_t id){
	CANIDT2 = id[0] << 5;
     72a:	92 2f       	mov	r25, r18
     72c:	92 95       	swap	r25
     72e:	99 0f       	add	r25, r25
     730:	90 7e       	andi	r25, 0xE0	; 224
     732:	90 93 f2 00 	sts	0x00F2, r25	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = id[0] >> 3 | id[1] << 5;
     736:	92 2f       	mov	r25, r18
     738:	96 95       	lsr	r25
     73a:	96 95       	lsr	r25
     73c:	96 95       	lsr	r25
     73e:	90 93 f3 00 	sts	0x00F3, r25	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	//not a remote frame.
	CANIDT4 = 0 << RTRTAG;
     742:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
}
*/

void can_init_mask (can_mask_t mask){
	CANIDM2 = mask[0] << 5;
     746:	a0 93 f6 00 	sts	0x00F6, r26	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
	CANIDM1 = mask[0] >> 3 | mask[1] << 5;
     74a:	70 93 f7 00 	sts	0x00F7, r23	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
	//RTRMSK = 0 : We don't use remote frames ever.
	//IDEMSK = 0 : we don't use the extended format.
	CANIDM4 = (0 << RTRMSK) | (0 << IDEMSK);
     74e:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
		can_init_id(id);
		// Mask = 255
		can_mask_t mask = { 255, 255 };
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
     752:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     756:	2f 5f       	subi	r18, 0xFF	; 255
     758:	3f 4f       	sbci	r19, 0xFF	; 255

int can_receive_frame_buffer( uint8_t *message , uint8_t buff_len){
	//Enable buffer receive interrupt.
	CANGIE |= (1 << ENBX);
	uint8_t j;
	for(j=0; j<buff_len; j++){
     75a:	26 17       	cp	r18, r22
     75c:	e0 f2       	brcs	.-72     	; 0x716 <can_receive_frame_buffer+0x1a>
		can_init_mask(mask);
		//set mob in buffer receive mode.
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
     75e:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     762:	97 ff       	sbrs	r25, 7
     764:	fc cf       	rjmp	.-8      	; 0x75e <can_receive_frame_buffer+0x62>
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     766:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     76a:	84 ff       	sbrs	r24, 4
     76c:	1f c0       	rjmp	.+62     	; 0x7ac <can_receive_frame_buffer+0xb0>
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
     76e:	66 23       	and	r22, r22
     770:	a1 f0       	breq	.+40     	; 0x79a <can_receive_frame_buffer+0x9e>
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
		sei();

}

static void set_page(uint8_t mobnr){
	CANPAGE = (mobnr << 4) | PAGE_MASK;
     776:	a9 01       	movw	r20, r18
     778:	42 95       	swap	r20
     77a:	52 95       	swap	r21
     77c:	50 7f       	andi	r21, 0xF0	; 240
     77e:	54 27       	eor	r21, r20
     780:	40 7f       	andi	r20, 0xF0	; 240
     782:	54 27       	eor	r21, r20
     784:	48 60       	ori	r20, 0x08	; 8
     786:	40 93 ed 00 	sts	0x00ED, r20	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
		set_page(j);
		CANCDMOB = 0x00;
     78a:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
		CANSTMOB = 0x00;
     78e:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     792:	2f 5f       	subi	r18, 0xFF	; 255
     794:	3f 4f       	sbci	r19, 0xFF	; 255
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
	//reset mob RXOK flags
	for(j=0; j<buff_len; j++){
     796:	26 17       	cp	r18, r22
     798:	70 f3       	brcs	.-36     	; 0x776 <can_receive_frame_buffer+0x7a>
     79a:	cf 01       	movw	r24, r30
		set_page(j);
		CANCDMOB = 0x00;
		CANSTMOB = 0x00;
	}
	//Reset interrupt register.
	CANGIT = CANGIT;
     79c:	20 91 da 00 	lds	r18, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
     7a0:	20 93 da 00 	sts	0x00DA, r18	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
     7a4:	b6 de       	rcall	.-660    	; 0x512 <can_get_frame_buffer>
	return 0;
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	08 95       	ret
		CANCDMOB = (1 << CONMOB0) | (1 << CONMOB1) | (1 << DLC3);
	}
	//wait for interrupt.
	while((CANGIT & INTR_MASK) != (1 << CANIT));
	//Check if interrupt is the right one (BXOK).
	if((CANGIT & BXOK_MASK) != (1 << BXOK)) return 1;
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	90 e0       	ldi	r25, 0x00	; 0
	//Reset interrupt register.
	CANGIT = CANGIT;
	//retrieve message.
	can_get_frame_buffer(message, buff_len);
	return 0;
}
     7b0:	08 95       	ret

000007b2 <uECC_vli_clear>:
    uECC_word_t _private[uECC_MAX_WORDS];
    uECC_word_t _public[uECC_MAX_WORDS * 2];
#endif

#if uECC_VLI_NATIVE_LITTLE_ENDIAN == 0
    uECC_vli_bytesToNative(_private, private_key, BITS_TO_BYTES(curve->num_n_bits));
     7b2:	dc 01       	movw	r26, r24
     7b4:	ef ef       	ldi	r30, 0xFF	; 255
     7b6:	f3 e0       	ldi	r31, 0x03	; 3
     7b8:	e6 1b       	sub	r30, r22
     7ba:	f1 09       	sbc	r31, r1
     7bc:	09 94       	ijmp
     7be:	1d 92       	st	X+, r1
     7c0:	1d 92       	st	X+, r1
     7c2:	1d 92       	st	X+, r1
     7c4:	1d 92       	st	X+, r1
     7c6:	1d 92       	st	X+, r1
     7c8:	1d 92       	st	X+, r1
     7ca:	1d 92       	st	X+, r1
     7cc:	1d 92       	st	X+, r1
     7ce:	1d 92       	st	X+, r1
     7d0:	1d 92       	st	X+, r1
     7d2:	1d 92       	st	X+, r1
     7d4:	1d 92       	st	X+, r1
     7d6:	1d 92       	st	X+, r1
     7d8:	1d 92       	st	X+, r1
     7da:	1d 92       	st	X+, r1
     7dc:	1d 92       	st	X+, r1
     7de:	1d 92       	st	X+, r1
     7e0:	1d 92       	st	X+, r1
     7e2:	1d 92       	st	X+, r1
     7e4:	1d 92       	st	X+, r1
     7e6:	1d 92       	st	X+, r1
     7e8:	1d 92       	st	X+, r1
     7ea:	1d 92       	st	X+, r1
     7ec:	1d 92       	st	X+, r1
     7ee:	1d 92       	st	X+, r1
     7f0:	1d 92       	st	X+, r1
     7f2:	1d 92       	st	X+, r1
     7f4:	1d 92       	st	X+, r1
     7f6:	1d 92       	st	X+, r1
     7f8:	1d 92       	st	X+, r1
     7fa:	1d 92       	st	X+, r1
     7fc:	1d 92       	st	X+, r1
     7fe:	08 95       	ret

00000800 <uECC_vli_set>:
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	44 0f       	add	r20, r20
     806:	eb 01       	movw	r28, r22
     808:	dc 01       	movw	r26, r24
     80a:	ea e4       	ldi	r30, 0x4A	; 74
     80c:	f4 e0       	ldi	r31, 0x04	; 4
     80e:	e4 1b       	sub	r30, r20
     810:	f1 09       	sbc	r31, r1
     812:	09 94       	ijmp
     814:	09 90       	ld	r0, Y+
     816:	0d 92       	st	X+, r0
     818:	09 90       	ld	r0, Y+
     81a:	0d 92       	st	X+, r0
     81c:	09 90       	ld	r0, Y+
     81e:	0d 92       	st	X+, r0
     820:	09 90       	ld	r0, Y+
     822:	0d 92       	st	X+, r0
     824:	09 90       	ld	r0, Y+
     826:	0d 92       	st	X+, r0
     828:	09 90       	ld	r0, Y+
     82a:	0d 92       	st	X+, r0
     82c:	09 90       	ld	r0, Y+
     82e:	0d 92       	st	X+, r0
     830:	09 90       	ld	r0, Y+
     832:	0d 92       	st	X+, r0
     834:	09 90       	ld	r0, Y+
     836:	0d 92       	st	X+, r0
     838:	09 90       	ld	r0, Y+
     83a:	0d 92       	st	X+, r0
     83c:	09 90       	ld	r0, Y+
     83e:	0d 92       	st	X+, r0
     840:	09 90       	ld	r0, Y+
     842:	0d 92       	st	X+, r0
     844:	09 90       	ld	r0, Y+
     846:	0d 92       	st	X+, r0
     848:	09 90       	ld	r0, Y+
     84a:	0d 92       	st	X+, r0
     84c:	09 90       	ld	r0, Y+
     84e:	0d 92       	st	X+, r0
     850:	09 90       	ld	r0, Y+
     852:	0d 92       	st	X+, r0
     854:	09 90       	ld	r0, Y+
     856:	0d 92       	st	X+, r0
     858:	09 90       	ld	r0, Y+
     85a:	0d 92       	st	X+, r0
     85c:	09 90       	ld	r0, Y+
     85e:	0d 92       	st	X+, r0
     860:	09 90       	ld	r0, Y+
     862:	0d 92       	st	X+, r0
     864:	09 90       	ld	r0, Y+
     866:	0d 92       	st	X+, r0
     868:	09 90       	ld	r0, Y+
     86a:	0d 92       	st	X+, r0
     86c:	09 90       	ld	r0, Y+
     86e:	0d 92       	st	X+, r0
     870:	09 90       	ld	r0, Y+
     872:	0d 92       	st	X+, r0
     874:	09 90       	ld	r0, Y+
     876:	0d 92       	st	X+, r0
     878:	09 90       	ld	r0, Y+
     87a:	0d 92       	st	X+, r0
     87c:	09 90       	ld	r0, Y+
     87e:	0d 92       	st	X+, r0
     880:	09 90       	ld	r0, Y+
     882:	0d 92       	st	X+, r0
     884:	09 90       	ld	r0, Y+
     886:	0d 92       	st	X+, r0
     888:	09 90       	ld	r0, Y+
     88a:	0d 92       	st	X+, r0
     88c:	09 90       	ld	r0, Y+
     88e:	0d 92       	st	X+, r0
     890:	09 90       	ld	r0, Y+
     892:	0d 92       	st	X+, r0
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	08 95       	ret

0000089a <uECC_vli_rshift1>:
     89a:	26 2f       	mov	r18, r22
     89c:	32 e0       	ldi	r19, 0x02	; 2
     89e:	63 9f       	mul	r22, r19
     8a0:	20 0d       	add	r18, r0
     8a2:	11 24       	eor	r1, r1
     8a4:	23 50       	subi	r18, 0x03	; 3
     8a6:	dc 01       	movw	r26, r24
     8a8:	eb eb       	ldi	r30, 0xBB	; 187
     8aa:	f4 e0       	ldi	r31, 0x04	; 4
     8ac:	e2 1b       	sub	r30, r18
     8ae:	f1 09       	sbc	r31, r1
     8b0:	a6 0f       	add	r26, r22
     8b2:	b1 1d       	adc	r27, r1
     8b4:	0e 90       	ld	r0, -X
     8b6:	06 94       	lsr	r0
     8b8:	0c 92       	st	X, r0
     8ba:	09 94       	ijmp
     8bc:	0e 90       	ld	r0, -X
     8be:	07 94       	ror	r0
     8c0:	0c 92       	st	X, r0
     8c2:	0e 90       	ld	r0, -X
     8c4:	07 94       	ror	r0
     8c6:	0c 92       	st	X, r0
     8c8:	0e 90       	ld	r0, -X
     8ca:	07 94       	ror	r0
     8cc:	0c 92       	st	X, r0
     8ce:	0e 90       	ld	r0, -X
     8d0:	07 94       	ror	r0
     8d2:	0c 92       	st	X, r0
     8d4:	0e 90       	ld	r0, -X
     8d6:	07 94       	ror	r0
     8d8:	0c 92       	st	X, r0
     8da:	0e 90       	ld	r0, -X
     8dc:	07 94       	ror	r0
     8de:	0c 92       	st	X, r0
     8e0:	0e 90       	ld	r0, -X
     8e2:	07 94       	ror	r0
     8e4:	0c 92       	st	X, r0
     8e6:	0e 90       	ld	r0, -X
     8e8:	07 94       	ror	r0
     8ea:	0c 92       	st	X, r0
     8ec:	0e 90       	ld	r0, -X
     8ee:	07 94       	ror	r0
     8f0:	0c 92       	st	X, r0
     8f2:	0e 90       	ld	r0, -X
     8f4:	07 94       	ror	r0
     8f6:	0c 92       	st	X, r0
     8f8:	0e 90       	ld	r0, -X
     8fa:	07 94       	ror	r0
     8fc:	0c 92       	st	X, r0
     8fe:	0e 90       	ld	r0, -X
     900:	07 94       	ror	r0
     902:	0c 92       	st	X, r0
     904:	0e 90       	ld	r0, -X
     906:	07 94       	ror	r0
     908:	0c 92       	st	X, r0
     90a:	0e 90       	ld	r0, -X
     90c:	07 94       	ror	r0
     90e:	0c 92       	st	X, r0
     910:	0e 90       	ld	r0, -X
     912:	07 94       	ror	r0
     914:	0c 92       	st	X, r0
     916:	0e 90       	ld	r0, -X
     918:	07 94       	ror	r0
     91a:	0c 92       	st	X, r0
     91c:	0e 90       	ld	r0, -X
     91e:	07 94       	ror	r0
     920:	0c 92       	st	X, r0
     922:	0e 90       	ld	r0, -X
     924:	07 94       	ror	r0
     926:	0c 92       	st	X, r0
     928:	0e 90       	ld	r0, -X
     92a:	07 94       	ror	r0
     92c:	0c 92       	st	X, r0
     92e:	0e 90       	ld	r0, -X
     930:	07 94       	ror	r0
     932:	0c 92       	st	X, r0
     934:	0e 90       	ld	r0, -X
     936:	07 94       	ror	r0
     938:	0c 92       	st	X, r0
     93a:	0e 90       	ld	r0, -X
     93c:	07 94       	ror	r0
     93e:	0c 92       	st	X, r0
     940:	0e 90       	ld	r0, -X
     942:	07 94       	ror	r0
     944:	0c 92       	st	X, r0
     946:	0e 90       	ld	r0, -X
     948:	07 94       	ror	r0
     94a:	0c 92       	st	X, r0
     94c:	0e 90       	ld	r0, -X
     94e:	07 94       	ror	r0
     950:	0c 92       	st	X, r0
     952:	0e 90       	ld	r0, -X
     954:	07 94       	ror	r0
     956:	0c 92       	st	X, r0
     958:	0e 90       	ld	r0, -X
     95a:	07 94       	ror	r0
     95c:	0c 92       	st	X, r0
     95e:	0e 90       	ld	r0, -X
     960:	07 94       	ror	r0
     962:	0c 92       	st	X, r0
     964:	0e 90       	ld	r0, -X
     966:	07 94       	ror	r0
     968:	0c 92       	st	X, r0
     96a:	0e 90       	ld	r0, -X
     96c:	07 94       	ror	r0
     96e:	0c 92       	st	X, r0
     970:	0e 90       	ld	r0, -X
     972:	07 94       	ror	r0
     974:	0c 92       	st	X, r0
     976:	08 95       	ret

00000978 <uECC_vli_add>:
     978:	cf 93       	push	r28
     97a:	df 93       	push	r29
     97c:	22 0f       	add	r18, r18
     97e:	db 01       	movw	r26, r22
     980:	ea 01       	movw	r28, r20
     982:	ac 01       	movw	r20, r24
     984:	e8 e0       	ldi	r30, 0x08	; 8
     986:	f5 e0       	ldi	r31, 0x05	; 5
     988:	e2 1b       	sub	r30, r18
     98a:	f1 09       	sbc	r31, r1
     98c:	88 94       	clc
     98e:	09 94       	ijmp
     990:	fa 01       	movw	r30, r20
     992:	3e c0       	rjmp	.+124    	; 0xa10 <add_90_32>
     994:	fa 01       	movw	r30, r20
     996:	40 c0       	rjmp	.+128    	; 0xa18 <add_90_31>
     998:	fa 01       	movw	r30, r20
     99a:	42 c0       	rjmp	.+132    	; 0xa20 <add_90_30>
     99c:	fa 01       	movw	r30, r20
     99e:	44 c0       	rjmp	.+136    	; 0xa28 <add_90_29>
     9a0:	fa 01       	movw	r30, r20
     9a2:	46 c0       	rjmp	.+140    	; 0xa30 <add_90_28>
     9a4:	fa 01       	movw	r30, r20
     9a6:	48 c0       	rjmp	.+144    	; 0xa38 <add_90_27>
     9a8:	fa 01       	movw	r30, r20
     9aa:	4a c0       	rjmp	.+148    	; 0xa40 <add_90_26>
     9ac:	fa 01       	movw	r30, r20
     9ae:	4c c0       	rjmp	.+152    	; 0xa48 <add_90_25>
     9b0:	fa 01       	movw	r30, r20
     9b2:	4e c0       	rjmp	.+156    	; 0xa50 <add_90_24>
     9b4:	fa 01       	movw	r30, r20
     9b6:	50 c0       	rjmp	.+160    	; 0xa58 <add_90_23>
     9b8:	fa 01       	movw	r30, r20
     9ba:	52 c0       	rjmp	.+164    	; 0xa60 <add_90_22>
     9bc:	fa 01       	movw	r30, r20
     9be:	54 c0       	rjmp	.+168    	; 0xa68 <add_90_21>
     9c0:	fa 01       	movw	r30, r20
     9c2:	56 c0       	rjmp	.+172    	; 0xa70 <add_90_20>
     9c4:	fa 01       	movw	r30, r20
     9c6:	58 c0       	rjmp	.+176    	; 0xa78 <add_90_19>
     9c8:	fa 01       	movw	r30, r20
     9ca:	5a c0       	rjmp	.+180    	; 0xa80 <add_90_18>
     9cc:	fa 01       	movw	r30, r20
     9ce:	5c c0       	rjmp	.+184    	; 0xa88 <add_90_17>
     9d0:	fa 01       	movw	r30, r20
     9d2:	5e c0       	rjmp	.+188    	; 0xa90 <add_90_16>
     9d4:	fa 01       	movw	r30, r20
     9d6:	60 c0       	rjmp	.+192    	; 0xa98 <add_90_15>
     9d8:	fa 01       	movw	r30, r20
     9da:	62 c0       	rjmp	.+196    	; 0xaa0 <add_90_14>
     9dc:	fa 01       	movw	r30, r20
     9de:	64 c0       	rjmp	.+200    	; 0xaa8 <add_90_13>
     9e0:	fa 01       	movw	r30, r20
     9e2:	66 c0       	rjmp	.+204    	; 0xab0 <add_90_12>
     9e4:	fa 01       	movw	r30, r20
     9e6:	68 c0       	rjmp	.+208    	; 0xab8 <add_90_11>
     9e8:	fa 01       	movw	r30, r20
     9ea:	6a c0       	rjmp	.+212    	; 0xac0 <add_90_10>
     9ec:	fa 01       	movw	r30, r20
     9ee:	6c c0       	rjmp	.+216    	; 0xac8 <add_90_9>
     9f0:	fa 01       	movw	r30, r20
     9f2:	6e c0       	rjmp	.+220    	; 0xad0 <add_90_8>
     9f4:	fa 01       	movw	r30, r20
     9f6:	70 c0       	rjmp	.+224    	; 0xad8 <add_90_7>
     9f8:	fa 01       	movw	r30, r20
     9fa:	72 c0       	rjmp	.+228    	; 0xae0 <add_90_6>
     9fc:	fa 01       	movw	r30, r20
     9fe:	74 c0       	rjmp	.+232    	; 0xae8 <add_90_5>
     a00:	fa 01       	movw	r30, r20
     a02:	76 c0       	rjmp	.+236    	; 0xaf0 <add_90_4>
     a04:	fa 01       	movw	r30, r20
     a06:	78 c0       	rjmp	.+240    	; 0xaf8 <add_90_3>
     a08:	fa 01       	movw	r30, r20
     a0a:	7a c0       	rjmp	.+244    	; 0xb00 <add_90_2>
     a0c:	fa 01       	movw	r30, r20
     a0e:	7c c0       	rjmp	.+248    	; 0xb08 <add_90_1>

00000a10 <add_90_32>:
     a10:	8d 91       	ld	r24, X+
     a12:	99 91       	ld	r25, Y+
     a14:	89 1f       	adc	r24, r25
     a16:	81 93       	st	Z+, r24

00000a18 <add_90_31>:
     a18:	8d 91       	ld	r24, X+
     a1a:	99 91       	ld	r25, Y+
     a1c:	89 1f       	adc	r24, r25
     a1e:	81 93       	st	Z+, r24

00000a20 <add_90_30>:
     a20:	8d 91       	ld	r24, X+
     a22:	99 91       	ld	r25, Y+
     a24:	89 1f       	adc	r24, r25
     a26:	81 93       	st	Z+, r24

00000a28 <add_90_29>:
     a28:	8d 91       	ld	r24, X+
     a2a:	99 91       	ld	r25, Y+
     a2c:	89 1f       	adc	r24, r25
     a2e:	81 93       	st	Z+, r24

00000a30 <add_90_28>:
     a30:	8d 91       	ld	r24, X+
     a32:	99 91       	ld	r25, Y+
     a34:	89 1f       	adc	r24, r25
     a36:	81 93       	st	Z+, r24

00000a38 <add_90_27>:
     a38:	8d 91       	ld	r24, X+
     a3a:	99 91       	ld	r25, Y+
     a3c:	89 1f       	adc	r24, r25
     a3e:	81 93       	st	Z+, r24

00000a40 <add_90_26>:
     a40:	8d 91       	ld	r24, X+
     a42:	99 91       	ld	r25, Y+
     a44:	89 1f       	adc	r24, r25
     a46:	81 93       	st	Z+, r24

00000a48 <add_90_25>:
     a48:	8d 91       	ld	r24, X+
     a4a:	99 91       	ld	r25, Y+
     a4c:	89 1f       	adc	r24, r25
     a4e:	81 93       	st	Z+, r24

00000a50 <add_90_24>:
     a50:	8d 91       	ld	r24, X+
     a52:	99 91       	ld	r25, Y+
     a54:	89 1f       	adc	r24, r25
     a56:	81 93       	st	Z+, r24

00000a58 <add_90_23>:
     a58:	8d 91       	ld	r24, X+
     a5a:	99 91       	ld	r25, Y+
     a5c:	89 1f       	adc	r24, r25
     a5e:	81 93       	st	Z+, r24

00000a60 <add_90_22>:
     a60:	8d 91       	ld	r24, X+
     a62:	99 91       	ld	r25, Y+
     a64:	89 1f       	adc	r24, r25
     a66:	81 93       	st	Z+, r24

00000a68 <add_90_21>:
     a68:	8d 91       	ld	r24, X+
     a6a:	99 91       	ld	r25, Y+
     a6c:	89 1f       	adc	r24, r25
     a6e:	81 93       	st	Z+, r24

00000a70 <add_90_20>:
     a70:	8d 91       	ld	r24, X+
     a72:	99 91       	ld	r25, Y+
     a74:	89 1f       	adc	r24, r25
     a76:	81 93       	st	Z+, r24

00000a78 <add_90_19>:
     a78:	8d 91       	ld	r24, X+
     a7a:	99 91       	ld	r25, Y+
     a7c:	89 1f       	adc	r24, r25
     a7e:	81 93       	st	Z+, r24

00000a80 <add_90_18>:
     a80:	8d 91       	ld	r24, X+
     a82:	99 91       	ld	r25, Y+
     a84:	89 1f       	adc	r24, r25
     a86:	81 93       	st	Z+, r24

00000a88 <add_90_17>:
     a88:	8d 91       	ld	r24, X+
     a8a:	99 91       	ld	r25, Y+
     a8c:	89 1f       	adc	r24, r25
     a8e:	81 93       	st	Z+, r24

00000a90 <add_90_16>:
     a90:	8d 91       	ld	r24, X+
     a92:	99 91       	ld	r25, Y+
     a94:	89 1f       	adc	r24, r25
     a96:	81 93       	st	Z+, r24

00000a98 <add_90_15>:
     a98:	8d 91       	ld	r24, X+
     a9a:	99 91       	ld	r25, Y+
     a9c:	89 1f       	adc	r24, r25
     a9e:	81 93       	st	Z+, r24

00000aa0 <add_90_14>:
     aa0:	8d 91       	ld	r24, X+
     aa2:	99 91       	ld	r25, Y+
     aa4:	89 1f       	adc	r24, r25
     aa6:	81 93       	st	Z+, r24

00000aa8 <add_90_13>:
     aa8:	8d 91       	ld	r24, X+
     aaa:	99 91       	ld	r25, Y+
     aac:	89 1f       	adc	r24, r25
     aae:	81 93       	st	Z+, r24

00000ab0 <add_90_12>:
     ab0:	8d 91       	ld	r24, X+
     ab2:	99 91       	ld	r25, Y+
     ab4:	89 1f       	adc	r24, r25
     ab6:	81 93       	st	Z+, r24

00000ab8 <add_90_11>:
     ab8:	8d 91       	ld	r24, X+
     aba:	99 91       	ld	r25, Y+
     abc:	89 1f       	adc	r24, r25
     abe:	81 93       	st	Z+, r24

00000ac0 <add_90_10>:
     ac0:	8d 91       	ld	r24, X+
     ac2:	99 91       	ld	r25, Y+
     ac4:	89 1f       	adc	r24, r25
     ac6:	81 93       	st	Z+, r24

00000ac8 <add_90_9>:
     ac8:	8d 91       	ld	r24, X+
     aca:	99 91       	ld	r25, Y+
     acc:	89 1f       	adc	r24, r25
     ace:	81 93       	st	Z+, r24

00000ad0 <add_90_8>:
     ad0:	8d 91       	ld	r24, X+
     ad2:	99 91       	ld	r25, Y+
     ad4:	89 1f       	adc	r24, r25
     ad6:	81 93       	st	Z+, r24

00000ad8 <add_90_7>:
     ad8:	8d 91       	ld	r24, X+
     ada:	99 91       	ld	r25, Y+
     adc:	89 1f       	adc	r24, r25
     ade:	81 93       	st	Z+, r24

00000ae0 <add_90_6>:
     ae0:	8d 91       	ld	r24, X+
     ae2:	99 91       	ld	r25, Y+
     ae4:	89 1f       	adc	r24, r25
     ae6:	81 93       	st	Z+, r24

00000ae8 <add_90_5>:
     ae8:	8d 91       	ld	r24, X+
     aea:	99 91       	ld	r25, Y+
     aec:	89 1f       	adc	r24, r25
     aee:	81 93       	st	Z+, r24

00000af0 <add_90_4>:
     af0:	8d 91       	ld	r24, X+
     af2:	99 91       	ld	r25, Y+
     af4:	89 1f       	adc	r24, r25
     af6:	81 93       	st	Z+, r24

00000af8 <add_90_3>:
     af8:	8d 91       	ld	r24, X+
     afa:	99 91       	ld	r25, Y+
     afc:	89 1f       	adc	r24, r25
     afe:	81 93       	st	Z+, r24

00000b00 <add_90_2>:
     b00:	8d 91       	ld	r24, X+
     b02:	99 91       	ld	r25, Y+
     b04:	89 1f       	adc	r24, r25
     b06:	81 93       	st	Z+, r24

00000b08 <add_90_1>:
     b08:	8d 91       	ld	r24, X+
     b0a:	99 91       	ld	r25, Y+
     b0c:	89 1f       	adc	r24, r25
     b0e:	81 93       	st	Z+, r24
     b10:	81 2d       	mov	r24, r1
     b12:	88 1f       	adc	r24, r24
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	08 95       	ret

00000b1a <uECC_vli_sub>:
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	22 0f       	add	r18, r18
     b20:	db 01       	movw	r26, r22
     b22:	ea 01       	movw	r28, r20
     b24:	ac 01       	movw	r20, r24
     b26:	e9 ed       	ldi	r30, 0xD9	; 217
     b28:	f5 e0       	ldi	r31, 0x05	; 5
     b2a:	e2 1b       	sub	r30, r18
     b2c:	f1 09       	sbc	r31, r1
     b2e:	88 94       	clc
     b30:	09 94       	ijmp
     b32:	fa 01       	movw	r30, r20
     b34:	3e c0       	rjmp	.+124    	; 0xbb2 <sub_130_32>
     b36:	fa 01       	movw	r30, r20
     b38:	40 c0       	rjmp	.+128    	; 0xbba <sub_130_31>
     b3a:	fa 01       	movw	r30, r20
     b3c:	42 c0       	rjmp	.+132    	; 0xbc2 <sub_130_30>
     b3e:	fa 01       	movw	r30, r20
     b40:	44 c0       	rjmp	.+136    	; 0xbca <sub_130_29>
     b42:	fa 01       	movw	r30, r20
     b44:	46 c0       	rjmp	.+140    	; 0xbd2 <sub_130_28>
     b46:	fa 01       	movw	r30, r20
     b48:	48 c0       	rjmp	.+144    	; 0xbda <sub_130_27>
     b4a:	fa 01       	movw	r30, r20
     b4c:	4a c0       	rjmp	.+148    	; 0xbe2 <sub_130_26>
     b4e:	fa 01       	movw	r30, r20
     b50:	4c c0       	rjmp	.+152    	; 0xbea <sub_130_25>
     b52:	fa 01       	movw	r30, r20
     b54:	4e c0       	rjmp	.+156    	; 0xbf2 <sub_130_24>
     b56:	fa 01       	movw	r30, r20
     b58:	50 c0       	rjmp	.+160    	; 0xbfa <sub_130_23>
     b5a:	fa 01       	movw	r30, r20
     b5c:	52 c0       	rjmp	.+164    	; 0xc02 <sub_130_22>
     b5e:	fa 01       	movw	r30, r20
     b60:	54 c0       	rjmp	.+168    	; 0xc0a <sub_130_21>
     b62:	fa 01       	movw	r30, r20
     b64:	56 c0       	rjmp	.+172    	; 0xc12 <sub_130_20>
     b66:	fa 01       	movw	r30, r20
     b68:	58 c0       	rjmp	.+176    	; 0xc1a <sub_130_19>
     b6a:	fa 01       	movw	r30, r20
     b6c:	5a c0       	rjmp	.+180    	; 0xc22 <sub_130_18>
     b6e:	fa 01       	movw	r30, r20
     b70:	5c c0       	rjmp	.+184    	; 0xc2a <sub_130_17>
     b72:	fa 01       	movw	r30, r20
     b74:	5e c0       	rjmp	.+188    	; 0xc32 <sub_130_16>
     b76:	fa 01       	movw	r30, r20
     b78:	60 c0       	rjmp	.+192    	; 0xc3a <sub_130_15>
     b7a:	fa 01       	movw	r30, r20
     b7c:	62 c0       	rjmp	.+196    	; 0xc42 <sub_130_14>
     b7e:	fa 01       	movw	r30, r20
     b80:	64 c0       	rjmp	.+200    	; 0xc4a <sub_130_13>
     b82:	fa 01       	movw	r30, r20
     b84:	66 c0       	rjmp	.+204    	; 0xc52 <sub_130_12>
     b86:	fa 01       	movw	r30, r20
     b88:	68 c0       	rjmp	.+208    	; 0xc5a <sub_130_11>
     b8a:	fa 01       	movw	r30, r20
     b8c:	6a c0       	rjmp	.+212    	; 0xc62 <sub_130_10>
     b8e:	fa 01       	movw	r30, r20
     b90:	6c c0       	rjmp	.+216    	; 0xc6a <sub_130_9>
     b92:	fa 01       	movw	r30, r20
     b94:	6e c0       	rjmp	.+220    	; 0xc72 <sub_130_8>
     b96:	fa 01       	movw	r30, r20
     b98:	70 c0       	rjmp	.+224    	; 0xc7a <sub_130_7>
     b9a:	fa 01       	movw	r30, r20
     b9c:	72 c0       	rjmp	.+228    	; 0xc82 <sub_130_6>
     b9e:	fa 01       	movw	r30, r20
     ba0:	74 c0       	rjmp	.+232    	; 0xc8a <sub_130_5>
     ba2:	fa 01       	movw	r30, r20
     ba4:	76 c0       	rjmp	.+236    	; 0xc92 <sub_130_4>
     ba6:	fa 01       	movw	r30, r20
     ba8:	78 c0       	rjmp	.+240    	; 0xc9a <sub_130_3>
     baa:	fa 01       	movw	r30, r20
     bac:	7a c0       	rjmp	.+244    	; 0xca2 <sub_130_2>
     bae:	fa 01       	movw	r30, r20
     bb0:	7c c0       	rjmp	.+248    	; 0xcaa <sub_130_1>

00000bb2 <sub_130_32>:
     bb2:	8d 91       	ld	r24, X+
     bb4:	99 91       	ld	r25, Y+
     bb6:	89 0b       	sbc	r24, r25
     bb8:	81 93       	st	Z+, r24

00000bba <sub_130_31>:
     bba:	8d 91       	ld	r24, X+
     bbc:	99 91       	ld	r25, Y+
     bbe:	89 0b       	sbc	r24, r25
     bc0:	81 93       	st	Z+, r24

00000bc2 <sub_130_30>:
     bc2:	8d 91       	ld	r24, X+
     bc4:	99 91       	ld	r25, Y+
     bc6:	89 0b       	sbc	r24, r25
     bc8:	81 93       	st	Z+, r24

00000bca <sub_130_29>:
     bca:	8d 91       	ld	r24, X+
     bcc:	99 91       	ld	r25, Y+
     bce:	89 0b       	sbc	r24, r25
     bd0:	81 93       	st	Z+, r24

00000bd2 <sub_130_28>:
     bd2:	8d 91       	ld	r24, X+
     bd4:	99 91       	ld	r25, Y+
     bd6:	89 0b       	sbc	r24, r25
     bd8:	81 93       	st	Z+, r24

00000bda <sub_130_27>:
     bda:	8d 91       	ld	r24, X+
     bdc:	99 91       	ld	r25, Y+
     bde:	89 0b       	sbc	r24, r25
     be0:	81 93       	st	Z+, r24

00000be2 <sub_130_26>:
     be2:	8d 91       	ld	r24, X+
     be4:	99 91       	ld	r25, Y+
     be6:	89 0b       	sbc	r24, r25
     be8:	81 93       	st	Z+, r24

00000bea <sub_130_25>:
     bea:	8d 91       	ld	r24, X+
     bec:	99 91       	ld	r25, Y+
     bee:	89 0b       	sbc	r24, r25
     bf0:	81 93       	st	Z+, r24

00000bf2 <sub_130_24>:
     bf2:	8d 91       	ld	r24, X+
     bf4:	99 91       	ld	r25, Y+
     bf6:	89 0b       	sbc	r24, r25
     bf8:	81 93       	st	Z+, r24

00000bfa <sub_130_23>:
     bfa:	8d 91       	ld	r24, X+
     bfc:	99 91       	ld	r25, Y+
     bfe:	89 0b       	sbc	r24, r25
     c00:	81 93       	st	Z+, r24

00000c02 <sub_130_22>:
     c02:	8d 91       	ld	r24, X+
     c04:	99 91       	ld	r25, Y+
     c06:	89 0b       	sbc	r24, r25
     c08:	81 93       	st	Z+, r24

00000c0a <sub_130_21>:
     c0a:	8d 91       	ld	r24, X+
     c0c:	99 91       	ld	r25, Y+
     c0e:	89 0b       	sbc	r24, r25
     c10:	81 93       	st	Z+, r24

00000c12 <sub_130_20>:
     c12:	8d 91       	ld	r24, X+
     c14:	99 91       	ld	r25, Y+
     c16:	89 0b       	sbc	r24, r25
     c18:	81 93       	st	Z+, r24

00000c1a <sub_130_19>:
     c1a:	8d 91       	ld	r24, X+
     c1c:	99 91       	ld	r25, Y+
     c1e:	89 0b       	sbc	r24, r25
     c20:	81 93       	st	Z+, r24

00000c22 <sub_130_18>:
     c22:	8d 91       	ld	r24, X+
     c24:	99 91       	ld	r25, Y+
     c26:	89 0b       	sbc	r24, r25
     c28:	81 93       	st	Z+, r24

00000c2a <sub_130_17>:
     c2a:	8d 91       	ld	r24, X+
     c2c:	99 91       	ld	r25, Y+
     c2e:	89 0b       	sbc	r24, r25
     c30:	81 93       	st	Z+, r24

00000c32 <sub_130_16>:
     c32:	8d 91       	ld	r24, X+
     c34:	99 91       	ld	r25, Y+
     c36:	89 0b       	sbc	r24, r25
     c38:	81 93       	st	Z+, r24

00000c3a <sub_130_15>:
     c3a:	8d 91       	ld	r24, X+
     c3c:	99 91       	ld	r25, Y+
     c3e:	89 0b       	sbc	r24, r25
     c40:	81 93       	st	Z+, r24

00000c42 <sub_130_14>:
     c42:	8d 91       	ld	r24, X+
     c44:	99 91       	ld	r25, Y+
     c46:	89 0b       	sbc	r24, r25
     c48:	81 93       	st	Z+, r24

00000c4a <sub_130_13>:
     c4a:	8d 91       	ld	r24, X+
     c4c:	99 91       	ld	r25, Y+
     c4e:	89 0b       	sbc	r24, r25
     c50:	81 93       	st	Z+, r24

00000c52 <sub_130_12>:
     c52:	8d 91       	ld	r24, X+
     c54:	99 91       	ld	r25, Y+
     c56:	89 0b       	sbc	r24, r25
     c58:	81 93       	st	Z+, r24

00000c5a <sub_130_11>:
     c5a:	8d 91       	ld	r24, X+
     c5c:	99 91       	ld	r25, Y+
     c5e:	89 0b       	sbc	r24, r25
     c60:	81 93       	st	Z+, r24

00000c62 <sub_130_10>:
     c62:	8d 91       	ld	r24, X+
     c64:	99 91       	ld	r25, Y+
     c66:	89 0b       	sbc	r24, r25
     c68:	81 93       	st	Z+, r24

00000c6a <sub_130_9>:
     c6a:	8d 91       	ld	r24, X+
     c6c:	99 91       	ld	r25, Y+
     c6e:	89 0b       	sbc	r24, r25
     c70:	81 93       	st	Z+, r24

00000c72 <sub_130_8>:
     c72:	8d 91       	ld	r24, X+
     c74:	99 91       	ld	r25, Y+
     c76:	89 0b       	sbc	r24, r25
     c78:	81 93       	st	Z+, r24

00000c7a <sub_130_7>:
     c7a:	8d 91       	ld	r24, X+
     c7c:	99 91       	ld	r25, Y+
     c7e:	89 0b       	sbc	r24, r25
     c80:	81 93       	st	Z+, r24

00000c82 <sub_130_6>:
     c82:	8d 91       	ld	r24, X+
     c84:	99 91       	ld	r25, Y+
     c86:	89 0b       	sbc	r24, r25
     c88:	81 93       	st	Z+, r24

00000c8a <sub_130_5>:
     c8a:	8d 91       	ld	r24, X+
     c8c:	99 91       	ld	r25, Y+
     c8e:	89 0b       	sbc	r24, r25
     c90:	81 93       	st	Z+, r24

00000c92 <sub_130_4>:
     c92:	8d 91       	ld	r24, X+
     c94:	99 91       	ld	r25, Y+
     c96:	89 0b       	sbc	r24, r25
     c98:	81 93       	st	Z+, r24

00000c9a <sub_130_3>:
     c9a:	8d 91       	ld	r24, X+
     c9c:	99 91       	ld	r25, Y+
     c9e:	89 0b       	sbc	r24, r25
     ca0:	81 93       	st	Z+, r24

00000ca2 <sub_130_2>:
     ca2:	8d 91       	ld	r24, X+
     ca4:	99 91       	ld	r25, Y+
     ca6:	89 0b       	sbc	r24, r25
     ca8:	81 93       	st	Z+, r24

00000caa <sub_130_1>:
     caa:	8d 91       	ld	r24, X+
     cac:	99 91       	ld	r25, Y+
     cae:	89 0b       	sbc	r24, r25
     cb0:	81 93       	st	Z+, r24
     cb2:	81 2d       	mov	r24, r1
     cb4:	88 1f       	adc	r24, r24
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	08 95       	ret

00000cbc <uECC_vli_mult>:
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	fc 01       	movw	r30, r24
     cc2:	db 01       	movw	r26, r22
     cc4:	ea 01       	movw	r28, r20
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	89 2f       	mov	r24, r25
     cca:	39 2f       	mov	r19, r25
     ccc:	49 2f       	mov	r20, r25
     cce:	51 e0       	ldi	r21, 0x01	; 1
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	c5 0f       	add	r28, r21
     cd4:	d4 1f       	adc	r29, r20
     cd6:	0d 90       	ld	r0, X+
     cd8:	1a 90       	ld	r1, -Y
     cda:	01 9c       	mul	r0, r1
     cdc:	90 0d       	add	r25, r0
     cde:	81 1d       	adc	r24, r1
     ce0:	34 1f       	adc	r19, r20
     ce2:	63 95       	inc	r22
     ce4:	65 17       	cp	r22, r21
     ce6:	b8 f3       	brcs	.-18     	; 0xcd6 <uECC_vli_mult+0x1a>
     ce8:	a5 1b       	sub	r26, r21
     cea:	b4 0b       	sbc	r27, r20
     cec:	91 93       	st	Z+, r25
     cee:	98 2f       	mov	r25, r24
     cf0:	83 2f       	mov	r24, r19
     cf2:	34 2f       	mov	r19, r20
     cf4:	53 95       	inc	r21
     cf6:	52 17       	cp	r21, r18
     cf8:	58 f3       	brcs	.-42     	; 0xcd0 <uECC_vli_mult+0x14>
     cfa:	52 2f       	mov	r21, r18
     cfc:	c2 0f       	add	r28, r18
     cfe:	d4 1f       	adc	r29, r20
     d00:	60 e0       	ldi	r22, 0x00	; 0
     d02:	0d 90       	ld	r0, X+
     d04:	1a 90       	ld	r1, -Y
     d06:	01 9c       	mul	r0, r1
     d08:	90 0d       	add	r25, r0
     d0a:	81 1d       	adc	r24, r1
     d0c:	34 1f       	adc	r19, r20
     d0e:	63 95       	inc	r22
     d10:	65 17       	cp	r22, r21
     d12:	b8 f3       	brcs	.-18     	; 0xd02 <uECC_vli_mult+0x46>
     d14:	c5 0f       	add	r28, r21
     d16:	d4 1f       	adc	r29, r20
     d18:	91 93       	st	Z+, r25
     d1a:	98 2f       	mov	r25, r24
     d1c:	83 2f       	mov	r24, r19
     d1e:	34 2f       	mov	r19, r20
     d20:	5a 95       	dec	r21
     d22:	a5 1b       	sub	r26, r21
     d24:	b4 0b       	sbc	r27, r20
     d26:	54 17       	cp	r21, r20
     d28:	59 f7       	brne	.-42     	; 0xd00 <uECC_vli_mult+0x44>
     d2a:	91 93       	st	Z+, r25
     d2c:	11 24       	eor	r1, r1
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	08 95       	ret

00000d34 <uECC_vli_numBits>:
     d34:	9c 01       	movw	r18, r24
     d36:	61 50       	subi	r22, 0x01	; 1
     d38:	67 fd       	sbrc	r22, 7
     d3a:	16 c0       	rjmp	.+44     	; 0xd68 <uECC_vli_numBits+0x34>
     d3c:	fc 01       	movw	r30, r24
     d3e:	e6 0f       	add	r30, r22
     d40:	f1 1d       	adc	r31, r1
     d42:	67 fd       	sbrc	r22, 7
     d44:	fa 95       	dec	r31
     d46:	80 81       	ld	r24, Z
     d48:	88 23       	and	r24, r24
     d4a:	49 f0       	breq	.+18     	; 0xd5e <uECC_vli_numBits+0x2a>
     d4c:	0d c0       	rjmp	.+26     	; 0xd68 <uECC_vli_numBits+0x34>
     d4e:	f9 01       	movw	r30, r18
     d50:	e6 0f       	add	r30, r22
     d52:	f1 1d       	adc	r31, r1
     d54:	67 fd       	sbrc	r22, 7
     d56:	fa 95       	dec	r31
     d58:	90 81       	ld	r25, Z
     d5a:	91 11       	cpse	r25, r1
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <uECC_vli_numBits+0x34>
     d5e:	61 50       	subi	r22, 0x01	; 1
     d60:	b0 f7       	brcc	.-20     	; 0xd4e <uECC_vli_numBits+0x1a>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	08 95       	ret
     d68:	6f 5f       	subi	r22, 0xFF	; 255
     d6a:	d9 f3       	breq	.-10     	; 0xd62 <uECC_vli_numBits+0x2e>
     d6c:	06 2e       	mov	r0, r22
     d6e:	00 0c       	add	r0, r0
     d70:	77 0b       	sbc	r23, r23
     d72:	26 0f       	add	r18, r22
     d74:	37 1f       	adc	r19, r23
     d76:	f9 01       	movw	r30, r18
     d78:	31 97       	sbiw	r30, 0x01	; 1
     d7a:	80 81       	ld	r24, Z
     d7c:	88 23       	and	r24, r24
     d7e:	91 f0       	breq	.+36     	; 0xda4 <uECC_vli_numBits+0x70>
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	86 95       	lsr	r24
     d84:	9f 5f       	subi	r25, 0xFF	; 255
     d86:	81 11       	cpse	r24, r1
     d88:	fc cf       	rjmp	.-8      	; 0xd82 <uECC_vli_numBits+0x4e>
     d8a:	89 2f       	mov	r24, r25
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	61 50       	subi	r22, 0x01	; 1
     d90:	71 09       	sbc	r23, r1
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	66 0f       	add	r22, r22
     d98:	77 1f       	adc	r23, r23
     d9a:	66 0f       	add	r22, r22
     d9c:	77 1f       	adc	r23, r23
     d9e:	86 0f       	add	r24, r22
     da0:	97 1f       	adc	r25, r23
     da2:	08 95       	ret
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	f2 cf       	rjmp	.-28     	; 0xd8e <uECC_vli_numBits+0x5a>

00000daa <uECC_vli_cmp>:
     daa:	1f 93       	push	r17
     dac:	cf 93       	push	r28
     dae:	df 93       	push	r29
     db0:	cd b7       	in	r28, 0x3d	; 61
     db2:	de b7       	in	r29, 0x3e	; 62
     db4:	a0 97       	sbiw	r28, 0x20	; 32
     db6:	0f b6       	in	r0, 0x3f	; 63
     db8:	f8 94       	cli
     dba:	de bf       	out	0x3e, r29	; 62
     dbc:	0f be       	out	0x3f, r0	; 63
     dbe:	cd bf       	out	0x3d, r28	; 61
     dc0:	14 2f       	mov	r17, r20
     dc2:	24 2f       	mov	r18, r20
     dc4:	ab 01       	movw	r20, r22
     dc6:	bc 01       	movw	r22, r24
     dc8:	ce 01       	movw	r24, r28
     dca:	01 96       	adiw	r24, 0x01	; 1
     dcc:	a6 de       	rcall	.-692    	; 0xb1a <uECC_vli_sub>
     dce:	41 e0       	ldi	r20, 0x01	; 1
     dd0:	81 11       	cpse	r24, r1
     dd2:	01 c0       	rjmp	.+2      	; 0xdd6 <uECC_vli_cmp+0x2c>
     dd4:	40 e0       	ldi	r20, 0x00	; 0
     dd6:	11 16       	cp	r1, r17
     dd8:	f4 f4       	brge	.+60     	; 0xe16 <uECC_vli_cmp+0x6c>
     dda:	fe 01       	movw	r30, r28
     ddc:	31 96       	adiw	r30, 0x01	; 1
     dde:	11 50       	subi	r17, 0x01	; 1
     de0:	21 2f       	mov	r18, r17
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	2f 5f       	subi	r18, 0xFF	; 255
     de6:	3f 4f       	sbci	r19, 0xFF	; 255
     de8:	2e 0f       	add	r18, r30
     dea:	3f 1f       	adc	r19, r31
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	81 91       	ld	r24, Z+
     df0:	98 2b       	or	r25, r24
     df2:	2e 17       	cp	r18, r30
     df4:	3f 07       	cpc	r19, r31
     df6:	d9 f7       	brne	.-10     	; 0xdee <uECC_vli_cmp+0x44>
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	99 23       	and	r25, r25
     dfc:	61 f0       	breq	.+24     	; 0xe16 <uECC_vli_cmp+0x6c>
     dfe:	44 0f       	add	r20, r20
     e00:	84 1b       	sub	r24, r20
     e02:	a0 96       	adiw	r28, 0x20	; 32
     e04:	0f b6       	in	r0, 0x3f	; 63
     e06:	f8 94       	cli
     e08:	de bf       	out	0x3e, r29	; 62
     e0a:	0f be       	out	0x3f, r0	; 63
     e0c:	cd bf       	out	0x3d, r28	; 61
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	1f 91       	pop	r17
     e14:	08 95       	ret
     e16:	80 e0       	ldi	r24, 0x00	; 0
     e18:	f2 cf       	rjmp	.-28     	; 0xdfe <uECC_vli_cmp+0x54>

00000e1a <uECC_vli_modAdd>:
     e1a:	ef 92       	push	r14
     e1c:	ff 92       	push	r15
     e1e:	0f 93       	push	r16
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	ec 01       	movw	r28, r24
     e26:	79 01       	movw	r14, r18
     e28:	20 2f       	mov	r18, r16
     e2a:	a6 dd       	rcall	.-1204   	; 0x978 <uECC_vli_add>
     e2c:	81 11       	cpse	r24, r1
     e2e:	1d c0       	rjmp	.+58     	; 0xe6a <uECC_vli_modAdd+0x50>
     e30:	2f ef       	ldi	r18, 0xFF	; 255
     e32:	20 0f       	add	r18, r16
     e34:	27 fd       	sbrc	r18, 7
     e36:	19 c0       	rjmp	.+50     	; 0xe6a <uECC_vli_modAdd+0x50>
     e38:	04 c0       	rjmp	.+8      	; 0xe42 <uECC_vli_modAdd+0x28>
     e3a:	38 17       	cp	r19, r24
     e3c:	b0 f0       	brcs	.+44     	; 0xe6a <uECC_vli_modAdd+0x50>
     e3e:	21 50       	subi	r18, 0x01	; 1
     e40:	a0 f0       	brcs	.+40     	; 0xe6a <uECC_vli_modAdd+0x50>
     e42:	82 2f       	mov	r24, r18
     e44:	02 2e       	mov	r0, r18
     e46:	00 0c       	add	r0, r0
     e48:	99 0b       	sbc	r25, r25
     e4a:	f7 01       	movw	r30, r14
     e4c:	e8 0f       	add	r30, r24
     e4e:	f9 1f       	adc	r31, r25
     e50:	30 81       	ld	r19, Z
     e52:	fe 01       	movw	r30, r28
     e54:	e8 0f       	add	r30, r24
     e56:	f9 1f       	adc	r31, r25
     e58:	80 81       	ld	r24, Z
     e5a:	83 17       	cp	r24, r19
     e5c:	70 f7       	brcc	.-36     	; 0xe3a <uECC_vli_modAdd+0x20>
     e5e:	df 91       	pop	r29
     e60:	cf 91       	pop	r28
     e62:	0f 91       	pop	r16
     e64:	ff 90       	pop	r15
     e66:	ef 90       	pop	r14
     e68:	08 95       	ret
     e6a:	20 2f       	mov	r18, r16
     e6c:	a7 01       	movw	r20, r14
     e6e:	be 01       	movw	r22, r28
     e70:	ce 01       	movw	r24, r28
     e72:	df 91       	pop	r29
     e74:	cf 91       	pop	r28
     e76:	0f 91       	pop	r16
     e78:	ff 90       	pop	r15
     e7a:	ef 90       	pop	r14
     e7c:	4e ce       	rjmp	.-868    	; 0xb1a <uECC_vli_sub>

00000e7e <uECC_vli_modSub>:
     e7e:	ef 92       	push	r14
     e80:	ff 92       	push	r15
     e82:	0f 93       	push	r16
     e84:	cf 93       	push	r28
     e86:	df 93       	push	r29
     e88:	ec 01       	movw	r28, r24
     e8a:	79 01       	movw	r14, r18
     e8c:	20 2f       	mov	r18, r16
     e8e:	45 de       	rcall	.-886    	; 0xb1a <uECC_vli_sub>
     e90:	81 11       	cpse	r24, r1
     e92:	06 c0       	rjmp	.+12     	; 0xea0 <uECC_vli_modSub+0x22>
     e94:	df 91       	pop	r29
     e96:	cf 91       	pop	r28
     e98:	0f 91       	pop	r16
     e9a:	ff 90       	pop	r15
     e9c:	ef 90       	pop	r14
     e9e:	08 95       	ret
     ea0:	20 2f       	mov	r18, r16
     ea2:	a7 01       	movw	r20, r14
     ea4:	be 01       	movw	r22, r28
     ea6:	ce 01       	movw	r24, r28
     ea8:	df 91       	pop	r29
     eaa:	cf 91       	pop	r28
     eac:	0f 91       	pop	r16
     eae:	ff 90       	pop	r15
     eb0:	ef 90       	pop	r14
     eb2:	62 cd       	rjmp	.-1340   	; 0x978 <uECC_vli_add>

00000eb4 <uECC_vli_mmod>:
     eb4:	2f 92       	push	r2
     eb6:	3f 92       	push	r3
     eb8:	4f 92       	push	r4
     eba:	5f 92       	push	r5
     ebc:	6f 92       	push	r6
     ebe:	7f 92       	push	r7
     ec0:	8f 92       	push	r8
     ec2:	9f 92       	push	r9
     ec4:	af 92       	push	r10
     ec6:	bf 92       	push	r11
     ec8:	cf 92       	push	r12
     eca:	df 92       	push	r13
     ecc:	ef 92       	push	r14
     ece:	ff 92       	push	r15
     ed0:	0f 93       	push	r16
     ed2:	1f 93       	push	r17
     ed4:	cf 93       	push	r28
     ed6:	df 93       	push	r29
     ed8:	cd b7       	in	r28, 0x3d	; 61
     eda:	de b7       	in	r29, 0x3e	; 62
     edc:	c7 58       	subi	r28, 0x87	; 135
     ede:	d1 09       	sbc	r29, r1
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	f8 94       	cli
     ee4:	de bf       	out	0x3e, r29	; 62
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	cd bf       	out	0x3d, r28	; 61
     eea:	cb 57       	subi	r28, 0x7B	; 123
     eec:	df 4f       	sbci	r29, 0xFF	; 255
     eee:	99 83       	std	Y+1, r25	; 0x01
     ef0:	88 83       	st	Y, r24
     ef2:	c5 58       	subi	r28, 0x85	; 133
     ef4:	d0 40       	sbci	r29, 0x00	; 0
     ef6:	b6 2e       	mov	r11, r22
     ef8:	a7 2e       	mov	r10, r23
     efa:	94 2e       	mov	r9, r20
     efc:	55 2e       	mov	r5, r21
     efe:	82 2e       	mov	r8, r18
     f00:	ce 01       	movw	r24, r28
     f02:	01 96       	adiw	r24, 0x01	; 1
     f04:	cf 57       	subi	r28, 0x7F	; 127
     f06:	df 4f       	sbci	r29, 0xFF	; 255
     f08:	99 83       	std	Y+1, r25	; 0x01
     f0a:	88 83       	st	Y, r24
     f0c:	c1 58       	subi	r28, 0x81	; 129
     f0e:	d0 40       	sbci	r29, 0x00	; 0
     f10:	cd 57       	subi	r28, 0x7D	; 125
     f12:	df 4f       	sbci	r29, 0xFF	; 255
     f14:	68 83       	st	Y, r22
     f16:	c3 58       	subi	r28, 0x83	; 131
     f18:	d0 40       	sbci	r29, 0x00	; 0
     f1a:	cc 57       	subi	r28, 0x7C	; 124
     f1c:	df 4f       	sbci	r29, 0xFF	; 255
     f1e:	78 83       	st	Y, r23
     f20:	c4 58       	subi	r28, 0x84	; 132
     f22:	d0 40       	sbci	r29, 0x00	; 0
     f24:	02 2f       	mov	r16, r18
     f26:	02 2e       	mov	r0, r18
     f28:	00 0c       	add	r0, r0
     f2a:	11 0b       	sbc	r17, r17
     f2c:	62 2f       	mov	r22, r18
     f2e:	84 2f       	mov	r24, r20
     f30:	95 2f       	mov	r25, r21
     f32:	00 df       	rcall	.-512    	; 0xd34 <uECC_vli_numBits>
     f34:	78 01       	movw	r14, r16
     f36:	e2 94       	swap	r14
     f38:	f2 94       	swap	r15
     f3a:	20 ef       	ldi	r18, 0xF0	; 240
     f3c:	f2 22       	and	r15, r18
     f3e:	fe 24       	eor	r15, r14
     f40:	e2 22       	and	r14, r18
     f42:	fe 24       	eor	r15, r14
     f44:	e8 1a       	sub	r14, r24
     f46:	f9 0a       	sbc	r15, r25
     f48:	b7 01       	movw	r22, r14
     f4a:	f7 fc       	sbrc	r15, 7
     f4c:	00 c1       	rjmp	.+512    	; 0x114e <__stack+0x4f>
     f4e:	3b 01       	movw	r6, r22
     f50:	75 94       	asr	r7
     f52:	67 94       	ror	r6
     f54:	75 94       	asr	r7
     f56:	67 94       	ror	r6
     f58:	75 94       	asr	r7
     f5a:	67 94       	ror	r6
     f5c:	a7 01       	movw	r20, r14
     f5e:	47 70       	andi	r20, 0x07	; 7
     f60:	50 78       	andi	r21, 0x80	; 128
     f62:	57 fd       	sbrc	r21, 7
     f64:	f7 c0       	rjmp	.+494    	; 0x1154 <__stack+0x55>
     f66:	d4 2e       	mov	r13, r20
     f68:	66 2d       	mov	r22, r6
     f6a:	ce 01       	movw	r24, r28
     f6c:	8f 5b       	subi	r24, 0xBF	; 191
     f6e:	9f 4f       	sbci	r25, 0xFF	; 255
     f70:	20 dc       	rcall	.-1984   	; 0x7b2 <uECC_vli_clear>
     f72:	1d 14       	cp	r1, r13
     f74:	0c f0       	brlt	.+2      	; 0xf78 <uECC_vli_mmod+0xc4>
     f76:	f5 c0       	rjmp	.+490    	; 0x1162 <__stack+0x63>
     f78:	88 20       	and	r8, r8
     f7a:	a9 f1       	breq	.+106    	; 0xfe6 <uECC_vli_mmod+0x132>
     f7c:	4d 2d       	mov	r20, r13
     f7e:	dd 0c       	add	r13, r13
     f80:	55 0b       	sbc	r21, r21
     f82:	88 e0       	ldi	r24, 0x08	; 8
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	6c 01       	movw	r12, r24
     f88:	c4 1a       	sub	r12, r20
     f8a:	d5 0a       	sbc	r13, r21
     f8c:	a9 2d       	mov	r26, r9
     f8e:	b5 2d       	mov	r27, r5
     f90:	66 2d       	mov	r22, r6
     f92:	66 0c       	add	r6, r6
     f94:	77 0b       	sbc	r23, r23
     f96:	e1 e4       	ldi	r30, 0x41	; 65
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	ec 0f       	add	r30, r28
     f9c:	fd 1f       	adc	r31, r29
     f9e:	e6 0f       	add	r30, r22
     fa0:	f7 1f       	adc	r31, r23
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	88 0d       	add	r24, r8
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	01 96       	adiw	r24, 0x01	; 1
     faa:	68 0f       	add	r22, r24
     fac:	79 1f       	adc	r23, r25
     fae:	81 e4       	ldi	r24, 0x41	; 65
     fb0:	28 2e       	mov	r2, r24
     fb2:	31 2c       	mov	r3, r1
     fb4:	2c 0e       	add	r2, r28
     fb6:	3d 1e       	adc	r3, r29
     fb8:	62 0d       	add	r22, r2
     fba:	73 1d       	adc	r23, r3
     fbc:	91 2c       	mov	r9, r1
     fbe:	8d 91       	ld	r24, X+
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	9c 01       	movw	r18, r24
     fc4:	04 2e       	mov	r0, r20
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <uECC_vli_mmod+0x116>
     fc8:	22 0f       	add	r18, r18
     fca:	0a 94       	dec	r0
     fcc:	ea f7       	brpl	.-6      	; 0xfc8 <uECC_vli_mmod+0x114>
     fce:	29 29       	or	r18, r9
     fd0:	21 93       	st	Z+, r18
     fd2:	0c 2c       	mov	r0, r12
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <uECC_vli_mmod+0x126>
     fd6:	95 95       	asr	r25
     fd8:	87 95       	ror	r24
     fda:	0a 94       	dec	r0
     fdc:	e2 f7       	brpl	.-8      	; 0xfd6 <uECC_vli_mmod+0x122>
     fde:	98 2e       	mov	r9, r24
     fe0:	6e 17       	cp	r22, r30
     fe2:	7f 07       	cpc	r23, r31
     fe4:	61 f7       	brne	.-40     	; 0xfbe <uECC_vli_mmod+0x10a>
     fe6:	f7 fc       	sbrc	r15, 7
     fe8:	ca c0       	rjmp	.+404    	; 0x117e <__stack+0x7f>
     fea:	38 01       	movw	r6, r16
     fec:	21 e0       	ldi	r18, 0x01	; 1
     fee:	62 1a       	sub	r6, r18
     ff0:	71 08       	sbc	r7, r1
     ff2:	61 e4       	ldi	r22, 0x41	; 65
     ff4:	c6 2e       	mov	r12, r22
     ff6:	d1 2c       	mov	r13, r1
     ff8:	cc 0e       	add	r12, r28
     ffa:	dd 1e       	adc	r13, r29
     ffc:	c0 0e       	add	r12, r16
     ffe:	d1 1e       	adc	r13, r17
    1000:	00 0f       	add	r16, r16
    1002:	11 1f       	adc	r17, r17
    1004:	99 24       	eor	r9, r9
    1006:	93 94       	inc	r9
    1008:	aa 24       	eor	r10, r10
    100a:	a3 94       	inc	r10
    100c:	b1 2c       	mov	r11, r1
    100e:	81 e4       	ldi	r24, 0x41	; 65
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	8c 0f       	add	r24, r28
    1014:	9d 1f       	adc	r25, r29
    1016:	68 0e       	add	r6, r24
    1018:	79 1e       	adc	r7, r25
    101a:	26 01       	movw	r4, r12
    101c:	10 16       	cp	r1, r16
    101e:	11 06       	cpc	r1, r17
    1020:	0c f0       	brlt	.+2      	; 0x1024 <uECC_vli_mmod+0x170>
    1022:	93 c0       	rjmp	.+294    	; 0x114a <__stack+0x4b>
    1024:	89 2d       	mov	r24, r9
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	fc 01       	movw	r30, r24
    102a:	ee 0f       	add	r30, r30
    102c:	ff 1f       	adc	r31, r31
    102e:	31 e8       	ldi	r19, 0x81	; 129
    1030:	23 2e       	mov	r2, r19
    1032:	31 2c       	mov	r3, r1
    1034:	2c 0e       	add	r2, r28
    1036:	3d 1e       	adc	r3, r29
    1038:	e2 0d       	add	r30, r2
    103a:	f3 1d       	adc	r31, r3
    103c:	60 81       	ld	r22, Z
    103e:	71 81       	ldd	r23, Z+1	; 0x01
    1040:	f5 01       	movw	r30, r10
    1042:	e8 1b       	sub	r30, r24
    1044:	f9 0b       	sbc	r31, r25
    1046:	ee 0f       	add	r30, r30
    1048:	ff 1f       	adc	r31, r31
    104a:	e2 0d       	add	r30, r2
    104c:	f3 1d       	adc	r31, r3
    104e:	40 81       	ld	r20, Z
    1050:	51 81       	ldd	r21, Z+1	; 0x01
    1052:	20 e0       	ldi	r18, 0x00	; 0
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	a0 e0       	ldi	r26, 0x00	; 0
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	80 e0       	ldi	r24, 0x00	; 0
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	fb 01       	movw	r30, r22
    1060:	e8 0f       	add	r30, r24
    1062:	f9 1f       	adc	r31, r25
    1064:	20 80       	ld	r2, Z
    1066:	c9 57       	subi	r28, 0x79	; 121
    1068:	df 4f       	sbci	r29, 0xFF	; 255
    106a:	28 82       	st	Y, r2
    106c:	c7 58       	subi	r28, 0x87	; 135
    106e:	d0 40       	sbci	r29, 0x00	; 0
    1070:	e1 e4       	ldi	r30, 0x41	; 65
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	ec 0f       	add	r30, r28
    1076:	fd 1f       	adc	r31, r29
    1078:	2e 0f       	add	r18, r30
    107a:	3f 1f       	adc	r19, r31
    107c:	f9 01       	movw	r30, r18
    107e:	20 81       	ld	r18, Z
    1080:	22 1a       	sub	r2, r18
    1082:	22 2d       	mov	r18, r2
    1084:	2b 1b       	sub	r18, r27
    1086:	c9 57       	subi	r28, 0x79	; 121
    1088:	df 4f       	sbci	r29, 0xFF	; 255
    108a:	f8 81       	ld	r31, Y
    108c:	c7 58       	subi	r28, 0x87	; 135
    108e:	d0 40       	sbci	r29, 0x00	; 0
    1090:	f2 17       	cp	r31, r18
    1092:	21 f0       	breq	.+8      	; 0x109c <uECC_vli_mmod+0x1e8>
    1094:	b1 e0       	ldi	r27, 0x01	; 1
    1096:	f2 17       	cp	r31, r18
    1098:	08 f0       	brcs	.+2      	; 0x109c <uECC_vli_mmod+0x1e8>
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	fa 01       	movw	r30, r20
    109e:	e8 0f       	add	r30, r24
    10a0:	f9 1f       	adc	r31, r25
    10a2:	20 83       	st	Z, r18
    10a4:	af 5f       	subi	r26, 0xFF	; 255
    10a6:	8a 2f       	mov	r24, r26
    10a8:	0a 2e       	mov	r0, r26
    10aa:	00 0c       	add	r0, r0
    10ac:	99 0b       	sbc	r25, r25
    10ae:	9c 01       	movw	r18, r24
    10b0:	80 17       	cp	r24, r16
    10b2:	91 07       	cpc	r25, r17
    10b4:	a4 f2       	brlt	.-88     	; 0x105e <uECC_vli_mmod+0x1aa>
    10b6:	33 24       	eor	r3, r3
    10b8:	33 94       	inc	r3
    10ba:	9b 12       	cpse	r9, r27
    10bc:	31 2c       	mov	r3, r1
    10be:	93 2c       	mov	r9, r3
    10c0:	68 2d       	mov	r22, r8
    10c2:	ce 01       	movw	r24, r28
    10c4:	8f 5b       	subi	r24, 0xBF	; 191
    10c6:	9f 4f       	sbci	r25, 0xFF	; 255
    10c8:	e8 db       	rcall	.-2096   	; 0x89a <uECC_vli_rshift1>
    10ca:	f2 01       	movw	r30, r4
    10cc:	80 81       	ld	r24, Z
    10ce:	f0 e8       	ldi	r31, 0x80	; 128
    10d0:	8f 9f       	mul	r24, r31
    10d2:	c0 01       	movw	r24, r0
    10d4:	11 24       	eor	r1, r1
    10d6:	f3 01       	movw	r30, r6
    10d8:	90 81       	ld	r25, Z
    10da:	89 2b       	or	r24, r25
    10dc:	80 83       	st	Z, r24
    10de:	68 2d       	mov	r22, r8
    10e0:	c6 01       	movw	r24, r12
    10e2:	db db       	rcall	.-2122   	; 0x89a <uECC_vli_rshift1>
    10e4:	f1 e0       	ldi	r31, 0x01	; 1
    10e6:	ef 1a       	sub	r14, r31
    10e8:	f1 08       	sbc	r15, r1
    10ea:	08 f0       	brcs	.+2      	; 0x10ee <uECC_vli_mmod+0x23a>
    10ec:	97 cf       	rjmp	.-210    	; 0x101c <uECC_vli_mmod+0x168>
    10ee:	e3 2d       	mov	r30, r3
    10f0:	f0 e0       	ldi	r31, 0x00	; 0
    10f2:	ee 0f       	add	r30, r30
    10f4:	ff 1f       	adc	r31, r31
    10f6:	81 e8       	ldi	r24, 0x81	; 129
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	8c 0f       	add	r24, r28
    10fc:	9d 1f       	adc	r25, r29
    10fe:	e8 0f       	add	r30, r24
    1100:	f9 1f       	adc	r31, r25
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	48 2d       	mov	r20, r8
    1108:	cb 57       	subi	r28, 0x7B	; 123
    110a:	df 4f       	sbci	r29, 0xFF	; 255
    110c:	88 81       	ld	r24, Y
    110e:	99 81       	ldd	r25, Y+1	; 0x01
    1110:	c5 58       	subi	r28, 0x85	; 133
    1112:	d0 40       	sbci	r29, 0x00	; 0
    1114:	75 db       	rcall	.-2326   	; 0x800 <uECC_vli_set>
    1116:	c9 57       	subi	r28, 0x79	; 121
    1118:	df 4f       	sbci	r29, 0xFF	; 255
    111a:	0f b6       	in	r0, 0x3f	; 63
    111c:	f8 94       	cli
    111e:	de bf       	out	0x3e, r29	; 62
    1120:	0f be       	out	0x3f, r0	; 63
    1122:	cd bf       	out	0x3d, r28	; 61
    1124:	df 91       	pop	r29
    1126:	cf 91       	pop	r28
    1128:	1f 91       	pop	r17
    112a:	0f 91       	pop	r16
    112c:	ff 90       	pop	r15
    112e:	ef 90       	pop	r14
    1130:	df 90       	pop	r13
    1132:	cf 90       	pop	r12
    1134:	bf 90       	pop	r11
    1136:	af 90       	pop	r10
    1138:	9f 90       	pop	r9
    113a:	8f 90       	pop	r8
    113c:	7f 90       	pop	r7
    113e:	6f 90       	pop	r6
    1140:	5f 90       	pop	r5
    1142:	4f 90       	pop	r4
    1144:	3f 90       	pop	r3
    1146:	2f 90       	pop	r2
    1148:	08 95       	ret
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	b4 cf       	rjmp	.-152    	; 0x10b6 <uECC_vli_mmod+0x202>
    114e:	69 5f       	subi	r22, 0xF9	; 249
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	fd ce       	rjmp	.-518    	; 0xf4e <uECC_vli_mmod+0x9a>
    1154:	41 50       	subi	r20, 0x01	; 1
    1156:	51 09       	sbc	r21, r1
    1158:	48 6f       	ori	r20, 0xF8	; 248
    115a:	5f 6f       	ori	r21, 0xFF	; 255
    115c:	4f 5f       	subi	r20, 0xFF	; 255
    115e:	5f 4f       	sbci	r21, 0xFF	; 255
    1160:	02 cf       	rjmp	.-508    	; 0xf66 <uECC_vli_mmod+0xb2>
    1162:	48 2d       	mov	r20, r8
    1164:	69 2d       	mov	r22, r9
    1166:	75 2d       	mov	r23, r5
    1168:	81 e4       	ldi	r24, 0x41	; 65
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	8c 0f       	add	r24, r28
    116e:	9d 1f       	adc	r25, r29
    1170:	86 0d       	add	r24, r6
    1172:	91 1d       	adc	r25, r1
    1174:	67 fc       	sbrc	r6, 7
    1176:	9a 95       	dec	r25
    1178:	43 db       	rcall	.-2426   	; 0x800 <uECC_vli_set>
    117a:	f7 fe       	sbrs	r15, 7
    117c:	36 cf       	rjmp	.-404    	; 0xfea <uECC_vli_mmod+0x136>
    117e:	6b 2d       	mov	r22, r11
    1180:	7a 2d       	mov	r23, r10
    1182:	c1 cf       	rjmp	.-126    	; 0x1106 <__stack+0x7>

00001184 <double_jacobian_default>:
    1184:	4f 92       	push	r4
    1186:	5f 92       	push	r5
    1188:	6f 92       	push	r6
    118a:	7f 92       	push	r7
    118c:	8f 92       	push	r8
    118e:	9f 92       	push	r9
    1190:	af 92       	push	r10
    1192:	bf 92       	push	r11
    1194:	cf 92       	push	r12
    1196:	df 92       	push	r13
    1198:	ef 92       	push	r14
    119a:	ff 92       	push	r15
    119c:	0f 93       	push	r16
    119e:	1f 93       	push	r17
    11a0:	cf 93       	push	r28
    11a2:	df 93       	push	r29
    11a4:	cd b7       	in	r28, 0x3d	; 61
    11a6:	de b7       	in	r29, 0x3e	; 62
    11a8:	c0 58       	subi	r28, 0x80	; 128
    11aa:	d1 09       	sbc	r29, r1
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	f8 94       	cli
    11b0:	de bf       	out	0x3e, r29	; 62
    11b2:	0f be       	out	0x3f, r0	; 63
    11b4:	cd bf       	out	0x3d, r28	; 61
    11b6:	6c 01       	movw	r12, r24
    11b8:	59 01       	movw	r10, r18
    11ba:	d9 01       	movw	r26, r18
    11bc:	1c 91       	ld	r17, X
    11be:	11 16       	cp	r1, r17
    11c0:	7c f4       	brge	.+30     	; 0x11e0 <double_jacobian_default+0x5c>
    11c2:	fa 01       	movw	r30, r20
    11c4:	af ef       	ldi	r26, 0xFF	; 255
    11c6:	a1 0f       	add	r26, r17
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	11 96       	adiw	r26, 0x01	; 1
    11cc:	a4 0f       	add	r26, r20
    11ce:	b5 1f       	adc	r27, r21
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	31 91       	ld	r19, Z+
    11d4:	93 2b       	or	r25, r19
    11d6:	ea 17       	cp	r30, r26
    11d8:	fb 07       	cpc	r31, r27
    11da:	d9 f7       	brne	.-10     	; 0x11d2 <double_jacobian_default+0x4e>
    11dc:	91 11       	cpse	r25, r1
    11de:	18 c0       	rjmp	.+48     	; 0x1210 <double_jacobian_default+0x8c>
    11e0:	c0 58       	subi	r28, 0x80	; 128
    11e2:	df 4f       	sbci	r29, 0xFF	; 255
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	f8 94       	cli
    11e8:	de bf       	out	0x3e, r29	; 62
    11ea:	0f be       	out	0x3f, r0	; 63
    11ec:	cd bf       	out	0x3d, r28	; 61
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	1f 91       	pop	r17
    11f4:	0f 91       	pop	r16
    11f6:	ff 90       	pop	r15
    11f8:	ef 90       	pop	r14
    11fa:	df 90       	pop	r13
    11fc:	cf 90       	pop	r12
    11fe:	bf 90       	pop	r11
    1200:	af 90       	pop	r10
    1202:	9f 90       	pop	r9
    1204:	8f 90       	pop	r8
    1206:	7f 90       	pop	r7
    1208:	6f 90       	pop	r6
    120a:	5f 90       	pop	r5
    120c:	4f 90       	pop	r4
    120e:	08 95       	ret
    1210:	7a 01       	movw	r14, r20
    1212:	4b 01       	movw	r8, r22
    1214:	21 2f       	mov	r18, r17
    1216:	ab 01       	movw	r20, r22
    1218:	ce 01       	movw	r24, r28
    121a:	01 96       	adiw	r24, 0x01	; 1
    121c:	4f dd       	rcall	.-1378   	; 0xcbc <uECC_vli_mult>
    121e:	25 01       	movw	r4, r10
    1220:	ba ea       	ldi	r27, 0xAA	; 170
    1222:	4b 0e       	add	r4, r27
    1224:	51 1c       	adc	r5, r1
    1226:	d2 01       	movw	r26, r4
    1228:	ed 91       	ld	r30, X+
    122a:	fc 91       	ld	r31, X
    122c:	be 01       	movw	r22, r28
    122e:	6f 5f       	subi	r22, 0xFF	; 255
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	ce 01       	movw	r24, r28
    1234:	8f 59       	subi	r24, 0x9F	; 159
    1236:	9f 4f       	sbci	r25, 0xFF	; 255
    1238:	09 95       	icall
    123a:	f5 01       	movw	r30, r10
    123c:	20 81       	ld	r18, Z
    123e:	ae 01       	movw	r20, r28
    1240:	4f 59       	subi	r20, 0x9F	; 159
    1242:	5f 4f       	sbci	r21, 0xFF	; 255
    1244:	b6 01       	movw	r22, r12
    1246:	ce 01       	movw	r24, r28
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	38 dd       	rcall	.-1424   	; 0xcbc <uECC_vli_mult>
    124c:	d2 01       	movw	r26, r4
    124e:	ed 91       	ld	r30, X+
    1250:	fc 91       	ld	r31, X
    1252:	be 01       	movw	r22, r28
    1254:	6f 5f       	subi	r22, 0xFF	; 255
    1256:	7f 4f       	sbci	r23, 0xFF	; 255
    1258:	ce 01       	movw	r24, r28
    125a:	8f 5b       	subi	r24, 0xBF	; 191
    125c:	9f 4f       	sbci	r25, 0xFF	; 255
    125e:	09 95       	icall
    1260:	f5 01       	movw	r30, r10
    1262:	20 81       	ld	r18, Z
    1264:	ae 01       	movw	r20, r28
    1266:	4f 59       	subi	r20, 0x9F	; 159
    1268:	5f 4f       	sbci	r21, 0xFF	; 255
    126a:	ba 01       	movw	r22, r20
    126c:	ce 01       	movw	r24, r28
    126e:	01 96       	adiw	r24, 0x01	; 1
    1270:	25 dd       	rcall	.-1462   	; 0xcbc <uECC_vli_mult>
    1272:	d2 01       	movw	r26, r4
    1274:	ed 91       	ld	r30, X+
    1276:	fc 91       	ld	r31, X
    1278:	be 01       	movw	r22, r28
    127a:	6f 5f       	subi	r22, 0xFF	; 255
    127c:	7f 4f       	sbci	r23, 0xFF	; 255
    127e:	ce 01       	movw	r24, r28
    1280:	8f 59       	subi	r24, 0x9F	; 159
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	09 95       	icall
    1286:	f5 01       	movw	r30, r10
    1288:	20 81       	ld	r18, Z
    128a:	a7 01       	movw	r20, r14
    128c:	b4 01       	movw	r22, r8
    128e:	ce 01       	movw	r24, r28
    1290:	01 96       	adiw	r24, 0x01	; 1
    1292:	14 dd       	rcall	.-1496   	; 0xcbc <uECC_vli_mult>
    1294:	d2 01       	movw	r26, r4
    1296:	ed 91       	ld	r30, X+
    1298:	fc 91       	ld	r31, X
    129a:	be 01       	movw	r22, r28
    129c:	6f 5f       	subi	r22, 0xFF	; 255
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	c4 01       	movw	r24, r8
    12a2:	09 95       	icall
    12a4:	f5 01       	movw	r30, r10
    12a6:	20 81       	ld	r18, Z
    12a8:	a7 01       	movw	r20, r14
    12aa:	b7 01       	movw	r22, r14
    12ac:	ce 01       	movw	r24, r28
    12ae:	01 96       	adiw	r24, 0x01	; 1
    12b0:	05 dd       	rcall	.-1526   	; 0xcbc <uECC_vli_mult>
    12b2:	d2 01       	movw	r26, r4
    12b4:	ed 91       	ld	r30, X+
    12b6:	fc 91       	ld	r31, X
    12b8:	be 01       	movw	r22, r28
    12ba:	6f 5f       	subi	r22, 0xFF	; 255
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	c7 01       	movw	r24, r14
    12c0:	09 95       	icall
    12c2:	35 01       	movw	r6, r10
    12c4:	b4 e0       	ldi	r27, 0x04	; 4
    12c6:	6b 0e       	add	r6, r27
    12c8:	71 1c       	adc	r7, r1
    12ca:	01 2f       	mov	r16, r17
    12cc:	93 01       	movw	r18, r6
    12ce:	a7 01       	movw	r20, r14
    12d0:	b6 01       	movw	r22, r12
    12d2:	c6 01       	movw	r24, r12
    12d4:	a2 dd       	rcall	.-1212   	; 0xe1a <uECC_vli_modAdd>
    12d6:	93 01       	movw	r18, r6
    12d8:	a7 01       	movw	r20, r14
    12da:	b7 01       	movw	r22, r14
    12dc:	c7 01       	movw	r24, r14
    12de:	9d dd       	rcall	.-1222   	; 0xe1a <uECC_vli_modAdd>
    12e0:	93 01       	movw	r18, r6
    12e2:	a7 01       	movw	r20, r14
    12e4:	b6 01       	movw	r22, r12
    12e6:	c7 01       	movw	r24, r14
    12e8:	ca dd       	rcall	.-1132   	; 0xe7e <uECC_vli_modSub>
    12ea:	f5 01       	movw	r30, r10
    12ec:	20 81       	ld	r18, Z
    12ee:	a7 01       	movw	r20, r14
    12f0:	b6 01       	movw	r22, r12
    12f2:	ce 01       	movw	r24, r28
    12f4:	01 96       	adiw	r24, 0x01	; 1
    12f6:	e2 dc       	rcall	.-1596   	; 0xcbc <uECC_vli_mult>
    12f8:	d2 01       	movw	r26, r4
    12fa:	ed 91       	ld	r30, X+
    12fc:	fc 91       	ld	r31, X
    12fe:	be 01       	movw	r22, r28
    1300:	6f 5f       	subi	r22, 0xFF	; 255
    1302:	7f 4f       	sbci	r23, 0xFF	; 255
    1304:	c6 01       	movw	r24, r12
    1306:	09 95       	icall
    1308:	93 01       	movw	r18, r6
    130a:	a6 01       	movw	r20, r12
    130c:	b6 01       	movw	r22, r12
    130e:	c7 01       	movw	r24, r14
    1310:	84 dd       	rcall	.-1272   	; 0xe1a <uECC_vli_modAdd>
    1312:	93 01       	movw	r18, r6
    1314:	a7 01       	movw	r20, r14
    1316:	b6 01       	movw	r22, r12
    1318:	c6 01       	movw	r24, r12
    131a:	7f dd       	rcall	.-1282   	; 0xe1a <uECC_vli_modAdd>
    131c:	f6 01       	movw	r30, r12
    131e:	80 81       	ld	r24, Z
    1320:	80 fd       	sbrc	r24, 0
    1322:	4f c0       	rjmp	.+158    	; 0x13c2 <double_jacobian_default+0x23e>
    1324:	61 2f       	mov	r22, r17
    1326:	c6 01       	movw	r24, r12
    1328:	b8 da       	rcall	.-2704   	; 0x89a <uECC_vli_rshift1>
    132a:	d5 01       	movw	r26, r10
    132c:	2c 91       	ld	r18, X
    132e:	a6 01       	movw	r20, r12
    1330:	b6 01       	movw	r22, r12
    1332:	ce 01       	movw	r24, r28
    1334:	01 96       	adiw	r24, 0x01	; 1
    1336:	c2 dc       	rcall	.-1660   	; 0xcbc <uECC_vli_mult>
    1338:	d2 01       	movw	r26, r4
    133a:	ed 91       	ld	r30, X+
    133c:	fc 91       	ld	r31, X
    133e:	be 01       	movw	r22, r28
    1340:	6f 5f       	subi	r22, 0xFF	; 255
    1342:	7f 4f       	sbci	r23, 0xFF	; 255
    1344:	c7 01       	movw	r24, r14
    1346:	09 95       	icall
    1348:	01 2f       	mov	r16, r17
    134a:	93 01       	movw	r18, r6
    134c:	ae 01       	movw	r20, r28
    134e:	4f 5b       	subi	r20, 0xBF	; 191
    1350:	5f 4f       	sbci	r21, 0xFF	; 255
    1352:	b7 01       	movw	r22, r14
    1354:	c7 01       	movw	r24, r14
    1356:	93 dd       	rcall	.-1242   	; 0xe7e <uECC_vli_modSub>
    1358:	93 01       	movw	r18, r6
    135a:	ae 01       	movw	r20, r28
    135c:	4f 5b       	subi	r20, 0xBF	; 191
    135e:	5f 4f       	sbci	r21, 0xFF	; 255
    1360:	b7 01       	movw	r22, r14
    1362:	c7 01       	movw	r24, r14
    1364:	8c dd       	rcall	.-1256   	; 0xe7e <uECC_vli_modSub>
    1366:	93 01       	movw	r18, r6
    1368:	a7 01       	movw	r20, r14
    136a:	be 01       	movw	r22, r28
    136c:	6f 5b       	subi	r22, 0xBF	; 191
    136e:	7f 4f       	sbci	r23, 0xFF	; 255
    1370:	cb 01       	movw	r24, r22
    1372:	85 dd       	rcall	.-1270   	; 0xe7e <uECC_vli_modSub>
    1374:	f5 01       	movw	r30, r10
    1376:	20 81       	ld	r18, Z
    1378:	ae 01       	movw	r20, r28
    137a:	4f 5b       	subi	r20, 0xBF	; 191
    137c:	5f 4f       	sbci	r21, 0xFF	; 255
    137e:	b6 01       	movw	r22, r12
    1380:	ce 01       	movw	r24, r28
    1382:	01 96       	adiw	r24, 0x01	; 1
    1384:	9b dc       	rcall	.-1738   	; 0xcbc <uECC_vli_mult>
    1386:	d2 01       	movw	r26, r4
    1388:	ed 91       	ld	r30, X+
    138a:	fc 91       	ld	r31, X
    138c:	be 01       	movw	r22, r28
    138e:	6f 5f       	subi	r22, 0xFF	; 255
    1390:	7f 4f       	sbci	r23, 0xFF	; 255
    1392:	c6 01       	movw	r24, r12
    1394:	09 95       	icall
    1396:	93 01       	movw	r18, r6
    1398:	ae 01       	movw	r20, r28
    139a:	4f 59       	subi	r20, 0x9F	; 159
    139c:	5f 4f       	sbci	r21, 0xFF	; 255
    139e:	b6 01       	movw	r22, r12
    13a0:	ca 01       	movw	r24, r20
    13a2:	6d dd       	rcall	.-1318   	; 0xe7e <uECC_vli_modSub>
    13a4:	41 2f       	mov	r20, r17
    13a6:	b7 01       	movw	r22, r14
    13a8:	c6 01       	movw	r24, r12
    13aa:	2a da       	rcall	.-2988   	; 0x800 <uECC_vli_set>
    13ac:	41 2f       	mov	r20, r17
    13ae:	b4 01       	movw	r22, r8
    13b0:	c7 01       	movw	r24, r14
    13b2:	26 da       	rcall	.-2996   	; 0x800 <uECC_vli_set>
    13b4:	41 2f       	mov	r20, r17
    13b6:	be 01       	movw	r22, r28
    13b8:	6f 59       	subi	r22, 0x9F	; 159
    13ba:	7f 4f       	sbci	r23, 0xFF	; 255
    13bc:	c4 01       	movw	r24, r8
    13be:	20 da       	rcall	.-3008   	; 0x800 <uECC_vli_set>
    13c0:	0f cf       	rjmp	.-482    	; 0x11e0 <double_jacobian_default+0x5c>
    13c2:	21 2f       	mov	r18, r17
    13c4:	a3 01       	movw	r20, r6
    13c6:	b6 01       	movw	r22, r12
    13c8:	c6 01       	movw	r24, r12
    13ca:	d6 da       	rcall	.-2644   	; 0x978 <uECC_vli_add>
    13cc:	08 2f       	mov	r16, r24
    13ce:	61 2f       	mov	r22, r17
    13d0:	c6 01       	movw	r24, r12
    13d2:	63 da       	rcall	.-2874   	; 0x89a <uECC_vli_rshift1>
    13d4:	e1 2f       	mov	r30, r17
    13d6:	01 2e       	mov	r0, r17
    13d8:	00 0c       	add	r0, r0
    13da:	ff 0b       	sbc	r31, r31
    13dc:	31 97       	sbiw	r30, 0x01	; 1
    13de:	ec 0d       	add	r30, r12
    13e0:	fd 1d       	adc	r31, r13
    13e2:	20 e8       	ldi	r18, 0x80	; 128
    13e4:	02 9f       	mul	r16, r18
    13e6:	c0 01       	movw	r24, r0
    13e8:	11 24       	eor	r1, r1
    13ea:	00 81       	ld	r16, Z
    13ec:	08 2b       	or	r16, r24
    13ee:	00 83       	st	Z, r16
    13f0:	9c cf       	rjmp	.-200    	; 0x132a <double_jacobian_default+0x1a6>

000013f2 <x_side_default>:
    13f2:	4f 92       	push	r4
    13f4:	5f 92       	push	r5
    13f6:	6f 92       	push	r6
    13f8:	7f 92       	push	r7
    13fa:	8f 92       	push	r8
    13fc:	9f 92       	push	r9
    13fe:	af 92       	push	r10
    1400:	bf 92       	push	r11
    1402:	cf 92       	push	r12
    1404:	df 92       	push	r13
    1406:	ef 92       	push	r14
    1408:	ff 92       	push	r15
    140a:	0f 93       	push	r16
    140c:	1f 93       	push	r17
    140e:	cf 93       	push	r28
    1410:	df 93       	push	r29
    1412:	cd b7       	in	r28, 0x3d	; 61
    1414:	de b7       	in	r29, 0x3e	; 62
    1416:	c0 56       	subi	r28, 0x60	; 96
    1418:	d1 09       	sbc	r29, r1
    141a:	0f b6       	in	r0, 0x3f	; 63
    141c:	f8 94       	cli
    141e:	de bf       	out	0x3e, r29	; 62
    1420:	0f be       	out	0x3f, r0	; 63
    1422:	cd bf       	out	0x3d, r28	; 61
    1424:	7c 01       	movw	r14, r24
    1426:	5b 01       	movw	r10, r22
    1428:	6a 01       	movw	r12, r20
    142a:	4e 01       	movw	r8, r28
    142c:	81 e4       	ldi	r24, 0x41	; 65
    142e:	88 0e       	add	r8, r24
    1430:	91 1c       	adc	r9, r1
    1432:	80 e2       	ldi	r24, 0x20	; 32
    1434:	d4 01       	movw	r26, r8
    1436:	1d 92       	st	X+, r1
    1438:	8a 95       	dec	r24
    143a:	e9 f7       	brne	.-6      	; 0x1436 <x_side_default+0x44>
    143c:	83 e0       	ldi	r24, 0x03	; 3
    143e:	f4 01       	movw	r30, r8
    1440:	80 83       	st	Z, r24
    1442:	da 01       	movw	r26, r20
    1444:	1c 91       	ld	r17, X
    1446:	21 2f       	mov	r18, r17
    1448:	ab 01       	movw	r20, r22
    144a:	ce 01       	movw	r24, r28
    144c:	01 96       	adiw	r24, 0x01	; 1
    144e:	36 dc       	rcall	.-1940   	; 0xcbc <uECC_vli_mult>
    1450:	26 01       	movw	r4, r12
    1452:	ba ea       	ldi	r27, 0xAA	; 170
    1454:	4b 0e       	add	r4, r27
    1456:	51 1c       	adc	r5, r1
    1458:	d2 01       	movw	r26, r4
    145a:	ed 91       	ld	r30, X+
    145c:	fc 91       	ld	r31, X
    145e:	be 01       	movw	r22, r28
    1460:	6f 5f       	subi	r22, 0xFF	; 255
    1462:	7f 4f       	sbci	r23, 0xFF	; 255
    1464:	c7 01       	movw	r24, r14
    1466:	09 95       	icall
    1468:	36 01       	movw	r6, r12
    146a:	b4 e0       	ldi	r27, 0x04	; 4
    146c:	6b 0e       	add	r6, r27
    146e:	71 1c       	adc	r7, r1
    1470:	01 2f       	mov	r16, r17
    1472:	93 01       	movw	r18, r6
    1474:	a4 01       	movw	r20, r8
    1476:	b7 01       	movw	r22, r14
    1478:	c7 01       	movw	r24, r14
    147a:	01 dd       	rcall	.-1534   	; 0xe7e <uECC_vli_modSub>
    147c:	f6 01       	movw	r30, r12
    147e:	20 81       	ld	r18, Z
    1480:	a5 01       	movw	r20, r10
    1482:	b7 01       	movw	r22, r14
    1484:	ce 01       	movw	r24, r28
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	19 dc       	rcall	.-1998   	; 0xcbc <uECC_vli_mult>
    148a:	d2 01       	movw	r26, r4
    148c:	ed 91       	ld	r30, X+
    148e:	fc 91       	ld	r31, X
    1490:	be 01       	movw	r22, r28
    1492:	6f 5f       	subi	r22, 0xFF	; 255
    1494:	7f 4f       	sbci	r23, 0xFF	; 255
    1496:	c7 01       	movw	r24, r14
    1498:	09 95       	icall
    149a:	a6 01       	movw	r20, r12
    149c:	4c 57       	subi	r20, 0x7C	; 124
    149e:	5f 4f       	sbci	r21, 0xFF	; 255
    14a0:	93 01       	movw	r18, r6
    14a2:	b7 01       	movw	r22, r14
    14a4:	c7 01       	movw	r24, r14
    14a6:	b9 dc       	rcall	.-1678   	; 0xe1a <uECC_vli_modAdd>
    14a8:	c0 5a       	subi	r28, 0xA0	; 160
    14aa:	df 4f       	sbci	r29, 0xFF	; 255
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	f8 94       	cli
    14b0:	de bf       	out	0x3e, r29	; 62
    14b2:	0f be       	out	0x3f, r0	; 63
    14b4:	cd bf       	out	0x3d, r28	; 61
    14b6:	df 91       	pop	r29
    14b8:	cf 91       	pop	r28
    14ba:	1f 91       	pop	r17
    14bc:	0f 91       	pop	r16
    14be:	ff 90       	pop	r15
    14c0:	ef 90       	pop	r14
    14c2:	df 90       	pop	r13
    14c4:	cf 90       	pop	r12
    14c6:	bf 90       	pop	r11
    14c8:	af 90       	pop	r10
    14ca:	9f 90       	pop	r9
    14cc:	8f 90       	pop	r8
    14ce:	7f 90       	pop	r7
    14d0:	6f 90       	pop	r6
    14d2:	5f 90       	pop	r5
    14d4:	4f 90       	pop	r4
    14d6:	08 95       	ret

000014d8 <mod_sqrt_default>:
    14d8:	3f 92       	push	r3
    14da:	4f 92       	push	r4
    14dc:	5f 92       	push	r5
    14de:	6f 92       	push	r6
    14e0:	7f 92       	push	r7
    14e2:	8f 92       	push	r8
    14e4:	9f 92       	push	r9
    14e6:	af 92       	push	r10
    14e8:	bf 92       	push	r11
    14ea:	cf 92       	push	r12
    14ec:	df 92       	push	r13
    14ee:	ef 92       	push	r14
    14f0:	ff 92       	push	r15
    14f2:	0f 93       	push	r16
    14f4:	1f 93       	push	r17
    14f6:	cf 93       	push	r28
    14f8:	df 93       	push	r29
    14fa:	cd b7       	in	r28, 0x3d	; 61
    14fc:	de b7       	in	r29, 0x3e	; 62
    14fe:	c0 58       	subi	r28, 0x80	; 128
    1500:	d1 09       	sbc	r29, r1
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	de bf       	out	0x3e, r29	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	cd bf       	out	0x3d, r28	; 61
    150c:	2c 01       	movw	r4, r24
    150e:	6b 01       	movw	r12, r22
    1510:	5e 01       	movw	r10, r28
    1512:	21 e6       	ldi	r18, 0x61	; 97
    1514:	a2 0e       	add	r10, r18
    1516:	b1 1c       	adc	r11, r1
    1518:	90 e2       	ldi	r25, 0x20	; 32
    151a:	d5 01       	movw	r26, r10
    151c:	e9 2f       	mov	r30, r25
    151e:	1d 92       	st	X+, r1
    1520:	ea 95       	dec	r30
    1522:	e9 f7       	brne	.-6      	; 0x151e <mod_sqrt_default+0x46>
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	d5 01       	movw	r26, r10
    1528:	8c 93       	st	X, r24
    152a:	7e 01       	movw	r14, r28
    152c:	b1 e4       	ldi	r27, 0x41	; 65
    152e:	eb 0e       	add	r14, r27
    1530:	f1 1c       	adc	r15, r1
    1532:	f7 01       	movw	r30, r14
    1534:	11 92       	st	Z+, r1
    1536:	9a 95       	dec	r25
    1538:	e9 f7       	brne	.-6      	; 0x1534 <mod_sqrt_default+0x5c>
    153a:	d7 01       	movw	r26, r14
    153c:	8c 93       	st	X, r24
    153e:	fb 01       	movw	r30, r22
    1540:	30 80       	ld	r3, Z
    1542:	6c 5f       	subi	r22, 0xFC	; 252
    1544:	7f 4f       	sbci	r23, 0xFF	; 255
    1546:	23 2d       	mov	r18, r3
    1548:	a5 01       	movw	r20, r10
    154a:	c5 01       	movw	r24, r10
    154c:	15 da       	rcall	.-3030   	; 0x978 <uECC_vli_add>
    154e:	63 2d       	mov	r22, r3
    1550:	c5 01       	movw	r24, r10
    1552:	f0 db       	rcall	.-2080   	; 0xd34 <uECC_vli_numBits>
    1554:	8c 01       	movw	r16, r24
    1556:	01 50       	subi	r16, 0x01	; 1
    1558:	11 09       	sbc	r17, r1
    155a:	02 30       	cpi	r16, 0x02	; 2
    155c:	11 05       	cpc	r17, r1
    155e:	0c f4       	brge	.+2      	; 0x1562 <mod_sqrt_default+0x8a>
    1560:	46 c0       	rjmp	.+140    	; 0x15ee <mod_sqrt_default+0x116>
    1562:	96 01       	movw	r18, r12
    1564:	26 55       	subi	r18, 0x56	; 86
    1566:	3f 4f       	sbci	r19, 0xFF	; 255
    1568:	39 01       	movw	r6, r18
    156a:	88 24       	eor	r8, r8
    156c:	83 94       	inc	r8
    156e:	91 2c       	mov	r9, r1
    1570:	05 c0       	rjmp	.+10     	; 0x157c <mod_sqrt_default+0xa4>
    1572:	01 50       	subi	r16, 0x01	; 1
    1574:	11 09       	sbc	r17, r1
    1576:	01 30       	cpi	r16, 0x01	; 1
    1578:	11 05       	cpc	r17, r1
    157a:	c9 f1       	breq	.+114    	; 0x15ee <mod_sqrt_default+0x116>
    157c:	d6 01       	movw	r26, r12
    157e:	2c 91       	ld	r18, X
    1580:	a7 01       	movw	r20, r14
    1582:	b7 01       	movw	r22, r14
    1584:	ce 01       	movw	r24, r28
    1586:	01 96       	adiw	r24, 0x01	; 1
    1588:	99 db       	rcall	.-2254   	; 0xcbc <uECC_vli_mult>
    158a:	d3 01       	movw	r26, r6
    158c:	ed 91       	ld	r30, X+
    158e:	fc 91       	ld	r31, X
    1590:	be 01       	movw	r22, r28
    1592:	6f 5f       	subi	r22, 0xFF	; 255
    1594:	7f 4f       	sbci	r23, 0xFF	; 255
    1596:	c7 01       	movw	r24, r14
    1598:	09 95       	icall
    159a:	f8 01       	movw	r30, r16
    159c:	f5 95       	asr	r31
    159e:	e7 95       	ror	r30
    15a0:	f5 95       	asr	r31
    15a2:	e7 95       	ror	r30
    15a4:	f5 95       	asr	r31
    15a6:	e7 95       	ror	r30
    15a8:	ea 0d       	add	r30, r10
    15aa:	fb 1d       	adc	r31, r11
    15ac:	c8 01       	movw	r24, r16
    15ae:	87 70       	andi	r24, 0x07	; 7
    15b0:	99 27       	eor	r25, r25
    15b2:	94 01       	movw	r18, r8
    15b4:	02 c0       	rjmp	.+4      	; 0x15ba <mod_sqrt_default+0xe2>
    15b6:	22 0f       	add	r18, r18
    15b8:	33 1f       	adc	r19, r19
    15ba:	8a 95       	dec	r24
    15bc:	e2 f7       	brpl	.-8      	; 0x15b6 <mod_sqrt_default+0xde>
    15be:	c9 01       	movw	r24, r18
    15c0:	90 81       	ld	r25, Z
    15c2:	89 23       	and	r24, r25
    15c4:	b1 f2       	breq	.-84     	; 0x1572 <mod_sqrt_default+0x9a>
    15c6:	d6 01       	movw	r26, r12
    15c8:	2c 91       	ld	r18, X
    15ca:	a2 01       	movw	r20, r4
    15cc:	b7 01       	movw	r22, r14
    15ce:	ce 01       	movw	r24, r28
    15d0:	01 96       	adiw	r24, 0x01	; 1
    15d2:	74 db       	rcall	.-2328   	; 0xcbc <uECC_vli_mult>
    15d4:	d3 01       	movw	r26, r6
    15d6:	ed 91       	ld	r30, X+
    15d8:	fc 91       	ld	r31, X
    15da:	be 01       	movw	r22, r28
    15dc:	6f 5f       	subi	r22, 0xFF	; 255
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	c7 01       	movw	r24, r14
    15e2:	09 95       	icall
    15e4:	01 50       	subi	r16, 0x01	; 1
    15e6:	11 09       	sbc	r17, r1
    15e8:	01 30       	cpi	r16, 0x01	; 1
    15ea:	11 05       	cpc	r17, r1
    15ec:	39 f6       	brne	.-114    	; 0x157c <mod_sqrt_default+0xa4>
    15ee:	43 2d       	mov	r20, r3
    15f0:	b7 01       	movw	r22, r14
    15f2:	c2 01       	movw	r24, r4
    15f4:	05 d9       	rcall	.-3574   	; 0x800 <uECC_vli_set>
    15f6:	c0 58       	subi	r28, 0x80	; 128
    15f8:	df 4f       	sbci	r29, 0xFF	; 255
    15fa:	0f b6       	in	r0, 0x3f	; 63
    15fc:	f8 94       	cli
    15fe:	de bf       	out	0x3e, r29	; 62
    1600:	0f be       	out	0x3f, r0	; 63
    1602:	cd bf       	out	0x3d, r28	; 61
    1604:	df 91       	pop	r29
    1606:	cf 91       	pop	r28
    1608:	1f 91       	pop	r17
    160a:	0f 91       	pop	r16
    160c:	ff 90       	pop	r15
    160e:	ef 90       	pop	r14
    1610:	df 90       	pop	r13
    1612:	cf 90       	pop	r12
    1614:	bf 90       	pop	r11
    1616:	af 90       	pop	r10
    1618:	9f 90       	pop	r9
    161a:	8f 90       	pop	r8
    161c:	7f 90       	pop	r7
    161e:	6f 90       	pop	r6
    1620:	5f 90       	pop	r5
    1622:	4f 90       	pop	r4
    1624:	3f 90       	pop	r3
    1626:	08 95       	ret

00001628 <vli_mmod_fast_secp256r1>:
    1628:	df 92       	push	r13
    162a:	ef 92       	push	r14
    162c:	ff 92       	push	r15
    162e:	0f 93       	push	r16
    1630:	1f 93       	push	r17
    1632:	cf 93       	push	r28
    1634:	df 93       	push	r29
    1636:	cd b7       	in	r28, 0x3d	; 61
    1638:	de b7       	in	r29, 0x3e	; 62
    163a:	a0 97       	sbiw	r28, 0x20	; 32
    163c:	0f b6       	in	r0, 0x3f	; 63
    163e:	f8 94       	cli
    1640:	de bf       	out	0x3e, r29	; 62
    1642:	0f be       	out	0x3f, r0	; 63
    1644:	cd bf       	out	0x3d, r28	; 61
    1646:	7c 01       	movw	r14, r24
    1648:	8b 01       	movw	r16, r22
    164a:	40 e2       	ldi	r20, 0x20	; 32
    164c:	d9 d8       	rcall	.-3662   	; 0x800 <uECC_vli_set>
    164e:	1c 82       	std	Y+4, r1	; 0x04
    1650:	1b 82       	std	Y+3, r1	; 0x03
    1652:	1a 82       	std	Y+2, r1	; 0x02
    1654:	19 82       	std	Y+1, r1	; 0x01
    1656:	18 86       	std	Y+8, r1	; 0x08
    1658:	1f 82       	std	Y+7, r1	; 0x07
    165a:	1e 82       	std	Y+6, r1	; 0x06
    165c:	1d 82       	std	Y+5, r1	; 0x05
    165e:	1c 86       	std	Y+12, r1	; 0x0c
    1660:	1b 86       	std	Y+11, r1	; 0x0b
    1662:	1a 86       	std	Y+10, r1	; 0x0a
    1664:	19 86       	std	Y+9, r1	; 0x09
    1666:	f8 01       	movw	r30, r16
    1668:	84 a5       	ldd	r24, Z+44	; 0x2c
    166a:	8d 87       	std	Y+13, r24	; 0x0d
    166c:	85 a5       	ldd	r24, Z+45	; 0x2d
    166e:	8e 87       	std	Y+14, r24	; 0x0e
    1670:	86 a5       	ldd	r24, Z+46	; 0x2e
    1672:	8f 87       	std	Y+15, r24	; 0x0f
    1674:	87 a5       	ldd	r24, Z+47	; 0x2f
    1676:	88 8b       	std	Y+16, r24	; 0x10
    1678:	80 a9       	ldd	r24, Z+48	; 0x30
    167a:	89 8b       	std	Y+17, r24	; 0x11
    167c:	81 a9       	ldd	r24, Z+49	; 0x31
    167e:	8a 8b       	std	Y+18, r24	; 0x12
    1680:	82 a9       	ldd	r24, Z+50	; 0x32
    1682:	8b 8b       	std	Y+19, r24	; 0x13
    1684:	83 a9       	ldd	r24, Z+51	; 0x33
    1686:	8c 8b       	std	Y+20, r24	; 0x14
    1688:	84 a9       	ldd	r24, Z+52	; 0x34
    168a:	8d 8b       	std	Y+21, r24	; 0x15
    168c:	85 a9       	ldd	r24, Z+53	; 0x35
    168e:	8e 8b       	std	Y+22, r24	; 0x16
    1690:	86 a9       	ldd	r24, Z+54	; 0x36
    1692:	8f 8b       	std	Y+23, r24	; 0x17
    1694:	87 a9       	ldd	r24, Z+55	; 0x37
    1696:	88 8f       	std	Y+24, r24	; 0x18
    1698:	80 ad       	ldd	r24, Z+56	; 0x38
    169a:	89 8f       	std	Y+25, r24	; 0x19
    169c:	81 ad       	ldd	r24, Z+57	; 0x39
    169e:	8a 8f       	std	Y+26, r24	; 0x1a
    16a0:	82 ad       	ldd	r24, Z+58	; 0x3a
    16a2:	8b 8f       	std	Y+27, r24	; 0x1b
    16a4:	83 ad       	ldd	r24, Z+59	; 0x3b
    16a6:	8c 8f       	std	Y+28, r24	; 0x1c
    16a8:	84 ad       	ldd	r24, Z+60	; 0x3c
    16aa:	8d 8f       	std	Y+29, r24	; 0x1d
    16ac:	85 ad       	ldd	r24, Z+61	; 0x3d
    16ae:	8e 8f       	std	Y+30, r24	; 0x1e
    16b0:	86 ad       	ldd	r24, Z+62	; 0x3e
    16b2:	8f 8f       	std	Y+31, r24	; 0x1f
    16b4:	87 ad       	ldd	r24, Z+63	; 0x3f
    16b6:	88 a3       	std	Y+32, r24	; 0x20
    16b8:	20 e2       	ldi	r18, 0x20	; 32
    16ba:	ae 01       	movw	r20, r28
    16bc:	4f 5f       	subi	r20, 0xFF	; 255
    16be:	5f 4f       	sbci	r21, 0xFF	; 255
    16c0:	ba 01       	movw	r22, r20
    16c2:	ca 01       	movw	r24, r20
    16c4:	59 d9       	rcall	.-3406   	; 0x978 <uECC_vli_add>
    16c6:	d8 2e       	mov	r13, r24
    16c8:	20 e2       	ldi	r18, 0x20	; 32
    16ca:	ae 01       	movw	r20, r28
    16cc:	4f 5f       	subi	r20, 0xFF	; 255
    16ce:	5f 4f       	sbci	r21, 0xFF	; 255
    16d0:	b7 01       	movw	r22, r14
    16d2:	c7 01       	movw	r24, r14
    16d4:	51 d9       	rcall	.-3422   	; 0x978 <uECC_vli_add>
    16d6:	d8 0e       	add	r13, r24
    16d8:	f8 01       	movw	r30, r16
    16da:	80 a9       	ldd	r24, Z+48	; 0x30
    16dc:	8d 87       	std	Y+13, r24	; 0x0d
    16de:	81 a9       	ldd	r24, Z+49	; 0x31
    16e0:	8e 87       	std	Y+14, r24	; 0x0e
    16e2:	82 a9       	ldd	r24, Z+50	; 0x32
    16e4:	8f 87       	std	Y+15, r24	; 0x0f
    16e6:	83 a9       	ldd	r24, Z+51	; 0x33
    16e8:	88 8b       	std	Y+16, r24	; 0x10
    16ea:	84 a9       	ldd	r24, Z+52	; 0x34
    16ec:	89 8b       	std	Y+17, r24	; 0x11
    16ee:	85 a9       	ldd	r24, Z+53	; 0x35
    16f0:	8a 8b       	std	Y+18, r24	; 0x12
    16f2:	86 a9       	ldd	r24, Z+54	; 0x36
    16f4:	8b 8b       	std	Y+19, r24	; 0x13
    16f6:	87 a9       	ldd	r24, Z+55	; 0x37
    16f8:	8c 8b       	std	Y+20, r24	; 0x14
    16fa:	80 ad       	ldd	r24, Z+56	; 0x38
    16fc:	8d 8b       	std	Y+21, r24	; 0x15
    16fe:	81 ad       	ldd	r24, Z+57	; 0x39
    1700:	8e 8b       	std	Y+22, r24	; 0x16
    1702:	82 ad       	ldd	r24, Z+58	; 0x3a
    1704:	8f 8b       	std	Y+23, r24	; 0x17
    1706:	83 ad       	ldd	r24, Z+59	; 0x3b
    1708:	88 8f       	std	Y+24, r24	; 0x18
    170a:	84 ad       	ldd	r24, Z+60	; 0x3c
    170c:	89 8f       	std	Y+25, r24	; 0x19
    170e:	85 ad       	ldd	r24, Z+61	; 0x3d
    1710:	8a 8f       	std	Y+26, r24	; 0x1a
    1712:	86 ad       	ldd	r24, Z+62	; 0x3e
    1714:	8b 8f       	std	Y+27, r24	; 0x1b
    1716:	87 ad       	ldd	r24, Z+63	; 0x3f
    1718:	8c 8f       	std	Y+28, r24	; 0x1c
    171a:	18 a2       	std	Y+32, r1	; 0x20
    171c:	1f 8e       	std	Y+31, r1	; 0x1f
    171e:	1e 8e       	std	Y+30, r1	; 0x1e
    1720:	1d 8e       	std	Y+29, r1	; 0x1d
    1722:	20 e2       	ldi	r18, 0x20	; 32
    1724:	ae 01       	movw	r20, r28
    1726:	4f 5f       	subi	r20, 0xFF	; 255
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	ba 01       	movw	r22, r20
    172c:	ca 01       	movw	r24, r20
    172e:	24 d9       	rcall	.-3512   	; 0x978 <uECC_vli_add>
    1730:	d8 0e       	add	r13, r24
    1732:	20 e2       	ldi	r18, 0x20	; 32
    1734:	ae 01       	movw	r20, r28
    1736:	4f 5f       	subi	r20, 0xFF	; 255
    1738:	5f 4f       	sbci	r21, 0xFF	; 255
    173a:	b7 01       	movw	r22, r14
    173c:	c7 01       	movw	r24, r14
    173e:	1c d9       	rcall	.-3528   	; 0x978 <uECC_vli_add>
    1740:	d8 0e       	add	r13, r24
    1742:	f8 01       	movw	r30, r16
    1744:	80 a1       	ldd	r24, Z+32	; 0x20
    1746:	89 83       	std	Y+1, r24	; 0x01
    1748:	81 a1       	ldd	r24, Z+33	; 0x21
    174a:	8a 83       	std	Y+2, r24	; 0x02
    174c:	82 a1       	ldd	r24, Z+34	; 0x22
    174e:	8b 83       	std	Y+3, r24	; 0x03
    1750:	83 a1       	ldd	r24, Z+35	; 0x23
    1752:	8c 83       	std	Y+4, r24	; 0x04
    1754:	84 a1       	ldd	r24, Z+36	; 0x24
    1756:	8d 83       	std	Y+5, r24	; 0x05
    1758:	85 a1       	ldd	r24, Z+37	; 0x25
    175a:	8e 83       	std	Y+6, r24	; 0x06
    175c:	86 a1       	ldd	r24, Z+38	; 0x26
    175e:	8f 83       	std	Y+7, r24	; 0x07
    1760:	87 a1       	ldd	r24, Z+39	; 0x27
    1762:	88 87       	std	Y+8, r24	; 0x08
    1764:	80 a5       	ldd	r24, Z+40	; 0x28
    1766:	89 87       	std	Y+9, r24	; 0x09
    1768:	81 a5       	ldd	r24, Z+41	; 0x29
    176a:	8a 87       	std	Y+10, r24	; 0x0a
    176c:	82 a5       	ldd	r24, Z+42	; 0x2a
    176e:	8b 87       	std	Y+11, r24	; 0x0b
    1770:	83 a5       	ldd	r24, Z+43	; 0x2b
    1772:	8c 87       	std	Y+12, r24	; 0x0c
    1774:	18 8a       	std	Y+16, r1	; 0x10
    1776:	1f 86       	std	Y+15, r1	; 0x0f
    1778:	1e 86       	std	Y+14, r1	; 0x0e
    177a:	1d 86       	std	Y+13, r1	; 0x0d
    177c:	1c 8a       	std	Y+20, r1	; 0x14
    177e:	1b 8a       	std	Y+19, r1	; 0x13
    1780:	1a 8a       	std	Y+18, r1	; 0x12
    1782:	19 8a       	std	Y+17, r1	; 0x11
    1784:	18 8e       	std	Y+24, r1	; 0x18
    1786:	1f 8a       	std	Y+23, r1	; 0x17
    1788:	1e 8a       	std	Y+22, r1	; 0x16
    178a:	1d 8a       	std	Y+21, r1	; 0x15
    178c:	80 ad       	ldd	r24, Z+56	; 0x38
    178e:	89 8f       	std	Y+25, r24	; 0x19
    1790:	81 ad       	ldd	r24, Z+57	; 0x39
    1792:	8a 8f       	std	Y+26, r24	; 0x1a
    1794:	82 ad       	ldd	r24, Z+58	; 0x3a
    1796:	8b 8f       	std	Y+27, r24	; 0x1b
    1798:	83 ad       	ldd	r24, Z+59	; 0x3b
    179a:	8c 8f       	std	Y+28, r24	; 0x1c
    179c:	84 ad       	ldd	r24, Z+60	; 0x3c
    179e:	8d 8f       	std	Y+29, r24	; 0x1d
    17a0:	85 ad       	ldd	r24, Z+61	; 0x3d
    17a2:	8e 8f       	std	Y+30, r24	; 0x1e
    17a4:	86 ad       	ldd	r24, Z+62	; 0x3e
    17a6:	8f 8f       	std	Y+31, r24	; 0x1f
    17a8:	87 ad       	ldd	r24, Z+63	; 0x3f
    17aa:	88 a3       	std	Y+32, r24	; 0x20
    17ac:	20 e2       	ldi	r18, 0x20	; 32
    17ae:	ae 01       	movw	r20, r28
    17b0:	4f 5f       	subi	r20, 0xFF	; 255
    17b2:	5f 4f       	sbci	r21, 0xFF	; 255
    17b4:	b7 01       	movw	r22, r14
    17b6:	c7 01       	movw	r24, r14
    17b8:	df d8       	rcall	.-3650   	; 0x978 <uECC_vli_add>
    17ba:	d8 0e       	add	r13, r24
    17bc:	f8 01       	movw	r30, r16
    17be:	84 a1       	ldd	r24, Z+36	; 0x24
    17c0:	89 83       	std	Y+1, r24	; 0x01
    17c2:	85 a1       	ldd	r24, Z+37	; 0x25
    17c4:	8a 83       	std	Y+2, r24	; 0x02
    17c6:	86 a1       	ldd	r24, Z+38	; 0x26
    17c8:	8b 83       	std	Y+3, r24	; 0x03
    17ca:	87 a1       	ldd	r24, Z+39	; 0x27
    17cc:	8c 83       	std	Y+4, r24	; 0x04
    17ce:	80 a5       	ldd	r24, Z+40	; 0x28
    17d0:	8d 83       	std	Y+5, r24	; 0x05
    17d2:	81 a5       	ldd	r24, Z+41	; 0x29
    17d4:	8e 83       	std	Y+6, r24	; 0x06
    17d6:	82 a5       	ldd	r24, Z+42	; 0x2a
    17d8:	8f 83       	std	Y+7, r24	; 0x07
    17da:	83 a5       	ldd	r24, Z+43	; 0x2b
    17dc:	88 87       	std	Y+8, r24	; 0x08
    17de:	84 a5       	ldd	r24, Z+44	; 0x2c
    17e0:	89 87       	std	Y+9, r24	; 0x09
    17e2:	85 a5       	ldd	r24, Z+45	; 0x2d
    17e4:	8a 87       	std	Y+10, r24	; 0x0a
    17e6:	86 a5       	ldd	r24, Z+46	; 0x2e
    17e8:	8b 87       	std	Y+11, r24	; 0x0b
    17ea:	87 a5       	ldd	r24, Z+47	; 0x2f
    17ec:	8c 87       	std	Y+12, r24	; 0x0c
    17ee:	34 a9       	ldd	r19, Z+52	; 0x34
    17f0:	3d 87       	std	Y+13, r19	; 0x0d
    17f2:	25 a9       	ldd	r18, Z+53	; 0x35
    17f4:	2e 87       	std	Y+14, r18	; 0x0e
    17f6:	96 a9       	ldd	r25, Z+54	; 0x36
    17f8:	9f 87       	std	Y+15, r25	; 0x0f
    17fa:	87 a9       	ldd	r24, Z+55	; 0x37
    17fc:	88 8b       	std	Y+16, r24	; 0x10
    17fe:	40 ad       	ldd	r20, Z+56	; 0x38
    1800:	49 8b       	std	Y+17, r20	; 0x11
    1802:	41 ad       	ldd	r20, Z+57	; 0x39
    1804:	4a 8b       	std	Y+18, r20	; 0x12
    1806:	42 ad       	ldd	r20, Z+58	; 0x3a
    1808:	4b 8b       	std	Y+19, r20	; 0x13
    180a:	43 ad       	ldd	r20, Z+59	; 0x3b
    180c:	4c 8b       	std	Y+20, r20	; 0x14
    180e:	44 ad       	ldd	r20, Z+60	; 0x3c
    1810:	4d 8b       	std	Y+21, r20	; 0x15
    1812:	45 ad       	ldd	r20, Z+61	; 0x3d
    1814:	4e 8b       	std	Y+22, r20	; 0x16
    1816:	46 ad       	ldd	r20, Z+62	; 0x3e
    1818:	4f 8b       	std	Y+23, r20	; 0x17
    181a:	47 ad       	ldd	r20, Z+63	; 0x3f
    181c:	48 8f       	std	Y+24, r20	; 0x18
    181e:	39 8f       	std	Y+25, r19	; 0x19
    1820:	2a 8f       	std	Y+26, r18	; 0x1a
    1822:	9b 8f       	std	Y+27, r25	; 0x1b
    1824:	8c 8f       	std	Y+28, r24	; 0x1c
    1826:	80 a1       	ldd	r24, Z+32	; 0x20
    1828:	8d 8f       	std	Y+29, r24	; 0x1d
    182a:	81 a1       	ldd	r24, Z+33	; 0x21
    182c:	8e 8f       	std	Y+30, r24	; 0x1e
    182e:	82 a1       	ldd	r24, Z+34	; 0x22
    1830:	8f 8f       	std	Y+31, r24	; 0x1f
    1832:	83 a1       	ldd	r24, Z+35	; 0x23
    1834:	88 a3       	std	Y+32, r24	; 0x20
    1836:	20 e2       	ldi	r18, 0x20	; 32
    1838:	ae 01       	movw	r20, r28
    183a:	4f 5f       	subi	r20, 0xFF	; 255
    183c:	5f 4f       	sbci	r21, 0xFF	; 255
    183e:	b7 01       	movw	r22, r14
    1840:	c7 01       	movw	r24, r14
    1842:	9a d8       	rcall	.-3788   	; 0x978 <uECC_vli_add>
    1844:	d8 0e       	add	r13, r24
    1846:	f8 01       	movw	r30, r16
    1848:	84 a5       	ldd	r24, Z+44	; 0x2c
    184a:	89 83       	std	Y+1, r24	; 0x01
    184c:	85 a5       	ldd	r24, Z+45	; 0x2d
    184e:	8a 83       	std	Y+2, r24	; 0x02
    1850:	86 a5       	ldd	r24, Z+46	; 0x2e
    1852:	8b 83       	std	Y+3, r24	; 0x03
    1854:	87 a5       	ldd	r24, Z+47	; 0x2f
    1856:	8c 83       	std	Y+4, r24	; 0x04
    1858:	80 a9       	ldd	r24, Z+48	; 0x30
    185a:	8d 83       	std	Y+5, r24	; 0x05
    185c:	81 a9       	ldd	r24, Z+49	; 0x31
    185e:	8e 83       	std	Y+6, r24	; 0x06
    1860:	82 a9       	ldd	r24, Z+50	; 0x32
    1862:	8f 83       	std	Y+7, r24	; 0x07
    1864:	83 a9       	ldd	r24, Z+51	; 0x33
    1866:	88 87       	std	Y+8, r24	; 0x08
    1868:	84 a9       	ldd	r24, Z+52	; 0x34
    186a:	89 87       	std	Y+9, r24	; 0x09
    186c:	85 a9       	ldd	r24, Z+53	; 0x35
    186e:	8a 87       	std	Y+10, r24	; 0x0a
    1870:	86 a9       	ldd	r24, Z+54	; 0x36
    1872:	8b 87       	std	Y+11, r24	; 0x0b
    1874:	87 a9       	ldd	r24, Z+55	; 0x37
    1876:	8c 87       	std	Y+12, r24	; 0x0c
    1878:	18 8a       	std	Y+16, r1	; 0x10
    187a:	1f 86       	std	Y+15, r1	; 0x0f
    187c:	1e 86       	std	Y+14, r1	; 0x0e
    187e:	1d 86       	std	Y+13, r1	; 0x0d
    1880:	1c 8a       	std	Y+20, r1	; 0x14
    1882:	1b 8a       	std	Y+19, r1	; 0x13
    1884:	1a 8a       	std	Y+18, r1	; 0x12
    1886:	19 8a       	std	Y+17, r1	; 0x11
    1888:	18 8e       	std	Y+24, r1	; 0x18
    188a:	1f 8a       	std	Y+23, r1	; 0x17
    188c:	1e 8a       	std	Y+22, r1	; 0x16
    188e:	1d 8a       	std	Y+21, r1	; 0x15
    1890:	80 a1       	ldd	r24, Z+32	; 0x20
    1892:	89 8f       	std	Y+25, r24	; 0x19
    1894:	81 a1       	ldd	r24, Z+33	; 0x21
    1896:	8a 8f       	std	Y+26, r24	; 0x1a
    1898:	82 a1       	ldd	r24, Z+34	; 0x22
    189a:	8b 8f       	std	Y+27, r24	; 0x1b
    189c:	83 a1       	ldd	r24, Z+35	; 0x23
    189e:	8c 8f       	std	Y+28, r24	; 0x1c
    18a0:	80 a5       	ldd	r24, Z+40	; 0x28
    18a2:	8d 8f       	std	Y+29, r24	; 0x1d
    18a4:	81 a5       	ldd	r24, Z+41	; 0x29
    18a6:	8e 8f       	std	Y+30, r24	; 0x1e
    18a8:	82 a5       	ldd	r24, Z+42	; 0x2a
    18aa:	8f 8f       	std	Y+31, r24	; 0x1f
    18ac:	83 a5       	ldd	r24, Z+43	; 0x2b
    18ae:	88 a3       	std	Y+32, r24	; 0x20
    18b0:	20 e2       	ldi	r18, 0x20	; 32
    18b2:	ae 01       	movw	r20, r28
    18b4:	4f 5f       	subi	r20, 0xFF	; 255
    18b6:	5f 4f       	sbci	r21, 0xFF	; 255
    18b8:	b7 01       	movw	r22, r14
    18ba:	c7 01       	movw	r24, r14
    18bc:	2e d9       	rcall	.-3492   	; 0xb1a <uECC_vli_sub>
    18be:	d8 1a       	sub	r13, r24
    18c0:	f8 01       	movw	r30, r16
    18c2:	80 a9       	ldd	r24, Z+48	; 0x30
    18c4:	89 83       	std	Y+1, r24	; 0x01
    18c6:	81 a9       	ldd	r24, Z+49	; 0x31
    18c8:	8a 83       	std	Y+2, r24	; 0x02
    18ca:	82 a9       	ldd	r24, Z+50	; 0x32
    18cc:	8b 83       	std	Y+3, r24	; 0x03
    18ce:	83 a9       	ldd	r24, Z+51	; 0x33
    18d0:	8c 83       	std	Y+4, r24	; 0x04
    18d2:	84 a9       	ldd	r24, Z+52	; 0x34
    18d4:	8d 83       	std	Y+5, r24	; 0x05
    18d6:	85 a9       	ldd	r24, Z+53	; 0x35
    18d8:	8e 83       	std	Y+6, r24	; 0x06
    18da:	86 a9       	ldd	r24, Z+54	; 0x36
    18dc:	8f 83       	std	Y+7, r24	; 0x07
    18de:	87 a9       	ldd	r24, Z+55	; 0x37
    18e0:	88 87       	std	Y+8, r24	; 0x08
    18e2:	80 ad       	ldd	r24, Z+56	; 0x38
    18e4:	89 87       	std	Y+9, r24	; 0x09
    18e6:	81 ad       	ldd	r24, Z+57	; 0x39
    18e8:	8a 87       	std	Y+10, r24	; 0x0a
    18ea:	82 ad       	ldd	r24, Z+58	; 0x3a
    18ec:	8b 87       	std	Y+11, r24	; 0x0b
    18ee:	83 ad       	ldd	r24, Z+59	; 0x3b
    18f0:	8c 87       	std	Y+12, r24	; 0x0c
    18f2:	84 ad       	ldd	r24, Z+60	; 0x3c
    18f4:	8d 87       	std	Y+13, r24	; 0x0d
    18f6:	85 ad       	ldd	r24, Z+61	; 0x3d
    18f8:	8e 87       	std	Y+14, r24	; 0x0e
    18fa:	86 ad       	ldd	r24, Z+62	; 0x3e
    18fc:	8f 87       	std	Y+15, r24	; 0x0f
    18fe:	87 ad       	ldd	r24, Z+63	; 0x3f
    1900:	88 8b       	std	Y+16, r24	; 0x10
    1902:	1c 8a       	std	Y+20, r1	; 0x14
    1904:	1b 8a       	std	Y+19, r1	; 0x13
    1906:	1a 8a       	std	Y+18, r1	; 0x12
    1908:	19 8a       	std	Y+17, r1	; 0x11
    190a:	18 8e       	std	Y+24, r1	; 0x18
    190c:	1f 8a       	std	Y+23, r1	; 0x17
    190e:	1e 8a       	std	Y+22, r1	; 0x16
    1910:	1d 8a       	std	Y+21, r1	; 0x15
    1912:	84 a1       	ldd	r24, Z+36	; 0x24
    1914:	89 8f       	std	Y+25, r24	; 0x19
    1916:	85 a1       	ldd	r24, Z+37	; 0x25
    1918:	8a 8f       	std	Y+26, r24	; 0x1a
    191a:	86 a1       	ldd	r24, Z+38	; 0x26
    191c:	8b 8f       	std	Y+27, r24	; 0x1b
    191e:	87 a1       	ldd	r24, Z+39	; 0x27
    1920:	8c 8f       	std	Y+28, r24	; 0x1c
    1922:	84 a5       	ldd	r24, Z+44	; 0x2c
    1924:	8d 8f       	std	Y+29, r24	; 0x1d
    1926:	85 a5       	ldd	r24, Z+45	; 0x2d
    1928:	8e 8f       	std	Y+30, r24	; 0x1e
    192a:	86 a5       	ldd	r24, Z+46	; 0x2e
    192c:	8f 8f       	std	Y+31, r24	; 0x1f
    192e:	87 a5       	ldd	r24, Z+47	; 0x2f
    1930:	88 a3       	std	Y+32, r24	; 0x20
    1932:	20 e2       	ldi	r18, 0x20	; 32
    1934:	ae 01       	movw	r20, r28
    1936:	4f 5f       	subi	r20, 0xFF	; 255
    1938:	5f 4f       	sbci	r21, 0xFF	; 255
    193a:	b7 01       	movw	r22, r14
    193c:	c7 01       	movw	r24, r14
    193e:	ed d8       	rcall	.-3622   	; 0xb1a <uECC_vli_sub>
    1940:	d8 1a       	sub	r13, r24
    1942:	f8 01       	movw	r30, r16
    1944:	84 a9       	ldd	r24, Z+52	; 0x34
    1946:	89 83       	std	Y+1, r24	; 0x01
    1948:	85 a9       	ldd	r24, Z+53	; 0x35
    194a:	8a 83       	std	Y+2, r24	; 0x02
    194c:	86 a9       	ldd	r24, Z+54	; 0x36
    194e:	8b 83       	std	Y+3, r24	; 0x03
    1950:	87 a9       	ldd	r24, Z+55	; 0x37
    1952:	8c 83       	std	Y+4, r24	; 0x04
    1954:	80 ad       	ldd	r24, Z+56	; 0x38
    1956:	8d 83       	std	Y+5, r24	; 0x05
    1958:	81 ad       	ldd	r24, Z+57	; 0x39
    195a:	8e 83       	std	Y+6, r24	; 0x06
    195c:	82 ad       	ldd	r24, Z+58	; 0x3a
    195e:	8f 83       	std	Y+7, r24	; 0x07
    1960:	83 ad       	ldd	r24, Z+59	; 0x3b
    1962:	88 87       	std	Y+8, r24	; 0x08
    1964:	84 ad       	ldd	r24, Z+60	; 0x3c
    1966:	89 87       	std	Y+9, r24	; 0x09
    1968:	85 ad       	ldd	r24, Z+61	; 0x3d
    196a:	8a 87       	std	Y+10, r24	; 0x0a
    196c:	86 ad       	ldd	r24, Z+62	; 0x3e
    196e:	8b 87       	std	Y+11, r24	; 0x0b
    1970:	87 ad       	ldd	r24, Z+63	; 0x3f
    1972:	8c 87       	std	Y+12, r24	; 0x0c
    1974:	80 a1       	ldd	r24, Z+32	; 0x20
    1976:	8d 87       	std	Y+13, r24	; 0x0d
    1978:	81 a1       	ldd	r24, Z+33	; 0x21
    197a:	8e 87       	std	Y+14, r24	; 0x0e
    197c:	82 a1       	ldd	r24, Z+34	; 0x22
    197e:	8f 87       	std	Y+15, r24	; 0x0f
    1980:	83 a1       	ldd	r24, Z+35	; 0x23
    1982:	88 8b       	std	Y+16, r24	; 0x10
    1984:	84 a1       	ldd	r24, Z+36	; 0x24
    1986:	89 8b       	std	Y+17, r24	; 0x11
    1988:	85 a1       	ldd	r24, Z+37	; 0x25
    198a:	8a 8b       	std	Y+18, r24	; 0x12
    198c:	86 a1       	ldd	r24, Z+38	; 0x26
    198e:	8b 8b       	std	Y+19, r24	; 0x13
    1990:	87 a1       	ldd	r24, Z+39	; 0x27
    1992:	8c 8b       	std	Y+20, r24	; 0x14
    1994:	80 a5       	ldd	r24, Z+40	; 0x28
    1996:	8d 8b       	std	Y+21, r24	; 0x15
    1998:	81 a5       	ldd	r24, Z+41	; 0x29
    199a:	8e 8b       	std	Y+22, r24	; 0x16
    199c:	82 a5       	ldd	r24, Z+42	; 0x2a
    199e:	8f 8b       	std	Y+23, r24	; 0x17
    19a0:	83 a5       	ldd	r24, Z+43	; 0x2b
    19a2:	88 8f       	std	Y+24, r24	; 0x18
    19a4:	1c 8e       	std	Y+28, r1	; 0x1c
    19a6:	1b 8e       	std	Y+27, r1	; 0x1b
    19a8:	1a 8e       	std	Y+26, r1	; 0x1a
    19aa:	19 8e       	std	Y+25, r1	; 0x19
    19ac:	80 a9       	ldd	r24, Z+48	; 0x30
    19ae:	8d 8f       	std	Y+29, r24	; 0x1d
    19b0:	81 a9       	ldd	r24, Z+49	; 0x31
    19b2:	8e 8f       	std	Y+30, r24	; 0x1e
    19b4:	82 a9       	ldd	r24, Z+50	; 0x32
    19b6:	8f 8f       	std	Y+31, r24	; 0x1f
    19b8:	83 a9       	ldd	r24, Z+51	; 0x33
    19ba:	88 a3       	std	Y+32, r24	; 0x20
    19bc:	20 e2       	ldi	r18, 0x20	; 32
    19be:	ae 01       	movw	r20, r28
    19c0:	4f 5f       	subi	r20, 0xFF	; 255
    19c2:	5f 4f       	sbci	r21, 0xFF	; 255
    19c4:	b7 01       	movw	r22, r14
    19c6:	c7 01       	movw	r24, r14
    19c8:	a8 d8       	rcall	.-3760   	; 0xb1a <uECC_vli_sub>
    19ca:	d8 1a       	sub	r13, r24
    19cc:	f8 01       	movw	r30, r16
    19ce:	80 ad       	ldd	r24, Z+56	; 0x38
    19d0:	89 83       	std	Y+1, r24	; 0x01
    19d2:	81 ad       	ldd	r24, Z+57	; 0x39
    19d4:	8a 83       	std	Y+2, r24	; 0x02
    19d6:	82 ad       	ldd	r24, Z+58	; 0x3a
    19d8:	8b 83       	std	Y+3, r24	; 0x03
    19da:	83 ad       	ldd	r24, Z+59	; 0x3b
    19dc:	8c 83       	std	Y+4, r24	; 0x04
    19de:	84 ad       	ldd	r24, Z+60	; 0x3c
    19e0:	8d 83       	std	Y+5, r24	; 0x05
    19e2:	85 ad       	ldd	r24, Z+61	; 0x3d
    19e4:	8e 83       	std	Y+6, r24	; 0x06
    19e6:	86 ad       	ldd	r24, Z+62	; 0x3e
    19e8:	8f 83       	std	Y+7, r24	; 0x07
    19ea:	87 ad       	ldd	r24, Z+63	; 0x3f
    19ec:	88 87       	std	Y+8, r24	; 0x08
    19ee:	1c 86       	std	Y+12, r1	; 0x0c
    19f0:	1b 86       	std	Y+11, r1	; 0x0b
    19f2:	1a 86       	std	Y+10, r1	; 0x0a
    19f4:	19 86       	std	Y+9, r1	; 0x09
    19f6:	84 a1       	ldd	r24, Z+36	; 0x24
    19f8:	8d 87       	std	Y+13, r24	; 0x0d
    19fa:	85 a1       	ldd	r24, Z+37	; 0x25
    19fc:	8e 87       	std	Y+14, r24	; 0x0e
    19fe:	86 a1       	ldd	r24, Z+38	; 0x26
    1a00:	8f 87       	std	Y+15, r24	; 0x0f
    1a02:	87 a1       	ldd	r24, Z+39	; 0x27
    1a04:	88 8b       	std	Y+16, r24	; 0x10
    1a06:	80 a5       	ldd	r24, Z+40	; 0x28
    1a08:	89 8b       	std	Y+17, r24	; 0x11
    1a0a:	81 a5       	ldd	r24, Z+41	; 0x29
    1a0c:	8a 8b       	std	Y+18, r24	; 0x12
    1a0e:	82 a5       	ldd	r24, Z+42	; 0x2a
    1a10:	8b 8b       	std	Y+19, r24	; 0x13
    1a12:	83 a5       	ldd	r24, Z+43	; 0x2b
    1a14:	8c 8b       	std	Y+20, r24	; 0x14
    1a16:	84 a5       	ldd	r24, Z+44	; 0x2c
    1a18:	8d 8b       	std	Y+21, r24	; 0x15
    1a1a:	85 a5       	ldd	r24, Z+45	; 0x2d
    1a1c:	8e 8b       	std	Y+22, r24	; 0x16
    1a1e:	86 a5       	ldd	r24, Z+46	; 0x2e
    1a20:	8f 8b       	std	Y+23, r24	; 0x17
    1a22:	87 a5       	ldd	r24, Z+47	; 0x2f
    1a24:	88 8f       	std	Y+24, r24	; 0x18
    1a26:	1c 8e       	std	Y+28, r1	; 0x1c
    1a28:	1b 8e       	std	Y+27, r1	; 0x1b
    1a2a:	1a 8e       	std	Y+26, r1	; 0x1a
    1a2c:	19 8e       	std	Y+25, r1	; 0x19
    1a2e:	84 a9       	ldd	r24, Z+52	; 0x34
    1a30:	8d 8f       	std	Y+29, r24	; 0x1d
    1a32:	85 a9       	ldd	r24, Z+53	; 0x35
    1a34:	8e 8f       	std	Y+30, r24	; 0x1e
    1a36:	86 a9       	ldd	r24, Z+54	; 0x36
    1a38:	8f 8f       	std	Y+31, r24	; 0x1f
    1a3a:	87 a9       	ldd	r24, Z+55	; 0x37
    1a3c:	88 a3       	std	Y+32, r24	; 0x20
    1a3e:	20 e2       	ldi	r18, 0x20	; 32
    1a40:	ae 01       	movw	r20, r28
    1a42:	4f 5f       	subi	r20, 0xFF	; 255
    1a44:	5f 4f       	sbci	r21, 0xFF	; 255
    1a46:	b7 01       	movw	r22, r14
    1a48:	c7 01       	movw	r24, r14
    1a4a:	67 d8       	rcall	.-3890   	; 0xb1a <uECC_vli_sub>
    1a4c:	d8 1a       	sub	r13, r24
    1a4e:	d7 fc       	sbrc	r13, 7
    1a50:	19 c0       	rjmp	.+50     	; 0x1a84 <vli_mmod_fast_secp256r1+0x45c>
    1a52:	87 01       	movw	r16, r14
    1a54:	00 5e       	subi	r16, 0xE0	; 224
    1a56:	1f 4f       	sbci	r17, 0xFF	; 255
    1a58:	d1 10       	cpse	r13, r1
    1a5a:	0c c0       	rjmp	.+24     	; 0x1a74 <vli_mmod_fast_secp256r1+0x44c>
    1a5c:	ae e2       	ldi	r26, 0x2E	; 46
    1a5e:	b1 e0       	ldi	r27, 0x01	; 1
    1a60:	f8 01       	movw	r30, r16
    1a62:	9e 91       	ld	r25, -X
    1a64:	82 91       	ld	r24, -Z
    1a66:	89 17       	cp	r24, r25
    1a68:	b8 f0       	brcs	.+46     	; 0x1a98 <vli_mmod_fast_secp256r1+0x470>
    1a6a:	98 17       	cp	r25, r24
    1a6c:	18 f0       	brcs	.+6      	; 0x1a74 <vli_mmod_fast_secp256r1+0x44c>
    1a6e:	ee 15       	cp	r30, r14
    1a70:	ff 05       	cpc	r31, r15
    1a72:	b9 f7       	brne	.-18     	; 0x1a62 <vli_mmod_fast_secp256r1+0x43a>
    1a74:	20 e2       	ldi	r18, 0x20	; 32
    1a76:	4e e0       	ldi	r20, 0x0E	; 14
    1a78:	51 e0       	ldi	r21, 0x01	; 1
    1a7a:	b7 01       	movw	r22, r14
    1a7c:	c7 01       	movw	r24, r14
    1a7e:	4d d8       	rcall	.-3942   	; 0xb1a <uECC_vli_sub>
    1a80:	d8 1a       	sub	r13, r24
    1a82:	ea cf       	rjmp	.-44     	; 0x1a58 <vli_mmod_fast_secp256r1+0x430>
    1a84:	20 e2       	ldi	r18, 0x20	; 32
    1a86:	4e e0       	ldi	r20, 0x0E	; 14
    1a88:	51 e0       	ldi	r21, 0x01	; 1
    1a8a:	b7 01       	movw	r22, r14
    1a8c:	c7 01       	movw	r24, r14
    1a8e:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    1a92:	d8 0e       	add	r13, r24
    1a94:	d7 fc       	sbrc	r13, 7
    1a96:	f6 cf       	rjmp	.-20     	; 0x1a84 <vli_mmod_fast_secp256r1+0x45c>
    1a98:	a0 96       	adiw	r28, 0x20	; 32
    1a9a:	0f b6       	in	r0, 0x3f	; 63
    1a9c:	f8 94       	cli
    1a9e:	de bf       	out	0x3e, r29	; 62
    1aa0:	0f be       	out	0x3f, r0	; 63
    1aa2:	cd bf       	out	0x3d, r28	; 61
    1aa4:	df 91       	pop	r29
    1aa6:	cf 91       	pop	r28
    1aa8:	1f 91       	pop	r17
    1aaa:	0f 91       	pop	r16
    1aac:	ff 90       	pop	r15
    1aae:	ef 90       	pop	r14
    1ab0:	df 90       	pop	r13
    1ab2:	08 95       	ret

00001ab4 <apply_z>:
    1ab4:	8f 92       	push	r8
    1ab6:	9f 92       	push	r9
    1ab8:	af 92       	push	r10
    1aba:	bf 92       	push	r11
    1abc:	cf 92       	push	r12
    1abe:	df 92       	push	r13
    1ac0:	ef 92       	push	r14
    1ac2:	ff 92       	push	r15
    1ac4:	0f 93       	push	r16
    1ac6:	1f 93       	push	r17
    1ac8:	cf 93       	push	r28
    1aca:	df 93       	push	r29
    1acc:	cd b7       	in	r28, 0x3d	; 61
    1ace:	de b7       	in	r29, 0x3e	; 62
    1ad0:	c0 56       	subi	r28, 0x60	; 96
    1ad2:	d1 09       	sbc	r29, r1
    1ad4:	0f b6       	in	r0, 0x3f	; 63
    1ad6:	f8 94       	cli
    1ad8:	de bf       	out	0x3e, r29	; 62
    1ada:	0f be       	out	0x3f, r0	; 63
    1adc:	cd bf       	out	0x3d, r28	; 61
    1ade:	4c 01       	movw	r8, r24
    1ae0:	5b 01       	movw	r10, r22
    1ae2:	6a 01       	movw	r12, r20
    1ae4:	89 01       	movw	r16, r18
    1ae6:	d9 01       	movw	r26, r18
    1ae8:	2c 91       	ld	r18, X
    1aea:	ba 01       	movw	r22, r20
    1aec:	ce 01       	movw	r24, r28
    1aee:	01 96       	adiw	r24, 0x01	; 1
    1af0:	e5 d8       	rcall	.-3638   	; 0xcbc <uECC_vli_mult>
    1af2:	78 01       	movw	r14, r16
    1af4:	ba ea       	ldi	r27, 0xAA	; 170
    1af6:	eb 0e       	add	r14, r27
    1af8:	f1 1c       	adc	r15, r1
    1afa:	d7 01       	movw	r26, r14
    1afc:	ed 91       	ld	r30, X+
    1afe:	fc 91       	ld	r31, X
    1b00:	be 01       	movw	r22, r28
    1b02:	6f 5f       	subi	r22, 0xFF	; 255
    1b04:	7f 4f       	sbci	r23, 0xFF	; 255
    1b06:	ce 01       	movw	r24, r28
    1b08:	8f 5b       	subi	r24, 0xBF	; 191
    1b0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0c:	09 95       	icall
    1b0e:	f8 01       	movw	r30, r16
    1b10:	20 81       	ld	r18, Z
    1b12:	ae 01       	movw	r20, r28
    1b14:	4f 5b       	subi	r20, 0xBF	; 191
    1b16:	5f 4f       	sbci	r21, 0xFF	; 255
    1b18:	b4 01       	movw	r22, r8
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	01 96       	adiw	r24, 0x01	; 1
    1b1e:	ce d8       	rcall	.-3684   	; 0xcbc <uECC_vli_mult>
    1b20:	d7 01       	movw	r26, r14
    1b22:	ed 91       	ld	r30, X+
    1b24:	fc 91       	ld	r31, X
    1b26:	be 01       	movw	r22, r28
    1b28:	6f 5f       	subi	r22, 0xFF	; 255
    1b2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b2c:	c4 01       	movw	r24, r8
    1b2e:	09 95       	icall
    1b30:	f8 01       	movw	r30, r16
    1b32:	20 81       	ld	r18, Z
    1b34:	a6 01       	movw	r20, r12
    1b36:	be 01       	movw	r22, r28
    1b38:	6f 5b       	subi	r22, 0xBF	; 191
    1b3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	01 96       	adiw	r24, 0x01	; 1
    1b40:	bd d8       	rcall	.-3718   	; 0xcbc <uECC_vli_mult>
    1b42:	d7 01       	movw	r26, r14
    1b44:	ed 91       	ld	r30, X+
    1b46:	fc 91       	ld	r31, X
    1b48:	be 01       	movw	r22, r28
    1b4a:	6f 5f       	subi	r22, 0xFF	; 255
    1b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b4e:	ce 01       	movw	r24, r28
    1b50:	8f 5b       	subi	r24, 0xBF	; 191
    1b52:	9f 4f       	sbci	r25, 0xFF	; 255
    1b54:	09 95       	icall
    1b56:	f8 01       	movw	r30, r16
    1b58:	20 81       	ld	r18, Z
    1b5a:	ae 01       	movw	r20, r28
    1b5c:	4f 5b       	subi	r20, 0xBF	; 191
    1b5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b60:	b5 01       	movw	r22, r10
    1b62:	ce 01       	movw	r24, r28
    1b64:	01 96       	adiw	r24, 0x01	; 1
    1b66:	aa d8       	rcall	.-3756   	; 0xcbc <uECC_vli_mult>
    1b68:	d7 01       	movw	r26, r14
    1b6a:	ed 91       	ld	r30, X+
    1b6c:	fc 91       	ld	r31, X
    1b6e:	be 01       	movw	r22, r28
    1b70:	6f 5f       	subi	r22, 0xFF	; 255
    1b72:	7f 4f       	sbci	r23, 0xFF	; 255
    1b74:	c5 01       	movw	r24, r10
    1b76:	09 95       	icall
    1b78:	c0 5a       	subi	r28, 0xA0	; 160
    1b7a:	df 4f       	sbci	r29, 0xFF	; 255
    1b7c:	0f b6       	in	r0, 0x3f	; 63
    1b7e:	f8 94       	cli
    1b80:	de bf       	out	0x3e, r29	; 62
    1b82:	0f be       	out	0x3f, r0	; 63
    1b84:	cd bf       	out	0x3d, r28	; 61
    1b86:	df 91       	pop	r29
    1b88:	cf 91       	pop	r28
    1b8a:	1f 91       	pop	r17
    1b8c:	0f 91       	pop	r16
    1b8e:	ff 90       	pop	r15
    1b90:	ef 90       	pop	r14
    1b92:	df 90       	pop	r13
    1b94:	cf 90       	pop	r12
    1b96:	bf 90       	pop	r11
    1b98:	af 90       	pop	r10
    1b9a:	9f 90       	pop	r9
    1b9c:	8f 90       	pop	r8
    1b9e:	08 95       	ret

00001ba0 <XYcZ_add>:
    1ba0:	2f 92       	push	r2
    1ba2:	3f 92       	push	r3
    1ba4:	4f 92       	push	r4
    1ba6:	5f 92       	push	r5
    1ba8:	6f 92       	push	r6
    1baa:	7f 92       	push	r7
    1bac:	8f 92       	push	r8
    1bae:	9f 92       	push	r9
    1bb0:	af 92       	push	r10
    1bb2:	bf 92       	push	r11
    1bb4:	cf 92       	push	r12
    1bb6:	df 92       	push	r13
    1bb8:	ef 92       	push	r14
    1bba:	ff 92       	push	r15
    1bbc:	0f 93       	push	r16
    1bbe:	1f 93       	push	r17
    1bc0:	cf 93       	push	r28
    1bc2:	df 93       	push	r29
    1bc4:	cd b7       	in	r28, 0x3d	; 61
    1bc6:	de b7       	in	r29, 0x3e	; 62
    1bc8:	c0 56       	subi	r28, 0x60	; 96
    1bca:	d1 09       	sbc	r29, r1
    1bcc:	0f b6       	in	r0, 0x3f	; 63
    1bce:	f8 94       	cli
    1bd0:	de bf       	out	0x3e, r29	; 62
    1bd2:	0f be       	out	0x3f, r0	; 63
    1bd4:	cd bf       	out	0x3d, r28	; 61
    1bd6:	3c 01       	movw	r6, r24
    1bd8:	2b 01       	movw	r4, r22
    1bda:	7a 01       	movw	r14, r20
    1bdc:	59 01       	movw	r10, r18
    1bde:	68 01       	movw	r12, r16
    1be0:	d8 01       	movw	r26, r16
    1be2:	1c 91       	ld	r17, X
    1be4:	46 01       	movw	r8, r12
    1be6:	b4 e0       	ldi	r27, 0x04	; 4
    1be8:	8b 0e       	add	r8, r27
    1bea:	91 1c       	adc	r9, r1
    1bec:	01 2f       	mov	r16, r17
    1bee:	94 01       	movw	r18, r8
    1bf0:	ac 01       	movw	r20, r24
    1bf2:	b7 01       	movw	r22, r14
    1bf4:	ce 01       	movw	r24, r28
    1bf6:	8f 5b       	subi	r24, 0xBF	; 191
    1bf8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfa:	41 d9       	rcall	.-3454   	; 0xe7e <uECC_vli_modSub>
    1bfc:	f6 01       	movw	r30, r12
    1bfe:	20 81       	ld	r18, Z
    1c00:	ae 01       	movw	r20, r28
    1c02:	4f 5b       	subi	r20, 0xBF	; 191
    1c04:	5f 4f       	sbci	r21, 0xFF	; 255
    1c06:	ba 01       	movw	r22, r20
    1c08:	ce 01       	movw	r24, r28
    1c0a:	01 96       	adiw	r24, 0x01	; 1
    1c0c:	57 d8       	rcall	.-3922   	; 0xcbc <uECC_vli_mult>
    1c0e:	16 01       	movw	r2, r12
    1c10:	fa ea       	ldi	r31, 0xAA	; 170
    1c12:	2f 0e       	add	r2, r31
    1c14:	31 1c       	adc	r3, r1
    1c16:	d1 01       	movw	r26, r2
    1c18:	ed 91       	ld	r30, X+
    1c1a:	fc 91       	ld	r31, X
    1c1c:	be 01       	movw	r22, r28
    1c1e:	6f 5f       	subi	r22, 0xFF	; 255
    1c20:	7f 4f       	sbci	r23, 0xFF	; 255
    1c22:	ce 01       	movw	r24, r28
    1c24:	8f 5b       	subi	r24, 0xBF	; 191
    1c26:	9f 4f       	sbci	r25, 0xFF	; 255
    1c28:	09 95       	icall
    1c2a:	f6 01       	movw	r30, r12
    1c2c:	20 81       	ld	r18, Z
    1c2e:	ae 01       	movw	r20, r28
    1c30:	4f 5b       	subi	r20, 0xBF	; 191
    1c32:	5f 4f       	sbci	r21, 0xFF	; 255
    1c34:	b3 01       	movw	r22, r6
    1c36:	ce 01       	movw	r24, r28
    1c38:	01 96       	adiw	r24, 0x01	; 1
    1c3a:	40 d8       	rcall	.-3968   	; 0xcbc <uECC_vli_mult>
    1c3c:	d1 01       	movw	r26, r2
    1c3e:	ed 91       	ld	r30, X+
    1c40:	fc 91       	ld	r31, X
    1c42:	be 01       	movw	r22, r28
    1c44:	6f 5f       	subi	r22, 0xFF	; 255
    1c46:	7f 4f       	sbci	r23, 0xFF	; 255
    1c48:	c3 01       	movw	r24, r6
    1c4a:	09 95       	icall
    1c4c:	f6 01       	movw	r30, r12
    1c4e:	20 81       	ld	r18, Z
    1c50:	ae 01       	movw	r20, r28
    1c52:	4f 5b       	subi	r20, 0xBF	; 191
    1c54:	5f 4f       	sbci	r21, 0xFF	; 255
    1c56:	b7 01       	movw	r22, r14
    1c58:	ce 01       	movw	r24, r28
    1c5a:	01 96       	adiw	r24, 0x01	; 1
    1c5c:	2f d8       	rcall	.-4002   	; 0xcbc <uECC_vli_mult>
    1c5e:	d1 01       	movw	r26, r2
    1c60:	ed 91       	ld	r30, X+
    1c62:	fc 91       	ld	r31, X
    1c64:	be 01       	movw	r22, r28
    1c66:	6f 5f       	subi	r22, 0xFF	; 255
    1c68:	7f 4f       	sbci	r23, 0xFF	; 255
    1c6a:	c7 01       	movw	r24, r14
    1c6c:	09 95       	icall
    1c6e:	94 01       	movw	r18, r8
    1c70:	a2 01       	movw	r20, r4
    1c72:	b5 01       	movw	r22, r10
    1c74:	c5 01       	movw	r24, r10
    1c76:	03 d9       	rcall	.-3578   	; 0xe7e <uECC_vli_modSub>
    1c78:	f6 01       	movw	r30, r12
    1c7a:	20 81       	ld	r18, Z
    1c7c:	a5 01       	movw	r20, r10
    1c7e:	b5 01       	movw	r22, r10
    1c80:	ce 01       	movw	r24, r28
    1c82:	01 96       	adiw	r24, 0x01	; 1
    1c84:	1b d8       	rcall	.-4042   	; 0xcbc <uECC_vli_mult>
    1c86:	d1 01       	movw	r26, r2
    1c88:	ed 91       	ld	r30, X+
    1c8a:	fc 91       	ld	r31, X
    1c8c:	be 01       	movw	r22, r28
    1c8e:	6f 5f       	subi	r22, 0xFF	; 255
    1c90:	7f 4f       	sbci	r23, 0xFF	; 255
    1c92:	ce 01       	movw	r24, r28
    1c94:	8f 5b       	subi	r24, 0xBF	; 191
    1c96:	9f 4f       	sbci	r25, 0xFF	; 255
    1c98:	09 95       	icall
    1c9a:	94 01       	movw	r18, r8
    1c9c:	a3 01       	movw	r20, r6
    1c9e:	be 01       	movw	r22, r28
    1ca0:	6f 5b       	subi	r22, 0xBF	; 191
    1ca2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	eb d8       	rcall	.-3626   	; 0xe7e <uECC_vli_modSub>
    1ca8:	94 01       	movw	r18, r8
    1caa:	a7 01       	movw	r20, r14
    1cac:	be 01       	movw	r22, r28
    1cae:	6f 5b       	subi	r22, 0xBF	; 191
    1cb0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cb2:	cb 01       	movw	r24, r22
    1cb4:	e4 d8       	rcall	.-3640   	; 0xe7e <uECC_vli_modSub>
    1cb6:	94 01       	movw	r18, r8
    1cb8:	a3 01       	movw	r20, r6
    1cba:	b7 01       	movw	r22, r14
    1cbc:	c7 01       	movw	r24, r14
    1cbe:	df d8       	rcall	.-3650   	; 0xe7e <uECC_vli_modSub>
    1cc0:	f6 01       	movw	r30, r12
    1cc2:	20 81       	ld	r18, Z
    1cc4:	a7 01       	movw	r20, r14
    1cc6:	b2 01       	movw	r22, r4
    1cc8:	ce 01       	movw	r24, r28
    1cca:	01 96       	adiw	r24, 0x01	; 1
    1ccc:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1cd0:	d1 01       	movw	r26, r2
    1cd2:	ed 91       	ld	r30, X+
    1cd4:	fc 91       	ld	r31, X
    1cd6:	be 01       	movw	r22, r28
    1cd8:	6f 5f       	subi	r22, 0xFF	; 255
    1cda:	7f 4f       	sbci	r23, 0xFF	; 255
    1cdc:	c2 01       	movw	r24, r4
    1cde:	09 95       	icall
    1ce0:	94 01       	movw	r18, r8
    1ce2:	ae 01       	movw	r20, r28
    1ce4:	4f 5b       	subi	r20, 0xBF	; 191
    1ce6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce8:	b3 01       	movw	r22, r6
    1cea:	c7 01       	movw	r24, r14
    1cec:	c8 d8       	rcall	.-3696   	; 0xe7e <uECC_vli_modSub>
    1cee:	f6 01       	movw	r30, r12
    1cf0:	20 81       	ld	r18, Z
    1cf2:	a7 01       	movw	r20, r14
    1cf4:	b5 01       	movw	r22, r10
    1cf6:	ce 01       	movw	r24, r28
    1cf8:	01 96       	adiw	r24, 0x01	; 1
    1cfa:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1cfe:	d1 01       	movw	r26, r2
    1d00:	ed 91       	ld	r30, X+
    1d02:	fc 91       	ld	r31, X
    1d04:	be 01       	movw	r22, r28
    1d06:	6f 5f       	subi	r22, 0xFF	; 255
    1d08:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0a:	c5 01       	movw	r24, r10
    1d0c:	09 95       	icall
    1d0e:	94 01       	movw	r18, r8
    1d10:	a2 01       	movw	r20, r4
    1d12:	b5 01       	movw	r22, r10
    1d14:	c5 01       	movw	r24, r10
    1d16:	b3 d8       	rcall	.-3738   	; 0xe7e <uECC_vli_modSub>
    1d18:	41 2f       	mov	r20, r17
    1d1a:	be 01       	movw	r22, r28
    1d1c:	6f 5b       	subi	r22, 0xBF	; 191
    1d1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d20:	c7 01       	movw	r24, r14
    1d22:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    1d26:	c0 5a       	subi	r28, 0xA0	; 160
    1d28:	df 4f       	sbci	r29, 0xFF	; 255
    1d2a:	0f b6       	in	r0, 0x3f	; 63
    1d2c:	f8 94       	cli
    1d2e:	de bf       	out	0x3e, r29	; 62
    1d30:	0f be       	out	0x3f, r0	; 63
    1d32:	cd bf       	out	0x3d, r28	; 61
    1d34:	df 91       	pop	r29
    1d36:	cf 91       	pop	r28
    1d38:	1f 91       	pop	r17
    1d3a:	0f 91       	pop	r16
    1d3c:	ff 90       	pop	r15
    1d3e:	ef 90       	pop	r14
    1d40:	df 90       	pop	r13
    1d42:	cf 90       	pop	r12
    1d44:	bf 90       	pop	r11
    1d46:	af 90       	pop	r10
    1d48:	9f 90       	pop	r9
    1d4a:	8f 90       	pop	r8
    1d4c:	7f 90       	pop	r7
    1d4e:	6f 90       	pop	r6
    1d50:	5f 90       	pop	r5
    1d52:	4f 90       	pop	r4
    1d54:	3f 90       	pop	r3
    1d56:	2f 90       	pop	r2
    1d58:	08 95       	ret

00001d5a <XYcZ_addC>:
    1d5a:	2f 92       	push	r2
    1d5c:	3f 92       	push	r3
    1d5e:	4f 92       	push	r4
    1d60:	5f 92       	push	r5
    1d62:	6f 92       	push	r6
    1d64:	7f 92       	push	r7
    1d66:	8f 92       	push	r8
    1d68:	9f 92       	push	r9
    1d6a:	af 92       	push	r10
    1d6c:	bf 92       	push	r11
    1d6e:	cf 92       	push	r12
    1d70:	df 92       	push	r13
    1d72:	ef 92       	push	r14
    1d74:	ff 92       	push	r15
    1d76:	0f 93       	push	r16
    1d78:	1f 93       	push	r17
    1d7a:	cf 93       	push	r28
    1d7c:	df 93       	push	r29
    1d7e:	cd b7       	in	r28, 0x3d	; 61
    1d80:	de b7       	in	r29, 0x3e	; 62
    1d82:	c0 5a       	subi	r28, 0xA0	; 160
    1d84:	d1 09       	sbc	r29, r1
    1d86:	0f b6       	in	r0, 0x3f	; 63
    1d88:	f8 94       	cli
    1d8a:	de bf       	out	0x3e, r29	; 62
    1d8c:	0f be       	out	0x3f, r0	; 63
    1d8e:	cd bf       	out	0x3d, r28	; 61
    1d90:	4c 01       	movw	r8, r24
    1d92:	3b 01       	movw	r6, r22
    1d94:	5a 01       	movw	r10, r20
    1d96:	69 01       	movw	r12, r18
    1d98:	28 01       	movw	r4, r16
    1d9a:	d8 01       	movw	r26, r16
    1d9c:	1c 91       	ld	r17, X
    1d9e:	72 01       	movw	r14, r4
    1da0:	b4 e0       	ldi	r27, 0x04	; 4
    1da2:	eb 0e       	add	r14, r27
    1da4:	f1 1c       	adc	r15, r1
    1da6:	01 2f       	mov	r16, r17
    1da8:	97 01       	movw	r18, r14
    1daa:	ac 01       	movw	r20, r24
    1dac:	b5 01       	movw	r22, r10
    1dae:	ce 01       	movw	r24, r28
    1db0:	8f 57       	subi	r24, 0x7F	; 127
    1db2:	9f 4f       	sbci	r25, 0xFF	; 255
    1db4:	64 d8       	rcall	.-3896   	; 0xe7e <uECC_vli_modSub>
    1db6:	f2 01       	movw	r30, r4
    1db8:	20 81       	ld	r18, Z
    1dba:	ae 01       	movw	r20, r28
    1dbc:	4f 57       	subi	r20, 0x7F	; 127
    1dbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1dc0:	ba 01       	movw	r22, r20
    1dc2:	ce 01       	movw	r24, r28
    1dc4:	01 96       	adiw	r24, 0x01	; 1
    1dc6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1dca:	12 01       	movw	r2, r4
    1dcc:	fa ea       	ldi	r31, 0xAA	; 170
    1dce:	2f 0e       	add	r2, r31
    1dd0:	31 1c       	adc	r3, r1
    1dd2:	d1 01       	movw	r26, r2
    1dd4:	ed 91       	ld	r30, X+
    1dd6:	fc 91       	ld	r31, X
    1dd8:	be 01       	movw	r22, r28
    1dda:	6f 5f       	subi	r22, 0xFF	; 255
    1ddc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dde:	ce 01       	movw	r24, r28
    1de0:	8f 57       	subi	r24, 0x7F	; 127
    1de2:	9f 4f       	sbci	r25, 0xFF	; 255
    1de4:	09 95       	icall
    1de6:	f2 01       	movw	r30, r4
    1de8:	20 81       	ld	r18, Z
    1dea:	ae 01       	movw	r20, r28
    1dec:	4f 57       	subi	r20, 0x7F	; 127
    1dee:	5f 4f       	sbci	r21, 0xFF	; 255
    1df0:	b4 01       	movw	r22, r8
    1df2:	ce 01       	movw	r24, r28
    1df4:	01 96       	adiw	r24, 0x01	; 1
    1df6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1dfa:	d1 01       	movw	r26, r2
    1dfc:	ed 91       	ld	r30, X+
    1dfe:	fc 91       	ld	r31, X
    1e00:	be 01       	movw	r22, r28
    1e02:	6f 5f       	subi	r22, 0xFF	; 255
    1e04:	7f 4f       	sbci	r23, 0xFF	; 255
    1e06:	c4 01       	movw	r24, r8
    1e08:	09 95       	icall
    1e0a:	f2 01       	movw	r30, r4
    1e0c:	20 81       	ld	r18, Z
    1e0e:	ae 01       	movw	r20, r28
    1e10:	4f 57       	subi	r20, 0x7F	; 127
    1e12:	5f 4f       	sbci	r21, 0xFF	; 255
    1e14:	b5 01       	movw	r22, r10
    1e16:	ce 01       	movw	r24, r28
    1e18:	01 96       	adiw	r24, 0x01	; 1
    1e1a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1e1e:	d1 01       	movw	r26, r2
    1e20:	ed 91       	ld	r30, X+
    1e22:	fc 91       	ld	r31, X
    1e24:	be 01       	movw	r22, r28
    1e26:	6f 5f       	subi	r22, 0xFF	; 255
    1e28:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2a:	c5 01       	movw	r24, r10
    1e2c:	09 95       	icall
    1e2e:	97 01       	movw	r18, r14
    1e30:	a3 01       	movw	r20, r6
    1e32:	b6 01       	movw	r22, r12
    1e34:	ce 01       	movw	r24, r28
    1e36:	8f 57       	subi	r24, 0x7F	; 127
    1e38:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3a:	0e 94 0d 07 	call	0xe1a	; 0xe1a <uECC_vli_modAdd>
    1e3e:	97 01       	movw	r18, r14
    1e40:	a3 01       	movw	r20, r6
    1e42:	b6 01       	movw	r22, r12
    1e44:	c6 01       	movw	r24, r12
    1e46:	1b d8       	rcall	.-4042   	; 0xe7e <uECC_vli_modSub>
    1e48:	97 01       	movw	r18, r14
    1e4a:	a4 01       	movw	r20, r8
    1e4c:	b5 01       	movw	r22, r10
    1e4e:	ce 01       	movw	r24, r28
    1e50:	8f 59       	subi	r24, 0x9F	; 159
    1e52:	9f 4f       	sbci	r25, 0xFF	; 255
    1e54:	14 d8       	rcall	.-4056   	; 0xe7e <uECC_vli_modSub>
    1e56:	f2 01       	movw	r30, r4
    1e58:	20 81       	ld	r18, Z
    1e5a:	ae 01       	movw	r20, r28
    1e5c:	4f 59       	subi	r20, 0x9F	; 159
    1e5e:	5f 4f       	sbci	r21, 0xFF	; 255
    1e60:	b3 01       	movw	r22, r6
    1e62:	ce 01       	movw	r24, r28
    1e64:	01 96       	adiw	r24, 0x01	; 1
    1e66:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1e6a:	d1 01       	movw	r26, r2
    1e6c:	ed 91       	ld	r30, X+
    1e6e:	fc 91       	ld	r31, X
    1e70:	be 01       	movw	r22, r28
    1e72:	6f 5f       	subi	r22, 0xFF	; 255
    1e74:	7f 4f       	sbci	r23, 0xFF	; 255
    1e76:	c3 01       	movw	r24, r6
    1e78:	09 95       	icall
    1e7a:	97 01       	movw	r18, r14
    1e7c:	a5 01       	movw	r20, r10
    1e7e:	b4 01       	movw	r22, r8
    1e80:	ce 01       	movw	r24, r28
    1e82:	8f 59       	subi	r24, 0x9F	; 159
    1e84:	9f 4f       	sbci	r25, 0xFF	; 255
    1e86:	0e 94 0d 07 	call	0xe1a	; 0xe1a <uECC_vli_modAdd>
    1e8a:	f2 01       	movw	r30, r4
    1e8c:	20 81       	ld	r18, Z
    1e8e:	a6 01       	movw	r20, r12
    1e90:	b6 01       	movw	r22, r12
    1e92:	ce 01       	movw	r24, r28
    1e94:	01 96       	adiw	r24, 0x01	; 1
    1e96:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1e9a:	d1 01       	movw	r26, r2
    1e9c:	ed 91       	ld	r30, X+
    1e9e:	fc 91       	ld	r31, X
    1ea0:	be 01       	movw	r22, r28
    1ea2:	6f 5f       	subi	r22, 0xFF	; 255
    1ea4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ea6:	c5 01       	movw	r24, r10
    1ea8:	09 95       	icall
    1eaa:	97 01       	movw	r18, r14
    1eac:	ae 01       	movw	r20, r28
    1eae:	4f 59       	subi	r20, 0x9F	; 159
    1eb0:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb2:	b5 01       	movw	r22, r10
    1eb4:	c5 01       	movw	r24, r10
    1eb6:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1eba:	97 01       	movw	r18, r14
    1ebc:	a5 01       	movw	r20, r10
    1ebe:	b4 01       	movw	r22, r8
    1ec0:	ce 01       	movw	r24, r28
    1ec2:	8f 5b       	subi	r24, 0xBF	; 191
    1ec4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec6:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1eca:	f2 01       	movw	r30, r4
    1ecc:	20 81       	ld	r18, Z
    1ece:	ae 01       	movw	r20, r28
    1ed0:	4f 5b       	subi	r20, 0xBF	; 191
    1ed2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed4:	b6 01       	movw	r22, r12
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	01 96       	adiw	r24, 0x01	; 1
    1eda:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1ede:	d1 01       	movw	r26, r2
    1ee0:	ed 91       	ld	r30, X+
    1ee2:	fc 91       	ld	r31, X
    1ee4:	be 01       	movw	r22, r28
    1ee6:	6f 5f       	subi	r22, 0xFF	; 255
    1ee8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eea:	c6 01       	movw	r24, r12
    1eec:	09 95       	icall
    1eee:	97 01       	movw	r18, r14
    1ef0:	a3 01       	movw	r20, r6
    1ef2:	b6 01       	movw	r22, r12
    1ef4:	c6 01       	movw	r24, r12
    1ef6:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1efa:	f2 01       	movw	r30, r4
    1efc:	20 81       	ld	r18, Z
    1efe:	ae 01       	movw	r20, r28
    1f00:	4f 57       	subi	r20, 0x7F	; 127
    1f02:	5f 4f       	sbci	r21, 0xFF	; 255
    1f04:	ba 01       	movw	r22, r20
    1f06:	ce 01       	movw	r24, r28
    1f08:	01 96       	adiw	r24, 0x01	; 1
    1f0a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1f0e:	d1 01       	movw	r26, r2
    1f10:	ed 91       	ld	r30, X+
    1f12:	fc 91       	ld	r31, X
    1f14:	be 01       	movw	r22, r28
    1f16:	6f 5f       	subi	r22, 0xFF	; 255
    1f18:	7f 4f       	sbci	r23, 0xFF	; 255
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	8f 5b       	subi	r24, 0xBF	; 191
    1f1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f20:	09 95       	icall
    1f22:	97 01       	movw	r18, r14
    1f24:	ae 01       	movw	r20, r28
    1f26:	4f 59       	subi	r20, 0x9F	; 159
    1f28:	5f 4f       	sbci	r21, 0xFF	; 255
    1f2a:	be 01       	movw	r22, r28
    1f2c:	6f 5b       	subi	r22, 0xBF	; 191
    1f2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f30:	cb 01       	movw	r24, r22
    1f32:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1f36:	97 01       	movw	r18, r14
    1f38:	a4 01       	movw	r20, r8
    1f3a:	be 01       	movw	r22, r28
    1f3c:	6f 5b       	subi	r22, 0xBF	; 191
    1f3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f40:	ce 01       	movw	r24, r28
    1f42:	8f 59       	subi	r24, 0x9F	; 159
    1f44:	9f 4f       	sbci	r25, 0xFF	; 255
    1f46:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1f4a:	f2 01       	movw	r30, r4
    1f4c:	20 81       	ld	r18, Z
    1f4e:	ae 01       	movw	r20, r28
    1f50:	4f 57       	subi	r20, 0x7F	; 127
    1f52:	5f 4f       	sbci	r21, 0xFF	; 255
    1f54:	be 01       	movw	r22, r28
    1f56:	6f 59       	subi	r22, 0x9F	; 159
    1f58:	7f 4f       	sbci	r23, 0xFF	; 255
    1f5a:	ce 01       	movw	r24, r28
    1f5c:	01 96       	adiw	r24, 0x01	; 1
    1f5e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    1f62:	d1 01       	movw	r26, r2
    1f64:	ed 91       	ld	r30, X+
    1f66:	fc 91       	ld	r31, X
    1f68:	be 01       	movw	r22, r28
    1f6a:	6f 5f       	subi	r22, 0xFF	; 255
    1f6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6e:	ce 01       	movw	r24, r28
    1f70:	8f 59       	subi	r24, 0x9F	; 159
    1f72:	9f 4f       	sbci	r25, 0xFF	; 255
    1f74:	09 95       	icall
    1f76:	97 01       	movw	r18, r14
    1f78:	a3 01       	movw	r20, r6
    1f7a:	be 01       	movw	r22, r28
    1f7c:	6f 59       	subi	r22, 0x9F	; 159
    1f7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1f80:	c3 01       	movw	r24, r6
    1f82:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    1f86:	41 2f       	mov	r20, r17
    1f88:	be 01       	movw	r22, r28
    1f8a:	6f 5b       	subi	r22, 0xBF	; 191
    1f8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f8e:	c4 01       	movw	r24, r8
    1f90:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    1f94:	c0 56       	subi	r28, 0x60	; 96
    1f96:	df 4f       	sbci	r29, 0xFF	; 255
    1f98:	0f b6       	in	r0, 0x3f	; 63
    1f9a:	f8 94       	cli
    1f9c:	de bf       	out	0x3e, r29	; 62
    1f9e:	0f be       	out	0x3f, r0	; 63
    1fa0:	cd bf       	out	0x3d, r28	; 61
    1fa2:	df 91       	pop	r29
    1fa4:	cf 91       	pop	r28
    1fa6:	1f 91       	pop	r17
    1fa8:	0f 91       	pop	r16
    1faa:	ff 90       	pop	r15
    1fac:	ef 90       	pop	r14
    1fae:	df 90       	pop	r13
    1fb0:	cf 90       	pop	r12
    1fb2:	bf 90       	pop	r11
    1fb4:	af 90       	pop	r10
    1fb6:	9f 90       	pop	r9
    1fb8:	8f 90       	pop	r8
    1fba:	7f 90       	pop	r7
    1fbc:	6f 90       	pop	r6
    1fbe:	5f 90       	pop	r5
    1fc0:	4f 90       	pop	r4
    1fc2:	3f 90       	pop	r3
    1fc4:	2f 90       	pop	r2
    1fc6:	08 95       	ret

00001fc8 <regularize_k>:
    1fc8:	9f 92       	push	r9
    1fca:	af 92       	push	r10
    1fcc:	bf 92       	push	r11
    1fce:	cf 92       	push	r12
    1fd0:	df 92       	push	r13
    1fd2:	ef 92       	push	r14
    1fd4:	ff 92       	push	r15
    1fd6:	0f 93       	push	r16
    1fd8:	1f 93       	push	r17
    1fda:	cf 93       	push	r28
    1fdc:	df 93       	push	r29
    1fde:	6b 01       	movw	r12, r22
    1fe0:	5a 01       	movw	r10, r20
    1fe2:	f9 01       	movw	r30, r18
    1fe4:	e2 80       	ldd	r14, Z+2	; 0x02
    1fe6:	f3 80       	ldd	r15, Z+3	; 0x03
    1fe8:	e7 01       	movw	r28, r14
    1fea:	27 96       	adiw	r28, 0x07	; 7
    1fec:	d7 fd       	sbrc	r29, 7
    1fee:	47 c0       	rjmp	.+142    	; 0x207e <regularize_k+0xb6>
    1ff0:	d5 95       	asr	r29
    1ff2:	c7 95       	ror	r28
    1ff4:	d5 95       	asr	r29
    1ff6:	c7 95       	ror	r28
    1ff8:	d5 95       	asr	r29
    1ffa:	c7 95       	ror	r28
    1ffc:	89 01       	movw	r16, r18
    1ffe:	0c 5d       	subi	r16, 0xDC	; 220
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	2c 2f       	mov	r18, r28
    2004:	a8 01       	movw	r20, r16
    2006:	bc 01       	movw	r22, r24
    2008:	c6 01       	movw	r24, r12
    200a:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    200e:	98 2e       	mov	r9, r24
    2010:	81 11       	cpse	r24, r1
    2012:	32 c0       	rjmp	.+100    	; 0x2078 <regularize_k+0xb0>
    2014:	28 e0       	ldi	r18, 0x08	; 8
    2016:	c2 02       	muls	r28, r18
    2018:	c0 01       	movw	r24, r0
    201a:	11 24       	eor	r1, r1
    201c:	e8 16       	cp	r14, r24
    201e:	f9 06       	cpc	r15, r25
    2020:	c4 f4       	brge	.+48     	; 0x2052 <regularize_k+0x8a>
    2022:	f7 01       	movw	r30, r14
    2024:	f5 95       	asr	r31
    2026:	e7 95       	ror	r30
    2028:	f5 95       	asr	r31
    202a:	e7 95       	ror	r30
    202c:	f5 95       	asr	r31
    202e:	e7 95       	ror	r30
    2030:	ec 0d       	add	r30, r12
    2032:	fd 1d       	adc	r31, r13
    2034:	37 e0       	ldi	r19, 0x07	; 7
    2036:	e3 22       	and	r14, r19
    2038:	ff 24       	eor	r15, r15
    203a:	81 e0       	ldi	r24, 0x01	; 1
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	01 c0       	rjmp	.+2      	; 0x2042 <regularize_k+0x7a>
    2040:	88 0f       	add	r24, r24
    2042:	ea 94       	dec	r14
    2044:	ea f7       	brpl	.-6      	; 0x2040 <regularize_k+0x78>
    2046:	90 81       	ld	r25, Z
    2048:	89 23       	and	r24, r25
    204a:	99 24       	eor	r9, r9
    204c:	93 94       	inc	r9
    204e:	88 23       	and	r24, r24
    2050:	c1 f0       	breq	.+48     	; 0x2082 <regularize_k+0xba>
    2052:	2c 2f       	mov	r18, r28
    2054:	a8 01       	movw	r20, r16
    2056:	b6 01       	movw	r22, r12
    2058:	c5 01       	movw	r24, r10
    205a:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    205e:	89 2d       	mov	r24, r9
    2060:	df 91       	pop	r29
    2062:	cf 91       	pop	r28
    2064:	1f 91       	pop	r17
    2066:	0f 91       	pop	r16
    2068:	ff 90       	pop	r15
    206a:	ef 90       	pop	r14
    206c:	df 90       	pop	r13
    206e:	cf 90       	pop	r12
    2070:	bf 90       	pop	r11
    2072:	af 90       	pop	r10
    2074:	9f 90       	pop	r9
    2076:	08 95       	ret
    2078:	99 24       	eor	r9, r9
    207a:	93 94       	inc	r9
    207c:	ea cf       	rjmp	.-44     	; 0x2052 <regularize_k+0x8a>
    207e:	27 96       	adiw	r28, 0x07	; 7
    2080:	b7 cf       	rjmp	.-146    	; 0x1ff0 <regularize_k+0x28>
    2082:	91 2c       	mov	r9, r1
    2084:	e6 cf       	rjmp	.-52     	; 0x2052 <regularize_k+0x8a>

00002086 <uECC_generate_random_int>:
    2086:	7f 92       	push	r7
    2088:	8f 92       	push	r8
    208a:	9f 92       	push	r9
    208c:	af 92       	push	r10
    208e:	bf 92       	push	r11
    2090:	cf 92       	push	r12
    2092:	df 92       	push	r13
    2094:	ef 92       	push	r14
    2096:	ff 92       	push	r15
    2098:	0f 93       	push	r16
    209a:	1f 93       	push	r17
    209c:	cf 93       	push	r28
    209e:	df 93       	push	r29
    20a0:	8c 01       	movw	r16, r24
    20a2:	5b 01       	movw	r10, r22
    20a4:	84 2e       	mov	r8, r20
    20a6:	64 2f       	mov	r22, r20
    20a8:	c5 01       	movw	r24, r10
    20aa:	0e 94 9a 06 	call	0xd34	; 0xd34 <uECC_vli_numBits>
    20ae:	e0 91 be 03 	lds	r30, 0x03BE	; 0x8003be <__data_end>
    20b2:	f0 91 bf 03 	lds	r31, 0x03BF	; 0x8003bf <__data_end+0x1>
    20b6:	30 97       	sbiw	r30, 0x00	; 0
    20b8:	09 f4       	brne	.+2      	; 0x20bc <uECC_generate_random_int+0x36>
    20ba:	43 c0       	rjmp	.+134    	; 0x2142 <uECC_generate_random_int+0xbc>
    20bc:	c8 2c       	mov	r12, r8
    20be:	08 2c       	mov	r0, r8
    20c0:	00 0c       	add	r0, r0
    20c2:	dd 08       	sbc	r13, r13
    20c4:	96 01       	movw	r18, r12
    20c6:	22 0f       	add	r18, r18
    20c8:	33 1f       	adc	r19, r19
    20ca:	22 0f       	add	r18, r18
    20cc:	33 1f       	adc	r19, r19
    20ce:	22 0f       	add	r18, r18
    20d0:	33 1f       	adc	r19, r19
    20d2:	28 1b       	sub	r18, r24
    20d4:	39 0b       	sbc	r19, r25
    20d6:	8f ef       	ldi	r24, 0xFF	; 255
    20d8:	90 e0       	ldi	r25, 0x00	; 0
    20da:	02 c0       	rjmp	.+4      	; 0x20e0 <uECC_generate_random_int+0x5a>
    20dc:	95 95       	asr	r25
    20de:	87 95       	ror	r24
    20e0:	2a 95       	dec	r18
    20e2:	e2 f7       	brpl	.-8      	; 0x20dc <uECC_generate_random_int+0x56>
    20e4:	78 2e       	mov	r7, r24
    20e6:	50 e4       	ldi	r21, 0x40	; 64
    20e8:	95 2e       	mov	r9, r21
    20ea:	76 01       	movw	r14, r12
    20ec:	81 e0       	ldi	r24, 0x01	; 1
    20ee:	e8 1a       	sub	r14, r24
    20f0:	f1 08       	sbc	r15, r1
    20f2:	e0 0e       	add	r14, r16
    20f4:	f1 1e       	adc	r15, r17
    20f6:	cf ef       	ldi	r28, 0xFF	; 255
    20f8:	c8 0d       	add	r28, r8
    20fa:	d0 e0       	ldi	r29, 0x00	; 0
    20fc:	21 96       	adiw	r28, 0x01	; 1
    20fe:	c0 0f       	add	r28, r16
    2100:	d1 1f       	adc	r29, r17
    2102:	b6 01       	movw	r22, r12
    2104:	c8 01       	movw	r24, r16
    2106:	09 95       	icall
    2108:	89 2b       	or	r24, r25
    210a:	d9 f0       	breq	.+54     	; 0x2142 <uECC_generate_random_int+0xbc>
    210c:	f7 01       	movw	r30, r14
    210e:	80 81       	ld	r24, Z
    2110:	87 21       	and	r24, r7
    2112:	80 83       	st	Z, r24
    2114:	18 14       	cp	r1, r8
    2116:	4c f4       	brge	.+18     	; 0x212a <uECC_generate_random_int+0xa4>
    2118:	f8 01       	movw	r30, r16
    211a:	80 e0       	ldi	r24, 0x00	; 0
    211c:	91 91       	ld	r25, Z+
    211e:	89 2b       	or	r24, r25
    2120:	ec 17       	cp	r30, r28
    2122:	fd 07       	cpc	r31, r29
    2124:	d9 f7       	brne	.-10     	; 0x211c <uECC_generate_random_int+0x96>
    2126:	81 11       	cpse	r24, r1
    2128:	1c c0       	rjmp	.+56     	; 0x2162 <uECC_generate_random_int+0xdc>
    212a:	9a 94       	dec	r9
    212c:	99 20       	and	r9, r9
    212e:	49 f0       	breq	.+18     	; 0x2142 <uECC_generate_random_int+0xbc>
    2130:	e0 91 be 03 	lds	r30, 0x03BE	; 0x8003be <__data_end>
    2134:	f0 91 bf 03 	lds	r31, 0x03BF	; 0x8003bf <__data_end+0x1>
    2138:	b6 01       	movw	r22, r12
    213a:	c8 01       	movw	r24, r16
    213c:	09 95       	icall
    213e:	89 2b       	or	r24, r25
    2140:	29 f7       	brne	.-54     	; 0x210c <uECC_generate_random_int+0x86>
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	df 91       	pop	r29
    2148:	cf 91       	pop	r28
    214a:	1f 91       	pop	r17
    214c:	0f 91       	pop	r16
    214e:	ff 90       	pop	r15
    2150:	ef 90       	pop	r14
    2152:	df 90       	pop	r13
    2154:	cf 90       	pop	r12
    2156:	bf 90       	pop	r11
    2158:	af 90       	pop	r10
    215a:	9f 90       	pop	r9
    215c:	8f 90       	pop	r8
    215e:	7f 90       	pop	r7
    2160:	08 95       	ret
    2162:	48 2d       	mov	r20, r8
    2164:	b8 01       	movw	r22, r16
    2166:	c5 01       	movw	r24, r10
    2168:	0e 94 d5 06 	call	0xdaa	; 0xdaa <uECC_vli_cmp>
    216c:	81 30       	cpi	r24, 0x01	; 1
    216e:	e9 f6       	brne	.-70     	; 0x212a <uECC_generate_random_int+0xa4>
    2170:	81 e0       	ldi	r24, 0x01	; 1
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	e8 cf       	rjmp	.-48     	; 0x2146 <uECC_generate_random_int+0xc0>

00002176 <bits2int>:
    2176:	8f 92       	push	r8
    2178:	9f 92       	push	r9
    217a:	af 92       	push	r10
    217c:	bf 92       	push	r11
    217e:	cf 92       	push	r12
    2180:	df 92       	push	r13
    2182:	ef 92       	push	r14
    2184:	ff 92       	push	r15
    2186:	0f 93       	push	r16
    2188:	1f 93       	push	r17
    218a:	cf 93       	push	r28
    218c:	df 93       	push	r29
    218e:	8c 01       	movw	r16, r24
    2190:	4b 01       	movw	r8, r22
    2192:	69 01       	movw	r12, r18
    2194:	f9 01       	movw	r30, r18
    2196:	82 81       	ldd	r24, Z+2	; 0x02
    2198:	93 81       	ldd	r25, Z+3	; 0x03
    219a:	5c 01       	movw	r10, r24
    219c:	f7 e0       	ldi	r31, 0x07	; 7
    219e:	af 0e       	add	r10, r31
    21a0:	b1 1c       	adc	r11, r1
    21a2:	b7 fc       	sbrc	r11, 7
    21a4:	a5 c0       	rjmp	.+330    	; 0x22f0 <bits2int+0x17a>
    21a6:	b5 94       	asr	r11
    21a8:	a7 94       	ror	r10
    21aa:	b5 94       	asr	r11
    21ac:	a7 94       	ror	r10
    21ae:	b5 94       	asr	r11
    21b0:	a7 94       	ror	r10
    21b2:	ca 2d       	mov	r28, r10
    21b4:	db 2d       	mov	r29, r11
    21b6:	7e 01       	movw	r14, r28
    21b8:	4c 17       	cp	r20, r28
    21ba:	5d 07       	cpc	r21, r29
    21bc:	08 f4       	brcc	.+2      	; 0x21c0 <bits2int+0x4a>
    21be:	7a 01       	movw	r14, r20
    21c0:	6a 2d       	mov	r22, r10
    21c2:	c8 01       	movw	r24, r16
    21c4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    21c8:	1e 14       	cp	r1, r14
    21ca:	1f 04       	cpc	r1, r15
    21cc:	dc f4       	brge	.+54     	; 0x2204 <bits2int+0x8e>
    21ce:	97 01       	movw	r18, r14
    21d0:	21 50       	subi	r18, 0x01	; 1
    21d2:	31 09       	sbc	r19, r1
    21d4:	60 e0       	ldi	r22, 0x00	; 0
    21d6:	70 e0       	ldi	r23, 0x00	; 0
    21d8:	40 e0       	ldi	r20, 0x00	; 0
    21da:	80 e0       	ldi	r24, 0x00	; 0
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	f9 01       	movw	r30, r18
    21e0:	e6 1b       	sub	r30, r22
    21e2:	f7 0b       	sbc	r31, r23
    21e4:	e8 0d       	add	r30, r8
    21e6:	f9 1d       	adc	r31, r9
    21e8:	50 81       	ld	r21, Z
    21ea:	f8 01       	movw	r30, r16
    21ec:	e8 0f       	add	r30, r24
    21ee:	f9 1f       	adc	r31, r25
    21f0:	50 83       	st	Z, r21
    21f2:	4f 5f       	subi	r20, 0xFF	; 255
    21f4:	84 2f       	mov	r24, r20
    21f6:	04 2e       	mov	r0, r20
    21f8:	00 0c       	add	r0, r0
    21fa:	99 0b       	sbc	r25, r25
    21fc:	bc 01       	movw	r22, r24
    21fe:	8e 15       	cp	r24, r14
    2200:	9f 05       	cpc	r25, r15
    2202:	6c f3       	brlt	.-38     	; 0x21de <bits2int+0x68>
    2204:	ee 0c       	add	r14, r14
    2206:	ff 1c       	adc	r15, r15
    2208:	ee 0c       	add	r14, r14
    220a:	ff 1c       	adc	r15, r15
    220c:	ee 0c       	add	r14, r14
    220e:	ff 1c       	adc	r15, r15
    2210:	f6 01       	movw	r30, r12
    2212:	82 81       	ldd	r24, Z+2	; 0x02
    2214:	93 81       	ldd	r25, Z+3	; 0x03
    2216:	8e 15       	cp	r24, r14
    2218:	9f 05       	cpc	r25, r15
    221a:	08 f0       	brcs	.+2      	; 0x221e <bits2int+0xa8>
    221c:	5c c0       	rjmp	.+184    	; 0x22d6 <bits2int+0x160>
    221e:	e8 1a       	sub	r14, r24
    2220:	f9 0a       	sbc	r15, r25
    2222:	c0 0f       	add	r28, r16
    2224:	d1 1f       	adc	r29, r17
    2226:	0c 17       	cp	r16, r28
    2228:	1d 07       	cpc	r17, r29
    222a:	d0 f4       	brcc	.+52     	; 0x2260 <bits2int+0xea>
    222c:	48 e0       	ldi	r20, 0x08	; 8
    222e:	50 e0       	ldi	r21, 0x00	; 0
    2230:	4e 19       	sub	r20, r14
    2232:	5f 09       	sbc	r21, r15
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	9a 91       	ld	r25, -Y
    2238:	89 2f       	mov	r24, r25
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	9c 01       	movw	r18, r24
    223e:	0e 2c       	mov	r0, r14
    2240:	02 c0       	rjmp	.+4      	; 0x2246 <bits2int+0xd0>
    2242:	35 95       	asr	r19
    2244:	27 95       	ror	r18
    2246:	0a 94       	dec	r0
    2248:	e2 f7       	brpl	.-8      	; 0x2242 <bits2int+0xcc>
    224a:	26 2b       	or	r18, r22
    224c:	28 83       	st	Y, r18
    224e:	04 2e       	mov	r0, r20
    2250:	01 c0       	rjmp	.+2      	; 0x2254 <bits2int+0xde>
    2252:	88 0f       	add	r24, r24
    2254:	0a 94       	dec	r0
    2256:	ea f7       	brpl	.-6      	; 0x2252 <bits2int+0xdc>
    2258:	68 2f       	mov	r22, r24
    225a:	c0 17       	cp	r28, r16
    225c:	d1 07       	cpc	r29, r17
    225e:	59 f7       	brne	.-42     	; 0x2236 <bits2int+0xc0>
    2260:	a6 01       	movw	r20, r12
    2262:	4c 5d       	subi	r20, 0xDC	; 220
    2264:	5f 4f       	sbci	r21, 0xFF	; 255
    2266:	2f ef       	ldi	r18, 0xFF	; 255
    2268:	2a 0d       	add	r18, r10
    226a:	27 fd       	sbrc	r18, 7
    226c:	23 c0       	rjmp	.+70     	; 0x22b4 <bits2int+0x13e>
    226e:	82 2f       	mov	r24, r18
    2270:	02 2e       	mov	r0, r18
    2272:	00 0c       	add	r0, r0
    2274:	99 0b       	sbc	r25, r25
    2276:	fa 01       	movw	r30, r20
    2278:	e8 0f       	add	r30, r24
    227a:	f9 1f       	adc	r31, r25
    227c:	30 81       	ld	r19, Z
    227e:	f8 01       	movw	r30, r16
    2280:	e8 0f       	add	r30, r24
    2282:	f9 1f       	adc	r31, r25
    2284:	80 81       	ld	r24, Z
    2286:	83 17       	cp	r24, r19
    2288:	30 f1       	brcs	.+76     	; 0x22d6 <bits2int+0x160>
    228a:	38 17       	cp	r19, r24
    228c:	88 f4       	brcc	.+34     	; 0x22b0 <bits2int+0x13a>
    228e:	12 c0       	rjmp	.+36     	; 0x22b4 <bits2int+0x13e>
    2290:	82 2f       	mov	r24, r18
    2292:	02 2e       	mov	r0, r18
    2294:	00 0c       	add	r0, r0
    2296:	99 0b       	sbc	r25, r25
    2298:	fa 01       	movw	r30, r20
    229a:	e8 0f       	add	r30, r24
    229c:	f9 1f       	adc	r31, r25
    229e:	30 81       	ld	r19, Z
    22a0:	f8 01       	movw	r30, r16
    22a2:	e8 0f       	add	r30, r24
    22a4:	f9 1f       	adc	r31, r25
    22a6:	80 81       	ld	r24, Z
    22a8:	83 17       	cp	r24, r19
    22aa:	a8 f0       	brcs	.+42     	; 0x22d6 <bits2int+0x160>
    22ac:	38 17       	cp	r19, r24
    22ae:	10 f0       	brcs	.+4      	; 0x22b4 <bits2int+0x13e>
    22b0:	21 50       	subi	r18, 0x01	; 1
    22b2:	70 f7       	brcc	.-36     	; 0x2290 <bits2int+0x11a>
    22b4:	2a 2d       	mov	r18, r10
    22b6:	b8 01       	movw	r22, r16
    22b8:	c8 01       	movw	r24, r16
    22ba:	df 91       	pop	r29
    22bc:	cf 91       	pop	r28
    22be:	1f 91       	pop	r17
    22c0:	0f 91       	pop	r16
    22c2:	ff 90       	pop	r15
    22c4:	ef 90       	pop	r14
    22c6:	df 90       	pop	r13
    22c8:	cf 90       	pop	r12
    22ca:	bf 90       	pop	r11
    22cc:	af 90       	pop	r10
    22ce:	9f 90       	pop	r9
    22d0:	8f 90       	pop	r8
    22d2:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <uECC_vli_sub>
    22d6:	df 91       	pop	r29
    22d8:	cf 91       	pop	r28
    22da:	1f 91       	pop	r17
    22dc:	0f 91       	pop	r16
    22de:	ff 90       	pop	r15
    22e0:	ef 90       	pop	r14
    22e2:	df 90       	pop	r13
    22e4:	cf 90       	pop	r12
    22e6:	bf 90       	pop	r11
    22e8:	af 90       	pop	r10
    22ea:	9f 90       	pop	r9
    22ec:	8f 90       	pop	r8
    22ee:	08 95       	ret
    22f0:	5c 01       	movw	r10, r24
    22f2:	2e e0       	ldi	r18, 0x0E	; 14
    22f4:	a2 0e       	add	r10, r18
    22f6:	b1 1c       	adc	r11, r1
    22f8:	56 cf       	rjmp	.-340    	; 0x21a6 <bits2int+0x30>

000022fa <vli_modInv_update>:
    22fa:	0f 93       	push	r16
    22fc:	1f 93       	push	r17
    22fe:	cf 93       	push	r28
    2300:	df 93       	push	r29
    2302:	fc 01       	movw	r30, r24
    2304:	20 81       	ld	r18, Z
    2306:	20 fd       	sbrc	r18, 0
    2308:	07 c0       	rjmp	.+14     	; 0x2318 <vli_modInv_update+0x1e>
    230a:	64 2f       	mov	r22, r20
    230c:	df 91       	pop	r29
    230e:	cf 91       	pop	r28
    2310:	1f 91       	pop	r17
    2312:	0f 91       	pop	r16
    2314:	0c 94 4d 04 	jmp	0x89a	; 0x89a <uECC_vli_rshift1>
    2318:	c4 2f       	mov	r28, r20
    231a:	ab 01       	movw	r20, r22
    231c:	8c 01       	movw	r16, r24
    231e:	2c 2f       	mov	r18, r28
    2320:	bc 01       	movw	r22, r24
    2322:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    2326:	d8 2f       	mov	r29, r24
    2328:	6c 2f       	mov	r22, r28
    232a:	c8 01       	movw	r24, r16
    232c:	0e 94 4d 04 	call	0x89a	; 0x89a <uECC_vli_rshift1>
    2330:	dd 23       	and	r29, r29
    2332:	49 f0       	breq	.+18     	; 0x2346 <vli_modInv_update+0x4c>
    2334:	ec 2f       	mov	r30, r28
    2336:	cc 0f       	add	r28, r28
    2338:	ff 0b       	sbc	r31, r31
    233a:	31 97       	sbiw	r30, 0x01	; 1
    233c:	e0 0f       	add	r30, r16
    233e:	f1 1f       	adc	r31, r17
    2340:	80 81       	ld	r24, Z
    2342:	80 68       	ori	r24, 0x80	; 128
    2344:	80 83       	st	Z, r24
    2346:	df 91       	pop	r29
    2348:	cf 91       	pop	r28
    234a:	1f 91       	pop	r17
    234c:	0f 91       	pop	r16
    234e:	08 95       	ret

00002350 <uECC_vli_modInv>:
    2350:	4f 92       	push	r4
    2352:	5f 92       	push	r5
    2354:	6f 92       	push	r6
    2356:	7f 92       	push	r7
    2358:	8f 92       	push	r8
    235a:	9f 92       	push	r9
    235c:	af 92       	push	r10
    235e:	bf 92       	push	r11
    2360:	cf 92       	push	r12
    2362:	df 92       	push	r13
    2364:	ef 92       	push	r14
    2366:	ff 92       	push	r15
    2368:	0f 93       	push	r16
    236a:	1f 93       	push	r17
    236c:	cf 93       	push	r28
    236e:	df 93       	push	r29
    2370:	cd b7       	in	r28, 0x3d	; 61
    2372:	de b7       	in	r29, 0x3e	; 62
    2374:	c0 58       	subi	r28, 0x80	; 128
    2376:	d1 09       	sbc	r29, r1
    2378:	0f b6       	in	r0, 0x3f	; 63
    237a:	f8 94       	cli
    237c:	de bf       	out	0x3e, r29	; 62
    237e:	0f be       	out	0x3f, r0	; 63
    2380:	cd bf       	out	0x3d, r28	; 61
    2382:	5c 01       	movw	r10, r24
    2384:	8a 01       	movw	r16, r20
    2386:	52 2e       	mov	r5, r18
    2388:	12 16       	cp	r1, r18
    238a:	0c f0       	brlt	.+2      	; 0x238e <uECC_vli_modInv+0x3e>
    238c:	3d c1       	rjmp	.+634    	; 0x2608 <uECC_vli_modInv+0x2b8>
    238e:	fb 01       	movw	r30, r22
    2390:	44 24       	eor	r4, r4
    2392:	4a 94       	dec	r4
    2394:	42 0e       	add	r4, r18
    2396:	24 2d       	mov	r18, r4
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	2f 5f       	subi	r18, 0xFF	; 255
    239c:	3f 4f       	sbci	r19, 0xFF	; 255
    239e:	26 0f       	add	r18, r22
    23a0:	37 1f       	adc	r19, r23
    23a2:	80 e0       	ldi	r24, 0x00	; 0
    23a4:	91 91       	ld	r25, Z+
    23a6:	89 2b       	or	r24, r25
    23a8:	2e 17       	cp	r18, r30
    23aa:	3f 07       	cpc	r19, r31
    23ac:	d9 f7       	brne	.-10     	; 0x23a4 <uECC_vli_modInv+0x54>
    23ae:	88 23       	and	r24, r24
    23b0:	09 f4       	brne	.+2      	; 0x23b4 <uECC_vli_modInv+0x64>
    23b2:	2a c1       	rjmp	.+596    	; 0x2608 <uECC_vli_modInv+0x2b8>
    23b4:	45 2d       	mov	r20, r5
    23b6:	ce 01       	movw	r24, r28
    23b8:	8f 59       	subi	r24, 0x9F	; 159
    23ba:	9f 4f       	sbci	r25, 0xFF	; 255
    23bc:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    23c0:	45 2d       	mov	r20, r5
    23c2:	b8 01       	movw	r22, r16
    23c4:	ce 01       	movw	r24, r28
    23c6:	8f 5b       	subi	r24, 0xBF	; 191
    23c8:	9f 4f       	sbci	r25, 0xFF	; 255
    23ca:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    23ce:	65 2d       	mov	r22, r5
    23d0:	ce 01       	movw	r24, r28
    23d2:	81 96       	adiw	r24, 0x21	; 33
    23d4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    23d8:	81 e0       	ldi	r24, 0x01	; 1
    23da:	89 a3       	std	Y+33, r24	; 0x21
    23dc:	65 2d       	mov	r22, r5
    23de:	ce 01       	movw	r24, r28
    23e0:	01 96       	adiw	r24, 0x01	; 1
    23e2:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    23e6:	64 2c       	mov	r6, r4
    23e8:	04 2c       	mov	r0, r4
    23ea:	00 0c       	add	r0, r0
    23ec:	77 08       	sbc	r7, r7
    23ee:	81 e6       	ldi	r24, 0x61	; 97
    23f0:	c8 2e       	mov	r12, r24
    23f2:	d1 2c       	mov	r13, r1
    23f4:	cc 0e       	add	r12, r28
    23f6:	dd 1e       	adc	r13, r29
    23f8:	c6 0c       	add	r12, r6
    23fa:	d7 1c       	adc	r13, r7
    23fc:	91 e4       	ldi	r25, 0x41	; 65
    23fe:	e9 2e       	mov	r14, r25
    2400:	f1 2c       	mov	r15, r1
    2402:	ec 0e       	add	r14, r28
    2404:	fd 1e       	adc	r15, r29
    2406:	e6 0c       	add	r14, r6
    2408:	f7 1c       	adc	r15, r7
    240a:	88 24       	eor	r8, r8
    240c:	83 94       	inc	r8
    240e:	91 2c       	mov	r9, r1
    2410:	8c 0e       	add	r8, r28
    2412:	9d 1e       	adc	r9, r29
    2414:	86 0c       	add	r8, r6
    2416:	97 1c       	adc	r9, r7
    2418:	81 e2       	ldi	r24, 0x21	; 33
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	8c 0f       	add	r24, r28
    241e:	9d 1f       	adc	r25, r29
    2420:	68 0e       	add	r6, r24
    2422:	79 1e       	adc	r7, r25
    2424:	f6 01       	movw	r30, r12
    2426:	90 81       	ld	r25, Z
    2428:	f7 01       	movw	r30, r14
    242a:	80 81       	ld	r24, Z
    242c:	89 17       	cp	r24, r25
    242e:	e8 f1       	brcs	.+122    	; 0x24aa <uECC_vli_modInv+0x15a>
    2430:	98 17       	cp	r25, r24
    2432:	08 f4       	brcc	.+2      	; 0x2436 <uECC_vli_modInv+0xe6>
    2434:	8c c0       	rjmp	.+280    	; 0x254e <uECC_vli_modInv+0x1fe>
    2436:	24 2d       	mov	r18, r4
    2438:	17 c0       	rjmp	.+46     	; 0x2468 <uECC_vli_modInv+0x118>
    243a:	82 2f       	mov	r24, r18
    243c:	02 2e       	mov	r0, r18
    243e:	00 0c       	add	r0, r0
    2440:	99 0b       	sbc	r25, r25
    2442:	e1 e6       	ldi	r30, 0x61	; 97
    2444:	f0 e0       	ldi	r31, 0x00	; 0
    2446:	ec 0f       	add	r30, r28
    2448:	fd 1f       	adc	r31, r29
    244a:	e8 0f       	add	r30, r24
    244c:	f9 1f       	adc	r31, r25
    244e:	30 81       	ld	r19, Z
    2450:	e1 e4       	ldi	r30, 0x41	; 65
    2452:	f0 e0       	ldi	r31, 0x00	; 0
    2454:	ec 0f       	add	r30, r28
    2456:	fd 1f       	adc	r31, r29
    2458:	e8 0f       	add	r30, r24
    245a:	f9 1f       	adc	r31, r25
    245c:	80 81       	ld	r24, Z
    245e:	83 17       	cp	r24, r19
    2460:	20 f1       	brcs	.+72     	; 0x24aa <uECC_vli_modInv+0x15a>
    2462:	38 17       	cp	r19, r24
    2464:	08 f4       	brcc	.+2      	; 0x2468 <uECC_vli_modInv+0x118>
    2466:	73 c0       	rjmp	.+230    	; 0x254e <uECC_vli_modInv+0x1fe>
    2468:	21 50       	subi	r18, 0x01	; 1
    246a:	38 f7       	brcc	.-50     	; 0x243a <uECC_vli_modInv+0xea>
    246c:	45 2d       	mov	r20, r5
    246e:	be 01       	movw	r22, r28
    2470:	6f 5d       	subi	r22, 0xDF	; 223
    2472:	7f 4f       	sbci	r23, 0xFF	; 255
    2474:	c5 01       	movw	r24, r10
    2476:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    247a:	c0 58       	subi	r28, 0x80	; 128
    247c:	df 4f       	sbci	r29, 0xFF	; 255
    247e:	0f b6       	in	r0, 0x3f	; 63
    2480:	f8 94       	cli
    2482:	de bf       	out	0x3e, r29	; 62
    2484:	0f be       	out	0x3f, r0	; 63
    2486:	cd bf       	out	0x3d, r28	; 61
    2488:	df 91       	pop	r29
    248a:	cf 91       	pop	r28
    248c:	1f 91       	pop	r17
    248e:	0f 91       	pop	r16
    2490:	ff 90       	pop	r15
    2492:	ef 90       	pop	r14
    2494:	df 90       	pop	r13
    2496:	cf 90       	pop	r12
    2498:	bf 90       	pop	r11
    249a:	af 90       	pop	r10
    249c:	9f 90       	pop	r9
    249e:	8f 90       	pop	r8
    24a0:	7f 90       	pop	r7
    24a2:	6f 90       	pop	r6
    24a4:	5f 90       	pop	r5
    24a6:	4f 90       	pop	r4
    24a8:	08 95       	ret
    24aa:	91 e0       	ldi	r25, 0x01	; 1
    24ac:	a2 96       	adiw	r28, 0x22	; 34
    24ae:	8f ad       	ldd	r24, Y+63	; 0x3f
    24b0:	a2 97       	sbiw	r28, 0x22	; 34
    24b2:	80 ff       	sbrs	r24, 0
    24b4:	52 c0       	rjmp	.+164    	; 0x255a <uECC_vli_modInv+0x20a>
    24b6:	22 96       	adiw	r28, 0x02	; 2
    24b8:	8f ad       	ldd	r24, Y+63	; 0x3f
    24ba:	22 97       	sbiw	r28, 0x02	; 2
    24bc:	80 ff       	sbrs	r24, 0
    24be:	54 c0       	rjmp	.+168    	; 0x2568 <uECC_vli_modInv+0x218>
    24c0:	25 2d       	mov	r18, r5
    24c2:	ae 01       	movw	r20, r28
    24c4:	91 30       	cpi	r25, 0x01	; 1
    24c6:	09 f0       	breq	.+2      	; 0x24ca <uECC_vli_modInv+0x17a>
    24c8:	5b c0       	rjmp	.+182    	; 0x2580 <uECC_vli_modInv+0x230>
    24ca:	4f 5b       	subi	r20, 0xBF	; 191
    24cc:	5f 4f       	sbci	r21, 0xFF	; 255
    24ce:	be 01       	movw	r22, r28
    24d0:	6f 59       	subi	r22, 0x9F	; 159
    24d2:	7f 4f       	sbci	r23, 0xFF	; 255
    24d4:	cb 01       	movw	r24, r22
    24d6:	0e 94 8d 05 	call	0xb1a	; 0xb1a <uECC_vli_sub>
    24da:	65 2d       	mov	r22, r5
    24dc:	ce 01       	movw	r24, r28
    24de:	8f 59       	subi	r24, 0x9F	; 159
    24e0:	9f 4f       	sbci	r25, 0xFF	; 255
    24e2:	0e 94 4d 04 	call	0x89a	; 0x89a <uECC_vli_rshift1>
    24e6:	f3 01       	movw	r30, r6
    24e8:	90 81       	ld	r25, Z
    24ea:	f4 01       	movw	r30, r8
    24ec:	80 81       	ld	r24, Z
    24ee:	89 17       	cp	r24, r25
    24f0:	f0 f0       	brcs	.+60     	; 0x252e <uECC_vli_modInv+0x1de>
    24f2:	98 17       	cp	r25, r24
    24f4:	08 f4       	brcc	.+2      	; 0x24f8 <uECC_vli_modInv+0x1a8>
    24f6:	7f c0       	rjmp	.+254    	; 0x25f6 <uECC_vli_modInv+0x2a6>
    24f8:	24 2d       	mov	r18, r4
    24fa:	17 c0       	rjmp	.+46     	; 0x252a <uECC_vli_modInv+0x1da>
    24fc:	82 2f       	mov	r24, r18
    24fe:	02 2e       	mov	r0, r18
    2500:	00 0c       	add	r0, r0
    2502:	99 0b       	sbc	r25, r25
    2504:	e1 e2       	ldi	r30, 0x21	; 33
    2506:	f0 e0       	ldi	r31, 0x00	; 0
    2508:	ec 0f       	add	r30, r28
    250a:	fd 1f       	adc	r31, r29
    250c:	e8 0f       	add	r30, r24
    250e:	f9 1f       	adc	r31, r25
    2510:	30 81       	ld	r19, Z
    2512:	e1 e0       	ldi	r30, 0x01	; 1
    2514:	f0 e0       	ldi	r31, 0x00	; 0
    2516:	ec 0f       	add	r30, r28
    2518:	fd 1f       	adc	r31, r29
    251a:	e8 0f       	add	r30, r24
    251c:	f9 1f       	adc	r31, r25
    251e:	80 81       	ld	r24, Z
    2520:	83 17       	cp	r24, r19
    2522:	28 f0       	brcs	.+10     	; 0x252e <uECC_vli_modInv+0x1de>
    2524:	38 17       	cp	r19, r24
    2526:	08 f4       	brcc	.+2      	; 0x252a <uECC_vli_modInv+0x1da>
    2528:	66 c0       	rjmp	.+204    	; 0x25f6 <uECC_vli_modInv+0x2a6>
    252a:	21 50       	subi	r18, 0x01	; 1
    252c:	38 f7       	brcc	.-50     	; 0x24fc <uECC_vli_modInv+0x1ac>
    252e:	25 2d       	mov	r18, r5
    2530:	ae 01       	movw	r20, r28
    2532:	4f 5f       	subi	r20, 0xFF	; 255
    2534:	5f 4f       	sbci	r21, 0xFF	; 255
    2536:	be 01       	movw	r22, r28
    2538:	6f 5d       	subi	r22, 0xDF	; 223
    253a:	7f 4f       	sbci	r23, 0xFF	; 255
    253c:	cb 01       	movw	r24, r22
    253e:	0e 94 8d 05 	call	0xb1a	; 0xb1a <uECC_vli_sub>
    2542:	45 2d       	mov	r20, r5
    2544:	b8 01       	movw	r22, r16
    2546:	ce 01       	movw	r24, r28
    2548:	81 96       	adiw	r24, 0x21	; 33
    254a:	d7 de       	rcall	.-594    	; 0x22fa <vli_modInv_update>
    254c:	6b cf       	rjmp	.-298    	; 0x2424 <uECC_vli_modInv+0xd4>
    254e:	9f ef       	ldi	r25, 0xFF	; 255
    2550:	a2 96       	adiw	r28, 0x22	; 34
    2552:	8f ad       	ldd	r24, Y+63	; 0x3f
    2554:	a2 97       	sbiw	r28, 0x22	; 34
    2556:	80 fd       	sbrc	r24, 0
    2558:	ae cf       	rjmp	.-164    	; 0x24b6 <uECC_vli_modInv+0x166>
    255a:	65 2d       	mov	r22, r5
    255c:	ce 01       	movw	r24, r28
    255e:	8f 59       	subi	r24, 0x9F	; 159
    2560:	9f 4f       	sbci	r25, 0xFF	; 255
    2562:	0e 94 4d 04 	call	0x89a	; 0x89a <uECC_vli_rshift1>
    2566:	ed cf       	rjmp	.-38     	; 0x2542 <uECC_vli_modInv+0x1f2>
    2568:	65 2d       	mov	r22, r5
    256a:	ce 01       	movw	r24, r28
    256c:	8f 5b       	subi	r24, 0xBF	; 191
    256e:	9f 4f       	sbci	r25, 0xFF	; 255
    2570:	0e 94 4d 04 	call	0x89a	; 0x89a <uECC_vli_rshift1>
    2574:	45 2d       	mov	r20, r5
    2576:	b8 01       	movw	r22, r16
    2578:	ce 01       	movw	r24, r28
    257a:	01 96       	adiw	r24, 0x01	; 1
    257c:	be de       	rcall	.-644    	; 0x22fa <vli_modInv_update>
    257e:	52 cf       	rjmp	.-348    	; 0x2424 <uECC_vli_modInv+0xd4>
    2580:	4f 59       	subi	r20, 0x9F	; 159
    2582:	5f 4f       	sbci	r21, 0xFF	; 255
    2584:	be 01       	movw	r22, r28
    2586:	6f 5b       	subi	r22, 0xBF	; 191
    2588:	7f 4f       	sbci	r23, 0xFF	; 255
    258a:	cb 01       	movw	r24, r22
    258c:	0e 94 8d 05 	call	0xb1a	; 0xb1a <uECC_vli_sub>
    2590:	65 2d       	mov	r22, r5
    2592:	ce 01       	movw	r24, r28
    2594:	8f 5b       	subi	r24, 0xBF	; 191
    2596:	9f 4f       	sbci	r25, 0xFF	; 255
    2598:	0e 94 4d 04 	call	0x89a	; 0x89a <uECC_vli_rshift1>
    259c:	f4 01       	movw	r30, r8
    259e:	80 81       	ld	r24, Z
    25a0:	f3 01       	movw	r30, r6
    25a2:	90 81       	ld	r25, Z
    25a4:	98 17       	cp	r25, r24
    25a6:	e0 f0       	brcs	.+56     	; 0x25e0 <uECC_vli_modInv+0x290>
    25a8:	89 17       	cp	r24, r25
    25aa:	98 f1       	brcs	.+102    	; 0x2612 <uECC_vli_modInv+0x2c2>
    25ac:	24 2d       	mov	r18, r4
    25ae:	16 c0       	rjmp	.+44     	; 0x25dc <uECC_vli_modInv+0x28c>
    25b0:	82 2f       	mov	r24, r18
    25b2:	02 2e       	mov	r0, r18
    25b4:	00 0c       	add	r0, r0
    25b6:	99 0b       	sbc	r25, r25
    25b8:	e1 e0       	ldi	r30, 0x01	; 1
    25ba:	f0 e0       	ldi	r31, 0x00	; 0
    25bc:	ec 0f       	add	r30, r28
    25be:	fd 1f       	adc	r31, r29
    25c0:	e8 0f       	add	r30, r24
    25c2:	f9 1f       	adc	r31, r25
    25c4:	30 81       	ld	r19, Z
    25c6:	e1 e2       	ldi	r30, 0x21	; 33
    25c8:	f0 e0       	ldi	r31, 0x00	; 0
    25ca:	ec 0f       	add	r30, r28
    25cc:	fd 1f       	adc	r31, r29
    25ce:	e8 0f       	add	r30, r24
    25d0:	f9 1f       	adc	r31, r25
    25d2:	80 81       	ld	r24, Z
    25d4:	83 17       	cp	r24, r19
    25d6:	20 f0       	brcs	.+8      	; 0x25e0 <uECC_vli_modInv+0x290>
    25d8:	38 17       	cp	r19, r24
    25da:	d8 f0       	brcs	.+54     	; 0x2612 <uECC_vli_modInv+0x2c2>
    25dc:	21 50       	subi	r18, 0x01	; 1
    25de:	40 f7       	brcc	.-48     	; 0x25b0 <uECC_vli_modInv+0x260>
    25e0:	25 2d       	mov	r18, r5
    25e2:	ae 01       	movw	r20, r28
    25e4:	4f 5d       	subi	r20, 0xDF	; 223
    25e6:	5f 4f       	sbci	r21, 0xFF	; 255
    25e8:	be 01       	movw	r22, r28
    25ea:	6f 5f       	subi	r22, 0xFF	; 255
    25ec:	7f 4f       	sbci	r23, 0xFF	; 255
    25ee:	cb 01       	movw	r24, r22
    25f0:	0e 94 8d 05 	call	0xb1a	; 0xb1a <uECC_vli_sub>
    25f4:	bf cf       	rjmp	.-130    	; 0x2574 <uECC_vli_modInv+0x224>
    25f6:	25 2d       	mov	r18, r5
    25f8:	a8 01       	movw	r20, r16
    25fa:	be 01       	movw	r22, r28
    25fc:	6f 5d       	subi	r22, 0xDF	; 223
    25fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2600:	cb 01       	movw	r24, r22
    2602:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    2606:	93 cf       	rjmp	.-218    	; 0x252e <uECC_vli_modInv+0x1de>
    2608:	65 2d       	mov	r22, r5
    260a:	c5 01       	movw	r24, r10
    260c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    2610:	34 cf       	rjmp	.-408    	; 0x247a <uECC_vli_modInv+0x12a>
    2612:	25 2d       	mov	r18, r5
    2614:	a8 01       	movw	r20, r16
    2616:	be 01       	movw	r22, r28
    2618:	6f 5f       	subi	r22, 0xFF	; 255
    261a:	7f 4f       	sbci	r23, 0xFF	; 255
    261c:	cb 01       	movw	r24, r22
    261e:	0e 94 bc 04 	call	0x978	; 0x978 <uECC_vli_add>
    2622:	de cf       	rjmp	.-68     	; 0x25e0 <uECC_vli_modInv+0x290>

00002624 <EccPoint_mult>:
    2624:	2f 92       	push	r2
    2626:	3f 92       	push	r3
    2628:	4f 92       	push	r4
    262a:	5f 92       	push	r5
    262c:	6f 92       	push	r6
    262e:	7f 92       	push	r7
    2630:	8f 92       	push	r8
    2632:	9f 92       	push	r9
    2634:	af 92       	push	r10
    2636:	bf 92       	push	r11
    2638:	cf 92       	push	r12
    263a:	df 92       	push	r13
    263c:	ef 92       	push	r14
    263e:	ff 92       	push	r15
    2640:	0f 93       	push	r16
    2642:	1f 93       	push	r17
    2644:	cf 93       	push	r28
    2646:	df 93       	push	r29
    2648:	cd b7       	in	r28, 0x3d	; 61
    264a:	de b7       	in	r29, 0x3e	; 62
    264c:	cf 5e       	subi	r28, 0xEF	; 239
    264e:	d1 09       	sbc	r29, r1
    2650:	0f b6       	in	r0, 0x3f	; 63
    2652:	f8 94       	cli
    2654:	de bf       	out	0x3e, r29	; 62
    2656:	0f be       	out	0x3f, r0	; 63
    2658:	cd bf       	out	0x3d, r28	; 61
    265a:	c2 51       	subi	r28, 0x12	; 18
    265c:	df 4f       	sbci	r29, 0xFF	; 255
    265e:	99 83       	std	Y+1, r25	; 0x01
    2660:	88 83       	st	Y, r24
    2662:	ce 5e       	subi	r28, 0xEE	; 238
    2664:	d0 40       	sbci	r29, 0x00	; 0
    2666:	c8 51       	subi	r28, 0x18	; 24
    2668:	df 4f       	sbci	r29, 0xFF	; 255
    266a:	79 83       	std	Y+1, r23	; 0x01
    266c:	68 83       	st	Y, r22
    266e:	c8 5e       	subi	r28, 0xE8	; 232
    2670:	d0 40       	sbci	r29, 0x00	; 0
    2672:	cd 51       	subi	r28, 0x1D	; 29
    2674:	df 4f       	sbci	r29, 0xFF	; 255
    2676:	59 83       	std	Y+1, r21	; 0x01
    2678:	48 83       	st	Y, r20
    267a:	c3 5e       	subi	r28, 0xE3	; 227
    267c:	d0 40       	sbci	r29, 0x00	; 0
    267e:	69 01       	movw	r12, r18
    2680:	17 01       	movw	r2, r14
    2682:	d7 01       	movw	r26, r14
    2684:	bc 91       	ld	r27, X
    2686:	cb 51       	subi	r28, 0x1B	; 27
    2688:	df 4f       	sbci	r29, 0xFF	; 255
    268a:	b8 83       	st	Y, r27
    268c:	c5 5e       	subi	r28, 0xE5	; 229
    268e:	d0 40       	sbci	r29, 0x00	; 0
    2690:	4b 2f       	mov	r20, r27
    2692:	81 e8       	ldi	r24, 0x81	; 129
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	8c 0f       	add	r24, r28
    2698:	9d 1f       	adc	r25, r29
    269a:	80 96       	adiw	r24, 0x20	; 32
    269c:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    26a0:	cb 51       	subi	r28, 0x1B	; 27
    26a2:	df 4f       	sbci	r29, 0xFF	; 255
    26a4:	e8 81       	ld	r30, Y
    26a6:	c5 5e       	subi	r28, 0xE5	; 229
    26a8:	d0 40       	sbci	r29, 0x00	; 0
    26aa:	0e 2e       	mov	r0, r30
    26ac:	00 0c       	add	r0, r0
    26ae:	ff 0b       	sbc	r31, r31
    26b0:	c6 51       	subi	r28, 0x16	; 22
    26b2:	df 4f       	sbci	r29, 0xFF	; 255
    26b4:	f9 83       	std	Y+1, r31	; 0x01
    26b6:	e8 83       	st	Y, r30
    26b8:	ca 5e       	subi	r28, 0xEA	; 234
    26ba:	d0 40       	sbci	r29, 0x00	; 0
    26bc:	c8 51       	subi	r28, 0x18	; 24
    26be:	df 4f       	sbci	r29, 0xFF	; 255
    26c0:	28 81       	ld	r18, Y
    26c2:	39 81       	ldd	r19, Y+1	; 0x01
    26c4:	c8 5e       	subi	r28, 0xE8	; 232
    26c6:	d0 40       	sbci	r29, 0x00	; 0
    26c8:	2e 0f       	add	r18, r30
    26ca:	3f 1f       	adc	r19, r31
    26cc:	c4 51       	subi	r28, 0x14	; 20
    26ce:	df 4f       	sbci	r29, 0xFF	; 255
    26d0:	39 83       	std	Y+1, r19	; 0x01
    26d2:	28 83       	st	Y, r18
    26d4:	cc 5e       	subi	r28, 0xEC	; 236
    26d6:	d0 40       	sbci	r29, 0x00	; 0
    26d8:	cb 51       	subi	r28, 0x1B	; 27
    26da:	df 4f       	sbci	r29, 0xFF	; 255
    26dc:	48 81       	ld	r20, Y
    26de:	c5 5e       	subi	r28, 0xE5	; 229
    26e0:	d0 40       	sbci	r29, 0x00	; 0
    26e2:	b9 01       	movw	r22, r18
    26e4:	81 e4       	ldi	r24, 0x41	; 65
    26e6:	90 e0       	ldi	r25, 0x00	; 0
    26e8:	8c 0f       	add	r24, r28
    26ea:	9d 1f       	adc	r25, r29
    26ec:	80 96       	adiw	r24, 0x20	; 32
    26ee:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    26f2:	d7 01       	movw	r26, r14
    26f4:	bc 90       	ld	r11, X
    26f6:	c1 14       	cp	r12, r1
    26f8:	d1 04       	cpc	r13, r1
    26fa:	09 f4       	brne	.+2      	; 0x26fe <EccPoint_mult+0xda>
    26fc:	fc c1       	rjmp	.+1016   	; 0x2af6 <EccPoint_mult+0x4d2>
    26fe:	4b 2d       	mov	r20, r11
    2700:	b6 01       	movw	r22, r12
    2702:	fe 01       	movw	r30, r28
    2704:	31 96       	adiw	r30, 0x01	; 1
    2706:	cf 51       	subi	r28, 0x1F	; 31
    2708:	df 4f       	sbci	r29, 0xFF	; 255
    270a:	f9 83       	std	Y+1, r31	; 0x01
    270c:	e8 83       	st	Y, r30
    270e:	c1 5e       	subi	r28, 0xE1	; 225
    2710:	d0 40       	sbci	r29, 0x00	; 0
    2712:	cf 01       	movw	r24, r30
    2714:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2718:	4b 2d       	mov	r20, r11
    271a:	81 e8       	ldi	r24, 0x81	; 129
    271c:	e8 2e       	mov	r14, r24
    271e:	f1 2c       	mov	r15, r1
    2720:	ec 0e       	add	r14, r28
    2722:	fd 1e       	adc	r15, r29
    2724:	30 e2       	ldi	r19, 0x20	; 32
    2726:	e3 0e       	add	r14, r19
    2728:	f1 1c       	adc	r15, r1
    272a:	b7 01       	movw	r22, r14
    272c:	ce 01       	movw	r24, r28
    272e:	8f 57       	subi	r24, 0x7F	; 127
    2730:	9f 4f       	sbci	r25, 0xFF	; 255
    2732:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2736:	4b 2d       	mov	r20, r11
    2738:	91 e4       	ldi	r25, 0x41	; 65
    273a:	c9 2e       	mov	r12, r25
    273c:	d1 2c       	mov	r13, r1
    273e:	cc 0e       	add	r12, r28
    2740:	dd 1e       	adc	r13, r29
    2742:	80 e2       	ldi	r24, 0x20	; 32
    2744:	c8 0e       	add	r12, r24
    2746:	d1 1c       	adc	r13, r1
    2748:	b6 01       	movw	r22, r12
    274a:	ce 01       	movw	r24, r28
    274c:	8f 5b       	subi	r24, 0xBF	; 191
    274e:	9f 4f       	sbci	r25, 0xFF	; 255
    2750:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2754:	91 01       	movw	r18, r2
    2756:	cf 51       	subi	r28, 0x1F	; 31
    2758:	df 4f       	sbci	r29, 0xFF	; 255
    275a:	48 81       	ld	r20, Y
    275c:	59 81       	ldd	r21, Y+1	; 0x01
    275e:	c1 5e       	subi	r28, 0xE1	; 225
    2760:	d0 40       	sbci	r29, 0x00	; 0
    2762:	b6 01       	movw	r22, r12
    2764:	c7 01       	movw	r24, r14
    2766:	a6 d9       	rcall	.-3252   	; 0x1ab4 <apply_z>
    2768:	f1 01       	movw	r30, r2
    276a:	ec 55       	subi	r30, 0x5C	; 92
    276c:	ff 4f       	sbci	r31, 0xFF	; 255
    276e:	01 90       	ld	r0, Z+
    2770:	f0 81       	ld	r31, Z
    2772:	e0 2d       	mov	r30, r0
    2774:	91 01       	movw	r18, r2
    2776:	cf 51       	subi	r28, 0x1F	; 31
    2778:	df 4f       	sbci	r29, 0xFF	; 255
    277a:	48 81       	ld	r20, Y
    277c:	59 81       	ldd	r21, Y+1	; 0x01
    277e:	c1 5e       	subi	r28, 0xE1	; 225
    2780:	d0 40       	sbci	r29, 0x00	; 0
    2782:	b6 01       	movw	r22, r12
    2784:	c7 01       	movw	r24, r14
    2786:	09 95       	icall
    2788:	91 01       	movw	r18, r2
    278a:	cf 51       	subi	r28, 0x1F	; 31
    278c:	df 4f       	sbci	r29, 0xFF	; 255
    278e:	48 81       	ld	r20, Y
    2790:	59 81       	ldd	r21, Y+1	; 0x01
    2792:	c1 5e       	subi	r28, 0xE1	; 225
    2794:	d0 40       	sbci	r29, 0x00	; 0
    2796:	be 01       	movw	r22, r28
    2798:	6f 5b       	subi	r22, 0xBF	; 191
    279a:	7f 4f       	sbci	r23, 0xFF	; 255
    279c:	ce 01       	movw	r24, r28
    279e:	8f 57       	subi	r24, 0x7F	; 127
    27a0:	9f 4f       	sbci	r25, 0xFF	; 255
    27a2:	88 d9       	rcall	.-3312   	; 0x1ab4 <apply_z>
    27a4:	58 01       	movw	r10, r16
    27a6:	92 e0       	ldi	r25, 0x02	; 2
    27a8:	a9 1a       	sub	r10, r25
    27aa:	b1 08       	sbc	r11, r1
    27ac:	1a 14       	cp	r1, r10
    27ae:	1b 04       	cpc	r1, r11
    27b0:	0c f0       	brlt	.+2      	; 0x27b4 <EccPoint_mult+0x190>
    27b2:	5f c0       	rjmp	.+190    	; 0x2872 <EccPoint_mult+0x24e>
    27b4:	44 24       	eor	r4, r4
    27b6:	43 94       	inc	r4
    27b8:	51 2c       	mov	r5, r1
    27ba:	f5 01       	movw	r30, r10
    27bc:	f5 95       	asr	r31
    27be:	e7 95       	ror	r30
    27c0:	f5 95       	asr	r31
    27c2:	e7 95       	ror	r30
    27c4:	f5 95       	asr	r31
    27c6:	e7 95       	ror	r30
    27c8:	cd 51       	subi	r28, 0x1D	; 29
    27ca:	df 4f       	sbci	r29, 0xFF	; 255
    27cc:	28 81       	ld	r18, Y
    27ce:	39 81       	ldd	r19, Y+1	; 0x01
    27d0:	c3 5e       	subi	r28, 0xE3	; 227
    27d2:	d0 40       	sbci	r29, 0x00	; 0
    27d4:	e2 0f       	add	r30, r18
    27d6:	f3 1f       	adc	r31, r19
    27d8:	c5 01       	movw	r24, r10
    27da:	87 70       	andi	r24, 0x07	; 7
    27dc:	99 27       	eor	r25, r25
    27de:	d2 01       	movw	r26, r4
    27e0:	02 c0       	rjmp	.+4      	; 0x27e6 <EccPoint_mult+0x1c2>
    27e2:	aa 0f       	add	r26, r26
    27e4:	bb 1f       	adc	r27, r27
    27e6:	8a 95       	dec	r24
    27e8:	e2 f7       	brpl	.-8      	; 0x27e2 <EccPoint_mult+0x1be>
    27ea:	cd 01       	movw	r24, r26
    27ec:	90 81       	ld	r25, Z
    27ee:	89 23       	and	r24, r25
    27f0:	21 e0       	ldi	r18, 0x01	; 1
    27f2:	30 e0       	ldi	r19, 0x00	; 0
    27f4:	11 f0       	breq	.+4      	; 0x27fa <EccPoint_mult+0x1d6>
    27f6:	20 e0       	ldi	r18, 0x00	; 0
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	39 01       	movw	r6, r18
    27fc:	66 0c       	add	r6, r6
    27fe:	77 1c       	adc	r7, r7
    2800:	62 94       	swap	r6
    2802:	72 94       	swap	r7
    2804:	80 ef       	ldi	r24, 0xF0	; 240
    2806:	78 22       	and	r7, r24
    2808:	76 24       	eor	r7, r6
    280a:	68 22       	and	r6, r24
    280c:	76 24       	eor	r7, r6
    280e:	91 e4       	ldi	r25, 0x41	; 65
    2810:	c9 2e       	mov	r12, r25
    2812:	d1 2c       	mov	r13, r1
    2814:	cc 0e       	add	r12, r28
    2816:	dd 1e       	adc	r13, r29
    2818:	c6 0c       	add	r12, r6
    281a:	d7 1c       	adc	r13, r7
    281c:	e1 e8       	ldi	r30, 0x81	; 129
    281e:	f0 e0       	ldi	r31, 0x00	; 0
    2820:	ec 0f       	add	r30, r28
    2822:	fd 1f       	adc	r31, r29
    2824:	6e 0e       	add	r6, r30
    2826:	7f 1e       	adc	r7, r31
    2828:	72 01       	movw	r14, r4
    282a:	e2 1a       	sub	r14, r18
    282c:	f3 0a       	sbc	r15, r19
    282e:	ee 0c       	add	r14, r14
    2830:	ff 1c       	adc	r15, r15
    2832:	e2 94       	swap	r14
    2834:	f2 94       	swap	r15
    2836:	20 ef       	ldi	r18, 0xF0	; 240
    2838:	f2 22       	and	r15, r18
    283a:	fe 24       	eor	r15, r14
    283c:	e2 22       	and	r14, r18
    283e:	fe 24       	eor	r15, r14
    2840:	31 e4       	ldi	r19, 0x41	; 65
    2842:	83 2e       	mov	r8, r19
    2844:	91 2c       	mov	r9, r1
    2846:	8c 0e       	add	r8, r28
    2848:	9d 1e       	adc	r9, r29
    284a:	8e 0c       	add	r8, r14
    284c:	9f 1c       	adc	r9, r15
    284e:	ee 0e       	add	r14, r30
    2850:	ff 1e       	adc	r15, r31
    2852:	81 01       	movw	r16, r2
    2854:	96 01       	movw	r18, r12
    2856:	a3 01       	movw	r20, r6
    2858:	b4 01       	movw	r22, r8
    285a:	c7 01       	movw	r24, r14
    285c:	7e da       	rcall	.-2820   	; 0x1d5a <XYcZ_addC>
    285e:	94 01       	movw	r18, r8
    2860:	a7 01       	movw	r20, r14
    2862:	b6 01       	movw	r22, r12
    2864:	c3 01       	movw	r24, r6
    2866:	9c d9       	rcall	.-3272   	; 0x1ba0 <XYcZ_add>
    2868:	f1 e0       	ldi	r31, 0x01	; 1
    286a:	af 1a       	sub	r10, r31
    286c:	b1 08       	sbc	r11, r1
    286e:	09 f0       	breq	.+2      	; 0x2872 <EccPoint_mult+0x24e>
    2870:	a4 cf       	rjmp	.-184    	; 0x27ba <EccPoint_mult+0x196>
    2872:	cd 51       	subi	r28, 0x1D	; 29
    2874:	df 4f       	sbci	r29, 0xFF	; 255
    2876:	a8 81       	ld	r26, Y
    2878:	b9 81       	ldd	r27, Y+1	; 0x01
    287a:	c3 5e       	subi	r28, 0xE3	; 227
    287c:	d0 40       	sbci	r29, 0x00	; 0
    287e:	8c 91       	ld	r24, X
    2880:	80 95       	com	r24
    2882:	81 70       	andi	r24, 0x01	; 1
    2884:	ca 51       	subi	r28, 0x1A	; 26
    2886:	df 4f       	sbci	r29, 0xFF	; 255
    2888:	88 83       	st	Y, r24
    288a:	c6 5e       	subi	r28, 0xE6	; 230
    288c:	d0 40       	sbci	r29, 0x00	; 0
    288e:	c9 51       	subi	r28, 0x19	; 25
    2890:	df 4f       	sbci	r29, 0xFF	; 255
    2892:	18 82       	st	Y, r1
    2894:	c7 5e       	subi	r28, 0xE7	; 231
    2896:	d0 40       	sbci	r29, 0x00	; 0
    2898:	ca 51       	subi	r28, 0x1A	; 26
    289a:	df 4f       	sbci	r29, 0xFF	; 255
    289c:	48 80       	ld	r4, Y
    289e:	59 80       	ldd	r5, Y+1	; 0x01
    28a0:	c6 5e       	subi	r28, 0xE6	; 230
    28a2:	d0 40       	sbci	r29, 0x00	; 0
    28a4:	44 0c       	add	r4, r4
    28a6:	55 1c       	adc	r5, r5
    28a8:	42 94       	swap	r4
    28aa:	52 94       	swap	r5
    28ac:	60 ef       	ldi	r22, 0xF0	; 240
    28ae:	56 22       	and	r5, r22
    28b0:	54 24       	eor	r5, r4
    28b2:	46 22       	and	r4, r22
    28b4:	54 24       	eor	r5, r4
    28b6:	71 e4       	ldi	r23, 0x41	; 65
    28b8:	67 2e       	mov	r6, r23
    28ba:	71 2c       	mov	r7, r1
    28bc:	6c 0e       	add	r6, r28
    28be:	7d 1e       	adc	r7, r29
    28c0:	64 0c       	add	r6, r4
    28c2:	75 1c       	adc	r7, r5
    28c4:	e1 e8       	ldi	r30, 0x81	; 129
    28c6:	f0 e0       	ldi	r31, 0x00	; 0
    28c8:	ec 0f       	add	r30, r28
    28ca:	fd 1f       	adc	r31, r29
    28cc:	4e 0e       	add	r4, r30
    28ce:	5f 1e       	adc	r5, r31
    28d0:	81 e0       	ldi	r24, 0x01	; 1
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	7c 01       	movw	r14, r24
    28d6:	ca 51       	subi	r28, 0x1A	; 26
    28d8:	df 4f       	sbci	r29, 0xFF	; 255
    28da:	28 81       	ld	r18, Y
    28dc:	39 81       	ldd	r19, Y+1	; 0x01
    28de:	c6 5e       	subi	r28, 0xE6	; 230
    28e0:	d0 40       	sbci	r29, 0x00	; 0
    28e2:	e2 1a       	sub	r14, r18
    28e4:	f3 0a       	sbc	r15, r19
    28e6:	ee 0c       	add	r14, r14
    28e8:	ff 1c       	adc	r15, r15
    28ea:	e2 94       	swap	r14
    28ec:	f2 94       	swap	r15
    28ee:	a0 ef       	ldi	r26, 0xF0	; 240
    28f0:	fa 22       	and	r15, r26
    28f2:	fe 24       	eor	r15, r14
    28f4:	ea 22       	and	r14, r26
    28f6:	fe 24       	eor	r15, r14
    28f8:	b1 e4       	ldi	r27, 0x41	; 65
    28fa:	cb 2e       	mov	r12, r27
    28fc:	d1 2c       	mov	r13, r1
    28fe:	cc 0e       	add	r12, r28
    2900:	dd 1e       	adc	r13, r29
    2902:	ce 0c       	add	r12, r14
    2904:	df 1c       	adc	r13, r15
    2906:	ee 0e       	add	r14, r30
    2908:	ff 1e       	adc	r15, r31
    290a:	81 01       	movw	r16, r2
    290c:	93 01       	movw	r18, r6
    290e:	a2 01       	movw	r20, r4
    2910:	b6 01       	movw	r22, r12
    2912:	c7 01       	movw	r24, r14
    2914:	22 da       	rcall	.-3004   	; 0x1d5a <XYcZ_addC>
    2916:	51 01       	movw	r10, r2
    2918:	34 e0       	ldi	r19, 0x04	; 4
    291a:	a3 0e       	add	r10, r19
    291c:	b1 1c       	adc	r11, r1
    291e:	61 e8       	ldi	r22, 0x81	; 129
    2920:	70 e0       	ldi	r23, 0x00	; 0
    2922:	6c 0f       	add	r22, r28
    2924:	7d 1f       	adc	r23, r29
    2926:	60 5e       	subi	r22, 0xE0	; 224
    2928:	7f 4f       	sbci	r23, 0xFF	; 255
    292a:	cb 51       	subi	r28, 0x1B	; 27
    292c:	df 4f       	sbci	r29, 0xFF	; 255
    292e:	08 81       	ld	r16, Y
    2930:	c5 5e       	subi	r28, 0xE5	; 229
    2932:	d0 40       	sbci	r29, 0x00	; 0
    2934:	95 01       	movw	r18, r10
    2936:	ae 01       	movw	r20, r28
    2938:	4f 57       	subi	r20, 0x7F	; 127
    293a:	5f 4f       	sbci	r21, 0xFF	; 255
    293c:	ce 01       	movw	r24, r28
    293e:	8f 53       	subi	r24, 0x3F	; 63
    2940:	9f 4f       	sbci	r25, 0xFF	; 255
    2942:	0e 94 3f 07 	call	0xe7e	; 0xe7e <uECC_vli_modSub>
    2946:	d1 01       	movw	r26, r2
    2948:	2c 91       	ld	r18, X
    294a:	a6 01       	movw	r20, r12
    294c:	be 01       	movw	r22, r28
    294e:	6f 53       	subi	r22, 0x3F	; 63
    2950:	7f 4f       	sbci	r23, 0xFF	; 255
    2952:	cf 51       	subi	r28, 0x1F	; 31
    2954:	df 4f       	sbci	r29, 0xFF	; 255
    2956:	88 81       	ld	r24, Y
    2958:	99 81       	ldd	r25, Y+1	; 0x01
    295a:	c1 5e       	subi	r28, 0xE1	; 225
    295c:	d0 40       	sbci	r29, 0x00	; 0
    295e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2962:	41 01       	movw	r8, r2
    2964:	ba ea       	ldi	r27, 0xAA	; 170
    2966:	8b 0e       	add	r8, r27
    2968:	91 1c       	adc	r9, r1
    296a:	d4 01       	movw	r26, r8
    296c:	ed 91       	ld	r30, X+
    296e:	fc 91       	ld	r31, X
    2970:	cf 51       	subi	r28, 0x1F	; 31
    2972:	df 4f       	sbci	r29, 0xFF	; 255
    2974:	68 81       	ld	r22, Y
    2976:	79 81       	ldd	r23, Y+1	; 0x01
    2978:	c1 5e       	subi	r28, 0xE1	; 225
    297a:	d0 40       	sbci	r29, 0x00	; 0
    297c:	ce 01       	movw	r24, r28
    297e:	8f 53       	subi	r24, 0x3F	; 63
    2980:	9f 4f       	sbci	r25, 0xFF	; 255
    2982:	09 95       	icall
    2984:	f1 01       	movw	r30, r2
    2986:	20 81       	ld	r18, Z
    2988:	c8 51       	subi	r28, 0x18	; 24
    298a:	df 4f       	sbci	r29, 0xFF	; 255
    298c:	48 81       	ld	r20, Y
    298e:	59 81       	ldd	r21, Y+1	; 0x01
    2990:	c8 5e       	subi	r28, 0xE8	; 232
    2992:	d0 40       	sbci	r29, 0x00	; 0
    2994:	be 01       	movw	r22, r28
    2996:	6f 53       	subi	r22, 0x3F	; 63
    2998:	7f 4f       	sbci	r23, 0xFF	; 255
    299a:	cf 51       	subi	r28, 0x1F	; 31
    299c:	df 4f       	sbci	r29, 0xFF	; 255
    299e:	88 81       	ld	r24, Y
    29a0:	99 81       	ldd	r25, Y+1	; 0x01
    29a2:	c1 5e       	subi	r28, 0xE1	; 225
    29a4:	d0 40       	sbci	r29, 0x00	; 0
    29a6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    29aa:	d4 01       	movw	r26, r8
    29ac:	ed 91       	ld	r30, X+
    29ae:	fc 91       	ld	r31, X
    29b0:	cf 51       	subi	r28, 0x1F	; 31
    29b2:	df 4f       	sbci	r29, 0xFF	; 255
    29b4:	68 81       	ld	r22, Y
    29b6:	79 81       	ldd	r23, Y+1	; 0x01
    29b8:	c1 5e       	subi	r28, 0xE1	; 225
    29ba:	d0 40       	sbci	r29, 0x00	; 0
    29bc:	ce 01       	movw	r24, r28
    29be:	8f 53       	subi	r24, 0x3F	; 63
    29c0:	9f 4f       	sbci	r25, 0xFF	; 255
    29c2:	09 95       	icall
    29c4:	cb 51       	subi	r28, 0x1B	; 27
    29c6:	df 4f       	sbci	r29, 0xFF	; 255
    29c8:	28 81       	ld	r18, Y
    29ca:	c5 5e       	subi	r28, 0xE5	; 229
    29cc:	d0 40       	sbci	r29, 0x00	; 0
    29ce:	a5 01       	movw	r20, r10
    29d0:	be 01       	movw	r22, r28
    29d2:	6f 53       	subi	r22, 0x3F	; 63
    29d4:	7f 4f       	sbci	r23, 0xFF	; 255
    29d6:	cb 01       	movw	r24, r22
    29d8:	bb dc       	rcall	.-1674   	; 0x2350 <uECC_vli_modInv>
    29da:	f1 01       	movw	r30, r2
    29dc:	20 81       	ld	r18, Z
    29de:	c4 51       	subi	r28, 0x14	; 20
    29e0:	df 4f       	sbci	r29, 0xFF	; 255
    29e2:	48 81       	ld	r20, Y
    29e4:	59 81       	ldd	r21, Y+1	; 0x01
    29e6:	cc 5e       	subi	r28, 0xEC	; 236
    29e8:	d0 40       	sbci	r29, 0x00	; 0
    29ea:	be 01       	movw	r22, r28
    29ec:	6f 53       	subi	r22, 0x3F	; 63
    29ee:	7f 4f       	sbci	r23, 0xFF	; 255
    29f0:	cf 51       	subi	r28, 0x1F	; 31
    29f2:	df 4f       	sbci	r29, 0xFF	; 255
    29f4:	88 81       	ld	r24, Y
    29f6:	99 81       	ldd	r25, Y+1	; 0x01
    29f8:	c1 5e       	subi	r28, 0xE1	; 225
    29fa:	d0 40       	sbci	r29, 0x00	; 0
    29fc:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2a00:	d4 01       	movw	r26, r8
    2a02:	ed 91       	ld	r30, X+
    2a04:	fc 91       	ld	r31, X
    2a06:	cf 51       	subi	r28, 0x1F	; 31
    2a08:	df 4f       	sbci	r29, 0xFF	; 255
    2a0a:	68 81       	ld	r22, Y
    2a0c:	79 81       	ldd	r23, Y+1	; 0x01
    2a0e:	c1 5e       	subi	r28, 0xE1	; 225
    2a10:	d0 40       	sbci	r29, 0x00	; 0
    2a12:	ce 01       	movw	r24, r28
    2a14:	8f 53       	subi	r24, 0x3F	; 63
    2a16:	9f 4f       	sbci	r25, 0xFF	; 255
    2a18:	09 95       	icall
    2a1a:	f1 01       	movw	r30, r2
    2a1c:	20 81       	ld	r18, Z
    2a1e:	a7 01       	movw	r20, r14
    2a20:	be 01       	movw	r22, r28
    2a22:	6f 53       	subi	r22, 0x3F	; 63
    2a24:	7f 4f       	sbci	r23, 0xFF	; 255
    2a26:	cf 51       	subi	r28, 0x1F	; 31
    2a28:	df 4f       	sbci	r29, 0xFF	; 255
    2a2a:	88 81       	ld	r24, Y
    2a2c:	99 81       	ldd	r25, Y+1	; 0x01
    2a2e:	c1 5e       	subi	r28, 0xE1	; 225
    2a30:	d0 40       	sbci	r29, 0x00	; 0
    2a32:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2a36:	d4 01       	movw	r26, r8
    2a38:	ed 91       	ld	r30, X+
    2a3a:	fc 91       	ld	r31, X
    2a3c:	cf 51       	subi	r28, 0x1F	; 31
    2a3e:	df 4f       	sbci	r29, 0xFF	; 255
    2a40:	68 81       	ld	r22, Y
    2a42:	79 81       	ldd	r23, Y+1	; 0x01
    2a44:	c1 5e       	subi	r28, 0xE1	; 225
    2a46:	d0 40       	sbci	r29, 0x00	; 0
    2a48:	ce 01       	movw	r24, r28
    2a4a:	8f 53       	subi	r24, 0x3F	; 63
    2a4c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a4e:	09 95       	icall
    2a50:	81 01       	movw	r16, r2
    2a52:	96 01       	movw	r18, r12
    2a54:	a7 01       	movw	r20, r14
    2a56:	b3 01       	movw	r22, r6
    2a58:	c2 01       	movw	r24, r4
    2a5a:	a2 d8       	rcall	.-3772   	; 0x1ba0 <XYcZ_add>
    2a5c:	91 01       	movw	r18, r2
    2a5e:	ae 01       	movw	r20, r28
    2a60:	4f 53       	subi	r20, 0x3F	; 63
    2a62:	5f 4f       	sbci	r21, 0xFF	; 255
    2a64:	be 01       	movw	r22, r28
    2a66:	6f 5b       	subi	r22, 0xBF	; 191
    2a68:	7f 4f       	sbci	r23, 0xFF	; 255
    2a6a:	ce 01       	movw	r24, r28
    2a6c:	8f 57       	subi	r24, 0x7F	; 127
    2a6e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a70:	21 d8       	rcall	.-4030   	; 0x1ab4 <apply_z>
    2a72:	cb 51       	subi	r28, 0x1B	; 27
    2a74:	df 4f       	sbci	r29, 0xFF	; 255
    2a76:	48 81       	ld	r20, Y
    2a78:	c5 5e       	subi	r28, 0xE5	; 229
    2a7a:	d0 40       	sbci	r29, 0x00	; 0
    2a7c:	be 01       	movw	r22, r28
    2a7e:	6f 57       	subi	r22, 0x7F	; 127
    2a80:	7f 4f       	sbci	r23, 0xFF	; 255
    2a82:	c2 51       	subi	r28, 0x12	; 18
    2a84:	df 4f       	sbci	r29, 0xFF	; 255
    2a86:	88 81       	ld	r24, Y
    2a88:	99 81       	ldd	r25, Y+1	; 0x01
    2a8a:	ce 5e       	subi	r28, 0xEE	; 238
    2a8c:	d0 40       	sbci	r29, 0x00	; 0
    2a8e:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2a92:	cb 51       	subi	r28, 0x1B	; 27
    2a94:	df 4f       	sbci	r29, 0xFF	; 255
    2a96:	48 81       	ld	r20, Y
    2a98:	c5 5e       	subi	r28, 0xE5	; 229
    2a9a:	d0 40       	sbci	r29, 0x00	; 0
    2a9c:	be 01       	movw	r22, r28
    2a9e:	6f 5b       	subi	r22, 0xBF	; 191
    2aa0:	7f 4f       	sbci	r23, 0xFF	; 255
    2aa2:	c2 51       	subi	r28, 0x12	; 18
    2aa4:	df 4f       	sbci	r29, 0xFF	; 255
    2aa6:	88 81       	ld	r24, Y
    2aa8:	99 81       	ldd	r25, Y+1	; 0x01
    2aaa:	ce 5e       	subi	r28, 0xEE	; 238
    2aac:	d0 40       	sbci	r29, 0x00	; 0
    2aae:	c6 51       	subi	r28, 0x16	; 22
    2ab0:	df 4f       	sbci	r29, 0xFF	; 255
    2ab2:	e8 81       	ld	r30, Y
    2ab4:	f9 81       	ldd	r31, Y+1	; 0x01
    2ab6:	ca 5e       	subi	r28, 0xEA	; 234
    2ab8:	d0 40       	sbci	r29, 0x00	; 0
    2aba:	8e 0f       	add	r24, r30
    2abc:	9f 1f       	adc	r25, r31
    2abe:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2ac2:	c1 51       	subi	r28, 0x11	; 17
    2ac4:	df 4f       	sbci	r29, 0xFF	; 255
    2ac6:	0f b6       	in	r0, 0x3f	; 63
    2ac8:	f8 94       	cli
    2aca:	de bf       	out	0x3e, r29	; 62
    2acc:	0f be       	out	0x3f, r0	; 63
    2ace:	cd bf       	out	0x3d, r28	; 61
    2ad0:	df 91       	pop	r29
    2ad2:	cf 91       	pop	r28
    2ad4:	1f 91       	pop	r17
    2ad6:	0f 91       	pop	r16
    2ad8:	ff 90       	pop	r15
    2ada:	ef 90       	pop	r14
    2adc:	df 90       	pop	r13
    2ade:	cf 90       	pop	r12
    2ae0:	bf 90       	pop	r11
    2ae2:	af 90       	pop	r10
    2ae4:	9f 90       	pop	r9
    2ae6:	8f 90       	pop	r8
    2ae8:	7f 90       	pop	r7
    2aea:	6f 90       	pop	r6
    2aec:	5f 90       	pop	r5
    2aee:	4f 90       	pop	r4
    2af0:	3f 90       	pop	r3
    2af2:	2f 90       	pop	r2
    2af4:	08 95       	ret
    2af6:	6b 2d       	mov	r22, r11
    2af8:	9e 01       	movw	r18, r28
    2afa:	2f 5f       	subi	r18, 0xFF	; 255
    2afc:	3f 4f       	sbci	r19, 0xFF	; 255
    2afe:	cf 51       	subi	r28, 0x1F	; 31
    2b00:	df 4f       	sbci	r29, 0xFF	; 255
    2b02:	39 83       	std	Y+1, r19	; 0x01
    2b04:	28 83       	st	Y, r18
    2b06:	c1 5e       	subi	r28, 0xE1	; 225
    2b08:	d0 40       	sbci	r29, 0x00	; 0
    2b0a:	c9 01       	movw	r24, r18
    2b0c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    2b10:	81 e0       	ldi	r24, 0x01	; 1
    2b12:	89 83       	std	Y+1, r24	; 0x01
    2b14:	01 ce       	rjmp	.-1022   	; 0x2718 <EccPoint_mult+0xf4>

00002b16 <uECC_sign_with_k>:
    2b16:	2f 92       	push	r2
    2b18:	3f 92       	push	r3
    2b1a:	4f 92       	push	r4
    2b1c:	5f 92       	push	r5
    2b1e:	6f 92       	push	r6
    2b20:	7f 92       	push	r7
    2b22:	8f 92       	push	r8
    2b24:	9f 92       	push	r9
    2b26:	af 92       	push	r10
    2b28:	bf 92       	push	r11
    2b2a:	df 92       	push	r13
    2b2c:	ef 92       	push	r14
    2b2e:	ff 92       	push	r15
    2b30:	0f 93       	push	r16
    2b32:	1f 93       	push	r17
    2b34:	cf 93       	push	r28
    2b36:	df 93       	push	r29
    2b38:	cd b7       	in	r28, 0x3d	; 61
    2b3a:	de b7       	in	r29, 0x3e	; 62
    2b3c:	c2 5d       	subi	r28, 0xD2	; 210
    2b3e:	d1 09       	sbc	r29, r1
    2b40:	0f b6       	in	r0, 0x3f	; 63
    2b42:	f8 94       	cli
    2b44:	de bf       	out	0x3e, r29	; 62
    2b46:	0f be       	out	0x3f, r0	; 63
    2b48:	cd bf       	out	0x3d, r28	; 61
    2b4a:	5e 01       	movw	r10, r28
    2b4c:	e1 ea       	ldi	r30, 0xA1	; 161
    2b4e:	ae 0e       	add	r10, r30
    2b50:	b1 1c       	adc	r11, r1
    2b52:	cf 53       	subi	r28, 0x3F	; 63
    2b54:	df 4f       	sbci	r29, 0xFF	; 255
    2b56:	b9 82       	std	Y+1, r11	; 0x01
    2b58:	a8 82       	st	Y, r10
    2b5a:	c1 5c       	subi	r28, 0xC1	; 193
    2b5c:	d0 40       	sbci	r29, 0x00	; 0
    2b5e:	3e 01       	movw	r6, r28
    2b60:	f1 e8       	ldi	r31, 0x81	; 129
    2b62:	6f 0e       	add	r6, r31
    2b64:	71 1c       	adc	r7, r1
    2b66:	cd 53       	subi	r28, 0x3D	; 61
    2b68:	df 4f       	sbci	r29, 0xFF	; 255
    2b6a:	79 82       	std	Y+1, r7	; 0x01
    2b6c:	68 82       	st	Y, r6
    2b6e:	c3 5c       	subi	r28, 0xC3	; 195
    2b70:	d0 40       	sbci	r29, 0x00	; 0
    2b72:	f7 01       	movw	r30, r14
    2b74:	d0 80       	ld	r13, Z
    2b76:	1d 14       	cp	r1, r13
    2b78:	9c f4       	brge	.+38     	; 0x2ba0 <uECC_sign_with_k+0x8a>
    2b7a:	af ef       	ldi	r26, 0xFF	; 255
    2b7c:	ad 0d       	add	r26, r13
    2b7e:	b0 e0       	ldi	r27, 0x00	; 0
    2b80:	2d 01       	movw	r4, r26
    2b82:	ff ef       	ldi	r31, 0xFF	; 255
    2b84:	4f 1a       	sub	r4, r31
    2b86:	5f 0a       	sbc	r5, r31
    2b88:	d9 01       	movw	r26, r18
    2b8a:	a4 0d       	add	r26, r4
    2b8c:	b5 1d       	adc	r27, r5
    2b8e:	91 2c       	mov	r9, r1
    2b90:	f9 01       	movw	r30, r18
    2b92:	81 90       	ld	r8, Z+
    2b94:	98 28       	or	r9, r8
    2b96:	ea 17       	cp	r30, r26
    2b98:	fb 07       	cpc	r31, r27
    2b9a:	d9 f7       	brne	.-10     	; 0x2b92 <uECC_sign_with_k+0x7c>
    2b9c:	91 10       	cpse	r9, r1
    2b9e:	1b c0       	rjmp	.+54     	; 0x2bd6 <uECC_sign_with_k+0xc0>
    2ba0:	80 e0       	ldi	r24, 0x00	; 0
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	ce 52       	subi	r28, 0x2E	; 46
    2ba6:	df 4f       	sbci	r29, 0xFF	; 255
    2ba8:	0f b6       	in	r0, 0x3f	; 63
    2baa:	f8 94       	cli
    2bac:	de bf       	out	0x3e, r29	; 62
    2bae:	0f be       	out	0x3f, r0	; 63
    2bb0:	cd bf       	out	0x3d, r28	; 61
    2bb2:	df 91       	pop	r29
    2bb4:	cf 91       	pop	r28
    2bb6:	1f 91       	pop	r17
    2bb8:	0f 91       	pop	r16
    2bba:	ff 90       	pop	r15
    2bbc:	ef 90       	pop	r14
    2bbe:	df 90       	pop	r13
    2bc0:	bf 90       	pop	r11
    2bc2:	af 90       	pop	r10
    2bc4:	9f 90       	pop	r9
    2bc6:	8f 90       	pop	r8
    2bc8:	7f 90       	pop	r7
    2bca:	6f 90       	pop	r6
    2bcc:	5f 90       	pop	r5
    2bce:	4f 90       	pop	r4
    2bd0:	3f 90       	pop	r3
    2bd2:	2f 90       	pop	r2
    2bd4:	08 95       	ret
    2bd6:	f7 01       	movw	r30, r14
    2bd8:	02 80       	ldd	r0, Z+2	; 0x02
    2bda:	f3 81       	ldd	r31, Z+3	; 0x03
    2bdc:	e0 2d       	mov	r30, r0
    2bde:	c9 53       	subi	r28, 0x39	; 57
    2be0:	df 4f       	sbci	r29, 0xFF	; 255
    2be2:	f9 83       	std	Y+1, r31	; 0x01
    2be4:	e8 83       	st	Y, r30
    2be6:	c7 5c       	subi	r28, 0xC7	; 199
    2be8:	d0 40       	sbci	r29, 0x00	; 0
    2bea:	37 96       	adiw	r30, 0x07	; 7
    2bec:	f7 fd       	sbrc	r31, 7
    2bee:	d6 c1       	rjmp	.+940    	; 0x2f9c <uECC_sign_with_k+0x486>
    2bf0:	17 01       	movw	r2, r14
    2bf2:	c5 53       	subi	r28, 0x35	; 53
    2bf4:	df 4f       	sbci	r29, 0xFF	; 255
    2bf6:	19 83       	std	Y+1, r17	; 0x01
    2bf8:	08 83       	st	Y, r16
    2bfa:	cb 5c       	subi	r28, 0xCB	; 203
    2bfc:	d0 40       	sbci	r29, 0x00	; 0
    2bfe:	49 01       	movw	r8, r18
    2c00:	cf 52       	subi	r28, 0x2F	; 47
    2c02:	df 4f       	sbci	r29, 0xFF	; 255
    2c04:	59 83       	std	Y+1, r21	; 0x01
    2c06:	48 83       	st	Y, r20
    2c08:	c1 5d       	subi	r28, 0xD1	; 209
    2c0a:	d0 40       	sbci	r29, 0x00	; 0
    2c0c:	c1 53       	subi	r28, 0x31	; 49
    2c0e:	df 4f       	sbci	r29, 0xFF	; 255
    2c10:	79 83       	std	Y+1, r23	; 0x01
    2c12:	68 83       	st	Y, r22
    2c14:	cf 5c       	subi	r28, 0xCF	; 207
    2c16:	d0 40       	sbci	r29, 0x00	; 0
    2c18:	c3 53       	subi	r28, 0x33	; 51
    2c1a:	df 4f       	sbci	r29, 0xFF	; 255
    2c1c:	99 83       	std	Y+1, r25	; 0x01
    2c1e:	88 83       	st	Y, r24
    2c20:	cd 5c       	subi	r28, 0xCD	; 205
    2c22:	d0 40       	sbci	r29, 0x00	; 0
    2c24:	8f 01       	movw	r16, r30
    2c26:	15 95       	asr	r17
    2c28:	07 95       	ror	r16
    2c2a:	15 95       	asr	r17
    2c2c:	07 95       	ror	r16
    2c2e:	15 95       	asr	r17
    2c30:	07 95       	ror	r16
    2c32:	cb 53       	subi	r28, 0x3B	; 59
    2c34:	df 4f       	sbci	r29, 0xFF	; 255
    2c36:	19 83       	std	Y+1, r17	; 0x01
    2c38:	08 83       	st	Y, r16
    2c3a:	c5 5c       	subi	r28, 0xC5	; 197
    2c3c:	d0 40       	sbci	r29, 0x00	; 0
    2c3e:	c7 01       	movw	r24, r14
    2c40:	84 96       	adiw	r24, 0x24	; 36
    2c42:	c7 53       	subi	r28, 0x37	; 55
    2c44:	df 4f       	sbci	r29, 0xFF	; 255
    2c46:	99 83       	std	Y+1, r25	; 0x01
    2c48:	88 83       	st	Y, r24
    2c4a:	c9 5c       	subi	r28, 0xC9	; 201
    2c4c:	d0 40       	sbci	r29, 0x00	; 0
    2c4e:	cb 53       	subi	r28, 0x3B	; 59
    2c50:	df 4f       	sbci	r29, 0xFF	; 255
    2c52:	48 81       	ld	r20, Y
    2c54:	c5 5c       	subi	r28, 0xC5	; 197
    2c56:	d0 40       	sbci	r29, 0x00	; 0
    2c58:	b9 01       	movw	r22, r18
    2c5a:	0e 94 d5 06 	call	0xdaa	; 0xdaa <uECC_vli_cmp>
    2c5e:	81 30       	cpi	r24, 0x01	; 1
    2c60:	09 f0       	breq	.+2      	; 0x2c64 <uECC_sign_with_k+0x14e>
    2c62:	9e cf       	rjmp	.-196    	; 0x2ba0 <uECC_sign_with_k+0x8a>
    2c64:	97 01       	movw	r18, r14
    2c66:	a3 01       	movw	r20, r6
    2c68:	b5 01       	movw	r22, r10
    2c6a:	c4 01       	movw	r24, r8
    2c6c:	ad d9       	rcall	.-3238   	; 0x1fc8 <regularize_k>
    2c6e:	c9 53       	subi	r28, 0x39	; 57
    2c70:	df 4f       	sbci	r29, 0xFF	; 255
    2c72:	08 81       	ld	r16, Y
    2c74:	19 81       	ldd	r17, Y+1	; 0x01
    2c76:	c7 5c       	subi	r28, 0xC7	; 199
    2c78:	d0 40       	sbci	r29, 0x00	; 0
    2c7a:	0f 5f       	subi	r16, 0xFF	; 255
    2c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c7e:	21 e0       	ldi	r18, 0x01	; 1
    2c80:	30 e0       	ldi	r19, 0x00	; 0
    2c82:	81 11       	cpse	r24, r1
    2c84:	93 c1       	rjmp	.+806    	; 0x2fac <uECC_sign_with_k+0x496>
    2c86:	22 0f       	add	r18, r18
    2c88:	33 1f       	adc	r19, r19
    2c8a:	e1 ec       	ldi	r30, 0xC1	; 193
    2c8c:	f0 e0       	ldi	r31, 0x00	; 0
    2c8e:	ec 0f       	add	r30, r28
    2c90:	fd 1f       	adc	r31, r29
    2c92:	e2 0f       	add	r30, r18
    2c94:	f3 1f       	adc	r31, r19
    2c96:	40 81       	ld	r20, Z
    2c98:	51 81       	ldd	r21, Z+1	; 0x01
    2c9a:	71 01       	movw	r14, r2
    2c9c:	20 e0       	ldi	r18, 0x00	; 0
    2c9e:	30 e0       	ldi	r19, 0x00	; 0
    2ca0:	b1 01       	movw	r22, r2
    2ca2:	6c 5b       	subi	r22, 0xBC	; 188
    2ca4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	8f 5b       	subi	r24, 0xBF	; 191
    2caa:	9f 4f       	sbci	r25, 0xFF	; 255
    2cac:	bb dc       	rcall	.-1674   	; 0x2624 <EccPoint_mult>
    2cae:	fe 01       	movw	r30, r28
    2cb0:	ef 5b       	subi	r30, 0xBF	; 191
    2cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb4:	df 01       	movw	r26, r30
    2cb6:	a4 0d       	add	r26, r4
    2cb8:	b5 1d       	adc	r27, r5
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	91 91       	ld	r25, Z+
    2cbe:	89 2b       	or	r24, r25
    2cc0:	ea 17       	cp	r30, r26
    2cc2:	fb 07       	cpc	r31, r27
    2cc4:	d9 f7       	brne	.-10     	; 0x2cbc <uECC_sign_with_k+0x1a6>
    2cc6:	88 23       	and	r24, r24
    2cc8:	09 f4       	brne	.+2      	; 0x2ccc <uECC_sign_with_k+0x1b6>
    2cca:	6a cf       	rjmp	.-300    	; 0x2ba0 <uECC_sign_with_k+0x8a>
    2ccc:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <__data_end>
    2cd0:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <__data_end+0x1>
    2cd4:	89 2b       	or	r24, r25
    2cd6:	09 f4       	brne	.+2      	; 0x2cda <uECC_sign_with_k+0x1c4>
    2cd8:	6f c1       	rjmp	.+734    	; 0x2fb8 <uECC_sign_with_k+0x4a2>
    2cda:	cb 53       	subi	r28, 0x3B	; 59
    2cdc:	df 4f       	sbci	r29, 0xFF	; 255
    2cde:	48 81       	ld	r20, Y
    2ce0:	c5 5c       	subi	r28, 0xC5	; 197
    2ce2:	d0 40       	sbci	r29, 0x00	; 0
    2ce4:	c7 53       	subi	r28, 0x37	; 55
    2ce6:	df 4f       	sbci	r29, 0xFF	; 255
    2ce8:	68 81       	ld	r22, Y
    2cea:	79 81       	ldd	r23, Y+1	; 0x01
    2cec:	c9 5c       	subi	r28, 0xC9	; 201
    2cee:	d0 40       	sbci	r29, 0x00	; 0
    2cf0:	c5 01       	movw	r24, r10
    2cf2:	c9 d9       	rcall	.-3182   	; 0x2086 <uECC_generate_random_int>
    2cf4:	89 2b       	or	r24, r25
    2cf6:	09 f4       	brne	.+2      	; 0x2cfa <uECC_sign_with_k+0x1e4>
    2cf8:	53 cf       	rjmp	.-346    	; 0x2ba0 <uECC_sign_with_k+0x8a>
    2cfa:	cb 53       	subi	r28, 0x3B	; 59
    2cfc:	df 4f       	sbci	r29, 0xFF	; 255
    2cfe:	28 81       	ld	r18, Y
    2d00:	c5 5c       	subi	r28, 0xC5	; 197
    2d02:	d0 40       	sbci	r29, 0x00	; 0
    2d04:	a5 01       	movw	r20, r10
    2d06:	b4 01       	movw	r22, r8
    2d08:	ce 01       	movw	r24, r28
    2d0a:	01 96       	adiw	r24, 0x01	; 1
    2d0c:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2d10:	cb 53       	subi	r28, 0x3B	; 59
    2d12:	df 4f       	sbci	r29, 0xFF	; 255
    2d14:	28 81       	ld	r18, Y
    2d16:	c5 5c       	subi	r28, 0xC5	; 197
    2d18:	d0 40       	sbci	r29, 0x00	; 0
    2d1a:	c7 53       	subi	r28, 0x37	; 55
    2d1c:	df 4f       	sbci	r29, 0xFF	; 255
    2d1e:	48 81       	ld	r20, Y
    2d20:	59 81       	ldd	r21, Y+1	; 0x01
    2d22:	c9 5c       	subi	r28, 0xC9	; 201
    2d24:	d0 40       	sbci	r29, 0x00	; 0
    2d26:	be 01       	movw	r22, r28
    2d28:	6f 5f       	subi	r22, 0xFF	; 255
    2d2a:	7f 4f       	sbci	r23, 0xFF	; 255
    2d2c:	c4 01       	movw	r24, r8
    2d2e:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <uECC_vli_mmod>
    2d32:	cb 53       	subi	r28, 0x3B	; 59
    2d34:	df 4f       	sbci	r29, 0xFF	; 255
    2d36:	28 81       	ld	r18, Y
    2d38:	c5 5c       	subi	r28, 0xC5	; 197
    2d3a:	d0 40       	sbci	r29, 0x00	; 0
    2d3c:	c7 53       	subi	r28, 0x37	; 55
    2d3e:	df 4f       	sbci	r29, 0xFF	; 255
    2d40:	48 81       	ld	r20, Y
    2d42:	59 81       	ldd	r21, Y+1	; 0x01
    2d44:	c9 5c       	subi	r28, 0xC9	; 201
    2d46:	d0 40       	sbci	r29, 0x00	; 0
    2d48:	b4 01       	movw	r22, r8
    2d4a:	c4 01       	movw	r24, r8
    2d4c:	01 db       	rcall	.-2558   	; 0x2350 <uECC_vli_modInv>
    2d4e:	cb 53       	subi	r28, 0x3B	; 59
    2d50:	df 4f       	sbci	r29, 0xFF	; 255
    2d52:	28 81       	ld	r18, Y
    2d54:	c5 5c       	subi	r28, 0xC5	; 197
    2d56:	d0 40       	sbci	r29, 0x00	; 0
    2d58:	a5 01       	movw	r20, r10
    2d5a:	b4 01       	movw	r22, r8
    2d5c:	ce 01       	movw	r24, r28
    2d5e:	01 96       	adiw	r24, 0x01	; 1
    2d60:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2d64:	cb 53       	subi	r28, 0x3B	; 59
    2d66:	df 4f       	sbci	r29, 0xFF	; 255
    2d68:	28 81       	ld	r18, Y
    2d6a:	c5 5c       	subi	r28, 0xC5	; 197
    2d6c:	d0 40       	sbci	r29, 0x00	; 0
    2d6e:	c7 53       	subi	r28, 0x37	; 55
    2d70:	df 4f       	sbci	r29, 0xFF	; 255
    2d72:	48 81       	ld	r20, Y
    2d74:	59 81       	ldd	r21, Y+1	; 0x01
    2d76:	c9 5c       	subi	r28, 0xC9	; 201
    2d78:	d0 40       	sbci	r29, 0x00	; 0
    2d7a:	be 01       	movw	r22, r28
    2d7c:	6f 5f       	subi	r22, 0xFF	; 255
    2d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d80:	c4 01       	movw	r24, r8
    2d82:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <uECC_vli_mmod>
    2d86:	f1 01       	movw	r30, r2
    2d88:	21 81       	ldd	r18, Z+1	; 0x01
    2d8a:	02 2e       	mov	r0, r18
    2d8c:	00 0c       	add	r0, r0
    2d8e:	33 0b       	sbc	r19, r19
    2d90:	12 16       	cp	r1, r18
    2d92:	13 06       	cpc	r1, r19
    2d94:	34 f5       	brge	.+76     	; 0x2de2 <uECC_sign_with_k+0x2cc>
    2d96:	a9 01       	movw	r20, r18
    2d98:	41 50       	subi	r20, 0x01	; 1
    2d9a:	51 09       	sbc	r21, r1
    2d9c:	e0 e0       	ldi	r30, 0x00	; 0
    2d9e:	f0 e0       	ldi	r31, 0x00	; 0
    2da0:	60 e0       	ldi	r22, 0x00	; 0
    2da2:	80 e0       	ldi	r24, 0x00	; 0
    2da4:	90 e0       	ldi	r25, 0x00	; 0
    2da6:	c5 53       	subi	r28, 0x35	; 53
    2da8:	df 4f       	sbci	r29, 0xFF	; 255
    2daa:	a8 81       	ld	r26, Y
    2dac:	b9 81       	ldd	r27, Y+1	; 0x01
    2dae:	cb 5c       	subi	r28, 0xCB	; 203
    2db0:	d0 40       	sbci	r29, 0x00	; 0
    2db2:	8a 0f       	add	r24, r26
    2db4:	9b 1f       	adc	r25, r27
    2db6:	8a 01       	movw	r16, r20
    2db8:	0e 1b       	sub	r16, r30
    2dba:	1f 0b       	sbc	r17, r31
    2dbc:	f8 01       	movw	r30, r16
    2dbe:	01 e4       	ldi	r16, 0x41	; 65
    2dc0:	10 e0       	ldi	r17, 0x00	; 0
    2dc2:	0c 0f       	add	r16, r28
    2dc4:	1d 1f       	adc	r17, r29
    2dc6:	e0 0f       	add	r30, r16
    2dc8:	f1 1f       	adc	r31, r17
    2dca:	70 81       	ld	r23, Z
    2dcc:	fc 01       	movw	r30, r24
    2dce:	70 83       	st	Z, r23
    2dd0:	6f 5f       	subi	r22, 0xFF	; 255
    2dd2:	86 2f       	mov	r24, r22
    2dd4:	06 2e       	mov	r0, r22
    2dd6:	00 0c       	add	r0, r0
    2dd8:	99 0b       	sbc	r25, r25
    2dda:	fc 01       	movw	r30, r24
    2ddc:	82 17       	cp	r24, r18
    2dde:	93 07       	cpc	r25, r19
    2de0:	44 f3       	brlt	.-48     	; 0x2db2 <uECC_sign_with_k+0x29c>
    2de2:	f1 01       	movw	r30, r2
    2de4:	82 81       	ldd	r24, Z+2	; 0x02
    2de6:	93 81       	ldd	r25, Z+3	; 0x03
    2de8:	9c 01       	movw	r18, r24
    2dea:	29 5f       	subi	r18, 0xF9	; 249
    2dec:	3f 4f       	sbci	r19, 0xFF	; 255
    2dee:	37 fd       	sbrc	r19, 7
    2df0:	e0 c0       	rjmp	.+448    	; 0x2fb2 <uECC_sign_with_k+0x49c>
    2df2:	35 95       	asr	r19
    2df4:	27 95       	ror	r18
    2df6:	35 95       	asr	r19
    2df8:	27 95       	ror	r18
    2dfa:	35 95       	asr	r19
    2dfc:	27 95       	ror	r18
    2dfe:	12 16       	cp	r1, r18
    2e00:	13 06       	cpc	r1, r19
    2e02:	14 f5       	brge	.+68     	; 0x2e48 <uECC_sign_with_k+0x332>
    2e04:	a9 01       	movw	r20, r18
    2e06:	41 50       	subi	r20, 0x01	; 1
    2e08:	51 09       	sbc	r21, r1
    2e0a:	e0 e0       	ldi	r30, 0x00	; 0
    2e0c:	f0 e0       	ldi	r31, 0x00	; 0
    2e0e:	60 e0       	ldi	r22, 0x00	; 0
    2e10:	80 e0       	ldi	r24, 0x00	; 0
    2e12:	90 e0       	ldi	r25, 0x00	; 0
    2e14:	c3 53       	subi	r28, 0x33	; 51
    2e16:	df 4f       	sbci	r29, 0xFF	; 255
    2e18:	a8 81       	ld	r26, Y
    2e1a:	b9 81       	ldd	r27, Y+1	; 0x01
    2e1c:	cd 5c       	subi	r28, 0xCD	; 205
    2e1e:	d0 40       	sbci	r29, 0x00	; 0
    2e20:	8a 0d       	add	r24, r10
    2e22:	9b 1d       	adc	r25, r11
    2e24:	8a 01       	movw	r16, r20
    2e26:	0e 1b       	sub	r16, r30
    2e28:	1f 0b       	sbc	r17, r31
    2e2a:	f8 01       	movw	r30, r16
    2e2c:	ea 0f       	add	r30, r26
    2e2e:	fb 1f       	adc	r31, r27
    2e30:	70 81       	ld	r23, Z
    2e32:	fc 01       	movw	r30, r24
    2e34:	70 83       	st	Z, r23
    2e36:	6f 5f       	subi	r22, 0xFF	; 255
    2e38:	86 2f       	mov	r24, r22
    2e3a:	06 2e       	mov	r0, r22
    2e3c:	00 0c       	add	r0, r0
    2e3e:	99 0b       	sbc	r25, r25
    2e40:	fc 01       	movw	r30, r24
    2e42:	82 17       	cp	r24, r18
    2e44:	93 07       	cpc	r25, r19
    2e46:	64 f3       	brlt	.-40     	; 0x2e20 <uECC_sign_with_k+0x30a>
    2e48:	f3 01       	movw	r30, r6
    2e4a:	cb 53       	subi	r28, 0x3B	; 59
    2e4c:	df 4f       	sbci	r29, 0xFF	; 255
    2e4e:	08 81       	ld	r16, Y
    2e50:	c5 5c       	subi	r28, 0xC5	; 197
    2e52:	d0 40       	sbci	r29, 0x00	; 0
    2e54:	e0 0f       	add	r30, r16
    2e56:	f1 1d       	adc	r31, r1
    2e58:	07 fd       	sbrc	r16, 7
    2e5a:	fa 95       	dec	r31
    2e5c:	31 97       	sbiw	r30, 0x01	; 1
    2e5e:	10 82       	st	Z, r1
    2e60:	4d 2d       	mov	r20, r13
    2e62:	be 01       	movw	r22, r28
    2e64:	6f 5b       	subi	r22, 0xBF	; 191
    2e66:	7f 4f       	sbci	r23, 0xFF	; 255
    2e68:	c3 01       	movw	r24, r6
    2e6a:	0e 94 00 04 	call	0x800	; 0x800 <uECC_vli_set>
    2e6e:	cb 53       	subi	r28, 0x3B	; 59
    2e70:	df 4f       	sbci	r29, 0xFF	; 255
    2e72:	28 81       	ld	r18, Y
    2e74:	c5 5c       	subi	r28, 0xC5	; 197
    2e76:	d0 40       	sbci	r29, 0x00	; 0
    2e78:	a3 01       	movw	r20, r6
    2e7a:	b5 01       	movw	r22, r10
    2e7c:	ce 01       	movw	r24, r28
    2e7e:	01 96       	adiw	r24, 0x01	; 1
    2e80:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2e84:	cb 53       	subi	r28, 0x3B	; 59
    2e86:	df 4f       	sbci	r29, 0xFF	; 255
    2e88:	28 81       	ld	r18, Y
    2e8a:	c5 5c       	subi	r28, 0xC5	; 197
    2e8c:	d0 40       	sbci	r29, 0x00	; 0
    2e8e:	c7 53       	subi	r28, 0x37	; 55
    2e90:	df 4f       	sbci	r29, 0xFF	; 255
    2e92:	48 81       	ld	r20, Y
    2e94:	59 81       	ldd	r21, Y+1	; 0x01
    2e96:	c9 5c       	subi	r28, 0xC9	; 201
    2e98:	d0 40       	sbci	r29, 0x00	; 0
    2e9a:	be 01       	movw	r22, r28
    2e9c:	6f 5f       	subi	r22, 0xFF	; 255
    2e9e:	7f 4f       	sbci	r23, 0xFF	; 255
    2ea0:	c3 01       	movw	r24, r6
    2ea2:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <uECC_vli_mmod>
    2ea6:	91 01       	movw	r18, r2
    2ea8:	cf 52       	subi	r28, 0x2F	; 47
    2eaa:	df 4f       	sbci	r29, 0xFF	; 255
    2eac:	48 81       	ld	r20, Y
    2eae:	59 81       	ldd	r21, Y+1	; 0x01
    2eb0:	c1 5d       	subi	r28, 0xD1	; 209
    2eb2:	d0 40       	sbci	r29, 0x00	; 0
    2eb4:	c1 53       	subi	r28, 0x31	; 49
    2eb6:	df 4f       	sbci	r29, 0xFF	; 255
    2eb8:	68 81       	ld	r22, Y
    2eba:	79 81       	ldd	r23, Y+1	; 0x01
    2ebc:	cf 5c       	subi	r28, 0xCF	; 207
    2ebe:	d0 40       	sbci	r29, 0x00	; 0
    2ec0:	c5 01       	movw	r24, r10
    2ec2:	59 d9       	rcall	.-3406   	; 0x2176 <bits2int>
    2ec4:	cb 53       	subi	r28, 0x3B	; 59
    2ec6:	df 4f       	sbci	r29, 0xFF	; 255
    2ec8:	08 81       	ld	r16, Y
    2eca:	c5 5c       	subi	r28, 0xC5	; 197
    2ecc:	d0 40       	sbci	r29, 0x00	; 0
    2ece:	c7 53       	subi	r28, 0x37	; 55
    2ed0:	df 4f       	sbci	r29, 0xFF	; 255
    2ed2:	28 81       	ld	r18, Y
    2ed4:	39 81       	ldd	r19, Y+1	; 0x01
    2ed6:	c9 5c       	subi	r28, 0xC9	; 201
    2ed8:	d0 40       	sbci	r29, 0x00	; 0
    2eda:	a3 01       	movw	r20, r6
    2edc:	b5 01       	movw	r22, r10
    2ede:	c3 01       	movw	r24, r6
    2ee0:	0e 94 0d 07 	call	0xe1a	; 0xe1a <uECC_vli_modAdd>
    2ee4:	cb 53       	subi	r28, 0x3B	; 59
    2ee6:	df 4f       	sbci	r29, 0xFF	; 255
    2ee8:	28 81       	ld	r18, Y
    2eea:	c5 5c       	subi	r28, 0xC5	; 197
    2eec:	d0 40       	sbci	r29, 0x00	; 0
    2eee:	a4 01       	movw	r20, r8
    2ef0:	b3 01       	movw	r22, r6
    2ef2:	ce 01       	movw	r24, r28
    2ef4:	01 96       	adiw	r24, 0x01	; 1
    2ef6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <uECC_vli_mult>
    2efa:	cb 53       	subi	r28, 0x3B	; 59
    2efc:	df 4f       	sbci	r29, 0xFF	; 255
    2efe:	28 81       	ld	r18, Y
    2f00:	c5 5c       	subi	r28, 0xC5	; 197
    2f02:	d0 40       	sbci	r29, 0x00	; 0
    2f04:	c7 53       	subi	r28, 0x37	; 55
    2f06:	df 4f       	sbci	r29, 0xFF	; 255
    2f08:	48 81       	ld	r20, Y
    2f0a:	59 81       	ldd	r21, Y+1	; 0x01
    2f0c:	c9 5c       	subi	r28, 0xC9	; 201
    2f0e:	d0 40       	sbci	r29, 0x00	; 0
    2f10:	be 01       	movw	r22, r28
    2f12:	6f 5f       	subi	r22, 0xFF	; 255
    2f14:	7f 4f       	sbci	r23, 0xFF	; 255
    2f16:	c3 01       	movw	r24, r6
    2f18:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <uECC_vli_mmod>
    2f1c:	cb 53       	subi	r28, 0x3B	; 59
    2f1e:	df 4f       	sbci	r29, 0xFF	; 255
    2f20:	68 81       	ld	r22, Y
    2f22:	c5 5c       	subi	r28, 0xC5	; 197
    2f24:	d0 40       	sbci	r29, 0x00	; 0
    2f26:	c3 01       	movw	r24, r6
    2f28:	0e 94 9a 06 	call	0xd34	; 0xd34 <uECC_vli_numBits>
    2f2c:	f1 01       	movw	r30, r2
    2f2e:	61 81       	ldd	r22, Z+1	; 0x01
    2f30:	06 2e       	mov	r0, r22
    2f32:	00 0c       	add	r0, r0
    2f34:	77 0b       	sbc	r23, r23
    2f36:	9b 01       	movw	r18, r22
    2f38:	22 0f       	add	r18, r18
    2f3a:	33 1f       	adc	r19, r19
    2f3c:	22 0f       	add	r18, r18
    2f3e:	33 1f       	adc	r19, r19
    2f40:	22 0f       	add	r18, r18
    2f42:	33 1f       	adc	r19, r19
    2f44:	28 17       	cp	r18, r24
    2f46:	39 07       	cpc	r19, r25
    2f48:	0c f4       	brge	.+2      	; 0x2f4c <uECC_sign_with_k+0x436>
    2f4a:	2a ce       	rjmp	.-940    	; 0x2ba0 <uECC_sign_with_k+0x8a>
    2f4c:	16 16       	cp	r1, r22
    2f4e:	17 06       	cpc	r1, r23
    2f50:	14 f5       	brge	.+68     	; 0x2f96 <uECC_sign_with_k+0x480>
    2f52:	db 01       	movw	r26, r22
    2f54:	11 97       	sbiw	r26, 0x01	; 1
    2f56:	40 e0       	ldi	r20, 0x00	; 0
    2f58:	50 e0       	ldi	r21, 0x00	; 0
    2f5a:	20 e0       	ldi	r18, 0x00	; 0
    2f5c:	80 e0       	ldi	r24, 0x00	; 0
    2f5e:	90 e0       	ldi	r25, 0x00	; 0
    2f60:	c5 53       	subi	r28, 0x35	; 53
    2f62:	df 4f       	sbci	r29, 0xFF	; 255
    2f64:	08 81       	ld	r16, Y
    2f66:	19 81       	ldd	r17, Y+1	; 0x01
    2f68:	cb 5c       	subi	r28, 0xCB	; 203
    2f6a:	d0 40       	sbci	r29, 0x00	; 0
    2f6c:	06 0f       	add	r16, r22
    2f6e:	17 1f       	adc	r17, r23
    2f70:	80 0f       	add	r24, r16
    2f72:	91 1f       	adc	r25, r17
    2f74:	fd 01       	movw	r30, r26
    2f76:	e4 1b       	sub	r30, r20
    2f78:	f5 0b       	sbc	r31, r21
    2f7a:	e6 0d       	add	r30, r6
    2f7c:	f7 1d       	adc	r31, r7
    2f7e:	30 81       	ld	r19, Z
    2f80:	fc 01       	movw	r30, r24
    2f82:	30 83       	st	Z, r19
    2f84:	2f 5f       	subi	r18, 0xFF	; 255
    2f86:	82 2f       	mov	r24, r18
    2f88:	02 2e       	mov	r0, r18
    2f8a:	00 0c       	add	r0, r0
    2f8c:	99 0b       	sbc	r25, r25
    2f8e:	ac 01       	movw	r20, r24
    2f90:	86 17       	cp	r24, r22
    2f92:	97 07       	cpc	r25, r23
    2f94:	6c f3       	brlt	.-38     	; 0x2f70 <uECC_sign_with_k+0x45a>
    2f96:	81 e0       	ldi	r24, 0x01	; 1
    2f98:	90 e0       	ldi	r25, 0x00	; 0
    2f9a:	04 ce       	rjmp	.-1016   	; 0x2ba4 <uECC_sign_with_k+0x8e>
    2f9c:	c9 53       	subi	r28, 0x39	; 57
    2f9e:	df 4f       	sbci	r29, 0xFF	; 255
    2fa0:	e8 81       	ld	r30, Y
    2fa2:	f9 81       	ldd	r31, Y+1	; 0x01
    2fa4:	c7 5c       	subi	r28, 0xC7	; 199
    2fa6:	d0 40       	sbci	r29, 0x00	; 0
    2fa8:	3e 96       	adiw	r30, 0x0e	; 14
    2faa:	22 ce       	rjmp	.-956    	; 0x2bf0 <uECC_sign_with_k+0xda>
    2fac:	20 e0       	ldi	r18, 0x00	; 0
    2fae:	30 e0       	ldi	r19, 0x00	; 0
    2fb0:	6a ce       	rjmp	.-812    	; 0x2c86 <uECC_sign_with_k+0x170>
    2fb2:	29 5f       	subi	r18, 0xF9	; 249
    2fb4:	3f 4f       	sbci	r19, 0xFF	; 255
    2fb6:	1d cf       	rjmp	.-454    	; 0x2df2 <uECC_sign_with_k+0x2dc>
    2fb8:	cb 53       	subi	r28, 0x3B	; 59
    2fba:	df 4f       	sbci	r29, 0xFF	; 255
    2fbc:	68 81       	ld	r22, Y
    2fbe:	c5 5c       	subi	r28, 0xC5	; 197
    2fc0:	d0 40       	sbci	r29, 0x00	; 0
    2fc2:	c5 01       	movw	r24, r10
    2fc4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <uECC_vli_clear>
    2fc8:	81 e0       	ldi	r24, 0x01	; 1
    2fca:	f5 01       	movw	r30, r10
    2fcc:	80 83       	st	Z, r24
    2fce:	95 ce       	rjmp	.-726    	; 0x2cfa <uECC_sign_with_k+0x1e4>

00002fd0 <uECC_set_rng>:
    2fd0:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <__data_end+0x1>
    2fd4:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <__data_end>
    2fd8:	08 95       	ret

00002fda <uECC_secp256r1>:
    2fda:	8a e0       	ldi	r24, 0x0A	; 10
    2fdc:	91 e0       	ldi	r25, 0x01	; 1
    2fde:	08 95       	ret

00002fe0 <uECC_shared_secret>:
    2fe0:	2f 92       	push	r2
    2fe2:	3f 92       	push	r3
    2fe4:	4f 92       	push	r4
    2fe6:	5f 92       	push	r5
    2fe8:	6f 92       	push	r6
    2fea:	7f 92       	push	r7
    2fec:	8f 92       	push	r8
    2fee:	9f 92       	push	r9
    2ff0:	af 92       	push	r10
    2ff2:	bf 92       	push	r11
    2ff4:	cf 92       	push	r12
    2ff6:	df 92       	push	r13
    2ff8:	ef 92       	push	r14
    2ffa:	ff 92       	push	r15
    2ffc:	0f 93       	push	r16
    2ffe:	1f 93       	push	r17
    3000:	cf 93       	push	r28
    3002:	df 93       	push	r29
    3004:	cd b7       	in	r28, 0x3d	; 61
    3006:	de b7       	in	r29, 0x3e	; 62
    3008:	c4 58       	subi	r28, 0x84	; 132
    300a:	d1 09       	sbc	r29, r1
    300c:	0f b6       	in	r0, 0x3f	; 63
    300e:	f8 94       	cli
    3010:	de bf       	out	0x3e, r29	; 62
    3012:	0f be       	out	0x3f, r0	; 63
    3014:	cd bf       	out	0x3d, r28	; 61
    3016:	3a 01       	movw	r6, r20
    3018:	49 01       	movw	r8, r18
    301a:	fe 01       	movw	r30, r28
    301c:	ef 59       	subi	r30, 0x9F	; 159
    301e:	ff 4f       	sbci	r31, 0xFF	; 255
    3020:	cf 57       	subi	r28, 0x7F	; 127
    3022:	df 4f       	sbci	r29, 0xFF	; 255
    3024:	f9 83       	std	Y+1, r31	; 0x01
    3026:	e8 83       	st	Y, r30
    3028:	c1 58       	subi	r28, 0x81	; 129
    302a:	d0 40       	sbci	r29, 0x00	; 0
    302c:	7e 01       	movw	r14, r28
    302e:	21 e4       	ldi	r18, 0x41	; 65
    3030:	e2 0e       	add	r14, r18
    3032:	f1 1c       	adc	r15, r1
    3034:	cd 57       	subi	r28, 0x7D	; 125
    3036:	df 4f       	sbci	r29, 0xFF	; 255
    3038:	f9 82       	std	Y+1, r15	; 0x01
    303a:	e8 82       	st	Y, r14
    303c:	c3 58       	subi	r28, 0x83	; 131
    303e:	d0 40       	sbci	r29, 0x00	; 0
    3040:	d4 01       	movw	r26, r8
    3042:	0c 91       	ld	r16, X
    3044:	11 96       	adiw	r26, 0x01	; 1
    3046:	ac 90       	ld	r10, X
    3048:	11 97       	sbiw	r26, 0x01	; 1
    304a:	12 96       	adiw	r26, 0x02	; 2
    304c:	2d 91       	ld	r18, X+
    304e:	3c 91       	ld	r19, X
    3050:	13 97       	sbiw	r26, 0x03	; 3
    3052:	d9 01       	movw	r26, r18
    3054:	17 96       	adiw	r26, 0x07	; 7
    3056:	b7 fd       	sbrc	r27, 7
    3058:	02 c1       	rjmp	.+516    	; 0x325e <uECC_shared_secret+0x27e>
    305a:	1d 01       	movw	r2, r26
    305c:	35 94       	asr	r3
    305e:	27 94       	ror	r2
    3060:	35 94       	asr	r3
    3062:	27 94       	ror	r2
    3064:	35 94       	asr	r3
    3066:	27 94       	ror	r2
    3068:	12 14       	cp	r1, r2
    306a:	13 04       	cpc	r1, r3
    306c:	f4 f4       	brge	.+60     	; 0x30aa <uECC_shared_secret+0xca>
    306e:	61 01       	movw	r12, r2
    3070:	b1 e0       	ldi	r27, 0x01	; 1
    3072:	cb 1a       	sub	r12, r27
    3074:	d1 08       	sbc	r13, r1
    3076:	40 e0       	ldi	r20, 0x00	; 0
    3078:	50 e0       	ldi	r21, 0x00	; 0
    307a:	10 e0       	ldi	r17, 0x00	; 0
    307c:	20 e0       	ldi	r18, 0x00	; 0
    307e:	30 e0       	ldi	r19, 0x00	; 0
    3080:	2e 0f       	add	r18, r30
    3082:	3f 1f       	adc	r19, r31
    3084:	26 01       	movw	r4, r12
    3086:	44 1a       	sub	r4, r20
    3088:	55 0a       	sbc	r5, r21
    308a:	a2 01       	movw	r20, r4
    308c:	46 0f       	add	r20, r22
    308e:	57 1f       	adc	r21, r23
    3090:	da 01       	movw	r26, r20
    3092:	4c 91       	ld	r20, X
    3094:	d9 01       	movw	r26, r18
    3096:	4c 93       	st	X, r20
    3098:	1f 5f       	subi	r17, 0xFF	; 255
    309a:	21 2f       	mov	r18, r17
    309c:	01 2e       	mov	r0, r17
    309e:	00 0c       	add	r0, r0
    30a0:	33 0b       	sbc	r19, r19
    30a2:	a9 01       	movw	r20, r18
    30a4:	22 15       	cp	r18, r2
    30a6:	33 05       	cpc	r19, r3
    30a8:	5c f3       	brlt	.-42     	; 0x3080 <uECC_shared_secret+0xa0>
    30aa:	0a 2c       	mov	r0, r10
    30ac:	00 0c       	add	r0, r0
    30ae:	bb 08       	sbc	r11, r11
    30b0:	1a 14       	cp	r1, r10
    30b2:	1b 04       	cpc	r1, r11
    30b4:	e4 f5       	brge	.+120    	; 0x312e <uECC_shared_secret+0x14e>
    30b6:	a5 01       	movw	r20, r10
    30b8:	41 50       	subi	r20, 0x01	; 1
    30ba:	51 09       	sbc	r21, r1
    30bc:	60 e0       	ldi	r22, 0x00	; 0
    30be:	70 e0       	ldi	r23, 0x00	; 0
    30c0:	10 e0       	ldi	r17, 0x00	; 0
    30c2:	20 e0       	ldi	r18, 0x00	; 0
    30c4:	30 e0       	ldi	r19, 0x00	; 0
    30c6:	de 01       	movw	r26, r28
    30c8:	11 96       	adiw	r26, 0x01	; 1
    30ca:	6d 01       	movw	r12, r26
    30cc:	2c 0d       	add	r18, r12
    30ce:	3d 1d       	adc	r19, r13
    30d0:	da 01       	movw	r26, r20
    30d2:	a6 1b       	sub	r26, r22
    30d4:	b7 0b       	sbc	r27, r23
    30d6:	a8 0f       	add	r26, r24
    30d8:	b9 1f       	adc	r27, r25
    30da:	6c 91       	ld	r22, X
    30dc:	d9 01       	movw	r26, r18
    30de:	6c 93       	st	X, r22
    30e0:	1f 5f       	subi	r17, 0xFF	; 255
    30e2:	21 2f       	mov	r18, r17
    30e4:	01 2e       	mov	r0, r17
    30e6:	00 0c       	add	r0, r0
    30e8:	33 0b       	sbc	r19, r19
    30ea:	b9 01       	movw	r22, r18
    30ec:	2a 15       	cp	r18, r10
    30ee:	3b 05       	cpc	r19, r11
    30f0:	6c f3       	brlt	.-38     	; 0x30cc <uECC_shared_secret+0xec>
    30f2:	60 e0       	ldi	r22, 0x00	; 0
    30f4:	70 e0       	ldi	r23, 0x00	; 0
    30f6:	10 e0       	ldi	r17, 0x00	; 0
    30f8:	20 e0       	ldi	r18, 0x00	; 0
    30fa:	30 e0       	ldi	r19, 0x00	; 0
    30fc:	8a 0d       	add	r24, r10
    30fe:	9b 1d       	adc	r25, r11
    3100:	c0 0e       	add	r12, r16
    3102:	d1 1c       	adc	r13, r1
    3104:	07 fd       	sbrc	r16, 7
    3106:	da 94       	dec	r13
    3108:	2c 0d       	add	r18, r12
    310a:	3d 1d       	adc	r19, r13
    310c:	da 01       	movw	r26, r20
    310e:	a6 1b       	sub	r26, r22
    3110:	b7 0b       	sbc	r27, r23
    3112:	a8 0f       	add	r26, r24
    3114:	b9 1f       	adc	r27, r25
    3116:	6c 91       	ld	r22, X
    3118:	d9 01       	movw	r26, r18
    311a:	6c 93       	st	X, r22
    311c:	1f 5f       	subi	r17, 0xFF	; 255
    311e:	21 2f       	mov	r18, r17
    3120:	01 2e       	mov	r0, r17
    3122:	00 0c       	add	r0, r0
    3124:	33 0b       	sbc	r19, r19
    3126:	b9 01       	movw	r22, r18
    3128:	2a 15       	cp	r18, r10
    312a:	3b 05       	cpc	r19, r11
    312c:	6c f3       	brlt	.-38     	; 0x3108 <uECC_shared_secret+0x128>
    312e:	94 01       	movw	r18, r8
    3130:	a7 01       	movw	r20, r14
    3132:	bf 01       	movw	r22, r30
    3134:	cf 01       	movw	r24, r30
    3136:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <regularize_k>
    313a:	18 2f       	mov	r17, r24
    313c:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <__data_end>
    3140:	90 91 bf 03 	lds	r25, 0x03BF	; 0x8003bf <__data_end+0x1>
    3144:	89 2b       	or	r24, r25
    3146:	09 f4       	brne	.+2      	; 0x314a <uECC_shared_secret+0x16a>
    3148:	8c c0       	rjmp	.+280    	; 0x3262 <uECC_shared_secret+0x282>
    314a:	e1 2f       	mov	r30, r17
    314c:	f0 e0       	ldi	r31, 0x00	; 0
    314e:	ee 0f       	add	r30, r30
    3150:	ff 1f       	adc	r31, r31
    3152:	61 e8       	ldi	r22, 0x81	; 129
    3154:	46 2e       	mov	r4, r22
    3156:	51 2c       	mov	r5, r1
    3158:	4c 0e       	add	r4, r28
    315a:	5d 1e       	adc	r5, r29
    315c:	e4 0d       	add	r30, r4
    315e:	f5 1d       	adc	r31, r5
    3160:	c0 80       	ld	r12, Z
    3162:	d1 80       	ldd	r13, Z+1	; 0x01
    3164:	40 2f       	mov	r20, r16
    3166:	b4 01       	movw	r22, r8
    3168:	6c 5f       	subi	r22, 0xFC	; 252
    316a:	7f 4f       	sbci	r23, 0xFF	; 255
    316c:	c6 01       	movw	r24, r12
    316e:	0e 94 43 10 	call	0x2086	; 0x2086 <uECC_generate_random_int>
    3172:	00 97       	sbiw	r24, 0x00	; 0
    3174:	09 f4       	brne	.+2      	; 0x3178 <uECC_shared_secret+0x198>
    3176:	54 c0       	rjmp	.+168    	; 0x3220 <uECC_shared_secret+0x240>
    3178:	d4 01       	movw	r26, r8
    317a:	12 96       	adiw	r26, 0x02	; 2
    317c:	2d 91       	ld	r18, X+
    317e:	3c 91       	ld	r19, X
    3180:	13 97       	sbiw	r26, 0x03	; 3
    3182:	2f 5f       	subi	r18, 0xFF	; 255
    3184:	3f 4f       	sbci	r19, 0xFF	; 255
    3186:	81 e0       	ldi	r24, 0x01	; 1
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	11 11       	cpse	r17, r1
    318c:	63 c0       	rjmp	.+198    	; 0x3254 <uECC_shared_secret+0x274>
    318e:	88 0f       	add	r24, r24
    3190:	99 1f       	adc	r25, r25
    3192:	e1 e8       	ldi	r30, 0x81	; 129
    3194:	f0 e0       	ldi	r31, 0x00	; 0
    3196:	ec 0f       	add	r30, r28
    3198:	fd 1f       	adc	r31, r29
    319a:	e8 0f       	add	r30, r24
    319c:	f9 1f       	adc	r31, r25
    319e:	40 81       	ld	r20, Z
    31a0:	51 81       	ldd	r21, Z+1	; 0x01
    31a2:	74 01       	movw	r14, r8
    31a4:	89 01       	movw	r16, r18
    31a6:	96 01       	movw	r18, r12
    31a8:	fe 01       	movw	r30, r28
    31aa:	31 96       	adiw	r30, 0x01	; 1
    31ac:	6f 01       	movw	r12, r30
    31ae:	bf 01       	movw	r22, r30
    31b0:	cf 01       	movw	r24, r30
    31b2:	38 da       	rcall	.-2960   	; 0x2624 <EccPoint_mult>
    31b4:	1a 14       	cp	r1, r10
    31b6:	1b 04       	cpc	r1, r11
    31b8:	dc f4       	brge	.+54     	; 0x31f0 <uECC_shared_secret+0x210>
    31ba:	a5 01       	movw	r20, r10
    31bc:	41 50       	subi	r20, 0x01	; 1
    31be:	51 09       	sbc	r21, r1
    31c0:	60 e0       	ldi	r22, 0x00	; 0
    31c2:	70 e0       	ldi	r23, 0x00	; 0
    31c4:	20 e0       	ldi	r18, 0x00	; 0
    31c6:	80 e0       	ldi	r24, 0x00	; 0
    31c8:	90 e0       	ldi	r25, 0x00	; 0
    31ca:	d3 01       	movw	r26, r6
    31cc:	a8 0f       	add	r26, r24
    31ce:	b9 1f       	adc	r27, r25
    31d0:	fa 01       	movw	r30, r20
    31d2:	e6 1b       	sub	r30, r22
    31d4:	f7 0b       	sbc	r31, r23
    31d6:	ec 0d       	add	r30, r12
    31d8:	fd 1d       	adc	r31, r13
    31da:	30 81       	ld	r19, Z
    31dc:	3c 93       	st	X, r19
    31de:	2f 5f       	subi	r18, 0xFF	; 255
    31e0:	82 2f       	mov	r24, r18
    31e2:	02 2e       	mov	r0, r18
    31e4:	00 0c       	add	r0, r0
    31e6:	99 0b       	sbc	r25, r25
    31e8:	bc 01       	movw	r22, r24
    31ea:	8a 15       	cp	r24, r10
    31ec:	9b 05       	cpc	r25, r11
    31ee:	6c f3       	brlt	.-38     	; 0x31ca <uECC_shared_secret+0x1ea>
    31f0:	d4 01       	movw	r26, r8
    31f2:	2c 91       	ld	r18, X
    31f4:	22 0f       	add	r18, r18
    31f6:	12 16       	cp	r1, r18
    31f8:	bc f5       	brge	.+110    	; 0x3268 <uECC_shared_secret+0x288>
    31fa:	f6 01       	movw	r30, r12
    31fc:	21 50       	subi	r18, 0x01	; 1
    31fe:	30 e0       	ldi	r19, 0x00	; 0
    3200:	2f 5f       	subi	r18, 0xFF	; 255
    3202:	3f 4f       	sbci	r19, 0xFF	; 255
    3204:	2c 0d       	add	r18, r12
    3206:	3d 1d       	adc	r19, r13
    3208:	80 e0       	ldi	r24, 0x00	; 0
    320a:	91 91       	ld	r25, Z+
    320c:	89 2b       	or	r24, r25
    320e:	e2 17       	cp	r30, r18
    3210:	f3 07       	cpc	r31, r19
    3212:	d9 f7       	brne	.-10     	; 0x320a <uECC_shared_secret+0x22a>
    3214:	31 e0       	ldi	r19, 0x01	; 1
    3216:	20 e0       	ldi	r18, 0x00	; 0
    3218:	88 23       	and	r24, r24
    321a:	f9 f0       	breq	.+62     	; 0x325a <uECC_shared_secret+0x27a>
    321c:	83 2f       	mov	r24, r19
    321e:	92 2f       	mov	r25, r18
    3220:	cc 57       	subi	r28, 0x7C	; 124
    3222:	df 4f       	sbci	r29, 0xFF	; 255
    3224:	0f b6       	in	r0, 0x3f	; 63
    3226:	f8 94       	cli
    3228:	de bf       	out	0x3e, r29	; 62
    322a:	0f be       	out	0x3f, r0	; 63
    322c:	cd bf       	out	0x3d, r28	; 61
    322e:	df 91       	pop	r29
    3230:	cf 91       	pop	r28
    3232:	1f 91       	pop	r17
    3234:	0f 91       	pop	r16
    3236:	ff 90       	pop	r15
    3238:	ef 90       	pop	r14
    323a:	df 90       	pop	r13
    323c:	cf 90       	pop	r12
    323e:	bf 90       	pop	r11
    3240:	af 90       	pop	r10
    3242:	9f 90       	pop	r9
    3244:	8f 90       	pop	r8
    3246:	7f 90       	pop	r7
    3248:	6f 90       	pop	r6
    324a:	5f 90       	pop	r5
    324c:	4f 90       	pop	r4
    324e:	3f 90       	pop	r3
    3250:	2f 90       	pop	r2
    3252:	08 95       	ret
    3254:	80 e0       	ldi	r24, 0x00	; 0
    3256:	90 e0       	ldi	r25, 0x00	; 0
    3258:	9a cf       	rjmp	.-204    	; 0x318e <uECC_shared_secret+0x1ae>
    325a:	30 e0       	ldi	r19, 0x00	; 0
    325c:	df cf       	rjmp	.-66     	; 0x321c <uECC_shared_secret+0x23c>
    325e:	17 96       	adiw	r26, 0x07	; 7
    3260:	fc ce       	rjmp	.-520    	; 0x305a <uECC_shared_secret+0x7a>
    3262:	c1 2c       	mov	r12, r1
    3264:	d1 2c       	mov	r13, r1
    3266:	88 cf       	rjmp	.-240    	; 0x3178 <uECC_shared_secret+0x198>
    3268:	80 e0       	ldi	r24, 0x00	; 0
    326a:	90 e0       	ldi	r25, 0x00	; 0
    326c:	d9 cf       	rjmp	.-78     	; 0x3220 <uECC_shared_secret+0x240>

0000326e <uECC_sign>:

int uECC_sign(const uint8_t *private_key,
              const uint8_t *message_hash,
              unsigned hash_size,
              uint8_t *signature,
              uECC_Curve curve) {
    326e:	3f 92       	push	r3
    3270:	4f 92       	push	r4
    3272:	5f 92       	push	r5
    3274:	6f 92       	push	r6
    3276:	7f 92       	push	r7
    3278:	8f 92       	push	r8
    327a:	9f 92       	push	r9
    327c:	af 92       	push	r10
    327e:	bf 92       	push	r11
    3280:	cf 92       	push	r12
    3282:	df 92       	push	r13
    3284:	ef 92       	push	r14
    3286:	ff 92       	push	r15
    3288:	0f 93       	push	r16
    328a:	1f 93       	push	r17
    328c:	cf 93       	push	r28
    328e:	df 93       	push	r29
    3290:	cd b7       	in	r28, 0x3d	; 61
    3292:	de b7       	in	r29, 0x3e	; 62
    3294:	a2 97       	sbiw	r28, 0x22	; 34
    3296:	0f b6       	in	r0, 0x3f	; 63
    3298:	f8 94       	cli
    329a:	de bf       	out	0x3e, r29	; 62
    329c:	0f be       	out	0x3f, r0	; 63
    329e:	cd bf       	out	0x3d, r28	; 61
    32a0:	3c 01       	movw	r6, r24
    32a2:	4b 01       	movw	r8, r22
    32a4:	5a a3       	std	Y+34, r21	; 0x22
    32a6:	49 a3       	std	Y+33, r20	; 0x21
    32a8:	29 01       	movw	r4, r18
    32aa:	68 01       	movw	r12, r16
    32ac:	58 01       	movw	r10, r16
    32ae:	84 e2       	ldi	r24, 0x24	; 36
    32b0:	a8 0e       	add	r10, r24
    32b2:	b1 1c       	adc	r11, r1
    32b4:	90 e4       	ldi	r25, 0x40	; 64
    32b6:	39 2e       	mov	r3, r25
    32b8:	1c c0       	rjmp	.+56     	; 0x32f2 <uECC_sign+0x84>
    uECC_word_t k[uECC_MAX_WORDS];
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
        if (!uECC_generate_random_int(k, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
    32ba:	55 95       	asr	r21
    32bc:	47 95       	ror	r20
    32be:	55 95       	asr	r21
    32c0:	47 95       	ror	r20
    32c2:	55 95       	asr	r21
    32c4:	47 95       	ror	r20
    32c6:	b5 01       	movw	r22, r10
    32c8:	ce 01       	movw	r24, r28
    32ca:	01 96       	adiw	r24, 0x01	; 1
    32cc:	0e 94 43 10 	call	0x2086	; 0x2086 <uECC_generate_random_int>
    32d0:	89 2b       	or	r24, r25
    32d2:	d1 f0       	breq	.+52     	; 0x3308 <uECC_sign+0x9a>
            return 0;
        }

        if (uECC_sign_with_k(private_key, message_hash, hash_size, k, signature, curve)) {
    32d4:	76 01       	movw	r14, r12
    32d6:	82 01       	movw	r16, r4
    32d8:	9e 01       	movw	r18, r28
    32da:	2f 5f       	subi	r18, 0xFF	; 255
    32dc:	3f 4f       	sbci	r19, 0xFF	; 255
    32de:	49 a1       	ldd	r20, Y+33	; 0x21
    32e0:	5a a1       	ldd	r21, Y+34	; 0x22
    32e2:	b4 01       	movw	r22, r8
    32e4:	c3 01       	movw	r24, r6
    32e6:	17 dc       	rcall	.-2002   	; 0x2b16 <uECC_sign_with_k>
    32e8:	89 2b       	or	r24, r25
    32ea:	41 f5       	brne	.+80     	; 0x333c <uECC_sign+0xce>
    32ec:	3a 94       	dec	r3
              uint8_t *signature,
              uECC_Curve curve) {
    uECC_word_t k[uECC_MAX_WORDS];
    uECC_word_t tries;

    for (tries = 0; tries < uECC_RNG_MAX_TRIES; ++tries) {
    32ee:	33 20       	and	r3, r3
    32f0:	59 f0       	breq	.+22     	; 0x3308 <uECC_sign+0x9a>
        if (!uECC_generate_random_int(k, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
    32f2:	f6 01       	movw	r30, r12
    32f4:	82 81       	ldd	r24, Z+2	; 0x02
    32f6:	93 81       	ldd	r25, Z+3	; 0x03
    32f8:	ac 01       	movw	r20, r24
    32fa:	49 5f       	subi	r20, 0xF9	; 249
    32fc:	5f 4f       	sbci	r21, 0xFF	; 255
    32fe:	57 ff       	sbrs	r21, 7
    3300:	dc cf       	rjmp	.-72     	; 0x32ba <uECC_sign+0x4c>
    3302:	49 5f       	subi	r20, 0xF9	; 249
    3304:	5f 4f       	sbci	r21, 0xFF	; 255
    3306:	d9 cf       	rjmp	.-78     	; 0x32ba <uECC_sign+0x4c>
            return 0;
    3308:	80 e0       	ldi	r24, 0x00	; 0
    330a:	90 e0       	ldi	r25, 0x00	; 0
        if (uECC_sign_with_k(private_key, message_hash, hash_size, k, signature, curve)) {
            return 1;
        }
    }
    return 0;
}
    330c:	a2 96       	adiw	r28, 0x22	; 34
    330e:	0f b6       	in	r0, 0x3f	; 63
    3310:	f8 94       	cli
    3312:	de bf       	out	0x3e, r29	; 62
    3314:	0f be       	out	0x3f, r0	; 63
    3316:	cd bf       	out	0x3d, r28	; 61
    3318:	df 91       	pop	r29
    331a:	cf 91       	pop	r28
    331c:	1f 91       	pop	r17
    331e:	0f 91       	pop	r16
    3320:	ff 90       	pop	r15
    3322:	ef 90       	pop	r14
    3324:	df 90       	pop	r13
    3326:	cf 90       	pop	r12
    3328:	bf 90       	pop	r11
    332a:	af 90       	pop	r10
    332c:	9f 90       	pop	r9
    332e:	8f 90       	pop	r8
    3330:	7f 90       	pop	r7
    3332:	6f 90       	pop	r6
    3334:	5f 90       	pop	r5
    3336:	4f 90       	pop	r4
    3338:	3f 90       	pop	r3
    333a:	08 95       	ret
        if (!uECC_generate_random_int(k, curve->n, BITS_TO_WORDS(curve->num_n_bits))) {
            return 0;
        }

        if (uECC_sign_with_k(private_key, message_hash, hash_size, k, signature, curve)) {
            return 1;
    333c:	81 e0       	ldi	r24, 0x01	; 1
    333e:	90 e0       	ldi	r25, 0x00	; 0
    3340:	e5 cf       	rjmp	.-54     	; 0x330c <uECC_sign+0x9e>

00003342 <hex_to_bytes>:
	}
	
	//*dest = '/0';
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
    3342:	ff 92       	push	r15
    3344:	0f 93       	push	r16
    3346:	1f 93       	push	r17
    3348:	cf 93       	push	r28
    334a:	df 93       	push	r29
    334c:	f8 2e       	mov	r15, r24
    334e:	09 2f       	mov	r16, r25
    3350:	16 2f       	mov	r17, r22
    3352:	ea 01       	movw	r28, r20
	memset(dest, 0, slength/2);
    3354:	46 2f       	mov	r20, r22
    3356:	46 95       	lsr	r20
    3358:	50 e0       	ldi	r21, 0x00	; 0
    335a:	60 e0       	ldi	r22, 0x00	; 0
    335c:	70 e0       	ldi	r23, 0x00	; 0
    335e:	ce 01       	movw	r24, r28
    3360:	0e 94 c8 2e 	call	0x5d90	; 0x5d90 <memset>
	uint8_t index = 0;
	while (index < slength) {
    3364:	11 23       	and	r17, r17
    3366:	09 f4       	brne	.+2      	; 0x336a <hex_to_bytes+0x28>
    3368:	4b c0       	rjmp	.+150    	; 0x3400 <hex_to_bytes+0xbe>
    336a:	ef 2d       	mov	r30, r15
    336c:	f0 2f       	mov	r31, r16
    336e:	20 e0       	ldi	r18, 0x00	; 0
    3370:	30 e0       	ldi	r19, 0x00	; 0
    3372:	17 c0       	rjmp	.+46     	; 0x33a2 <hex_to_bytes+0x60>
    3374:	90 e0       	ldi	r25, 0x00	; 0
    3376:	c0 97       	sbiw	r24, 0x30	; 48
    3378:	b9 01       	movw	r22, r18
    337a:	61 70       	andi	r22, 0x01	; 1
    337c:	77 27       	eor	r23, r23
    337e:	66 0f       	add	r22, r22
    3380:	77 1f       	adc	r23, r23
    3382:	66 0f       	add	r22, r22
    3384:	77 1f       	adc	r23, r23
    3386:	01 c0       	rjmp	.+2      	; 0x338a <hex_to_bytes+0x48>
    3388:	88 0f       	add	r24, r24
    338a:	6a 95       	dec	r22
    338c:	ea f7       	brpl	.-6      	; 0x3388 <hex_to_bytes+0x46>
		else if (c >= 'A' && c <= 'F')
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
		value = (10 + (c - 'a'));

		dest[(index/2)] += value << (((index + 1) % 2) * 4);
    338e:	94 2f       	mov	r25, r20
    3390:	96 95       	lsr	r25
    3392:	de 01       	movw	r26, r28
    3394:	a9 0f       	add	r26, r25
    3396:	b1 1d       	adc	r27, r1
    3398:	9c 91       	ld	r25, X
    339a:	89 0f       	add	r24, r25
    339c:	8c 93       	st	X, r24
}

void hex_to_bytes(char* src, uint8_t slength, uint8_t dest[slength/2]) {
	memset(dest, 0, slength/2);
	uint8_t index = 0;
	while (index < slength) {
    339e:	21 17       	cp	r18, r17
    33a0:	78 f5       	brcc	.+94     	; 0x3400 <hex_to_bytes+0xbe>
    33a2:	42 2f       	mov	r20, r18
		char c = src[index];
    33a4:	81 91       	ld	r24, Z+
    33a6:	2f 5f       	subi	r18, 0xFF	; 255
    33a8:	3f 4f       	sbci	r19, 0xFF	; 255
		int value = 0;
		if(c >= '0' && c <= '9')
    33aa:	90 ed       	ldi	r25, 0xD0	; 208
    33ac:	98 0f       	add	r25, r24
    33ae:	9a 30       	cpi	r25, 0x0A	; 10
    33b0:	08 f3       	brcs	.-62     	; 0x3374 <hex_to_bytes+0x32>
		value = (c - '0');
		else if (c >= 'A' && c <= 'F')
    33b2:	9f eb       	ldi	r25, 0xBF	; 191
    33b4:	98 0f       	add	r25, r24
    33b6:	96 30       	cpi	r25, 0x06	; 6
    33b8:	70 f4       	brcc	.+28     	; 0x33d6 <hex_to_bytes+0x94>
    33ba:	90 e0       	ldi	r25, 0x00	; 0
    33bc:	c7 97       	sbiw	r24, 0x37	; 55
    33be:	b9 01       	movw	r22, r18
    33c0:	61 70       	andi	r22, 0x01	; 1
    33c2:	77 27       	eor	r23, r23
    33c4:	66 0f       	add	r22, r22
    33c6:	77 1f       	adc	r23, r23
    33c8:	66 0f       	add	r22, r22
    33ca:	77 1f       	adc	r23, r23
    33cc:	01 c0       	rjmp	.+2      	; 0x33d0 <hex_to_bytes+0x8e>
    33ce:	88 0f       	add	r24, r24
    33d0:	6a 95       	dec	r22
    33d2:	ea f7       	brpl	.-6      	; 0x33ce <hex_to_bytes+0x8c>
    33d4:	dc cf       	rjmp	.-72     	; 0x338e <hex_to_bytes+0x4c>
		value = (10 + (c - 'A'));
		else if (c >= 'a' && c <= 'f')
    33d6:	9f e9       	ldi	r25, 0x9F	; 159
    33d8:	98 0f       	add	r25, r24
    33da:	96 30       	cpi	r25, 0x06	; 6
    33dc:	78 f4       	brcc	.+30     	; 0x33fc <hex_to_bytes+0xba>
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	87 55       	subi	r24, 0x57	; 87
    33e2:	91 09       	sbc	r25, r1
    33e4:	b9 01       	movw	r22, r18
    33e6:	61 70       	andi	r22, 0x01	; 1
    33e8:	77 27       	eor	r23, r23
    33ea:	66 0f       	add	r22, r22
    33ec:	77 1f       	adc	r23, r23
    33ee:	66 0f       	add	r22, r22
    33f0:	77 1f       	adc	r23, r23
    33f2:	01 c0       	rjmp	.+2      	; 0x33f6 <hex_to_bytes+0xb4>
    33f4:	88 0f       	add	r24, r24
    33f6:	6a 95       	dec	r22
    33f8:	ea f7       	brpl	.-6      	; 0x33f4 <hex_to_bytes+0xb2>
    33fa:	c9 cf       	rjmp	.-110    	; 0x338e <hex_to_bytes+0x4c>
    33fc:	80 e0       	ldi	r24, 0x00	; 0
    33fe:	c7 cf       	rjmp	.-114    	; 0x338e <hex_to_bytes+0x4c>

		dest[(index/2)] += value << (((index + 1) % 2) * 4);

		index++;
	}
}
    3400:	df 91       	pop	r29
    3402:	cf 91       	pop	r28
    3404:	1f 91       	pop	r17
    3406:	0f 91       	pop	r16
    3408:	ff 90       	pop	r15
    340a:	08 95       	ret

0000340c <RNG>:
const char public_key3_hex[128] = "ccfd9d101862143f83b3de5caccdf4a3aa55c0cdd8cd848b8416d2b7109488b9da60f3be17ddb00412eb4c64d422b3df3be978c41844195a890ec5e3249efe5e";

const char private_key4_hex[64] = "b2c950abc87a55442cc00f1e3ac38f81b7e95036fd191ea134ff616d9806e10c";
const char public_key4_hex[128] = "bd42371aac680a6603eba1cf0f5e495ace59299a4e2f42aa943b8406c42b66c8182c093637eb1199ec41dee8ba7a2faae07b04857b569033c7b73e318a1f6321";

int RNG(uint8_t *dest, unsigned size){
    340c:	0f 93       	push	r16
    340e:	1f 93       	push	r17
    3410:	cf 93       	push	r28
    3412:	df 93       	push	r29
    3414:	8c 01       	movw	r16, r24
    3416:	eb 01       	movw	r28, r22
	while(size){
    3418:	20 97       	sbiw	r28, 0x00	; 0
    341a:	39 f0       	breq	.+14     	; 0x342a <RNG+0x1e>
		uint8_t val = (uint8_t) rand();
    341c:	0e 94 97 2e 	call	0x5d2e	; 0x5d2e <rand>
		*dest = val;
    3420:	f8 01       	movw	r30, r16
    3422:	81 93       	st	Z+, r24
    3424:	8f 01       	movw	r16, r30
		++dest;
		--size;
    3426:	21 97       	sbiw	r28, 0x01	; 1

const char private_key4_hex[64] = "b2c950abc87a55442cc00f1e3ac38f81b7e95036fd191ea134ff616d9806e10c";
const char public_key4_hex[128] = "bd42371aac680a6603eba1cf0f5e495ace59299a4e2f42aa943b8406c42b66c8182c093637eb1199ec41dee8ba7a2faae07b04857b569033c7b73e318a1f6321";

int RNG(uint8_t *dest, unsigned size){
	while(size){
    3428:	c9 f7       	brne	.-14     	; 0x341c <RNG+0x10>
		*dest = val;
		++dest;
		--size;
	}
	return 1;
}
    342a:	81 e0       	ldi	r24, 0x01	; 1
    342c:	90 e0       	ldi	r25, 0x00	; 0
    342e:	df 91       	pop	r29
    3430:	cf 91       	pop	r28
    3432:	1f 91       	pop	r17
    3434:	0f 91       	pop	r16
    3436:	08 95       	ret

00003438 <get_private_key>:

static void get_private_key(uint8_t role, uint8_t private[32]){
	switch (role)
    3438:	82 30       	cpi	r24, 0x02	; 2
    343a:	b1 f0       	breq	.+44     	; 0x3468 <get_private_key+0x30>
    343c:	70 f0       	brcs	.+28     	; 0x345a <get_private_key+0x22>
    343e:	84 30       	cpi	r24, 0x04	; 4
    3440:	39 f0       	breq	.+14     	; 0x3450 <get_private_key+0x18>
    3442:	88 30       	cpi	r24, 0x08	; 8
    3444:	b1 f4       	brne	.+44     	; 0x3472 <get_private_key+0x3a>
			break;
		case POLICEMAN_ROLE :
			hex_to_bytes(private_key3_hex, 64, private);
			break;
		case TESTER_ROLE :
			hex_to_bytes(private_key4_hex, 64, private);
    3446:	ab 01       	movw	r20, r22
    3448:	60 e4       	ldi	r22, 0x40	; 64
    344a:	80 ee       	ldi	r24, 0xE0	; 224
    344c:	91 e0       	ldi	r25, 0x01	; 1
    344e:	79 cf       	rjmp	.-270    	; 0x3342 <hex_to_bytes>
			break;
		case REPAIRSHOP_ROLE :
			hex_to_bytes(private_key2_hex, 64, private);
			break;
		case POLICEMAN_ROLE :
			hex_to_bytes(private_key3_hex, 64, private);
    3450:	ab 01       	movw	r20, r22
    3452:	60 e4       	ldi	r22, 0x40	; 64
    3454:	80 e2       	ldi	r24, 0x20	; 32
    3456:	92 e0       	ldi	r25, 0x02	; 2
    3458:	74 cf       	rjmp	.-280    	; 0x3342 <hex_to_bytes>
	}
	return 1;
}

static void get_private_key(uint8_t role, uint8_t private[32]){
	switch (role)
    345a:	81 30       	cpi	r24, 0x01	; 1
    345c:	59 f4       	brne	.+22     	; 0x3474 <get_private_key+0x3c>
	{
		case OWNER_ROLE :
			hex_to_bytes(private_key1_hex, 64, private);
    345e:	ab 01       	movw	r20, r22
    3460:	60 e4       	ldi	r22, 0x40	; 64
    3462:	80 ea       	ldi	r24, 0xA0	; 160
    3464:	92 e0       	ldi	r25, 0x02	; 2
    3466:	6d cf       	rjmp	.-294    	; 0x3342 <hex_to_bytes>
			break;
		case REPAIRSHOP_ROLE :
			hex_to_bytes(private_key2_hex, 64, private);
    3468:	ab 01       	movw	r20, r22
    346a:	60 e4       	ldi	r22, 0x40	; 64
    346c:	80 e6       	ldi	r24, 0x60	; 96
    346e:	92 e0       	ldi	r25, 0x02	; 2
    3470:	68 cf       	rjmp	.-304    	; 0x3342 <hex_to_bytes>
    3472:	08 95       	ret
    3474:	08 95       	ret

00003476 <sign_challenge>:
			hex_to_bytes(private_key4_hex, 64, private);
			break;
	}
} 

int sign_challenge(uint8_t challenge[64], uint8_t signature[64], uint8_t role){
    3476:	af 92       	push	r10
    3478:	bf 92       	push	r11
    347a:	df 92       	push	r13
    347c:	ef 92       	push	r14
    347e:	ff 92       	push	r15
    3480:	0f 93       	push	r16
    3482:	1f 93       	push	r17
    3484:	cf 93       	push	r28
    3486:	df 93       	push	r29
    3488:	cd b7       	in	r28, 0x3d	; 61
    348a:	de b7       	in	r29, 0x3e	; 62
    348c:	c0 56       	subi	r28, 0x60	; 96
    348e:	d1 09       	sbc	r29, r1
    3490:	0f b6       	in	r0, 0x3f	; 63
    3492:	f8 94       	cli
    3494:	de bf       	out	0x3e, r29	; 62
    3496:	0f be       	out	0x3f, r0	; 63
    3498:	cd bf       	out	0x3d, r28	; 61
    349a:	5c 01       	movw	r10, r24
    349c:	7b 01       	movw	r14, r22
    349e:	d4 2e       	mov	r13, r20
	uECC_set_rng(&RNG);
    34a0:	86 e0       	ldi	r24, 0x06	; 6
    34a2:	9a e1       	ldi	r25, 0x1A	; 26
    34a4:	95 dd       	rcall	.-1238   	; 0x2fd0 <uECC_set_rng>
	const struct uECC_Curve_t *curve = uECC_secp256r1();
    34a6:	99 dd       	rcall	.-1230   	; 0x2fda <uECC_secp256r1>
    34a8:	8c 01       	movw	r16, r24
    34aa:	20 e0       	ldi	r18, 0x00	; 0
	uint8_t hash[64];
	sha512(hash, challenge, 512);
    34ac:	32 e0       	ldi	r19, 0x02	; 2
    34ae:	40 e0       	ldi	r20, 0x00	; 0
    34b0:	50 e0       	ldi	r21, 0x00	; 0
    34b2:	b5 01       	movw	r22, r10
    34b4:	ce 01       	movw	r24, r28
    34b6:	01 96       	adiw	r24, 0x01	; 1
    34b8:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <sha512>
    34bc:	be 01       	movw	r22, r28
	uint8_t private[32];
	get_private_key(role, private);
    34be:	6f 5b       	subi	r22, 0xBF	; 191
    34c0:	7f 4f       	sbci	r23, 0xFF	; 255
    34c2:	8d 2d       	mov	r24, r13
    34c4:	b9 df       	rcall	.-142    	; 0x3438 <get_private_key>
    34c6:	97 01       	movw	r18, r14

	if (!uECC_sign(private, hash, 64, signature, curve)) {
    34c8:	40 e4       	ldi	r20, 0x40	; 64
    34ca:	50 e0       	ldi	r21, 0x00	; 0
    34cc:	be 01       	movw	r22, r28
    34ce:	6f 5f       	subi	r22, 0xFF	; 255
    34d0:	7f 4f       	sbci	r23, 0xFF	; 255
    34d2:	ce 01       	movw	r24, r28
    34d4:	8f 5b       	subi	r24, 0xBF	; 191
    34d6:	9f 4f       	sbci	r25, 0xFF	; 255
    34d8:	ca de       	rcall	.-620    	; 0x326e <uECC_sign>
    34da:	89 2b       	or	r24, r25
    34dc:	99 f0       	breq	.+38     	; 0x3504 <sign_challenge+0x8e>
    34de:	80 e0       	ldi	r24, 0x00	; 0
		uart_puts("sign failed");
		return 1;
	}
	
	return 0;
    34e0:	90 e0       	ldi	r25, 0x00	; 0
    34e2:	c0 5a       	subi	r28, 0xA0	; 160
}
    34e4:	df 4f       	sbci	r29, 0xFF	; 255
    34e6:	0f b6       	in	r0, 0x3f	; 63
    34e8:	f8 94       	cli
    34ea:	de bf       	out	0x3e, r29	; 62
    34ec:	0f be       	out	0x3f, r0	; 63
    34ee:	cd bf       	out	0x3d, r28	; 61
    34f0:	df 91       	pop	r29
    34f2:	cf 91       	pop	r28
    34f4:	1f 91       	pop	r17
    34f6:	0f 91       	pop	r16
    34f8:	ff 90       	pop	r15
    34fa:	ef 90       	pop	r14
    34fc:	df 90       	pop	r13
    34fe:	bf 90       	pop	r11
    3500:	af 90       	pop	r10
    3502:	08 95       	ret
    3504:	86 eb       	ldi	r24, 0xB6	; 182
	sha512(hash, challenge, 512);
	uint8_t private[32];
	get_private_key(role, private);

	if (!uECC_sign(private, hash, 64, signature, curve)) {
		uart_puts("sign failed");
    3506:	91 e0       	ldi	r25, 0x01	; 1
    3508:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
    350c:	81 e0       	ldi	r24, 0x01	; 1
		return 1;
    350e:	90 e0       	ldi	r25, 0x00	; 0
    3510:	e8 cf       	rjmp	.-48     	; 0x34e2 <sign_challenge+0x6c>

00003512 <sign_challenge_dummy>:
    3512:	fc 01       	movw	r30, r24
	return 0;
}


int sign_challenge_dummy(uint8_t challenge[64], uint8_t signature[64], uint8_t role){
	memcpy(signature,challenge,64);
    3514:	90 e4       	ldi	r25, 0x40	; 64
    3516:	db 01       	movw	r26, r22
    3518:	01 90       	ld	r0, Z+
    351a:	0d 92       	st	X+, r0
    351c:	9a 95       	dec	r25
    351e:	e1 f7       	brne	.-8      	; 0x3518 <sign_challenge_dummy+0x6>
	return 0;
}
    3520:	80 e0       	ldi	r24, 0x00	; 0
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	08 95       	ret

00003526 <calculate_shared_secret>:

int calculate_shared_secret(uint8_t public[64], uint8_t role, uint8_t secret[32]){
    3526:	af 92       	push	r10
    3528:	bf 92       	push	r11
    352a:	df 92       	push	r13
    352c:	ef 92       	push	r14
    352e:	ff 92       	push	r15
    3530:	0f 93       	push	r16
    3532:	1f 93       	push	r17
    3534:	cf 93       	push	r28
    3536:	df 93       	push	r29
    3538:	cd b7       	in	r28, 0x3d	; 61
    353a:	de b7       	in	r29, 0x3e	; 62
    353c:	c0 54       	subi	r28, 0x40	; 64
    353e:	d1 09       	sbc	r29, r1
    3540:	0f b6       	in	r0, 0x3f	; 63
    3542:	f8 94       	cli
    3544:	de bf       	out	0x3e, r29	; 62
    3546:	0f be       	out	0x3f, r0	; 63
    3548:	cd bf       	out	0x3d, r28	; 61
    354a:	8c 01       	movw	r16, r24
    354c:	d6 2e       	mov	r13, r22
    354e:	5a 01       	movw	r10, r20
	const struct uECC_Curve_t * curve = uECC_secp256r1();
    3550:	44 dd       	rcall	.-1400   	; 0x2fda <uECC_secp256r1>
    3552:	7c 01       	movw	r14, r24
	uint8_t secret_unhashed[32];
	//Generate Shared Secret.
	uint8_t private[32];
	get_private_key(role, private);
    3554:	be 01       	movw	r22, r28
    3556:	6f 5f       	subi	r22, 0xFF	; 255
    3558:	7f 4f       	sbci	r23, 0xFF	; 255
    355a:	8d 2d       	mov	r24, r13
    355c:	6d df       	rcall	.-294    	; 0x3438 <get_private_key>
	if(!uECC_shared_secret(public, private, secret_unhashed, curve)){
    355e:	97 01       	movw	r18, r14
    3560:	ae 01       	movw	r20, r28
    3562:	4f 5d       	subi	r20, 0xDF	; 223
    3564:	5f 4f       	sbci	r21, 0xFF	; 255
    3566:	be 01       	movw	r22, r28
    3568:	6f 5f       	subi	r22, 0xFF	; 255
    356a:	7f 4f       	sbci	r23, 0xFF	; 255
    356c:	c8 01       	movw	r24, r16
    356e:	38 dd       	rcall	.-1424   	; 0x2fe0 <uECC_shared_secret>
    3570:	89 2b       	or	r24, r25
    3572:	e1 f0       	breq	.+56     	; 0x35ac <calculate_shared_secret+0x86>
		uart_puts("shared secret creation failed");
		return 1;
	}
	uint32_t len = 256;
	sha256(secret, secret_unhashed, len);
    3574:	20 e0       	ldi	r18, 0x00	; 0
    3576:	31 e0       	ldi	r19, 0x01	; 1
    3578:	40 e0       	ldi	r20, 0x00	; 0
    357a:	50 e0       	ldi	r21, 0x00	; 0
    357c:	be 01       	movw	r22, r28
    357e:	6f 5d       	subi	r22, 0xDF	; 223
    3580:	7f 4f       	sbci	r23, 0xFF	; 255
    3582:	c5 01       	movw	r24, r10
    3584:	31 d3       	rcall	.+1634   	; 0x3be8 <sha256>
	return 0;
    3586:	80 e0       	ldi	r24, 0x00	; 0
    3588:	90 e0       	ldi	r25, 0x00	; 0
}
    358a:	c0 5c       	subi	r28, 0xC0	; 192
    358c:	df 4f       	sbci	r29, 0xFF	; 255
    358e:	0f b6       	in	r0, 0x3f	; 63
    3590:	f8 94       	cli
    3592:	de bf       	out	0x3e, r29	; 62
    3594:	0f be       	out	0x3f, r0	; 63
    3596:	cd bf       	out	0x3d, r28	; 61
    3598:	df 91       	pop	r29
    359a:	cf 91       	pop	r28
    359c:	1f 91       	pop	r17
    359e:	0f 91       	pop	r16
    35a0:	ff 90       	pop	r15
    35a2:	ef 90       	pop	r14
    35a4:	df 90       	pop	r13
    35a6:	bf 90       	pop	r11
    35a8:	af 90       	pop	r10
    35aa:	08 95       	ret
	uint8_t secret_unhashed[32];
	//Generate Shared Secret.
	uint8_t private[32];
	get_private_key(role, private);
	if(!uECC_shared_secret(public, private, secret_unhashed, curve)){
		uart_puts("shared secret creation failed");
    35ac:	82 ec       	ldi	r24, 0xC2	; 194
    35ae:	91 e0       	ldi	r25, 0x01	; 1
    35b0:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
		return 1;
    35b4:	81 e0       	ldi	r24, 0x01	; 1
    35b6:	90 e0       	ldi	r25, 0x00	; 0
    35b8:	e8 cf       	rjmp	.-48     	; 0x358a <calculate_shared_secret+0x64>

000035ba <calculate_shared_secret_dummy>:
	uint32_t len = 256;
	sha256(secret, secret_unhashed, len);
	return 0;
}

int calculate_shared_secret_dummy(uint8_t public[64], uint8_t role, uint8_t secret[32]){
    35ba:	fc 01       	movw	r30, r24
	memcpy(secret, public, 32);
    35bc:	90 e2       	ldi	r25, 0x20	; 32
    35be:	da 01       	movw	r26, r20
    35c0:	01 90       	ld	r0, Z+
    35c2:	0d 92       	st	X+, r0
    35c4:	9a 95       	dec	r25
    35c6:	e1 f7       	brne	.-8      	; 0x35c0 <calculate_shared_secret_dummy+0x6>
	return 0;
}
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	90 e0       	ldi	r25, 0x00	; 0
    35cc:	08 95       	ret

000035ce <__vector_5>:
	//EICRB = 1 << ISC40 | 1 << ISC41 | 1 << ISC50 | 1 << ISC51 | 1 << ISC60 | 1 << ISC61 | 1 << ISC70 | 1 << ISC71; // set interrupt on falling edge.
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
	
}
	
ISR(INT4_vect){
    35ce:	1f 92       	push	r1
    35d0:	0f 92       	push	r0
    35d2:	0f b6       	in	r0, 0x3f	; 63
    35d4:	0f 92       	push	r0
    35d6:	11 24       	eor	r1, r1
    35d8:	0b b6       	in	r0, 0x3b	; 59
    35da:	0f 92       	push	r0
    35dc:	2f 93       	push	r18
    35de:	3f 93       	push	r19
    35e0:	4f 93       	push	r20
    35e2:	5f 93       	push	r21
    35e4:	6f 93       	push	r22
    35e6:	7f 93       	push	r23
    35e8:	8f 93       	push	r24
    35ea:	9f 93       	push	r25
    35ec:	af 93       	push	r26
    35ee:	bf 93       	push	r27
    35f0:	ef 93       	push	r30
    35f2:	ff 93       	push	r31
	EIMSK &= ~(1 << INT4);
    35f4:	ec 98       	cbi	0x1d, 4	; 29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35f6:	2f ef       	ldi	r18, 0xFF	; 255
    35f8:	84 e3       	ldi	r24, 0x34	; 52
    35fa:	9c e0       	ldi	r25, 0x0C	; 12
    35fc:	21 50       	subi	r18, 0x01	; 1
    35fe:	80 40       	sbci	r24, 0x00	; 0
    3600:	90 40       	sbci	r25, 0x00	; 0
    3602:	e1 f7       	brne	.-8      	; 0x35fc <__vector_5+0x2e>
    3604:	00 c0       	rjmp	.+0      	; 0x3606 <__vector_5+0x38>
    3606:	00 00       	nop
	_delay_ms(500);
	uart_puts("running scenario 1");
    3608:	80 ee       	ldi	r24, 0xE0	; 224
    360a:	92 e0       	ldi	r25, 0x02	; 2
    360c:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
	run_scenario = SCENARIO1;
    3610:	81 e0       	ldi	r24, 0x01	; 1
    3612:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <run_scenario>
	EIMSK |= 1 << INT4;
    3616:	ec 9a       	sbi	0x1d, 4	; 29
}
    3618:	ff 91       	pop	r31
    361a:	ef 91       	pop	r30
    361c:	bf 91       	pop	r27
    361e:	af 91       	pop	r26
    3620:	9f 91       	pop	r25
    3622:	8f 91       	pop	r24
    3624:	7f 91       	pop	r23
    3626:	6f 91       	pop	r22
    3628:	5f 91       	pop	r21
    362a:	4f 91       	pop	r20
    362c:	3f 91       	pop	r19
    362e:	2f 91       	pop	r18
    3630:	0f 90       	pop	r0
    3632:	0b be       	out	0x3b, r0	; 59
    3634:	0f 90       	pop	r0
    3636:	0f be       	out	0x3f, r0	; 63
    3638:	0f 90       	pop	r0
    363a:	1f 90       	pop	r1
    363c:	18 95       	reti

0000363e <__vector_6>:

ISR(INT5_vect){
    363e:	1f 92       	push	r1
    3640:	0f 92       	push	r0
    3642:	0f b6       	in	r0, 0x3f	; 63
    3644:	0f 92       	push	r0
    3646:	11 24       	eor	r1, r1
    3648:	0b b6       	in	r0, 0x3b	; 59
    364a:	0f 92       	push	r0
    364c:	2f 93       	push	r18
    364e:	3f 93       	push	r19
    3650:	4f 93       	push	r20
    3652:	5f 93       	push	r21
    3654:	6f 93       	push	r22
    3656:	7f 93       	push	r23
    3658:	8f 93       	push	r24
    365a:	9f 93       	push	r25
    365c:	af 93       	push	r26
    365e:	bf 93       	push	r27
    3660:	ef 93       	push	r30
    3662:	ff 93       	push	r31
	EIMSK &= ~(1 << INT5);
    3664:	ed 98       	cbi	0x1d, 5	; 29
    3666:	2f ef       	ldi	r18, 0xFF	; 255
    3668:	84 e3       	ldi	r24, 0x34	; 52
    366a:	9c e0       	ldi	r25, 0x0C	; 12
    366c:	21 50       	subi	r18, 0x01	; 1
    366e:	80 40       	sbci	r24, 0x00	; 0
    3670:	90 40       	sbci	r25, 0x00	; 0
    3672:	e1 f7       	brne	.-8      	; 0x366c <__vector_6+0x2e>
    3674:	00 c0       	rjmp	.+0      	; 0x3676 <__vector_6+0x38>
    3676:	00 00       	nop
	_delay_ms(500);
	uart_puts("running scenario 2");
    3678:	83 ef       	ldi	r24, 0xF3	; 243
    367a:	92 e0       	ldi	r25, 0x02	; 2
    367c:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
	run_scenario = SCENARIO2;
    3680:	82 e0       	ldi	r24, 0x02	; 2
    3682:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <run_scenario>
	EIMSK |= 1 << INT5;
    3686:	ed 9a       	sbi	0x1d, 5	; 29
}
    3688:	ff 91       	pop	r31
    368a:	ef 91       	pop	r30
    368c:	bf 91       	pop	r27
    368e:	af 91       	pop	r26
    3690:	9f 91       	pop	r25
    3692:	8f 91       	pop	r24
    3694:	7f 91       	pop	r23
    3696:	6f 91       	pop	r22
    3698:	5f 91       	pop	r21
    369a:	4f 91       	pop	r20
    369c:	3f 91       	pop	r19
    369e:	2f 91       	pop	r18
    36a0:	0f 90       	pop	r0
    36a2:	0b be       	out	0x3b, r0	; 59
    36a4:	0f 90       	pop	r0
    36a6:	0f be       	out	0x3f, r0	; 63
    36a8:	0f 90       	pop	r0
    36aa:	1f 90       	pop	r1
    36ac:	18 95       	reti

000036ae <__vector_7>:

ISR(INT6_vect){
    36ae:	1f 92       	push	r1
    36b0:	0f 92       	push	r0
    36b2:	0f b6       	in	r0, 0x3f	; 63
    36b4:	0f 92       	push	r0
    36b6:	11 24       	eor	r1, r1
    36b8:	0b b6       	in	r0, 0x3b	; 59
    36ba:	0f 92       	push	r0
    36bc:	2f 93       	push	r18
    36be:	3f 93       	push	r19
    36c0:	4f 93       	push	r20
    36c2:	5f 93       	push	r21
    36c4:	6f 93       	push	r22
    36c6:	7f 93       	push	r23
    36c8:	8f 93       	push	r24
    36ca:	9f 93       	push	r25
    36cc:	af 93       	push	r26
    36ce:	bf 93       	push	r27
    36d0:	ef 93       	push	r30
    36d2:	ff 93       	push	r31
	EIMSK &= ~(1 << INT6);
    36d4:	ee 98       	cbi	0x1d, 6	; 29
    36d6:	2f ef       	ldi	r18, 0xFF	; 255
    36d8:	84 e3       	ldi	r24, 0x34	; 52
    36da:	9c e0       	ldi	r25, 0x0C	; 12
    36dc:	21 50       	subi	r18, 0x01	; 1
    36de:	80 40       	sbci	r24, 0x00	; 0
    36e0:	90 40       	sbci	r25, 0x00	; 0
    36e2:	e1 f7       	brne	.-8      	; 0x36dc <__vector_7+0x2e>
    36e4:	00 c0       	rjmp	.+0      	; 0x36e6 <__vector_7+0x38>
    36e6:	00 00       	nop
	_delay_ms(500);
	uart_puts("running scenario 3");
    36e8:	86 e0       	ldi	r24, 0x06	; 6
    36ea:	93 e0       	ldi	r25, 0x03	; 3
    36ec:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
	run_scenario = SCENARIO3;
    36f0:	83 e0       	ldi	r24, 0x03	; 3
    36f2:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <run_scenario>
	EIMSK |= 1 << INT6;
    36f6:	ee 9a       	sbi	0x1d, 6	; 29
}
    36f8:	ff 91       	pop	r31
    36fa:	ef 91       	pop	r30
    36fc:	bf 91       	pop	r27
    36fe:	af 91       	pop	r26
    3700:	9f 91       	pop	r25
    3702:	8f 91       	pop	r24
    3704:	7f 91       	pop	r23
    3706:	6f 91       	pop	r22
    3708:	5f 91       	pop	r21
    370a:	4f 91       	pop	r20
    370c:	3f 91       	pop	r19
    370e:	2f 91       	pop	r18
    3710:	0f 90       	pop	r0
    3712:	0b be       	out	0x3b, r0	; 59
    3714:	0f 90       	pop	r0
    3716:	0f be       	out	0x3f, r0	; 63
    3718:	0f 90       	pop	r0
    371a:	1f 90       	pop	r1
    371c:	18 95       	reti

0000371e <__vector_8>:

ISR(INT7_vect){
    371e:	1f 92       	push	r1
    3720:	0f 92       	push	r0
    3722:	0f b6       	in	r0, 0x3f	; 63
    3724:	0f 92       	push	r0
    3726:	11 24       	eor	r1, r1
    3728:	2f 93       	push	r18
    372a:	8f 93       	push	r24
    372c:	9f 93       	push	r25
	EIMSK &= ~(1 << INT7);
    372e:	ef 98       	cbi	0x1d, 7	; 29
    3730:	2f ef       	ldi	r18, 0xFF	; 255
    3732:	84 e3       	ldi	r24, 0x34	; 52
    3734:	9c e0       	ldi	r25, 0x0C	; 12
    3736:	21 50       	subi	r18, 0x01	; 1
    3738:	80 40       	sbci	r24, 0x00	; 0
    373a:	90 40       	sbci	r25, 0x00	; 0
    373c:	e1 f7       	brne	.-8      	; 0x3736 <__vector_8+0x18>
    373e:	00 c0       	rjmp	.+0      	; 0x3740 <__vector_8+0x22>
    3740:	00 00       	nop
	_delay_ms(500);
	EIMSK |= 1 << INT7;
    3742:	ef 9a       	sbi	0x1d, 7	; 29
}
    3744:	9f 91       	pop	r25
    3746:	8f 91       	pop	r24
    3748:	2f 91       	pop	r18
    374a:	0f 90       	pop	r0
    374c:	0f be       	out	0x3f, r0	; 63
    374e:	0f 90       	pop	r0
    3750:	1f 90       	pop	r1
    3752:	18 95       	reti

00003754 <authenticate>:

int authenticate(can_msg_t *message, can_id_t *id, uint8_t role, uint8_t rounds){
    3754:	6f 92       	push	r6
    3756:	7f 92       	push	r7
    3758:	8f 92       	push	r8
    375a:	9f 92       	push	r9
    375c:	af 92       	push	r10
    375e:	bf 92       	push	r11
    3760:	df 92       	push	r13
    3762:	ef 92       	push	r14
    3764:	ff 92       	push	r15
    3766:	0f 93       	push	r16
    3768:	1f 93       	push	r17
    376a:	cf 93       	push	r28
    376c:	df 93       	push	r29
    376e:	cd b7       	in	r28, 0x3d	; 61
    3770:	de b7       	in	r29, 0x3e	; 62
    3772:	c8 5e       	subi	r28, 0xE8	; 232
    3774:	d1 09       	sbc	r29, r1
    3776:	0f b6       	in	r0, 0x3f	; 63
    3778:	f8 94       	cli
    377a:	de bf       	out	0x3e, r29	; 62
    377c:	0f be       	out	0x3f, r0	; 63
    377e:	cd bf       	out	0x3d, r28	; 61
    3780:	5c 01       	movw	r10, r24
    3782:	4b 01       	movw	r8, r22
    3784:	14 2f       	mov	r17, r20
    3786:	d2 2e       	mov	r13, r18
	uart_puts("starting authentication");
    3788:	89 e1       	ldi	r24, 0x19	; 25
    378a:	93 e0       	ldi	r25, 0x03	; 3
    378c:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
	
	//init authentication.
	can_msg_t init;
	init[0] = role;
    3790:	cf 51       	subi	r28, 0x1F	; 31
    3792:	df 4f       	sbci	r29, 0xFF	; 255
    3794:	18 83       	st	Y, r17
    3796:	c1 5e       	subi	r28, 0xE1	; 225
    3798:	d0 40       	sbci	r29, 0x00	; 0
	can_send_message(0, default_id, init);
    379a:	ae 01       	movw	r20, r28
    379c:	4f 51       	subi	r20, 0x1F	; 31
    379e:	5f 4f       	sbci	r21, 0xFF	; 255
    37a0:	6b eb       	ldi	r22, 0xBB	; 187
    37a2:	73 e0       	ldi	r23, 0x03	; 3
    37a4:	80 e0       	ldi	r24, 0x00	; 0
    37a6:	0e 94 ad 02 	call	0x55a	; 0x55a <can_send_message>
	uint8_t public[64];
	
	//Receive generated public key.
	can_receive_frame_buffer(public, 8);
    37aa:	68 e0       	ldi	r22, 0x08	; 8
    37ac:	ce 01       	movw	r24, r28
    37ae:	8f 5b       	subi	r24, 0xBF	; 191
    37b0:	9f 4f       	sbci	r25, 0xFF	; 255
    37b2:	0e 94 7e 03 	call	0x6fc	; 0x6fc <can_receive_frame_buffer>
	
	//Calculate shared secret.
	uint8_t secret[32];
	if(run_scenario == SCENARIO1){
    37b6:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <run_scenario>
		calculate_shared_secret_dummy(public, role, secret);
    37ba:	3e 01       	movw	r6, r28
	//Receive generated public key.
	can_receive_frame_buffer(public, 8);
	
	//Calculate shared secret.
	uint8_t secret[32];
	if(run_scenario == SCENARIO1){
    37bc:	81 30       	cpi	r24, 0x01	; 1
    37be:	09 f4       	brne	.+2      	; 0x37c2 <authenticate+0x6e>
    37c0:	cc c0       	rjmp	.+408    	; 0x395a <authenticate+0x206>
		calculate_shared_secret_dummy(public, role, secret);
		_delay_ms(1000);
		}else{
		calculate_shared_secret(public, role, secret);
    37c2:	81 ea       	ldi	r24, 0xA1	; 161
    37c4:	68 0e       	add	r6, r24
    37c6:	71 1c       	adc	r7, r1
    37c8:	a3 01       	movw	r20, r6
    37ca:	61 2f       	mov	r22, r17
    37cc:	ce 01       	movw	r24, r28
    37ce:	8f 5b       	subi	r24, 0xBF	; 191
    37d0:	9f 4f       	sbci	r25, 0xFF	; 255
    37d2:	a9 de       	rcall	.-686    	; 0x3526 <calculate_shared_secret>
	}
	
	//Sign the public key.
	uint8_t signature[64];
	if(run_scenario == SCENARIO1){
    37d4:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <run_scenario>
		sign_challenge_dummy(public, signature, role);
    37d8:	41 2f       	mov	r20, r17
    37da:	8e 01       	movw	r16, r28
    37dc:	0f 5f       	subi	r16, 0xFF	; 255
    37de:	1f 4f       	sbci	r17, 0xFF	; 255
    37e0:	b8 01       	movw	r22, r16
		calculate_shared_secret(public, role, secret);
	}
	
	//Sign the public key.
	uint8_t signature[64];
	if(run_scenario == SCENARIO1){
    37e2:	81 30       	cpi	r24, 0x01	; 1
    37e4:	09 f4       	brne	.+2      	; 0x37e8 <authenticate+0x94>
    37e6:	ab c0       	rjmp	.+342    	; 0x393e <authenticate+0x1ea>
		sign_challenge_dummy(public, signature, role);
		_delay_ms(1000);
		}else{
		sign_challenge(public, signature, role);
    37e8:	ce 01       	movw	r24, r28
    37ea:	8f 5b       	subi	r24, 0xBF	; 191
    37ec:	9f 4f       	sbci	r25, 0xFF	; 255
    37ee:	43 de       	rcall	.-890    	; 0x3476 <sign_challenge>
	}
	
	//Send signature.
	can_send_frame_buffer(signature, 8);
    37f0:	68 e0       	ldi	r22, 0x08	; 8
    37f2:	c8 01       	movw	r24, r16
    37f4:	0e 94 57 03 	call	0x6ae	; 0x6ae <can_send_frame_buffer>
	uart_puts("signature sent");
    37f8:	81 e3       	ldi	r24, 0x31	; 49
    37fa:	93 e0       	ldi	r25, 0x03	; 3
    37fc:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
	uint8_t ack[8];
	
	//wait for acknowledgment.
	can_receive_message(0, default_id, 0x00, ack);
    3800:	9e 01       	movw	r18, r28
    3802:	27 52       	subi	r18, 0x27	; 39
    3804:	3f 4f       	sbci	r19, 0xFF	; 255
    3806:	40 e0       	ldi	r20, 0x00	; 0
    3808:	50 e0       	ldi	r21, 0x00	; 0
    380a:	6b eb       	ldi	r22, 0xBB	; 187
    380c:	73 e0       	ldi	r23, 0x03	; 3
    380e:	80 e0       	ldi	r24, 0x00	; 0
    3810:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <can_receive_message>
	if(ack[0] == ACK_POS){
    3814:	c7 52       	subi	r28, 0x27	; 39
    3816:	df 4f       	sbci	r29, 0xFF	; 255
    3818:	88 81       	ld	r24, Y
    381a:	c9 5d       	subi	r28, 0xD9	; 217
    381c:	d0 40       	sbci	r29, 0x00	; 0
    381e:	81 11       	cpse	r24, r1
    3820:	89 c0       	rjmp	.+274    	; 0x3934 <authenticate+0x1e0>
		uart_puts("Succesfully authenticated!");
    3822:	80 e4       	ldi	r24, 0x40	; 64
    3824:	93 e0       	ldi	r25, 0x03	; 3
    3826:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
		}else{
		uart_puts("Authentication failed!");
		return 0;
	}
	
	while(rounds > 0){
    382a:	d1 10       	cpse	r13, r1
    382c:	49 c0       	rjmp	.+146    	; 0x38c0 <authenticate+0x16c>
    382e:	66 c0       	rjmp	.+204    	; 0x38fc <authenticate+0x1a8>
		
		//Wait for acknowledgment.
		can_msg_t ack;
		can_receive_message(0, default_id, 0x00, ack);
		if(ack[0] == ACK_POS){
			uart_puts("permission granted!");
    3830:	82 e7       	ldi	r24, 0x72	; 114
    3832:	93 e0       	ldi	r25, 0x03	; 3
    3834:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
		
		//Calculate and send Hmac of message.
		uint8_t mac[32];
		uint16_t klen = 256;
		uint32_t msglen = 64;
		hmac_sha256(mac, secret, klen ,message , msglen);
    3838:	10 e4       	ldi	r17, 0x40	; 64
    383a:	e1 2e       	mov	r14, r17
    383c:	f1 2c       	mov	r15, r1
    383e:	00 e0       	ldi	r16, 0x00	; 0
    3840:	10 e0       	ldi	r17, 0x00	; 0
    3842:	95 01       	movw	r18, r10
    3844:	40 e0       	ldi	r20, 0x00	; 0
    3846:	51 e0       	ldi	r21, 0x01	; 1
    3848:	b3 01       	movw	r22, r6
    384a:	ce 01       	movw	r24, r28
    384c:	8f 57       	subi	r24, 0x7F	; 127
    384e:	9f 4f       	sbci	r25, 0xFF	; 255
    3850:	e3 d0       	rcall	.+454    	; 0x3a18 <hmac_sha256>
		uint8_t mac2[16];
		memcpy(mac2, mac ,16);
    3852:	80 e1       	ldi	r24, 0x10	; 16
    3854:	fe 01       	movw	r30, r28
    3856:	ef 57       	subi	r30, 0x7F	; 127
    3858:	ff 4f       	sbci	r31, 0xFF	; 255
    385a:	de 01       	movw	r26, r28
    385c:	af 53       	subi	r26, 0x3F	; 63
    385e:	bf 4f       	sbci	r27, 0xFF	; 255
    3860:	01 90       	ld	r0, Z+
    3862:	0d 92       	st	X+, r0
    3864:	8a 95       	dec	r24
    3866:	e1 f7       	brne	.-8      	; 0x3860 <authenticate+0x10c>
		can_send_frame_buffer(mac2, 2);
    3868:	62 e0       	ldi	r22, 0x02	; 2
    386a:	ce 01       	movw	r24, r28
    386c:	8f 53       	subi	r24, 0x3F	; 63
    386e:	9f 4f       	sbci	r25, 0xFF	; 255
    3870:	0e 94 57 03 	call	0x6ae	; 0x6ae <can_send_frame_buffer>
		
		//wait for acknowledgment.
		can_receive_message(0, default_id, 0x00, ack);
    3874:	9e 01       	movw	r18, r28
    3876:	2f 52       	subi	r18, 0x2F	; 47
    3878:	3f 4f       	sbci	r19, 0xFF	; 255
    387a:	40 e0       	ldi	r20, 0x00	; 0
    387c:	50 e0       	ldi	r21, 0x00	; 0
    387e:	6b eb       	ldi	r22, 0xBB	; 187
    3880:	73 e0       	ldi	r23, 0x03	; 3
    3882:	80 e0       	ldi	r24, 0x00	; 0
    3884:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <can_receive_message>
		if(ack[0] == ACK_POS){
    3888:	cf 52       	subi	r28, 0x2F	; 47
    388a:	df 4f       	sbci	r29, 0xFF	; 255
    388c:	88 81       	ld	r24, Y
    388e:	c1 5d       	subi	r28, 0xD1	; 209
    3890:	d0 40       	sbci	r29, 0x00	; 0
    3892:	81 11       	cpse	r24, r1
    3894:	4a c0       	rjmp	.+148    	; 0x392a <authenticate+0x1d6>
			uart_puts("message accepted!");
    3896:	89 e9       	ldi	r24, 0x99	; 153
    3898:	93 e0       	ldi	r25, 0x03	; 3
    389a:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
    389e:	9f ef       	ldi	r25, 0xFF	; 255
    38a0:	24 e3       	ldi	r18, 0x34	; 52
    38a2:	8c e0       	ldi	r24, 0x0C	; 12
    38a4:	91 50       	subi	r25, 0x01	; 1
    38a6:	20 40       	sbci	r18, 0x00	; 0
    38a8:	80 40       	sbci	r24, 0x00	; 0
    38aa:	e1 f7       	brne	.-8      	; 0x38a4 <authenticate+0x150>
    38ac:	00 c0       	rjmp	.+0      	; 0x38ae <authenticate+0x15a>
    38ae:	00 00       	nop
		}else{
			uart_puts("message denied!");
			continue;
		}
		_delay_ms(500);
		id++;
    38b0:	92 e0       	ldi	r25, 0x02	; 2
    38b2:	89 0e       	add	r8, r25
    38b4:	91 1c       	adc	r9, r1
		message++;
    38b6:	28 e0       	ldi	r18, 0x08	; 8
    38b8:	a2 0e       	add	r10, r18
    38ba:	b1 1c       	adc	r11, r1
		}else{
		uart_puts("Authentication failed!");
		return 0;
	}
	
	while(rounds > 0){
    38bc:	dd 20       	and	r13, r13
    38be:	f1 f0       	breq	.+60     	; 0x38fc <authenticate+0x1a8>
		rounds--;
    38c0:	da 94       	dec	r13
		
		//Send message you want to send to the vehicle network.
		can_send_message(0, *id, *message);
    38c2:	a5 01       	movw	r20, r10
    38c4:	b4 01       	movw	r22, r8
    38c6:	80 e0       	ldi	r24, 0x00	; 0
    38c8:	0e 94 ad 02 	call	0x55a	; 0x55a <can_send_message>
		
		//Wait for acknowledgment.
		can_msg_t ack;
		can_receive_message(0, default_id, 0x00, ack);
    38cc:	9e 01       	movw	r18, r28
    38ce:	2f 52       	subi	r18, 0x2F	; 47
    38d0:	3f 4f       	sbci	r19, 0xFF	; 255
    38d2:	40 e0       	ldi	r20, 0x00	; 0
    38d4:	50 e0       	ldi	r21, 0x00	; 0
    38d6:	6b eb       	ldi	r22, 0xBB	; 187
    38d8:	73 e0       	ldi	r23, 0x03	; 3
    38da:	80 e0       	ldi	r24, 0x00	; 0
    38dc:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <can_receive_message>
		if(ack[0] == ACK_POS){
    38e0:	cf 52       	subi	r28, 0x2F	; 47
    38e2:	df 4f       	sbci	r29, 0xFF	; 255
    38e4:	88 81       	ld	r24, Y
    38e6:	c1 5d       	subi	r28, 0xD1	; 209
    38e8:	d0 40       	sbci	r29, 0x00	; 0
    38ea:	88 23       	and	r24, r24
    38ec:	09 f4       	brne	.+2      	; 0x38f0 <authenticate+0x19c>
    38ee:	a0 cf       	rjmp	.-192    	; 0x3830 <authenticate+0xdc>
			uart_puts("permission granted!");
			}else{
			uart_puts("permission denied!");
    38f0:	86 e8       	ldi	r24, 0x86	; 134
    38f2:	93 e0       	ldi	r25, 0x03	; 3
    38f4:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
		}else{
		uart_puts("Authentication failed!");
		return 0;
	}
	
	while(rounds > 0){
    38f8:	d1 10       	cpse	r13, r1
    38fa:	e2 cf       	rjmp	.-60     	; 0x38c0 <authenticate+0x16c>
		_delay_ms(500);
		id++;
		message++;
	}
	return 0;
}
    38fc:	80 e0       	ldi	r24, 0x00	; 0
    38fe:	90 e0       	ldi	r25, 0x00	; 0
    3900:	c8 51       	subi	r28, 0x18	; 24
    3902:	df 4f       	sbci	r29, 0xFF	; 255
    3904:	0f b6       	in	r0, 0x3f	; 63
    3906:	f8 94       	cli
    3908:	de bf       	out	0x3e, r29	; 62
    390a:	0f be       	out	0x3f, r0	; 63
    390c:	cd bf       	out	0x3d, r28	; 61
    390e:	df 91       	pop	r29
    3910:	cf 91       	pop	r28
    3912:	1f 91       	pop	r17
    3914:	0f 91       	pop	r16
    3916:	ff 90       	pop	r15
    3918:	ef 90       	pop	r14
    391a:	df 90       	pop	r13
    391c:	bf 90       	pop	r11
    391e:	af 90       	pop	r10
    3920:	9f 90       	pop	r9
    3922:	8f 90       	pop	r8
    3924:	7f 90       	pop	r7
    3926:	6f 90       	pop	r6
    3928:	08 95       	ret
		//wait for acknowledgment.
		can_receive_message(0, default_id, 0x00, ack);
		if(ack[0] == ACK_POS){
			uart_puts("message accepted!");
		}else{
			uart_puts("message denied!");
    392a:	8b ea       	ldi	r24, 0xAB	; 171
    392c:	93 e0       	ldi	r25, 0x03	; 3
    392e:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
			continue;
    3932:	c4 cf       	rjmp	.-120    	; 0x38bc <authenticate+0x168>
	//wait for acknowledgment.
	can_receive_message(0, default_id, 0x00, ack);
	if(ack[0] == ACK_POS){
		uart_puts("Succesfully authenticated!");
		}else{
		uart_puts("Authentication failed!");
    3934:	8b e5       	ldi	r24, 0x5B	; 91
    3936:	93 e0       	ldi	r25, 0x03	; 3
    3938:	0e 94 c7 2d 	call	0x5b8e	; 0x5b8e <uart_puts>
		return 0;
    393c:	df cf       	rjmp	.-66     	; 0x38fc <authenticate+0x1a8>
	}
	
	//Sign the public key.
	uint8_t signature[64];
	if(run_scenario == SCENARIO1){
		sign_challenge_dummy(public, signature, role);
    393e:	ce 01       	movw	r24, r28
    3940:	8f 5b       	subi	r24, 0xBF	; 191
    3942:	9f 4f       	sbci	r25, 0xFF	; 255
    3944:	e6 dd       	rcall	.-1076   	; 0x3512 <sign_challenge_dummy>
    3946:	9f ef       	ldi	r25, 0xFF	; 255
    3948:	29 e6       	ldi	r18, 0x69	; 105
    394a:	88 e1       	ldi	r24, 0x18	; 24
    394c:	91 50       	subi	r25, 0x01	; 1
    394e:	20 40       	sbci	r18, 0x00	; 0
    3950:	80 40       	sbci	r24, 0x00	; 0
    3952:	e1 f7       	brne	.-8      	; 0x394c <authenticate+0x1f8>
    3954:	00 c0       	rjmp	.+0      	; 0x3956 <authenticate+0x202>
    3956:	00 00       	nop
    3958:	4b cf       	rjmp	.-362    	; 0x37f0 <authenticate+0x9c>
	can_receive_frame_buffer(public, 8);
	
	//Calculate shared secret.
	uint8_t secret[32];
	if(run_scenario == SCENARIO1){
		calculate_shared_secret_dummy(public, role, secret);
    395a:	21 ea       	ldi	r18, 0xA1	; 161
    395c:	62 0e       	add	r6, r18
    395e:	71 1c       	adc	r7, r1
    3960:	a3 01       	movw	r20, r6
    3962:	61 2f       	mov	r22, r17
    3964:	ce 01       	movw	r24, r28
    3966:	8f 5b       	subi	r24, 0xBF	; 191
    3968:	9f 4f       	sbci	r25, 0xFF	; 255
    396a:	27 de       	rcall	.-946    	; 0x35ba <calculate_shared_secret_dummy>
    396c:	8f ef       	ldi	r24, 0xFF	; 255
    396e:	99 e6       	ldi	r25, 0x69	; 105
    3970:	28 e1       	ldi	r18, 0x18	; 24
    3972:	81 50       	subi	r24, 0x01	; 1
    3974:	90 40       	sbci	r25, 0x00	; 0
    3976:	20 40       	sbci	r18, 0x00	; 0
    3978:	e1 f7       	brne	.-8      	; 0x3972 <authenticate+0x21e>
    397a:	00 c0       	rjmp	.+0      	; 0x397c <authenticate+0x228>
    397c:	00 00       	nop
    397e:	2a cf       	rjmp	.-428    	; 0x37d4 <authenticate+0x80>

00003980 <main>:
	}
	return 0;
}

 int main()
 {	
    3980:	0f 93       	push	r16
    3982:	1f 93       	push	r17
    3984:	cf 93       	push	r28
    3986:	df 93       	push	r29
    3988:	cd b7       	in	r28, 0x3d	; 61
    398a:	de b7       	in	r29, 0x3e	; 62
    398c:	6e 97       	sbiw	r28, 0x1e	; 30
    398e:	0f b6       	in	r0, 0x3f	; 63
    3990:	f8 94       	cli
    3992:	de bf       	out	0x3e, r29	; 62
    3994:	0f be       	out	0x3f, r0	; 63
    3996:	cd bf       	out	0x3d, r28	; 61
	 uart_init();
    3998:	0e 94 bb 2d 	call	0x5b76	; 0x5b76 <uart_init>
} run_t;

volatile run_t run_scenario = NOTHING;
		
void buttons_init(){
	DDRE = 0x00;
    399c:	1d b8       	out	0x0d, r1	; 13
	PORTE = 1 << PE4 | 1 << PE5 | 1 << PE6 | 1 << PE7;
    399e:	80 ef       	ldi	r24, 0xF0	; 240
    39a0:	8e b9       	out	0x0e, r24	; 14
	EICRB = 0x00;
    39a2:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	//EICRB = 1 << ISC40 | 1 << ISC41 | 1 << ISC50 | 1 << ISC51 | 1 << ISC60 | 1 << ISC61 | 1 << ISC70 | 1 << ISC71; // set interrupt on falling edge.
	EIMSK = 1 << INT4 | 1 << INT5 | 1 << INT6 | 1 << INT7;
    39a6:	8d bb       	out	0x1d, r24	; 29

 int main()
 {	
	 uart_init();
	 buttons_init();
	 can_init();
    39a8:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <can_init>
    39ac:	8e 01       	movw	r16, r28
    39ae:	0f 5f       	subi	r16, 0xFF	; 255
    39b0:	1f 4f       	sbci	r17, 0xFF	; 255
	 
	 while(1){
		run_t runlcl = run_scenario;
		uint8_t msgs[3][8] = { {0,0,0,0,0,0,0,0} , {0,0,0,0,0,0,0,0} , {0,0,0,0,0,0,0,0} };
    39b2:	88 e1       	ldi	r24, 0x18	; 24
	 uart_init();
	 buttons_init();
	 can_init();
	 
	 while(1){
		run_t runlcl = run_scenario;
    39b4:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <run_scenario>
		uint8_t msgs[3][8] = { {0,0,0,0,0,0,0,0} , {0,0,0,0,0,0,0,0} , {0,0,0,0,0,0,0,0} };
    39b8:	f8 01       	movw	r30, r16
    39ba:	28 2f       	mov	r18, r24
    39bc:	11 92       	st	Z+, r1
    39be:	2a 95       	dec	r18
    39c0:	e9 f7       	brne	.-6      	; 0x39bc <main+0x3c>
		uint8_t ids[3][2] = {{177,7},{224,7},{38,7}};
    39c2:	26 e0       	ldi	r18, 0x06	; 6
    39c4:	e4 e0       	ldi	r30, 0x04	; 4
    39c6:	f1 e0       	ldi	r31, 0x01	; 1
    39c8:	de 01       	movw	r26, r28
    39ca:	59 96       	adiw	r26, 0x19	; 25
    39cc:	01 90       	ld	r0, Z+
    39ce:	0d 92       	st	X+, r0
    39d0:	2a 95       	dec	r18
    39d2:	e1 f7       	brne	.-8      	; 0x39cc <main+0x4c>
		switch(runlcl){
    39d4:	92 30       	cpi	r25, 0x02	; 2
    39d6:	21 f0       	breq	.+8      	; 0x39e0 <main+0x60>
    39d8:	93 30       	cpi	r25, 0x03	; 3
    39da:	b1 f0       	breq	.+44     	; 0x3a08 <main+0x88>
    39dc:	91 30       	cpi	r25, 0x01	; 1
    39de:	51 f7       	brne	.-44     	; 0x39b4 <main+0x34>
				return 0;
				break;
				
			//SCENARIO2: Use owner private key (Some messages will be denied).
			case SCENARIO2 :
				authenticate(msgs, ids, OWNER_ROLE,3);
    39e0:	23 e0       	ldi	r18, 0x03	; 3
    39e2:	41 e0       	ldi	r20, 0x01	; 1
    39e4:	be 01       	movw	r22, r28
    39e6:	67 5e       	subi	r22, 0xE7	; 231
    39e8:	7f 4f       	sbci	r23, 0xFF	; 255
    39ea:	c8 01       	movw	r24, r16
    39ec:	b3 de       	rcall	.-666    	; 0x3754 <authenticate>
				return 0;
				break;
		}
	 }
	 return 0;
 }
    39ee:	80 e0       	ldi	r24, 0x00	; 0
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	6e 96       	adiw	r28, 0x1e	; 30
    39f4:	0f b6       	in	r0, 0x3f	; 63
    39f6:	f8 94       	cli
    39f8:	de bf       	out	0x3e, r29	; 62
    39fa:	0f be       	out	0x3f, r0	; 63
    39fc:	cd bf       	out	0x3d, r28	; 61
    39fe:	df 91       	pop	r29
    3a00:	cf 91       	pop	r28
    3a02:	1f 91       	pop	r17
    3a04:	0f 91       	pop	r16
    3a06:	08 95       	ret
				return 0;
				break;
				
			//SCENARIO3: Use tester private key (all messages accepted).
			case SCENARIO3 :
				authenticate(msgs, ids, TESTER_ROLE,3);
    3a08:	23 e0       	ldi	r18, 0x03	; 3
    3a0a:	48 e0       	ldi	r20, 0x08	; 8
    3a0c:	be 01       	movw	r22, r28
    3a0e:	67 5e       	subi	r22, 0xE7	; 231
    3a10:	7f 4f       	sbci	r23, 0xFF	; 255
    3a12:	c8 01       	movw	r24, r16
    3a14:	9f de       	rcall	.-706    	; 0x3754 <authenticate>
				return 0;
    3a16:	eb cf       	rjmp	.-42     	; 0x39ee <main+0x6e>

00003a18 <hmac_sha256>:

/*
 * keylength in bits!
 * message length in bits!
 */
void hmac_sha256(void *dest, const void *key, uint16_t keylength_b, const void *msg, uint32_t msglength_b){ /* a one-shot*/
    3a18:	2f 92       	push	r2
    3a1a:	3f 92       	push	r3
    3a1c:	4f 92       	push	r4
    3a1e:	5f 92       	push	r5
    3a20:	6f 92       	push	r6
    3a22:	7f 92       	push	r7
    3a24:	8f 92       	push	r8
    3a26:	9f 92       	push	r9
    3a28:	af 92       	push	r10
    3a2a:	bf 92       	push	r11
    3a2c:	cf 92       	push	r12
    3a2e:	df 92       	push	r13
    3a30:	ef 92       	push	r14
    3a32:	ff 92       	push	r15
    3a34:	0f 93       	push	r16
    3a36:	1f 93       	push	r17
    3a38:	cf 93       	push	r28
    3a3a:	df 93       	push	r29
    3a3c:	cd b7       	in	r28, 0x3d	; 61
    3a3e:	de b7       	in	r29, 0x3e	; 62
    3a40:	c8 56       	subi	r28, 0x68	; 104
    3a42:	d1 09       	sbc	r29, r1
    3a44:	0f b6       	in	r0, 0x3f	; 63
    3a46:	f8 94       	cli
    3a48:	de bf       	out	0x3e, r29	; 62
    3a4a:	0f be       	out	0x3f, r0	; 63
    3a4c:	cd bf       	out	0x3d, r28	; 61
    3a4e:	4c 01       	movw	r8, r24
    3a50:	19 01       	movw	r2, r18
    3a52:	a9 96       	adiw	r28, 0x29	; 41
    3a54:	ec ae       	std	Y+60, r14	; 0x3c
    3a56:	fd ae       	std	Y+61, r15	; 0x3d
    3a58:	0e af       	std	Y+62, r16	; 0x3e
    3a5a:	1f af       	std	Y+63, r17	; 0x3f
    3a5c:	a9 97       	sbiw	r28, 0x29	; 41
	sha256_ctx_t s;
	uint8_t i;
	uint8_t buffer[HMAC_SHA256_BLOCK_BYTES];
	
	memset(buffer, 0, HMAC_SHA256_BLOCK_BYTES);
    3a5e:	ce 01       	movw	r24, r28
    3a60:	01 96       	adiw	r24, 0x01	; 1
    3a62:	7c 01       	movw	r14, r24
    3a64:	80 e4       	ldi	r24, 0x40	; 64
    3a66:	d7 01       	movw	r26, r14
    3a68:	1d 92       	st	X+, r1
    3a6a:	8a 95       	dec	r24
    3a6c:	e9 f7       	brne	.-6      	; 0x3a68 <hmac_sha256+0x50>
	
	/* if key is larger than a block we have to hash it*/
	if (keylength_b > SHA256_BLOCK_BITS){
    3a6e:	41 30       	cpi	r20, 0x01	; 1
    3a70:	b2 e0       	ldi	r27, 0x02	; 2
    3a72:	5b 07       	cpc	r21, r27
    3a74:	08 f4       	brcc	.+2      	; 0x3a78 <hmac_sha256+0x60>
    3a76:	9d c0       	rjmp	.+314    	; 0x3bb2 <hmac_sha256+0x19a>
		sha256((void*)buffer, key, keylength_b);
    3a78:	9a 01       	movw	r18, r20
    3a7a:	40 e0       	ldi	r20, 0x00	; 0
    3a7c:	50 e0       	ldi	r21, 0x00	; 0
    3a7e:	c7 01       	movw	r24, r14
    3a80:	b3 d0       	rcall	.+358    	; 0x3be8 <sha256>
    3a82:	87 01       	movw	r16, r14
    3a84:	6e 01       	movw	r12, r28
    3a86:	e1 e4       	ldi	r30, 0x41	; 65
    3a88:	ce 0e       	add	r12, r30
    3a8a:	d1 1c       	adc	r13, r1

/*
 * keylength in bits!
 * message length in bits!
 */
void hmac_sha256(void *dest, const void *key, uint16_t keylength_b, const void *msg, uint32_t msglength_b){ /* a one-shot*/
    3a8c:	f7 01       	movw	r30, r14
	} else {
		memcpy(buffer, key, (keylength_b+7)/8);
	}
	
	for (i=0; i<SHA256_BLOCK_BYTES; ++i){
		buffer[i] ^= IPAD;
    3a8e:	96 e3       	ldi	r25, 0x36	; 54
    3a90:	80 81       	ld	r24, Z
    3a92:	89 27       	eor	r24, r25
    3a94:	81 93       	st	Z+, r24
		sha256((void*)buffer, key, keylength_b);
	} else {
		memcpy(buffer, key, (keylength_b+7)/8);
	}
	
	for (i=0; i<SHA256_BLOCK_BYTES; ++i){
    3a96:	ec 15       	cp	r30, r12
    3a98:	fd 05       	cpc	r31, r13
    3a9a:	d1 f7       	brne	.-12     	; 0x3a90 <hmac_sha256+0x78>
		buffer[i] ^= IPAD;
	}
	sha256_init(&s);
    3a9c:	c6 01       	movw	r24, r12
    3a9e:	95 d0       	rcall	.+298    	; 0x3bca <sha256_init>
	sha256_nextBlock(&s, buffer);
    3aa0:	b7 01       	movw	r22, r14
    3aa2:	c6 01       	movw	r24, r12
    3aa4:	9d d0       	rcall	.+314    	; 0x3be0 <sha256_nextBlock>
	while (msglength_b >= HMAC_SHA256_BLOCK_BITS){
    3aa6:	a9 96       	adiw	r28, 0x29	; 41
    3aa8:	8c ad       	ldd	r24, Y+60	; 0x3c
    3aaa:	9d ad       	ldd	r25, Y+61	; 0x3d
    3aac:	ae ad       	ldd	r26, Y+62	; 0x3e
    3aae:	bf ad       	ldd	r27, Y+63	; 0x3f
    3ab0:	a9 97       	sbiw	r28, 0x29	; 41
    3ab2:	81 15       	cp	r24, r1
    3ab4:	e2 e0       	ldi	r30, 0x02	; 2
    3ab6:	9e 07       	cpc	r25, r30
    3ab8:	a1 05       	cpc	r26, r1
    3aba:	b1 05       	cpc	r27, r1
    3abc:	08 f4       	brcc	.+2      	; 0x3ac0 <hmac_sha256+0xa8>
    3abe:	3e c0       	rjmp	.+124    	; 0x3b3c <hmac_sha256+0x124>
    3ac0:	2c 01       	movw	r4, r24
    3ac2:	3d 01       	movw	r6, r26
		sha256_nextBlock(&s, msg);
    3ac4:	51 01       	movw	r10, r2
    3ac6:	b5 01       	movw	r22, r10
    3ac8:	c6 01       	movw	r24, r12
    3aca:	8a d0       	rcall	.+276    	; 0x3be0 <sha256_nextBlock>
		msg = (uint8_t*)msg + HMAC_SHA256_BLOCK_BYTES;
    3acc:	f0 e4       	ldi	r31, 0x40	; 64
    3ace:	af 0e       	add	r10, r31
    3ad0:	b1 1c       	adc	r11, r1
		msglength_b -=  HMAC_SHA256_BLOCK_BITS;
    3ad2:	22 e0       	ldi	r18, 0x02	; 2
    3ad4:	52 1a       	sub	r5, r18
    3ad6:	61 08       	sbc	r6, r1
    3ad8:	71 08       	sbc	r7, r1
	for (i=0; i<SHA256_BLOCK_BYTES; ++i){
		buffer[i] ^= IPAD;
	}
	sha256_init(&s);
	sha256_nextBlock(&s, buffer);
	while (msglength_b >= HMAC_SHA256_BLOCK_BITS){
    3ada:	41 14       	cp	r4, r1
    3adc:	82 e0       	ldi	r24, 0x02	; 2
    3ade:	58 06       	cpc	r5, r24
    3ae0:	61 04       	cpc	r6, r1
    3ae2:	71 04       	cpc	r7, r1
    3ae4:	80 f7       	brcc	.-32     	; 0x3ac6 <hmac_sha256+0xae>
    3ae6:	a9 96       	adiw	r28, 0x29	; 41
    3ae8:	8c ad       	ldd	r24, Y+60	; 0x3c
    3aea:	9d ad       	ldd	r25, Y+61	; 0x3d
    3aec:	ae ad       	ldd	r26, Y+62	; 0x3e
    3aee:	bf ad       	ldd	r27, Y+63	; 0x3f
    3af0:	a9 97       	sbiw	r28, 0x29	; 41
    3af2:	92 50       	subi	r25, 0x02	; 2
    3af4:	a1 09       	sbc	r26, r1
    3af6:	b1 09       	sbc	r27, r1
    3af8:	29 e0       	ldi	r18, 0x09	; 9
    3afa:	b6 95       	lsr	r27
    3afc:	a7 95       	ror	r26
    3afe:	97 95       	ror	r25
    3b00:	87 95       	ror	r24
    3b02:	2a 95       	dec	r18
    3b04:	d1 f7       	brne	.-12     	; 0x3afa <hmac_sha256+0xe2>
    3b06:	01 96       	adiw	r24, 0x01	; 1
    3b08:	00 24       	eor	r0, r0
    3b0a:	96 95       	lsr	r25
    3b0c:	87 95       	ror	r24
    3b0e:	07 94       	ror	r0
    3b10:	96 95       	lsr	r25
    3b12:	87 95       	ror	r24
    3b14:	07 94       	ror	r0
    3b16:	98 2f       	mov	r25, r24
    3b18:	80 2d       	mov	r24, r0
    3b1a:	28 0e       	add	r2, r24
    3b1c:	39 1e       	adc	r3, r25
    3b1e:	a9 96       	adiw	r28, 0x29	; 41
    3b20:	8c ad       	ldd	r24, Y+60	; 0x3c
    3b22:	9d ad       	ldd	r25, Y+61	; 0x3d
    3b24:	ae ad       	ldd	r26, Y+62	; 0x3e
    3b26:	bf ad       	ldd	r27, Y+63	; 0x3f
    3b28:	a9 97       	sbiw	r28, 0x29	; 41
    3b2a:	91 70       	andi	r25, 0x01	; 1
    3b2c:	aa 27       	eor	r26, r26
    3b2e:	bb 27       	eor	r27, r27
    3b30:	a9 96       	adiw	r28, 0x29	; 41
    3b32:	8c af       	std	Y+60, r24	; 0x3c
    3b34:	9d af       	std	Y+61, r25	; 0x3d
    3b36:	ae af       	std	Y+62, r26	; 0x3e
    3b38:	bf af       	std	Y+63, r27	; 0x3f
    3b3a:	a9 97       	sbiw	r28, 0x29	; 41
		sha256_nextBlock(&s, msg);
		msg = (uint8_t*)msg + HMAC_SHA256_BLOCK_BYTES;
		msglength_b -=  HMAC_SHA256_BLOCK_BITS;
	}
	sha256_lastBlock(&s, msg, msglength_b);
    3b3c:	a7 96       	adiw	r28, 0x27	; 39
    3b3e:	4e ad       	ldd	r20, Y+62	; 0x3e
    3b40:	5f ad       	ldd	r21, Y+63	; 0x3f
    3b42:	a7 97       	sbiw	r28, 0x27	; 39
    3b44:	b1 01       	movw	r22, r2
    3b46:	c6 01       	movw	r24, r12
    3b48:	4d d0       	rcall	.+154    	; 0x3be4 <sha256_lastBlock>
	/* since buffer still contains key xor ipad we can do ... */
	for (i=0; i<HMAC_SHA256_BLOCK_BYTES; ++i){
		buffer[i] ^= IPAD ^ OPAD;
    3b4a:	9a e6       	ldi	r25, 0x6A	; 106
    3b4c:	d8 01       	movw	r26, r16
    3b4e:	8c 91       	ld	r24, X
    3b50:	89 27       	eor	r24, r25
    3b52:	f8 01       	movw	r30, r16
    3b54:	81 93       	st	Z+, r24
    3b56:	8f 01       	movw	r16, r30
		msg = (uint8_t*)msg + HMAC_SHA256_BLOCK_BYTES;
		msglength_b -=  HMAC_SHA256_BLOCK_BITS;
	}
	sha256_lastBlock(&s, msg, msglength_b);
	/* since buffer still contains key xor ipad we can do ... */
	for (i=0; i<HMAC_SHA256_BLOCK_BYTES; ++i){
    3b58:	ec 15       	cp	r30, r12
    3b5a:	fd 05       	cpc	r31, r13
		buffer[i] ^= IPAD ^ OPAD;
	}
	sha256_ctx2hash(dest, &s); /* save inner hash temporary to dest */
    3b5c:	b9 f7       	brne	.-18     	; 0x3b4c <hmac_sha256+0x134>
    3b5e:	bf 01       	movw	r22, r30
    3b60:	c4 01       	movw	r24, r8
	sha256_init(&s);
    3b62:	d4 d0       	rcall	.+424    	; 0x3d0c <sha256_ctx2hash>
    3b64:	c8 01       	movw	r24, r16
    3b66:	31 d0       	rcall	.+98     	; 0x3bca <sha256_init>
	sha256_nextBlock(&s, buffer);
    3b68:	b7 01       	movw	r22, r14
    3b6a:	c8 01       	movw	r24, r16
    3b6c:	39 d0       	rcall	.+114    	; 0x3be0 <sha256_nextBlock>
	sha256_lastBlock(&s, dest, SHA256_HASH_BITS);
    3b6e:	40 e0       	ldi	r20, 0x00	; 0
    3b70:	51 e0       	ldi	r21, 0x01	; 1
    3b72:	b4 01       	movw	r22, r8
    3b74:	c8 01       	movw	r24, r16
    3b76:	36 d0       	rcall	.+108    	; 0x3be4 <sha256_lastBlock>
    3b78:	b8 01       	movw	r22, r16
	sha256_ctx2hash(dest, &s);
    3b7a:	c4 01       	movw	r24, r8
    3b7c:	c7 d0       	rcall	.+398    	; 0x3d0c <sha256_ctx2hash>
    3b7e:	c8 59       	subi	r28, 0x98	; 152
    3b80:	df 4f       	sbci	r29, 0xFF	; 255
}
    3b82:	0f b6       	in	r0, 0x3f	; 63
    3b84:	f8 94       	cli
    3b86:	de bf       	out	0x3e, r29	; 62
    3b88:	0f be       	out	0x3f, r0	; 63
    3b8a:	cd bf       	out	0x3d, r28	; 61
    3b8c:	df 91       	pop	r29
    3b8e:	cf 91       	pop	r28
    3b90:	1f 91       	pop	r17
    3b92:	0f 91       	pop	r16
    3b94:	ff 90       	pop	r15
    3b96:	ef 90       	pop	r14
    3b98:	df 90       	pop	r13
    3b9a:	cf 90       	pop	r12
    3b9c:	bf 90       	pop	r11
    3b9e:	af 90       	pop	r10
    3ba0:	9f 90       	pop	r9
    3ba2:	8f 90       	pop	r8
    3ba4:	7f 90       	pop	r7
    3ba6:	6f 90       	pop	r6
    3ba8:	5f 90       	pop	r5
    3baa:	4f 90       	pop	r4
    3bac:	3f 90       	pop	r3
    3bae:	2f 90       	pop	r2
    3bb0:	08 95       	ret
    3bb2:	49 5f       	subi	r20, 0xF9	; 249
    3bb4:	5f 4f       	sbci	r21, 0xFF	; 255
	
	/* if key is larger than a block we have to hash it*/
	if (keylength_b > SHA256_BLOCK_BITS){
		sha256((void*)buffer, key, keylength_b);
	} else {
		memcpy(buffer, key, (keylength_b+7)/8);
    3bb6:	56 95       	lsr	r21
    3bb8:	47 95       	ror	r20
    3bba:	56 95       	lsr	r21
    3bbc:	47 95       	ror	r20
    3bbe:	56 95       	lsr	r21
    3bc0:	47 95       	ror	r20
    3bc2:	c7 01       	movw	r24, r14
    3bc4:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <memcpy>
    3bc8:	5c cf       	rjmp	.-328    	; 0x3a82 <hmac_sha256+0x6a>

00003bca <sha256_init>:
 * \c sh256_init c initialises the given sha256 context for hashing
 * @param state pointer to a sha256 context
 * @return none
 */
void sha256_init(sha256_ctx_t *state){
	state->length=0;
    3bca:	fc 01       	movw	r30, r24
    3bcc:	10 a2       	std	Z+32, r1	; 0x20
    3bce:	11 a2       	std	Z+33, r1	; 0x21
    3bd0:	12 a2       	std	Z+34, r1	; 0x22
    3bd2:	13 a2       	std	Z+35, r1	; 0x23
	memcpy_P(state->h, sha256_init_vector, 8*4);
    3bd4:	40 e2       	ldi	r20, 0x20	; 32
    3bd6:	50 e0       	ldi	r21, 0x00	; 0
    3bd8:	64 e9       	ldi	r22, 0x94	; 148
    3bda:	70 e0       	ldi	r23, 0x00	; 0
    3bdc:	0c 94 a5 2e 	jmp	0x5d4a	; 0x5d4a <memcpy_P>

00003be0 <sha256_nextBlock>:
}

/*************************************************************************/
void sha256_nextBlock (sha256_ctx_t *state, const void *block){
	sha2_small_common_nextBlock(state, block);
    3be0:	0c 94 43 29 	jmp	0x5286	; 0x5286 <sha2_small_common_nextBlock>

00003be4 <sha256_lastBlock>:
}

/*************************************************************************/
void sha256_lastBlock (sha256_ctx_t *state, const void *block, uint16_t length_b){
	sha2_small_common_lastBlock(state, block, length_b);
    3be4:	0c 94 5a 2c 	jmp	0x58b4	; 0x58b4 <sha2_small_common_lastBlock>

00003be8 <sha256>:
/*************************************************************************/

/*
 * length in bits!
 */
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
    3be8:	4f 92       	push	r4
    3bea:	5f 92       	push	r5
    3bec:	6f 92       	push	r6
    3bee:	7f 92       	push	r7
    3bf0:	8f 92       	push	r8
    3bf2:	9f 92       	push	r9
    3bf4:	af 92       	push	r10
    3bf6:	bf 92       	push	r11
    3bf8:	cf 92       	push	r12
    3bfa:	df 92       	push	r13
    3bfc:	ef 92       	push	r14
    3bfe:	ff 92       	push	r15
    3c00:	0f 93       	push	r16
    3c02:	1f 93       	push	r17
    3c04:	cf 93       	push	r28
    3c06:	df 93       	push	r29
    3c08:	cd b7       	in	r28, 0x3d	; 61
    3c0a:	de b7       	in	r29, 0x3e	; 62
    3c0c:	a4 97       	sbiw	r28, 0x24	; 36
    3c0e:	0f b6       	in	r0, 0x3f	; 63
    3c10:	f8 94       	cli
    3c12:	de bf       	out	0x3e, r29	; 62
    3c14:	0f be       	out	0x3f, r0	; 63
    3c16:	cd bf       	out	0x3d, r28	; 61
    3c18:	8c 01       	movw	r16, r24
    3c1a:	6b 01       	movw	r12, r22
    3c1c:	29 01       	movw	r4, r18
    3c1e:	3a 01       	movw	r6, r20
 * \c sh256_init c initialises the given sha256 context for hashing
 * @param state pointer to a sha256 context
 * @return none
 */
void sha256_init(sha256_ctx_t *state){
	state->length=0;
    3c20:	19 a2       	std	Y+33, r1	; 0x21
    3c22:	1a a2       	std	Y+34, r1	; 0x22
    3c24:	1b a2       	std	Y+35, r1	; 0x23
    3c26:	1c a2       	std	Y+36, r1	; 0x24
	memcpy_P(state->h, sha256_init_vector, 8*4);
    3c28:	40 e2       	ldi	r20, 0x20	; 32
    3c2a:	50 e0       	ldi	r21, 0x00	; 0
    3c2c:	64 e9       	ldi	r22, 0x94	; 148
    3c2e:	70 e0       	ldi	r23, 0x00	; 0
    3c30:	ce 01       	movw	r24, r28
    3c32:	01 96       	adiw	r24, 0x01	; 1
    3c34:	0e 94 a5 2e 	call	0x5d4a	; 0x5d4a <memcpy_P>
 * length in bits!
 */
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
	sha256_ctx_t s;
	sha256_init(&s);
	while(length_b >= SHA256_BLOCK_BITS){
    3c38:	41 14       	cp	r4, r1
    3c3a:	82 e0       	ldi	r24, 0x02	; 2
    3c3c:	58 06       	cpc	r5, r24
    3c3e:	61 04       	cpc	r6, r1
    3c40:	71 04       	cpc	r7, r1
    3c42:	88 f1       	brcs	.+98     	; 0x3ca6 <sha256+0xbe>
    3c44:	53 01       	movw	r10, r6
    3c46:	42 01       	movw	r8, r4
    3c48:	76 01       	movw	r14, r12
	memcpy_P(state->h, sha256_init_vector, 8*4);
}

/*************************************************************************/
void sha256_nextBlock (sha256_ctx_t *state, const void *block){
	sha2_small_common_nextBlock(state, block);
    3c4a:	b7 01       	movw	r22, r14
    3c4c:	ce 01       	movw	r24, r28
    3c4e:	01 96       	adiw	r24, 0x01	; 1
    3c50:	0e 94 43 29 	call	0x5286	; 0x5286 <sha2_small_common_nextBlock>
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
	sha256_ctx_t s;
	sha256_init(&s);
	while(length_b >= SHA256_BLOCK_BITS){
		sha256_nextBlock(&s, msg);
		msg = (uint8_t*)msg + SHA256_BLOCK_BITS/8;
    3c54:	80 e4       	ldi	r24, 0x40	; 64
    3c56:	e8 0e       	add	r14, r24
    3c58:	f1 1c       	adc	r15, r1
		length_b -= SHA256_BLOCK_BITS;
    3c5a:	82 e0       	ldi	r24, 0x02	; 2
    3c5c:	98 1a       	sub	r9, r24
    3c5e:	a1 08       	sbc	r10, r1
    3c60:	b1 08       	sbc	r11, r1
 * length in bits!
 */
void sha256(void *dest, const void *msg, uint32_t length_b){ /* length could be choosen longer but this is for µC */
	sha256_ctx_t s;
	sha256_init(&s);
	while(length_b >= SHA256_BLOCK_BITS){
    3c62:	81 14       	cp	r8, r1
    3c64:	82 e0       	ldi	r24, 0x02	; 2
    3c66:	98 06       	cpc	r9, r24
    3c68:	a1 04       	cpc	r10, r1
    3c6a:	b1 04       	cpc	r11, r1
    3c6c:	70 f7       	brcc	.-36     	; 0x3c4a <sha256+0x62>
    3c6e:	d3 01       	movw	r26, r6
    3c70:	c2 01       	movw	r24, r4
    3c72:	92 50       	subi	r25, 0x02	; 2
    3c74:	a1 09       	sbc	r26, r1
    3c76:	b1 09       	sbc	r27, r1
    3c78:	29 e0       	ldi	r18, 0x09	; 9
    3c7a:	b6 95       	lsr	r27
    3c7c:	a7 95       	ror	r26
    3c7e:	97 95       	ror	r25
    3c80:	87 95       	ror	r24
    3c82:	2a 95       	dec	r18
    3c84:	d1 f7       	brne	.-12     	; 0x3c7a <sha256+0x92>
    3c86:	01 96       	adiw	r24, 0x01	; 1
    3c88:	00 24       	eor	r0, r0
    3c8a:	96 95       	lsr	r25
    3c8c:	87 95       	ror	r24
    3c8e:	07 94       	ror	r0
    3c90:	96 95       	lsr	r25
    3c92:	87 95       	ror	r24
    3c94:	07 94       	ror	r0
    3c96:	98 2f       	mov	r25, r24
    3c98:	80 2d       	mov	r24, r0
    3c9a:	c8 0e       	add	r12, r24
    3c9c:	d9 1e       	adc	r13, r25
    3c9e:	81 e0       	ldi	r24, 0x01	; 1
    3ca0:	58 22       	and	r5, r24
    3ca2:	66 24       	eor	r6, r6
    3ca4:	77 24       	eor	r7, r7
	sha2_small_common_nextBlock(state, block);
}

/*************************************************************************/
void sha256_lastBlock (sha256_ctx_t *state, const void *block, uint16_t length_b){
	sha2_small_common_lastBlock(state, block, length_b);
    3ca6:	a2 01       	movw	r20, r4
    3ca8:	b6 01       	movw	r22, r12
    3caa:	ce 01       	movw	r24, r28
    3cac:	01 96       	adiw	r24, 0x01	; 1
    3cae:	0e 94 5a 2c 	call	0x58b4	; 0x58b4 <sha2_small_common_lastBlock>

/*************************************************************************/

void sha256_ctx2hash(void *dest, const sha256_ctx_t *state){
#if defined LITTLE_ENDIAN
	uint8_t i, j, *s=(uint8_t*)(state->h);
    3cb2:	9e 01       	movw	r18, r28
    3cb4:	2f 5f       	subi	r18, 0xFF	; 255
    3cb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3cb8:	ae 01       	movw	r20, r28
    3cba:	4f 5d       	subi	r20, 0xDF	; 223
    3cbc:	5f 4f       	sbci	r21, 0xFF	; 255
    3cbe:	f8 01       	movw	r30, r16
	i=8;
	do{
		j=3;
    3cc0:	83 e0       	ldi	r24, 0x03	; 3
		do{
			*((uint8_t*)dest) = s[j];
    3cc2:	d9 01       	movw	r26, r18
    3cc4:	a8 0f       	add	r26, r24
    3cc6:	b1 1d       	adc	r27, r1
    3cc8:	9c 91       	ld	r25, X
    3cca:	91 93       	st	Z+, r25
			dest = (uint8_t*)dest + 1;
		}while(j--);
    3ccc:	81 50       	subi	r24, 0x01	; 1
    3cce:	c8 f7       	brcc	.-14     	; 0x3cc2 <sha256+0xda>
    3cd0:	0c 5f       	subi	r16, 0xFC	; 252
    3cd2:	1f 4f       	sbci	r17, 0xFF	; 255
		s += 4;
    3cd4:	2c 5f       	subi	r18, 0xFC	; 252
    3cd6:	3f 4f       	sbci	r19, 0xFF	; 255
	}while(--i);
    3cd8:	24 17       	cp	r18, r20
    3cda:	35 07       	cpc	r19, r21
    3cdc:	81 f7       	brne	.-32     	; 0x3cbe <sha256+0xd6>
		msg = (uint8_t*)msg + SHA256_BLOCK_BITS/8;
		length_b -= SHA256_BLOCK_BITS;
	}
	sha256_lastBlock(&s, msg, length_b);
	sha256_ctx2hash(dest,&s);
}
    3cde:	a4 96       	adiw	r28, 0x24	; 36
    3ce0:	0f b6       	in	r0, 0x3f	; 63
    3ce2:	f8 94       	cli
    3ce4:	de bf       	out	0x3e, r29	; 62
    3ce6:	0f be       	out	0x3f, r0	; 63
    3ce8:	cd bf       	out	0x3d, r28	; 61
    3cea:	df 91       	pop	r29
    3cec:	cf 91       	pop	r28
    3cee:	1f 91       	pop	r17
    3cf0:	0f 91       	pop	r16
    3cf2:	ff 90       	pop	r15
    3cf4:	ef 90       	pop	r14
    3cf6:	df 90       	pop	r13
    3cf8:	cf 90       	pop	r12
    3cfa:	bf 90       	pop	r11
    3cfc:	af 90       	pop	r10
    3cfe:	9f 90       	pop	r9
    3d00:	8f 90       	pop	r8
    3d02:	7f 90       	pop	r7
    3d04:	6f 90       	pop	r6
    3d06:	5f 90       	pop	r5
    3d08:	4f 90       	pop	r4
    3d0a:	08 95       	ret

00003d0c <sha256_ctx2hash>:



/*************************************************************************/

void sha256_ctx2hash(void *dest, const sha256_ctx_t *state){
    3d0c:	cf 93       	push	r28
    3d0e:	df 93       	push	r29
    3d10:	ac 01       	movw	r20, r24
    3d12:	ec 01       	movw	r28, r24
    3d14:	a0 96       	adiw	r28, 0x20	; 32
    3d16:	fa 01       	movw	r30, r20
#if defined LITTLE_ENDIAN
	uint8_t i, j, *s=(uint8_t*)(state->h);
	i=8;
	do{
		j=3;
    3d18:	93 e0       	ldi	r25, 0x03	; 3
		do{
			*((uint8_t*)dest) = s[j];
    3d1a:	db 01       	movw	r26, r22
    3d1c:	a9 0f       	add	r26, r25
    3d1e:	b1 1d       	adc	r27, r1
    3d20:	2c 91       	ld	r18, X
    3d22:	21 93       	st	Z+, r18
			dest = (uint8_t*)dest + 1;
		}while(j--);
    3d24:	91 50       	subi	r25, 0x01	; 1
    3d26:	c8 f7       	brcc	.-14     	; 0x3d1a <sha256_ctx2hash+0xe>
    3d28:	4c 5f       	subi	r20, 0xFC	; 252
    3d2a:	5f 4f       	sbci	r21, 0xFF	; 255
		s += 4;
    3d2c:	6c 5f       	subi	r22, 0xFC	; 252
    3d2e:	7f 4f       	sbci	r23, 0xFF	; 255
	}while(--i);
    3d30:	c4 17       	cp	r28, r20
    3d32:	d5 07       	cpc	r29, r21
    3d34:	81 f7       	brne	.-32     	; 0x3d16 <sha256_ctx2hash+0xa>
#elif BIG_ENDIAN
	memcpy(dest, state->h, 32);
#else
# error unsupported endian type!
#endif
}
    3d36:	df 91       	pop	r29
    3d38:	cf 91       	pop	r28
    3d3a:	08 95       	ret

00003d3c <sha2_large_common_nextBlock>:
#define SIGMA_0(x) (rotr64((x), 28) ^ rotl64((x), 30) ^ rotl64((x), 25))
#define SIGMA_1(x) (rotr64((x), 14) ^ rotr64((x), 18) ^ rotl64((x), 23))
#define SIGMA_a(x) (rotr64((x),  1) ^ rotr64((x),  8) ^ ((x)>>7))
#define SIGMA_b(x) (rotr64((x), 19) ^ rotl64((x),  3) ^ ((x)>>6))

void sha2_large_common_nextBlock(sha2_large_common_ctx_t *ctx, const void *block){
    3d3c:	2f 92       	push	r2
    3d3e:	3f 92       	push	r3
    3d40:	4f 92       	push	r4
    3d42:	5f 92       	push	r5
    3d44:	6f 92       	push	r6
    3d46:	7f 92       	push	r7
    3d48:	8f 92       	push	r8
    3d4a:	9f 92       	push	r9
    3d4c:	af 92       	push	r10
    3d4e:	bf 92       	push	r11
    3d50:	cf 92       	push	r12
    3d52:	df 92       	push	r13
    3d54:	ef 92       	push	r14
    3d56:	ff 92       	push	r15
    3d58:	0f 93       	push	r16
    3d5a:	1f 93       	push	r17
    3d5c:	cf 93       	push	r28
    3d5e:	df 93       	push	r29
    3d60:	cd b7       	in	r28, 0x3d	; 61
    3d62:	de b7       	in	r29, 0x3e	; 62
    3d64:	c2 5f       	subi	r28, 0xF2	; 242
    3d66:	d1 09       	sbc	r29, r1
    3d68:	0f b6       	in	r0, 0x3f	; 63
    3d6a:	f8 94       	cli
    3d6c:	de bf       	out	0x3e, r29	; 62
    3d6e:	0f be       	out	0x3f, r0	; 63
    3d70:	cd bf       	out	0x3d, r28	; 61
    3d72:	cf 50       	subi	r28, 0x0F	; 15
    3d74:	df 4f       	sbci	r29, 0xFF	; 255
    3d76:	99 83       	std	Y+1, r25	; 0x01
    3d78:	88 83       	st	Y, r24
    3d7a:	c1 5f       	subi	r28, 0xF1	; 241
    3d7c:	d0 40       	sbci	r29, 0x00	; 0
    3d7e:	c5 53       	subi	r28, 0x35	; 53
    3d80:	df 4f       	sbci	r29, 0xFF	; 255
    3d82:	79 83       	std	Y+1, r23	; 0x01
    3d84:	68 83       	st	Y, r22
    3d86:	cb 5c       	subi	r28, 0xCB	; 203
    3d88:	d0 40       	sbci	r29, 0x00	; 0
    3d8a:	ce 01       	movw	r24, r28
    3d8c:	01 96       	adiw	r24, 0x01	; 1
    3d8e:	cb 51       	subi	r28, 0x1B	; 27
    3d90:	df 4f       	sbci	r29, 0xFF	; 255
    3d92:	99 83       	std	Y+1, r25	; 0x01
    3d94:	88 83       	st	Y, r24
    3d96:	c5 5e       	subi	r28, 0xE5	; 229
    3d98:	d0 40       	sbci	r29, 0x00	; 0
    3d9a:	2e 01       	movw	r4, r28
    3d9c:	91 e8       	ldi	r25, 0x81	; 129
    3d9e:	49 0e       	add	r4, r25
    3da0:	51 1c       	adc	r5, r1
    3da2:	de 01       	movw	r26, r28
    3da4:	11 96       	adiw	r26, 0x01	; 1
    3da6:	c7 53       	subi	r28, 0x37	; 55
    3da8:	df 4f       	sbci	r29, 0xFF	; 255
    3daa:	b9 83       	std	Y+1, r27	; 0x01
    3dac:	a8 83       	st	Y, r26
    3dae:	c9 5c       	subi	r28, 0xC9	; 201
    3db0:	d0 40       	sbci	r29, 0x00	; 0
	uint64_t t1, t2;
	const uint64_t *k=sha2_large_common_const;
	uint8_t i;
	i=16;
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
    3db2:	c5 53       	subi	r28, 0x35	; 53
    3db4:	df 4f       	sbci	r29, 0xFF	; 255
    3db6:	a8 81       	ld	r26, Y
    3db8:	b9 81       	ldd	r27, Y+1	; 0x01
    3dba:	cb 5c       	subi	r28, 0xCB	; 203
    3dbc:	d0 40       	sbci	r29, 0x00	; 0
    3dbe:	ec 91       	ld	r30, X
    3dc0:	11 96       	adiw	r26, 0x01	; 1
    3dc2:	9c 90       	ld	r9, X
    3dc4:	11 97       	sbiw	r26, 0x01	; 1
    3dc6:	12 96       	adiw	r26, 0x02	; 2
    3dc8:	ac 90       	ld	r10, X
    3dca:	12 97       	sbiw	r26, 0x02	; 2
    3dcc:	13 96       	adiw	r26, 0x03	; 3
    3dce:	bc 90       	ld	r11, X
    3dd0:	13 97       	sbiw	r26, 0x03	; 3
    3dd2:	14 96       	adiw	r26, 0x04	; 4
    3dd4:	cc 90       	ld	r12, X
    3dd6:	14 97       	sbiw	r26, 0x04	; 4
    3dd8:	15 96       	adiw	r26, 0x05	; 5
    3dda:	dc 90       	ld	r13, X
    3ddc:	15 97       	sbiw	r26, 0x05	; 5
    3dde:	16 96       	adiw	r26, 0x06	; 6
    3de0:	2c 90       	ld	r2, X
    3de2:	16 97       	sbiw	r26, 0x06	; 6
    3de4:	17 96       	adiw	r26, 0x07	; 7
    3de6:	3c 90       	ld	r3, X
    3de8:	17 97       	sbiw	r26, 0x07	; 7
    3dea:	18 96       	adiw	r26, 0x08	; 8
    3dec:	c5 53       	subi	r28, 0x35	; 53
    3dee:	df 4f       	sbci	r29, 0xFF	; 255
    3df0:	b9 83       	std	Y+1, r27	; 0x01
    3df2:	a8 83       	st	Y, r26
    3df4:	cb 5c       	subi	r28, 0xCB	; 203
    3df6:	d0 40       	sbci	r29, 0x00	; 0
    3df8:	28 e0       	ldi	r18, 0x08	; 8
    3dfa:	82 2e       	mov	r8, r18
};


static const
uint64_t change_endian64(uint64_t x){
	uint64_t r=0;
    3dfc:	e1 2c       	mov	r14, r1
    3dfe:	f1 2c       	mov	r15, r1
    3e00:	10 e0       	ldi	r17, 0x00	; 0
    3e02:	b0 e0       	ldi	r27, 0x00	; 0
    3e04:	a0 e0       	ldi	r26, 0x00	; 0
    3e06:	c3 53       	subi	r28, 0x33	; 51
    3e08:	df 4f       	sbci	r29, 0xFF	; 255
    3e0a:	18 82       	st	Y, r1
    3e0c:	cd 5c       	subi	r28, 0xCD	; 205
    3e0e:	d0 40       	sbci	r29, 0x00	; 0
    3e10:	61 2c       	mov	r6, r1
    3e12:	71 2c       	mov	r7, r1
	uint8_t i=8;
	do{
		r <<= 8;
    3e14:	97 01       	movw	r18, r14
    3e16:	41 2f       	mov	r20, r17
    3e18:	5b 2f       	mov	r21, r27
    3e1a:	6a 2f       	mov	r22, r26
    3e1c:	c3 53       	subi	r28, 0x33	; 51
    3e1e:	df 4f       	sbci	r29, 0xFF	; 255
    3e20:	78 81       	ld	r23, Y
    3e22:	cd 5c       	subi	r28, 0xCD	; 205
    3e24:	d0 40       	sbci	r29, 0x00	; 0
    3e26:	c3 01       	movw	r24, r6
    3e28:	08 e0       	ldi	r16, 0x08	; 8
    3e2a:	0e 94 f5 2d 	call	0x5bea	; 0x5bea <__ashldi3>
		r |= 0xff&x;
    3e2e:	ee 2e       	mov	r14, r30
    3e30:	e2 2a       	or	r14, r18
    3e32:	f3 2e       	mov	r15, r19
    3e34:	14 2f       	mov	r17, r20
    3e36:	b5 2f       	mov	r27, r21
    3e38:	a6 2f       	mov	r26, r22
    3e3a:	c3 53       	subi	r28, 0x33	; 51
    3e3c:	df 4f       	sbci	r29, 0xFF	; 255
    3e3e:	78 83       	st	Y, r23
    3e40:	cd 5c       	subi	r28, 0xCD	; 205
    3e42:	d0 40       	sbci	r29, 0x00	; 0
    3e44:	3c 01       	movw	r6, r24
		x >>=8;
    3e46:	2e 2f       	mov	r18, r30
    3e48:	39 2d       	mov	r19, r9
    3e4a:	a5 01       	movw	r20, r10
    3e4c:	b6 01       	movw	r22, r12
    3e4e:	c1 01       	movw	r24, r2
    3e50:	0e 94 10 2e 	call	0x5c20	; 0x5c20 <__lshrdi3>
    3e54:	e2 2f       	mov	r30, r18
    3e56:	93 2e       	mov	r9, r19
    3e58:	5a 01       	movw	r10, r20
    3e5a:	6b 01       	movw	r12, r22
    3e5c:	1c 01       	movw	r2, r24
    3e5e:	8a 94       	dec	r8
	}while(--i);
    3e60:	81 10       	cpse	r8, r1
    3e62:	d8 cf       	rjmp	.-80     	; 0x3e14 <sha2_large_common_nextBlock+0xd8>
	uint64_t t1, t2;
	const uint64_t *k=sha2_large_common_const;
	uint8_t i;
	i=16;
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
    3e64:	c7 53       	subi	r28, 0x37	; 55
    3e66:	df 4f       	sbci	r29, 0xFF	; 255
    3e68:	e8 81       	ld	r30, Y
    3e6a:	f9 81       	ldd	r31, Y+1	; 0x01
    3e6c:	c9 5c       	subi	r28, 0xC9	; 201
    3e6e:	d0 40       	sbci	r29, 0x00	; 0
    3e70:	e0 82       	st	Z, r14
    3e72:	f1 82       	std	Z+1, r15	; 0x01
    3e74:	12 83       	std	Z+2, r17	; 0x02
    3e76:	b3 83       	std	Z+3, r27	; 0x03
    3e78:	a4 83       	std	Z+4, r26	; 0x04
    3e7a:	c3 53       	subi	r28, 0x33	; 51
    3e7c:	df 4f       	sbci	r29, 0xFF	; 255
    3e7e:	18 81       	ld	r17, Y
    3e80:	cd 5c       	subi	r28, 0xCD	; 205
    3e82:	d0 40       	sbci	r29, 0x00	; 0
    3e84:	15 83       	std	Z+5, r17	; 0x05
    3e86:	66 82       	std	Z+6, r6	; 0x06
    3e88:	77 82       	std	Z+7, r7	; 0x07
    3e8a:	38 96       	adiw	r30, 0x08	; 8
    3e8c:	c7 53       	subi	r28, 0x37	; 55
    3e8e:	df 4f       	sbci	r29, 0xFF	; 255
    3e90:	f9 83       	std	Y+1, r31	; 0x01
    3e92:	e8 83       	st	Y, r30
    3e94:	c9 5c       	subi	r28, 0xC9	; 201
    3e96:	d0 40       	sbci	r29, 0x00	; 0
		block = (uint8_t*)block + 8;
	}while(--i);
    3e98:	e4 15       	cp	r30, r4
    3e9a:	f5 05       	cpc	r31, r5
    3e9c:	09 f0       	breq	.+2      	; 0x3ea0 <sha2_large_common_nextBlock+0x164>
    3e9e:	89 cf       	rjmp	.-238    	; 0x3db2 <sha2_large_common_nextBlock+0x76>
	memcpy(a, ctx->h, 8*8);
    3ea0:	80 e4       	ldi	r24, 0x40	; 64
    3ea2:	cf 50       	subi	r28, 0x0F	; 15
    3ea4:	df 4f       	sbci	r29, 0xFF	; 255
    3ea6:	e8 81       	ld	r30, Y
    3ea8:	f9 81       	ldd	r31, Y+1	; 0x01
    3eaa:	c1 5f       	subi	r28, 0xF1	; 241
    3eac:	d0 40       	sbci	r29, 0x00	; 0
    3eae:	d2 01       	movw	r26, r4
    3eb0:	01 90       	ld	r0, Z+
    3eb2:	0d 92       	st	X+, r0
    3eb4:	8a 95       	dec	r24
    3eb6:	e1 f7       	brne	.-8      	; 0x3eb0 <sha2_large_common_nextBlock+0x174>
    3eb8:	d2 01       	movw	r26, r4
    3eba:	90 96       	adiw	r26, 0x20	; 32
    3ebc:	bc 91       	ld	r27, X
    3ebe:	c7 53       	subi	r28, 0x37	; 55
    3ec0:	df 4f       	sbci	r29, 0xFF	; 255
    3ec2:	b8 83       	st	Y, r27
    3ec4:	c9 5c       	subi	r28, 0xC9	; 201
    3ec6:	d0 40       	sbci	r29, 0x00	; 0
    3ec8:	f2 01       	movw	r30, r4
    3eca:	f1 a1       	ldd	r31, Z+33	; 0x21
    3ecc:	c5 53       	subi	r28, 0x35	; 53
    3ece:	df 4f       	sbci	r29, 0xFF	; 255
    3ed0:	f8 83       	st	Y, r31
    3ed2:	cb 5c       	subi	r28, 0xCB	; 203
    3ed4:	d0 40       	sbci	r29, 0x00	; 0
    3ed6:	d2 01       	movw	r26, r4
    3ed8:	92 96       	adiw	r26, 0x22	; 34
    3eda:	bc 91       	ld	r27, X
    3edc:	c3 53       	subi	r28, 0x33	; 51
    3ede:	df 4f       	sbci	r29, 0xFF	; 255
    3ee0:	b8 83       	st	Y, r27
    3ee2:	cd 5c       	subi	r28, 0xCD	; 205
    3ee4:	d0 40       	sbci	r29, 0x00	; 0
    3ee6:	f2 01       	movw	r30, r4
    3ee8:	f3 a1       	ldd	r31, Z+35	; 0x23
    3eea:	c2 53       	subi	r28, 0x32	; 50
    3eec:	df 4f       	sbci	r29, 0xFF	; 255
    3eee:	f8 83       	st	Y, r31
    3ef0:	ce 5c       	subi	r28, 0xCE	; 206
    3ef2:	d0 40       	sbci	r29, 0x00	; 0
    3ef4:	d2 01       	movw	r26, r4
    3ef6:	94 96       	adiw	r26, 0x24	; 36
    3ef8:	bc 91       	ld	r27, X
    3efa:	c1 53       	subi	r28, 0x31	; 49
    3efc:	df 4f       	sbci	r29, 0xFF	; 255
    3efe:	b8 83       	st	Y, r27
    3f00:	cf 5c       	subi	r28, 0xCF	; 207
    3f02:	d0 40       	sbci	r29, 0x00	; 0
    3f04:	f2 01       	movw	r30, r4
    3f06:	25 a0       	ldd	r2, Z+37	; 0x25
    3f08:	36 a0       	ldd	r3, Z+38	; 0x26
    3f0a:	67 a0       	ldd	r6, Z+39	; 0x27
    3f0c:	f0 81       	ld	r31, Z
    3f0e:	c3 52       	subi	r28, 0x23	; 35
    3f10:	df 4f       	sbci	r29, 0xFF	; 255
    3f12:	f8 83       	st	Y, r31
    3f14:	cd 5d       	subi	r28, 0xDD	; 221
    3f16:	d0 40       	sbci	r29, 0x00	; 0
    3f18:	d2 01       	movw	r26, r4
    3f1a:	11 96       	adiw	r26, 0x01	; 1
    3f1c:	bc 91       	ld	r27, X
    3f1e:	c2 52       	subi	r28, 0x22	; 34
    3f20:	df 4f       	sbci	r29, 0xFF	; 255
    3f22:	b8 83       	st	Y, r27
    3f24:	ce 5d       	subi	r28, 0xDE	; 222
    3f26:	d0 40       	sbci	r29, 0x00	; 0
    3f28:	f2 01       	movw	r30, r4
    3f2a:	f2 81       	ldd	r31, Z+2	; 0x02
    3f2c:	c1 52       	subi	r28, 0x21	; 33
    3f2e:	df 4f       	sbci	r29, 0xFF	; 255
    3f30:	f8 83       	st	Y, r31
    3f32:	cf 5d       	subi	r28, 0xDF	; 223
    3f34:	d0 40       	sbci	r29, 0x00	; 0
    3f36:	d2 01       	movw	r26, r4
    3f38:	13 96       	adiw	r26, 0x03	; 3
    3f3a:	bc 91       	ld	r27, X
    3f3c:	c0 52       	subi	r28, 0x20	; 32
    3f3e:	df 4f       	sbci	r29, 0xFF	; 255
    3f40:	b8 83       	st	Y, r27
    3f42:	c0 5e       	subi	r28, 0xE0	; 224
    3f44:	d0 40       	sbci	r29, 0x00	; 0
    3f46:	f2 01       	movw	r30, r4
    3f48:	f4 81       	ldd	r31, Z+4	; 0x04
    3f4a:	cf 51       	subi	r28, 0x1F	; 31
    3f4c:	df 4f       	sbci	r29, 0xFF	; 255
    3f4e:	f8 83       	st	Y, r31
    3f50:	c1 5e       	subi	r28, 0xE1	; 225
    3f52:	d0 40       	sbci	r29, 0x00	; 0
    3f54:	d2 01       	movw	r26, r4
    3f56:	15 96       	adiw	r26, 0x05	; 5
    3f58:	bc 91       	ld	r27, X
    3f5a:	ce 51       	subi	r28, 0x1E	; 30
    3f5c:	df 4f       	sbci	r29, 0xFF	; 255
    3f5e:	b8 83       	st	Y, r27
    3f60:	c2 5e       	subi	r28, 0xE2	; 226
    3f62:	d0 40       	sbci	r29, 0x00	; 0
    3f64:	f2 01       	movw	r30, r4
    3f66:	f6 81       	ldd	r31, Z+6	; 0x06
    3f68:	cd 51       	subi	r28, 0x1D	; 29
    3f6a:	df 4f       	sbci	r29, 0xFF	; 255
    3f6c:	f8 83       	st	Y, r31
    3f6e:	c3 5e       	subi	r28, 0xE3	; 227
    3f70:	d0 40       	sbci	r29, 0x00	; 0
    3f72:	d2 01       	movw	r26, r4
    3f74:	17 96       	adiw	r26, 0x07	; 7
    3f76:	bc 91       	ld	r27, X
    3f78:	cc 51       	subi	r28, 0x1C	; 28
    3f7a:	df 4f       	sbci	r29, 0xFF	; 255
    3f7c:	b8 83       	st	Y, r27
    3f7e:	c4 5e       	subi	r28, 0xE4	; 228
    3f80:	d0 40       	sbci	r29, 0x00	; 0
    3f82:	e4 eb       	ldi	r30, 0xB4	; 180
    3f84:	f0 e0       	ldi	r31, 0x00	; 0
    3f86:	c8 51       	subi	r28, 0x18	; 24
    3f88:	df 4f       	sbci	r29, 0xFF	; 255
    3f8a:	f9 83       	std	Y+1, r31	; 0x01
    3f8c:	e8 83       	st	Y, r30
    3f8e:	c8 5e       	subi	r28, 0xE8	; 232
    3f90:	d0 40       	sbci	r29, 0x00	; 0
	for(i=0; i<80; ++i){
    3f92:	c9 51       	subi	r28, 0x19	; 25
    3f94:	df 4f       	sbci	r29, 0xFF	; 255
    3f96:	18 82       	st	Y, r1
    3f98:	c7 5e       	subi	r28, 0xE7	; 231
    3f9a:	d0 40       	sbci	r29, 0x00	; 0
			memmove(&(w[0]), &(w[1]), 15*8);
			w[15] = wx;
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
		t2 = SIGMA_0(a[0]) + MAJ(a[0], a[1], a[2]);
		memmove(&(a[1]), &(a[0]), 7*8);
    3f9c:	c2 01       	movw	r24, r4
    3f9e:	08 96       	adiw	r24, 0x08	; 8
    3fa0:	c1 51       	subi	r28, 0x11	; 17
    3fa2:	df 4f       	sbci	r29, 0xFF	; 255
    3fa4:	99 83       	std	Y+1, r25	; 0x01
    3fa6:	88 83       	st	Y, r24
    3fa8:	cf 5e       	subi	r28, 0xEF	; 239
    3faa:	d0 40       	sbci	r29, 0x00	; 0
    3fac:	c0 53       	subi	r28, 0x30	; 48
    3fae:	df 4f       	sbci	r29, 0xFF	; 255
    3fb0:	38 82       	st	Y, r3
    3fb2:	c0 5d       	subi	r28, 0xD0	; 208
    3fb4:	d0 40       	sbci	r29, 0x00	; 0
    3fb6:	cf 52       	subi	r28, 0x2F	; 47
    3fb8:	df 4f       	sbci	r29, 0xFF	; 255
    3fba:	68 82       	st	Y, r6
    3fbc:	c1 5d       	subi	r28, 0xD1	; 209
    3fbe:	d0 40       	sbci	r29, 0x00	; 0
    3fc0:	fa c6       	rjmp	.+3572   	; 0x4db6 <sha2_large_common_nextBlock+0x107a>
	memcpy(a, ctx->h, 8*8);
	for(i=0; i<80; ++i){
		if(i<16){
			wx=w[i];
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
    3fc2:	e2 96       	adiw	r28, 0x32	; 50
    3fc4:	3f ac       	ldd	r3, Y+63	; 0x3f
    3fc6:	e2 97       	sbiw	r28, 0x32	; 50
    3fc8:	e3 96       	adiw	r28, 0x33	; 51
    3fca:	6f ac       	ldd	r6, Y+63	; 0x3f
    3fcc:	e3 97       	sbiw	r28, 0x33	; 51
    3fce:	e4 96       	adiw	r28, 0x34	; 52
    3fd0:	7f ac       	ldd	r7, Y+63	; 0x3f
    3fd2:	e4 97       	sbiw	r28, 0x34	; 52
    3fd4:	e5 96       	adiw	r28, 0x35	; 53
    3fd6:	8f ac       	ldd	r8, Y+63	; 0x3f
    3fd8:	e5 97       	sbiw	r28, 0x35	; 53
    3fda:	e6 96       	adiw	r28, 0x36	; 54
    3fdc:	9f ac       	ldd	r9, Y+63	; 0x3f
    3fde:	e6 97       	sbiw	r28, 0x36	; 54
    3fe0:	e7 96       	adiw	r28, 0x37	; 55
    3fe2:	bf ad       	ldd	r27, Y+63	; 0x3f
    3fe4:	e7 97       	sbiw	r28, 0x37	; 55
    3fe6:	e8 96       	adiw	r28, 0x38	; 56
    3fe8:	af ad       	ldd	r26, Y+63	; 0x3f
    3fea:	e8 97       	sbiw	r28, 0x38	; 56
    3fec:	e9 96       	adiw	r28, 0x39	; 57
    3fee:	ff ad       	ldd	r31, Y+63	; 0x3f
    3ff0:	e9 97       	sbiw	r28, 0x39	; 57
    3ff2:	e9 85       	ldd	r30, Y+9	; 0x09
    3ff4:	ce 52       	subi	r28, 0x2E	; 46
    3ff6:	df 4f       	sbci	r29, 0xFF	; 255
    3ff8:	e8 83       	st	Y, r30
    3ffa:	c2 5d       	subi	r28, 0xD2	; 210
    3ffc:	d0 40       	sbci	r29, 0x00	; 0
    3ffe:	ea 85       	ldd	r30, Y+10	; 0x0a
    4000:	cd 52       	subi	r28, 0x2D	; 45
    4002:	df 4f       	sbci	r29, 0xFF	; 255
    4004:	e8 83       	st	Y, r30
    4006:	c3 5d       	subi	r28, 0xD3	; 211
    4008:	d0 40       	sbci	r29, 0x00	; 0
    400a:	eb 85       	ldd	r30, Y+11	; 0x0b
    400c:	cc 52       	subi	r28, 0x2C	; 44
    400e:	df 4f       	sbci	r29, 0xFF	; 255
    4010:	e8 83       	st	Y, r30
    4012:	c4 5d       	subi	r28, 0xD4	; 212
    4014:	d0 40       	sbci	r29, 0x00	; 0
    4016:	ec 85       	ldd	r30, Y+12	; 0x0c
    4018:	cb 52       	subi	r28, 0x2B	; 43
    401a:	df 4f       	sbci	r29, 0xFF	; 255
    401c:	e8 83       	st	Y, r30
    401e:	c5 5d       	subi	r28, 0xD5	; 213
    4020:	d0 40       	sbci	r29, 0x00	; 0
    4022:	ed 85       	ldd	r30, Y+13	; 0x0d
    4024:	ca 52       	subi	r28, 0x2A	; 42
    4026:	df 4f       	sbci	r29, 0xFF	; 255
    4028:	e8 83       	st	Y, r30
    402a:	c6 5d       	subi	r28, 0xD6	; 214
    402c:	d0 40       	sbci	r29, 0x00	; 0
    402e:	ee 85       	ldd	r30, Y+14	; 0x0e
    4030:	c9 52       	subi	r28, 0x29	; 41
    4032:	df 4f       	sbci	r29, 0xFF	; 255
    4034:	e8 83       	st	Y, r30
    4036:	c7 5d       	subi	r28, 0xD7	; 215
    4038:	d0 40       	sbci	r29, 0x00	; 0
    403a:	ef 85       	ldd	r30, Y+15	; 0x0f
    403c:	c8 52       	subi	r28, 0x28	; 40
    403e:	df 4f       	sbci	r29, 0xFF	; 255
    4040:	e8 83       	st	Y, r30
    4042:	c8 5d       	subi	r28, 0xD8	; 216
    4044:	d0 40       	sbci	r29, 0x00	; 0
    4046:	e8 89       	ldd	r30, Y+16	; 0x10
    4048:	c7 52       	subi	r28, 0x27	; 39
    404a:	df 4f       	sbci	r29, 0xFF	; 255
    404c:	e8 83       	st	Y, r30
    404e:	c9 5d       	subi	r28, 0xD9	; 217
    4050:	d0 40       	sbci	r29, 0x00	; 0
    4052:	2a 96       	adiw	r28, 0x0a	; 10
    4054:	2f ad       	ldd	r18, Y+63	; 0x3f
    4056:	2a 97       	sbiw	r28, 0x0a	; 10
    4058:	2b 96       	adiw	r28, 0x0b	; 11
    405a:	3f ad       	ldd	r19, Y+63	; 0x3f
    405c:	2b 97       	sbiw	r28, 0x0b	; 11
    405e:	2c 96       	adiw	r28, 0x0c	; 12
    4060:	4f ad       	ldd	r20, Y+63	; 0x3f
    4062:	2c 97       	sbiw	r28, 0x0c	; 12
    4064:	2d 96       	adiw	r28, 0x0d	; 13
    4066:	5f ad       	ldd	r21, Y+63	; 0x3f
    4068:	2d 97       	sbiw	r28, 0x0d	; 13
    406a:	2e 96       	adiw	r28, 0x0e	; 14
    406c:	6f ad       	ldd	r22, Y+63	; 0x3f
    406e:	2e 97       	sbiw	r28, 0x0e	; 14
    4070:	2f 96       	adiw	r28, 0x0f	; 15
    4072:	7f ad       	ldd	r23, Y+63	; 0x3f
    4074:	2f 97       	sbiw	r28, 0x0f	; 15
    4076:	60 96       	adiw	r28, 0x10	; 16
    4078:	8f ad       	ldd	r24, Y+63	; 0x3f
    407a:	60 97       	sbiw	r28, 0x10	; 16
    407c:	61 96       	adiw	r28, 0x11	; 17
    407e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4080:	61 97       	sbiw	r28, 0x11	; 17
    4082:	a9 80       	ldd	r10, Y+1	; 0x01
    4084:	ba 80       	ldd	r11, Y+2	; 0x02
    4086:	cb 80       	ldd	r12, Y+3	; 0x03
    4088:	dc 80       	ldd	r13, Y+4	; 0x04
    408a:	ed 80       	ldd	r14, Y+5	; 0x05
    408c:	fe 80       	ldd	r15, Y+6	; 0x06
    408e:	0f 81       	ldd	r16, Y+7	; 0x07
    4090:	18 85       	ldd	r17, Y+8	; 0x08
    4092:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4096:	c6 52       	subi	r28, 0x26	; 38
    4098:	df 4f       	sbci	r29, 0xFF	; 255
    409a:	28 83       	st	Y, r18
    409c:	ca 5d       	subi	r28, 0xDA	; 218
    409e:	d0 40       	sbci	r29, 0x00	; 0
    40a0:	c5 52       	subi	r28, 0x25	; 37
    40a2:	df 4f       	sbci	r29, 0xFF	; 255
    40a4:	38 83       	st	Y, r19
    40a6:	cb 5d       	subi	r28, 0xDB	; 219
    40a8:	d0 40       	sbci	r29, 0x00	; 0
    40aa:	c4 52       	subi	r28, 0x24	; 36
    40ac:	df 4f       	sbci	r29, 0xFF	; 255
    40ae:	48 83       	st	Y, r20
    40b0:	cc 5d       	subi	r28, 0xDC	; 220
    40b2:	d0 40       	sbci	r29, 0x00	; 0
    40b4:	c6 51       	subi	r28, 0x16	; 22
    40b6:	df 4f       	sbci	r29, 0xFF	; 255
    40b8:	58 83       	st	Y, r21
    40ba:	ca 5e       	subi	r28, 0xEA	; 234
    40bc:	d0 40       	sbci	r29, 0x00	; 0
    40be:	c5 51       	subi	r28, 0x15	; 21
    40c0:	df 4f       	sbci	r29, 0xFF	; 255
    40c2:	68 83       	st	Y, r22
    40c4:	cb 5e       	subi	r28, 0xEB	; 235
    40c6:	d0 40       	sbci	r29, 0x00	; 0
    40c8:	c4 51       	subi	r28, 0x14	; 20
    40ca:	df 4f       	sbci	r29, 0xFF	; 255
    40cc:	78 83       	st	Y, r23
    40ce:	cc 5e       	subi	r28, 0xEC	; 236
    40d0:	d0 40       	sbci	r29, 0x00	; 0
    40d2:	c3 51       	subi	r28, 0x13	; 19
    40d4:	df 4f       	sbci	r29, 0xFF	; 255
    40d6:	88 83       	st	Y, r24
    40d8:	cd 5e       	subi	r28, 0xED	; 237
    40da:	d0 40       	sbci	r29, 0x00	; 0
    40dc:	c2 51       	subi	r28, 0x12	; 18
    40de:	df 4f       	sbci	r29, 0xFF	; 255
    40e0:	98 83       	st	Y, r25
    40e2:	ce 5e       	subi	r28, 0xEE	; 238
    40e4:	d0 40       	sbci	r29, 0x00	; 0
    40e6:	23 2d       	mov	r18, r3
    40e8:	36 2d       	mov	r19, r6
    40ea:	47 2d       	mov	r20, r7
    40ec:	58 2d       	mov	r21, r8
    40ee:	69 2d       	mov	r22, r9
    40f0:	7b 2f       	mov	r23, r27
    40f2:	8a 2f       	mov	r24, r26
    40f4:	9f 2f       	mov	r25, r31
    40f6:	03 e0       	ldi	r16, 0x03	; 3
    40f8:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    40fc:	59 01       	movw	r10, r18
    40fe:	6a 01       	movw	r12, r20
    4100:	7b 01       	movw	r14, r22
    4102:	e8 2f       	mov	r30, r24
    4104:	19 2f       	mov	r17, r25
    4106:	23 2d       	mov	r18, r3
    4108:	36 2d       	mov	r19, r6
    410a:	47 2d       	mov	r20, r7
    410c:	58 2d       	mov	r21, r8
    410e:	69 2d       	mov	r22, r9
    4110:	7b 2f       	mov	r23, r27
    4112:	8a 2f       	mov	r24, r26
    4114:	9f 2f       	mov	r25, r31
    4116:	0d e2       	ldi	r16, 0x2D	; 45
    4118:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    411c:	a2 26       	eor	r10, r18
    411e:	b3 26       	eor	r11, r19
    4120:	c4 26       	eor	r12, r20
    4122:	d5 26       	eor	r13, r21
    4124:	e6 26       	eor	r14, r22
    4126:	f7 26       	eor	r15, r23
    4128:	e8 27       	eor	r30, r24
    412a:	19 27       	eor	r17, r25
    412c:	23 2d       	mov	r18, r3
    412e:	36 2d       	mov	r19, r6
    4130:	47 2d       	mov	r20, r7
    4132:	58 2d       	mov	r21, r8
    4134:	69 2d       	mov	r22, r9
    4136:	7b 2f       	mov	r23, r27
    4138:	8a 2f       	mov	r24, r26
    413a:	9f 2f       	mov	r25, r31
    413c:	06 e0       	ldi	r16, 0x06	; 6
    413e:	0e 94 10 2e 	call	0x5c20	; 0x5c20 <__lshrdi3>
    4142:	a2 26       	eor	r10, r18
    4144:	b3 26       	eor	r11, r19
    4146:	c4 26       	eor	r12, r20
    4148:	d5 26       	eor	r13, r21
    414a:	e6 26       	eor	r14, r22
    414c:	f7 26       	eor	r15, r23
    414e:	0e 2f       	mov	r16, r30
    4150:	08 27       	eor	r16, r24
    4152:	19 27       	eor	r17, r25
    4154:	c6 52       	subi	r28, 0x26	; 38
    4156:	df 4f       	sbci	r29, 0xFF	; 255
    4158:	28 81       	ld	r18, Y
    415a:	ca 5d       	subi	r28, 0xDA	; 218
    415c:	d0 40       	sbci	r29, 0x00	; 0
    415e:	c5 52       	subi	r28, 0x25	; 37
    4160:	df 4f       	sbci	r29, 0xFF	; 255
    4162:	38 81       	ld	r19, Y
    4164:	cb 5d       	subi	r28, 0xDB	; 219
    4166:	d0 40       	sbci	r29, 0x00	; 0
    4168:	c4 52       	subi	r28, 0x24	; 36
    416a:	df 4f       	sbci	r29, 0xFF	; 255
    416c:	48 81       	ld	r20, Y
    416e:	cc 5d       	subi	r28, 0xDC	; 220
    4170:	d0 40       	sbci	r29, 0x00	; 0
    4172:	c6 51       	subi	r28, 0x16	; 22
    4174:	df 4f       	sbci	r29, 0xFF	; 255
    4176:	58 81       	ld	r21, Y
    4178:	ca 5e       	subi	r28, 0xEA	; 234
    417a:	d0 40       	sbci	r29, 0x00	; 0
    417c:	c5 51       	subi	r28, 0x15	; 21
    417e:	df 4f       	sbci	r29, 0xFF	; 255
    4180:	68 81       	ld	r22, Y
    4182:	cb 5e       	subi	r28, 0xEB	; 235
    4184:	d0 40       	sbci	r29, 0x00	; 0
    4186:	c4 51       	subi	r28, 0x14	; 20
    4188:	df 4f       	sbci	r29, 0xFF	; 255
    418a:	78 81       	ld	r23, Y
    418c:	cc 5e       	subi	r28, 0xEC	; 236
    418e:	d0 40       	sbci	r29, 0x00	; 0
    4190:	c3 51       	subi	r28, 0x13	; 19
    4192:	df 4f       	sbci	r29, 0xFF	; 255
    4194:	88 81       	ld	r24, Y
    4196:	cd 5e       	subi	r28, 0xED	; 237
    4198:	d0 40       	sbci	r29, 0x00	; 0
    419a:	c2 51       	subi	r28, 0x12	; 18
    419c:	df 4f       	sbci	r29, 0xFF	; 255
    419e:	98 81       	ld	r25, Y
    41a0:	ce 5e       	subi	r28, 0xEE	; 238
    41a2:	d0 40       	sbci	r29, 0x00	; 0
    41a4:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    41a8:	39 01       	movw	r6, r18
    41aa:	4a 01       	movw	r8, r20
    41ac:	b6 2f       	mov	r27, r22
    41ae:	a7 2f       	mov	r26, r23
    41b0:	f8 2f       	mov	r31, r24
    41b2:	e9 2f       	mov	r30, r25
    41b4:	ce 52       	subi	r28, 0x2E	; 46
    41b6:	df 4f       	sbci	r29, 0xFF	; 255
    41b8:	28 81       	ld	r18, Y
    41ba:	c2 5d       	subi	r28, 0xD2	; 210
    41bc:	d0 40       	sbci	r29, 0x00	; 0
    41be:	cd 52       	subi	r28, 0x2D	; 45
    41c0:	df 4f       	sbci	r29, 0xFF	; 255
    41c2:	38 81       	ld	r19, Y
    41c4:	c3 5d       	subi	r28, 0xD3	; 211
    41c6:	d0 40       	sbci	r29, 0x00	; 0
    41c8:	cc 52       	subi	r28, 0x2C	; 44
    41ca:	df 4f       	sbci	r29, 0xFF	; 255
    41cc:	48 81       	ld	r20, Y
    41ce:	c4 5d       	subi	r28, 0xD4	; 212
    41d0:	d0 40       	sbci	r29, 0x00	; 0
    41d2:	cb 52       	subi	r28, 0x2B	; 43
    41d4:	df 4f       	sbci	r29, 0xFF	; 255
    41d6:	58 81       	ld	r21, Y
    41d8:	c5 5d       	subi	r28, 0xD5	; 213
    41da:	d0 40       	sbci	r29, 0x00	; 0
    41dc:	ca 52       	subi	r28, 0x2A	; 42
    41de:	df 4f       	sbci	r29, 0xFF	; 255
    41e0:	68 81       	ld	r22, Y
    41e2:	c6 5d       	subi	r28, 0xD6	; 214
    41e4:	d0 40       	sbci	r29, 0x00	; 0
    41e6:	c9 52       	subi	r28, 0x29	; 41
    41e8:	df 4f       	sbci	r29, 0xFF	; 255
    41ea:	78 81       	ld	r23, Y
    41ec:	c7 5d       	subi	r28, 0xD7	; 215
    41ee:	d0 40       	sbci	r29, 0x00	; 0
    41f0:	c8 52       	subi	r28, 0x28	; 40
    41f2:	df 4f       	sbci	r29, 0xFF	; 255
    41f4:	88 81       	ld	r24, Y
    41f6:	c8 5d       	subi	r28, 0xD8	; 216
    41f8:	d0 40       	sbci	r29, 0x00	; 0
    41fa:	c7 52       	subi	r28, 0x27	; 39
    41fc:	df 4f       	sbci	r29, 0xFF	; 255
    41fe:	98 81       	ld	r25, Y
    4200:	c9 5d       	subi	r28, 0xD9	; 217
    4202:	d0 40       	sbci	r29, 0x00	; 0
    4204:	08 e3       	ldi	r16, 0x38	; 56
    4206:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    420a:	59 01       	movw	r10, r18
    420c:	6a 01       	movw	r12, r20
    420e:	7b 01       	movw	r14, r22
    4210:	38 2e       	mov	r3, r24
    4212:	19 2f       	mov	r17, r25
    4214:	ce 52       	subi	r28, 0x2E	; 46
    4216:	df 4f       	sbci	r29, 0xFF	; 255
    4218:	28 81       	ld	r18, Y
    421a:	c2 5d       	subi	r28, 0xD2	; 210
    421c:	d0 40       	sbci	r29, 0x00	; 0
    421e:	cd 52       	subi	r28, 0x2D	; 45
    4220:	df 4f       	sbci	r29, 0xFF	; 255
    4222:	38 81       	ld	r19, Y
    4224:	c3 5d       	subi	r28, 0xD3	; 211
    4226:	d0 40       	sbci	r29, 0x00	; 0
    4228:	cc 52       	subi	r28, 0x2C	; 44
    422a:	df 4f       	sbci	r29, 0xFF	; 255
    422c:	48 81       	ld	r20, Y
    422e:	c4 5d       	subi	r28, 0xD4	; 212
    4230:	d0 40       	sbci	r29, 0x00	; 0
    4232:	cb 52       	subi	r28, 0x2B	; 43
    4234:	df 4f       	sbci	r29, 0xFF	; 255
    4236:	58 81       	ld	r21, Y
    4238:	c5 5d       	subi	r28, 0xD5	; 213
    423a:	d0 40       	sbci	r29, 0x00	; 0
    423c:	ca 52       	subi	r28, 0x2A	; 42
    423e:	df 4f       	sbci	r29, 0xFF	; 255
    4240:	68 81       	ld	r22, Y
    4242:	c6 5d       	subi	r28, 0xD6	; 214
    4244:	d0 40       	sbci	r29, 0x00	; 0
    4246:	c9 52       	subi	r28, 0x29	; 41
    4248:	df 4f       	sbci	r29, 0xFF	; 255
    424a:	78 81       	ld	r23, Y
    424c:	c7 5d       	subi	r28, 0xD7	; 215
    424e:	d0 40       	sbci	r29, 0x00	; 0
    4250:	c8 52       	subi	r28, 0x28	; 40
    4252:	df 4f       	sbci	r29, 0xFF	; 255
    4254:	88 81       	ld	r24, Y
    4256:	c8 5d       	subi	r28, 0xD8	; 216
    4258:	d0 40       	sbci	r29, 0x00	; 0
    425a:	c7 52       	subi	r28, 0x27	; 39
    425c:	df 4f       	sbci	r29, 0xFF	; 255
    425e:	98 81       	ld	r25, Y
    4260:	c9 5d       	subi	r28, 0xD9	; 217
    4262:	d0 40       	sbci	r29, 0x00	; 0
    4264:	0f e3       	ldi	r16, 0x3F	; 63
    4266:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    426a:	a2 26       	eor	r10, r18
    426c:	b3 26       	eor	r11, r19
    426e:	c4 26       	eor	r12, r20
    4270:	d5 26       	eor	r13, r21
    4272:	e6 26       	eor	r14, r22
    4274:	f7 26       	eor	r15, r23
    4276:	38 26       	eor	r3, r24
    4278:	19 27       	eor	r17, r25
    427a:	ce 52       	subi	r28, 0x2E	; 46
    427c:	df 4f       	sbci	r29, 0xFF	; 255
    427e:	28 81       	ld	r18, Y
    4280:	c2 5d       	subi	r28, 0xD2	; 210
    4282:	d0 40       	sbci	r29, 0x00	; 0
    4284:	cd 52       	subi	r28, 0x2D	; 45
    4286:	df 4f       	sbci	r29, 0xFF	; 255
    4288:	38 81       	ld	r19, Y
    428a:	c3 5d       	subi	r28, 0xD3	; 211
    428c:	d0 40       	sbci	r29, 0x00	; 0
    428e:	cc 52       	subi	r28, 0x2C	; 44
    4290:	df 4f       	sbci	r29, 0xFF	; 255
    4292:	48 81       	ld	r20, Y
    4294:	c4 5d       	subi	r28, 0xD4	; 212
    4296:	d0 40       	sbci	r29, 0x00	; 0
    4298:	cb 52       	subi	r28, 0x2B	; 43
    429a:	df 4f       	sbci	r29, 0xFF	; 255
    429c:	58 81       	ld	r21, Y
    429e:	c5 5d       	subi	r28, 0xD5	; 213
    42a0:	d0 40       	sbci	r29, 0x00	; 0
    42a2:	ca 52       	subi	r28, 0x2A	; 42
    42a4:	df 4f       	sbci	r29, 0xFF	; 255
    42a6:	68 81       	ld	r22, Y
    42a8:	c6 5d       	subi	r28, 0xD6	; 214
    42aa:	d0 40       	sbci	r29, 0x00	; 0
    42ac:	c9 52       	subi	r28, 0x29	; 41
    42ae:	df 4f       	sbci	r29, 0xFF	; 255
    42b0:	78 81       	ld	r23, Y
    42b2:	c7 5d       	subi	r28, 0xD7	; 215
    42b4:	d0 40       	sbci	r29, 0x00	; 0
    42b6:	c8 52       	subi	r28, 0x28	; 40
    42b8:	df 4f       	sbci	r29, 0xFF	; 255
    42ba:	88 81       	ld	r24, Y
    42bc:	c8 5d       	subi	r28, 0xD8	; 216
    42be:	d0 40       	sbci	r29, 0x00	; 0
    42c0:	c7 52       	subi	r28, 0x27	; 39
    42c2:	df 4f       	sbci	r29, 0xFF	; 255
    42c4:	98 81       	ld	r25, Y
    42c6:	c9 5d       	subi	r28, 0xD9	; 217
    42c8:	d0 40       	sbci	r29, 0x00	; 0
    42ca:	07 e0       	ldi	r16, 0x07	; 7
    42cc:	0e 94 10 2e 	call	0x5c20	; 0x5c20 <__lshrdi3>
    42d0:	a2 26       	eor	r10, r18
    42d2:	b3 26       	eor	r11, r19
    42d4:	c4 26       	eor	r12, r20
    42d6:	d5 26       	eor	r13, r21
    42d8:	e6 26       	eor	r14, r22
    42da:	f7 26       	eor	r15, r23
    42dc:	03 2d       	mov	r16, r3
    42de:	08 27       	eor	r16, r24
    42e0:	19 27       	eor	r17, r25
    42e2:	93 01       	movw	r18, r6
    42e4:	a4 01       	movw	r20, r8
    42e6:	6b 2f       	mov	r22, r27
    42e8:	7a 2f       	mov	r23, r26
    42ea:	8f 2f       	mov	r24, r31
    42ec:	9e 2f       	mov	r25, r30
    42ee:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    42f2:	ce 52       	subi	r28, 0x2E	; 46
    42f4:	df 4f       	sbci	r29, 0xFF	; 255
    42f6:	28 83       	st	Y, r18
    42f8:	c2 5d       	subi	r28, 0xD2	; 210
    42fa:	d0 40       	sbci	r29, 0x00	; 0
    42fc:	cd 52       	subi	r28, 0x2D	; 45
    42fe:	df 4f       	sbci	r29, 0xFF	; 255
    4300:	38 83       	st	Y, r19
    4302:	c3 5d       	subi	r28, 0xD3	; 211
    4304:	d0 40       	sbci	r29, 0x00	; 0
    4306:	cc 52       	subi	r28, 0x2C	; 44
    4308:	df 4f       	sbci	r29, 0xFF	; 255
    430a:	48 83       	st	Y, r20
    430c:	c4 5d       	subi	r28, 0xD4	; 212
    430e:	d0 40       	sbci	r29, 0x00	; 0
    4310:	cb 52       	subi	r28, 0x2B	; 43
    4312:	df 4f       	sbci	r29, 0xFF	; 255
    4314:	58 83       	st	Y, r21
    4316:	c5 5d       	subi	r28, 0xD5	; 213
    4318:	d0 40       	sbci	r29, 0x00	; 0
    431a:	ca 52       	subi	r28, 0x2A	; 42
    431c:	df 4f       	sbci	r29, 0xFF	; 255
    431e:	68 83       	st	Y, r22
    4320:	c6 5d       	subi	r28, 0xD6	; 214
    4322:	d0 40       	sbci	r29, 0x00	; 0
    4324:	c9 52       	subi	r28, 0x29	; 41
    4326:	df 4f       	sbci	r29, 0xFF	; 255
    4328:	78 83       	st	Y, r23
    432a:	c7 5d       	subi	r28, 0xD7	; 215
    432c:	d0 40       	sbci	r29, 0x00	; 0
    432e:	c8 52       	subi	r28, 0x28	; 40
    4330:	df 4f       	sbci	r29, 0xFF	; 255
    4332:	88 83       	st	Y, r24
    4334:	c8 5d       	subi	r28, 0xD8	; 216
    4336:	d0 40       	sbci	r29, 0x00	; 0
    4338:	c7 52       	subi	r28, 0x27	; 39
    433a:	df 4f       	sbci	r29, 0xFF	; 255
    433c:	98 83       	st	Y, r25
    433e:	c9 5d       	subi	r28, 0xD9	; 217
    4340:	d0 40       	sbci	r29, 0x00	; 0
			memmove(&(w[0]), &(w[1]), 15*8);
    4342:	48 e7       	ldi	r20, 0x78	; 120
    4344:	50 e0       	ldi	r21, 0x00	; 0
    4346:	be 01       	movw	r22, r28
    4348:	67 5f       	subi	r22, 0xF7	; 247
    434a:	7f 4f       	sbci	r23, 0xFF	; 255
    434c:	ce 01       	movw	r24, r28
    434e:	01 96       	adiw	r24, 0x01	; 1
    4350:	0e 94 b7 2e 	call	0x5d6e	; 0x5d6e <memmove>
			w[15] = wx;
    4354:	ce 52       	subi	r28, 0x2E	; 46
    4356:	df 4f       	sbci	r29, 0xFF	; 255
    4358:	f8 81       	ld	r31, Y
    435a:	c2 5d       	subi	r28, 0xD2	; 210
    435c:	d0 40       	sbci	r29, 0x00	; 0
    435e:	ea 96       	adiw	r28, 0x3a	; 58
    4360:	ff af       	std	Y+63, r31	; 0x3f
    4362:	ea 97       	sbiw	r28, 0x3a	; 58
    4364:	cd 52       	subi	r28, 0x2D	; 45
    4366:	df 4f       	sbci	r29, 0xFF	; 255
    4368:	18 81       	ld	r17, Y
    436a:	c3 5d       	subi	r28, 0xD3	; 211
    436c:	d0 40       	sbci	r29, 0x00	; 0
    436e:	eb 96       	adiw	r28, 0x3b	; 59
    4370:	1f af       	std	Y+63, r17	; 0x3f
    4372:	eb 97       	sbiw	r28, 0x3b	; 59
    4374:	cc 52       	subi	r28, 0x2C	; 44
    4376:	df 4f       	sbci	r29, 0xFF	; 255
    4378:	88 81       	ld	r24, Y
    437a:	c4 5d       	subi	r28, 0xD4	; 212
    437c:	d0 40       	sbci	r29, 0x00	; 0
    437e:	ec 96       	adiw	r28, 0x3c	; 60
    4380:	8f af       	std	Y+63, r24	; 0x3f
    4382:	ec 97       	sbiw	r28, 0x3c	; 60
    4384:	cb 52       	subi	r28, 0x2B	; 43
    4386:	df 4f       	sbci	r29, 0xFF	; 255
    4388:	98 81       	ld	r25, Y
    438a:	c5 5d       	subi	r28, 0xD5	; 213
    438c:	d0 40       	sbci	r29, 0x00	; 0
    438e:	ed 96       	adiw	r28, 0x3d	; 61
    4390:	9f af       	std	Y+63, r25	; 0x3f
    4392:	ed 97       	sbiw	r28, 0x3d	; 61
    4394:	ca 52       	subi	r28, 0x2A	; 42
    4396:	df 4f       	sbci	r29, 0xFF	; 255
    4398:	a8 81       	ld	r26, Y
    439a:	c6 5d       	subi	r28, 0xD6	; 214
    439c:	d0 40       	sbci	r29, 0x00	; 0
    439e:	ee 96       	adiw	r28, 0x3e	; 62
    43a0:	af af       	std	Y+63, r26	; 0x3f
    43a2:	ee 97       	sbiw	r28, 0x3e	; 62
    43a4:	c9 52       	subi	r28, 0x29	; 41
    43a6:	df 4f       	sbci	r29, 0xFF	; 255
    43a8:	b8 81       	ld	r27, Y
    43aa:	c7 5d       	subi	r28, 0xD7	; 215
    43ac:	d0 40       	sbci	r29, 0x00	; 0
    43ae:	ef 96       	adiw	r28, 0x3f	; 63
    43b0:	bf af       	std	Y+63, r27	; 0x3f
    43b2:	ef 97       	sbiw	r28, 0x3f	; 63
    43b4:	c8 52       	subi	r28, 0x28	; 40
    43b6:	df 4f       	sbci	r29, 0xFF	; 255
    43b8:	e8 81       	ld	r30, Y
    43ba:	c8 5d       	subi	r28, 0xD8	; 216
    43bc:	d0 40       	sbci	r29, 0x00	; 0
    43be:	c1 58       	subi	r28, 0x81	; 129
    43c0:	df 4f       	sbci	r29, 0xFF	; 255
    43c2:	e8 83       	st	Y, r30
    43c4:	cf 57       	subi	r28, 0x7F	; 127
    43c6:	d0 40       	sbci	r29, 0x00	; 0
    43c8:	c7 52       	subi	r28, 0x27	; 39
    43ca:	df 4f       	sbci	r29, 0xFF	; 255
    43cc:	f8 81       	ld	r31, Y
    43ce:	c9 5d       	subi	r28, 0xD9	; 217
    43d0:	d0 40       	sbci	r29, 0x00	; 0
    43d2:	c0 58       	subi	r28, 0x80	; 128
    43d4:	df 4f       	sbci	r29, 0xFF	; 255
    43d6:	f8 83       	st	Y, r31
    43d8:	c0 58       	subi	r28, 0x80	; 128
    43da:	d0 40       	sbci	r29, 0x00	; 0
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
    43dc:	d2 01       	movw	r26, r4
    43de:	d8 96       	adiw	r26, 0x38	; 56
    43e0:	2c 91       	ld	r18, X
    43e2:	d8 97       	sbiw	r26, 0x38	; 56
    43e4:	d9 96       	adiw	r26, 0x39	; 57
    43e6:	3c 91       	ld	r19, X
    43e8:	d9 97       	sbiw	r26, 0x39	; 57
    43ea:	da 96       	adiw	r26, 0x3a	; 58
    43ec:	4c 91       	ld	r20, X
    43ee:	da 97       	sbiw	r26, 0x3a	; 58
    43f0:	db 96       	adiw	r26, 0x3b	; 59
    43f2:	5c 91       	ld	r21, X
    43f4:	db 97       	sbiw	r26, 0x3b	; 59
    43f6:	dc 96       	adiw	r26, 0x3c	; 60
    43f8:	6c 91       	ld	r22, X
    43fa:	dc 97       	sbiw	r26, 0x3c	; 60
    43fc:	dd 96       	adiw	r26, 0x3d	; 61
    43fe:	7c 91       	ld	r23, X
    4400:	dd 97       	sbiw	r26, 0x3d	; 61
    4402:	de 96       	adiw	r26, 0x3e	; 62
    4404:	8c 91       	ld	r24, X
    4406:	de 97       	sbiw	r26, 0x3e	; 62
    4408:	df 96       	adiw	r26, 0x3f	; 63
    440a:	9c 91       	ld	r25, X
    440c:	c7 53       	subi	r28, 0x37	; 55
    440e:	df 4f       	sbci	r29, 0xFF	; 255
    4410:	e8 80       	ld	r14, Y
    4412:	c9 5c       	subi	r28, 0xC9	; 201
    4414:	d0 40       	sbci	r29, 0x00	; 0
    4416:	e0 94       	com	r14
    4418:	c5 53       	subi	r28, 0x35	; 53
    441a:	df 4f       	sbci	r29, 0xFF	; 255
    441c:	f8 80       	ld	r15, Y
    441e:	cb 5c       	subi	r28, 0xCB	; 203
    4420:	d0 40       	sbci	r29, 0x00	; 0
    4422:	f0 94       	com	r15
    4424:	c3 53       	subi	r28, 0x33	; 51
    4426:	df 4f       	sbci	r29, 0xFF	; 255
    4428:	08 81       	ld	r16, Y
    442a:	cd 5c       	subi	r28, 0xCD	; 205
    442c:	d0 40       	sbci	r29, 0x00	; 0
    442e:	00 95       	com	r16
    4430:	c2 53       	subi	r28, 0x32	; 50
    4432:	df 4f       	sbci	r29, 0xFF	; 255
    4434:	18 81       	ld	r17, Y
    4436:	ce 5c       	subi	r28, 0xCE	; 206
    4438:	d0 40       	sbci	r29, 0x00	; 0
    443a:	10 95       	com	r17
    443c:	c1 53       	subi	r28, 0x31	; 49
    443e:	df 4f       	sbci	r29, 0xFF	; 255
    4440:	b8 81       	ld	r27, Y
    4442:	cf 5c       	subi	r28, 0xCF	; 207
    4444:	d0 40       	sbci	r29, 0x00	; 0
    4446:	b0 95       	com	r27
    4448:	a2 2d       	mov	r26, r2
    444a:	a0 95       	com	r26
    444c:	c0 53       	subi	r28, 0x30	; 48
    444e:	df 4f       	sbci	r29, 0xFF	; 255
    4450:	d8 80       	ld	r13, Y
    4452:	c0 5d       	subi	r28, 0xD0	; 208
    4454:	d0 40       	sbci	r29, 0x00	; 0
    4456:	d0 94       	com	r13
    4458:	cf 52       	subi	r28, 0x2F	; 47
    445a:	df 4f       	sbci	r29, 0xFF	; 255
    445c:	b8 80       	ld	r11, Y
    445e:	c1 5d       	subi	r28, 0xD1	; 209
    4460:	d0 40       	sbci	r29, 0x00	; 0
    4462:	b0 94       	com	r11
    4464:	f2 01       	movw	r30, r4
    4466:	60 a8       	ldd	r6, Z+48	; 0x30
    4468:	6e 20       	and	r6, r14
    446a:	81 a8       	ldd	r8, Z+49	; 0x31
    446c:	8f 20       	and	r8, r15
    446e:	a2 a8       	ldd	r10, Z+50	; 0x32
    4470:	a0 22       	and	r10, r16
    4472:	c3 a8       	ldd	r12, Z+51	; 0x33
    4474:	c1 22       	and	r12, r17
    4476:	e4 a8       	ldd	r14, Z+52	; 0x34
    4478:	eb 22       	and	r14, r27
    447a:	05 a9       	ldd	r16, Z+53	; 0x35
    447c:	0a 23       	and	r16, r26
    447e:	b6 a9       	ldd	r27, Z+54	; 0x36
    4480:	3b 2e       	mov	r3, r27
    4482:	3d 20       	and	r3, r13
    4484:	f7 a9       	ldd	r31, Z+55	; 0x37
    4486:	fb 21       	and	r31, r11
    4488:	c2 51       	subi	r28, 0x12	; 18
    448a:	df 4f       	sbci	r29, 0xFF	; 255
    448c:	f8 83       	st	Y, r31
    448e:	ce 5e       	subi	r28, 0xEE	; 238
    4490:	d0 40       	sbci	r29, 0x00	; 0
    4492:	d2 01       	movw	r26, r4
    4494:	98 96       	adiw	r26, 0x28	; 40
    4496:	7c 90       	ld	r7, X
    4498:	c7 53       	subi	r28, 0x37	; 55
    449a:	df 4f       	sbci	r29, 0xFF	; 255
    449c:	b8 81       	ld	r27, Y
    449e:	c9 5c       	subi	r28, 0xC9	; 201
    44a0:	d0 40       	sbci	r29, 0x00	; 0
    44a2:	7b 22       	and	r7, r27
    44a4:	f2 01       	movw	r30, r4
    44a6:	91 a4       	ldd	r9, Z+41	; 0x29
    44a8:	c5 53       	subi	r28, 0x35	; 53
    44aa:	df 4f       	sbci	r29, 0xFF	; 255
    44ac:	f8 81       	ld	r31, Y
    44ae:	cb 5c       	subi	r28, 0xCB	; 203
    44b0:	d0 40       	sbci	r29, 0x00	; 0
    44b2:	9f 22       	and	r9, r31
    44b4:	d2 01       	movw	r26, r4
    44b6:	9a 96       	adiw	r26, 0x2a	; 42
    44b8:	bc 90       	ld	r11, X
    44ba:	c3 53       	subi	r28, 0x33	; 51
    44bc:	df 4f       	sbci	r29, 0xFF	; 255
    44be:	b8 81       	ld	r27, Y
    44c0:	cd 5c       	subi	r28, 0xCD	; 205
    44c2:	d0 40       	sbci	r29, 0x00	; 0
    44c4:	bb 22       	and	r11, r27
    44c6:	f2 01       	movw	r30, r4
    44c8:	d3 a4       	ldd	r13, Z+43	; 0x2b
    44ca:	c2 53       	subi	r28, 0x32	; 50
    44cc:	df 4f       	sbci	r29, 0xFF	; 255
    44ce:	f8 81       	ld	r31, Y
    44d0:	ce 5c       	subi	r28, 0xCE	; 206
    44d2:	d0 40       	sbci	r29, 0x00	; 0
    44d4:	df 22       	and	r13, r31
    44d6:	d2 01       	movw	r26, r4
    44d8:	9c 96       	adiw	r26, 0x2c	; 44
    44da:	fc 90       	ld	r15, X
    44dc:	c1 53       	subi	r28, 0x31	; 49
    44de:	df 4f       	sbci	r29, 0xFF	; 255
    44e0:	b8 81       	ld	r27, Y
    44e2:	cf 5c       	subi	r28, 0xCF	; 207
    44e4:	d0 40       	sbci	r29, 0x00	; 0
    44e6:	fb 22       	and	r15, r27
    44e8:	f2 01       	movw	r30, r4
    44ea:	15 a5       	ldd	r17, Z+45	; 0x2d
    44ec:	12 21       	and	r17, r2
    44ee:	a6 a5       	ldd	r26, Z+46	; 0x2e
    44f0:	c0 53       	subi	r28, 0x30	; 48
    44f2:	df 4f       	sbci	r29, 0xFF	; 255
    44f4:	f8 81       	ld	r31, Y
    44f6:	c0 5d       	subi	r28, 0xD0	; 208
    44f8:	d0 40       	sbci	r29, 0x00	; 0
    44fa:	fa 23       	and	r31, r26
    44fc:	d2 01       	movw	r26, r4
    44fe:	9f 96       	adiw	r26, 0x2f	; 47
    4500:	ec 91       	ld	r30, X
    4502:	cf 52       	subi	r28, 0x2F	; 47
    4504:	df 4f       	sbci	r29, 0xFF	; 255
    4506:	b8 81       	ld	r27, Y
    4508:	c1 5d       	subi	r28, 0xD1	; 209
    450a:	d0 40       	sbci	r29, 0x00	; 0
    450c:	eb 23       	and	r30, r27
    450e:	67 24       	eor	r6, r7
    4510:	c6 52       	subi	r28, 0x26	; 38
    4512:	df 4f       	sbci	r29, 0xFF	; 255
    4514:	68 82       	st	Y, r6
    4516:	ca 5d       	subi	r28, 0xDA	; 218
    4518:	d0 40       	sbci	r29, 0x00	; 0
    451a:	89 24       	eor	r8, r9
    451c:	c5 52       	subi	r28, 0x25	; 37
    451e:	df 4f       	sbci	r29, 0xFF	; 255
    4520:	88 82       	st	Y, r8
    4522:	cb 5d       	subi	r28, 0xDB	; 219
    4524:	d0 40       	sbci	r29, 0x00	; 0
    4526:	ab 24       	eor	r10, r11
    4528:	c4 52       	subi	r28, 0x24	; 36
    452a:	df 4f       	sbci	r29, 0xFF	; 255
    452c:	a8 82       	st	Y, r10
    452e:	cc 5d       	subi	r28, 0xDC	; 220
    4530:	d0 40       	sbci	r29, 0x00	; 0
    4532:	cd 24       	eor	r12, r13
    4534:	c6 51       	subi	r28, 0x16	; 22
    4536:	df 4f       	sbci	r29, 0xFF	; 255
    4538:	c8 82       	st	Y, r12
    453a:	ca 5e       	subi	r28, 0xEA	; 234
    453c:	d0 40       	sbci	r29, 0x00	; 0
    453e:	ef 24       	eor	r14, r15
    4540:	c5 51       	subi	r28, 0x15	; 21
    4542:	df 4f       	sbci	r29, 0xFF	; 255
    4544:	e8 82       	st	Y, r14
    4546:	cb 5e       	subi	r28, 0xEB	; 235
    4548:	d0 40       	sbci	r29, 0x00	; 0
    454a:	01 27       	eor	r16, r17
    454c:	c4 51       	subi	r28, 0x14	; 20
    454e:	df 4f       	sbci	r29, 0xFF	; 255
    4550:	08 83       	st	Y, r16
    4552:	cc 5e       	subi	r28, 0xEC	; 236
    4554:	d0 40       	sbci	r29, 0x00	; 0
    4556:	f3 25       	eor	r31, r3
    4558:	c3 51       	subi	r28, 0x13	; 19
    455a:	df 4f       	sbci	r29, 0xFF	; 255
    455c:	f8 83       	st	Y, r31
    455e:	cd 5e       	subi	r28, 0xED	; 237
    4560:	d0 40       	sbci	r29, 0x00	; 0
    4562:	c2 51       	subi	r28, 0x12	; 18
    4564:	df 4f       	sbci	r29, 0xFF	; 255
    4566:	a8 81       	ld	r26, Y
    4568:	ce 5e       	subi	r28, 0xEE	; 238
    456a:	d0 40       	sbci	r29, 0x00	; 0
    456c:	ae 27       	eor	r26, r30
    456e:	c2 51       	subi	r28, 0x12	; 18
    4570:	df 4f       	sbci	r29, 0xFF	; 255
    4572:	a8 83       	st	Y, r26
    4574:	ce 5e       	subi	r28, 0xEE	; 238
    4576:	d0 40       	sbci	r29, 0x00	; 0
uint64_t pgm_read_uint64_t_P(const uint64_t * p){
	union {
		uint64_t v64;
		uint32_t v32[2];
	} ret;
	ret.v32[0] = pgm_read_dword(p);
    4578:	c8 51       	subi	r28, 0x18	; 24
    457a:	df 4f       	sbci	r29, 0xFF	; 255
    457c:	e8 81       	ld	r30, Y
    457e:	f9 81       	ldd	r31, Y+1	; 0x01
    4580:	c8 5e       	subi	r28, 0xE8	; 232
    4582:	d0 40       	sbci	r29, 0x00	; 0
    4584:	c5 90       	lpm	r12, Z+
    4586:	d5 90       	lpm	r13, Z+
    4588:	e5 90       	lpm	r14, Z+
    458a:	f4 90       	lpm	r15, Z
    458c:	ac 2c       	mov	r10, r12
    458e:	cf 53       	subi	r28, 0x3F	; 63
    4590:	df 4f       	sbci	r29, 0xFF	; 255
    4592:	c8 82       	st	Y, r12
    4594:	d9 82       	std	Y+1, r13	; 0x01
    4596:	ea 82       	std	Y+2, r14	; 0x02
    4598:	fb 82       	std	Y+3, r15	; 0x03
    459a:	c1 5c       	subi	r28, 0xC1	; 193
    459c:	d0 40       	sbci	r29, 0x00	; 0
	ret.v32[1] = pgm_read_dword((uint8_t*)p + 4);
    459e:	c8 51       	subi	r28, 0x18	; 24
    45a0:	df 4f       	sbci	r29, 0xFF	; 255
    45a2:	e8 81       	ld	r30, Y
    45a4:	f9 81       	ldd	r31, Y+1	; 0x01
    45a6:	c8 5e       	subi	r28, 0xE8	; 232
    45a8:	d0 40       	sbci	r29, 0x00	; 0
    45aa:	34 96       	adiw	r30, 0x04	; 4
    45ac:	65 90       	lpm	r6, Z+
    45ae:	75 90       	lpm	r7, Z+
    45b0:	85 90       	lpm	r8, Z+
    45b2:	94 90       	lpm	r9, Z
    45b4:	e6 2c       	mov	r14, r6
    45b6:	cb 53       	subi	r28, 0x3B	; 59
    45b8:	df 4f       	sbci	r29, 0xFF	; 255
    45ba:	68 82       	st	Y, r6
    45bc:	79 82       	std	Y+1, r7	; 0x01
    45be:	8a 82       	std	Y+2, r8	; 0x02
    45c0:	9b 82       	std	Y+3, r9	; 0x03
    45c2:	c5 5c       	subi	r28, 0xC5	; 197
    45c4:	d0 40       	sbci	r29, 0x00	; 0
    45c6:	ce 53       	subi	r28, 0x3E	; 62
    45c8:	df 4f       	sbci	r29, 0xFF	; 255
    45ca:	b8 80       	ld	r11, Y
    45cc:	c2 5c       	subi	r28, 0xC2	; 194
    45ce:	d0 40       	sbci	r29, 0x00	; 0
    45d0:	cd 53       	subi	r28, 0x3D	; 61
    45d2:	df 4f       	sbci	r29, 0xFF	; 255
    45d4:	c8 80       	ld	r12, Y
    45d6:	c3 5c       	subi	r28, 0xC3	; 195
    45d8:	d0 40       	sbci	r29, 0x00	; 0
    45da:	cc 53       	subi	r28, 0x3C	; 60
    45dc:	df 4f       	sbci	r29, 0xFF	; 255
    45de:	d8 80       	ld	r13, Y
    45e0:	c4 5c       	subi	r28, 0xC4	; 196
    45e2:	d0 40       	sbci	r29, 0x00	; 0
    45e4:	ca 53       	subi	r28, 0x3A	; 58
    45e6:	df 4f       	sbci	r29, 0xFF	; 255
    45e8:	f8 80       	ld	r15, Y
    45ea:	c6 5c       	subi	r28, 0xC6	; 198
    45ec:	d0 40       	sbci	r29, 0x00	; 0
    45ee:	c9 53       	subi	r28, 0x39	; 57
    45f0:	df 4f       	sbci	r29, 0xFF	; 255
    45f2:	08 81       	ld	r16, Y
    45f4:	c7 5c       	subi	r28, 0xC7	; 199
    45f6:	d0 40       	sbci	r29, 0x00	; 0
    45f8:	c8 53       	subi	r28, 0x38	; 56
    45fa:	df 4f       	sbci	r29, 0xFF	; 255
    45fc:	18 81       	ld	r17, Y
    45fe:	c8 5c       	subi	r28, 0xC8	; 200
    4600:	d0 40       	sbci	r29, 0x00	; 0
    4602:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4606:	39 01       	movw	r6, r18
    4608:	4a 01       	movw	r8, r20
    460a:	b6 2f       	mov	r27, r22
    460c:	a7 2f       	mov	r26, r23
    460e:	f8 2f       	mov	r31, r24
    4610:	e9 2f       	mov	r30, r25
    4612:	c7 53       	subi	r28, 0x37	; 55
    4614:	df 4f       	sbci	r29, 0xFF	; 255
    4616:	28 81       	ld	r18, Y
    4618:	c9 5c       	subi	r28, 0xC9	; 201
    461a:	d0 40       	sbci	r29, 0x00	; 0
    461c:	c5 53       	subi	r28, 0x35	; 53
    461e:	df 4f       	sbci	r29, 0xFF	; 255
    4620:	38 81       	ld	r19, Y
    4622:	cb 5c       	subi	r28, 0xCB	; 203
    4624:	d0 40       	sbci	r29, 0x00	; 0
    4626:	c3 53       	subi	r28, 0x33	; 51
    4628:	df 4f       	sbci	r29, 0xFF	; 255
    462a:	48 81       	ld	r20, Y
    462c:	cd 5c       	subi	r28, 0xCD	; 205
    462e:	d0 40       	sbci	r29, 0x00	; 0
    4630:	c2 53       	subi	r28, 0x32	; 50
    4632:	df 4f       	sbci	r29, 0xFF	; 255
    4634:	58 81       	ld	r21, Y
    4636:	ce 5c       	subi	r28, 0xCE	; 206
    4638:	d0 40       	sbci	r29, 0x00	; 0
    463a:	c1 53       	subi	r28, 0x31	; 49
    463c:	df 4f       	sbci	r29, 0xFF	; 255
    463e:	68 81       	ld	r22, Y
    4640:	cf 5c       	subi	r28, 0xCF	; 207
    4642:	d0 40       	sbci	r29, 0x00	; 0
    4644:	72 2d       	mov	r23, r2
    4646:	c0 53       	subi	r28, 0x30	; 48
    4648:	df 4f       	sbci	r29, 0xFF	; 255
    464a:	88 81       	ld	r24, Y
    464c:	c0 5d       	subi	r28, 0xD0	; 208
    464e:	d0 40       	sbci	r29, 0x00	; 0
    4650:	cf 52       	subi	r28, 0x2F	; 47
    4652:	df 4f       	sbci	r29, 0xFF	; 255
    4654:	98 81       	ld	r25, Y
    4656:	c1 5d       	subi	r28, 0xD1	; 209
    4658:	d0 40       	sbci	r29, 0x00	; 0
    465a:	0e e2       	ldi	r16, 0x2E	; 46
    465c:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    4660:	59 01       	movw	r10, r18
    4662:	6a 01       	movw	r12, r20
    4664:	7b 01       	movw	r14, r22
    4666:	38 2e       	mov	r3, r24
    4668:	19 2f       	mov	r17, r25
    466a:	c7 53       	subi	r28, 0x37	; 55
    466c:	df 4f       	sbci	r29, 0xFF	; 255
    466e:	28 81       	ld	r18, Y
    4670:	c9 5c       	subi	r28, 0xC9	; 201
    4672:	d0 40       	sbci	r29, 0x00	; 0
    4674:	c5 53       	subi	r28, 0x35	; 53
    4676:	df 4f       	sbci	r29, 0xFF	; 255
    4678:	38 81       	ld	r19, Y
    467a:	cb 5c       	subi	r28, 0xCB	; 203
    467c:	d0 40       	sbci	r29, 0x00	; 0
    467e:	c3 53       	subi	r28, 0x33	; 51
    4680:	df 4f       	sbci	r29, 0xFF	; 255
    4682:	48 81       	ld	r20, Y
    4684:	cd 5c       	subi	r28, 0xCD	; 205
    4686:	d0 40       	sbci	r29, 0x00	; 0
    4688:	c2 53       	subi	r28, 0x32	; 50
    468a:	df 4f       	sbci	r29, 0xFF	; 255
    468c:	58 81       	ld	r21, Y
    468e:	ce 5c       	subi	r28, 0xCE	; 206
    4690:	d0 40       	sbci	r29, 0x00	; 0
    4692:	c1 53       	subi	r28, 0x31	; 49
    4694:	df 4f       	sbci	r29, 0xFF	; 255
    4696:	68 81       	ld	r22, Y
    4698:	cf 5c       	subi	r28, 0xCF	; 207
    469a:	d0 40       	sbci	r29, 0x00	; 0
    469c:	72 2d       	mov	r23, r2
    469e:	c0 53       	subi	r28, 0x30	; 48
    46a0:	df 4f       	sbci	r29, 0xFF	; 255
    46a2:	88 81       	ld	r24, Y
    46a4:	c0 5d       	subi	r28, 0xD0	; 208
    46a6:	d0 40       	sbci	r29, 0x00	; 0
    46a8:	cf 52       	subi	r28, 0x2F	; 47
    46aa:	df 4f       	sbci	r29, 0xFF	; 255
    46ac:	98 81       	ld	r25, Y
    46ae:	c1 5d       	subi	r28, 0xD1	; 209
    46b0:	d0 40       	sbci	r29, 0x00	; 0
    46b2:	02 e3       	ldi	r16, 0x32	; 50
    46b4:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    46b8:	a2 26       	eor	r10, r18
    46ba:	b3 26       	eor	r11, r19
    46bc:	c4 26       	eor	r12, r20
    46be:	d5 26       	eor	r13, r21
    46c0:	e6 26       	eor	r14, r22
    46c2:	f7 26       	eor	r15, r23
    46c4:	38 26       	eor	r3, r24
    46c6:	19 27       	eor	r17, r25
    46c8:	c7 53       	subi	r28, 0x37	; 55
    46ca:	df 4f       	sbci	r29, 0xFF	; 255
    46cc:	28 81       	ld	r18, Y
    46ce:	c9 5c       	subi	r28, 0xC9	; 201
    46d0:	d0 40       	sbci	r29, 0x00	; 0
    46d2:	c5 53       	subi	r28, 0x35	; 53
    46d4:	df 4f       	sbci	r29, 0xFF	; 255
    46d6:	38 81       	ld	r19, Y
    46d8:	cb 5c       	subi	r28, 0xCB	; 203
    46da:	d0 40       	sbci	r29, 0x00	; 0
    46dc:	c3 53       	subi	r28, 0x33	; 51
    46de:	df 4f       	sbci	r29, 0xFF	; 255
    46e0:	48 81       	ld	r20, Y
    46e2:	cd 5c       	subi	r28, 0xCD	; 205
    46e4:	d0 40       	sbci	r29, 0x00	; 0
    46e6:	c2 53       	subi	r28, 0x32	; 50
    46e8:	df 4f       	sbci	r29, 0xFF	; 255
    46ea:	58 81       	ld	r21, Y
    46ec:	ce 5c       	subi	r28, 0xCE	; 206
    46ee:	d0 40       	sbci	r29, 0x00	; 0
    46f0:	c1 53       	subi	r28, 0x31	; 49
    46f2:	df 4f       	sbci	r29, 0xFF	; 255
    46f4:	68 81       	ld	r22, Y
    46f6:	cf 5c       	subi	r28, 0xCF	; 207
    46f8:	d0 40       	sbci	r29, 0x00	; 0
    46fa:	72 2d       	mov	r23, r2
    46fc:	c0 53       	subi	r28, 0x30	; 48
    46fe:	df 4f       	sbci	r29, 0xFF	; 255
    4700:	88 81       	ld	r24, Y
    4702:	c0 5d       	subi	r28, 0xD0	; 208
    4704:	d0 40       	sbci	r29, 0x00	; 0
    4706:	cf 52       	subi	r28, 0x2F	; 47
    4708:	df 4f       	sbci	r29, 0xFF	; 255
    470a:	98 81       	ld	r25, Y
    470c:	c1 5d       	subi	r28, 0xD1	; 209
    470e:	d0 40       	sbci	r29, 0x00	; 0
    4710:	07 e1       	ldi	r16, 0x17	; 23
    4712:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    4716:	a2 26       	eor	r10, r18
    4718:	b3 26       	eor	r11, r19
    471a:	c4 26       	eor	r12, r20
    471c:	d5 26       	eor	r13, r21
    471e:	e6 26       	eor	r14, r22
    4720:	f7 26       	eor	r15, r23
    4722:	03 2d       	mov	r16, r3
    4724:	08 27       	eor	r16, r24
    4726:	19 27       	eor	r17, r25
    4728:	93 01       	movw	r18, r6
    472a:	a4 01       	movw	r20, r8
    472c:	6b 2f       	mov	r22, r27
    472e:	7a 2f       	mov	r23, r26
    4730:	8f 2f       	mov	r24, r31
    4732:	9e 2f       	mov	r25, r30
    4734:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4738:	59 01       	movw	r10, r18
    473a:	6a 01       	movw	r12, r20
    473c:	7b 01       	movw	r14, r22
    473e:	8c 01       	movw	r16, r24
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
			memmove(&(w[0]), &(w[1]), 15*8);
			w[15] = wx;
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4], a[5], a[6]) + pgm_read_uint64_t_P(k++) + wx;
    4740:	c6 52       	subi	r28, 0x26	; 38
    4742:	df 4f       	sbci	r29, 0xFF	; 255
    4744:	28 81       	ld	r18, Y
    4746:	ca 5d       	subi	r28, 0xDA	; 218
    4748:	d0 40       	sbci	r29, 0x00	; 0
    474a:	c5 52       	subi	r28, 0x25	; 37
    474c:	df 4f       	sbci	r29, 0xFF	; 255
    474e:	38 81       	ld	r19, Y
    4750:	cb 5d       	subi	r28, 0xDB	; 219
    4752:	d0 40       	sbci	r29, 0x00	; 0
    4754:	c4 52       	subi	r28, 0x24	; 36
    4756:	df 4f       	sbci	r29, 0xFF	; 255
    4758:	48 81       	ld	r20, Y
    475a:	cc 5d       	subi	r28, 0xDC	; 220
    475c:	d0 40       	sbci	r29, 0x00	; 0
    475e:	c6 51       	subi	r28, 0x16	; 22
    4760:	df 4f       	sbci	r29, 0xFF	; 255
    4762:	58 81       	ld	r21, Y
    4764:	ca 5e       	subi	r28, 0xEA	; 234
    4766:	d0 40       	sbci	r29, 0x00	; 0
    4768:	c5 51       	subi	r28, 0x15	; 21
    476a:	df 4f       	sbci	r29, 0xFF	; 255
    476c:	68 81       	ld	r22, Y
    476e:	cb 5e       	subi	r28, 0xEB	; 235
    4770:	d0 40       	sbci	r29, 0x00	; 0
    4772:	c4 51       	subi	r28, 0x14	; 20
    4774:	df 4f       	sbci	r29, 0xFF	; 255
    4776:	78 81       	ld	r23, Y
    4778:	cc 5e       	subi	r28, 0xEC	; 236
    477a:	d0 40       	sbci	r29, 0x00	; 0
    477c:	c3 51       	subi	r28, 0x13	; 19
    477e:	df 4f       	sbci	r29, 0xFF	; 255
    4780:	88 81       	ld	r24, Y
    4782:	cd 5e       	subi	r28, 0xED	; 237
    4784:	d0 40       	sbci	r29, 0x00	; 0
    4786:	c2 51       	subi	r28, 0x12	; 18
    4788:	df 4f       	sbci	r29, 0xFF	; 255
    478a:	98 81       	ld	r25, Y
    478c:	ce 5e       	subi	r28, 0xEE	; 238
    478e:	d0 40       	sbci	r29, 0x00	; 0
    4790:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4794:	ce 52       	subi	r28, 0x2E	; 46
    4796:	df 4f       	sbci	r29, 0xFF	; 255
    4798:	a8 80       	ld	r10, Y
    479a:	c2 5d       	subi	r28, 0xD2	; 210
    479c:	d0 40       	sbci	r29, 0x00	; 0
    479e:	cd 52       	subi	r28, 0x2D	; 45
    47a0:	df 4f       	sbci	r29, 0xFF	; 255
    47a2:	b8 80       	ld	r11, Y
    47a4:	c3 5d       	subi	r28, 0xD3	; 211
    47a6:	d0 40       	sbci	r29, 0x00	; 0
    47a8:	cc 52       	subi	r28, 0x2C	; 44
    47aa:	df 4f       	sbci	r29, 0xFF	; 255
    47ac:	c8 80       	ld	r12, Y
    47ae:	c4 5d       	subi	r28, 0xD4	; 212
    47b0:	d0 40       	sbci	r29, 0x00	; 0
    47b2:	cb 52       	subi	r28, 0x2B	; 43
    47b4:	df 4f       	sbci	r29, 0xFF	; 255
    47b6:	d8 80       	ld	r13, Y
    47b8:	c5 5d       	subi	r28, 0xD5	; 213
    47ba:	d0 40       	sbci	r29, 0x00	; 0
    47bc:	ca 52       	subi	r28, 0x2A	; 42
    47be:	df 4f       	sbci	r29, 0xFF	; 255
    47c0:	e8 80       	ld	r14, Y
    47c2:	c6 5d       	subi	r28, 0xD6	; 214
    47c4:	d0 40       	sbci	r29, 0x00	; 0
    47c6:	c9 52       	subi	r28, 0x29	; 41
    47c8:	df 4f       	sbci	r29, 0xFF	; 255
    47ca:	f8 80       	ld	r15, Y
    47cc:	c7 5d       	subi	r28, 0xD7	; 215
    47ce:	d0 40       	sbci	r29, 0x00	; 0
    47d0:	c8 52       	subi	r28, 0x28	; 40
    47d2:	df 4f       	sbci	r29, 0xFF	; 255
    47d4:	08 81       	ld	r16, Y
    47d6:	c8 5d       	subi	r28, 0xD8	; 216
    47d8:	d0 40       	sbci	r29, 0x00	; 0
    47da:	c7 52       	subi	r28, 0x27	; 39
    47dc:	df 4f       	sbci	r29, 0xFF	; 255
    47de:	18 81       	ld	r17, Y
    47e0:	c9 5d       	subi	r28, 0xD9	; 217
    47e2:	d0 40       	sbci	r29, 0x00	; 0
    47e4:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    47e8:	92 2e       	mov	r9, r18
    47ea:	c5 53       	subi	r28, 0x35	; 53
    47ec:	df 4f       	sbci	r29, 0xFF	; 255
    47ee:	38 83       	st	Y, r19
    47f0:	cb 5c       	subi	r28, 0xCB	; 203
    47f2:	d0 40       	sbci	r29, 0x00	; 0
    47f4:	c3 53       	subi	r28, 0x33	; 51
    47f6:	df 4f       	sbci	r29, 0xFF	; 255
    47f8:	48 83       	st	Y, r20
    47fa:	cd 5c       	subi	r28, 0xCD	; 205
    47fc:	d0 40       	sbci	r29, 0x00	; 0
    47fe:	c2 53       	subi	r28, 0x32	; 50
    4800:	df 4f       	sbci	r29, 0xFF	; 255
    4802:	58 83       	st	Y, r21
    4804:	ce 5c       	subi	r28, 0xCE	; 206
    4806:	d0 40       	sbci	r29, 0x00	; 0
    4808:	c1 53       	subi	r28, 0x31	; 49
    480a:	df 4f       	sbci	r29, 0xFF	; 255
    480c:	68 83       	st	Y, r22
    480e:	cf 5c       	subi	r28, 0xCF	; 207
    4810:	d0 40       	sbci	r29, 0x00	; 0
    4812:	c0 53       	subi	r28, 0x30	; 48
    4814:	df 4f       	sbci	r29, 0xFF	; 255
    4816:	78 83       	st	Y, r23
    4818:	c0 5d       	subi	r28, 0xD0	; 208
    481a:	d0 40       	sbci	r29, 0x00	; 0
    481c:	cf 52       	subi	r28, 0x2F	; 47
    481e:	df 4f       	sbci	r29, 0xFF	; 255
    4820:	88 83       	st	Y, r24
    4822:	c1 5d       	subi	r28, 0xD1	; 209
    4824:	d0 40       	sbci	r29, 0x00	; 0
    4826:	ce 52       	subi	r28, 0x2E	; 46
    4828:	df 4f       	sbci	r29, 0xFF	; 255
    482a:	98 83       	st	Y, r25
    482c:	c2 5d       	subi	r28, 0xD2	; 210
    482e:	d0 40       	sbci	r29, 0x00	; 0
		t2 = SIGMA_0(a[0]) + MAJ(a[0], a[1], a[2]);
    4830:	f2 01       	movw	r30, r4
    4832:	f0 85       	ldd	r31, Z+8	; 0x08
    4834:	cd 52       	subi	r28, 0x2D	; 45
    4836:	df 4f       	sbci	r29, 0xFF	; 255
    4838:	f8 83       	st	Y, r31
    483a:	c3 5d       	subi	r28, 0xD3	; 211
    483c:	d0 40       	sbci	r29, 0x00	; 0
    483e:	d2 01       	movw	r26, r4
    4840:	19 96       	adiw	r26, 0x09	; 9
    4842:	bc 91       	ld	r27, X
    4844:	c7 53       	subi	r28, 0x37	; 55
    4846:	df 4f       	sbci	r29, 0xFF	; 255
    4848:	b8 83       	st	Y, r27
    484a:	c9 5c       	subi	r28, 0xC9	; 201
    484c:	d0 40       	sbci	r29, 0x00	; 0
    484e:	f2 01       	movw	r30, r4
    4850:	f2 85       	ldd	r31, Z+10	; 0x0a
    4852:	cc 52       	subi	r28, 0x2C	; 44
    4854:	df 4f       	sbci	r29, 0xFF	; 255
    4856:	f8 83       	st	Y, r31
    4858:	c4 5d       	subi	r28, 0xD4	; 212
    485a:	d0 40       	sbci	r29, 0x00	; 0
    485c:	d2 01       	movw	r26, r4
    485e:	1b 96       	adiw	r26, 0x0b	; 11
    4860:	bc 91       	ld	r27, X
    4862:	cb 52       	subi	r28, 0x2B	; 43
    4864:	df 4f       	sbci	r29, 0xFF	; 255
    4866:	b8 83       	st	Y, r27
    4868:	c5 5d       	subi	r28, 0xD5	; 213
    486a:	d0 40       	sbci	r29, 0x00	; 0
    486c:	f2 01       	movw	r30, r4
    486e:	f4 85       	ldd	r31, Z+12	; 0x0c
    4870:	ca 52       	subi	r28, 0x2A	; 42
    4872:	df 4f       	sbci	r29, 0xFF	; 255
    4874:	f8 83       	st	Y, r31
    4876:	c6 5d       	subi	r28, 0xD6	; 214
    4878:	d0 40       	sbci	r29, 0x00	; 0
    487a:	d2 01       	movw	r26, r4
    487c:	1d 96       	adiw	r26, 0x0d	; 13
    487e:	bc 91       	ld	r27, X
    4880:	c9 52       	subi	r28, 0x29	; 41
    4882:	df 4f       	sbci	r29, 0xFF	; 255
    4884:	b8 83       	st	Y, r27
    4886:	c7 5d       	subi	r28, 0xD7	; 215
    4888:	d0 40       	sbci	r29, 0x00	; 0
    488a:	f2 01       	movw	r30, r4
    488c:	f6 85       	ldd	r31, Z+14	; 0x0e
    488e:	c8 52       	subi	r28, 0x28	; 40
    4890:	df 4f       	sbci	r29, 0xFF	; 255
    4892:	f8 83       	st	Y, r31
    4894:	c8 5d       	subi	r28, 0xD8	; 216
    4896:	d0 40       	sbci	r29, 0x00	; 0
    4898:	d2 01       	movw	r26, r4
    489a:	1f 96       	adiw	r26, 0x0f	; 15
    489c:	bc 91       	ld	r27, X
    489e:	c7 52       	subi	r28, 0x27	; 39
    48a0:	df 4f       	sbci	r29, 0xFF	; 255
    48a2:	b8 83       	st	Y, r27
    48a4:	c9 5d       	subi	r28, 0xD9	; 217
    48a6:	d0 40       	sbci	r29, 0x00	; 0
    48a8:	f2 01       	movw	r30, r4
    48aa:	80 88       	ldd	r8, Z+16	; 0x10
    48ac:	71 88       	ldd	r7, Z+17	; 0x11
    48ae:	22 88       	ldd	r2, Z+18	; 0x12
    48b0:	33 88       	ldd	r3, Z+19	; 0x13
    48b2:	64 88       	ldd	r6, Z+20	; 0x14
    48b4:	15 89       	ldd	r17, Z+21	; 0x15
    48b6:	c6 52       	subi	r28, 0x26	; 38
    48b8:	df 4f       	sbci	r29, 0xFF	; 255
    48ba:	18 83       	st	Y, r17
    48bc:	ca 5d       	subi	r28, 0xDA	; 218
    48be:	d0 40       	sbci	r29, 0x00	; 0
    48c0:	16 89       	ldd	r17, Z+22	; 0x16
    48c2:	c5 52       	subi	r28, 0x25	; 37
    48c4:	df 4f       	sbci	r29, 0xFF	; 255
    48c6:	18 83       	st	Y, r17
    48c8:	cb 5d       	subi	r28, 0xDB	; 219
    48ca:	d0 40       	sbci	r29, 0x00	; 0
    48cc:	17 89       	ldd	r17, Z+23	; 0x17
    48ce:	c4 52       	subi	r28, 0x24	; 36
    48d0:	df 4f       	sbci	r29, 0xFF	; 255
    48d2:	18 83       	st	Y, r17
    48d4:	cc 5d       	subi	r28, 0xDC	; 220
    48d6:	d0 40       	sbci	r29, 0x00	; 0
		memmove(&(a[1]), &(a[0]), 7*8);
    48d8:	48 e3       	ldi	r20, 0x38	; 56
    48da:	50 e0       	ldi	r21, 0x00	; 0
    48dc:	b2 01       	movw	r22, r4
    48de:	c1 51       	subi	r28, 0x11	; 17
    48e0:	df 4f       	sbci	r29, 0xFF	; 255
    48e2:	88 81       	ld	r24, Y
    48e4:	99 81       	ldd	r25, Y+1	; 0x01
    48e6:	cf 5e       	subi	r28, 0xEF	; 239
    48e8:	d0 40       	sbci	r29, 0x00	; 0
    48ea:	0e 94 b7 2e 	call	0x5d6e	; 0x5d6e <memmove>
		a[0] = t1 + t2;
    48ee:	c3 52       	subi	r28, 0x23	; 35
    48f0:	df 4f       	sbci	r29, 0xFF	; 255
    48f2:	28 81       	ld	r18, Y
    48f4:	cd 5d       	subi	r28, 0xDD	; 221
    48f6:	d0 40       	sbci	r29, 0x00	; 0
    48f8:	c2 52       	subi	r28, 0x22	; 34
    48fa:	df 4f       	sbci	r29, 0xFF	; 255
    48fc:	38 81       	ld	r19, Y
    48fe:	ce 5d       	subi	r28, 0xDE	; 222
    4900:	d0 40       	sbci	r29, 0x00	; 0
    4902:	c1 52       	subi	r28, 0x21	; 33
    4904:	df 4f       	sbci	r29, 0xFF	; 255
    4906:	48 81       	ld	r20, Y
    4908:	cf 5d       	subi	r28, 0xDF	; 223
    490a:	d0 40       	sbci	r29, 0x00	; 0
    490c:	c0 52       	subi	r28, 0x20	; 32
    490e:	df 4f       	sbci	r29, 0xFF	; 255
    4910:	58 81       	ld	r21, Y
    4912:	c0 5e       	subi	r28, 0xE0	; 224
    4914:	d0 40       	sbci	r29, 0x00	; 0
    4916:	cf 51       	subi	r28, 0x1F	; 31
    4918:	df 4f       	sbci	r29, 0xFF	; 255
    491a:	68 81       	ld	r22, Y
    491c:	c1 5e       	subi	r28, 0xE1	; 225
    491e:	d0 40       	sbci	r29, 0x00	; 0
    4920:	ce 51       	subi	r28, 0x1E	; 30
    4922:	df 4f       	sbci	r29, 0xFF	; 255
    4924:	78 81       	ld	r23, Y
    4926:	c2 5e       	subi	r28, 0xE2	; 226
    4928:	d0 40       	sbci	r29, 0x00	; 0
    492a:	cd 51       	subi	r28, 0x1D	; 29
    492c:	df 4f       	sbci	r29, 0xFF	; 255
    492e:	88 81       	ld	r24, Y
    4930:	c3 5e       	subi	r28, 0xE3	; 227
    4932:	d0 40       	sbci	r29, 0x00	; 0
    4934:	cc 51       	subi	r28, 0x1C	; 28
    4936:	df 4f       	sbci	r29, 0xFF	; 255
    4938:	98 81       	ld	r25, Y
    493a:	c4 5e       	subi	r28, 0xE4	; 228
    493c:	d0 40       	sbci	r29, 0x00	; 0
    493e:	0e e1       	ldi	r16, 0x1E	; 30
    4940:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    4944:	d2 2e       	mov	r13, r18
    4946:	e3 2e       	mov	r14, r19
    4948:	f4 2e       	mov	r15, r20
    494a:	15 2f       	mov	r17, r21
    494c:	b6 2f       	mov	r27, r22
    494e:	e7 2f       	mov	r30, r23
    4950:	a8 2f       	mov	r26, r24
    4952:	f9 2f       	mov	r31, r25
    4954:	c3 52       	subi	r28, 0x23	; 35
    4956:	df 4f       	sbci	r29, 0xFF	; 255
    4958:	28 81       	ld	r18, Y
    495a:	cd 5d       	subi	r28, 0xDD	; 221
    495c:	d0 40       	sbci	r29, 0x00	; 0
    495e:	c2 52       	subi	r28, 0x22	; 34
    4960:	df 4f       	sbci	r29, 0xFF	; 255
    4962:	38 81       	ld	r19, Y
    4964:	ce 5d       	subi	r28, 0xDE	; 222
    4966:	d0 40       	sbci	r29, 0x00	; 0
    4968:	c1 52       	subi	r28, 0x21	; 33
    496a:	df 4f       	sbci	r29, 0xFF	; 255
    496c:	48 81       	ld	r20, Y
    496e:	cf 5d       	subi	r28, 0xDF	; 223
    4970:	d0 40       	sbci	r29, 0x00	; 0
    4972:	c0 52       	subi	r28, 0x20	; 32
    4974:	df 4f       	sbci	r29, 0xFF	; 255
    4976:	58 81       	ld	r21, Y
    4978:	c0 5e       	subi	r28, 0xE0	; 224
    497a:	d0 40       	sbci	r29, 0x00	; 0
    497c:	cf 51       	subi	r28, 0x1F	; 31
    497e:	df 4f       	sbci	r29, 0xFF	; 255
    4980:	68 81       	ld	r22, Y
    4982:	c1 5e       	subi	r28, 0xE1	; 225
    4984:	d0 40       	sbci	r29, 0x00	; 0
    4986:	ce 51       	subi	r28, 0x1E	; 30
    4988:	df 4f       	sbci	r29, 0xFF	; 255
    498a:	78 81       	ld	r23, Y
    498c:	c2 5e       	subi	r28, 0xE2	; 226
    498e:	d0 40       	sbci	r29, 0x00	; 0
    4990:	cd 51       	subi	r28, 0x1D	; 29
    4992:	df 4f       	sbci	r29, 0xFF	; 255
    4994:	88 81       	ld	r24, Y
    4996:	c3 5e       	subi	r28, 0xE3	; 227
    4998:	d0 40       	sbci	r29, 0x00	; 0
    499a:	cc 51       	subi	r28, 0x1C	; 28
    499c:	df 4f       	sbci	r29, 0xFF	; 255
    499e:	98 81       	ld	r25, Y
    49a0:	c4 5e       	subi	r28, 0xE4	; 228
    49a2:	d0 40       	sbci	r29, 0x00	; 0
    49a4:	04 e2       	ldi	r16, 0x24	; 36
    49a6:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    49aa:	d2 26       	eor	r13, r18
    49ac:	e3 26       	eor	r14, r19
    49ae:	f4 26       	eor	r15, r20
    49b0:	15 27       	eor	r17, r21
    49b2:	b6 27       	eor	r27, r22
    49b4:	e7 27       	eor	r30, r23
    49b6:	a8 27       	eor	r26, r24
    49b8:	f9 27       	eor	r31, r25
    49ba:	c3 52       	subi	r28, 0x23	; 35
    49bc:	df 4f       	sbci	r29, 0xFF	; 255
    49be:	28 81       	ld	r18, Y
    49c0:	cd 5d       	subi	r28, 0xDD	; 221
    49c2:	d0 40       	sbci	r29, 0x00	; 0
    49c4:	c2 52       	subi	r28, 0x22	; 34
    49c6:	df 4f       	sbci	r29, 0xFF	; 255
    49c8:	38 81       	ld	r19, Y
    49ca:	ce 5d       	subi	r28, 0xDE	; 222
    49cc:	d0 40       	sbci	r29, 0x00	; 0
    49ce:	c1 52       	subi	r28, 0x21	; 33
    49d0:	df 4f       	sbci	r29, 0xFF	; 255
    49d2:	48 81       	ld	r20, Y
    49d4:	cf 5d       	subi	r28, 0xDF	; 223
    49d6:	d0 40       	sbci	r29, 0x00	; 0
    49d8:	c0 52       	subi	r28, 0x20	; 32
    49da:	df 4f       	sbci	r29, 0xFF	; 255
    49dc:	58 81       	ld	r21, Y
    49de:	c0 5e       	subi	r28, 0xE0	; 224
    49e0:	d0 40       	sbci	r29, 0x00	; 0
    49e2:	cf 51       	subi	r28, 0x1F	; 31
    49e4:	df 4f       	sbci	r29, 0xFF	; 255
    49e6:	68 81       	ld	r22, Y
    49e8:	c1 5e       	subi	r28, 0xE1	; 225
    49ea:	d0 40       	sbci	r29, 0x00	; 0
    49ec:	ce 51       	subi	r28, 0x1E	; 30
    49ee:	df 4f       	sbci	r29, 0xFF	; 255
    49f0:	78 81       	ld	r23, Y
    49f2:	c2 5e       	subi	r28, 0xE2	; 226
    49f4:	d0 40       	sbci	r29, 0x00	; 0
    49f6:	cd 51       	subi	r28, 0x1D	; 29
    49f8:	df 4f       	sbci	r29, 0xFF	; 255
    49fa:	88 81       	ld	r24, Y
    49fc:	c3 5e       	subi	r28, 0xE3	; 227
    49fe:	d0 40       	sbci	r29, 0x00	; 0
    4a00:	cc 51       	subi	r28, 0x1C	; 28
    4a02:	df 4f       	sbci	r29, 0xFF	; 255
    4a04:	98 81       	ld	r25, Y
    4a06:	c4 5e       	subi	r28, 0xE4	; 228
    4a08:	d0 40       	sbci	r29, 0x00	; 0
    4a0a:	09 e1       	ldi	r16, 0x19	; 25
    4a0c:	0e 94 2c 2e 	call	0x5c58	; 0x5c58 <__rotldi3>
    4a10:	2d 25       	eor	r18, r13
    4a12:	3e 25       	eor	r19, r14
    4a14:	4f 25       	eor	r20, r15
    4a16:	51 27       	eor	r21, r17
    4a18:	6b 27       	eor	r22, r27
    4a1a:	7e 27       	eor	r23, r30
    4a1c:	cd 52       	subi	r28, 0x2D	; 45
    4a1e:	df 4f       	sbci	r29, 0xFF	; 255
    4a20:	a8 80       	ld	r10, Y
    4a22:	c3 5d       	subi	r28, 0xD3	; 211
    4a24:	d0 40       	sbci	r29, 0x00	; 0
    4a26:	a8 24       	eor	r10, r8
    4a28:	c7 53       	subi	r28, 0x37	; 55
    4a2a:	df 4f       	sbci	r29, 0xFF	; 255
    4a2c:	b8 80       	ld	r11, Y
    4a2e:	c9 5c       	subi	r28, 0xC9	; 201
    4a30:	d0 40       	sbci	r29, 0x00	; 0
    4a32:	b7 24       	eor	r11, r7
    4a34:	cc 52       	subi	r28, 0x2C	; 44
    4a36:	df 4f       	sbci	r29, 0xFF	; 255
    4a38:	c8 80       	ld	r12, Y
    4a3a:	c4 5d       	subi	r28, 0xD4	; 212
    4a3c:	d0 40       	sbci	r29, 0x00	; 0
    4a3e:	c2 24       	eor	r12, r2
    4a40:	cb 52       	subi	r28, 0x2B	; 43
    4a42:	df 4f       	sbci	r29, 0xFF	; 255
    4a44:	d8 80       	ld	r13, Y
    4a46:	c5 5d       	subi	r28, 0xD5	; 213
    4a48:	d0 40       	sbci	r29, 0x00	; 0
    4a4a:	d3 24       	eor	r13, r3
    4a4c:	ca 52       	subi	r28, 0x2A	; 42
    4a4e:	df 4f       	sbci	r29, 0xFF	; 255
    4a50:	e8 80       	ld	r14, Y
    4a52:	c6 5d       	subi	r28, 0xD6	; 214
    4a54:	d0 40       	sbci	r29, 0x00	; 0
    4a56:	e6 24       	eor	r14, r6
    4a58:	c9 52       	subi	r28, 0x29	; 41
    4a5a:	df 4f       	sbci	r29, 0xFF	; 255
    4a5c:	f8 80       	ld	r15, Y
    4a5e:	c7 5d       	subi	r28, 0xD7	; 215
    4a60:	d0 40       	sbci	r29, 0x00	; 0
    4a62:	c6 52       	subi	r28, 0x26	; 38
    4a64:	df 4f       	sbci	r29, 0xFF	; 255
    4a66:	18 81       	ld	r17, Y
    4a68:	ca 5d       	subi	r28, 0xDA	; 218
    4a6a:	d0 40       	sbci	r29, 0x00	; 0
    4a6c:	f1 26       	eor	r15, r17
    4a6e:	c8 52       	subi	r28, 0x28	; 40
    4a70:	df 4f       	sbci	r29, 0xFF	; 255
    4a72:	08 81       	ld	r16, Y
    4a74:	c8 5d       	subi	r28, 0xD8	; 216
    4a76:	d0 40       	sbci	r29, 0x00	; 0
    4a78:	c5 52       	subi	r28, 0x25	; 37
    4a7a:	df 4f       	sbci	r29, 0xFF	; 255
    4a7c:	18 81       	ld	r17, Y
    4a7e:	cb 5d       	subi	r28, 0xDB	; 219
    4a80:	d0 40       	sbci	r29, 0x00	; 0
    4a82:	01 27       	eor	r16, r17
    4a84:	c7 52       	subi	r28, 0x27	; 39
    4a86:	df 4f       	sbci	r29, 0xFF	; 255
    4a88:	18 81       	ld	r17, Y
    4a8a:	c9 5d       	subi	r28, 0xD9	; 217
    4a8c:	d0 40       	sbci	r29, 0x00	; 0
    4a8e:	c4 52       	subi	r28, 0x24	; 36
    4a90:	df 4f       	sbci	r29, 0xFF	; 255
    4a92:	b8 81       	ld	r27, Y
    4a94:	cc 5d       	subi	r28, 0xDC	; 220
    4a96:	d0 40       	sbci	r29, 0x00	; 0
    4a98:	1b 27       	eor	r17, r27
    4a9a:	c3 52       	subi	r28, 0x23	; 35
    4a9c:	df 4f       	sbci	r29, 0xFF	; 255
    4a9e:	e8 81       	ld	r30, Y
    4aa0:	cd 5d       	subi	r28, 0xDD	; 221
    4aa2:	d0 40       	sbci	r29, 0x00	; 0
    4aa4:	ae 22       	and	r10, r30
    4aa6:	c2 52       	subi	r28, 0x22	; 34
    4aa8:	df 4f       	sbci	r29, 0xFF	; 255
    4aaa:	b8 81       	ld	r27, Y
    4aac:	ce 5d       	subi	r28, 0xDE	; 222
    4aae:	d0 40       	sbci	r29, 0x00	; 0
    4ab0:	bb 22       	and	r11, r27
    4ab2:	c1 52       	subi	r28, 0x21	; 33
    4ab4:	df 4f       	sbci	r29, 0xFF	; 255
    4ab6:	e8 81       	ld	r30, Y
    4ab8:	cf 5d       	subi	r28, 0xDF	; 223
    4aba:	d0 40       	sbci	r29, 0x00	; 0
    4abc:	ce 22       	and	r12, r30
    4abe:	c0 52       	subi	r28, 0x20	; 32
    4ac0:	df 4f       	sbci	r29, 0xFF	; 255
    4ac2:	b8 81       	ld	r27, Y
    4ac4:	c0 5e       	subi	r28, 0xE0	; 224
    4ac6:	d0 40       	sbci	r29, 0x00	; 0
    4ac8:	db 22       	and	r13, r27
    4aca:	cf 51       	subi	r28, 0x1F	; 31
    4acc:	df 4f       	sbci	r29, 0xFF	; 255
    4ace:	e8 81       	ld	r30, Y
    4ad0:	c1 5e       	subi	r28, 0xE1	; 225
    4ad2:	d0 40       	sbci	r29, 0x00	; 0
    4ad4:	ee 22       	and	r14, r30
    4ad6:	ce 51       	subi	r28, 0x1E	; 30
    4ad8:	df 4f       	sbci	r29, 0xFF	; 255
    4ada:	b8 81       	ld	r27, Y
    4adc:	c2 5e       	subi	r28, 0xE2	; 226
    4ade:	d0 40       	sbci	r29, 0x00	; 0
    4ae0:	fb 22       	and	r15, r27
    4ae2:	cd 51       	subi	r28, 0x1D	; 29
    4ae4:	df 4f       	sbci	r29, 0xFF	; 255
    4ae6:	e8 81       	ld	r30, Y
    4ae8:	c3 5e       	subi	r28, 0xE3	; 227
    4aea:	d0 40       	sbci	r29, 0x00	; 0
    4aec:	0e 23       	and	r16, r30
    4aee:	cc 51       	subi	r28, 0x1C	; 28
    4af0:	df 4f       	sbci	r29, 0xFF	; 255
    4af2:	b8 81       	ld	r27, Y
    4af4:	c4 5e       	subi	r28, 0xE4	; 228
    4af6:	d0 40       	sbci	r29, 0x00	; 0
    4af8:	b1 23       	and	r27, r17
    4afa:	c3 52       	subi	r28, 0x23	; 35
    4afc:	df 4f       	sbci	r29, 0xFF	; 255
    4afe:	b8 83       	st	Y, r27
    4b00:	cd 5d       	subi	r28, 0xDD	; 221
    4b02:	d0 40       	sbci	r29, 0x00	; 0
    4b04:	cd 52       	subi	r28, 0x2D	; 45
    4b06:	df 4f       	sbci	r29, 0xFF	; 255
    4b08:	e8 81       	ld	r30, Y
    4b0a:	c3 5d       	subi	r28, 0xD3	; 211
    4b0c:	d0 40       	sbci	r29, 0x00	; 0
    4b0e:	e8 21       	and	r30, r8
    4b10:	c7 53       	subi	r28, 0x37	; 55
    4b12:	df 4f       	sbci	r29, 0xFF	; 255
    4b14:	18 81       	ld	r17, Y
    4b16:	c9 5c       	subi	r28, 0xC9	; 201
    4b18:	d0 40       	sbci	r29, 0x00	; 0
    4b1a:	17 21       	and	r17, r7
    4b1c:	c7 53       	subi	r28, 0x37	; 55
    4b1e:	df 4f       	sbci	r29, 0xFF	; 255
    4b20:	18 83       	st	Y, r17
    4b22:	c9 5c       	subi	r28, 0xC9	; 201
    4b24:	d0 40       	sbci	r29, 0x00	; 0
    4b26:	cc 52       	subi	r28, 0x2C	; 44
    4b28:	df 4f       	sbci	r29, 0xFF	; 255
    4b2a:	18 81       	ld	r17, Y
    4b2c:	c4 5d       	subi	r28, 0xD4	; 212
    4b2e:	d0 40       	sbci	r29, 0x00	; 0
    4b30:	21 22       	and	r2, r17
    4b32:	cb 52       	subi	r28, 0x2B	; 43
    4b34:	df 4f       	sbci	r29, 0xFF	; 255
    4b36:	18 81       	ld	r17, Y
    4b38:	c5 5d       	subi	r28, 0xD5	; 213
    4b3a:	d0 40       	sbci	r29, 0x00	; 0
    4b3c:	31 22       	and	r3, r17
    4b3e:	ca 52       	subi	r28, 0x2A	; 42
    4b40:	df 4f       	sbci	r29, 0xFF	; 255
    4b42:	18 81       	ld	r17, Y
    4b44:	c6 5d       	subi	r28, 0xD6	; 214
    4b46:	d0 40       	sbci	r29, 0x00	; 0
    4b48:	61 22       	and	r6, r17
    4b4a:	c9 52       	subi	r28, 0x29	; 41
    4b4c:	df 4f       	sbci	r29, 0xFF	; 255
    4b4e:	78 80       	ld	r7, Y
    4b50:	c7 5d       	subi	r28, 0xD7	; 215
    4b52:	d0 40       	sbci	r29, 0x00	; 0
    4b54:	c6 52       	subi	r28, 0x26	; 38
    4b56:	df 4f       	sbci	r29, 0xFF	; 255
    4b58:	18 81       	ld	r17, Y
    4b5a:	ca 5d       	subi	r28, 0xDA	; 218
    4b5c:	d0 40       	sbci	r29, 0x00	; 0
    4b5e:	71 22       	and	r7, r17
    4b60:	c8 52       	subi	r28, 0x28	; 40
    4b62:	df 4f       	sbci	r29, 0xFF	; 255
    4b64:	88 80       	ld	r8, Y
    4b66:	c8 5d       	subi	r28, 0xD8	; 216
    4b68:	d0 40       	sbci	r29, 0x00	; 0
    4b6a:	c5 52       	subi	r28, 0x25	; 37
    4b6c:	df 4f       	sbci	r29, 0xFF	; 255
    4b6e:	18 81       	ld	r17, Y
    4b70:	cb 5d       	subi	r28, 0xDB	; 219
    4b72:	d0 40       	sbci	r29, 0x00	; 0
    4b74:	81 22       	and	r8, r17
    4b76:	c7 52       	subi	r28, 0x27	; 39
    4b78:	df 4f       	sbci	r29, 0xFF	; 255
    4b7a:	b8 81       	ld	r27, Y
    4b7c:	c9 5d       	subi	r28, 0xD9	; 217
    4b7e:	d0 40       	sbci	r29, 0x00	; 0
    4b80:	c4 52       	subi	r28, 0x24	; 36
    4b82:	df 4f       	sbci	r29, 0xFF	; 255
    4b84:	18 81       	ld	r17, Y
    4b86:	cc 5d       	subi	r28, 0xDC	; 220
    4b88:	d0 40       	sbci	r29, 0x00	; 0
    4b8a:	b1 23       	and	r27, r17
    4b8c:	ae 26       	eor	r10, r30
    4b8e:	c7 53       	subi	r28, 0x37	; 55
    4b90:	df 4f       	sbci	r29, 0xFF	; 255
    4b92:	e8 81       	ld	r30, Y
    4b94:	c9 5c       	subi	r28, 0xC9	; 201
    4b96:	d0 40       	sbci	r29, 0x00	; 0
    4b98:	be 26       	eor	r11, r30
    4b9a:	c2 24       	eor	r12, r2
    4b9c:	d3 24       	eor	r13, r3
    4b9e:	e6 24       	eor	r14, r6
    4ba0:	f7 24       	eor	r15, r7
    4ba2:	08 25       	eor	r16, r8
    4ba4:	c3 52       	subi	r28, 0x23	; 35
    4ba6:	df 4f       	sbci	r29, 0xFF	; 255
    4ba8:	18 81       	ld	r17, Y
    4baa:	cd 5d       	subi	r28, 0xDD	; 221
    4bac:	d0 40       	sbci	r29, 0x00	; 0
    4bae:	1b 27       	eor	r17, r27
    4bb0:	8a 27       	eor	r24, r26
    4bb2:	9f 27       	eor	r25, r31
    4bb4:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4bb8:	a9 2c       	mov	r10, r9
    4bba:	c5 53       	subi	r28, 0x35	; 53
    4bbc:	df 4f       	sbci	r29, 0xFF	; 255
    4bbe:	b8 80       	ld	r11, Y
    4bc0:	cb 5c       	subi	r28, 0xCB	; 203
    4bc2:	d0 40       	sbci	r29, 0x00	; 0
    4bc4:	c3 53       	subi	r28, 0x33	; 51
    4bc6:	df 4f       	sbci	r29, 0xFF	; 255
    4bc8:	c8 80       	ld	r12, Y
    4bca:	cd 5c       	subi	r28, 0xCD	; 205
    4bcc:	d0 40       	sbci	r29, 0x00	; 0
    4bce:	c2 53       	subi	r28, 0x32	; 50
    4bd0:	df 4f       	sbci	r29, 0xFF	; 255
    4bd2:	d8 80       	ld	r13, Y
    4bd4:	ce 5c       	subi	r28, 0xCE	; 206
    4bd6:	d0 40       	sbci	r29, 0x00	; 0
    4bd8:	c1 53       	subi	r28, 0x31	; 49
    4bda:	df 4f       	sbci	r29, 0xFF	; 255
    4bdc:	e8 80       	ld	r14, Y
    4bde:	cf 5c       	subi	r28, 0xCF	; 207
    4be0:	d0 40       	sbci	r29, 0x00	; 0
    4be2:	c0 53       	subi	r28, 0x30	; 48
    4be4:	df 4f       	sbci	r29, 0xFF	; 255
    4be6:	f8 80       	ld	r15, Y
    4be8:	c0 5d       	subi	r28, 0xD0	; 208
    4bea:	d0 40       	sbci	r29, 0x00	; 0
    4bec:	cf 52       	subi	r28, 0x2F	; 47
    4bee:	df 4f       	sbci	r29, 0xFF	; 255
    4bf0:	08 81       	ld	r16, Y
    4bf2:	c1 5d       	subi	r28, 0xD1	; 209
    4bf4:	d0 40       	sbci	r29, 0x00	; 0
    4bf6:	ce 52       	subi	r28, 0x2E	; 46
    4bf8:	df 4f       	sbci	r29, 0xFF	; 255
    4bfa:	18 81       	ld	r17, Y
    4bfc:	c2 5d       	subi	r28, 0xD2	; 210
    4bfe:	d0 40       	sbci	r29, 0x00	; 0
    4c00:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <__adddi3>
    4c04:	c3 52       	subi	r28, 0x23	; 35
    4c06:	df 4f       	sbci	r29, 0xFF	; 255
    4c08:	28 83       	st	Y, r18
    4c0a:	cd 5d       	subi	r28, 0xDD	; 221
    4c0c:	d0 40       	sbci	r29, 0x00	; 0
    4c0e:	c2 52       	subi	r28, 0x22	; 34
    4c10:	df 4f       	sbci	r29, 0xFF	; 255
    4c12:	38 83       	st	Y, r19
    4c14:	ce 5d       	subi	r28, 0xDE	; 222
    4c16:	d0 40       	sbci	r29, 0x00	; 0
    4c18:	c1 52       	subi	r28, 0x21	; 33
    4c1a:	df 4f       	sbci	r29, 0xFF	; 255
    4c1c:	48 83       	st	Y, r20
    4c1e:	cf 5d       	subi	r28, 0xDF	; 223
    4c20:	d0 40       	sbci	r29, 0x00	; 0
    4c22:	c0 52       	subi	r28, 0x20	; 32
    4c24:	df 4f       	sbci	r29, 0xFF	; 255
    4c26:	58 83       	st	Y, r21
    4c28:	c0 5e       	subi	r28, 0xE0	; 224
    4c2a:	d0 40       	sbci	r29, 0x00	; 0
    4c2c:	cf 51       	subi	r28, 0x1F	; 31
    4c2e:	df 4f       	sbci	r29, 0xFF	; 255
    4c30:	68 83       	st	Y, r22
    4c32:	c1 5e       	subi	r28, 0xE1	; 225
    4c34:	d0 40       	sbci	r29, 0x00	; 0
    4c36:	ce 51       	subi	r28, 0x1E	; 30
    4c38:	df 4f       	sbci	r29, 0xFF	; 255
    4c3a:	78 83       	st	Y, r23
    4c3c:	c2 5e       	subi	r28, 0xE2	; 226
    4c3e:	d0 40       	sbci	r29, 0x00	; 0
    4c40:	cd 51       	subi	r28, 0x1D	; 29
    4c42:	df 4f       	sbci	r29, 0xFF	; 255
    4c44:	88 83       	st	Y, r24
    4c46:	c3 5e       	subi	r28, 0xE3	; 227
    4c48:	d0 40       	sbci	r29, 0x00	; 0
    4c4a:	cc 51       	subi	r28, 0x1C	; 28
    4c4c:	df 4f       	sbci	r29, 0xFF	; 255
    4c4e:	98 83       	st	Y, r25
    4c50:	c4 5e       	subi	r28, 0xE4	; 228
    4c52:	d0 40       	sbci	r29, 0x00	; 0
    4c54:	d2 01       	movw	r26, r4
    4c56:	2c 93       	st	X, r18
    4c58:	11 96       	adiw	r26, 0x01	; 1
    4c5a:	3c 93       	st	X, r19
    4c5c:	11 97       	sbiw	r26, 0x01	; 1
    4c5e:	12 96       	adiw	r26, 0x02	; 2
    4c60:	4c 93       	st	X, r20
    4c62:	12 97       	sbiw	r26, 0x02	; 2
    4c64:	13 96       	adiw	r26, 0x03	; 3
    4c66:	5c 93       	st	X, r21
    4c68:	13 97       	sbiw	r26, 0x03	; 3
    4c6a:	14 96       	adiw	r26, 0x04	; 4
    4c6c:	6c 93       	st	X, r22
    4c6e:	14 97       	sbiw	r26, 0x04	; 4
    4c70:	15 96       	adiw	r26, 0x05	; 5
    4c72:	7c 93       	st	X, r23
    4c74:	15 97       	sbiw	r26, 0x05	; 5
    4c76:	cd 51       	subi	r28, 0x1D	; 29
    4c78:	df 4f       	sbci	r29, 0xFF	; 255
    4c7a:	f8 81       	ld	r31, Y
    4c7c:	c3 5e       	subi	r28, 0xE3	; 227
    4c7e:	d0 40       	sbci	r29, 0x00	; 0
    4c80:	16 96       	adiw	r26, 0x06	; 6
    4c82:	fc 93       	st	X, r31
    4c84:	16 97       	sbiw	r26, 0x06	; 6
    4c86:	cc 51       	subi	r28, 0x1C	; 28
    4c88:	df 4f       	sbci	r29, 0xFF	; 255
    4c8a:	18 81       	ld	r17, Y
    4c8c:	c4 5e       	subi	r28, 0xE4	; 228
    4c8e:	d0 40       	sbci	r29, 0x00	; 0
    4c90:	17 96       	adiw	r26, 0x07	; 7
    4c92:	1c 93       	st	X, r17
    4c94:	17 97       	sbiw	r26, 0x07	; 7
		a[4] += t1;
    4c96:	29 2d       	mov	r18, r9
    4c98:	3b 2d       	mov	r19, r11
    4c9a:	a6 01       	movw	r20, r12
    4c9c:	b7 01       	movw	r22, r14
    4c9e:	80 2f       	mov	r24, r16
    4ca0:	ce 52       	subi	r28, 0x2E	; 46
    4ca2:	df 4f       	sbci	r29, 0xFF	; 255
    4ca4:	98 81       	ld	r25, Y
    4ca6:	c2 5d       	subi	r28, 0xD2	; 210
    4ca8:	d0 40       	sbci	r29, 0x00	; 0
    4caa:	90 96       	adiw	r26, 0x20	; 32
    4cac:	ac 90       	ld	r10, X
    4cae:	90 97       	sbiw	r26, 0x20	; 32
    4cb0:	91 96       	adiw	r26, 0x21	; 33
    4cb2:	bc 90       	ld	r11, X
    4cb4:	91 97       	sbiw	r26, 0x21	; 33
    4cb6:	92 96       	adiw	r26, 0x22	; 34
    4cb8:	cc 90       	ld	r12, X
    4cba:	92 97       	sbiw	r26, 0x22	; 34
    4cbc:	93 96       	adiw	r26, 0x23	; 35
    4cbe:	dc 90       	ld	r13, X
    4cc0:	93 97       	sbiw	r26, 0x23	; 35
    4cc2:	94 96       	adiw	r26, 0x24	; 36
    4cc4:	ec 90       	ld	r14, X
    4cc6:	94 97       	sbiw	r26, 0x24	; 36
    4cc8:	95 96       	adiw	r26, 0x25	; 37
    4cca:	fc 90       	ld	r15, X
    4ccc:	95 97       	sbiw	r26, 0x25	; 37
    4cce:	96 96       	adiw	r26, 0x26	; 38
    4cd0:	0c 91       	ld	r16, X
    4cd2:	96 97       	sbiw	r26, 0x26	; 38
    4cd4:	97 96       	adiw	r26, 0x27	; 39
    4cd6:	1c 91       	ld	r17, X
    4cd8:	97 97       	sbiw	r26, 0x27	; 39
    4cda:	d9 d7       	rcall	.+4018   	; 0x5c8e <__adddi3>
    4cdc:	c7 53       	subi	r28, 0x37	; 55
    4cde:	df 4f       	sbci	r29, 0xFF	; 255
    4ce0:	28 83       	st	Y, r18
    4ce2:	c9 5c       	subi	r28, 0xC9	; 201
    4ce4:	d0 40       	sbci	r29, 0x00	; 0
    4ce6:	c5 53       	subi	r28, 0x35	; 53
    4ce8:	df 4f       	sbci	r29, 0xFF	; 255
    4cea:	38 83       	st	Y, r19
    4cec:	cb 5c       	subi	r28, 0xCB	; 203
    4cee:	d0 40       	sbci	r29, 0x00	; 0
    4cf0:	c3 53       	subi	r28, 0x33	; 51
    4cf2:	df 4f       	sbci	r29, 0xFF	; 255
    4cf4:	48 83       	st	Y, r20
    4cf6:	cd 5c       	subi	r28, 0xCD	; 205
    4cf8:	d0 40       	sbci	r29, 0x00	; 0
    4cfa:	c2 53       	subi	r28, 0x32	; 50
    4cfc:	df 4f       	sbci	r29, 0xFF	; 255
    4cfe:	58 83       	st	Y, r21
    4d00:	ce 5c       	subi	r28, 0xCE	; 206
    4d02:	d0 40       	sbci	r29, 0x00	; 0
    4d04:	c1 53       	subi	r28, 0x31	; 49
    4d06:	df 4f       	sbci	r29, 0xFF	; 255
    4d08:	68 83       	st	Y, r22
    4d0a:	cf 5c       	subi	r28, 0xCF	; 207
    4d0c:	d0 40       	sbci	r29, 0x00	; 0
    4d0e:	27 2e       	mov	r2, r23
    4d10:	c0 53       	subi	r28, 0x30	; 48
    4d12:	df 4f       	sbci	r29, 0xFF	; 255
    4d14:	88 83       	st	Y, r24
    4d16:	c0 5d       	subi	r28, 0xD0	; 208
    4d18:	d0 40       	sbci	r29, 0x00	; 0
    4d1a:	cf 52       	subi	r28, 0x2F	; 47
    4d1c:	df 4f       	sbci	r29, 0xFF	; 255
    4d1e:	98 83       	st	Y, r25
    4d20:	c1 5d       	subi	r28, 0xD1	; 209
    4d22:	d0 40       	sbci	r29, 0x00	; 0
    4d24:	90 96       	adiw	r26, 0x20	; 32
    4d26:	2c 93       	st	X, r18
    4d28:	90 97       	sbiw	r26, 0x20	; 32
    4d2a:	91 96       	adiw	r26, 0x21	; 33
    4d2c:	3c 93       	st	X, r19
    4d2e:	91 97       	sbiw	r26, 0x21	; 33
    4d30:	92 96       	adiw	r26, 0x22	; 34
    4d32:	4c 93       	st	X, r20
    4d34:	92 97       	sbiw	r26, 0x22	; 34
    4d36:	93 96       	adiw	r26, 0x23	; 35
    4d38:	5c 93       	st	X, r21
    4d3a:	93 97       	sbiw	r26, 0x23	; 35
    4d3c:	94 96       	adiw	r26, 0x24	; 36
    4d3e:	6c 93       	st	X, r22
    4d40:	94 97       	sbiw	r26, 0x24	; 36
    4d42:	95 96       	adiw	r26, 0x25	; 37
    4d44:	2c 92       	st	X, r2
    4d46:	95 97       	sbiw	r26, 0x25	; 37
    4d48:	c0 53       	subi	r28, 0x30	; 48
    4d4a:	df 4f       	sbci	r29, 0xFF	; 255
    4d4c:	88 81       	ld	r24, Y
    4d4e:	c0 5d       	subi	r28, 0xD0	; 208
    4d50:	d0 40       	sbci	r29, 0x00	; 0
    4d52:	96 96       	adiw	r26, 0x26	; 38
    4d54:	8c 93       	st	X, r24
    4d56:	96 97       	sbiw	r26, 0x26	; 38
    4d58:	cf 52       	subi	r28, 0x2F	; 47
    4d5a:	df 4f       	sbci	r29, 0xFF	; 255
    4d5c:	98 81       	ld	r25, Y
    4d5e:	c1 5d       	subi	r28, 0xD1	; 209
    4d60:	d0 40       	sbci	r29, 0x00	; 0
    4d62:	97 96       	adiw	r26, 0x27	; 39
    4d64:	9c 93       	st	X, r25
	do{
		w[16-i] = change_endian64(*((const uint64_t*)block));
		block = (uint8_t*)block + 8;
	}while(--i);
	memcpy(a, ctx->h, 8*8);
	for(i=0; i<80; ++i){
    4d66:	c9 51       	subi	r28, 0x19	; 25
    4d68:	df 4f       	sbci	r29, 0xFF	; 255
    4d6a:	a8 81       	ld	r26, Y
    4d6c:	c7 5e       	subi	r28, 0xE7	; 231
    4d6e:	d0 40       	sbci	r29, 0x00	; 0
    4d70:	af 5f       	subi	r26, 0xFF	; 255
    4d72:	c9 51       	subi	r28, 0x19	; 25
    4d74:	df 4f       	sbci	r29, 0xFF	; 255
    4d76:	a8 83       	st	Y, r26
    4d78:	c7 5e       	subi	r28, 0xE7	; 231
    4d7a:	d0 40       	sbci	r29, 0x00	; 0
    4d7c:	cb 51       	subi	r28, 0x1B	; 27
    4d7e:	df 4f       	sbci	r29, 0xFF	; 255
    4d80:	e8 81       	ld	r30, Y
    4d82:	f9 81       	ldd	r31, Y+1	; 0x01
    4d84:	c5 5e       	subi	r28, 0xE5	; 229
    4d86:	d0 40       	sbci	r29, 0x00	; 0
    4d88:	38 96       	adiw	r30, 0x08	; 8
    4d8a:	cb 51       	subi	r28, 0x1B	; 27
    4d8c:	df 4f       	sbci	r29, 0xFF	; 255
    4d8e:	f9 83       	std	Y+1, r31	; 0x01
    4d90:	e8 83       	st	Y, r30
    4d92:	c5 5e       	subi	r28, 0xE5	; 229
    4d94:	d0 40       	sbci	r29, 0x00	; 0
    4d96:	c8 51       	subi	r28, 0x18	; 24
    4d98:	df 4f       	sbci	r29, 0xFF	; 255
    4d9a:	88 81       	ld	r24, Y
    4d9c:	99 81       	ldd	r25, Y+1	; 0x01
    4d9e:	c8 5e       	subi	r28, 0xE8	; 232
    4da0:	d0 40       	sbci	r29, 0x00	; 0
    4da2:	08 96       	adiw	r24, 0x08	; 8
    4da4:	c8 51       	subi	r28, 0x18	; 24
    4da6:	df 4f       	sbci	r29, 0xFF	; 255
    4da8:	99 83       	std	Y+1, r25	; 0x01
    4daa:	88 83       	st	Y, r24
    4dac:	c8 5e       	subi	r28, 0xE8	; 232
    4dae:	d0 40       	sbci	r29, 0x00	; 0
    4db0:	a0 35       	cpi	r26, 0x50	; 80
    4db2:	09 f4       	brne	.+2      	; 0x4db6 <sha2_large_common_nextBlock+0x107a>
    4db4:	6c c0       	rjmp	.+216    	; 0x4e8e <sha2_large_common_nextBlock+0x1152>
		if(i<16){
    4db6:	c9 51       	subi	r28, 0x19	; 25
    4db8:	df 4f       	sbci	r29, 0xFF	; 255
    4dba:	98 81       	ld	r25, Y
    4dbc:	c7 5e       	subi	r28, 0xE7	; 231
    4dbe:	d0 40       	sbci	r29, 0x00	; 0
    4dc0:	90 31       	cpi	r25, 0x10	; 16
    4dc2:	08 f0       	brcs	.+2      	; 0x4dc6 <sha2_large_common_nextBlock+0x108a>
    4dc4:	fe c8       	rjmp	.-3588   	; 0x3fc2 <sha2_large_common_nextBlock+0x286>
			wx=w[i];
    4dc6:	cb 51       	subi	r28, 0x1B	; 27
    4dc8:	df 4f       	sbci	r29, 0xFF	; 255
    4dca:	a8 81       	ld	r26, Y
    4dcc:	b9 81       	ldd	r27, Y+1	; 0x01
    4dce:	c5 5e       	subi	r28, 0xE5	; 229
    4dd0:	d0 40       	sbci	r29, 0x00	; 0
    4dd2:	bc 91       	ld	r27, X
    4dd4:	ce 52       	subi	r28, 0x2E	; 46
    4dd6:	df 4f       	sbci	r29, 0xFF	; 255
    4dd8:	b8 83       	st	Y, r27
    4dda:	c2 5d       	subi	r28, 0xD2	; 210
    4ddc:	d0 40       	sbci	r29, 0x00	; 0
    4dde:	cb 51       	subi	r28, 0x1B	; 27
    4de0:	df 4f       	sbci	r29, 0xFF	; 255
    4de2:	e8 81       	ld	r30, Y
    4de4:	f9 81       	ldd	r31, Y+1	; 0x01
    4de6:	c5 5e       	subi	r28, 0xE5	; 229
    4de8:	d0 40       	sbci	r29, 0x00	; 0
    4dea:	f1 81       	ldd	r31, Z+1	; 0x01
    4dec:	cd 52       	subi	r28, 0x2D	; 45
    4dee:	df 4f       	sbci	r29, 0xFF	; 255
    4df0:	f8 83       	st	Y, r31
    4df2:	c3 5d       	subi	r28, 0xD3	; 211
    4df4:	d0 40       	sbci	r29, 0x00	; 0
    4df6:	cb 51       	subi	r28, 0x1B	; 27
    4df8:	df 4f       	sbci	r29, 0xFF	; 255
    4dfa:	a8 81       	ld	r26, Y
    4dfc:	b9 81       	ldd	r27, Y+1	; 0x01
    4dfe:	c5 5e       	subi	r28, 0xE5	; 229
    4e00:	d0 40       	sbci	r29, 0x00	; 0
    4e02:	12 96       	adiw	r26, 0x02	; 2
    4e04:	bc 91       	ld	r27, X
    4e06:	cc 52       	subi	r28, 0x2C	; 44
    4e08:	df 4f       	sbci	r29, 0xFF	; 255
    4e0a:	b8 83       	st	Y, r27
    4e0c:	c4 5d       	subi	r28, 0xD4	; 212
    4e0e:	d0 40       	sbci	r29, 0x00	; 0
    4e10:	cb 51       	subi	r28, 0x1B	; 27
    4e12:	df 4f       	sbci	r29, 0xFF	; 255
    4e14:	e8 81       	ld	r30, Y
    4e16:	f9 81       	ldd	r31, Y+1	; 0x01
    4e18:	c5 5e       	subi	r28, 0xE5	; 229
    4e1a:	d0 40       	sbci	r29, 0x00	; 0
    4e1c:	f3 81       	ldd	r31, Z+3	; 0x03
    4e1e:	cb 52       	subi	r28, 0x2B	; 43
    4e20:	df 4f       	sbci	r29, 0xFF	; 255
    4e22:	f8 83       	st	Y, r31
    4e24:	c5 5d       	subi	r28, 0xD5	; 213
    4e26:	d0 40       	sbci	r29, 0x00	; 0
    4e28:	cb 51       	subi	r28, 0x1B	; 27
    4e2a:	df 4f       	sbci	r29, 0xFF	; 255
    4e2c:	a8 81       	ld	r26, Y
    4e2e:	b9 81       	ldd	r27, Y+1	; 0x01
    4e30:	c5 5e       	subi	r28, 0xE5	; 229
    4e32:	d0 40       	sbci	r29, 0x00	; 0
    4e34:	14 96       	adiw	r26, 0x04	; 4
    4e36:	bc 91       	ld	r27, X
    4e38:	ca 52       	subi	r28, 0x2A	; 42
    4e3a:	df 4f       	sbci	r29, 0xFF	; 255
    4e3c:	b8 83       	st	Y, r27
    4e3e:	c6 5d       	subi	r28, 0xD6	; 214
    4e40:	d0 40       	sbci	r29, 0x00	; 0
    4e42:	cb 51       	subi	r28, 0x1B	; 27
    4e44:	df 4f       	sbci	r29, 0xFF	; 255
    4e46:	e8 81       	ld	r30, Y
    4e48:	f9 81       	ldd	r31, Y+1	; 0x01
    4e4a:	c5 5e       	subi	r28, 0xE5	; 229
    4e4c:	d0 40       	sbci	r29, 0x00	; 0
    4e4e:	f5 81       	ldd	r31, Z+5	; 0x05
    4e50:	c9 52       	subi	r28, 0x29	; 41
    4e52:	df 4f       	sbci	r29, 0xFF	; 255
    4e54:	f8 83       	st	Y, r31
    4e56:	c7 5d       	subi	r28, 0xD7	; 215
    4e58:	d0 40       	sbci	r29, 0x00	; 0
    4e5a:	cb 51       	subi	r28, 0x1B	; 27
    4e5c:	df 4f       	sbci	r29, 0xFF	; 255
    4e5e:	a8 81       	ld	r26, Y
    4e60:	b9 81       	ldd	r27, Y+1	; 0x01
    4e62:	c5 5e       	subi	r28, 0xE5	; 229
    4e64:	d0 40       	sbci	r29, 0x00	; 0
    4e66:	16 96       	adiw	r26, 0x06	; 6
    4e68:	bc 91       	ld	r27, X
    4e6a:	c8 52       	subi	r28, 0x28	; 40
    4e6c:	df 4f       	sbci	r29, 0xFF	; 255
    4e6e:	b8 83       	st	Y, r27
    4e70:	c8 5d       	subi	r28, 0xD8	; 216
    4e72:	d0 40       	sbci	r29, 0x00	; 0
    4e74:	cb 51       	subi	r28, 0x1B	; 27
    4e76:	df 4f       	sbci	r29, 0xFF	; 255
    4e78:	e8 81       	ld	r30, Y
    4e7a:	f9 81       	ldd	r31, Y+1	; 0x01
    4e7c:	c5 5e       	subi	r28, 0xE5	; 229
    4e7e:	d0 40       	sbci	r29, 0x00	; 0
    4e80:	f7 81       	ldd	r31, Z+7	; 0x07
    4e82:	c7 52       	subi	r28, 0x27	; 39
    4e84:	df 4f       	sbci	r29, 0xFF	; 255
    4e86:	f8 83       	st	Y, r31
    4e88:	c9 5d       	subi	r28, 0xD9	; 217
    4e8a:	d0 40       	sbci	r29, 0x00	; 0
    4e8c:	a7 ca       	rjmp	.-2738   	; 0x43dc <sha2_large_common_nextBlock+0x6a0>
    4e8e:	97 e0       	ldi	r25, 0x07	; 7
    4e90:	99 2e       	mov	r9, r25
    4e92:	79 2c       	mov	r7, r9
    4e94:	cf 50       	subi	r28, 0x0F	; 15
    4e96:	df 4f       	sbci	r29, 0xFF	; 255
    4e98:	88 80       	ld	r8, Y
    4e9a:	99 80       	ldd	r9, Y+1	; 0x01
    4e9c:	c1 5f       	subi	r28, 0xF1	; 241
    4e9e:	d0 40       	sbci	r29, 0x00	; 0
    4ea0:	a7 2d       	mov	r26, r7
    4ea2:	b0 e0       	ldi	r27, 0x00	; 0
    4ea4:	aa 0f       	add	r26, r26
    4ea6:	bb 1f       	adc	r27, r27
    4ea8:	aa 0f       	add	r26, r26
    4eaa:	bb 1f       	adc	r27, r27
    4eac:	aa 0f       	add	r26, r26
    4eae:	bb 1f       	adc	r27, r27
    4eb0:	f4 01       	movw	r30, r8
    4eb2:	ea 0f       	add	r30, r26
    4eb4:	fb 1f       	adc	r31, r27
		a[0] = t1 + t2;
		a[4] += t1;
	}
	i=7;
	do{
		ctx->h[i] += a[i];
    4eb6:	a4 0d       	add	r26, r4
    4eb8:	b5 1d       	adc	r27, r5
    4eba:	20 81       	ld	r18, Z
    4ebc:	31 81       	ldd	r19, Z+1	; 0x01
    4ebe:	42 81       	ldd	r20, Z+2	; 0x02
    4ec0:	53 81       	ldd	r21, Z+3	; 0x03
    4ec2:	64 81       	ldd	r22, Z+4	; 0x04
    4ec4:	75 81       	ldd	r23, Z+5	; 0x05
    4ec6:	86 81       	ldd	r24, Z+6	; 0x06
    4ec8:	97 81       	ldd	r25, Z+7	; 0x07
    4eca:	ac 90       	ld	r10, X
    4ecc:	11 96       	adiw	r26, 0x01	; 1
    4ece:	bc 90       	ld	r11, X
    4ed0:	11 97       	sbiw	r26, 0x01	; 1
    4ed2:	12 96       	adiw	r26, 0x02	; 2
    4ed4:	cc 90       	ld	r12, X
    4ed6:	12 97       	sbiw	r26, 0x02	; 2
    4ed8:	13 96       	adiw	r26, 0x03	; 3
    4eda:	dc 90       	ld	r13, X
    4edc:	13 97       	sbiw	r26, 0x03	; 3
    4ede:	14 96       	adiw	r26, 0x04	; 4
    4ee0:	ec 90       	ld	r14, X
    4ee2:	14 97       	sbiw	r26, 0x04	; 4
    4ee4:	15 96       	adiw	r26, 0x05	; 5
    4ee6:	fc 90       	ld	r15, X
    4ee8:	15 97       	sbiw	r26, 0x05	; 5
    4eea:	16 96       	adiw	r26, 0x06	; 6
    4eec:	0c 91       	ld	r16, X
    4eee:	16 97       	sbiw	r26, 0x06	; 6
    4ef0:	17 96       	adiw	r26, 0x07	; 7
    4ef2:	1c 91       	ld	r17, X
    4ef4:	cc d6       	rcall	.+3480   	; 0x5c8e <__adddi3>
    4ef6:	20 83       	st	Z, r18
    4ef8:	31 83       	std	Z+1, r19	; 0x01
    4efa:	42 83       	std	Z+2, r20	; 0x02
    4efc:	53 83       	std	Z+3, r21	; 0x03
    4efe:	64 83       	std	Z+4, r22	; 0x04
    4f00:	75 83       	std	Z+5, r23	; 0x05
    4f02:	86 83       	std	Z+6, r24	; 0x06
    4f04:	97 83       	std	Z+7, r25	; 0x07
	}while(i--);
    4f06:	7a 94       	dec	r7
    4f08:	9f ef       	ldi	r25, 0xFF	; 255
    4f0a:	79 12       	cpse	r7, r25
    4f0c:	c9 cf       	rjmp	.-110    	; 0x4ea0 <sha2_large_common_nextBlock+0x1164>
	ctx->length += 1;
    4f0e:	cf 50       	subi	r28, 0x0F	; 15
    4f10:	df 4f       	sbci	r29, 0xFF	; 255
    4f12:	e8 81       	ld	r30, Y
    4f14:	f9 81       	ldd	r31, Y+1	; 0x01
    4f16:	c1 5f       	subi	r28, 0xF1	; 241
    4f18:	d0 40       	sbci	r29, 0x00	; 0
    4f1a:	e0 5c       	subi	r30, 0xC0	; 192
    4f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f1e:	80 81       	ld	r24, Z
    4f20:	91 81       	ldd	r25, Z+1	; 0x01
    4f22:	a2 81       	ldd	r26, Z+2	; 0x02
    4f24:	b3 81       	ldd	r27, Z+3	; 0x03
    4f26:	01 96       	adiw	r24, 0x01	; 1
    4f28:	a1 1d       	adc	r26, r1
    4f2a:	b1 1d       	adc	r27, r1
    4f2c:	80 83       	st	Z, r24
    4f2e:	91 83       	std	Z+1, r25	; 0x01
    4f30:	a2 83       	std	Z+2, r26	; 0x02
    4f32:	b3 83       	std	Z+3, r27	; 0x03
}
    4f34:	ce 50       	subi	r28, 0x0E	; 14
    4f36:	df 4f       	sbci	r29, 0xFF	; 255
    4f38:	0f b6       	in	r0, 0x3f	; 63
    4f3a:	f8 94       	cli
    4f3c:	de bf       	out	0x3e, r29	; 62
    4f3e:	0f be       	out	0x3f, r0	; 63
    4f40:	cd bf       	out	0x3d, r28	; 61
    4f42:	df 91       	pop	r29
    4f44:	cf 91       	pop	r28
    4f46:	1f 91       	pop	r17
    4f48:	0f 91       	pop	r16
    4f4a:	ff 90       	pop	r15
    4f4c:	ef 90       	pop	r14
    4f4e:	df 90       	pop	r13
    4f50:	cf 90       	pop	r12
    4f52:	bf 90       	pop	r11
    4f54:	af 90       	pop	r10
    4f56:	9f 90       	pop	r9
    4f58:	8f 90       	pop	r8
    4f5a:	7f 90       	pop	r7
    4f5c:	6f 90       	pop	r6
    4f5e:	5f 90       	pop	r5
    4f60:	4f 90       	pop	r4
    4f62:	3f 90       	pop	r3
    4f64:	2f 90       	pop	r2
    4f66:	08 95       	ret

00004f68 <sha2_large_common_lastBlock>:

void sha2_large_common_lastBlock(sha2_large_common_ctx_t *ctx, const void *block, uint16_t length_b){
    4f68:	2f 92       	push	r2
    4f6a:	3f 92       	push	r3
    4f6c:	4f 92       	push	r4
    4f6e:	5f 92       	push	r5
    4f70:	6f 92       	push	r6
    4f72:	7f 92       	push	r7
    4f74:	8f 92       	push	r8
    4f76:	9f 92       	push	r9
    4f78:	af 92       	push	r10
    4f7a:	bf 92       	push	r11
    4f7c:	cf 92       	push	r12
    4f7e:	df 92       	push	r13
    4f80:	ef 92       	push	r14
    4f82:	ff 92       	push	r15
    4f84:	0f 93       	push	r16
    4f86:	1f 93       	push	r17
    4f88:	cf 93       	push	r28
    4f8a:	df 93       	push	r29
    4f8c:	cd b7       	in	r28, 0x3d	; 61
    4f8e:	de b7       	in	r29, 0x3e	; 62
    4f90:	cb 58       	subi	r28, 0x8B	; 139
    4f92:	d1 09       	sbc	r29, r1
    4f94:	0f b6       	in	r0, 0x3f	; 63
    4f96:	f8 94       	cli
    4f98:	de bf       	out	0x3e, r29	; 62
    4f9a:	0f be       	out	0x3f, r0	; 63
    4f9c:	cd bf       	out	0x3d, r28	; 61
    4f9e:	c6 57       	subi	r28, 0x76	; 118
    4fa0:	df 4f       	sbci	r29, 0xFF	; 255
    4fa2:	99 83       	std	Y+1, r25	; 0x01
    4fa4:	88 83       	st	Y, r24
    4fa6:	ca 58       	subi	r28, 0x8A	; 138
    4fa8:	d0 40       	sbci	r29, 0x00	; 0
    4faa:	c8 57       	subi	r28, 0x78	; 120
    4fac:	df 4f       	sbci	r29, 0xFF	; 255
    4fae:	79 83       	std	Y+1, r23	; 0x01
    4fb0:	68 83       	st	Y, r22
    4fb2:	c8 58       	subi	r28, 0x88	; 136
    4fb4:	d0 40       	sbci	r29, 0x00	; 0
    4fb6:	ca 57       	subi	r28, 0x7A	; 122
    4fb8:	df 4f       	sbci	r29, 0xFF	; 255
    4fba:	59 83       	std	Y+1, r21	; 0x01
    4fbc:	48 83       	st	Y, r20
    4fbe:	c6 58       	subi	r28, 0x86	; 134
    4fc0:	d0 40       	sbci	r29, 0x00	; 0
	while(length_b >= 1024){
    4fc2:	41 15       	cp	r20, r1
    4fc4:	24 e0       	ldi	r18, 0x04	; 4
    4fc6:	52 07       	cpc	r21, r18
    4fc8:	d8 f1       	brcs	.+118    	; 0x5040 <sha2_large_common_lastBlock+0xd8>
    4fca:	7a 01       	movw	r14, r20
    4fcc:	8b 01       	movw	r16, r22
    4fce:	6c 01       	movw	r12, r24
		sha2_large_common_nextBlock(ctx, block);
    4fd0:	b8 01       	movw	r22, r16
    4fd2:	c6 01       	movw	r24, r12
    4fd4:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <sha2_large_common_nextBlock>
		block = (uint8_t*)block + 1024/8;
    4fd8:	00 58       	subi	r16, 0x80	; 128
    4fda:	1f 4f       	sbci	r17, 0xFF	; 255
		length_b -= 1024;
    4fdc:	34 e0       	ldi	r19, 0x04	; 4
    4fde:	f3 1a       	sub	r15, r19
	}while(i--);
	ctx->length += 1;
}

void sha2_large_common_lastBlock(sha2_large_common_ctx_t *ctx, const void *block, uint16_t length_b){
	while(length_b >= 1024){
    4fe0:	e1 14       	cp	r14, r1
    4fe2:	84 e0       	ldi	r24, 0x04	; 4
    4fe4:	f8 06       	cpc	r15, r24
    4fe6:	a0 f7       	brcc	.-24     	; 0x4fd0 <sha2_large_common_lastBlock+0x68>
    4fe8:	ca 57       	subi	r28, 0x7A	; 122
    4fea:	df 4f       	sbci	r29, 0xFF	; 255
    4fec:	88 81       	ld	r24, Y
    4fee:	99 81       	ldd	r25, Y+1	; 0x01
    4ff0:	c6 58       	subi	r28, 0x86	; 134
    4ff2:	d0 40       	sbci	r29, 0x00	; 0
    4ff4:	94 50       	subi	r25, 0x04	; 4
    4ff6:	89 2f       	mov	r24, r25
    4ff8:	99 27       	eor	r25, r25
    4ffa:	86 95       	lsr	r24
    4ffc:	86 95       	lsr	r24
    4ffe:	01 96       	adiw	r24, 0x01	; 1
    5000:	96 95       	lsr	r25
    5002:	98 2f       	mov	r25, r24
    5004:	88 27       	eor	r24, r24
    5006:	97 95       	ror	r25
    5008:	87 95       	ror	r24
    500a:	c8 57       	subi	r28, 0x78	; 120
    500c:	df 4f       	sbci	r29, 0xFF	; 255
    500e:	e8 81       	ld	r30, Y
    5010:	f9 81       	ldd	r31, Y+1	; 0x01
    5012:	c8 58       	subi	r28, 0x88	; 136
    5014:	d0 40       	sbci	r29, 0x00	; 0
    5016:	e8 0f       	add	r30, r24
    5018:	f9 1f       	adc	r31, r25
    501a:	c8 57       	subi	r28, 0x78	; 120
    501c:	df 4f       	sbci	r29, 0xFF	; 255
    501e:	f9 83       	std	Y+1, r31	; 0x01
    5020:	e8 83       	st	Y, r30
    5022:	c8 58       	subi	r28, 0x88	; 136
    5024:	d0 40       	sbci	r29, 0x00	; 0
    5026:	ca 57       	subi	r28, 0x7A	; 122
    5028:	df 4f       	sbci	r29, 0xFF	; 255
    502a:	28 81       	ld	r18, Y
    502c:	39 81       	ldd	r19, Y+1	; 0x01
    502e:	c6 58       	subi	r28, 0x86	; 134
    5030:	d0 40       	sbci	r29, 0x00	; 0
    5032:	33 70       	andi	r19, 0x03	; 3
    5034:	ca 57       	subi	r28, 0x7A	; 122
    5036:	df 4f       	sbci	r29, 0xFF	; 255
    5038:	39 83       	std	Y+1, r19	; 0x01
    503a:	28 83       	st	Y, r18
    503c:	c6 58       	subi	r28, 0x86	; 134
    503e:	d0 40       	sbci	r29, 0x00	; 0
		block = (uint8_t*)block + 1024/8;
		length_b -= 1024;
	}
	uint8_t buffer[1024/8];
	uint64_t len;
	len = ((uint64_t)ctx->length)*1024LL + length_b;
    5040:	c6 57       	subi	r28, 0x76	; 118
    5042:	df 4f       	sbci	r29, 0xFF	; 255
    5044:	e8 81       	ld	r30, Y
    5046:	f9 81       	ldd	r31, Y+1	; 0x01
    5048:	ca 58       	subi	r28, 0x8A	; 138
    504a:	d0 40       	sbci	r29, 0x00	; 0
    504c:	e0 5c       	subi	r30, 0xC0	; 192
    504e:	ff 4f       	sbci	r31, 0xFF	; 255
    5050:	80 80       	ld	r8, Z
    5052:	91 80       	ldd	r9, Z+1	; 0x01
    5054:	a2 80       	ldd	r10, Z+2	; 0x02
    5056:	b3 80       	ldd	r11, Z+3	; 0x03
    5058:	94 01       	movw	r18, r8
    505a:	a5 01       	movw	r20, r10
    505c:	60 e0       	ldi	r22, 0x00	; 0
    505e:	70 e0       	ldi	r23, 0x00	; 0
    5060:	80 e0       	ldi	r24, 0x00	; 0
    5062:	90 e0       	ldi	r25, 0x00	; 0
    5064:	0a e0       	ldi	r16, 0x0A	; 10
    5066:	c1 d5       	rcall	.+2946   	; 0x5bea <__ashldi3>
    5068:	ca 57       	subi	r28, 0x7A	; 122
    506a:	df 4f       	sbci	r29, 0xFF	; 255
    506c:	e8 81       	ld	r30, Y
    506e:	f9 81       	ldd	r31, Y+1	; 0x01
    5070:	c6 58       	subi	r28, 0x86	; 134
    5072:	d0 40       	sbci	r29, 0x00	; 0
    5074:	5f 01       	movw	r10, r30
    5076:	c1 2c       	mov	r12, r1
    5078:	d1 2c       	mov	r13, r1
    507a:	e1 2c       	mov	r14, r1
    507c:	f1 2c       	mov	r15, r1
    507e:	00 e0       	ldi	r16, 0x00	; 0
    5080:	10 e0       	ldi	r17, 0x00	; 0
    5082:	05 d6       	rcall	.+3082   	; 0x5c8e <__adddi3>
    5084:	e2 2f       	mov	r30, r18
    5086:	cc 57       	subi	r28, 0x7C	; 124
    5088:	df 4f       	sbci	r29, 0xFF	; 255
    508a:	38 83       	st	Y, r19
    508c:	c4 58       	subi	r28, 0x84	; 132
    508e:	d0 40       	sbci	r29, 0x00	; 0
    5090:	14 2f       	mov	r17, r20
    5092:	b5 2f       	mov	r27, r21
    5094:	a6 2f       	mov	r26, r22
    5096:	cb 57       	subi	r28, 0x7B	; 123
    5098:	df 4f       	sbci	r29, 0xFF	; 255
    509a:	78 83       	st	Y, r23
    509c:	c5 58       	subi	r28, 0x85	; 133
    509e:	d0 40       	sbci	r29, 0x00	; 0
    50a0:	1c 01       	movw	r2, r24
    50a2:	f8 e0       	ldi	r31, 0x08	; 8
};


static const
uint64_t change_endian64(uint64_t x){
	uint64_t r=0;
    50a4:	41 2c       	mov	r4, r1
    50a6:	51 2c       	mov	r5, r1
    50a8:	61 2c       	mov	r6, r1
    50aa:	71 2c       	mov	r7, r1
    50ac:	81 2c       	mov	r8, r1
    50ae:	91 2c       	mov	r9, r1
    50b0:	a1 2c       	mov	r10, r1
	uint8_t i=8;
	do{
		r <<= 8;
    50b2:	2f 2d       	mov	r18, r15
    50b4:	34 2d       	mov	r19, r4
    50b6:	45 2d       	mov	r20, r5
    50b8:	56 2d       	mov	r21, r6
    50ba:	67 2d       	mov	r22, r7
    50bc:	78 2d       	mov	r23, r8
    50be:	89 2d       	mov	r24, r9
    50c0:	9a 2d       	mov	r25, r10
    50c2:	08 e0       	ldi	r16, 0x08	; 8
    50c4:	92 d5       	rcall	.+2852   	; 0x5bea <__ashldi3>
    50c6:	cf 57       	subi	r28, 0x7F	; 127
    50c8:	df 4f       	sbci	r29, 0xFF	; 255
    50ca:	38 83       	st	Y, r19
    50cc:	c1 58       	subi	r28, 0x81	; 129
    50ce:	d0 40       	sbci	r29, 0x00	; 0
    50d0:	b4 2e       	mov	r11, r20
    50d2:	c5 2e       	mov	r12, r21
    50d4:	d6 2e       	mov	r13, r22
    50d6:	e7 2e       	mov	r14, r23
    50d8:	ce 57       	subi	r28, 0x7E	; 126
    50da:	df 4f       	sbci	r29, 0xFF	; 255
    50dc:	88 83       	st	Y, r24
    50de:	c2 58       	subi	r28, 0x82	; 130
    50e0:	d0 40       	sbci	r29, 0x00	; 0
    50e2:	cd 57       	subi	r28, 0x7D	; 125
    50e4:	df 4f       	sbci	r29, 0xFF	; 255
    50e6:	98 83       	st	Y, r25
    50e8:	c3 58       	subi	r28, 0x83	; 131
    50ea:	d0 40       	sbci	r29, 0x00	; 0
		r |= 0xff&x;
    50ec:	f2 2e       	mov	r15, r18
    50ee:	fe 2a       	or	r15, r30
    50f0:	43 2e       	mov	r4, r19
    50f2:	54 2e       	mov	r5, r20
    50f4:	36 01       	movw	r6, r12
    50f6:	87 2e       	mov	r8, r23
    50f8:	98 2e       	mov	r9, r24
    50fa:	a9 2e       	mov	r10, r25
		x >>=8;
    50fc:	2e 2f       	mov	r18, r30
    50fe:	cc 57       	subi	r28, 0x7C	; 124
    5100:	df 4f       	sbci	r29, 0xFF	; 255
    5102:	38 81       	ld	r19, Y
    5104:	c4 58       	subi	r28, 0x84	; 132
    5106:	d0 40       	sbci	r29, 0x00	; 0
    5108:	41 2f       	mov	r20, r17
    510a:	5b 2f       	mov	r21, r27
    510c:	6a 2f       	mov	r22, r26
    510e:	cb 57       	subi	r28, 0x7B	; 123
    5110:	df 4f       	sbci	r29, 0xFF	; 255
    5112:	78 81       	ld	r23, Y
    5114:	c5 58       	subi	r28, 0x85	; 133
    5116:	d0 40       	sbci	r29, 0x00	; 0
    5118:	c1 01       	movw	r24, r2
    511a:	82 d5       	rcall	.+2820   	; 0x5c20 <__lshrdi3>
    511c:	e2 2f       	mov	r30, r18
    511e:	cc 57       	subi	r28, 0x7C	; 124
    5120:	df 4f       	sbci	r29, 0xFF	; 255
    5122:	38 83       	st	Y, r19
    5124:	c4 58       	subi	r28, 0x84	; 132
    5126:	d0 40       	sbci	r29, 0x00	; 0
    5128:	14 2f       	mov	r17, r20
    512a:	b5 2f       	mov	r27, r21
    512c:	a6 2f       	mov	r26, r22
    512e:	cb 57       	subi	r28, 0x7B	; 123
    5130:	df 4f       	sbci	r29, 0xFF	; 255
    5132:	78 83       	st	Y, r23
    5134:	c5 58       	subi	r28, 0x85	; 133
    5136:	d0 40       	sbci	r29, 0x00	; 0
    5138:	1c 01       	movw	r2, r24
    513a:	f1 50       	subi	r31, 0x01	; 1
	}while(--i);
    513c:	09 f0       	breq	.+2      	; 0x5140 <sha2_large_common_lastBlock+0x1d8>
    513e:	b9 cf       	rjmp	.-142    	; 0x50b2 <sha2_large_common_lastBlock+0x14a>
	}
	uint8_t buffer[1024/8];
	uint64_t len;
	len = ((uint64_t)ctx->length)*1024LL + length_b;
	len = change_endian64(len);
	memset(buffer, 0, 1024/8);
    5140:	8e 01       	movw	r16, r28
    5142:	0f 5f       	subi	r16, 0xFF	; 255
    5144:	1f 4f       	sbci	r17, 0xFF	; 255
    5146:	80 e8       	ldi	r24, 0x80	; 128
    5148:	f8 01       	movw	r30, r16
    514a:	11 92       	st	Z+, r1
    514c:	8a 95       	dec	r24
    514e:	e9 f7       	brne	.-6      	; 0x514a <sha2_large_common_lastBlock+0x1e2>
	memcpy(buffer, block, (length_b+7)/8);
    5150:	ca 57       	subi	r28, 0x7A	; 122
    5152:	df 4f       	sbci	r29, 0xFF	; 255
    5154:	48 81       	ld	r20, Y
    5156:	59 81       	ldd	r21, Y+1	; 0x01
    5158:	c6 58       	subi	r28, 0x86	; 134
    515a:	d0 40       	sbci	r29, 0x00	; 0
    515c:	49 5f       	subi	r20, 0xF9	; 249
    515e:	5f 4f       	sbci	r21, 0xFF	; 255
    5160:	56 95       	lsr	r21
    5162:	47 95       	ror	r20
    5164:	56 95       	lsr	r21
    5166:	47 95       	ror	r20
    5168:	56 95       	lsr	r21
    516a:	47 95       	ror	r20
    516c:	c8 57       	subi	r28, 0x78	; 120
    516e:	df 4f       	sbci	r29, 0xFF	; 255
    5170:	68 81       	ld	r22, Y
    5172:	79 81       	ldd	r23, Y+1	; 0x01
    5174:	c8 58       	subi	r28, 0x88	; 136
    5176:	d0 40       	sbci	r29, 0x00	; 0
    5178:	c8 01       	movw	r24, r16
    517a:	f0 d5       	rcall	.+3040   	; 0x5d5c <memcpy>
	buffer[length_b/8] |= 0x80>>(length_b%8);
    517c:	ca 57       	subi	r28, 0x7A	; 122
    517e:	df 4f       	sbci	r29, 0xFF	; 255
    5180:	e8 81       	ld	r30, Y
    5182:	f9 81       	ldd	r31, Y+1	; 0x01
    5184:	c6 58       	subi	r28, 0x86	; 134
    5186:	d0 40       	sbci	r29, 0x00	; 0
    5188:	f6 95       	lsr	r31
    518a:	e7 95       	ror	r30
    518c:	f6 95       	lsr	r31
    518e:	e7 95       	ror	r30
    5190:	f6 95       	lsr	r31
    5192:	e7 95       	ror	r30
    5194:	e0 0f       	add	r30, r16
    5196:	f1 1f       	adc	r31, r17
    5198:	ca 57       	subi	r28, 0x7A	; 122
    519a:	df 4f       	sbci	r29, 0xFF	; 255
    519c:	28 81       	ld	r18, Y
    519e:	39 81       	ldd	r19, Y+1	; 0x01
    51a0:	c6 58       	subi	r28, 0x86	; 134
    51a2:	d0 40       	sbci	r29, 0x00	; 0
    51a4:	27 70       	andi	r18, 0x07	; 7
    51a6:	33 27       	eor	r19, r19
    51a8:	80 e8       	ldi	r24, 0x80	; 128
    51aa:	90 e0       	ldi	r25, 0x00	; 0
    51ac:	02 c0       	rjmp	.+4      	; 0x51b2 <sha2_large_common_lastBlock+0x24a>
    51ae:	95 95       	asr	r25
    51b0:	87 95       	ror	r24
    51b2:	2a 95       	dec	r18
    51b4:	e2 f7       	brpl	.-8      	; 0x51ae <sha2_large_common_lastBlock+0x246>
    51b6:	90 81       	ld	r25, Z
    51b8:	89 2b       	or	r24, r25
    51ba:	80 83       	st	Z, r24
	if(length_b>1024-128-1){
    51bc:	ca 57       	subi	r28, 0x7A	; 122
    51be:	df 4f       	sbci	r29, 0xFF	; 255
    51c0:	28 81       	ld	r18, Y
    51c2:	39 81       	ldd	r19, Y+1	; 0x01
    51c4:	c6 58       	subi	r28, 0x86	; 134
    51c6:	d0 40       	sbci	r29, 0x00	; 0
    51c8:	20 38       	cpi	r18, 0x80	; 128
    51ca:	33 40       	sbci	r19, 0x03	; 3
    51cc:	70 f0       	brcs	.+28     	; 0x51ea <sha2_large_common_lastBlock+0x282>
		/* length goes into the next block */
		sha2_large_common_nextBlock(ctx, buffer);
    51ce:	b8 01       	movw	r22, r16
    51d0:	c6 57       	subi	r28, 0x76	; 118
    51d2:	df 4f       	sbci	r29, 0xFF	; 255
    51d4:	88 81       	ld	r24, Y
    51d6:	99 81       	ldd	r25, Y+1	; 0x01
    51d8:	ca 58       	subi	r28, 0x8A	; 138
    51da:	d0 40       	sbci	r29, 0x00	; 0
    51dc:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <sha2_large_common_nextBlock>
		memset(buffer, 0, 120);
    51e0:	88 e7       	ldi	r24, 0x78	; 120
    51e2:	f8 01       	movw	r30, r16
    51e4:	11 92       	st	Z+, r1
    51e6:	8a 95       	dec	r24
    51e8:	e9 f7       	brne	.-6      	; 0x51e4 <sha2_large_common_lastBlock+0x27c>
	}
	memcpy(&(buffer[128-8]), &len, 8);
    51ea:	ea 96       	adiw	r28, 0x3a	; 58
    51ec:	ff ae       	std	Y+63, r15	; 0x3f
    51ee:	ea 97       	sbiw	r28, 0x3a	; 58
    51f0:	cf 57       	subi	r28, 0x7F	; 127
    51f2:	df 4f       	sbci	r29, 0xFF	; 255
    51f4:	f8 81       	ld	r31, Y
    51f6:	c1 58       	subi	r28, 0x81	; 129
    51f8:	d0 40       	sbci	r29, 0x00	; 0
    51fa:	eb 96       	adiw	r28, 0x3b	; 59
    51fc:	ff af       	std	Y+63, r31	; 0x3f
    51fe:	eb 97       	sbiw	r28, 0x3b	; 59
    5200:	ec 96       	adiw	r28, 0x3c	; 60
    5202:	bf ae       	std	Y+63, r11	; 0x3f
    5204:	ec 97       	sbiw	r28, 0x3c	; 60
    5206:	ed 96       	adiw	r28, 0x3d	; 61
    5208:	cf ae       	std	Y+63, r12	; 0x3f
    520a:	ed 97       	sbiw	r28, 0x3d	; 61
    520c:	ee 96       	adiw	r28, 0x3e	; 62
    520e:	df ae       	std	Y+63, r13	; 0x3f
    5210:	ee 97       	sbiw	r28, 0x3e	; 62
    5212:	ef 96       	adiw	r28, 0x3f	; 63
    5214:	ef ae       	std	Y+63, r14	; 0x3f
    5216:	ef 97       	sbiw	r28, 0x3f	; 63
    5218:	ce 57       	subi	r28, 0x7E	; 126
    521a:	df 4f       	sbci	r29, 0xFF	; 255
    521c:	28 81       	ld	r18, Y
    521e:	c2 58       	subi	r28, 0x82	; 130
    5220:	d0 40       	sbci	r29, 0x00	; 0
    5222:	c1 58       	subi	r28, 0x81	; 129
    5224:	df 4f       	sbci	r29, 0xFF	; 255
    5226:	28 83       	st	Y, r18
    5228:	cf 57       	subi	r28, 0x7F	; 127
    522a:	d0 40       	sbci	r29, 0x00	; 0
    522c:	cd 57       	subi	r28, 0x7D	; 125
    522e:	df 4f       	sbci	r29, 0xFF	; 255
    5230:	38 81       	ld	r19, Y
    5232:	c3 58       	subi	r28, 0x83	; 131
    5234:	d0 40       	sbci	r29, 0x00	; 0
    5236:	c0 58       	subi	r28, 0x80	; 128
    5238:	df 4f       	sbci	r29, 0xFF	; 255
    523a:	38 83       	st	Y, r19
    523c:	c0 58       	subi	r28, 0x80	; 128
    523e:	d0 40       	sbci	r29, 0x00	; 0
	sha2_large_common_nextBlock(ctx, buffer);
    5240:	b8 01       	movw	r22, r16
    5242:	c6 57       	subi	r28, 0x76	; 118
    5244:	df 4f       	sbci	r29, 0xFF	; 255
    5246:	88 81       	ld	r24, Y
    5248:	99 81       	ldd	r25, Y+1	; 0x01
    524a:	ca 58       	subi	r28, 0x8A	; 138
    524c:	d0 40       	sbci	r29, 0x00	; 0
    524e:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <sha2_large_common_nextBlock>
}
    5252:	c5 57       	subi	r28, 0x75	; 117
    5254:	df 4f       	sbci	r29, 0xFF	; 255
    5256:	0f b6       	in	r0, 0x3f	; 63
    5258:	f8 94       	cli
    525a:	de bf       	out	0x3e, r29	; 62
    525c:	0f be       	out	0x3f, r0	; 63
    525e:	cd bf       	out	0x3d, r28	; 61
    5260:	df 91       	pop	r29
    5262:	cf 91       	pop	r28
    5264:	1f 91       	pop	r17
    5266:	0f 91       	pop	r16
    5268:	ff 90       	pop	r15
    526a:	ef 90       	pop	r14
    526c:	df 90       	pop	r13
    526e:	cf 90       	pop	r12
    5270:	bf 90       	pop	r11
    5272:	af 90       	pop	r10
    5274:	9f 90       	pop	r9
    5276:	8f 90       	pop	r8
    5278:	7f 90       	pop	r7
    527a:	6f 90       	pop	r6
    527c:	5f 90       	pop	r5
    527e:	4f 90       	pop	r4
    5280:	3f 90       	pop	r3
    5282:	2f 90       	pop	r2
    5284:	08 95       	ret

00005286 <sha2_small_common_nextBlock>:


/**
 * block must be, 512, Bit = 64, Byte, long !!!
 */
void sha2_small_common_nextBlock (sha2_small_common_ctx_t *state, const void *block){
    5286:	2f 92       	push	r2
    5288:	3f 92       	push	r3
    528a:	4f 92       	push	r4
    528c:	5f 92       	push	r5
    528e:	6f 92       	push	r6
    5290:	7f 92       	push	r7
    5292:	8f 92       	push	r8
    5294:	9f 92       	push	r9
    5296:	af 92       	push	r10
    5298:	bf 92       	push	r11
    529a:	cf 92       	push	r12
    529c:	df 92       	push	r13
    529e:	ef 92       	push	r14
    52a0:	ff 92       	push	r15
    52a2:	0f 93       	push	r16
    52a4:	1f 93       	push	r17
    52a6:	cf 93       	push	r28
    52a8:	df 93       	push	r29
    52aa:	cd b7       	in	r28, 0x3d	; 61
    52ac:	de b7       	in	r29, 0x3e	; 62
    52ae:	c2 57       	subi	r28, 0x72	; 114
    52b0:	d1 09       	sbc	r29, r1
    52b2:	0f b6       	in	r0, 0x3f	; 63
    52b4:	f8 94       	cli
    52b6:	de bf       	out	0x3e, r29	; 62
    52b8:	0f be       	out	0x3f, r0	; 63
    52ba:	cd bf       	out	0x3d, r28	; 61
    52bc:	e3 96       	adiw	r28, 0x33	; 51
    52be:	9f af       	std	Y+63, r25	; 0x3f
    52c0:	8e af       	std	Y+62, r24	; 0x3e
    52c2:	e3 97       	sbiw	r28, 0x33	; 51
    52c4:	db 01       	movw	r26, r22
    52c6:	8e 01       	movw	r16, r28
    52c8:	0f 5f       	subi	r16, 0xFF	; 255
    52ca:	1f 4f       	sbci	r17, 0xFF	; 255
    52cc:	af 96       	adiw	r28, 0x2f	; 47
    52ce:	1f af       	std	Y+63, r17	; 0x3f
    52d0:	0e af       	std	Y+62, r16	; 0x3e
    52d2:	af 97       	sbiw	r28, 0x2f	; 47
    52d4:	1e 01       	movw	r2, r28
    52d6:	11 e4       	ldi	r17, 0x41	; 65
    52d8:	21 0e       	add	r2, r17
    52da:	31 1c       	adc	r3, r1
    52dc:	fe 01       	movw	r30, r28
    52de:	31 96       	adiw	r30, 0x01	; 1
    52e0:	6d 91       	ld	r22, X+
    52e2:	7d 91       	ld	r23, X+
    52e4:	8d 91       	ld	r24, X+
    52e6:	9d 91       	ld	r25, X+
    52e8:	79 d4       	rcall	.+2290   	; 0x5bdc <__bswapsi2>
	uint32_t a[8],t1,t2;

	/* init w */
#if defined LITTLE_ENDIAN
	for (i=0; i<16; ++i){
		w[i]= change_endian32(((uint32_t*)block)[i]);
    52ea:	61 93       	st	Z+, r22
    52ec:	71 93       	st	Z+, r23
    52ee:	81 93       	st	Z+, r24
    52f0:	91 93       	st	Z+, r25
	uint8_t  i;
	uint32_t a[8],t1,t2;

	/* init w */
#if defined LITTLE_ENDIAN
	for (i=0; i<16; ++i){
    52f2:	e2 15       	cp	r30, r2
    52f4:	f3 05       	cpc	r31, r3
    52f6:	a1 f7       	brne	.-24     	; 0x52e0 <sha2_small_common_nextBlock+0x5a>
	for (i=16; i<64; ++i){
		w[i] = SIGMA_b(w[i-2]) + w[i-7] + SIGMA_a(w[i-15]) + w[i-16];
	}
*/
/* init working variables */
	memcpy((void*)a,(void*)(state->h), 8*4);
    52f8:	80 e2       	ldi	r24, 0x20	; 32
    52fa:	e3 96       	adiw	r28, 0x33	; 51
    52fc:	ee ad       	ldd	r30, Y+62	; 0x3e
    52fe:	ff ad       	ldd	r31, Y+63	; 0x3f
    5300:	e3 97       	sbiw	r28, 0x33	; 51
    5302:	de 01       	movw	r26, r28
    5304:	af 5b       	subi	r26, 0xBF	; 191
    5306:	bf 4f       	sbci	r27, 0xFF	; 255
    5308:	01 90       	ld	r0, Z+
    530a:	0d 92       	st	X+, r0
    530c:	8a 95       	dec	r24
    530e:	e1 f7       	brne	.-8      	; 0x5308 <sha2_small_common_nextBlock+0x82>
    5310:	d1 01       	movw	r26, r2
    5312:	50 96       	adiw	r26, 0x10	; 16
    5314:	4d 90       	ld	r4, X+
    5316:	5d 90       	ld	r5, X+
    5318:	6d 90       	ld	r6, X+
    531a:	7c 90       	ld	r7, X
    531c:	53 97       	sbiw	r26, 0x13	; 19
    531e:	f1 01       	movw	r30, r2
    5320:	81 90       	ld	r8, Z+
    5322:	91 90       	ld	r9, Z+
    5324:	a1 90       	ld	r10, Z+
    5326:	b1 90       	ld	r11, Z+
    5328:	e1 96       	adiw	r28, 0x31	; 49
    532a:	ff af       	std	Y+63, r31	; 0x3f
    532c:	ee af       	std	Y+62, r30	; 0x3e
    532e:	e1 97       	sbiw	r28, 0x31	; 49
    5330:	04 e3       	ldi	r16, 0x34	; 52
    5332:	13 e0       	ldi	r17, 0x03	; 3
    5334:	ad 96       	adiw	r28, 0x2d	; 45
    5336:	1f af       	std	Y+63, r17	; 0x3f
    5338:	0e af       	std	Y+62, r16	; 0x3e
    533a:	ad 97       	sbiw	r28, 0x2d	; 45
    533c:	ab 96       	adiw	r28, 0x2b	; 43
    533e:	1f ae       	std	Y+63, r1	; 0x3f
    5340:	1e ae       	std	Y+62, r1	; 0x3e
    5342:	ab 97       	sbiw	r28, 0x2b	; 43
    5344:	53 c2       	rjmp	.+1190   	; 0x57ec <sha2_small_common_nextBlock+0x566>
/* do the, fun stuff, */
	for (i=0; i<64; ++i){
		if(i<16){
			wx = w[i];
		}else{
			wx = SIGMA_b(w[14]) + w[9] + SIGMA_a(w[1]) + w[0];
    5346:	49 ad       	ldd	r20, Y+57	; 0x39
    5348:	5a ad       	ldd	r21, Y+58	; 0x3a
    534a:	6b ad       	ldd	r22, Y+59	; 0x3b
    534c:	7c ad       	ldd	r23, Y+60	; 0x3c
    534e:	8d 81       	ldd	r24, Y+5	; 0x05
    5350:	9e 81       	ldd	r25, Y+6	; 0x06
    5352:	af 81       	ldd	r26, Y+7	; 0x07
    5354:	b8 85       	ldd	r27, Y+8	; 0x08
    5356:	6a 01       	movw	r12, r20
    5358:	7b 01       	movw	r14, r22
    535a:	fd e0       	ldi	r31, 0x0D	; 13
    535c:	cc 0c       	add	r12, r12
    535e:	dd 1c       	adc	r13, r13
    5360:	ee 1c       	adc	r14, r14
    5362:	ff 1c       	adc	r15, r15
    5364:	fa 95       	dec	r31
    5366:	d1 f7       	brne	.-12     	; 0x535c <sha2_small_common_nextBlock+0xd6>
    5368:	8a 01       	movw	r16, r20
    536a:	9b 01       	movw	r18, r22
    536c:	e3 e1       	ldi	r30, 0x13	; 19
    536e:	36 95       	lsr	r19
    5370:	27 95       	ror	r18
    5372:	17 95       	ror	r17
    5374:	07 95       	ror	r16
    5376:	ea 95       	dec	r30
    5378:	d1 f7       	brne	.-12     	; 0x536e <sha2_small_common_nextBlock+0xe8>
    537a:	c0 2a       	or	r12, r16
    537c:	d1 2a       	or	r13, r17
    537e:	e2 2a       	or	r14, r18
    5380:	f3 2a       	or	r15, r19
    5382:	a9 96       	adiw	r28, 0x29	; 41
    5384:	cc ae       	std	Y+60, r12	; 0x3c
    5386:	dd ae       	std	Y+61, r13	; 0x3d
    5388:	ee ae       	std	Y+62, r14	; 0x3e
    538a:	ff ae       	std	Y+63, r15	; 0x3f
    538c:	a9 97       	sbiw	r28, 0x29	; 41
    538e:	7a 01       	movw	r14, r20
    5390:	8b 01       	movw	r16, r22
    5392:	ff e0       	ldi	r31, 0x0F	; 15
    5394:	ee 0c       	add	r14, r14
    5396:	ff 1c       	adc	r15, r15
    5398:	00 1f       	adc	r16, r16
    539a:	11 1f       	adc	r17, r17
    539c:	fa 95       	dec	r31
    539e:	d1 f7       	brne	.-12     	; 0x5394 <sha2_small_common_nextBlock+0x10e>
    53a0:	a5 96       	adiw	r28, 0x25	; 37
    53a2:	ec ae       	std	Y+60, r14	; 0x3c
    53a4:	fd ae       	std	Y+61, r15	; 0x3d
    53a6:	0e af       	std	Y+62, r16	; 0x3e
    53a8:	1f af       	std	Y+63, r17	; 0x3f
    53aa:	a5 97       	sbiw	r28, 0x25	; 37
    53ac:	8a 01       	movw	r16, r20
    53ae:	9b 01       	movw	r18, r22
    53b0:	e1 e1       	ldi	r30, 0x11	; 17
    53b2:	36 95       	lsr	r19
    53b4:	27 95       	ror	r18
    53b6:	17 95       	ror	r17
    53b8:	07 95       	ror	r16
    53ba:	ea 95       	dec	r30
    53bc:	d1 f7       	brne	.-12     	; 0x53b2 <sha2_small_common_nextBlock+0x12c>
    53be:	a5 96       	adiw	r28, 0x25	; 37
    53c0:	cc ac       	ldd	r12, Y+60	; 0x3c
    53c2:	dd ac       	ldd	r13, Y+61	; 0x3d
    53c4:	ee ac       	ldd	r14, Y+62	; 0x3e
    53c6:	ff ac       	ldd	r15, Y+63	; 0x3f
    53c8:	a5 97       	sbiw	r28, 0x25	; 37
    53ca:	0c 29       	or	r16, r12
    53cc:	1d 29       	or	r17, r13
    53ce:	2e 29       	or	r18, r14
    53d0:	3f 29       	or	r19, r15
    53d2:	a9 96       	adiw	r28, 0x29	; 41
    53d4:	cc ac       	ldd	r12, Y+60	; 0x3c
    53d6:	dd ac       	ldd	r13, Y+61	; 0x3d
    53d8:	ee ac       	ldd	r14, Y+62	; 0x3e
    53da:	ff ac       	ldd	r15, Y+63	; 0x3f
    53dc:	a9 97       	sbiw	r28, 0x29	; 41
    53de:	0c 25       	eor	r16, r12
    53e0:	1d 25       	eor	r17, r13
    53e2:	2e 25       	eor	r18, r14
    53e4:	3f 25       	eor	r19, r15
    53e6:	fa e0       	ldi	r31, 0x0A	; 10
    53e8:	76 95       	lsr	r23
    53ea:	67 95       	ror	r22
    53ec:	57 95       	ror	r21
    53ee:	47 95       	ror	r20
    53f0:	fa 95       	dec	r31
    53f2:	d1 f7       	brne	.-12     	; 0x53e8 <sha2_small_common_nextBlock+0x162>
    53f4:	40 27       	eor	r20, r16
    53f6:	51 27       	eor	r21, r17
    53f8:	62 27       	eor	r22, r18
    53fa:	73 27       	eor	r23, r19
    53fc:	cd a0       	ldd	r12, Y+37	; 0x25
    53fe:	de a0       	ldd	r13, Y+38	; 0x26
    5400:	ef a0       	ldd	r14, Y+39	; 0x27
    5402:	f8 a4       	ldd	r15, Y+40	; 0x28
    5404:	09 81       	ldd	r16, Y+1	; 0x01
    5406:	1a 81       	ldd	r17, Y+2	; 0x02
    5408:	2b 81       	ldd	r18, Y+3	; 0x03
    540a:	3c 81       	ldd	r19, Y+4	; 0x04
    540c:	c0 0e       	add	r12, r16
    540e:	d1 1e       	adc	r13, r17
    5410:	e2 1e       	adc	r14, r18
    5412:	f3 1e       	adc	r15, r19
    5414:	c4 0e       	add	r12, r20
    5416:	d5 1e       	adc	r13, r21
    5418:	e6 1e       	adc	r14, r22
    541a:	f7 1e       	adc	r15, r23
    541c:	8c 01       	movw	r16, r24
    541e:	9d 01       	movw	r18, r26
    5420:	4e e0       	ldi	r20, 0x0E	; 14
    5422:	00 0f       	add	r16, r16
    5424:	11 1f       	adc	r17, r17
    5426:	22 1f       	adc	r18, r18
    5428:	33 1f       	adc	r19, r19
    542a:	4a 95       	dec	r20
    542c:	d1 f7       	brne	.-12     	; 0x5422 <sha2_small_common_nextBlock+0x19c>
    542e:	ac 01       	movw	r20, r24
    5430:	bd 01       	movw	r22, r26
    5432:	e2 e1       	ldi	r30, 0x12	; 18
    5434:	76 95       	lsr	r23
    5436:	67 95       	ror	r22
    5438:	57 95       	ror	r21
    543a:	47 95       	ror	r20
    543c:	ea 95       	dec	r30
    543e:	d1 f7       	brne	.-12     	; 0x5434 <sha2_small_common_nextBlock+0x1ae>
    5440:	04 2b       	or	r16, r20
    5442:	15 2b       	or	r17, r21
    5444:	26 2b       	or	r18, r22
    5446:	37 2b       	or	r19, r23
    5448:	a5 96       	adiw	r28, 0x25	; 37
    544a:	0c af       	std	Y+60, r16	; 0x3c
    544c:	1d af       	std	Y+61, r17	; 0x3d
    544e:	2e af       	std	Y+62, r18	; 0x3e
    5450:	3f af       	std	Y+63, r19	; 0x3f
    5452:	a5 97       	sbiw	r28, 0x25	; 37
    5454:	ac 01       	movw	r20, r24
    5456:	bd 01       	movw	r22, r26
    5458:	f7 e0       	ldi	r31, 0x07	; 7
    545a:	76 95       	lsr	r23
    545c:	67 95       	ror	r22
    545e:	57 95       	ror	r21
    5460:	47 95       	ror	r20
    5462:	fa 95       	dec	r31
    5464:	d1 f7       	brne	.-12     	; 0x545a <sha2_small_common_nextBlock+0x1d4>
    5466:	8c 01       	movw	r16, r24
    5468:	9d 01       	movw	r18, r26
    546a:	e9 e1       	ldi	r30, 0x19	; 25
    546c:	00 0f       	add	r16, r16
    546e:	11 1f       	adc	r17, r17
    5470:	22 1f       	adc	r18, r18
    5472:	33 1f       	adc	r19, r19
    5474:	ea 95       	dec	r30
    5476:	d1 f7       	brne	.-12     	; 0x546c <sha2_small_common_nextBlock+0x1e6>
    5478:	04 2b       	or	r16, r20
    547a:	15 2b       	or	r17, r21
    547c:	26 2b       	or	r18, r22
    547e:	37 2b       	or	r19, r23
    5480:	a5 96       	adiw	r28, 0x25	; 37
    5482:	4c ad       	ldd	r20, Y+60	; 0x3c
    5484:	5d ad       	ldd	r21, Y+61	; 0x3d
    5486:	6e ad       	ldd	r22, Y+62	; 0x3e
    5488:	7f ad       	ldd	r23, Y+63	; 0x3f
    548a:	a5 97       	sbiw	r28, 0x25	; 37
    548c:	04 27       	eor	r16, r20
    548e:	15 27       	eor	r17, r21
    5490:	26 27       	eor	r18, r22
    5492:	37 27       	eor	r19, r23
    5494:	f3 e0       	ldi	r31, 0x03	; 3
    5496:	b6 95       	lsr	r27
    5498:	a7 95       	ror	r26
    549a:	97 95       	ror	r25
    549c:	87 95       	ror	r24
    549e:	fa 95       	dec	r31
    54a0:	d1 f7       	brne	.-12     	; 0x5496 <sha2_small_common_nextBlock+0x210>
    54a2:	08 27       	eor	r16, r24
    54a4:	19 27       	eor	r17, r25
    54a6:	2a 27       	eor	r18, r26
    54a8:	3b 27       	eor	r19, r27
    54aa:	c7 01       	movw	r24, r14
    54ac:	b6 01       	movw	r22, r12
    54ae:	60 0f       	add	r22, r16
    54b0:	71 1f       	adc	r23, r17
    54b2:	82 1f       	adc	r24, r18
    54b4:	93 1f       	adc	r25, r19
    54b6:	a9 96       	adiw	r28, 0x29	; 41
    54b8:	6c af       	std	Y+60, r22	; 0x3c
    54ba:	7d af       	std	Y+61, r23	; 0x3d
    54bc:	8e af       	std	Y+62, r24	; 0x3e
    54be:	9f af       	std	Y+63, r25	; 0x3f
    54c0:	a9 97       	sbiw	r28, 0x29	; 41
			memmove(&(w[0]), &(w[1]), 15*4);
    54c2:	4c e3       	ldi	r20, 0x3C	; 60
    54c4:	50 e0       	ldi	r21, 0x00	; 0
    54c6:	be 01       	movw	r22, r28
    54c8:	6b 5f       	subi	r22, 0xFB	; 251
    54ca:	7f 4f       	sbci	r23, 0xFF	; 255
    54cc:	ce 01       	movw	r24, r28
    54ce:	01 96       	adiw	r24, 0x01	; 1
    54d0:	4e d4       	rcall	.+2204   	; 0x5d6e <memmove>
			w[15] = wx;
    54d2:	a9 96       	adiw	r28, 0x29	; 41
    54d4:	cc ac       	ldd	r12, Y+60	; 0x3c
    54d6:	dd ac       	ldd	r13, Y+61	; 0x3d
    54d8:	ee ac       	ldd	r14, Y+62	; 0x3e
    54da:	ff ac       	ldd	r15, Y+63	; 0x3f
    54dc:	a9 97       	sbiw	r28, 0x29	; 41
    54de:	21 96       	adiw	r28, 0x01	; 1
    54e0:	cc ae       	std	Y+60, r12	; 0x3c
    54e2:	dd ae       	std	Y+61, r13	; 0x3d
    54e4:	ee ae       	std	Y+62, r14	; 0x3e
    54e6:	ff ae       	std	Y+63, r15	; 0x3f
    54e8:	21 97       	sbiw	r28, 0x01	; 1
		}
		t1 = a[7] + SIGMA_1(a[4]) + CH(a[4],a[5],a[6]) + pgm_read_dword(&k[i]) + wx;
    54ea:	ad 96       	adiw	r28, 0x2d	; 45
    54ec:	ee ad       	ldd	r30, Y+62	; 0x3e
    54ee:	ff ad       	ldd	r31, Y+63	; 0x3f
    54f0:	ad 97       	sbiw	r28, 0x2d	; 45
    54f2:	e5 90       	lpm	r14, Z+
    54f4:	f5 90       	lpm	r15, Z+
    54f6:	05 91       	lpm	r16, Z+
    54f8:	14 91       	lpm	r17, Z
    54fa:	a5 96       	adiw	r28, 0x25	; 37
    54fc:	ec ae       	std	Y+60, r14	; 0x3c
    54fe:	fd ae       	std	Y+61, r15	; 0x3d
    5500:	0e af       	std	Y+62, r16	; 0x3e
    5502:	1f af       	std	Y+63, r17	; 0x3f
    5504:	a5 97       	sbiw	r28, 0x25	; 37
    5506:	b3 01       	movw	r22, r6
    5508:	a2 01       	movw	r20, r4
    550a:	40 95       	com	r20
    550c:	50 95       	com	r21
    550e:	60 95       	com	r22
    5510:	70 95       	com	r23
    5512:	f1 01       	movw	r30, r2
    5514:	80 8d       	ldd	r24, Z+24	; 0x18
    5516:	91 8d       	ldd	r25, Z+25	; 0x19
    5518:	a2 8d       	ldd	r26, Z+26	; 0x1a
    551a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    551c:	6a 01       	movw	r12, r20
    551e:	7b 01       	movw	r14, r22
    5520:	c8 22       	and	r12, r24
    5522:	d9 22       	and	r13, r25
    5524:	ea 22       	and	r14, r26
    5526:	fb 22       	and	r15, r27
    5528:	44 89       	ldd	r20, Z+20	; 0x14
    552a:	55 89       	ldd	r21, Z+21	; 0x15
    552c:	66 89       	ldd	r22, Z+22	; 0x16
    552e:	77 89       	ldd	r23, Z+23	; 0x17
    5530:	d3 01       	movw	r26, r6
    5532:	c2 01       	movw	r24, r4
    5534:	84 23       	and	r24, r20
    5536:	95 23       	and	r25, r21
    5538:	a6 23       	and	r26, r22
    553a:	b7 23       	and	r27, r23
    553c:	b7 01       	movw	r22, r14
    553e:	a6 01       	movw	r20, r12
    5540:	48 27       	eor	r20, r24
    5542:	59 27       	eor	r21, r25
    5544:	6a 27       	eor	r22, r26
    5546:	7b 27       	eor	r23, r27
    5548:	93 01       	movw	r18, r6
    554a:	82 01       	movw	r16, r4
    554c:	8b e0       	ldi	r24, 0x0B	; 11
    554e:	36 95       	lsr	r19
    5550:	27 95       	ror	r18
    5552:	17 95       	ror	r17
    5554:	07 95       	ror	r16
    5556:	8a 95       	dec	r24
    5558:	d1 f7       	brne	.-12     	; 0x554e <sha2_small_common_nextBlock+0x2c8>
    555a:	d3 01       	movw	r26, r6
    555c:	c2 01       	movw	r24, r4
    555e:	07 2e       	mov	r0, r23
    5560:	75 e1       	ldi	r23, 0x15	; 21
    5562:	88 0f       	add	r24, r24
    5564:	99 1f       	adc	r25, r25
    5566:	aa 1f       	adc	r26, r26
    5568:	bb 1f       	adc	r27, r27
    556a:	7a 95       	dec	r23
    556c:	d1 f7       	brne	.-12     	; 0x5562 <sha2_small_common_nextBlock+0x2dc>
    556e:	70 2d       	mov	r23, r0
    5570:	08 2b       	or	r16, r24
    5572:	19 2b       	or	r17, r25
    5574:	2a 2b       	or	r18, r26
    5576:	3b 2b       	or	r19, r27
    5578:	73 01       	movw	r14, r6
    557a:	62 01       	movw	r12, r4
    557c:	86 e0       	ldi	r24, 0x06	; 6
    557e:	f6 94       	lsr	r15
    5580:	e7 94       	ror	r14
    5582:	d7 94       	ror	r13
    5584:	c7 94       	ror	r12
    5586:	8a 95       	dec	r24
    5588:	d1 f7       	brne	.-12     	; 0x557e <sha2_small_common_nextBlock+0x2f8>
    558a:	d3 01       	movw	r26, r6
    558c:	c2 01       	movw	r24, r4
    558e:	07 2e       	mov	r0, r23
    5590:	7a e1       	ldi	r23, 0x1A	; 26
    5592:	88 0f       	add	r24, r24
    5594:	99 1f       	adc	r25, r25
    5596:	aa 1f       	adc	r26, r26
    5598:	bb 1f       	adc	r27, r27
    559a:	7a 95       	dec	r23
    559c:	d1 f7       	brne	.-12     	; 0x5592 <sha2_small_common_nextBlock+0x30c>
    559e:	70 2d       	mov	r23, r0
    55a0:	8c 29       	or	r24, r12
    55a2:	9d 29       	or	r25, r13
    55a4:	ae 29       	or	r26, r14
    55a6:	bf 29       	or	r27, r15
    55a8:	80 27       	eor	r24, r16
    55aa:	91 27       	eor	r25, r17
    55ac:	a2 27       	eor	r26, r18
    55ae:	b3 27       	eor	r27, r19
    55b0:	93 01       	movw	r18, r6
    55b2:	82 01       	movw	r16, r4
    55b4:	00 0f       	add	r16, r16
    55b6:	11 1f       	adc	r17, r17
    55b8:	22 1f       	adc	r18, r18
    55ba:	33 1f       	adc	r19, r19
    55bc:	00 0f       	add	r16, r16
    55be:	11 1f       	adc	r17, r17
    55c0:	22 1f       	adc	r18, r18
    55c2:	33 1f       	adc	r19, r19
    55c4:	00 0f       	add	r16, r16
    55c6:	11 1f       	adc	r17, r17
    55c8:	22 1f       	adc	r18, r18
    55ca:	33 1f       	adc	r19, r19
    55cc:	00 0f       	add	r16, r16
    55ce:	11 1f       	adc	r17, r17
    55d0:	22 1f       	adc	r18, r18
    55d2:	33 1f       	adc	r19, r19
    55d4:	00 0f       	add	r16, r16
    55d6:	11 1f       	adc	r17, r17
    55d8:	22 1f       	adc	r18, r18
    55da:	33 1f       	adc	r19, r19
    55dc:	00 0f       	add	r16, r16
    55de:	11 1f       	adc	r17, r17
    55e0:	22 1f       	adc	r18, r18
    55e2:	33 1f       	adc	r19, r19
    55e4:	00 0f       	add	r16, r16
    55e6:	11 1f       	adc	r17, r17
    55e8:	22 1f       	adc	r18, r18
    55ea:	33 1f       	adc	r19, r19
    55ec:	03 2e       	mov	r0, r19
    55ee:	39 e1       	ldi	r19, 0x19	; 25
    55f0:	76 94       	lsr	r7
    55f2:	67 94       	ror	r6
    55f4:	57 94       	ror	r5
    55f6:	47 94       	ror	r4
    55f8:	3a 95       	dec	r19
    55fa:	d1 f7       	brne	.-12     	; 0x55f0 <sha2_small_common_nextBlock+0x36a>
    55fc:	30 2d       	mov	r19, r0
    55fe:	04 29       	or	r16, r4
    5600:	15 29       	or	r17, r5
    5602:	26 29       	or	r18, r6
    5604:	37 29       	or	r19, r7
    5606:	80 27       	eor	r24, r16
    5608:	91 27       	eor	r25, r17
    560a:	a2 27       	eor	r26, r18
    560c:	b3 27       	eor	r27, r19
    560e:	48 0f       	add	r20, r24
    5610:	59 1f       	adc	r21, r25
    5612:	6a 1f       	adc	r22, r26
    5614:	7b 1f       	adc	r23, r27
    5616:	84 8d       	ldd	r24, Z+28	; 0x1c
    5618:	95 8d       	ldd	r25, Z+29	; 0x1d
    561a:	a6 8d       	ldd	r26, Z+30	; 0x1e
    561c:	b7 8d       	ldd	r27, Z+31	; 0x1f
    561e:	48 0f       	add	r20, r24
    5620:	59 1f       	adc	r21, r25
    5622:	6a 1f       	adc	r22, r26
    5624:	7b 1f       	adc	r23, r27
    5626:	a9 96       	adiw	r28, 0x29	; 41
    5628:	cc ac       	ldd	r12, Y+60	; 0x3c
    562a:	dd ac       	ldd	r13, Y+61	; 0x3d
    562c:	ee ac       	ldd	r14, Y+62	; 0x3e
    562e:	ff ac       	ldd	r15, Y+63	; 0x3f
    5630:	a9 97       	sbiw	r28, 0x29	; 41
    5632:	c4 0e       	add	r12, r20
    5634:	d5 1e       	adc	r13, r21
    5636:	e6 1e       	adc	r14, r22
    5638:	f7 1e       	adc	r15, r23
    563a:	a5 96       	adiw	r28, 0x25	; 37
    563c:	0c ad       	ldd	r16, Y+60	; 0x3c
    563e:	1d ad       	ldd	r17, Y+61	; 0x3d
    5640:	2e ad       	ldd	r18, Y+62	; 0x3e
    5642:	3f ad       	ldd	r19, Y+63	; 0x3f
    5644:	a5 97       	sbiw	r28, 0x25	; 37
    5646:	0c 0d       	add	r16, r12
    5648:	1d 1d       	adc	r17, r13
    564a:	2e 1d       	adc	r18, r14
    564c:	3f 1d       	adc	r19, r15
    564e:	a5 96       	adiw	r28, 0x25	; 37
    5650:	0c af       	std	Y+60, r16	; 0x3c
    5652:	1d af       	std	Y+61, r17	; 0x3d
    5654:	2e af       	std	Y+62, r18	; 0x3e
    5656:	3f af       	std	Y+63, r19	; 0x3f
    5658:	a5 97       	sbiw	r28, 0x25	; 37
		t2 = SIGMA_0(a[0]) + MAJ(a[0],a[1],a[2]);
    565a:	c4 80       	ldd	r12, Z+4	; 0x04
    565c:	d5 80       	ldd	r13, Z+5	; 0x05
    565e:	e6 80       	ldd	r14, Z+6	; 0x06
    5660:	f7 80       	ldd	r15, Z+7	; 0x07
    5662:	a9 96       	adiw	r28, 0x29	; 41
    5664:	cc ae       	std	Y+60, r12	; 0x3c
    5666:	dd ae       	std	Y+61, r13	; 0x3d
    5668:	ee ae       	std	Y+62, r14	; 0x3e
    566a:	ff ae       	std	Y+63, r15	; 0x3f
    566c:	a9 97       	sbiw	r28, 0x29	; 41
    566e:	c0 84       	ldd	r12, Z+8	; 0x08
    5670:	d1 84       	ldd	r13, Z+9	; 0x09
    5672:	e2 84       	ldd	r14, Z+10	; 0x0a
    5674:	f3 84       	ldd	r15, Z+11	; 0x0b
		memmove(&(a[1]), &(a[0]), 7*4); 	/* a[7]=a[6]; a[6]=a[5]; a[5]=a[4]; a[4]=a[3]; a[3]=a[2]; a[2]=a[1]; a[1]=a[0]; */
    5676:	4c e1       	ldi	r20, 0x1C	; 28
    5678:	50 e0       	ldi	r21, 0x00	; 0
    567a:	b1 01       	movw	r22, r2
    567c:	e1 96       	adiw	r28, 0x31	; 49
    567e:	8e ad       	ldd	r24, Y+62	; 0x3e
    5680:	9f ad       	ldd	r25, Y+63	; 0x3f
    5682:	e1 97       	sbiw	r28, 0x31	; 49
    5684:	74 d3       	rcall	.+1768   	; 0x5d6e <memmove>
		a[4] += t1;
    5686:	f1 01       	movw	r30, r2
    5688:	40 88       	ldd	r4, Z+16	; 0x10
    568a:	51 88       	ldd	r5, Z+17	; 0x11
    568c:	62 88       	ldd	r6, Z+18	; 0x12
    568e:	73 88       	ldd	r7, Z+19	; 0x13
    5690:	a5 96       	adiw	r28, 0x25	; 37
    5692:	0c ad       	ldd	r16, Y+60	; 0x3c
    5694:	1d ad       	ldd	r17, Y+61	; 0x3d
    5696:	2e ad       	ldd	r18, Y+62	; 0x3e
    5698:	3f ad       	ldd	r19, Y+63	; 0x3f
    569a:	a5 97       	sbiw	r28, 0x25	; 37
    569c:	40 0e       	add	r4, r16
    569e:	51 1e       	adc	r5, r17
    56a0:	62 1e       	adc	r6, r18
    56a2:	73 1e       	adc	r7, r19
    56a4:	40 8a       	std	Z+16, r4	; 0x10
    56a6:	51 8a       	std	Z+17, r5	; 0x11
    56a8:	62 8a       	std	Z+18, r6	; 0x12
    56aa:	73 8a       	std	Z+19, r7	; 0x13
		a[0] = t1 + t2;
    56ac:	b5 01       	movw	r22, r10
    56ae:	a4 01       	movw	r20, r8
    56b0:	8d e0       	ldi	r24, 0x0D	; 13
    56b2:	76 95       	lsr	r23
    56b4:	67 95       	ror	r22
    56b6:	57 95       	ror	r21
    56b8:	47 95       	ror	r20
    56ba:	8a 95       	dec	r24
    56bc:	d1 f7       	brne	.-12     	; 0x56b2 <sha2_small_common_nextBlock+0x42c>
    56be:	d5 01       	movw	r26, r10
    56c0:	c4 01       	movw	r24, r8
    56c2:	23 e1       	ldi	r18, 0x13	; 19
    56c4:	88 0f       	add	r24, r24
    56c6:	99 1f       	adc	r25, r25
    56c8:	aa 1f       	adc	r26, r26
    56ca:	bb 1f       	adc	r27, r27
    56cc:	2a 95       	dec	r18
    56ce:	d1 f7       	brne	.-12     	; 0x56c4 <sha2_small_common_nextBlock+0x43e>
    56d0:	84 2b       	or	r24, r20
    56d2:	95 2b       	or	r25, r21
    56d4:	a6 2b       	or	r26, r22
    56d6:	b7 2b       	or	r27, r23
    56d8:	b5 01       	movw	r22, r10
    56da:	a4 01       	movw	r20, r8
    56dc:	76 95       	lsr	r23
    56de:	67 95       	ror	r22
    56e0:	57 95       	ror	r21
    56e2:	47 95       	ror	r20
    56e4:	76 95       	lsr	r23
    56e6:	67 95       	ror	r22
    56e8:	57 95       	ror	r21
    56ea:	47 95       	ror	r20
    56ec:	95 01       	movw	r18, r10
    56ee:	84 01       	movw	r16, r8
    56f0:	ee e1       	ldi	r30, 0x1E	; 30
    56f2:	00 0f       	add	r16, r16
    56f4:	11 1f       	adc	r17, r17
    56f6:	22 1f       	adc	r18, r18
    56f8:	33 1f       	adc	r19, r19
    56fa:	ea 95       	dec	r30
    56fc:	d1 f7       	brne	.-12     	; 0x56f2 <sha2_small_common_nextBlock+0x46c>
    56fe:	40 2b       	or	r20, r16
    5700:	51 2b       	or	r21, r17
    5702:	62 2b       	or	r22, r18
    5704:	73 2b       	or	r23, r19
    5706:	48 27       	eor	r20, r24
    5708:	59 27       	eor	r21, r25
    570a:	6a 27       	eor	r22, r26
    570c:	7b 27       	eor	r23, r27
    570e:	95 01       	movw	r18, r10
    5710:	84 01       	movw	r16, r8
    5712:	fa e0       	ldi	r31, 0x0A	; 10
    5714:	00 0f       	add	r16, r16
    5716:	11 1f       	adc	r17, r17
    5718:	22 1f       	adc	r18, r18
    571a:	33 1f       	adc	r19, r19
    571c:	fa 95       	dec	r31
    571e:	d1 f7       	brne	.-12     	; 0x5714 <sha2_small_common_nextBlock+0x48e>
    5720:	d5 01       	movw	r26, r10
    5722:	c4 01       	movw	r24, r8
    5724:	e6 e1       	ldi	r30, 0x16	; 22
    5726:	b6 95       	lsr	r27
    5728:	a7 95       	ror	r26
    572a:	97 95       	ror	r25
    572c:	87 95       	ror	r24
    572e:	ea 95       	dec	r30
    5730:	d1 f7       	brne	.-12     	; 0x5726 <sha2_small_common_nextBlock+0x4a0>
    5732:	80 2b       	or	r24, r16
    5734:	91 2b       	or	r25, r17
    5736:	a2 2b       	or	r26, r18
    5738:	b3 2b       	or	r27, r19
    573a:	48 27       	eor	r20, r24
    573c:	59 27       	eor	r21, r25
    573e:	6a 27       	eor	r22, r26
    5740:	7b 27       	eor	r23, r27
    5742:	a9 96       	adiw	r28, 0x29	; 41
    5744:	8c ad       	ldd	r24, Y+60	; 0x3c
    5746:	9d ad       	ldd	r25, Y+61	; 0x3d
    5748:	ae ad       	ldd	r26, Y+62	; 0x3e
    574a:	bf ad       	ldd	r27, Y+63	; 0x3f
    574c:	a9 97       	sbiw	r28, 0x29	; 41
    574e:	8c 25       	eor	r24, r12
    5750:	9d 25       	eor	r25, r13
    5752:	ae 25       	eor	r26, r14
    5754:	bf 25       	eor	r27, r15
    5756:	88 21       	and	r24, r8
    5758:	99 21       	and	r25, r9
    575a:	aa 21       	and	r26, r10
    575c:	bb 21       	and	r27, r11
    575e:	a9 96       	adiw	r28, 0x29	; 41
    5760:	0c ad       	ldd	r16, Y+60	; 0x3c
    5762:	1d ad       	ldd	r17, Y+61	; 0x3d
    5764:	2e ad       	ldd	r18, Y+62	; 0x3e
    5766:	3f ad       	ldd	r19, Y+63	; 0x3f
    5768:	a9 97       	sbiw	r28, 0x29	; 41
    576a:	c0 22       	and	r12, r16
    576c:	d1 22       	and	r13, r17
    576e:	e2 22       	and	r14, r18
    5770:	f3 22       	and	r15, r19
    5772:	c8 26       	eor	r12, r24
    5774:	d9 26       	eor	r13, r25
    5776:	ea 26       	eor	r14, r26
    5778:	fb 26       	eor	r15, r27
    577a:	4c 0d       	add	r20, r12
    577c:	5d 1d       	adc	r21, r13
    577e:	6e 1d       	adc	r22, r14
    5780:	7f 1d       	adc	r23, r15
    5782:	a5 96       	adiw	r28, 0x25	; 37
    5784:	8c ac       	ldd	r8, Y+60	; 0x3c
    5786:	9d ac       	ldd	r9, Y+61	; 0x3d
    5788:	ae ac       	ldd	r10, Y+62	; 0x3e
    578a:	bf ac       	ldd	r11, Y+63	; 0x3f
    578c:	a5 97       	sbiw	r28, 0x25	; 37
    578e:	84 0e       	add	r8, r20
    5790:	95 1e       	adc	r9, r21
    5792:	a6 1e       	adc	r10, r22
    5794:	b7 1e       	adc	r11, r23
    5796:	d1 01       	movw	r26, r2
    5798:	8d 92       	st	X+, r8
    579a:	9d 92       	st	X+, r9
    579c:	ad 92       	st	X+, r10
    579e:	bc 92       	st	X, r11
    57a0:	13 97       	sbiw	r26, 0x03	; 3
    57a2:	ab 96       	adiw	r28, 0x2b	; 43
    57a4:	0e ad       	ldd	r16, Y+62	; 0x3e
    57a6:	1f ad       	ldd	r17, Y+63	; 0x3f
    57a8:	ab 97       	sbiw	r28, 0x2b	; 43
    57aa:	0f 5f       	subi	r16, 0xFF	; 255
    57ac:	1f 4f       	sbci	r17, 0xFF	; 255
    57ae:	ab 96       	adiw	r28, 0x2b	; 43
    57b0:	1f af       	std	Y+63, r17	; 0x3f
    57b2:	0e af       	std	Y+62, r16	; 0x3e
    57b4:	ab 97       	sbiw	r28, 0x2b	; 43
    57b6:	ad 96       	adiw	r28, 0x2d	; 45
    57b8:	0e ad       	ldd	r16, Y+62	; 0x3e
    57ba:	1f ad       	ldd	r17, Y+63	; 0x3f
    57bc:	ad 97       	sbiw	r28, 0x2d	; 45
    57be:	0c 5f       	subi	r16, 0xFC	; 252
    57c0:	1f 4f       	sbci	r17, 0xFF	; 255
    57c2:	ad 96       	adiw	r28, 0x2d	; 45
    57c4:	1f af       	std	Y+63, r17	; 0x3f
    57c6:	0e af       	std	Y+62, r16	; 0x3e
    57c8:	ad 97       	sbiw	r28, 0x2d	; 45
    57ca:	af 96       	adiw	r28, 0x2f	; 47
    57cc:	0e ad       	ldd	r16, Y+62	; 0x3e
    57ce:	1f ad       	ldd	r17, Y+63	; 0x3f
    57d0:	af 97       	sbiw	r28, 0x2f	; 47
    57d2:	0c 5f       	subi	r16, 0xFC	; 252
    57d4:	1f 4f       	sbci	r17, 0xFF	; 255
    57d6:	af 96       	adiw	r28, 0x2f	; 47
    57d8:	1f af       	std	Y+63, r17	; 0x3f
    57da:	0e af       	std	Y+62, r16	; 0x3e
    57dc:	af 97       	sbiw	r28, 0x2f	; 47
*/
/* init working variables */
	memcpy((void*)a,(void*)(state->h), 8*4);

/* do the, fun stuff, */
	for (i=0; i<64; ++i){
    57de:	ab 96       	adiw	r28, 0x2b	; 43
    57e0:	0e ad       	ldd	r16, Y+62	; 0x3e
    57e2:	1f ad       	ldd	r17, Y+63	; 0x3f
    57e4:	ab 97       	sbiw	r28, 0x2b	; 43
    57e6:	00 34       	cpi	r16, 0x40	; 64
    57e8:	11 05       	cpc	r17, r1
    57ea:	a9 f0       	breq	.+42     	; 0x5816 <sha2_small_common_nextBlock+0x590>
		if(i<16){
    57ec:	aa 96       	adiw	r28, 0x2a	; 42
    57ee:	1f ad       	ldd	r17, Y+63	; 0x3f
    57f0:	aa 97       	sbiw	r28, 0x2a	; 42
    57f2:	10 31       	cpi	r17, 0x10	; 16
    57f4:	08 f0       	brcs	.+2      	; 0x57f8 <sha2_small_common_nextBlock+0x572>
    57f6:	a7 cd       	rjmp	.-1202   	; 0x5346 <sha2_small_common_nextBlock+0xc0>
			wx = w[i];
    57f8:	af 96       	adiw	r28, 0x2f	; 47
    57fa:	ae ad       	ldd	r26, Y+62	; 0x3e
    57fc:	bf ad       	ldd	r27, Y+63	; 0x3f
    57fe:	af 97       	sbiw	r28, 0x2f	; 47
    5800:	cd 90       	ld	r12, X+
    5802:	dd 90       	ld	r13, X+
    5804:	ed 90       	ld	r14, X+
    5806:	fc 90       	ld	r15, X
    5808:	a9 96       	adiw	r28, 0x29	; 41
    580a:	cc ae       	std	Y+60, r12	; 0x3c
    580c:	dd ae       	std	Y+61, r13	; 0x3d
    580e:	ee ae       	std	Y+62, r14	; 0x3e
    5810:	ff ae       	std	Y+63, r15	; 0x3f
    5812:	a9 97       	sbiw	r28, 0x29	; 41
    5814:	6a ce       	rjmp	.-812    	; 0x54ea <sha2_small_common_nextBlock+0x264>
    5816:	e3 96       	adiw	r28, 0x33	; 51
    5818:	ee ad       	ldd	r30, Y+62	; 0x3e
    581a:	ff ad       	ldd	r31, Y+63	; 0x3f
    581c:	e3 97       	sbiw	r28, 0x33	; 51
    581e:	e1 96       	adiw	r28, 0x31	; 49
    5820:	2e ad       	ldd	r18, Y+62	; 0x3e
    5822:	3f ad       	ldd	r19, Y+63	; 0x3f
    5824:	e1 97       	sbiw	r28, 0x31	; 49
    5826:	10 e2       	ldi	r17, 0x20	; 32
    5828:	21 0e       	add	r2, r17
    582a:	31 1c       	adc	r3, r1
    582c:	8f 01       	movw	r16, r30
    582e:	d5 01       	movw	r26, r10
    5830:	c4 01       	movw	r24, r8
    5832:	06 c0       	rjmp	.+12     	; 0x5840 <sha2_small_common_nextBlock+0x5ba>
    5834:	f9 01       	movw	r30, r18
    5836:	81 91       	ld	r24, Z+
    5838:	91 91       	ld	r25, Z+
    583a:	a1 91       	ld	r26, Z+
    583c:	b1 91       	ld	r27, Z+
    583e:	9f 01       	movw	r18, r30
		a[0] = t1 + t2;
	}

/* update, the, state, */
	for (i=0; i<8; ++i){
		state->h[i] += a[i];
    5840:	f8 01       	movw	r30, r16
    5842:	40 81       	ld	r20, Z
    5844:	51 81       	ldd	r21, Z+1	; 0x01
    5846:	62 81       	ldd	r22, Z+2	; 0x02
    5848:	73 81       	ldd	r23, Z+3	; 0x03
    584a:	84 0f       	add	r24, r20
    584c:	95 1f       	adc	r25, r21
    584e:	a6 1f       	adc	r26, r22
    5850:	b7 1f       	adc	r27, r23
    5852:	81 93       	st	Z+, r24
    5854:	91 93       	st	Z+, r25
    5856:	a1 93       	st	Z+, r26
    5858:	b1 93       	st	Z+, r27
    585a:	8f 01       	movw	r16, r30
		a[4] += t1;
		a[0] = t1 + t2;
	}

/* update, the, state, */
	for (i=0; i<8; ++i){
    585c:	22 16       	cp	r2, r18
    585e:	33 06       	cpc	r3, r19
    5860:	49 f7       	brne	.-46     	; 0x5834 <sha2_small_common_nextBlock+0x5ae>
		state->h[i] += a[i];
	}
	state->length += 1;
    5862:	e3 96       	adiw	r28, 0x33	; 51
    5864:	ee ad       	ldd	r30, Y+62	; 0x3e
    5866:	ff ad       	ldd	r31, Y+63	; 0x3f
    5868:	e3 97       	sbiw	r28, 0x33	; 51
    586a:	80 a1       	ldd	r24, Z+32	; 0x20
    586c:	91 a1       	ldd	r25, Z+33	; 0x21
    586e:	a2 a1       	ldd	r26, Z+34	; 0x22
    5870:	b3 a1       	ldd	r27, Z+35	; 0x23
    5872:	01 96       	adiw	r24, 0x01	; 1
    5874:	a1 1d       	adc	r26, r1
    5876:	b1 1d       	adc	r27, r1
    5878:	80 a3       	std	Z+32, r24	; 0x20
    587a:	91 a3       	std	Z+33, r25	; 0x21
    587c:	a2 a3       	std	Z+34, r26	; 0x22
    587e:	b3 a3       	std	Z+35, r27	; 0x23
}
    5880:	ce 58       	subi	r28, 0x8E	; 142
    5882:	df 4f       	sbci	r29, 0xFF	; 255
    5884:	0f b6       	in	r0, 0x3f	; 63
    5886:	f8 94       	cli
    5888:	de bf       	out	0x3e, r29	; 62
    588a:	0f be       	out	0x3f, r0	; 63
    588c:	cd bf       	out	0x3d, r28	; 61
    588e:	df 91       	pop	r29
    5890:	cf 91       	pop	r28
    5892:	1f 91       	pop	r17
    5894:	0f 91       	pop	r16
    5896:	ff 90       	pop	r15
    5898:	ef 90       	pop	r14
    589a:	df 90       	pop	r13
    589c:	cf 90       	pop	r12
    589e:	bf 90       	pop	r11
    58a0:	af 90       	pop	r10
    58a2:	9f 90       	pop	r9
    58a4:	8f 90       	pop	r8
    58a6:	7f 90       	pop	r7
    58a8:	6f 90       	pop	r6
    58aa:	5f 90       	pop	r5
    58ac:	4f 90       	pop	r4
    58ae:	3f 90       	pop	r3
    58b0:	2f 90       	pop	r2
    58b2:	08 95       	ret

000058b4 <sha2_small_common_lastBlock>:


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
    58b4:	8f 92       	push	r8
    58b6:	9f 92       	push	r9
    58b8:	af 92       	push	r10
    58ba:	bf 92       	push	r11
    58bc:	cf 92       	push	r12
    58be:	df 92       	push	r13
    58c0:	ef 92       	push	r14
    58c2:	ff 92       	push	r15
    58c4:	0f 93       	push	r16
    58c6:	1f 93       	push	r17
    58c8:	cf 93       	push	r28
    58ca:	df 93       	push	r29
    58cc:	cd b7       	in	r28, 0x3d	; 61
    58ce:	de b7       	in	r29, 0x3e	; 62
    58d0:	c8 54       	subi	r28, 0x48	; 72
    58d2:	d1 09       	sbc	r29, r1
    58d4:	0f b6       	in	r0, 0x3f	; 63
    58d6:	f8 94       	cli
    58d8:	de bf       	out	0x3e, r29	; 62
    58da:	0f be       	out	0x3f, r0	; 63
    58dc:	cd bf       	out	0x3d, r28	; 61
    58de:	8c 01       	movw	r16, r24
    58e0:	5b 01       	movw	r10, r22
    58e2:	4a 01       	movw	r8, r20
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    58e4:	6a 01       	movw	r12, r20
    58e6:	41 15       	cp	r20, r1
    58e8:	52 40       	sbci	r21, 0x02	; 2
    58ea:	18 f1       	brcs	.+70     	; 0x5932 <sha2_small_common_lastBlock+0x7e>
    58ec:	7b 01       	movw	r14, r22
		sha2_small_common_nextBlock(state, block);
    58ee:	b7 01       	movw	r22, r14
    58f0:	c8 01       	movw	r24, r16
    58f2:	c9 dc       	rcall	.-1646   	; 0x5286 <sha2_small_common_nextBlock>
		length_b -= 512;
    58f4:	92 e0       	ldi	r25, 0x02	; 2
    58f6:	d9 1a       	sub	r13, r25
		block = (uint8_t*)block+64;
    58f8:	e0 e4       	ldi	r30, 0x40	; 64
    58fa:	ee 0e       	add	r14, r30
    58fc:	f1 1c       	adc	r15, r1


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    58fe:	c1 14       	cp	r12, r1
    5900:	f2 e0       	ldi	r31, 0x02	; 2
    5902:	df 06       	cpc	r13, r31
    5904:	a0 f7       	brcc	.-24     	; 0x58ee <sha2_small_common_lastBlock+0x3a>
    5906:	64 01       	movw	r12, r8
    5908:	81 e0       	ldi	r24, 0x01	; 1
    590a:	d8 22       	and	r13, r24
    590c:	92 e0       	ldi	r25, 0x02	; 2
    590e:	99 1a       	sub	r9, r25
    5910:	89 2c       	mov	r8, r9
    5912:	99 24       	eor	r9, r9
    5914:	86 94       	lsr	r8
    5916:	ef ef       	ldi	r30, 0xFF	; 255
    5918:	8e 1a       	sub	r8, r30
    591a:	9e 0a       	sbc	r9, r30
    591c:	00 24       	eor	r0, r0
    591e:	96 94       	lsr	r9
    5920:	87 94       	ror	r8
    5922:	07 94       	ror	r0
    5924:	96 94       	lsr	r9
    5926:	87 94       	ror	r8
    5928:	07 94       	ror	r0
    592a:	98 2c       	mov	r9, r8
    592c:	80 2c       	mov	r8, r0
    592e:	a8 0c       	add	r10, r8
    5930:	b9 1c       	adc	r11, r9
		sha2_small_common_nextBlock(state, block);
		length_b -= 512;
		block = (uint8_t*)block+64;
	}
	len = state->length*512 + length_b;
    5932:	f8 01       	movw	r30, r16
    5934:	80 a1       	ldd	r24, Z+32	; 0x20
    5936:	91 a1       	ldd	r25, Z+33	; 0x21
    5938:	a2 a1       	ldd	r26, Z+34	; 0x22
    593a:	b3 a1       	ldd	r27, Z+35	; 0x23
    593c:	29 e0       	ldi	r18, 0x09	; 9
    593e:	88 0f       	add	r24, r24
    5940:	99 1f       	adc	r25, r25
    5942:	aa 1f       	adc	r26, r26
    5944:	bb 1f       	adc	r27, r27
    5946:	2a 95       	dec	r18
    5948:	d1 f7       	brne	.-12     	; 0x593e <sha2_small_common_lastBlock+0x8a>
    594a:	8c 0d       	add	r24, r12
    594c:	9d 1d       	adc	r25, r13
    594e:	a1 1d       	adc	r26, r1
    5950:	b1 1d       	adc	r27, r1
    5952:	9c 01       	movw	r18, r24
    5954:	ad 01       	movw	r20, r26
    5956:	22 96       	adiw	r28, 0x02	; 2
    5958:	8f af       	std	Y+63, r24	; 0x3f
    595a:	22 97       	sbiw	r28, 0x02	; 2
    595c:	23 96       	adiw	r28, 0x03	; 3
    595e:	3f af       	std	Y+63, r19	; 0x3f
    5960:	23 97       	sbiw	r28, 0x03	; 3
    5962:	24 96       	adiw	r28, 0x04	; 4
    5964:	4f af       	std	Y+63, r20	; 0x3f
    5966:	24 97       	sbiw	r28, 0x04	; 4
    5968:	25 96       	adiw	r28, 0x05	; 5
    596a:	5f af       	std	Y+63, r21	; 0x3f
    596c:	25 97       	sbiw	r28, 0x05	; 5
    596e:	26 96       	adiw	r28, 0x06	; 6
    5970:	1f ae       	std	Y+63, r1	; 0x3f
    5972:	26 97       	sbiw	r28, 0x06	; 6
    5974:	27 96       	adiw	r28, 0x07	; 7
    5976:	1f ae       	std	Y+63, r1	; 0x3f
    5978:	27 97       	sbiw	r28, 0x07	; 7
    597a:	28 96       	adiw	r28, 0x08	; 8
    597c:	1f ae       	std	Y+63, r1	; 0x3f
    597e:	28 97       	sbiw	r28, 0x08	; 8
    5980:	29 96       	adiw	r28, 0x09	; 9
    5982:	1f ae       	std	Y+63, r1	; 0x3f
    5984:	29 97       	sbiw	r28, 0x09	; 9
	memset(lb, 0, 64);
    5986:	30 e4       	ldi	r19, 0x40	; 64
    5988:	93 2e       	mov	r9, r19
    598a:	ce 01       	movw	r24, r28
    598c:	01 96       	adiw	r24, 0x01	; 1
    598e:	7c 01       	movw	r14, r24
    5990:	fc 01       	movw	r30, r24
    5992:	89 2d       	mov	r24, r9
    5994:	11 92       	st	Z+, r1
    5996:	8a 95       	dec	r24
    5998:	e9 f7       	brne	.-6      	; 0x5994 <sha2_small_common_lastBlock+0xe0>
	memcpy(lb, block, (length_b+7)/8);
    599a:	a6 01       	movw	r20, r12
    599c:	49 5f       	subi	r20, 0xF9	; 249
    599e:	5f 4f       	sbci	r21, 0xFF	; 255
    59a0:	56 95       	lsr	r21
    59a2:	47 95       	ror	r20
    59a4:	56 95       	lsr	r21
    59a6:	47 95       	ror	r20
    59a8:	56 95       	lsr	r21
    59aa:	47 95       	ror	r20
    59ac:	b5 01       	movw	r22, r10
    59ae:	c7 01       	movw	r24, r14
    59b0:	d5 d1       	rcall	.+938    	; 0x5d5c <memcpy>

	/* set the final one bit */
	lb[length_b/8] |= 0x80>>(length_b & 0x7);
    59b2:	f6 01       	movw	r30, r12
    59b4:	f6 95       	lsr	r31
    59b6:	e7 95       	ror	r30
    59b8:	f6 95       	lsr	r31
    59ba:	e7 95       	ror	r30
    59bc:	f6 95       	lsr	r31
    59be:	e7 95       	ror	r30
    59c0:	ee 0d       	add	r30, r14
    59c2:	ff 1d       	adc	r31, r15
    59c4:	96 01       	movw	r18, r12
    59c6:	27 70       	andi	r18, 0x07	; 7
    59c8:	33 27       	eor	r19, r19
    59ca:	80 e8       	ldi	r24, 0x80	; 128
    59cc:	90 e0       	ldi	r25, 0x00	; 0
    59ce:	02 c0       	rjmp	.+4      	; 0x59d4 <sha2_small_common_lastBlock+0x120>
    59d0:	95 95       	asr	r25
    59d2:	87 95       	ror	r24
    59d4:	2a 95       	dec	r18
    59d6:	e2 f7       	brpl	.-8      	; 0x59d0 <sha2_small_common_lastBlock+0x11c>
    59d8:	90 81       	ld	r25, Z
    59da:	89 2b       	or	r24, r25
    59dc:	80 83       	st	Z, r24
	/* pad with zeros */
	if (length_b>=512-64){ /* not enouth space for 64bit length value */
    59de:	90 ec       	ldi	r25, 0xC0	; 192
    59e0:	c9 16       	cp	r12, r25
    59e2:	91 e0       	ldi	r25, 0x01	; 1
    59e4:	d9 06       	cpc	r13, r25
    59e6:	58 f5       	brcc	.+86     	; 0x5a3e <sha2_small_common_lastBlock+0x18a>


void sha2_small_common_lastBlock(sha2_small_common_ctx_t *state, const void *block, uint16_t length_b){
	uint8_t lb[512/8]; /* local block */
	uint64_t len;
	while(length_b>=512){
    59e8:	27 e0       	ldi	r18, 0x07	; 7
#if defined LITTLE_ENDIAN
	 	/* this is now rolled up */
	uint8_t i;
	i=7;
	do{
		lb[63-i] = ((uint8_t*)&len)[i];
    59ea:	4f e3       	ldi	r20, 0x3F	; 63
    59ec:	50 e0       	ldi	r21, 0x00	; 0
    59ee:	82 2f       	mov	r24, r18
    59f0:	90 e0       	ldi	r25, 0x00	; 0
    59f2:	fa 01       	movw	r30, r20
    59f4:	e8 1b       	sub	r30, r24
    59f6:	f9 0b       	sbc	r31, r25
    59f8:	ee 0d       	add	r30, r14
    59fa:	ff 1d       	adc	r31, r15
    59fc:	a1 e4       	ldi	r26, 0x41	; 65
    59fe:	b0 e0       	ldi	r27, 0x00	; 0
    5a00:	ac 0f       	add	r26, r28
    5a02:	bd 1f       	adc	r27, r29
    5a04:	a8 0f       	add	r26, r24
    5a06:	b9 1f       	adc	r27, r25
    5a08:	8c 91       	ld	r24, X
    5a0a:	80 83       	st	Z, r24
	}while(i--);
    5a0c:	21 50       	subi	r18, 0x01	; 1
    5a0e:	78 f7       	brcc	.-34     	; 0x59ee <sha2_small_common_lastBlock+0x13a>
#elif defined BIG_ENDIAN
	*((uint64_t)&(lb[56])) = len;
#endif
	sha2_small_common_nextBlock(state, lb);
    5a10:	b7 01       	movw	r22, r14
    5a12:	c8 01       	movw	r24, r16
    5a14:	38 dc       	rcall	.-1936   	; 0x5286 <sha2_small_common_nextBlock>
}
    5a16:	c8 5b       	subi	r28, 0xB8	; 184
    5a18:	df 4f       	sbci	r29, 0xFF	; 255
    5a1a:	0f b6       	in	r0, 0x3f	; 63
    5a1c:	f8 94       	cli
    5a1e:	de bf       	out	0x3e, r29	; 62
    5a20:	0f be       	out	0x3f, r0	; 63
    5a22:	cd bf       	out	0x3d, r28	; 61
    5a24:	df 91       	pop	r29
    5a26:	cf 91       	pop	r28
    5a28:	1f 91       	pop	r17
    5a2a:	0f 91       	pop	r16
    5a2c:	ff 90       	pop	r15
    5a2e:	ef 90       	pop	r14
    5a30:	df 90       	pop	r13
    5a32:	cf 90       	pop	r12
    5a34:	bf 90       	pop	r11
    5a36:	af 90       	pop	r10
    5a38:	9f 90       	pop	r9
    5a3a:	8f 90       	pop	r8

	/* set the final one bit */
	lb[length_b/8] |= 0x80>>(length_b & 0x7);
	/* pad with zeros */
	if (length_b>=512-64){ /* not enouth space for 64bit length value */
		sha2_small_common_nextBlock(state, lb);
    5a3c:	08 95       	ret
    5a3e:	b7 01       	movw	r22, r14
    5a40:	c8 01       	movw	r24, r16
    5a42:	21 dc       	rcall	.-1982   	; 0x5286 <sha2_small_common_nextBlock>
		memset(lb, 0, 64);
    5a44:	f7 01       	movw	r30, r14
    5a46:	11 92       	st	Z+, r1
    5a48:	9a 94       	dec	r9
    5a4a:	e9 f7       	brne	.-6      	; 0x5a46 <sha2_small_common_lastBlock+0x192>
    5a4c:	cd cf       	rjmp	.-102    	; 0x59e8 <sha2_small_common_lastBlock+0x134>

00005a4e <sha512>:
		s += 8;
	}while(--i);
}


void sha512(void *dest, const void *msg, uint32_t length_b){
    5a4e:	2f 92       	push	r2
    5a50:	3f 92       	push	r3
    5a52:	4f 92       	push	r4
    5a54:	5f 92       	push	r5
    5a56:	6f 92       	push	r6
    5a58:	7f 92       	push	r7
    5a5a:	8f 92       	push	r8
    5a5c:	9f 92       	push	r9
    5a5e:	af 92       	push	r10
    5a60:	bf 92       	push	r11
    5a62:	cf 92       	push	r12
    5a64:	df 92       	push	r13
    5a66:	ef 92       	push	r14
    5a68:	ff 92       	push	r15
    5a6a:	0f 93       	push	r16
    5a6c:	1f 93       	push	r17
    5a6e:	cf 93       	push	r28
    5a70:	df 93       	push	r29
    5a72:	cd b7       	in	r28, 0x3d	; 61
    5a74:	de b7       	in	r29, 0x3e	; 62
    5a76:	c4 54       	subi	r28, 0x44	; 68
    5a78:	d1 09       	sbc	r29, r1
    5a7a:	0f b6       	in	r0, 0x3f	; 63
    5a7c:	f8 94       	cli
    5a7e:	de bf       	out	0x3e, r29	; 62
    5a80:	0f be       	out	0x3f, r0	; 63
    5a82:	cd bf       	out	0x3d, r28	; 61
    5a84:	4c 01       	movw	r8, r24
    5a86:	1b 01       	movw	r2, r22
    5a88:	29 01       	movw	r4, r18
    5a8a:	3a 01       	movw	r6, r20
0x510e527fade682d1LL, 0x9b05688c2b3e6c1fLL, 0x1f83d9abfb41bd6bLL, 0x5be0cd19137e2179LL
};


void sha512_init(sha512_ctx_t *ctx){
	ctx->length = 0;
    5a8c:	5e 01       	movw	r10, r28
    5a8e:	81 e4       	ldi	r24, 0x41	; 65
    5a90:	a8 0e       	add	r10, r24
    5a92:	b1 1c       	adc	r11, r1
    5a94:	f5 01       	movw	r30, r10
    5a96:	10 82       	st	Z, r1
    5a98:	11 82       	std	Z+1, r1	; 0x01
    5a9a:	12 82       	std	Z+2, r1	; 0x02
    5a9c:	13 82       	std	Z+3, r1	; 0x03
	memcpy_P(ctx->h, sha512_init_values, 8*8);
    5a9e:	40 e4       	ldi	r20, 0x40	; 64
    5aa0:	50 e0       	ldi	r21, 0x00	; 0
    5aa2:	64 e3       	ldi	r22, 0x34	; 52
    5aa4:	74 e0       	ldi	r23, 0x04	; 4
    5aa6:	ce 01       	movw	r24, r28
    5aa8:	01 96       	adiw	r24, 0x01	; 1
    5aaa:	4f d1       	rcall	.+670    	; 0x5d4a <memcpy_P>


void sha512(void *dest, const void *msg, uint32_t length_b){
	sha512_ctx_t ctx;
	sha512_init(&ctx);
	while(length_b >= 1024){
    5aac:	41 14       	cp	r4, r1
    5aae:	f4 e0       	ldi	r31, 0x04	; 4
    5ab0:	5f 06       	cpc	r5, r31
    5ab2:	61 04       	cpc	r6, r1
    5ab4:	71 04       	cpc	r7, r1
    5ab6:	60 f1       	brcs	.+88     	; 0x5b10 <sha512+0xc2>
    5ab8:	73 01       	movw	r14, r6
    5aba:	62 01       	movw	r12, r4
    5abc:	81 01       	movw	r16, r2
#include "sha2_large_common.h"
#include "sha512.h"


void sha512_nextBlock (sha512_ctx_t *ctx, const void *block){
	sha2_large_common_nextBlock(ctx, block);
    5abe:	b8 01       	movw	r22, r16
    5ac0:	ce 01       	movw	r24, r28
    5ac2:	01 96       	adiw	r24, 0x01	; 1
    5ac4:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <sha2_large_common_nextBlock>
void sha512(void *dest, const void *msg, uint32_t length_b){
	sha512_ctx_t ctx;
	sha512_init(&ctx);
	while(length_b >= 1024){
		sha512_nextBlock(&ctx, msg);
		msg = (uint8_t*)msg + 1024/8;
    5ac8:	00 58       	subi	r16, 0x80	; 128
    5aca:	1f 4f       	sbci	r17, 0xFF	; 255
		length_b -= 1024;
    5acc:	84 e0       	ldi	r24, 0x04	; 4
    5ace:	d8 1a       	sub	r13, r24
    5ad0:	e1 08       	sbc	r14, r1
    5ad2:	f1 08       	sbc	r15, r1


void sha512(void *dest, const void *msg, uint32_t length_b){
	sha512_ctx_t ctx;
	sha512_init(&ctx);
	while(length_b >= 1024){
    5ad4:	c1 14       	cp	r12, r1
    5ad6:	e4 e0       	ldi	r30, 0x04	; 4
    5ad8:	de 06       	cpc	r13, r30
    5ada:	e1 04       	cpc	r14, r1
    5adc:	f1 04       	cpc	r15, r1
    5ade:	78 f7       	brcc	.-34     	; 0x5abe <sha512+0x70>
    5ae0:	d3 01       	movw	r26, r6
    5ae2:	c2 01       	movw	r24, r4
    5ae4:	94 50       	subi	r25, 0x04	; 4
    5ae6:	a1 09       	sbc	r26, r1
    5ae8:	b1 09       	sbc	r27, r1
    5aea:	2a e0       	ldi	r18, 0x0A	; 10
    5aec:	b6 95       	lsr	r27
    5aee:	a7 95       	ror	r26
    5af0:	97 95       	ror	r25
    5af2:	87 95       	ror	r24
    5af4:	2a 95       	dec	r18
    5af6:	d1 f7       	brne	.-12     	; 0x5aec <sha512+0x9e>
    5af8:	01 96       	adiw	r24, 0x01	; 1
    5afa:	96 95       	lsr	r25
    5afc:	98 2f       	mov	r25, r24
    5afe:	88 27       	eor	r24, r24
    5b00:	97 95       	ror	r25
    5b02:	87 95       	ror	r24
    5b04:	28 0e       	add	r2, r24
    5b06:	39 1e       	adc	r3, r25
    5b08:	f3 e0       	ldi	r31, 0x03	; 3
    5b0a:	5f 22       	and	r5, r31
    5b0c:	66 24       	eor	r6, r6
    5b0e:	77 24       	eor	r7, r7
void sha512_nextBlock (sha512_ctx_t *ctx, const void *block){
	sha2_large_common_nextBlock(ctx, block);
}

void sha512_lastBlock(sha512_ctx_t *ctx, const void *block, uint16_t length_b){
	sha2_large_common_lastBlock(ctx, block, length_b);
    5b10:	a2 01       	movw	r20, r4
    5b12:	b1 01       	movw	r22, r2
    5b14:	ce 01       	movw	r24, r28
    5b16:	01 96       	adiw	r24, 0x01	; 1
    5b18:	27 da       	rcall	.-2994   	; 0x4f68 <sha2_large_common_lastBlock>
	ctx->length = 0;
	memcpy_P(ctx->h, sha512_init_values, 8*8);
}

void sha512_ctx2hash(void *dest, const sha512_ctx_t *ctx){
	uint8_t i=8, j, *s = (uint8_t*)(ctx->h);
    5b1a:	9e 01       	movw	r18, r28
    5b1c:	2f 5f       	subi	r18, 0xFF	; 255
    5b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    5b20:	f4 01       	movw	r30, r8
	do{
		j=7;
    5b22:	87 e0       	ldi	r24, 0x07	; 7
		do{
			*((uint8_t*)dest) = s[j];
    5b24:	d9 01       	movw	r26, r18
    5b26:	a8 0f       	add	r26, r24
    5b28:	b1 1d       	adc	r27, r1
    5b2a:	9c 91       	ld	r25, X
    5b2c:	91 93       	st	Z+, r25
			dest = (uint8_t*)dest + 1;
		}while(j--);
    5b2e:	81 50       	subi	r24, 0x01	; 1
    5b30:	c8 f7       	brcc	.-14     	; 0x5b24 <sha512+0xd6>
    5b32:	88 e0       	ldi	r24, 0x08	; 8
    5b34:	88 0e       	add	r8, r24
    5b36:	91 1c       	adc	r9, r1
		s += 8;
    5b38:	28 5f       	subi	r18, 0xF8	; 248
    5b3a:	3f 4f       	sbci	r19, 0xFF	; 255
	}while(--i);
    5b3c:	2a 15       	cp	r18, r10
    5b3e:	3b 05       	cpc	r19, r11
    5b40:	79 f7       	brne	.-34     	; 0x5b20 <sha512+0xd2>
		msg = (uint8_t*)msg + 1024/8;
		length_b -= 1024;
	}
	sha512_lastBlock(&ctx, msg, length_b);
	sha512_ctx2hash(dest, &ctx);
}
    5b42:	cc 5b       	subi	r28, 0xBC	; 188
    5b44:	df 4f       	sbci	r29, 0xFF	; 255
    5b46:	0f b6       	in	r0, 0x3f	; 63
    5b48:	f8 94       	cli
    5b4a:	de bf       	out	0x3e, r29	; 62
    5b4c:	0f be       	out	0x3f, r0	; 63
    5b4e:	cd bf       	out	0x3d, r28	; 61
    5b50:	df 91       	pop	r29
    5b52:	cf 91       	pop	r28
    5b54:	1f 91       	pop	r17
    5b56:	0f 91       	pop	r16
    5b58:	ff 90       	pop	r15
    5b5a:	ef 90       	pop	r14
    5b5c:	df 90       	pop	r13
    5b5e:	cf 90       	pop	r12
    5b60:	bf 90       	pop	r11
    5b62:	af 90       	pop	r10
    5b64:	9f 90       	pop	r9
    5b66:	8f 90       	pop	r8
    5b68:	7f 90       	pop	r7
    5b6a:	6f 90       	pop	r6
    5b6c:	5f 90       	pop	r5
    5b6e:	4f 90       	pop	r4
    5b70:	3f 90       	pop	r3
    5b72:	2f 90       	pop	r2
    5b74:	08 95       	ret

00005b76 <uart_init>:

#include <avr/io.h>
#include "uart_f.h"

void uart_init(){
	UBRR0H = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
    5b76:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = BAUD_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    5b7a:	83 e3       	ldi	r24, 0x33	; 51
    5b7c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0C = (0<<UMSEL0) | (0<<UPM0) | (1<<USBS0) | (3<<UCSZ0);
    5b80:	8e e0       	ldi	r24, 0x0E	; 14
    5b82:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
    5b86:	88 e1       	ldi	r24, 0x18	; 24
    5b88:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    5b8c:	08 95       	ret

00005b8e <uart_puts>:
}

void uart_puts(char* s){
	int i;
	int len = strlen(s);
    5b8e:	fc 01       	movw	r30, r24
    5b90:	01 90       	ld	r0, Z+
    5b92:	00 20       	and	r0, r0
    5b94:	e9 f7       	brne	.-6      	; 0x5b90 <uart_puts+0x2>
    5b96:	31 97       	sbiw	r30, 0x01	; 1
    5b98:	9f 01       	movw	r18, r30
    5b9a:	28 1b       	sub	r18, r24
    5b9c:	39 0b       	sbc	r19, r25
	for (i = 0; i < len; i++){
    5b9e:	12 16       	cp	r1, r18
    5ba0:	13 06       	cpc	r1, r19
    5ba2:	6c f4       	brge	.+26     	; 0x5bbe <uart_puts+0x30>
    5ba4:	fc 01       	movw	r30, r24
    5ba6:	28 0f       	add	r18, r24
    5ba8:	39 1f       	adc	r19, r25
		while(!( UCSR0A & 0X20));
    5baa:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    5bae:	95 ff       	sbrs	r25, 5
    5bb0:	fc cf       	rjmp	.-8      	; 0x5baa <uart_puts+0x1c>
		UDR0=s[i];
    5bb2:	81 91       	ld	r24, Z+
    5bb4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}

void uart_puts(char* s){
	int i;
	int len = strlen(s);
	for (i = 0; i < len; i++){
    5bb8:	e2 17       	cp	r30, r18
    5bba:	f3 07       	cpc	r31, r19
    5bbc:	b1 f7       	brne	.-20     	; 0x5baa <uart_puts+0x1c>
		while(!( UCSR0A & 0X20));
		UDR0=s[i];
	}
	while(!( UCSR0A & 0X20)); 
    5bbe:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    5bc2:	85 ff       	sbrs	r24, 5
    5bc4:	fc cf       	rjmp	.-8      	; 0x5bbe <uart_puts+0x30>
	UDR0 = 13;
    5bc6:	8d e0       	ldi	r24, 0x0D	; 13
    5bc8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(!( UCSR0A & 0X20));
    5bcc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    5bd0:	85 ff       	sbrs	r24, 5
    5bd2:	fc cf       	rjmp	.-8      	; 0x5bcc <uart_puts+0x3e>
	UDR0 = 10;
    5bd4:	8a e0       	ldi	r24, 0x0A	; 10
    5bd6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    5bda:	08 95       	ret

00005bdc <__bswapsi2>:
    5bdc:	69 27       	eor	r22, r25
    5bde:	96 27       	eor	r25, r22
    5be0:	69 27       	eor	r22, r25
    5be2:	78 27       	eor	r23, r24
    5be4:	87 27       	eor	r24, r23
    5be6:	78 27       	eor	r23, r24
    5be8:	08 95       	ret

00005bea <__ashldi3>:
    5bea:	0f 93       	push	r16
    5bec:	08 30       	cpi	r16, 0x08	; 8
    5bee:	90 f0       	brcs	.+36     	; 0x5c14 <__ashldi3+0x2a>
    5bf0:	98 2f       	mov	r25, r24
    5bf2:	87 2f       	mov	r24, r23
    5bf4:	76 2f       	mov	r23, r22
    5bf6:	65 2f       	mov	r22, r21
    5bf8:	54 2f       	mov	r21, r20
    5bfa:	43 2f       	mov	r20, r19
    5bfc:	32 2f       	mov	r19, r18
    5bfe:	22 27       	eor	r18, r18
    5c00:	08 50       	subi	r16, 0x08	; 8
    5c02:	f4 cf       	rjmp	.-24     	; 0x5bec <__ashldi3+0x2>
    5c04:	22 0f       	add	r18, r18
    5c06:	33 1f       	adc	r19, r19
    5c08:	44 1f       	adc	r20, r20
    5c0a:	55 1f       	adc	r21, r21
    5c0c:	66 1f       	adc	r22, r22
    5c0e:	77 1f       	adc	r23, r23
    5c10:	88 1f       	adc	r24, r24
    5c12:	99 1f       	adc	r25, r25
    5c14:	0a 95       	dec	r16
    5c16:	b2 f7       	brpl	.-20     	; 0x5c04 <__ashldi3+0x1a>
    5c18:	0f 91       	pop	r16
    5c1a:	08 95       	ret

00005c1c <__ashrdi3>:
    5c1c:	97 fb       	bst	r25, 7
    5c1e:	10 f8       	bld	r1, 0

00005c20 <__lshrdi3>:
    5c20:	16 94       	lsr	r1
    5c22:	00 08       	sbc	r0, r0
    5c24:	0f 93       	push	r16
    5c26:	08 30       	cpi	r16, 0x08	; 8
    5c28:	98 f0       	brcs	.+38     	; 0x5c50 <__lshrdi3+0x30>
    5c2a:	08 50       	subi	r16, 0x08	; 8
    5c2c:	23 2f       	mov	r18, r19
    5c2e:	34 2f       	mov	r19, r20
    5c30:	45 2f       	mov	r20, r21
    5c32:	56 2f       	mov	r21, r22
    5c34:	67 2f       	mov	r22, r23
    5c36:	78 2f       	mov	r23, r24
    5c38:	89 2f       	mov	r24, r25
    5c3a:	90 2d       	mov	r25, r0
    5c3c:	f4 cf       	rjmp	.-24     	; 0x5c26 <__lshrdi3+0x6>
    5c3e:	05 94       	asr	r0
    5c40:	97 95       	ror	r25
    5c42:	87 95       	ror	r24
    5c44:	77 95       	ror	r23
    5c46:	67 95       	ror	r22
    5c48:	57 95       	ror	r21
    5c4a:	47 95       	ror	r20
    5c4c:	37 95       	ror	r19
    5c4e:	27 95       	ror	r18
    5c50:	0a 95       	dec	r16
    5c52:	aa f7       	brpl	.-22     	; 0x5c3e <__lshrdi3+0x1e>
    5c54:	0f 91       	pop	r16
    5c56:	08 95       	ret

00005c58 <__rotldi3>:
    5c58:	0f 93       	push	r16
    5c5a:	08 30       	cpi	r16, 0x08	; 8
    5c5c:	a0 f0       	brcs	.+40     	; 0x5c86 <__rotldi3+0x2e>
    5c5e:	08 50       	subi	r16, 0x08	; 8
    5c60:	09 2e       	mov	r0, r25
    5c62:	98 2f       	mov	r25, r24
    5c64:	87 2f       	mov	r24, r23
    5c66:	76 2f       	mov	r23, r22
    5c68:	65 2f       	mov	r22, r21
    5c6a:	54 2f       	mov	r21, r20
    5c6c:	43 2f       	mov	r20, r19
    5c6e:	32 2f       	mov	r19, r18
    5c70:	20 2d       	mov	r18, r0
    5c72:	f3 cf       	rjmp	.-26     	; 0x5c5a <__rotldi3+0x2>
    5c74:	22 0f       	add	r18, r18
    5c76:	33 1f       	adc	r19, r19
    5c78:	44 1f       	adc	r20, r20
    5c7a:	55 1f       	adc	r21, r21
    5c7c:	66 1f       	adc	r22, r22
    5c7e:	77 1f       	adc	r23, r23
    5c80:	88 1f       	adc	r24, r24
    5c82:	99 1f       	adc	r25, r25
    5c84:	21 1d       	adc	r18, r1
    5c86:	0a 95       	dec	r16
    5c88:	aa f7       	brpl	.-22     	; 0x5c74 <__rotldi3+0x1c>
    5c8a:	0f 91       	pop	r16
    5c8c:	08 95       	ret

00005c8e <__adddi3>:
    5c8e:	2a 0d       	add	r18, r10
    5c90:	3b 1d       	adc	r19, r11
    5c92:	4c 1d       	adc	r20, r12
    5c94:	5d 1d       	adc	r21, r13
    5c96:	6e 1d       	adc	r22, r14
    5c98:	7f 1d       	adc	r23, r15
    5c9a:	80 1f       	adc	r24, r16
    5c9c:	91 1f       	adc	r25, r17
    5c9e:	08 95       	ret

00005ca0 <do_rand>:
    5ca0:	8f 92       	push	r8
    5ca2:	9f 92       	push	r9
    5ca4:	af 92       	push	r10
    5ca6:	bf 92       	push	r11
    5ca8:	cf 92       	push	r12
    5caa:	df 92       	push	r13
    5cac:	ef 92       	push	r14
    5cae:	ff 92       	push	r15
    5cb0:	cf 93       	push	r28
    5cb2:	df 93       	push	r29
    5cb4:	ec 01       	movw	r28, r24
    5cb6:	68 81       	ld	r22, Y
    5cb8:	79 81       	ldd	r23, Y+1	; 0x01
    5cba:	8a 81       	ldd	r24, Y+2	; 0x02
    5cbc:	9b 81       	ldd	r25, Y+3	; 0x03
    5cbe:	61 15       	cp	r22, r1
    5cc0:	71 05       	cpc	r23, r1
    5cc2:	81 05       	cpc	r24, r1
    5cc4:	91 05       	cpc	r25, r1
    5cc6:	21 f4       	brne	.+8      	; 0x5cd0 <do_rand+0x30>
    5cc8:	64 e2       	ldi	r22, 0x24	; 36
    5cca:	79 ed       	ldi	r23, 0xD9	; 217
    5ccc:	8b e5       	ldi	r24, 0x5B	; 91
    5cce:	97 e0       	ldi	r25, 0x07	; 7
    5cd0:	2d e1       	ldi	r18, 0x1D	; 29
    5cd2:	33 ef       	ldi	r19, 0xF3	; 243
    5cd4:	41 e0       	ldi	r20, 0x01	; 1
    5cd6:	50 e0       	ldi	r21, 0x00	; 0
    5cd8:	62 d0       	rcall	.+196    	; 0x5d9e <__divmodsi4>
    5cda:	49 01       	movw	r8, r18
    5cdc:	5a 01       	movw	r10, r20
    5cde:	9b 01       	movw	r18, r22
    5ce0:	ac 01       	movw	r20, r24
    5ce2:	a7 ea       	ldi	r26, 0xA7	; 167
    5ce4:	b1 e4       	ldi	r27, 0x41	; 65
    5ce6:	77 d0       	rcall	.+238    	; 0x5dd6 <__muluhisi3>
    5ce8:	6b 01       	movw	r12, r22
    5cea:	7c 01       	movw	r14, r24
    5cec:	ac ee       	ldi	r26, 0xEC	; 236
    5cee:	b4 ef       	ldi	r27, 0xF4	; 244
    5cf0:	a5 01       	movw	r20, r10
    5cf2:	94 01       	movw	r18, r8
    5cf4:	7c d0       	rcall	.+248    	; 0x5dee <__mulohisi3>
    5cf6:	dc 01       	movw	r26, r24
    5cf8:	cb 01       	movw	r24, r22
    5cfa:	8c 0d       	add	r24, r12
    5cfc:	9d 1d       	adc	r25, r13
    5cfe:	ae 1d       	adc	r26, r14
    5d00:	bf 1d       	adc	r27, r15
    5d02:	b7 ff       	sbrs	r27, 7
    5d04:	03 c0       	rjmp	.+6      	; 0x5d0c <do_rand+0x6c>
    5d06:	01 97       	sbiw	r24, 0x01	; 1
    5d08:	a1 09       	sbc	r26, r1
    5d0a:	b0 48       	sbci	r27, 0x80	; 128
    5d0c:	88 83       	st	Y, r24
    5d0e:	99 83       	std	Y+1, r25	; 0x01
    5d10:	aa 83       	std	Y+2, r26	; 0x02
    5d12:	bb 83       	std	Y+3, r27	; 0x03
    5d14:	9f 77       	andi	r25, 0x7F	; 127
    5d16:	df 91       	pop	r29
    5d18:	cf 91       	pop	r28
    5d1a:	ff 90       	pop	r15
    5d1c:	ef 90       	pop	r14
    5d1e:	df 90       	pop	r13
    5d20:	cf 90       	pop	r12
    5d22:	bf 90       	pop	r11
    5d24:	af 90       	pop	r10
    5d26:	9f 90       	pop	r9
    5d28:	8f 90       	pop	r8
    5d2a:	08 95       	ret

00005d2c <rand_r>:
    5d2c:	b9 cf       	rjmp	.-142    	; 0x5ca0 <do_rand>

00005d2e <rand>:
    5d2e:	80 e0       	ldi	r24, 0x00	; 0
    5d30:	91 e0       	ldi	r25, 0x01	; 1
    5d32:	b6 cf       	rjmp	.-148    	; 0x5ca0 <do_rand>

00005d34 <srand>:
    5d34:	a0 e0       	ldi	r26, 0x00	; 0
    5d36:	b0 e0       	ldi	r27, 0x00	; 0
    5d38:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    5d3c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    5d40:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    5d44:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    5d48:	08 95       	ret

00005d4a <memcpy_P>:
    5d4a:	fb 01       	movw	r30, r22
    5d4c:	dc 01       	movw	r26, r24
    5d4e:	02 c0       	rjmp	.+4      	; 0x5d54 <memcpy_P+0xa>
    5d50:	05 90       	lpm	r0, Z+
    5d52:	0d 92       	st	X+, r0
    5d54:	41 50       	subi	r20, 0x01	; 1
    5d56:	50 40       	sbci	r21, 0x00	; 0
    5d58:	d8 f7       	brcc	.-10     	; 0x5d50 <memcpy_P+0x6>
    5d5a:	08 95       	ret

00005d5c <memcpy>:
    5d5c:	fb 01       	movw	r30, r22
    5d5e:	dc 01       	movw	r26, r24
    5d60:	02 c0       	rjmp	.+4      	; 0x5d66 <memcpy+0xa>
    5d62:	01 90       	ld	r0, Z+
    5d64:	0d 92       	st	X+, r0
    5d66:	41 50       	subi	r20, 0x01	; 1
    5d68:	50 40       	sbci	r21, 0x00	; 0
    5d6a:	d8 f7       	brcc	.-10     	; 0x5d62 <memcpy+0x6>
    5d6c:	08 95       	ret

00005d6e <memmove>:
    5d6e:	68 17       	cp	r22, r24
    5d70:	79 07       	cpc	r23, r25
    5d72:	68 f4       	brcc	.+26     	; 0x5d8e <memmove+0x20>
    5d74:	fb 01       	movw	r30, r22
    5d76:	dc 01       	movw	r26, r24
    5d78:	e4 0f       	add	r30, r20
    5d7a:	f5 1f       	adc	r31, r21
    5d7c:	a4 0f       	add	r26, r20
    5d7e:	b5 1f       	adc	r27, r21
    5d80:	02 c0       	rjmp	.+4      	; 0x5d86 <memmove+0x18>
    5d82:	02 90       	ld	r0, -Z
    5d84:	0e 92       	st	-X, r0
    5d86:	41 50       	subi	r20, 0x01	; 1
    5d88:	50 40       	sbci	r21, 0x00	; 0
    5d8a:	d8 f7       	brcc	.-10     	; 0x5d82 <memmove+0x14>
    5d8c:	08 95       	ret
    5d8e:	e6 cf       	rjmp	.-52     	; 0x5d5c <memcpy>

00005d90 <memset>:
    5d90:	dc 01       	movw	r26, r24
    5d92:	01 c0       	rjmp	.+2      	; 0x5d96 <memset+0x6>
    5d94:	6d 93       	st	X+, r22
    5d96:	41 50       	subi	r20, 0x01	; 1
    5d98:	50 40       	sbci	r21, 0x00	; 0
    5d9a:	e0 f7       	brcc	.-8      	; 0x5d94 <memset+0x4>
    5d9c:	08 95       	ret

00005d9e <__divmodsi4>:
    5d9e:	05 2e       	mov	r0, r21
    5da0:	97 fb       	bst	r25, 7
    5da2:	16 f4       	brtc	.+4      	; 0x5da8 <__divmodsi4+0xa>
    5da4:	00 94       	com	r0
    5da6:	0f d0       	rcall	.+30     	; 0x5dc6 <__negsi2>
    5da8:	57 fd       	sbrc	r21, 7
    5daa:	05 d0       	rcall	.+10     	; 0x5db6 <__divmodsi4_neg2>
    5dac:	24 d0       	rcall	.+72     	; 0x5df6 <__udivmodsi4>
    5dae:	07 fc       	sbrc	r0, 7
    5db0:	02 d0       	rcall	.+4      	; 0x5db6 <__divmodsi4_neg2>
    5db2:	46 f4       	brtc	.+16     	; 0x5dc4 <__divmodsi4_exit>
    5db4:	08 c0       	rjmp	.+16     	; 0x5dc6 <__negsi2>

00005db6 <__divmodsi4_neg2>:
    5db6:	50 95       	com	r21
    5db8:	40 95       	com	r20
    5dba:	30 95       	com	r19
    5dbc:	21 95       	neg	r18
    5dbe:	3f 4f       	sbci	r19, 0xFF	; 255
    5dc0:	4f 4f       	sbci	r20, 0xFF	; 255
    5dc2:	5f 4f       	sbci	r21, 0xFF	; 255

00005dc4 <__divmodsi4_exit>:
    5dc4:	08 95       	ret

00005dc6 <__negsi2>:
    5dc6:	90 95       	com	r25
    5dc8:	80 95       	com	r24
    5dca:	70 95       	com	r23
    5dcc:	61 95       	neg	r22
    5dce:	7f 4f       	sbci	r23, 0xFF	; 255
    5dd0:	8f 4f       	sbci	r24, 0xFF	; 255
    5dd2:	9f 4f       	sbci	r25, 0xFF	; 255
    5dd4:	08 95       	ret

00005dd6 <__muluhisi3>:
    5dd6:	31 d0       	rcall	.+98     	; 0x5e3a <__umulhisi3>
    5dd8:	a5 9f       	mul	r26, r21
    5dda:	90 0d       	add	r25, r0
    5ddc:	b4 9f       	mul	r27, r20
    5dde:	90 0d       	add	r25, r0
    5de0:	a4 9f       	mul	r26, r20
    5de2:	80 0d       	add	r24, r0
    5de4:	91 1d       	adc	r25, r1
    5de6:	11 24       	eor	r1, r1
    5de8:	08 95       	ret

00005dea <__mulshisi3>:
    5dea:	b7 ff       	sbrs	r27, 7
    5dec:	f4 cf       	rjmp	.-24     	; 0x5dd6 <__muluhisi3>

00005dee <__mulohisi3>:
    5dee:	f3 df       	rcall	.-26     	; 0x5dd6 <__muluhisi3>
    5df0:	82 1b       	sub	r24, r18
    5df2:	93 0b       	sbc	r25, r19
    5df4:	08 95       	ret

00005df6 <__udivmodsi4>:
    5df6:	a1 e2       	ldi	r26, 0x21	; 33
    5df8:	1a 2e       	mov	r1, r26
    5dfa:	aa 1b       	sub	r26, r26
    5dfc:	bb 1b       	sub	r27, r27
    5dfe:	fd 01       	movw	r30, r26
    5e00:	0d c0       	rjmp	.+26     	; 0x5e1c <__udivmodsi4_ep>

00005e02 <__udivmodsi4_loop>:
    5e02:	aa 1f       	adc	r26, r26
    5e04:	bb 1f       	adc	r27, r27
    5e06:	ee 1f       	adc	r30, r30
    5e08:	ff 1f       	adc	r31, r31
    5e0a:	a2 17       	cp	r26, r18
    5e0c:	b3 07       	cpc	r27, r19
    5e0e:	e4 07       	cpc	r30, r20
    5e10:	f5 07       	cpc	r31, r21
    5e12:	20 f0       	brcs	.+8      	; 0x5e1c <__udivmodsi4_ep>
    5e14:	a2 1b       	sub	r26, r18
    5e16:	b3 0b       	sbc	r27, r19
    5e18:	e4 0b       	sbc	r30, r20
    5e1a:	f5 0b       	sbc	r31, r21

00005e1c <__udivmodsi4_ep>:
    5e1c:	66 1f       	adc	r22, r22
    5e1e:	77 1f       	adc	r23, r23
    5e20:	88 1f       	adc	r24, r24
    5e22:	99 1f       	adc	r25, r25
    5e24:	1a 94       	dec	r1
    5e26:	69 f7       	brne	.-38     	; 0x5e02 <__udivmodsi4_loop>
    5e28:	60 95       	com	r22
    5e2a:	70 95       	com	r23
    5e2c:	80 95       	com	r24
    5e2e:	90 95       	com	r25
    5e30:	9b 01       	movw	r18, r22
    5e32:	ac 01       	movw	r20, r24
    5e34:	bd 01       	movw	r22, r26
    5e36:	cf 01       	movw	r24, r30
    5e38:	08 95       	ret

00005e3a <__umulhisi3>:
    5e3a:	a2 9f       	mul	r26, r18
    5e3c:	b0 01       	movw	r22, r0
    5e3e:	b3 9f       	mul	r27, r19
    5e40:	c0 01       	movw	r24, r0
    5e42:	a3 9f       	mul	r26, r19
    5e44:	70 0d       	add	r23, r0
    5e46:	81 1d       	adc	r24, r1
    5e48:	11 24       	eor	r1, r1
    5e4a:	91 1d       	adc	r25, r1
    5e4c:	b2 9f       	mul	r27, r18
    5e4e:	70 0d       	add	r23, r0
    5e50:	81 1d       	adc	r24, r1
    5e52:	11 24       	eor	r1, r1
    5e54:	91 1d       	adc	r25, r1
    5e56:	08 95       	ret

00005e58 <_exit>:
    5e58:	f8 94       	cli

00005e5a <__stop_program>:
    5e5a:	ff cf       	rjmp	.-2      	; 0x5e5a <__stop_program>
